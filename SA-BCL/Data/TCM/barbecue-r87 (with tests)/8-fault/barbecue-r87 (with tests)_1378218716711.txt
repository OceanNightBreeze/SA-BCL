#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 215 
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 215 
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 35 221 37 34 73 204 159 143 179 95 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.IllegalArgumentException 35 221 37 34 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle; | RETURN | 3104 | return null
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color; | RETURN | 6680 | return null
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String; | CONDITION | 5805 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7029 | if (x) -> if (!x)
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 15344 | 3 -> 2
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I | OPERATOR | 4179 | == -> <
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 45 1 110 1 42 1 99 1 
176 1 56 2 86 1 
74 1 45 1 18 1 110 1 42 1 99 1 
92 1 209 1 58 1 89 1 
190 2 92 1 156 1 94 1 209 1 7 1 149 1 195 2 160 2 65 1 137 1 89 1 
190 3 45 2 92 1 156 1 75 2 47 1 110 1 94 1 34 1 209 1 51 1 49 1 227 1 195 1 160 1 114 1 196 1 231 1 233 1 137 1 
190 3 45 2 92 1 156 1 75 2 47 1 110 1 94 1 34 1 209 1 51 1 49 1 227 1 195 1 160 1 114 1 231 1 233 1 137 1 
190 2 45 1 92 1 156 1 17 1 75 1 110 1 94 1 34 1 209 1 195 1 160 1 196 1 137 1 199 1 27 1 89 1 
190 2 45 1 92 1 156 1 75 1 110 1 94 1 34 1 209 1 195 1 160 1 196 1 198 1 137 1 199 1 27 1 89 1 
30 1 190 2 45 1 92 1 156 1 75 1 126 1 110 1 94 1 34 1 209 1 195 1 160 1 215 1 137 1 199 1 27 1 89 1 
30 1 190 2 45 1 92 1 156 1 75 1 126 1 110 1 94 1 34 1 209 1 195 1 160 1 196 1 215 1 137 1 199 1 27 1 89 1 
190 3 92 1 156 1 94 2 209 1 195 2 160 1 81 1 137 1 89 1 
190 3 92 1 156 1 94 2 209 1 193 1 131 1 160 1 89 1 43 2 
190 2 156 1 92 1 94 1 209 1 193 1 211 1 89 1 160 2 43 1 
190 2 92 1 156 1 94 1 209 1 193 1 160 1 140 1 89 1 43 1 
190 2 156 1 92 1 46 1 94 1 209 1 193 1 89 1 160 1 43 1 
190 3 16 1 45 1 92 1 156 1 75 1 94 1 209 1 51 4 79 1 193 1 160 1 231 1 136 1 83 1 28 1 89 1 43 1 
190 2 206 1 92 1 156 1 94 1 209 1 193 1 160 1 85 1 89 1 43 1 
190 2 92 1 156 2 94 3 209 1 193 1 160 2 81 1 89 1 43 1 
190 4 45 1 92 1 156 2 75 1 60 1 94 2 209 1 51 1 193 1 160 1 231 1 28 1 89 1 171 1 43 2 
190 3 45 1 92 1 156 1 75 1 47 1 94 1 209 1 51 1 49 1 227 1 193 1 160 1 114 1 231 1 28 1 89 1 43 1 
190 3 45 1 92 1 156 1 75 1 94 1 209 1 51 2 193 1 160 1 231 1 203 1 28 1 89 1 171 1 43 1 
177 1 88 1 80 3 
80 1 
109 1 39 1 95 1 122 1 179 1 
172 2 44 1 173 1 108 2 45 2 109 4 110 1 175 1 111 1 51 2 178 2 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 191 3 5 1 61 1 128 2 193 1 132 1 131 1 8 14 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 144 1 207 1 14 4 73 1 209 1 147 1 77 2 210 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 168 1 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 144 1 207 1 14 4 73 1 209 1 147 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 96 2 97 4 159 1 37 2 160 3 229 1 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 168 1 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 19 1 209 1 147 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 168 1 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 147 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 168 1 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 3 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 2 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 164 1 103 1 167 2 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 4 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 3 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 2 12 1 205 1 207 1 144 1 14 4 73 1 209 1 147 1 77 2 149 1 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 4 99 2 100 2 161 1 162 2 231 1 39 1 164 1 103 1 167 2 168 1 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 3 122 4 124 3 190 4 59 2 5 1 60 1 128 2 193 1 131 1 8 4 9 3 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 149 1 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 4 34 1 95 1 96 2 97 4 159 1 37 2 160 5 99 2 100 2 161 1 162 2 231 1 39 1 164 1 103 1 167 2 170 1 171 1 43 2 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 164 1 103 1 167 2 170 1 171 1 43 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 103 1 167 2 170 1 171 1 43 1 
38 1 
172 2 44 1 108 2 45 2 174 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 125 2 190 3 59 2 5 1 127 2 128 2 8 4 195 1 9 2 66 2 68 4 135 3 137 1 139 2 140 2 11 2 69 1 70 2 143 1 204 1 203 1 12 1 144 1 207 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 220 2 221 2 90 2 155 1 91 1 223 1 94 2 34 1 95 1 35 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 233 1 39 1 103 1 167 2 170 1 171 1 
172 2 44 1 108 2 45 2 109 4 110 1 111 1 51 2 178 2 113 1 179 1 116 2 181 4 182 2 184 6 121 2 57 2 188 2 122 4 124 2 190 3 59 2 5 1 128 2 193 1 131 1 8 4 9 2 66 2 68 4 135 3 139 2 140 2 69 1 142 1 70 2 143 1 204 1 203 1 12 1 205 1 207 1 144 1 14 4 73 1 209 1 77 2 81 1 212 2 23 2 214 4 213 1 24 4 25 2 153 3 26 2 28 1 220 2 90 2 155 1 223 1 94 2 34 1 95 1 96 2 97 4 159 1 37 2 160 3 99 2 100 2 161 1 162 2 231 1 39 1 164 1 41 1 103 1 167 2 170 1 171 1 43 1 
61 1 21 1 8 1 
45 1 76 1 153 1 184 1 110 1 8 1 
101 1 45 1 184 1 110 1 199 1 27 1 8 1 
45 1 222 1 126 1 110 1 192 1 8 1 101 1 67 1 153 1 184 1 199 1 27 1 
197 1 8 1 
197 1 8 1 
226 1 8 1 
4 1 8 1 
197 1 8 1 
4 1 8 1 
4 1 8 1 
72 1 93 1 169 1 8 1 
189 1 8 1 107 1 
190 2 94 1 209 1 158 1 193 1 8 2 151 1 160 1 2 2 115 1 197 1 214 2 3 1 105 1 13 1 170 1 43 1 
118 1 
190 2 94 1 209 1 158 1 193 1 151 1 160 1 115 1 3 1 105 1 58 1 170 1 43 1 
190 2 9 1 94 1 137 1 209 1 69 1 188 1 170 1 160 1 124 1 195 1 
190 3 94 1 209 1 195 2 160 1 9 2 54 1 137 1 69 1 188 2 170 1 124 2 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 154 2 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 167 1 70 1 170 1 
190 2 94 1 209 1 195 1 160 1 9 1 54 1 137 1 69 1 188 1 218 1 170 1 124 1 
190 3 9 2 94 1 54 1 137 1 209 1 69 1 188 2 170 1 160 1 124 2 195 2 
172 2 44 1 108 2 45 2 174 2 110 1 111 1 51 1 178 2 116 2 181 4 182 2 184 6 121 2 188 1 57 2 124 1 125 2 190 3 59 2 127 2 128 2 8 4 195 1 9 1 66 2 135 3 68 4 137 1 139 2 140 2 11 2 69 1 70 2 203 1 14 4 209 1 77 2 149 1 212 2 23 2 24 4 214 4 25 2 153 3 26 2 220 2 221 2 90 2 91 1 223 1 94 1 34 1 35 1 96 2 97 4 37 2 160 2 99 2 100 2 162 2 231 1 233 1 167 2 170 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 154 2 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 154 2 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 226 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 
172 1 108 1 209 1 77 1 112 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 180 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 
108 1 45 1 110 1 111 1 50 1 178 1 116 1 181 2 182 1 54 1 184 2 121 1 188 2 57 1 124 2 190 3 59 1 60 1 126 3 61 3 192 2 128 1 194 1 8 3 195 2 9 2 133 1 67 2 66 1 198 1 68 2 199 1 137 1 139 1 140 1 69 1 142 1 70 1 12 1 209 1 77 1 149 1 23 1 214 2 25 1 153 2 26 1 84 1 27 1 220 1 30 2 222 2 94 2 224 1 34 1 96 1 97 2 37 1 160 4 100 1 162 1 167 1 170 1 
108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 44 1 108 1 45 1 174 1 51 1 178 1 116 1 181 2 182 1 184 3 121 1 188 1 57 1 124 1 125 1 190 3 59 1 127 1 128 1 8 2 195 1 9 1 66 1 135 3 68 2 137 1 139 1 140 1 11 1 69 1 70 1 203 1 14 2 209 1 77 1 212 1 23 1 24 2 214 2 25 1 26 1 220 1 221 1 90 1 91 1 223 1 94 1 96 1 97 2 37 1 160 1 99 1 100 1 231 1 162 1 233 1 167 1 170 1 
190 2 127 1 94 1 209 1 195 1 160 1 9 1 54 1 137 1 69 1 188 1 170 1 124 1 
172 1 44 1 108 1 45 1 174 1 51 1 50 1 178 1 116 1 181 2 180 1 182 1 184 3 121 1 57 1 125 1 190 1 59 1 127 1 128 1 129 1 131 1 8 2 66 2 135 3 68 2 139 1 140 1 11 1 70 1 203 1 14 2 77 1 152 1 212 1 23 1 24 2 214 2 25 1 26 1 28 1 220 1 221 1 90 1 91 1 223 1 96 1 97 2 37 1 99 1 100 1 231 1 162 1 167 1 106 1 
172 1 44 1 108 1 45 1 174 1 51 1 112 1 178 1 116 1 181 2 182 1 184 3 121 1 188 1 57 1 124 1 125 1 190 3 59 1 127 1 128 1 8 2 195 1 9 1 66 1 135 3 68 2 137 1 139 1 140 1 11 1 69 1 70 1 203 1 14 2 209 1 77 1 212 1 23 1 24 2 214 2 25 1 26 1 220 1 221 1 90 1 91 1 223 1 94 1 96 1 97 2 37 1 160 1 99 1 100 1 162 1 231 1 233 1 167 1 170 1 
172 1 44 1 108 1 45 1 174 1 51 1 112 1 178 1 116 1 181 2 182 1 184 3 121 1 188 1 57 1 124 1 125 1 190 3 59 1 127 1 128 1 193 1 131 1 8 2 9 1 66 1 135 3 68 2 139 1 140 1 11 1 69 1 70 1 203 1 14 2 209 1 77 1 212 1 23 1 24 2 214 2 25 1 26 1 28 1 220 1 221 1 90 1 91 1 223 1 94 1 96 1 97 2 37 1 160 1 99 1 100 1 162 1 231 1 167 1 170 1 43 1 
108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 181 2 214 2 25 1 182 1 54 1 26 1 121 1 57 1 188 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 162 1 66 2 68 2 137 1 69 1 167 1 70 1 170 1 106 1 
108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 214 2 181 2 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
14 1 90 1 24 1 53 1 8 1 
14 1 212 1 24 1 53 1 8 1 
14 1 90 1 24 1 102 1 119 1 8 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 45 1 110 1 50 1 111 1 178 1 116 1 180 1 181 2 182 1 54 1 184 3 121 1 57 1 188 1 124 1 190 2 59 1 126 4 192 3 128 1 129 1 8 2 195 1 9 1 67 3 66 2 68 2 199 1 137 1 139 1 140 1 69 1 142 1 70 1 12 1 14 2 209 1 77 1 152 1 212 1 23 1 24 2 214 2 25 1 153 3 26 1 27 1 220 1 90 1 30 1 222 3 94 1 34 1 96 1 97 2 37 1 160 2 99 1 100 1 101 1 162 1 167 1 170 1 106 1 
172 1 108 1 209 1 77 1 112 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
172 1 108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 214 3 181 3 182 1 25 1 26 1 54 1 154 2 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 154 2 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
108 1 209 1 50 1 77 1 178 1 152 1 116 1 23 1 180 1 214 3 181 3 182 1 25 1 26 1 54 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 129 1 97 2 160 1 195 1 9 1 197 1 162 1 66 2 68 2 137 1 69 1 70 1 167 1 170 1 106 1 
108 1 209 1 77 1 178 1 116 1 23 1 181 3 214 3 182 1 25 1 26 1 121 1 188 1 57 1 220 1 124 1 190 2 59 1 94 1 128 1 96 1 97 2 160 1 195 1 9 1 197 1 162 1 66 1 68 2 137 1 69 1 167 1 70 1 170 1 
45 1 17 1 47 1 110 1 209 1 51 1 49 1 111 1 20 1 114 1 153 2 184 2 3 1 120 1 27 1 190 2 30 1 222 2 126 3 94 1 192 2 34 1 61 3 62 1 225 1 227 1 228 1 37 1 8 4 160 2 195 1 100 1 67 2 139 1 137 1 199 1 141 1 140 1 142 1 12 1 170 1 
206 1 45 1 174 1 110 1 209 1 111 1 52 1 20 1 153 2 184 2 3 1 120 1 85 1 27 1 125 1 221 1 190 2 30 1 222 2 126 3 94 1 192 2 61 3 62 1 63 1 35 1 225 1 228 1 37 1 8 4 160 1 195 1 100 1 67 2 199 1 137 1 139 1 141 1 140 1 201 1 11 1 166 1 142 1 170 1 
14 1 108 1 209 1 77 1 24 1 53 1 25 1 183 1 121 1 187 1 57 1 188 1 29 1 219 1 220 1 124 1 190 2 33 1 94 1 128 1 97 1 8 1 160 1 195 1 9 1 197 1 66 1 68 1 137 1 69 1 70 1 170 1 
172 1 108 3 209 1 112 1 77 3 178 1 116 1 23 1 214 2 181 2 182 1 25 3 183 2 26 1 56 1 121 3 57 3 188 1 29 1 219 1 220 3 124 1 190 2 59 1 94 1 128 3 96 1 97 4 160 1 195 1 9 1 162 1 66 3 68 4 137 1 69 1 167 1 70 3 170 1 
108 1 209 1 77 1 25 1 183 1 121 1 57 1 188 1 29 1 219 1 220 1 124 1 190 2 94 1 128 1 97 1 160 1 195 1 9 1 66 1 68 1 137 1 69 1 70 1 170 1 
108 3 209 1 77 3 25 3 183 3 186 1 121 3 57 3 188 1 29 1 219 1 220 3 124 1 190 2 94 1 128 3 97 3 160 1 195 1 9 1 66 3 68 3 137 1 69 1 70 3 170 1 
108 1 46 1 209 1 77 1 25 1 183 1 121 1 57 1 188 1 29 1 219 1 220 1 124 1 190 2 94 1 128 1 97 1 160 1 195 1 9 1 66 1 68 1 137 1 69 1 70 1 170 1 
190 2 46 1 94 1 209 1 160 1 195 1 9 1 183 1 137 1 69 1 188 1 170 1 29 1 124 1 
15 1 190 1 200 1 78 1 
190 1 78 1 64 1 
190 1 7 1 150 2 130 1 
190 1 145 1 148 1 7 1 130 1 
232 1 78 1 
30 1 222 1 126 1 192 1 101 1 67 1 153 1 
30 1 67 1 222 1 126 1 153 1 192 1 
125 1 45 1 174 1 110 1 138 1 35 1 11 1 
45 1 110 1 111 1 142 1 
68 1 70 1 
214 1 181 1 68 2 55 1 56 1 178 1 70 1 
197 1 214 1 181 1 68 1 178 1 8 1 
68 1 70 1 
197 1 214 1 181 1 8 1 
193 1 
43 1 
43 1 
195 1 
137 1 
195 1 
146 1 197 1 61 2 8 2 
10 1 197 1 61 2 8 2 
190 2 46 1 31 1 6 1 94 1 209 1 193 1 160 1 230 1 82 1 3 1 185 1 217 1 170 1 43 1 
190 4 31 2 6 2 94 2 209 2 193 2 160 2 230 2 82 2 3 2 185 2 217 2 104 1 235 1 170 2 43 2 
190 2 31 1 6 1 94 1 209 1 1 2 193 1 8 1 160 1 230 1 197 1 214 2 82 1 3 1 185 1 217 1 202 1 170 1 107 1 43 1 
123 1 
44 1 146 1 45 1 174 1 209 1 1 1 51 1 149 1 117 1 214 1 82 1 184 2 3 1 217 1 185 1 123 1 28 1 125 1 221 1 190 3 91 1 31 1 223 1 6 1 94 1 61 2 193 1 8 2 37 1 160 2 100 1 230 1 10 1 231 1 135 2 139 1 140 1 11 1 104 1 202 1 203 1 170 1 43 1 
209 1 185 1 234 1 58 1 170 1 
72 1 146 1 45 1 110 1 209 1 1 1 111 1 149 1 214 1 82 1 153 3 184 2 3 1 217 1 185 1 27 1 123 1 30 1 190 2 31 1 222 3 6 1 126 4 94 1 192 3 34 1 61 2 193 1 8 3 37 1 160 3 100 1 230 1 10 1 101 1 67 3 139 1 199 1 140 1 142 1 202 1 170 1 12 1 107 1 43 1 
190 2 31 1 6 1 94 1 209 1 193 1 160 1 230 1 82 1 3 1 185 1 217 1 104 1 170 1 43 1 
190 2 31 1 6 1 94 1 209 1 1 1 193 1 8 3 160 1 230 1 197 1 214 1 82 1 3 1 185 1 217 1 202 1 170 1 107 2 43 1 
190 2 31 1 6 1 94 1 209 1 193 1 160 1 230 1 82 1 3 1 185 1 217 1 235 1 170 1 43 1 
190 4 31 2 6 2 94 2 209 2 193 2 160 2 230 2 82 2 3 2 185 2 217 2 234 1 235 1 58 1 170 2 43 2 
190 2 31 1 6 1 94 1 209 1 193 1 160 1 230 1 82 1 3 1 185 1 217 1 234 1 58 1 170 1 43 1 
190 2 0 1 208 2 157 1 93 1 94 1 48 1 209 1 193 1 8 2 160 1 22 1 197 1 214 2 40 1 3 1 71 1 170 1 107 1 43 1 
72 1 0 1 208 1 45 1 110 1 209 1 48 1 111 1 149 1 22 1 214 1 153 2 184 1 3 1 27 1 87 1 30 1 190 2 157 1 222 2 126 3 94 1 192 2 34 1 193 1 36 1 8 1 37 1 160 3 101 1 67 2 40 1 199 1 140 1 142 1 165 1 71 1 170 1 12 1 107 1 43 1 
14 1 0 1 208 1 209 1 48 1 176 1 22 1 214 1 24 1 3 1 216 1 56 1 189 1 190 2 157 2 94 1 193 1 8 2 160 1 163 1 165 1 71 1 170 1 43 1 107 1 
165 1 
14 1 72 2 44 1 0 1 208 2 45 1 174 1 209 1 48 1 51 1 149 1 22 1 24 1 214 2 3 1 184 2 216 1 87 1 28 1 125 1 221 1 190 3 91 1 157 2 32 1 223 1 94 1 193 1 36 1 8 3 37 1 99 1 160 2 163 1 231 1 40 1 135 4 140 1 11 1 165 1 71 1 203 1 170 1 107 2 43 1 
0 1 157 1 48 1 71 1 58 1 22 1 
0 1 45 1 110 1 48 1 111 1 3 1 184 2 190 2 126 5 192 4 193 1 8 3 67 4 199 1 140 1 142 1 71 1 12 1 72 2 14 1 208 2 209 1 149 1 22 1 214 2 24 1 153 4 216 1 87 1 27 1 30 1 157 2 222 4 94 1 34 1 36 1 37 1 160 3 99 1 101 1 163 1 40 1 165 1 170 1 43 1 107 2 
0 1 157 1 48 1 71 1 58 1 22 1 
0 1 208 2 209 1 22 1 214 2 3 1 190 2 157 1 32 1 93 1 94 1 193 1 98 1 8 2 160 1 197 1 134 1 40 1 170 1 43 1 107 1 
197 1 36 1 
197 1 87 1 
14 1 190 2 0 1 208 1 157 2 94 1 48 1 209 1 193 1 8 2 160 1 22 1 24 1 214 1 163 1 3 1 216 1 165 1 71 1 170 1 107 1 43 1 
208 1 214 1 163 1 157 1 216 1 56 1 

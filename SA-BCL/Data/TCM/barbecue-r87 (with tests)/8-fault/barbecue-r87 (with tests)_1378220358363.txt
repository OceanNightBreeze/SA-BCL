#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 121 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 24 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.ArithmeticException 63 131 17 48 102 205 216 70 40 204 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.ArithmeticException 63 219 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.ArithmeticException 63 219 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V ERROR java.lang.ArithmeticException 63 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V FAILED junit.framework.AssertionFailedError 164 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V FAILED junit.framework.AssertionFailedError 9 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V ERROR java.lang.ArithmeticException 63 131 17 48 100 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V ERROR java.lang.ArithmeticException 63 219 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 9 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V ERROR java.lang.ArithmeticException 63 219 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V ERROR java.lang.ArithmeticException 63 131 17 48 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V ERROR java.lang.ArithmeticException 63 219 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I | OPERATOR | 4206 | += -> *=
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V | CONDITION | 11067 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | CONDITION | 6003 | if (x) -> if (!x)
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | OPERATOR | 1587 | - -> %
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:init()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V | CONDITION | 6731 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 28096 | stmt -> ;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V | CONDITION | 3746 | if (x) -> if (!x)
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 8145 | stmt -> ;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 217 1 0 1 150 1 229 1 59 1 
87 1 217 1 0 1 150 1 59 1 
190 2 103 1 168 1 
151 1 10 1 218 1 91 2 186 1 223 1 194 2 231 1 176 1 163 1 232 1 
0 1 151 1 218 1 101 1 91 1 221 1 186 1 157 1 170 1 131 1 133 1 194 3 230 1 17 4 231 1 176 1 163 1 232 1 
151 1 218 1 91 1 194 2 231 1 176 1 186 1 206 1 163 1 234 1 232 1 
0 1 166 1 151 1 218 1 91 1 1 1 221 1 186 1 143 1 131 1 194 3 230 1 71 1 17 1 231 1 176 1 163 1 232 1 
0 1 151 1 218 1 91 1 221 1 186 1 160 1 131 1 194 3 230 1 17 2 231 1 176 1 163 1 232 1 48 1 
25 1 151 1 218 1 176 1 
182 1 151 1 218 1 91 1 186 1 194 2 30 1 231 1 176 1 163 2 232 1 
20 1 150 1 0 2 166 1 151 1 218 1 91 1 219 1 1 1 221 2 186 1 143 1 131 1 194 3 230 1 71 1 17 1 231 1 163 1 232 1 
150 1 0 2 166 1 151 1 218 1 91 1 219 1 1 1 221 2 186 1 143 1 131 1 194 3 230 1 71 1 17 1 231 1 163 1 232 1 
20 1 0 1 150 1 151 1 218 1 91 1 37 1 219 1 39 1 221 1 186 1 189 1 194 2 231 1 176 1 163 1 232 1 
20 1 0 1 150 1 151 1 218 1 91 1 37 1 219 1 221 1 186 1 64 1 189 1 194 2 231 1 176 1 163 1 232 1 
0 1 150 1 151 1 218 1 91 1 37 1 219 1 12 1 221 1 186 1 189 1 68 1 194 2 231 1 18 1 176 1 163 1 232 1 
20 1 0 1 150 1 151 1 218 1 91 1 37 1 219 1 12 1 221 1 186 1 189 1 68 1 194 2 231 1 18 1 176 1 163 1 232 1 
151 1 218 1 91 2 186 1 194 3 231 1 176 1 85 1 163 1 232 2 
151 1 218 1 186 1 194 3 148 2 29 1 176 1 163 1 138 1 232 2 
151 1 218 1 194 2 29 1 148 1 46 1 176 1 186 1 163 2 232 1 
151 1 218 1 186 1 84 1 194 2 148 1 29 1 176 1 163 1 232 1 
151 1 218 1 186 2 194 2 148 1 29 1 176 1 85 1 163 2 232 3 
0 1 151 1 218 1 221 1 186 2 111 1 226 1 160 1 131 1 194 4 148 2 29 1 17 1 176 1 163 1 232 2 
110 1 54 1 119 3 
119 1 
0 1 102 1 167 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 171 2 117 1 7 3 118 1 178 3 123 1 61 2 184 3 63 1 126 1 127 3 128 2 192 1 131 1 15 2 132 1 194 3 69 2 70 1 17 1 197 1 199 1 138 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 141 1 204 1 205 1 79 2 81 1 82 2 144 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 12 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 222 1 95 1 158 1 94 1 159 1 228 1 162 1 47 1 98 2 163 3 48 1 99 1 165 4 232 2 
0 1 102 1 105 2 106 1 3 2 169 2 111 1 172 1 175 1 118 1 178 4 120 2 123 1 11 1 62 2 124 2 63 1 14 2 131 1 194 3 132 1 195 1 70 1 17 1 135 1 198 1 138 1 199 1 139 1 201 1 74 1 202 1 204 1 205 1 82 1 207 1 144 1 209 1 84 1 145 4 148 1 29 1 85 1 149 1 31 5 87 1 216 1 89 1 218 1 153 1 40 1 154 1 155 1 94 1 163 3 233 1 99 1 165 4 232 2 48 1 
0 1 102 1 52 1 105 2 55 1 3 3 109 1 111 1 112 1 57 1 171 1 114 1 173 1 6 1 118 1 178 3 61 2 123 1 184 2 63 1 127 2 66 1 128 1 15 1 131 1 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 19 1 202 1 75 1 76 2 140 2 21 1 77 1 204 1 205 1 79 1 80 1 81 1 82 2 144 1 83 1 26 1 211 1 145 4 84 1 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 218 1 90 1 36 1 153 2 40 1 41 1 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 3 232 2 99 1 165 4 48 1 
0 1 102 1 167 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 113 1 171 2 6 1 117 1 118 1 178 3 182 1 123 1 61 2 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 204 1 142 1 205 1 79 2 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 4 48 1 99 1 165 4 232 2 
0 1 102 1 167 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 113 1 171 2 6 1 117 1 118 1 178 3 182 1 123 1 61 3 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 4 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 3 21 1 77 1 204 1 205 1 79 2 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 2 29 1 214 3 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 95 1 158 1 94 1 226 1 162 1 47 1 163 5 48 1 99 1 165 4 232 3 
0 1 102 1 167 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 113 1 171 2 6 1 117 1 118 1 178 3 123 1 61 2 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 204 1 205 1 79 2 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 3 48 1 99 1 165 4 232 2 
201 1 202 1 123 1 204 1 40 1 144 1 145 4 118 1 149 1 99 1 165 4 138 1 
96 1 
0 1 102 1 52 1 105 2 2 1 55 1 3 3 109 1 112 1 57 1 171 1 114 1 173 1 6 1 118 1 178 3 61 2 123 1 184 2 63 1 65 1 127 2 66 1 128 1 67 1 15 1 131 1 194 3 132 1 69 2 70 1 17 1 137 1 197 1 199 1 201 1 19 1 202 1 75 1 76 2 140 2 21 1 77 1 204 1 205 1 79 1 80 1 81 1 82 2 144 1 83 1 26 1 211 1 145 4 84 1 213 1 214 2 85 1 149 1 31 2 87 1 216 1 88 1 218 1 90 1 36 1 91 1 153 2 40 1 41 1 154 1 155 1 95 1 158 1 94 1 43 1 162 1 230 1 231 1 47 1 163 3 232 2 99 1 165 4 48 1 
201 1 145 1 204 1 40 1 165 1 
0 1 167 1 102 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 113 1 171 2 6 1 117 1 118 1 178 3 123 1 61 2 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 204 1 205 1 79 2 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 3 48 1 165 4 232 2 
0 1 167 1 102 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 113 1 171 2 6 1 117 1 118 1 178 3 121 1 123 1 61 2 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 205 1 79 2 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 3 48 1 165 4 232 2 
0 1 102 1 167 1 52 2 105 2 3 3 109 1 111 1 57 1 112 2 171 2 6 1 117 1 118 1 178 3 123 1 61 2 184 3 63 1 126 1 127 3 128 2 131 1 15 2 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 75 1 202 1 76 2 140 2 21 1 77 1 204 1 205 1 79 2 24 1 81 1 82 2 144 1 83 1 211 1 84 1 145 4 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 90 1 218 1 36 2 152 1 153 2 40 1 41 2 154 1 155 1 42 1 95 1 158 1 94 1 162 1 47 1 163 3 48 1 99 1 165 4 232 2 
0 1 102 1 52 1 105 2 55 1 3 3 109 1 111 1 112 1 57 1 171 1 114 1 173 1 6 1 118 1 178 3 61 2 123 1 184 2 63 1 127 2 66 1 128 1 15 1 131 1 194 3 132 1 69 2 70 1 17 1 197 1 138 1 199 1 201 1 19 1 202 1 75 1 76 2 140 2 21 1 77 1 204 1 205 1 79 1 80 1 81 1 82 2 144 1 83 1 26 1 211 1 145 4 84 1 213 1 148 1 29 1 214 2 85 1 149 1 31 2 87 1 216 1 218 1 90 1 36 1 153 2 40 1 41 1 154 1 155 1 95 1 158 1 94 1 162 1 47 1 163 3 232 2 99 1 165 4 48 1 
146 1 141 1 31 1 
92 1 31 1 
45 1 31 1 
150 1 0 1 35 1 37 1 3 1 23 1 189 1 5 1 224 1 68 1 86 1 31 1 
5 1 0 1 150 1 37 1 3 1 31 1 189 1 
45 1 31 1 
0 1 150 1 86 1 72 1 3 1 31 1 
49 1 31 1 
45 1 31 1 
92 1 31 1 
92 1 31 1 
115 1 169 1 188 1 31 1 
225 1 124 1 31 1 
32 1 8 1 218 1 105 2 78 2 154 1 14 1 193 1 45 1 194 2 148 1 29 1 97 1 177 1 163 1 31 2 232 1 
187 1 
8 1 218 1 154 1 25 1 14 1 193 1 194 2 148 1 29 1 97 1 177 1 163 1 232 1 
140 1 61 1 218 1 90 1 91 1 194 2 214 1 231 1 154 1 163 1 232 1 
90 1 218 1 61 2 140 2 91 2 154 1 191 1 194 3 214 2 231 1 163 1 232 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
90 1 218 1 61 2 140 2 91 2 154 1 191 1 194 3 214 2 231 1 163 1 232 1 
0 1 52 1 105 2 2 1 3 3 109 1 112 1 57 1 171 1 178 3 182 1 61 1 184 2 63 1 65 1 127 2 128 1 67 1 131 1 15 1 194 3 69 2 17 1 137 1 197 1 75 1 140 1 76 1 21 1 77 1 79 1 81 1 82 2 26 1 211 1 84 1 213 1 214 1 31 2 87 1 88 1 90 1 218 1 36 1 91 1 153 2 154 1 41 1 155 1 158 1 95 1 43 1 162 1 230 1 231 1 47 1 163 2 48 1 232 1 
140 1 76 1 21 1 52 1 105 3 55 1 79 1 109 1 81 1 80 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 129 2 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 129 2 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
60 1 90 1 218 1 61 1 140 1 91 1 154 1 191 1 194 2 214 1 231 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 129 2 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 142 1 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
0 1 52 1 105 2 3 2 4 1 109 1 112 1 57 1 171 1 116 1 182 1 61 2 184 2 63 1 125 1 127 2 189 1 191 1 128 1 15 1 68 2 194 3 69 2 134 1 18 1 197 1 199 1 140 2 76 1 21 1 77 1 141 3 23 2 79 1 81 1 80 1 84 1 213 1 214 2 86 2 31 3 33 1 150 1 90 1 218 1 35 2 36 1 37 1 91 2 219 1 41 1 154 1 95 1 158 1 224 2 226 1 162 1 231 1 47 1 163 4 232 2 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 80 1 112 1 57 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
0 1 52 1 105 2 2 1 3 3 109 1 112 1 57 1 171 1 178 3 61 1 184 2 63 1 65 1 127 2 128 1 67 1 131 1 15 1 194 3 69 2 17 1 137 1 197 1 75 1 140 1 76 1 21 1 77 1 79 1 82 2 81 1 26 1 211 1 84 1 213 1 214 1 31 2 87 1 88 1 90 1 218 1 36 1 91 1 153 2 154 1 41 1 155 1 158 1 95 1 43 1 162 1 230 1 231 1 47 1 163 1 232 1 48 1 
90 1 218 1 61 1 140 1 91 1 154 1 65 1 191 1 194 2 214 1 231 1 163 1 232 1 
0 1 52 1 105 2 2 1 55 1 3 3 109 1 111 1 57 1 112 1 171 1 114 1 178 3 184 2 63 1 65 1 127 2 66 1 128 1 67 1 131 1 15 1 194 1 69 2 17 1 137 1 197 1 138 1 19 1 75 1 76 2 21 1 77 1 79 1 82 2 81 1 80 1 26 1 211 1 84 1 213 1 31 2 87 1 88 1 36 1 153 2 41 1 155 1 158 1 95 1 43 1 162 1 47 1 48 1 
0 1 52 1 105 2 2 1 3 3 109 1 112 1 57 1 171 1 178 3 61 1 184 2 63 1 65 1 127 2 128 1 67 1 131 1 15 1 194 3 69 2 17 1 137 1 197 1 75 1 140 1 76 1 21 1 77 1 142 1 79 1 81 1 82 2 26 1 211 1 84 1 213 1 214 1 31 2 87 1 88 1 90 1 218 1 36 1 91 1 153 2 154 1 41 1 155 1 158 1 95 1 43 1 162 1 230 1 231 1 47 1 163 1 232 1 48 1 
0 1 52 1 105 2 2 1 3 3 109 1 111 1 112 1 57 1 171 1 178 3 61 1 184 2 63 1 65 1 127 2 128 1 67 1 15 1 131 1 194 3 69 2 17 1 137 1 197 1 138 1 75 1 140 1 76 1 21 1 77 1 142 1 79 1 81 1 82 2 26 1 211 1 84 1 213 1 148 1 29 1 214 1 31 2 87 1 88 1 90 1 218 1 36 1 153 2 154 1 41 1 155 1 158 1 95 1 43 1 162 1 47 1 163 1 48 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 2 55 1 79 1 109 1 80 1 81 1 112 1 57 1 171 1 114 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 66 1 95 1 191 1 128 1 15 1 162 1 194 2 69 2 231 1 197 1 47 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 55 1 79 1 109 1 81 1 80 1 112 1 57 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 2 55 1 79 1 109 1 81 1 80 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 128 1 45 1 15 1 162 1 194 2 69 2 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
26 1 153 1 107 1 82 1 31 1 
75 1 153 1 107 1 82 1 31 1 
51 1 26 1 153 1 215 1 82 1 31 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
0 1 52 1 105 2 55 1 3 3 109 1 112 1 57 1 171 1 114 1 116 1 61 1 184 2 63 1 189 1 127 2 66 1 191 1 128 1 15 1 68 3 194 2 69 2 18 1 197 1 199 1 19 1 75 1 140 1 76 2 21 1 77 1 23 3 79 1 80 1 81 1 82 2 26 1 211 1 84 1 213 1 214 1 86 3 31 2 87 1 150 1 90 1 218 1 36 1 35 3 37 1 91 1 219 1 153 2 154 1 41 1 158 1 95 1 224 3 162 1 231 1 47 1 163 2 232 1 
140 1 76 1 21 1 52 1 105 3 142 1 79 1 109 1 81 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
52 1 105 3 55 1 109 1 57 1 112 1 171 1 114 1 61 1 184 2 127 2 66 1 191 1 128 1 15 1 194 2 69 3 197 1 19 1 76 2 140 1 21 1 79 1 80 1 81 1 211 1 213 1 214 1 90 1 218 1 36 1 91 1 154 1 41 1 95 1 45 1 162 1 231 1 47 1 163 1 232 1 49 1 
140 1 76 1 21 1 52 1 105 3 55 1 79 1 109 1 81 1 80 1 112 1 57 1 211 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 129 2 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 49 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 55 1 79 1 109 1 81 1 80 1 112 1 57 1 171 1 114 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 129 2 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
19 1 140 1 76 2 21 1 52 1 105 3 55 1 79 1 109 1 81 1 80 1 112 1 57 1 171 1 114 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 41 1 154 1 127 2 66 1 95 1 191 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
140 1 76 1 21 1 52 1 105 3 79 1 109 1 81 1 112 1 57 1 171 1 213 1 214 1 61 1 218 1 90 1 36 1 184 2 91 1 154 1 41 1 127 2 95 1 128 1 45 1 15 1 162 1 194 2 69 3 231 1 47 1 197 1 163 1 232 1 
166 1 0 1 203 1 77 1 141 3 1 1 23 2 3 2 143 1 58 1 212 1 84 1 116 1 86 2 31 4 150 1 218 1 35 2 37 1 91 1 219 1 63 1 39 1 154 1 156 1 189 1 14 1 158 1 224 2 130 1 227 1 68 3 194 2 71 1 17 1 231 1 18 1 163 2 200 1 199 1 232 1 
0 1 203 1 77 1 141 3 2 1 23 2 3 2 206 1 58 1 28 1 212 1 84 1 116 1 86 2 31 4 88 1 150 1 218 1 35 2 37 1 91 1 63 1 154 1 156 1 189 1 14 1 158 1 43 1 224 2 130 1 68 2 194 2 231 1 18 1 137 1 163 1 234 1 200 1 232 1 
76 3 140 1 21 1 167 1 52 3 105 2 142 1 109 1 79 3 81 1 57 1 112 3 211 1 171 3 213 1 214 1 117 1 90 1 218 1 61 1 36 3 184 4 91 1 41 3 126 2 154 1 127 4 190 1 95 1 128 3 15 3 162 1 194 2 69 2 231 1 47 1 197 1 163 1 232 1 
50 1 76 3 140 1 167 1 52 3 79 3 112 3 171 3 214 1 117 1 90 1 218 1 61 1 36 3 184 3 91 1 41 3 126 3 154 1 127 3 128 3 15 3 194 2 231 1 163 1 232 1 
76 1 140 1 167 1 52 1 79 1 112 1 171 1 214 1 117 1 90 1 218 1 61 1 36 1 184 1 91 1 41 1 126 1 154 1 127 1 128 1 223 1 15 1 194 2 231 1 163 1 232 1 
90 1 218 1 61 1 140 1 91 1 126 1 154 1 223 1 194 2 214 1 117 1 231 1 163 1 232 1 
76 1 140 1 167 1 52 1 107 1 79 1 82 1 112 1 171 1 214 1 117 1 31 1 180 1 90 1 218 1 61 1 36 1 184 1 91 1 152 1 153 1 41 1 126 1 154 1 127 1 128 1 45 1 15 1 194 2 231 1 163 1 232 1 
140 1 61 1 218 1 90 1 76 1 167 1 36 1 91 1 52 1 184 1 154 1 126 1 41 1 79 1 127 1 112 1 128 1 171 1 15 1 194 2 214 1 231 1 117 1 163 1 232 1 
44 1 27 1 194 1 104 1 
10 1 34 1 194 1 22 1 136 1 
194 1 104 1 174 1 
10 1 34 1 16 2 194 1 
104 1 108 1 
224 1 35 1 68 1 18 1 86 1 23 1 
0 1 150 1 227 1 116 1 
5 1 224 1 35 1 68 1 18 1 86 1 23 1 
88 1 0 1 150 1 28 1 185 1 2 1 137 1 
21 1 183 1 105 1 41 1 127 2 190 1 69 1 
41 1 127 1 
45 1 21 1 69 1 105 1 127 1 31 1 
41 1 127 1 
45 1 69 1 105 1 31 1 
29 1 
148 1 
148 1 
91 1 
231 1 
91 1 
181 1 122 1 218 1 38 1 220 1 154 1 14 1 210 1 147 1 194 2 16 1 163 1 232 1 
181 1 122 1 218 1 38 1 220 1 154 1 14 1 223 1 147 1 194 2 16 1 163 1 232 1 
181 1 122 1 218 1 38 1 220 1 154 1 25 1 56 1 14 1 147 1 194 2 16 1 179 1 163 1 31 1 164 1 232 1 
14 1 181 1 122 1 9 1 218 1 147 1 16 1 194 2 38 1 220 1 154 1 163 1 232 1 
181 1 122 1 218 1 38 1 220 1 154 1 14 1 161 1 147 1 194 2 16 1 163 1 232 1 
13 1 
45 1 196 1 141 2 31 2 
208 1 45 1 141 2 31 2 
100 1 0 1 77 1 141 2 2 1 3 1 208 1 210 1 84 1 147 1 178 1 31 2 181 1 88 1 182 1 122 1 218 1 38 1 63 1 220 1 13 1 154 1 155 1 14 1 158 1 43 1 67 1 161 1 131 1 16 1 194 3 230 1 196 1 17 1 137 1 163 2 232 1 48 1 
25 1 9 1 218 1 147 1 154 1 
0 1 77 1 141 2 23 1 3 1 208 1 84 1 147 1 116 1 86 1 31 2 181 1 182 1 150 1 122 1 218 1 35 1 37 1 219 1 38 1 63 1 220 1 13 1 154 1 189 1 14 1 158 1 224 1 161 1 68 1 16 1 194 2 196 1 18 1 163 3 232 1 199 1 
181 1 122 1 218 1 38 1 220 1 154 1 14 1 161 1 147 1 194 2 16 1 163 1 232 1 
14 1 181 1 122 1 218 1 147 1 16 1 194 2 38 1 220 1 154 1 163 1 232 1 164 1 
181 2 9 1 122 2 218 2 38 2 220 2 154 2 14 2 147 2 194 4 16 2 163 2 164 1 232 2 
25 1 172 1 62 1 195 1 175 1 198 1 
74 1 53 1 105 2 115 1 175 1 31 2 120 2 218 1 62 1 124 1 220 1 154 1 93 1 14 1 45 1 16 1 194 2 198 1 163 1 73 1 232 1 
74 1 218 1 62 1 124 1 220 1 105 2 154 1 14 1 45 1 172 1 115 1 194 2 16 1 195 1 175 1 198 1 163 1 120 2 31 2 232 1 
139 1 74 1 0 1 105 1 106 1 23 2 3 1 169 1 172 1 84 1 116 1 175 1 86 2 120 1 31 1 182 1 150 1 218 1 35 2 11 1 37 1 62 1 219 1 124 1 63 1 220 1 154 1 189 1 14 1 224 2 68 2 16 1 194 2 195 1 18 1 198 1 163 3 232 1 199 1 
190 1 207 1 62 1 105 1 135 1 120 1 
45 1 11 1 
45 1 106 1 
139 1 105 1 82 1 207 1 172 1 175 1 31 2 120 1 218 1 62 2 153 1 124 1 220 1 154 1 14 1 16 1 194 2 195 1 135 1 198 1 163 1 232 1 
139 1 105 1 168 1 82 1 207 1 172 1 175 1 31 2 120 1 218 1 62 2 153 1 124 1 220 1 154 1 14 1 190 1 225 1 16 1 194 2 195 1 135 1 198 1 163 1 232 1 
139 1 
139 1 74 1 0 1 105 2 106 1 2 1 3 2 169 2 82 1 207 1 172 1 84 1 175 1 178 4 120 2 31 3 87 1 88 1 218 1 11 1 62 2 153 1 124 2 63 1 220 1 154 1 155 1 14 1 43 1 67 1 131 1 16 1 194 3 195 1 230 1 17 1 135 1 137 1 198 1 163 1 73 1 232 1 48 1 
25 1 172 1 62 1 195 1 175 1 198 1 
139 1 74 1 0 1 105 2 106 1 23 4 3 2 169 2 82 1 207 1 172 1 84 1 116 1 175 1 86 4 120 2 31 3 87 1 182 1 150 1 218 1 35 4 11 1 37 1 62 2 219 1 153 1 124 2 63 1 220 1 154 1 189 1 14 1 224 4 68 4 16 1 194 2 195 1 135 1 18 1 198 1 163 3 232 1 199 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 208 2 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 208 19 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 208 2 188 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V ERROR java.lang.IndexOutOfBoundsException 30 129 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V ERROR java.lang.IndexOutOfBoundsException 30 129 185 33 56 115 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V ERROR java.lang.IndexOutOfBoundsException 30 129 185 100 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V ERROR java.lang.IndexOutOfBoundsException 30 129 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I | OPERATOR | 6100 | % -> <<
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V | STATEMENT | 11646 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 27770 | stmt -> ;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | OPERATOR | 5285 | != -> ==
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4788 | = null
net.sourceforge.barbecue.Module:hashCode()I | OPERATOR | 6744 | * -> >>
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
233 1 0 1 151 1 108 1 138 1 242 1 
0 1 151 1 108 1 138 1 242 1 
3 2 65 1 148 1 
0 1 62 1 43 1 45 1 85 2 33 1 105 1 186 1 91 1 243 1 10 1 202 1 23 1 137 3 109 1 56 1 247 1 196 1 142 1 
0 1 62 1 43 1 115 1 85 1 106 1 33 1 91 1 243 1 10 1 23 1 137 3 247 1 56 2 196 1 142 1 
239 1 10 2 243 1 91 1 23 2 137 2 247 1 85 1 196 3 142 1 
0 1 62 1 43 1 85 2 106 1 33 1 107 1 91 1 243 1 10 1 23 2 137 4 247 1 56 1 196 2 142 1 
91 1 165 1 247 1 142 1 
88 1 10 2 243 1 91 1 159 1 23 1 137 2 247 1 85 1 196 1 142 1 
0 2 62 1 43 2 45 1 100 1 85 1 33 1 186 1 243 1 10 1 151 1 202 1 23 1 137 3 109 1 168 1 56 1 247 1 196 1 142 1 
0 2 62 1 43 2 45 1 100 1 85 1 33 1 186 1 243 1 10 1 151 1 202 1 23 1 137 3 109 1 56 1 247 1 196 1 142 1 
0 1 43 1 100 1 103 1 134 1 85 1 184 1 91 1 243 1 10 1 151 1 23 1 137 2 168 1 247 1 196 1 142 1 
0 1 43 1 100 1 103 1 207 1 85 1 184 1 91 1 243 1 10 1 151 1 23 1 137 2 168 1 247 1 196 1 142 1 
0 1 28 1 43 1 100 1 103 1 85 1 184 1 91 1 243 1 10 1 151 1 23 1 137 2 78 1 247 1 220 1 196 1 142 1 
0 1 28 1 43 1 100 1 103 1 85 1 184 1 91 1 243 1 10 1 151 1 23 1 137 2 168 1 78 1 247 1 220 1 196 1 142 1 
239 1 10 1 243 1 91 1 23 1 137 3 247 1 85 2 196 2 142 1 
143 1 158 2 91 1 10 1 23 1 137 3 41 1 247 1 196 2 142 1 
143 1 10 2 91 1 158 1 23 1 137 2 145 1 247 1 196 1 142 1 
143 1 10 1 91 1 158 1 23 1 137 2 139 1 247 1 196 1 142 1 
143 1 10 1 91 1 158 1 23 1 137 2 247 1 196 1 183 1 142 1 
143 1 0 1 158 1 43 1 33 1 50 1 91 1 10 1 164 1 190 1 23 1 137 3 219 1 247 1 56 4 196 1 224 1 142 1 
143 1 173 1 158 1 209 1 91 1 10 1 23 1 137 2 247 1 196 1 142 1 
174 1 5 3 195 1 
5 1 
1 1 0 2 2 1 130 3 4 2 133 4 7 1 135 2 10 4 11 3 137 3 139 2 141 3 143 1 16 2 146 2 18 2 20 1 149 4 151 1 24 1 158 1 159 1 31 2 163 1 33 1 34 2 37 3 166 2 167 5 40 1 41 1 169 2 170 2 176 1 47 1 179 2 48 2 181 1 182 1 185 2 187 1 189 2 191 3 192 1 56 2 196 3 198 4 63 2 67 1 68 1 71 3 72 1 74 4 75 3 77 1 203 1 208 1 87 1 210 1 211 6 89 1 215 1 217 1 218 3 222 14 94 4 223 1 224 1 225 1 96 4 226 2 99 1 227 2 228 1 100 1 101 3 229 1 102 3 232 2 106 1 235 1 237 2 112 1 239 1 240 3 114 1 115 1 242 2 118 3 119 1 122 1 247 1 248 5 
96 4 226 1 1 1 158 1 99 1 2 1 101 1 102 1 67 1 72 1 10 2 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 203 1 47 1 18 1 208 1 182 1 87 1 20 1 118 1 189 1 119 1 215 1 191 1 24 1 217 1 218 1 247 1 196 1 94 4 223 1 248 1 
96 4 99 1 2 1 114 1 203 1 208 1 20 1 119 1 215 1 24 1 41 1 94 4 
90 1 
96 4 226 1 158 1 99 1 2 1 101 1 102 1 67 1 72 1 10 2 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 80 1 203 1 47 1 18 1 208 1 87 1 20 1 118 1 189 1 119 1 215 1 191 1 24 1 217 1 218 1 247 1 196 1 94 4 248 1 
96 4 98 1 158 1 99 1 2 1 29 1 104 1 231 1 10 2 235 1 236 1 137 2 41 1 143 1 114 1 203 1 177 1 208 1 20 1 119 1 22 1 215 1 24 1 93 1 217 1 247 1 222 2 196 1 94 4 95 1 
96 4 226 1 1 1 99 1 158 1 2 1 72 1 10 2 235 1 137 2 41 1 143 1 113 1 114 1 203 1 208 1 18 1 20 1 189 1 119 1 215 1 24 1 217 1 247 1 94 4 196 1 223 1 
96 4 226 1 1 1 158 1 99 1 159 1 2 1 101 1 102 1 67 1 72 1 10 3 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 203 1 47 1 18 1 208 1 182 1 87 1 20 1 118 1 189 1 119 1 215 1 191 1 24 1 217 1 218 1 247 1 196 1 94 4 223 1 248 1 
96 4 226 1 1 1 99 1 2 1 72 1 10 2 235 1 137 2 113 1 114 1 203 1 85 1 208 1 18 1 20 1 243 1 189 1 119 1 215 1 24 1 217 1 247 1 94 4 196 1 223 1 
96 4 226 1 1 1 99 1 158 1 2 1 72 1 10 2 235 1 137 2 41 1 143 1 113 1 114 1 203 1 208 1 18 1 20 1 189 1 119 1 215 1 24 1 217 1 247 1 94 4 196 1 223 1 
96 1 2 1 119 1 94 1 208 1 
96 4 226 1 1 1 158 1 99 1 2 1 101 1 102 1 67 1 72 1 10 2 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 203 1 47 1 18 1 208 1 182 1 87 1 118 1 189 1 119 1 215 1 191 1 24 1 217 1 218 1 247 1 196 1 94 4 223 1 248 1 
96 4 226 1 1 1 158 1 99 1 101 1 102 1 67 1 72 1 10 2 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 203 1 47 1 18 1 208 1 19 1 182 1 87 1 118 1 189 1 119 1 215 1 191 1 24 1 217 1 218 1 247 1 196 1 94 4 223 1 248 1 
96 4 226 1 1 1 158 1 99 1 2 1 101 1 102 1 67 1 72 1 10 2 75 1 11 1 235 1 37 1 137 2 167 1 41 1 141 1 143 1 114 1 203 1 47 1 18 1 208 1 87 1 20 1 118 1 189 1 188 1 119 1 215 1 191 1 121 1 24 1 217 1 218 1 247 1 196 1 94 4 223 1 248 1 
60 1 122 1 222 1 
246 1 222 1 
123 1 222 1 
246 1 222 1 
246 1 222 1 
123 1 222 1 
0 1 240 1 128 1 103 1 66 1 184 1 211 1 214 1 151 1 222 1 220 1 42 1 
211 1 0 1 240 1 151 1 154 1 222 1 
211 1 184 1 0 1 151 1 128 1 103 1 222 1 
123 1 222 1 
221 1 222 1 
136 1 27 1 180 1 222 1 
127 1 205 1 222 1 
143 1 158 1 81 1 160 2 177 1 133 2 241 1 162 1 10 1 234 1 137 2 217 1 25 1 123 1 222 2 247 1 196 1 
132 1 
143 1 10 1 158 1 165 1 81 1 137 2 177 1 25 1 217 1 241 1 162 1 247 1 196 1 
226 1 10 1 243 1 189 1 137 2 217 1 247 1 85 1 196 1 18 1 72 1 
226 2 85 2 18 2 72 1 243 1 10 1 189 2 137 3 217 1 247 1 196 1 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 2 85 2 18 2 72 1 243 1 10 1 189 2 137 3 217 1 247 1 196 1 126 1 
198 4 0 2 62 1 63 2 4 2 131 2 6 1 133 4 7 1 9 1 68 1 200 1 69 1 70 2 71 3 72 1 74 4 10 2 75 2 12 2 11 2 137 3 139 2 141 2 144 2 16 2 82 1 146 2 85 1 18 1 211 6 212 1 149 4 151 1 217 1 155 1 218 2 222 4 26 2 226 1 159 1 100 1 101 2 102 2 230 2 31 2 232 2 33 1 34 2 166 2 37 2 167 4 237 2 238 1 171 1 170 2 169 2 240 3 176 1 115 1 46 1 48 2 179 2 181 1 242 2 185 2 243 1 118 2 189 1 191 2 56 1 247 1 196 1 248 4 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 1 16 1 178 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 206 2 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
198 2 0 1 62 1 63 1 4 1 131 1 133 2 7 1 70 1 71 3 72 1 74 2 10 1 75 1 12 1 11 1 137 3 139 1 141 1 144 1 16 1 146 1 85 1 18 1 211 3 149 2 217 1 218 1 222 2 26 1 226 1 101 1 102 1 230 1 31 1 232 1 33 1 34 1 166 1 37 1 167 2 237 1 170 1 169 1 176 1 115 1 46 1 179 1 48 1 242 1 185 1 243 1 118 1 189 1 191 1 56 1 247 1 196 1 248 2 
226 1 144 1 85 1 18 1 72 1 243 1 10 1 189 1 137 2 217 1 247 1 196 1 126 1 
0 1 198 2 63 1 4 1 131 1 133 2 7 1 70 1 71 3 74 2 75 1 12 1 11 1 137 1 139 1 141 2 144 1 16 1 146 1 211 3 149 2 218 1 222 2 157 1 26 1 224 1 101 1 102 1 230 1 31 1 232 1 33 1 34 1 166 1 37 1 167 2 237 1 170 1 169 1 41 1 172 1 176 1 115 1 46 1 178 1 179 1 48 1 242 1 185 1 51 1 118 1 191 1 194 1 56 1 248 2 
198 2 0 1 62 1 63 1 4 1 131 1 133 2 7 1 70 1 71 3 72 1 74 2 10 1 75 1 12 1 11 1 137 3 139 1 141 1 144 1 16 1 146 1 85 1 18 1 211 3 149 2 217 1 218 1 222 2 26 1 226 1 101 1 102 1 230 1 31 1 232 1 33 1 34 1 35 1 166 1 37 1 167 2 237 1 170 1 169 1 176 1 115 1 46 1 48 1 179 1 242 1 185 1 243 1 118 1 189 1 191 1 56 1 247 1 196 1 248 2 
198 2 0 1 63 1 4 1 131 1 133 2 7 1 70 1 71 3 72 1 74 2 75 1 10 1 12 1 11 1 137 3 139 1 141 1 143 1 144 1 16 1 146 1 18 1 211 3 149 2 217 1 218 1 222 2 26 1 224 1 226 1 158 1 101 1 102 1 230 1 31 1 232 1 33 1 34 1 35 1 166 1 37 1 167 2 237 1 170 1 41 1 169 1 115 1 176 1 46 1 48 1 179 1 242 1 185 1 118 1 189 1 191 1 56 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 2 31 1 232 1 72 1 75 1 10 1 11 1 37 1 137 2 167 2 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 2 189 1 191 1 217 1 194 1 218 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 172 1 141 1 16 1 178 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 2 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 1 16 1 178 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 2 189 1 191 1 217 1 123 1 218 1 194 1 247 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
74 1 198 1 131 1 222 1 49 1 
74 1 34 1 198 1 222 1 49 1 
21 1 74 1 198 1 216 1 131 1 222 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
198 2 0 1 128 1 63 1 4 1 131 1 133 2 66 3 68 1 72 1 74 2 75 1 10 2 11 1 137 2 139 1 141 2 16 1 146 1 85 1 18 1 211 3 214 3 149 2 151 1 217 1 218 1 222 2 220 4 157 1 226 1 28 1 100 1 101 1 102 1 103 1 31 1 232 1 34 1 37 1 235 1 166 1 167 2 237 1 170 1 169 1 42 3 172 1 240 3 178 1 48 1 179 1 181 1 242 1 185 1 184 1 51 1 243 1 118 1 189 1 191 1 194 1 247 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 35 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 172 1 141 1 16 1 178 1 48 1 179 1 206 2 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 172 1 141 2 16 1 178 1 48 1 179 1 206 2 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 172 1 141 2 16 1 178 1 48 1 179 1 146 1 85 1 18 1 51 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 194 1 247 1 157 1 196 1 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 141 1 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 206 2 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 85 1 18 1 72 1 243 1 10 1 36 1 189 1 137 2 217 1 247 1 196 1 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 1 16 1 48 1 179 1 206 2 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 35 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 170 1 169 1 141 2 16 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 157 1 196 1 248 2 
197 1 0 1 128 1 63 1 4 1 133 2 66 2 68 1 72 1 73 1 75 1 10 4 11 1 137 3 139 1 141 1 16 1 207 1 146 1 85 2 18 2 211 2 214 2 149 2 151 1 217 1 218 1 222 3 220 3 226 2 28 2 159 1 100 1 101 1 103 1 102 1 31 1 232 1 107 1 235 1 166 1 37 1 167 2 237 1 169 1 42 2 240 2 178 1 48 1 179 1 181 1 185 1 184 1 243 1 118 1 189 2 52 1 120 1 191 1 122 3 247 1 196 2 248 2 126 1 
226 1 63 1 4 1 101 1 102 1 133 3 31 1 232 1 72 1 75 1 10 1 11 1 37 1 167 2 137 2 169 1 172 1 141 1 16 1 178 1 48 1 179 1 146 1 85 1 18 1 243 1 118 1 149 3 189 1 191 1 217 1 123 1 218 1 247 1 196 1 248 2 126 1 
0 1 59 1 28 1 100 1 64 1 103 1 66 2 8 1 68 1 134 1 10 2 202 1 166 1 235 1 137 2 109 1 237 1 38 1 139 1 42 2 240 2 45 1 177 1 181 1 85 1 211 2 184 1 185 1 186 1 243 1 214 2 151 1 244 1 217 1 122 3 193 1 56 1 220 3 247 1 222 4 196 1 
0 1 59 1 28 1 64 1 103 1 230 1 66 2 8 1 68 1 70 1 10 1 12 1 166 1 137 2 38 1 237 1 139 1 111 1 42 2 173 1 240 2 44 1 175 1 177 1 86 1 181 1 85 1 209 1 211 2 184 1 185 1 212 1 243 1 214 2 151 1 244 1 217 1 122 3 193 1 220 3 247 1 222 4 196 1 26 1 
226 1 63 1 3 1 4 1 101 3 102 3 133 2 31 1 67 1 232 1 72 1 35 1 10 1 75 3 11 3 37 3 167 4 137 2 170 1 169 1 141 3 16 1 48 1 179 1 47 2 146 1 85 1 87 1 18 1 243 1 149 2 118 3 189 1 191 3 217 1 218 3 247 1 196 1 248 4 
226 1 101 1 102 1 67 1 72 1 10 1 75 1 11 1 37 1 167 1 137 2 141 1 47 1 85 1 87 1 18 1 243 1 118 1 189 1 191 1 217 1 218 1 247 1 196 1 248 1 
226 1 101 3 102 3 67 1 72 1 10 1 75 3 11 3 37 3 167 3 137 2 141 3 47 3 85 1 87 1 18 1 243 1 118 3 189 1 92 1 191 3 217 1 218 3 247 1 196 1 248 3 
226 1 101 1 102 1 67 1 72 1 10 1 75 1 11 1 37 1 167 1 137 2 141 1 47 1 85 1 87 1 18 1 183 1 243 1 118 1 189 1 191 1 217 1 218 1 247 1 196 1 248 1 
226 1 47 1 85 1 87 1 18 1 183 1 72 1 10 1 243 1 189 1 137 2 217 1 247 1 196 1 
226 1 198 1 227 1 101 1 102 1 67 1 72 1 74 1 10 1 75 1 11 1 37 1 167 1 137 2 110 1 141 1 47 1 85 1 49 1 87 1 18 1 243 1 118 1 189 1 191 1 217 1 123 1 218 1 222 1 247 1 196 1 248 1 
204 1 137 1 54 1 117 1 
137 1 17 1 117 1 
213 2 61 1 137 1 105 1 
61 1 83 1 137 1 147 1 105 1 
14 1 117 1 
28 1 214 1 240 1 66 1 220 1 42 1 
79 1 0 1 230 1 70 1 212 1 151 1 26 1 
0 1 151 1 68 1 181 1 
28 1 214 1 240 1 128 1 66 1 220 1 42 1 
149 1 167 1 4 1 133 1 123 1 222 1 
167 1 218 1 
149 1 133 1 123 1 222 1 
149 1 3 1 4 1 167 2 133 1 218 1 156 1 
167 1 218 1 
158 1 
143 1 
158 1 
85 1 
85 1 
243 1 
143 1 158 1 177 1 183 1 10 1 150 1 137 2 53 1 153 1 76 1 217 1 140 1 247 1 196 1 125 1 
143 2 158 2 177 2 201 1 10 2 150 2 53 2 137 4 153 2 76 2 217 2 140 2 247 2 124 1 196 2 125 2 
143 1 158 1 177 1 10 1 150 1 137 2 53 1 153 1 76 1 217 1 140 1 247 1 124 1 196 1 125 1 
97 1 143 1 58 1 158 1 177 1 133 1 205 2 10 1 150 1 137 2 53 1 153 1 76 1 217 1 123 1 140 1 222 3 247 1 196 1 125 1 
143 1 158 1 177 1 201 1 10 1 150 1 53 1 137 2 153 1 76 1 217 1 140 1 247 1 196 1 125 1 
143 2 15 1 158 2 177 2 201 1 10 2 150 2 165 1 53 2 137 4 153 2 76 2 217 2 140 2 247 2 196 2 125 2 
143 1 15 1 158 1 177 1 10 1 150 1 165 1 53 1 137 2 153 1 76 1 217 1 140 1 247 1 196 1 125 1 
97 2 143 1 58 1 158 1 177 1 133 2 205 1 10 1 150 1 137 2 53 1 153 1 76 1 217 1 123 1 140 1 222 1 247 1 196 1 125 1 
161 1 
57 1 122 2 123 1 222 2 
199 1 122 2 123 1 222 2 
97 1 57 1 58 1 199 1 0 1 158 1 159 1 230 1 161 1 133 1 7 1 70 1 71 2 32 1 33 1 10 2 12 1 166 1 137 3 237 1 76 1 139 1 140 1 143 1 176 1 115 1 177 1 46 1 211 2 185 1 150 1 53 1 153 1 217 1 122 2 222 2 247 1 56 1 124 1 196 1 125 1 26 1 224 1 
150 1 15 1 165 1 217 1 247 1 
57 1 58 1 0 1 199 1 128 1 133 1 66 3 68 1 10 3 137 2 76 1 139 1 140 1 143 1 205 1 211 2 150 1 214 3 151 1 153 1 217 1 222 3 220 4 97 1 158 1 28 1 159 1 100 1 103 1 161 1 235 1 166 1 237 1 42 3 240 3 177 1 180 1 181 1 185 1 184 1 53 1 122 2 247 1 196 1 125 1 
143 1 198 1 158 1 29 1 30 1 129 1 177 1 104 1 10 1 22 1 236 1 137 2 39 1 217 1 222 1 247 1 196 1 95 2 
129 1 
198 1 0 1 158 1 29 1 30 1 129 1 104 1 71 2 33 1 10 1 13 1 236 1 137 3 39 1 139 1 143 1 115 1 176 1 177 1 205 1 180 1 116 1 185 1 211 1 22 1 217 1 245 1 222 2 247 1 56 1 196 1 95 2 224 1 
165 1 22 1 29 1 236 1 104 1 95 1 
198 1 0 1 28 1 158 1 159 1 29 1 100 1 30 1 129 1 103 1 104 1 66 2 68 1 10 3 235 1 13 1 236 1 137 2 39 1 139 1 42 2 143 1 240 2 177 1 205 1 180 1 116 1 211 1 184 1 185 1 214 2 151 1 22 1 217 1 245 1 222 2 220 2 247 1 196 1 95 2 
165 1 22 1 29 1 236 1 104 1 95 1 
158 1 29 1 133 1 136 1 10 1 137 2 143 1 177 1 84 1 205 1 22 1 152 1 217 1 245 1 123 1 55 1 221 1 247 1 222 2 196 1 95 1 
158 1 29 1 133 1 104 1 136 1 10 1 236 1 137 2 143 1 177 1 205 1 22 1 217 1 245 1 123 1 55 1 221 1 247 1 222 2 196 1 95 1 
0 1 28 1 158 1 159 1 128 1 29 1 100 1 129 1 103 1 104 1 66 2 68 1 10 3 235 1 13 1 236 1 137 2 139 1 42 2 143 1 240 2 177 1 205 1 180 1 116 1 181 1 211 1 184 1 185 1 214 2 151 1 22 1 217 1 245 1 222 1 220 3 247 1 196 1 95 1 
39 1 95 1 
123 1 116 1 
13 1 123 1 
143 1 198 1 158 1 29 1 30 1 129 1 177 1 104 1 10 1 22 1 236 1 137 2 39 1 217 1 222 1 247 1 196 1 95 2 

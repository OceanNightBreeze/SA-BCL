#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 106 34 149 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 222 139 227 164 197 114 61 179 34 149 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 34 149 155 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.IllegalArgumentException 222 139 227 164 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 136 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | OPERATOR | 12215 | % -> +
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V | OPERATOR | 2235 | += -> *=
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | STATEMENT | 3063 | stmt -> ;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String; | CONDITION | 5805 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 7126 | return null
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
52 1 75 1 177 1 151 1 81 1 
166 1 43 1 56 2 
52 1 75 1 45 1 177 1 151 1 81 1 
117 1 13 1 98 1 22 1 
28 2 31 1 119 1 22 1 202 2 204 1 13 1 98 1 82 1 148 2 15 1 126 1 
161 1 28 1 103 1 164 1 20 1 94 1 143 1 202 3 204 1 13 1 185 1 98 1 148 1 111 2 124 1 15 1 126 1 37 1 151 1 177 2 
161 1 28 1 103 1 164 1 20 1 94 1 143 1 202 3 204 1 13 1 98 1 148 1 111 2 124 1 15 1 126 1 37 1 151 1 177 2 
28 1 132 1 164 1 210 1 22 1 202 2 204 1 13 1 98 1 185 1 148 1 111 1 15 1 126 1 177 1 151 1 224 1 
28 1 132 1 209 1 164 1 210 1 22 1 202 2 204 1 13 1 98 1 185 1 148 1 111 1 15 1 126 1 177 1 151 1 
28 1 132 1 164 1 210 1 93 1 22 1 202 2 203 1 204 1 13 1 98 1 148 1 111 1 15 1 126 1 53 1 177 1 151 1 
28 1 132 1 164 1 210 1 93 1 22 1 202 2 203 1 204 1 13 1 185 1 98 1 148 1 111 1 15 1 126 1 53 1 177 1 151 1 
28 2 154 1 22 1 202 3 204 1 13 1 98 1 148 1 15 2 126 1 
22 1 202 3 159 2 146 1 13 1 98 1 148 1 15 2 126 1 188 1 
108 1 13 1 98 1 148 2 126 1 15 1 188 1 202 2 22 1 159 1 
22 1 202 2 46 1 159 1 13 1 98 1 148 1 15 1 126 1 188 1 
161 1 103 1 20 1 94 1 143 1 22 1 202 3 159 1 13 1 98 1 148 1 111 1 124 1 15 1 126 1 188 1 177 1 100 1 
0 1 161 2 143 1 22 1 202 3 159 1 13 1 98 1 148 1 111 1 15 1 126 1 188 1 177 1 130 1 100 1 
154 1 22 1 202 2 159 1 13 1 98 1 148 2 15 3 126 2 188 1 
208 1 0 1 161 1 143 1 22 1 202 4 159 2 13 1 98 1 148 1 111 1 15 2 126 2 188 1 177 1 100 1 
13 1 98 1 148 1 126 1 15 1 188 1 191 1 202 2 22 1 159 1 
161 4 42 1 44 1 143 1 22 1 202 3 159 1 13 1 98 1 148 1 111 1 219 1 15 1 126 1 188 1 177 1 152 1 100 1 
193 1 162 1 13 1 98 1 148 1 126 1 15 1 188 1 202 2 22 1 159 1 
50 1 125 3 40 1 
125 1 
117 1 9 1 62 4 217 1 34 1 69 1 73 2 223 1 129 1 135 1 137 1 196 4 104 1 106 1 80 1 146 1 83 1 149 1 173 1 236 1 25 1 55 1 
115 1 0 1 2 2 118 2 4 2 8 2 10 2 11 2 15 2 127 2 130 1 17 1 134 1 135 1 18 2 142 1 143 1 23 4 144 1 145 2 146 1 148 3 149 1 25 1 150 2 27 3 151 1 154 1 32 2 157 2 33 2 159 1 34 1 161 2 164 1 46 2 48 1 168 2 169 4 171 2 52 2 174 2 55 1 176 1 177 2 179 1 58 1 180 1 181 2 59 2 182 4 61 1 62 4 183 2 63 2 67 1 186 2 70 2 188 1 71 2 73 14 190 1 192 4 196 4 197 1 202 4 85 2 90 2 212 4 95 4 213 3 215 2 216 1 217 1 97 2 98 1 220 3 221 4 99 2 100 1 227 2 105 1 104 1 106 1 230 1 107 6 232 1 233 2 109 1 235 2 236 1 112 2 113 1 114 1 
0 1 115 1 179 1 2 2 118 2 58 1 181 2 4 2 59 2 182 4 8 2 62 4 61 1 11 2 183 2 10 2 63 2 67 1 186 2 15 2 70 2 127 2 188 1 71 2 73 4 190 1 192 4 130 1 134 1 135 1 18 2 196 4 198 1 197 1 142 1 143 1 202 3 23 4 145 2 146 1 148 3 149 1 25 1 150 2 151 1 154 1 89 1 90 2 212 4 32 2 157 2 213 3 95 4 215 2 159 1 33 2 216 1 97 2 217 1 98 1 34 1 220 3 221 4 99 2 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 233 2 46 2 48 1 169 4 168 2 109 1 171 2 235 2 52 2 236 1 174 2 112 2 113 1 55 1 176 1 114 1 177 2 
0 1 115 1 1 1 179 1 2 3 118 2 58 1 181 2 4 2 59 2 182 4 8 2 62 4 61 1 184 1 11 2 10 2 63 2 67 1 186 3 15 2 70 2 127 2 188 1 71 3 73 4 190 1 192 4 130 1 77 1 135 1 18 2 196 4 197 1 79 1 142 1 143 1 23 4 202 3 145 2 146 1 148 3 149 1 25 1 151 1 154 1 90 3 212 4 32 3 157 2 213 3 95 5 215 3 159 1 216 1 97 2 217 1 98 1 34 1 220 3 221 3 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 46 2 233 2 169 5 171 2 110 1 51 1 235 3 52 2 236 1 237 2 112 3 113 1 55 1 176 1 114 1 177 2 
0 1 115 1 179 1 2 2 118 2 58 1 4 2 181 2 59 2 182 4 8 2 62 4 61 1 11 2 183 2 10 2 63 2 67 1 66 2 186 2 15 2 70 2 127 2 71 2 73 4 190 1 192 4 130 1 134 1 135 1 18 2 139 2 196 4 197 1 142 1 143 1 202 3 23 4 145 2 204 1 148 3 149 1 25 1 150 2 151 1 28 1 154 1 90 2 30 2 212 4 32 2 157 2 213 3 95 4 215 2 33 2 216 1 97 2 217 1 98 1 34 1 220 3 37 1 221 4 222 1 99 2 226 2 161 2 227 2 104 1 164 1 106 1 107 6 232 1 233 2 46 2 167 2 48 1 170 1 169 4 168 2 109 1 171 2 235 2 236 1 52 2 174 2 112 2 55 1 176 1 114 1 177 2 
0 1 115 1 1 1 179 1 2 3 118 2 58 1 181 2 4 3 59 2 182 4 8 2 61 1 62 4 11 2 10 2 63 2 67 1 186 3 15 4 70 2 127 2 188 1 71 3 73 4 190 1 192 4 130 1 134 1 77 1 135 1 18 2 196 4 197 1 142 1 143 1 23 4 202 4 145 3 146 1 148 5 149 1 25 1 151 1 208 1 154 1 89 1 90 3 212 4 31 1 32 3 157 2 213 3 95 5 215 3 159 2 216 1 97 2 217 1 98 1 34 1 220 3 221 3 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 46 2 233 3 234 1 109 1 169 5 171 2 51 1 235 3 52 2 236 1 237 2 112 3 113 1 55 1 114 1 176 1 177 2 
0 1 115 1 1 1 179 1 2 3 118 2 58 1 181 2 4 2 59 2 182 4 8 2 62 4 61 1 11 2 10 2 63 2 67 1 186 3 15 2 70 2 127 2 188 1 71 3 73 4 190 1 192 4 130 1 134 1 77 1 135 1 18 2 196 4 197 1 142 1 143 1 23 4 202 3 145 2 146 1 148 3 149 1 25 1 151 1 154 1 89 1 90 3 212 4 32 3 157 2 213 3 95 5 215 3 159 1 216 1 97 2 217 1 98 1 34 1 220 3 221 3 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 46 2 233 2 234 1 109 1 169 5 171 2 51 1 235 3 52 2 236 1 237 2 112 3 113 1 55 1 176 1 114 1 177 2 
135 1 104 1 196 4 106 1 62 4 146 1 217 1 34 1 149 1 236 1 25 1 55 1 
238 1 
115 1 0 1 1 1 2 3 118 2 4 2 8 2 10 2 11 2 15 2 127 2 130 2 134 1 135 1 18 2 142 1 143 1 23 4 145 2 146 1 148 4 149 1 25 1 151 1 154 1 31 1 32 3 157 2 159 1 34 1 39 1 161 3 164 1 46 2 169 5 171 2 51 1 52 2 55 1 176 1 177 2 179 1 58 1 181 2 59 2 182 4 61 1 62 4 184 1 63 2 67 1 186 3 70 2 188 1 71 3 73 4 190 1 192 4 77 1 196 4 197 1 202 3 89 1 90 3 212 4 95 5 213 3 215 3 216 1 217 1 97 2 98 1 220 3 221 3 100 1 227 2 104 1 105 1 106 1 107 6 232 1 233 2 234 1 109 1 110 1 235 3 236 1 237 2 112 3 113 1 114 1 
34 1 196 1 104 1 149 1 62 1 
0 1 115 1 1 1 179 1 2 3 118 2 58 1 181 2 4 2 59 2 182 4 8 2 62 4 61 1 184 1 11 2 10 2 63 2 67 1 186 3 15 2 70 2 127 2 188 1 71 3 73 4 190 1 192 4 130 1 134 1 77 1 135 1 18 2 196 4 197 1 142 1 143 1 23 4 202 3 145 2 146 1 148 3 149 1 25 1 151 1 154 1 90 3 212 4 32 3 157 2 213 3 95 5 215 3 159 1 216 1 97 2 217 1 98 1 34 1 220 3 221 3 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 46 2 233 2 234 1 109 1 169 5 171 2 110 1 51 1 235 3 52 2 237 2 112 3 113 1 55 1 176 1 114 1 177 2 
0 1 115 1 1 1 179 1 2 3 118 2 58 1 181 2 4 2 59 2 7 1 182 4 8 2 62 4 61 1 184 1 11 2 10 2 63 2 67 1 186 3 15 2 70 2 127 2 188 1 71 3 73 4 190 1 192 4 130 1 134 1 77 1 135 1 18 2 196 4 197 1 142 1 143 1 23 4 202 3 145 2 146 1 148 3 25 1 151 1 154 1 90 3 212 4 32 3 157 2 213 3 95 5 215 3 159 1 216 1 97 2 217 1 98 1 34 1 220 3 221 3 100 1 161 2 227 2 105 1 104 1 164 1 106 1 107 6 232 1 46 2 233 2 234 1 109 1 169 5 171 2 110 1 51 1 235 3 52 2 237 2 112 3 113 1 55 1 176 1 114 1 177 2 
115 1 0 1 1 1 2 3 118 2 4 6 5 1 8 2 10 2 11 2 123 1 15 6 127 2 130 1 134 1 135 1 18 2 142 1 143 1 23 6 145 6 146 1 148 7 149 1 25 1 150 2 151 1 154 1 155 1 32 3 157 2 159 5 33 2 34 1 36 1 161 2 164 1 46 2 48 1 169 5 168 2 171 2 51 1 52 2 174 2 55 1 176 5 177 2 179 1 58 5 181 2 59 2 182 4 62 4 61 1 184 1 183 2 63 2 67 1 186 3 70 2 188 5 71 3 73 6 190 1 192 4 77 1 195 1 196 4 197 1 202 11 90 3 212 6 213 3 214 1 95 5 215 3 216 1 217 1 97 2 98 5 220 3 221 5 99 2 100 1 227 2 105 1 104 1 106 1 107 6 232 1 233 6 109 1 110 1 235 3 236 1 237 2 112 3 113 1 114 1 
180 1 73 1 201 1 
73 1 165 1 
19 1 73 1 
73 1 165 1 
73 1 165 1 
19 1 73 1 
132 1 88 1 138 1 210 1 107 1 93 1 213 1 205 1 73 1 151 1 177 1 16 1 
107 1 200 1 73 1 213 1 177 1 151 1 
132 1 210 1 107 1 73 1 177 1 151 1 16 1 
19 1 73 1 
231 1 73 1 
218 1 121 1 68 1 73 1 
3 1 73 1 128 1 
153 1 101 1 58 1 19 1 228 1 29 1 140 1 141 2 202 2 159 1 147 1 98 1 148 1 15 1 188 1 73 2 192 2 
120 1 
117 1 147 1 101 1 98 1 58 1 148 1 228 1 140 1 15 1 29 1 188 1 202 2 159 1 
28 2 58 1 4 2 6 1 202 3 233 2 145 2 204 1 98 1 148 1 15 1 176 1 
115 1 2 2 118 2 58 1 4 1 181 2 59 2 182 4 8 2 11 2 10 2 63 2 67 1 66 2 186 2 15 1 70 2 127 2 71 2 73 4 130 1 192 4 18 2 139 2 143 1 23 4 202 3 145 1 204 1 148 2 151 1 28 1 90 2 30 2 212 4 31 1 32 2 157 2 213 3 95 4 33 2 215 2 216 1 97 2 98 1 220 3 37 1 221 2 222 1 226 2 161 1 227 2 164 1 107 6 233 1 46 2 167 2 170 1 169 4 171 2 235 2 52 2 112 2 176 1 177 2 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 3 8 1 95 2 11 1 215 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 163 2 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
28 2 58 1 4 2 6 1 202 3 233 2 145 2 204 1 98 1 148 1 15 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
115 1 2 1 118 1 58 1 4 1 181 1 59 1 182 2 8 1 11 1 10 1 63 1 67 1 66 1 186 1 15 1 70 1 127 1 71 1 73 2 130 1 192 2 18 1 139 1 143 1 23 2 202 3 145 1 204 1 148 1 28 1 90 1 30 1 212 2 32 1 157 1 95 2 33 1 215 1 97 1 98 1 220 3 37 1 221 1 226 1 161 1 227 1 107 3 46 1 233 1 167 1 170 1 169 2 171 1 235 1 52 1 112 1 176 1 177 1 
28 1 58 1 4 1 6 1 202 2 233 1 145 1 167 1 204 1 98 1 148 1 15 1 176 1 
115 1 2 1 118 1 181 1 59 1 182 2 8 1 11 1 10 1 183 1 63 1 67 1 66 1 186 1 127 1 70 1 71 1 73 2 130 1 192 2 18 1 139 1 143 1 23 2 202 1 146 1 150 1 90 1 30 1 212 2 32 1 157 1 95 2 33 1 215 1 97 1 220 3 221 2 99 1 226 1 100 1 161 1 227 1 107 3 46 1 167 1 170 1 168 1 169 2 171 1 235 1 52 1 174 1 112 1 177 1 
115 1 2 1 118 1 58 1 4 1 181 1 59 1 182 2 8 1 11 1 10 1 63 1 67 1 66 1 186 1 15 1 70 1 127 1 71 1 73 2 130 1 192 2 18 1 139 1 143 1 23 2 202 3 145 1 204 1 148 1 28 1 90 1 30 1 212 2 32 1 157 1 95 2 33 1 215 1 97 1 98 1 220 3 37 1 221 1 39 1 226 1 161 1 227 1 107 3 46 1 233 1 167 1 170 1 169 2 171 1 235 1 52 1 112 1 176 1 177 1 
115 1 2 1 118 1 58 1 4 1 181 1 59 1 182 2 8 1 11 1 10 1 63 1 67 1 66 1 186 1 15 1 70 1 127 1 188 1 71 1 73 2 130 1 192 2 18 1 139 1 143 1 23 2 202 3 145 1 146 1 148 1 90 1 30 1 212 2 32 1 157 1 95 2 33 1 159 1 215 1 97 1 98 1 220 3 221 1 39 1 226 1 100 1 161 1 227 1 107 3 233 1 46 1 167 1 170 1 169 2 171 1 235 1 52 1 112 1 176 1 177 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 182 2 157 1 8 1 95 2 183 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 2 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 150 1 176 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 3 8 1 95 2 215 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 215 1 11 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 215 1 11 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 215 1 11 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 2 8 1 95 2 215 1 11 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 2 19 1 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 215 1 11 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
14 1 212 1 73 1 23 1 33 1 
118 1 14 1 212 1 73 1 23 1 
57 1 206 1 212 1 73 1 23 1 33 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
2 1 118 1 58 1 4 1 181 1 59 1 6 1 182 2 8 1 11 1 183 1 10 1 63 1 186 1 15 1 70 1 127 1 71 1 73 2 190 1 192 2 16 1 132 1 18 1 138 3 23 2 202 2 203 1 145 1 204 1 148 2 205 3 150 1 151 1 28 1 88 3 210 1 90 1 212 2 93 4 32 1 157 1 213 3 95 2 33 1 215 1 216 1 97 1 98 1 221 2 99 1 227 1 105 1 164 1 107 3 233 1 46 1 169 2 168 1 171 1 235 1 52 1 174 1 112 1 176 1 177 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 215 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 39 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 150 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 2 99 1 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
2 1 58 1 4 1 6 1 182 3 8 1 11 1 183 1 10 1 63 1 186 1 15 1 127 1 70 1 71 1 192 3 18 1 19 1 202 2 145 1 204 1 148 1 28 1 90 1 32 1 157 1 95 2 215 1 97 1 98 1 221 1 163 2 231 1 233 1 168 1 169 2 171 1 235 1 174 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 3 8 1 95 2 215 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 163 2 19 1 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 150 1 176 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 3 8 1 95 2 215 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 174 1 112 1 150 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 163 2 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 58 1 4 1 6 1 202 2 233 1 145 1 204 1 98 1 148 1 15 1 86 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 163 2 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 215 1 10 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 39 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
28 1 2 1 58 1 4 1 90 1 32 1 182 3 157 1 8 1 95 2 11 1 10 1 215 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 2 71 1 99 1 192 3 19 1 18 1 231 1 233 1 202 2 145 1 204 1 169 2 171 1 148 1 235 1 112 1 176 1 
178 1 2 1 58 1 180 3 4 2 181 1 59 1 6 1 182 2 8 1 10 1 183 1 64 1 63 1 186 1 15 2 70 1 127 1 71 1 73 3 190 1 192 2 16 1 132 1 18 1 138 2 202 3 203 2 145 2 204 1 148 4 205 2 151 1 208 1 28 2 88 2 209 1 210 1 90 1 31 1 93 3 32 1 157 1 95 2 213 2 215 1 216 1 97 1 98 1 221 1 227 1 102 1 105 1 164 1 107 2 233 2 46 1 169 2 171 1 172 1 235 1 112 1 176 1 177 1 
28 1 2 1 58 1 4 1 90 1 6 1 32 1 157 1 182 3 8 1 95 2 215 1 10 1 183 1 63 1 97 1 98 1 186 1 15 1 70 1 127 1 221 1 71 1 192 3 19 1 18 1 233 1 202 2 145 1 204 1 169 2 168 1 171 1 148 1 235 1 112 1 176 1 
204 1 28 1 98 1 58 1 148 1 4 1 15 1 176 1 233 1 202 2 145 1 
28 1 58 1 88 2 180 3 181 1 59 1 210 1 156 1 92 1 93 3 94 1 213 2 216 1 98 1 124 1 15 1 189 1 73 4 190 1 224 1 161 1 132 1 101 1 227 1 103 1 105 1 138 2 164 1 20 1 107 2 202 2 46 1 203 1 24 1 204 1 148 2 205 2 87 1 26 1 151 1 177 1 
28 1 58 1 88 2 180 3 181 1 210 1 59 1 30 1 156 1 92 1 93 3 213 2 12 1 96 1 216 1 66 1 98 1 122 1 15 1 189 1 222 1 73 4 38 1 226 1 193 1 162 1 132 1 101 1 227 1 105 1 139 1 138 2 107 2 202 2 46 1 203 1 24 1 204 1 148 1 205 2 87 1 26 1 151 1 177 1 
1 1 28 1 2 2 58 1 4 1 90 2 32 2 157 1 182 2 8 1 95 3 10 1 215 2 63 1 97 1 98 1 186 2 15 1 70 1 127 1 221 2 71 2 192 2 39 1 77 1 18 1 202 2 233 1 145 1 204 1 169 3 171 1 148 1 51 1 235 2 112 2 176 1 
1 1 28 1 2 1 58 1 4 1 90 1 32 1 95 1 215 1 98 1 186 1 15 1 221 1 71 1 77 1 202 2 233 1 145 1 204 1 169 1 148 1 51 1 235 1 112 1 176 1 
1 1 28 1 2 1 58 1 4 1 90 1 212 1 32 1 95 1 215 1 98 1 14 1 186 1 15 1 221 1 71 1 73 1 194 1 77 1 19 1 23 1 202 2 233 1 145 1 204 1 169 1 148 1 51 1 235 1 237 1 112 1 176 1 
1 3 28 1 2 3 58 1 4 1 90 3 32 3 95 3 215 3 98 1 186 3 15 1 221 3 71 3 76 1 77 1 202 2 233 1 145 1 204 1 169 3 148 1 51 1 235 3 112 3 176 1 
1 1 28 1 2 1 58 1 4 1 90 1 32 1 95 1 215 1 98 1 186 1 15 1 221 1 71 1 191 1 77 1 202 2 233 1 145 1 204 1 169 1 148 1 51 1 235 1 112 1 176 1 
1 1 28 1 77 1 58 1 4 1 202 2 233 1 145 1 204 1 98 1 148 1 15 1 176 1 191 1 
199 1 207 1 54 1 202 1 
229 1 54 1 202 1 
82 1 21 1 60 2 202 1 
82 1 21 1 72 1 158 1 202 1 
84 1 54 1 
88 1 205 1 138 1 93 1 213 1 203 1 
131 1 30 1 66 1 222 1 151 1 177 1 226 1 
88 1 205 1 138 1 93 1 213 1 203 1 16 1 
216 1 105 1 177 1 151 1 
19 1 70 1 73 1 182 1 192 1 95 1 
95 1 215 1 
19 1 73 1 182 1 192 1 
133 1 70 1 182 1 192 1 95 2 56 1 215 1 
95 1 215 1 
159 1 
188 1 
159 1 
28 1 
28 1 
204 1 
101 1 58 1 78 1 91 1 211 1 202 2 159 1 47 1 49 1 98 1 148 1 15 1 188 1 191 1 225 1 
101 2 58 2 78 2 91 2 211 2 202 4 159 2 47 2 49 2 98 2 148 2 15 2 188 2 175 1 160 1 225 2 
101 1 58 1 78 1 91 1 211 1 202 2 159 1 47 1 49 1 98 1 148 1 15 1 188 1 175 1 225 1 
58 1 211 1 91 1 159 1 98 1 15 1 187 1 188 1 73 1 192 1 225 1 41 1 101 1 78 1 19 1 231 1 202 2 47 1 49 1 148 1 
101 1 58 1 78 1 91 1 211 1 202 2 159 1 47 1 49 1 98 1 148 1 15 1 188 1 160 1 225 1 
117 1 101 2 58 2 78 2 91 2 211 2 202 4 159 2 47 2 49 2 98 2 148 2 15 2 188 2 74 1 160 1 225 2 
101 1 58 1 19 1 78 1 91 1 211 1 202 2 159 1 47 1 49 1 98 1 148 1 15 1 187 1 188 1 73 1 128 1 192 2 41 2 225 1 
116 1 
35 1 19 1 180 2 73 2 
65 1 19 1 180 2 73 2 
115 1 116 1 58 1 180 2 181 1 59 1 65 1 66 1 67 1 15 1 187 1 188 1 73 2 130 1 192 1 78 1 136 1 139 1 143 1 202 3 148 2 91 1 211 1 30 1 31 1 159 1 98 1 35 1 220 2 100 1 225 1 41 1 226 1 161 1 101 1 227 1 107 2 46 1 47 1 170 1 49 1 175 1 177 1 
117 1 98 1 49 1 58 1 74 1 
116 1 58 1 180 2 181 1 59 1 65 1 15 1 187 1 188 1 73 3 128 1 190 1 192 1 16 1 132 1 78 1 138 3 202 2 203 1 148 3 205 3 151 1 88 3 210 1 91 1 211 1 31 1 93 4 213 3 159 1 216 1 218 1 98 1 35 1 225 1 41 1 101 1 227 1 105 1 164 1 107 2 46 1 47 1 49 1 177 1 
117 1 101 1 58 1 78 1 91 1 211 1 202 2 159 1 47 1 49 1 98 1 148 1 15 1 188 1 74 1 225 1 

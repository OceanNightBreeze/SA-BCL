#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 25 233 182 112 185 231 135 167 136 183 170 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ArrayIndexOutOfBoundsException 91 131 233 182 112 185 231 135 167 136 183 170 70 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 118 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V ERROR java.lang.NullPointerException 189 218 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V ERROR java.lang.NullPointerException 25 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V ERROR java.lang.NullPointerException 25 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V ERROR java.lang.NullPointerException 25 233 182 112 185 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V ERROR java.lang.NullPointerException 25 233 44 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I | OPERATOR | 7553 | * -> -
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module; | ASSIGN | 5352 | = null
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4663 | = null
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 25362 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8937 | if (x) -> if (!x)
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V | STATEMENT | 9218 | stmt -> ;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 12417 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 1 143 1 46 1 20 1 109 1 195 1 
232 1 143 1 46 1 20 1 195 1 
122 1 36 2 108 1 
224 1 46 1 112 1 225 1 78 1 37 1 132 1 117 1 242 3 217 1 229 1 120 1 182 1 147 2 172 1 107 1 173 1 256 1 209 1 
46 1 112 2 225 1 78 1 132 1 117 1 242 3 217 1 8 1 182 1 147 1 185 1 172 1 107 1 173 1 256 1 
225 1 78 3 117 1 242 2 217 2 147 1 172 2 202 1 107 1 173 1 
46 1 112 1 225 1 78 2 132 1 117 1 242 4 217 1 8 1 182 1 147 2 68 1 172 2 107 1 173 1 256 1 
129 1 225 1 117 1 173 1 
225 1 78 1 117 1 242 2 217 2 137 1 147 1 28 1 172 1 107 1 173 1 
224 1 46 2 112 1 78 1 132 1 117 1 242 3 81 1 217 1 195 1 229 1 120 1 182 1 147 1 44 1 172 1 107 1 173 1 256 2 209 1 
224 1 46 2 112 1 78 1 132 1 117 1 242 3 217 1 195 1 229 1 120 1 182 1 147 1 44 1 172 1 107 1 173 1 256 2 209 1 
46 1 3 1 225 1 4 1 78 1 117 1 242 2 217 1 81 1 195 1 119 1 147 1 44 1 172 1 107 1 173 1 256 1 
46 1 225 1 4 1 78 1 117 1 242 2 179 1 217 1 81 1 195 1 119 1 147 1 44 1 172 1 107 1 173 1 256 1 
46 1 35 1 225 1 4 1 78 1 117 1 242 2 50 1 217 1 195 1 119 1 147 1 44 1 172 1 107 1 173 1 256 1 97 1 
46 1 35 1 225 1 4 1 78 1 117 1 242 2 50 1 81 1 217 1 195 1 119 1 147 1 44 1 172 1 107 1 173 1 256 1 97 1 
225 1 78 2 117 1 242 3 217 1 147 2 172 1 202 1 107 1 173 1 
225 1 78 2 172 1 242 3 117 1 217 1 196 1 64 2 173 1 16 1 
225 1 240 1 78 1 172 1 242 2 117 1 217 2 196 1 64 1 173 1 
225 1 123 1 78 1 172 1 242 2 117 1 217 1 196 1 64 1 173 1 
225 1 78 1 172 1 242 2 117 1 217 1 196 1 64 1 173 1 110 1 
46 1 112 4 225 1 101 1 6 1 78 1 117 1 242 3 217 1 64 1 196 1 182 1 168 1 124 1 172 1 173 1 208 1 256 1 
225 1 78 1 172 1 242 2 117 1 152 1 217 1 196 1 64 1 173 1 7 1 
165 3 42 1 175 1 
165 1 
1 1 2 2 131 2 5 3 6 1 133 3 135 1 136 1 9 3 8 1 10 3 11 1 13 1 138 1 139 2 16 1 17 1 18 1 19 1 145 4 22 2 26 1 28 1 30 2 29 2 150 3 32 1 153 5 155 2 156 1 157 3 39 1 161 4 166 1 167 1 170 1 171 4 44 1 46 2 178 2 53 2 182 1 183 1 185 1 186 1 187 3 58 1 190 1 59 2 193 4 62 1 64 2 196 1 195 1 198 1 199 1 200 2 66 1 201 1 68 1 202 1 69 1 76 14 75 1 77 2 78 4 216 1 217 5 83 5 84 3 86 1 220 3 91 2 221 4 94 3 98 1 227 6 104 2 231 1 105 2 232 2 233 2 106 3 235 1 238 2 113 3 112 2 114 1 242 4 117 1 245 3 121 1 123 2 125 1 254 3 
190 1 59 2 1 1 2 2 131 2 193 4 6 1 5 2 133 2 135 1 62 1 195 1 64 1 196 1 136 1 8 1 9 3 10 3 11 1 199 1 13 1 200 2 138 1 66 1 139 2 201 1 202 1 69 1 16 1 17 1 18 1 19 1 145 4 76 4 75 1 22 2 77 2 78 2 216 1 217 3 26 1 83 5 84 3 86 1 29 2 220 3 91 2 150 3 221 4 32 1 153 5 155 2 94 3 157 3 98 1 227 6 104 2 39 1 161 4 231 1 232 2 105 2 166 1 167 1 233 2 170 1 106 2 44 1 171 4 235 1 238 2 46 2 112 2 113 3 114 1 178 2 117 1 242 3 53 2 121 1 182 1 123 2 183 1 185 1 186 1 187 3 254 3 
121 1 17 1 145 4 66 1 114 1 183 1 193 4 170 1 186 1 216 1 62 1 16 1 
191 1 1 1 193 4 6 1 135 1 62 1 64 1 196 1 136 1 14 2 66 1 201 1 202 1 141 1 72 2 16 1 17 1 212 1 211 1 145 4 76 3 75 1 78 2 25 1 216 1 218 1 217 3 26 1 27 1 84 2 148 1 92 1 227 1 104 2 39 1 231 1 40 1 167 1 233 1 170 1 234 1 46 1 112 1 114 1 116 1 117 1 242 3 247 1 246 1 52 1 121 1 182 1 123 1 183 1 185 1 186 1 189 2 
190 1 59 2 1 1 2 2 131 2 193 4 5 2 6 1 133 2 135 1 62 1 195 1 64 1 196 1 136 1 65 2 8 1 9 2 10 2 11 1 199 1 200 2 66 1 139 2 201 1 202 1 69 1 16 1 17 1 18 1 145 4 75 1 76 4 22 2 77 2 78 2 216 1 217 3 26 1 83 4 84 3 86 1 29 2 220 2 91 2 151 2 221 4 153 4 155 2 223 2 94 4 98 1 227 6 104 4 39 1 230 1 231 1 161 4 232 2 167 1 233 2 170 1 106 2 44 1 171 4 45 2 238 2 174 2 46 2 113 2 112 2 114 1 178 2 242 4 117 1 53 2 121 1 182 1 183 1 123 2 185 1 186 1 187 3 254 2 255 2 
190 1 59 2 1 1 2 2 131 2 193 4 5 2 6 1 133 2 135 1 62 1 195 1 64 1 196 1 136 1 65 2 8 1 9 2 10 2 11 1 199 1 13 1 200 2 66 1 139 2 201 1 202 1 69 1 16 1 17 1 18 1 145 4 75 1 76 4 22 2 77 2 23 1 78 2 216 1 217 3 26 1 83 4 84 3 86 1 29 2 220 2 91 2 151 2 221 4 153 4 155 2 223 2 94 4 98 1 227 6 104 4 39 1 230 1 231 1 161 4 232 2 167 1 233 2 170 1 106 2 44 1 171 4 45 2 238 2 174 2 46 2 113 2 112 2 114 1 178 2 242 3 117 1 53 2 121 1 182 1 183 1 123 2 185 1 186 1 187 3 254 2 255 2 
59 2 1 1 2 2 131 2 193 4 6 1 5 2 133 2 135 1 62 1 195 1 64 1 196 1 136 1 8 1 9 3 10 3 11 1 199 1 200 2 138 1 66 1 139 2 201 1 202 1 69 1 16 1 17 1 18 1 145 4 76 4 75 1 22 2 77 2 78 2 216 1 217 3 26 1 83 5 84 3 86 1 29 2 220 3 91 2 150 3 221 4 32 1 153 5 155 2 94 3 157 3 160 1 227 6 104 2 39 1 161 4 231 1 232 2 105 2 166 1 167 1 233 2 170 1 106 2 44 1 171 4 235 1 111 1 238 2 46 2 112 2 113 3 114 1 178 2 117 1 242 3 53 2 121 1 182 1 250 1 123 2 183 1 185 1 186 1 187 3 254 3 
145 1 114 1 183 1 193 1 170 1 
190 1 59 2 1 1 2 2 131 2 193 4 6 1 5 2 133 2 135 1 62 1 195 1 64 1 196 1 136 1 8 1 9 3 10 3 11 1 199 1 200 2 138 1 66 1 139 2 201 1 202 1 69 1 16 1 17 1 18 1 19 1 145 4 76 4 75 1 22 2 77 2 78 2 217 3 26 1 83 5 84 3 86 1 29 2 220 3 91 2 150 3 221 4 32 1 153 5 155 2 94 3 157 3 98 1 160 1 227 6 104 2 39 1 161 4 231 1 232 2 105 2 166 1 167 1 233 2 170 1 106 2 44 1 171 4 235 1 111 1 238 2 46 2 112 2 113 3 114 1 178 2 117 1 242 3 53 2 121 1 182 1 123 2 183 1 185 1 186 1 187 3 254 3 
190 1 59 2 1 1 2 2 131 2 193 4 6 1 5 2 133 2 135 1 62 1 195 1 64 1 196 1 136 1 8 1 9 3 10 3 11 1 199 1 200 2 138 1 66 1 139 2 201 1 202 1 69 1 71 1 16 1 17 1 18 1 19 1 145 4 76 4 75 1 22 2 77 2 78 2 217 3 26 1 83 5 84 3 86 1 29 2 220 3 91 2 150 3 221 4 32 1 153 5 155 2 94 3 157 3 98 1 160 1 227 6 104 2 39 1 161 4 231 1 232 2 105 2 166 1 167 1 233 2 106 2 44 1 171 4 235 1 111 1 238 2 46 2 112 2 113 3 114 1 178 2 117 1 242 3 53 2 121 1 182 1 123 2 183 1 185 1 186 1 187 3 254 3 
0 1 1 1 2 2 130 1 131 2 5 7 6 1 133 7 135 1 136 1 9 4 8 1 10 4 11 1 138 2 139 2 16 1 17 1 18 1 145 4 22 2 26 1 29 2 150 4 151 2 32 2 153 6 155 2 157 4 160 1 39 1 161 6 166 2 167 1 170 1 171 6 44 1 45 2 174 2 46 2 178 2 53 2 182 1 183 1 185 1 186 1 187 3 190 1 59 2 193 4 62 1 196 6 64 6 195 1 65 2 199 6 200 2 66 1 201 6 202 1 69 1 204 1 70 1 73 1 75 1 76 6 77 2 78 7 216 1 217 8 83 6 84 3 86 1 88 1 220 4 91 2 221 4 94 6 223 2 98 1 227 6 104 4 230 1 231 1 105 2 232 2 233 2 106 7 235 2 111 1 238 2 113 4 112 2 114 1 115 1 242 13 117 6 121 1 123 2 254 4 255 2 
206 1 
1 1 2 2 131 2 5 2 6 1 133 2 135 1 136 1 9 3 8 1 10 3 11 1 138 1 13 1 139 2 16 1 17 1 18 1 19 1 145 4 22 2 26 1 28 1 29 2 150 3 32 1 153 5 155 2 157 3 160 1 39 1 161 4 166 1 167 1 170 1 171 4 44 1 46 2 178 2 53 2 182 1 183 1 185 2 186 1 187 3 190 1 59 2 193 4 62 1 196 1 64 1 195 1 199 1 200 2 66 1 201 1 202 1 69 1 75 1 76 4 77 2 78 2 216 1 217 4 83 5 84 3 86 1 88 1 220 3 91 2 221 4 94 3 98 1 227 6 104 2 231 1 105 2 232 2 233 2 106 2 235 1 238 2 111 1 113 3 112 3 114 1 242 3 117 1 121 1 123 2 254 3 
1 1 2 2 131 2 5 2 132 1 133 2 135 1 136 1 9 2 8 1 10 2 11 1 13 1 139 2 17 1 18 1 144 1 145 4 22 2 23 1 26 1 147 1 29 2 31 2 151 2 153 4 155 2 39 1 161 4 164 1 167 1 170 1 171 4 44 1 45 2 174 2 46 2 49 1 178 2 51 1 53 2 55 2 182 1 183 1 185 1 186 1 187 3 188 1 190 1 59 2 193 4 62 1 195 1 65 2 199 1 200 2 66 1 201 1 202 1 69 1 76 4 75 1 213 1 77 2 214 2 78 2 216 1 217 3 83 4 84 3 86 1 220 2 91 2 221 4 93 1 94 4 223 2 98 1 99 1 227 6 104 4 228 1 231 1 230 1 232 2 233 2 106 2 107 1 238 2 239 1 112 2 113 2 114 1 117 1 242 3 121 1 251 2 123 2 255 2 254 2 128 2 
76 1 85 1 156 1 
76 1 15 1 
46 1 76 1 4 1 50 1 227 1 195 1 181 1 119 1 90 1 187 1 222 1 142 1 
46 1 76 1 4 1 227 1 222 1 195 1 119 1 
76 1 15 1 
46 1 76 1 187 1 60 1 227 1 195 1 
76 1 79 1 
76 1 194 1 
76 1 15 1 
76 1 194 1 
76 1 194 1 
148 1 76 1 24 1 127 1 
212 1 100 1 76 1 
76 2 78 1 117 1 242 2 61 1 217 1 104 2 197 1 41 1 147 1 253 1 201 1 107 1 207 1 72 1 15 1 210 2 
215 1 
129 1 147 1 78 1 201 1 253 1 242 2 117 1 61 1 207 1 217 1 107 1 72 1 197 1 
199 1 147 1 106 1 5 1 78 1 201 1 133 1 242 2 117 1 217 1 107 1 
78 1 5 2 117 1 242 3 133 2 244 1 217 1 199 1 147 2 201 1 106 2 107 1 
157 1 59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 151 1 32 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 221 3 254 1 153 2 155 1 94 1 
157 1 59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 205 2 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 3 254 1 153 2 155 1 94 1 
21 1 78 1 5 1 117 1 242 2 133 1 244 1 217 1 199 1 147 1 201 1 106 1 107 1 
157 1 59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 205 2 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 3 254 1 153 2 155 1 94 1 
157 1 59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 174 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 3 254 1 153 2 155 1 94 2 
157 1 59 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 2 254 1 153 2 155 1 94 2 
157 1 59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 174 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 3 254 1 153 2 155 1 94 2 
157 1 59 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 32 1 221 2 254 1 153 2 155 1 94 2 
157 1 59 1 131 1 5 1 133 1 104 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 88 1 220 1 91 1 150 1 221 2 254 1 153 2 155 1 94 1 
157 1 59 1 131 1 5 1 133 1 104 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 221 2 254 1 153 2 155 1 94 1 
59 1 4 1 131 1 5 2 133 2 195 1 9 1 10 1 199 1 68 1 201 1 139 1 69 1 142 2 75 1 76 3 22 1 77 1 78 2 217 4 83 2 147 2 28 1 86 1 29 1 220 1 90 2 91 1 151 1 221 2 222 1 153 2 155 1 94 1 156 3 96 1 35 2 38 1 227 2 104 2 233 1 106 2 44 1 107 1 237 1 238 1 46 1 113 1 117 1 242 3 178 1 179 1 244 1 50 3 181 2 119 1 53 1 123 1 126 1 187 2 254 1 
59 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 3 153 2 155 1 94 1 
199 1 147 2 106 2 5 2 78 1 201 1 133 2 242 3 117 1 244 1 217 1 107 1 
59 2 2 2 131 2 5 1 132 1 133 1 195 1 9 2 10 2 11 1 199 1 200 2 201 1 139 2 69 1 144 1 76 4 213 1 22 2 214 2 77 2 78 1 217 2 83 4 84 3 147 1 86 1 28 1 29 2 31 2 220 2 91 2 221 4 93 1 153 4 94 2 155 2 99 1 227 6 228 1 39 1 104 4 161 4 232 2 164 1 233 2 106 1 44 1 171 4 45 2 107 1 238 2 239 1 46 2 112 1 113 2 49 1 117 1 242 3 178 2 51 1 53 2 55 2 182 1 251 2 123 2 185 1 188 1 187 3 254 2 128 2 
59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 3 153 2 155 1 94 1 223 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 205 2 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 2 1 131 1 5 1 132 1 133 1 9 1 10 1 11 1 199 1 200 1 201 1 139 1 76 2 22 1 214 1 77 1 78 1 217 1 83 2 84 3 147 1 29 1 31 1 220 1 91 1 221 2 153 2 94 1 155 1 99 1 227 3 39 1 104 2 161 2 232 1 233 1 106 1 171 2 45 1 107 1 238 1 46 1 112 1 113 1 117 1 242 3 178 1 53 1 55 1 182 1 251 1 123 1 185 1 254 1 128 1 
78 1 5 1 117 1 242 2 133 1 244 1 217 1 55 1 199 1 147 1 201 1 106 1 107 1 
59 1 2 1 131 1 6 1 65 1 9 1 10 1 11 1 200 1 139 1 16 1 76 2 22 1 214 1 77 1 83 2 84 3 29 1 31 1 220 1 151 1 91 1 221 2 153 2 94 2 223 1 155 1 99 1 227 3 39 1 104 2 161 2 232 1 233 1 171 2 45 1 238 1 174 1 46 1 112 1 113 1 242 1 178 1 53 1 55 1 182 1 251 1 123 1 185 1 255 1 254 1 128 1 
59 1 2 1 131 1 5 1 132 1 133 1 9 1 10 1 11 1 199 1 200 1 201 1 139 1 76 2 22 1 214 1 77 1 78 1 217 1 83 2 84 3 147 1 29 1 88 1 31 1 220 1 91 1 221 2 153 2 94 1 155 1 99 1 227 3 104 1 39 1 161 2 232 1 233 1 106 1 171 2 45 1 107 1 238 1 46 1 112 1 113 1 117 1 242 3 178 1 53 1 55 1 182 1 251 1 123 1 185 1 254 1 128 1 
59 1 2 1 131 1 6 1 5 1 133 1 64 1 196 1 9 1 10 1 11 1 199 1 200 1 201 1 139 1 16 1 76 2 22 1 214 1 77 1 78 1 217 1 83 2 84 3 29 1 88 1 31 1 220 1 91 1 221 2 153 2 94 1 155 1 99 1 227 3 104 1 39 1 161 2 232 1 233 1 106 1 171 2 45 1 238 1 46 1 112 1 113 1 117 1 242 3 178 1 53 1 55 1 182 1 251 1 123 1 185 1 254 1 128 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 3 153 2 155 1 94 1 223 1 
59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 254 1 221 3 153 2 155 1 94 1 
59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 254 1 221 3 153 2 155 1 94 1 
59 1 2 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 254 1 221 3 153 2 155 1 94 1 
59 1 2 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 1 223 1 
59 1 2 1 131 1 5 1 133 1 104 2 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 254 1 221 3 153 2 155 1 94 1 
169 1 76 1 171 1 45 1 161 1 
169 1 200 1 76 1 171 1 161 1 
162 1 12 1 76 1 171 1 45 1 161 1 
157 1 59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 150 1 151 1 32 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 2 1 4 1 131 1 5 1 133 1 195 1 65 1 9 1 10 1 199 1 200 1 201 1 139 1 69 1 142 3 76 2 75 1 22 1 77 1 78 1 217 2 83 2 147 1 86 1 29 1 220 1 90 3 91 1 151 1 221 2 222 1 153 2 155 1 94 2 223 1 35 1 227 3 104 2 161 2 232 1 233 1 106 1 171 2 44 1 45 1 107 1 238 1 174 1 46 1 113 1 117 1 242 2 178 1 244 1 50 4 181 3 119 1 53 1 123 1 187 3 254 1 255 1 
59 1 131 1 5 1 133 1 104 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 88 1 220 1 91 1 221 2 254 1 153 2 155 1 94 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 2 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 205 2 107 1 15 1 238 1 113 1 22 1 78 1 79 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 3 153 2 155 1 94 1 223 1 
59 1 131 1 5 1 133 1 104 2 65 1 9 1 10 1 199 1 106 1 201 1 205 2 107 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 2 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 3 65 1 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 174 1 113 1 22 1 78 1 242 2 117 1 178 1 244 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 151 1 254 1 255 1 221 3 153 2 155 1 94 2 223 1 
59 1 131 1 5 1 133 1 104 3 9 1 10 1 199 1 106 1 201 1 107 1 15 1 238 1 113 1 22 1 78 1 242 2 117 1 178 1 217 1 53 1 83 2 147 1 29 1 220 1 91 1 221 3 254 1 153 2 155 1 94 1 
224 1 35 1 3 1 4 1 227 2 195 1 229 1 67 1 233 1 139 1 201 1 44 1 69 1 107 1 72 1 209 1 142 2 46 1 112 1 75 1 76 4 77 1 78 1 242 2 117 1 80 1 243 1 50 3 82 1 217 2 180 1 181 2 248 1 119 1 120 1 147 1 86 1 123 1 90 2 187 2 156 3 
35 1 4 1 159 1 226 1 227 2 195 1 7 1 67 1 233 1 201 1 139 1 69 1 107 1 72 1 142 2 46 1 176 1 76 4 214 1 77 1 78 1 242 2 117 1 80 1 243 1 50 3 82 1 217 1 180 1 181 2 248 1 119 1 251 1 147 1 86 1 123 1 31 1 90 2 152 1 187 2 34 1 93 1 128 1 156 3 
157 3 5 1 133 1 9 3 163 1 10 3 166 3 199 1 138 1 201 1 106 1 235 1 107 1 113 3 78 1 117 1 242 2 217 1 83 3 147 1 220 3 150 3 254 3 32 3 153 3 94 3 
157 1 5 1 133 1 9 1 10 1 166 1 199 1 138 1 201 1 106 1 235 1 107 1 110 1 113 1 78 1 117 1 242 2 217 1 83 1 147 1 220 1 150 1 254 1 32 1 153 1 94 1 
78 1 5 1 117 1 242 2 133 1 217 1 166 1 199 1 138 1 147 1 201 1 106 1 107 1 110 1 
157 1 5 1 133 1 161 1 9 1 105 1 10 1 166 1 199 1 169 1 138 1 201 1 106 1 171 1 235 1 107 1 15 1 113 1 76 1 78 1 117 1 242 2 217 1 83 1 147 1 89 1 220 1 150 1 254 1 32 1 153 1 94 1 
157 2 59 1 131 1 5 1 133 1 104 1 9 2 10 2 166 1 199 1 138 1 201 1 106 1 235 1 107 1 238 1 113 2 22 1 78 1 178 1 117 1 242 2 217 1 53 1 83 3 147 1 29 1 88 1 220 2 91 1 150 2 221 2 254 2 32 1 153 3 155 1 94 2 
157 1 113 1 5 1 78 1 133 1 242 2 117 1 217 1 9 1 83 1 10 1 166 1 199 1 147 1 138 1 106 1 201 1 220 1 150 1 107 1 235 1 32 1 254 1 153 1 94 1 
192 1 241 1 37 1 242 1 54 1 
102 1 48 1 242 1 158 1 
102 1 242 1 154 1 
241 1 37 1 242 1 219 2 
102 1 56 1 
46 1 86 1 69 1 195 1 
35 1 90 1 50 1 187 1 181 1 142 1 
35 1 90 1 50 1 187 1 222 1 181 1 142 1 
46 1 214 1 195 1 251 1 31 1 33 1 93 1 
113 1 36 1 177 1 91 1 221 1 104 1 153 2 
113 1 153 1 
76 1 91 1 221 1 104 1 153 1 15 1 
113 1 153 1 
76 1 221 1 104 1 15 1 
196 1 
64 1 
64 1 
147 1 
107 1 
147 1 
129 1 47 1 146 1 103 1 78 1 117 1 242 2 217 1 219 1 184 1 87 1 201 1 149 1 203 1 57 1 72 1 
47 1 146 1 103 1 78 1 117 1 242 2 217 1 219 1 87 1 201 1 149 1 203 1 57 1 110 1 72 1 
47 2 146 2 103 2 78 2 117 2 242 4 134 1 63 1 217 2 219 2 87 2 201 2 149 2 203 2 57 2 72 2 
103 1 104 1 201 1 203 1 72 1 15 1 212 1 47 1 74 1 76 1 146 1 78 1 79 1 242 2 117 1 217 1 219 1 87 1 252 1 149 1 57 1 
95 1 
76 2 140 1 15 1 156 2 
249 1 76 2 15 1 156 2 
99 1 103 1 132 1 134 1 227 1 39 1 11 1 233 1 139 1 201 1 203 1 140 1 72 1 47 1 46 1 74 1 112 1 76 2 214 1 77 1 146 1 78 1 242 3 117 1 217 2 118 1 219 1 249 1 182 1 84 1 251 1 123 1 87 1 28 1 185 1 149 1 31 1 57 1 128 1 95 1 156 2 
129 1 87 1 184 1 201 1 117 1 
4 1 195 1 201 1 139 1 140 1 203 1 69 1 72 1 142 2 212 1 74 1 75 1 76 3 146 1 77 1 78 1 217 3 219 1 148 1 28 1 87 1 86 1 149 1 90 2 222 1 95 1 156 2 35 1 103 1 227 1 233 1 44 1 46 1 47 1 117 1 242 2 50 3 181 2 119 1 249 1 123 1 187 2 57 1 
47 1 146 1 103 1 78 1 117 1 242 2 134 1 217 1 219 1 87 1 201 1 149 1 203 1 57 1 72 1 
103 1 201 1 203 1 72 1 15 1 47 1 74 1 76 1 146 1 78 1 242 2 117 1 79 1 217 1 219 1 87 1 149 1 57 1 
47 1 146 1 103 1 78 1 117 1 242 2 63 1 217 1 219 1 87 1 201 1 149 1 203 1 57 1 72 1 
129 1 47 2 146 2 103 2 78 2 117 2 242 4 63 1 217 2 219 2 184 1 87 2 201 2 149 2 203 2 57 2 72 2 
129 1 211 1 14 1 116 1 92 1 52 1 
212 1 76 1 116 1 78 1 117 1 242 2 218 1 217 1 104 1 52 1 219 1 43 1 14 1 201 1 236 1 57 1 72 1 189 1 
212 1 211 1 76 2 116 1 24 1 78 1 117 1 242 2 218 1 217 1 104 2 52 1 219 1 14 1 201 1 92 1 57 1 72 1 15 1 189 2 
35 1 4 1 227 1 195 1 104 1 14 1 233 1 201 1 44 1 69 1 141 1 72 1 142 2 212 1 211 1 46 1 76 1 75 1 116 1 78 1 25 1 242 2 117 1 50 3 218 1 217 3 181 2 219 1 52 1 119 1 27 1 148 1 123 1 28 1 86 1 90 2 187 2 222 1 57 1 92 1 189 1 
40 1 36 1 14 1 247 1 104 1 189 1 
15 1 27 1 
141 1 15 1 
211 1 116 1 78 1 25 1 117 1 242 2 247 1 217 1 104 1 52 1 219 1 40 1 14 2 201 1 92 1 57 1 72 1 189 1 
211 1 116 1 78 1 25 1 117 1 242 2 247 1 217 1 104 1 52 1 219 1 40 1 14 2 201 1 92 1 57 1 72 1 189 1 
25 1 
132 1 227 1 104 2 39 1 40 1 14 2 233 1 201 1 141 1 72 1 212 1 211 1 46 1 112 1 76 1 116 1 78 1 25 1 242 3 117 1 247 1 218 1 217 1 219 1 52 1 27 1 182 1 84 2 148 1 123 1 185 1 57 1 92 1 189 2 
129 1 211 1 14 1 116 1 92 1 52 1 
35 1 4 1 227 1 195 1 104 2 40 1 14 2 233 1 201 1 44 1 141 1 72 1 142 2 212 1 211 1 46 1 76 1 75 1 116 1 78 1 25 1 242 2 117 1 50 2 247 1 218 1 217 3 181 2 219 1 52 1 119 1 27 1 148 1 123 1 28 1 86 1 90 2 187 2 57 1 92 1 189 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 225 59 211 140 147 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 122 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 225 59 211 140 214 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V | CONDITION | 10988 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8568 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | RETURN | 10663 | return null
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 15344 | 3 -> 2
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | OPERATOR | 12215 | % -> >>
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 6372 | return null
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 243 1 239 1 14 1 7 1 
113 1 105 2 142 1 
0 1 243 1 239 1 234 1 14 1 7 1 
96 1 198 1 221 2 224 2 39 1 128 1 129 1 244 1 231 2 45 3 93 2 
236 1 198 1 2 1 137 1 36 1 123 1 221 1 222 1 224 4 39 1 128 1 129 1 243 1 231 2 45 2 93 2 
39 1 198 1 61 1 128 1 
198 1 29 1 221 2 224 2 39 1 128 1 129 1 231 1 45 1 93 1 167 1 
236 1 50 1 2 1 108 1 35 1 137 2 209 1 222 1 221 1 224 3 39 1 227 1 128 1 129 1 243 2 231 1 14 1 45 1 150 1 93 1 
236 1 2 1 108 1 35 1 137 2 209 1 222 1 221 1 224 3 39 1 227 1 128 1 129 1 243 2 231 1 14 1 45 1 150 1 93 1 
198 1 50 1 137 1 35 1 221 1 224 2 82 1 39 1 128 1 129 1 243 1 65 1 231 1 14 1 45 1 132 1 93 1 
198 1 50 1 31 1 137 1 35 1 221 1 224 2 82 1 39 1 128 1 129 1 243 1 65 1 231 1 14 1 45 1 93 1 
198 1 174 1 175 1 137 1 35 1 178 1 221 1 224 2 82 1 39 1 128 1 129 1 243 1 65 1 231 1 14 1 45 1 93 1 
198 1 50 1 174 1 175 1 137 1 35 1 178 1 221 1 224 2 82 1 39 1 128 1 129 1 243 1 65 1 231 1 14 1 45 1 93 1 
198 1 96 1 221 1 224 3 39 1 128 1 129 1 231 2 45 2 93 1 
216 1 198 1 221 1 224 3 39 1 128 1 62 2 181 1 45 2 93 1 
224 2 39 1 198 1 128 1 181 1 62 1 45 1 95 1 221 2 93 1 
198 1 217 1 221 1 224 2 39 1 128 1 62 1 181 1 45 1 93 1 
16 1 198 1 2 1 108 1 137 1 209 1 222 1 221 1 224 3 39 1 227 1 128 1 62 1 181 1 243 1 45 1 150 1 93 1 
16 1 198 1 2 2 55 1 137 1 36 1 221 1 222 1 224 3 39 1 128 1 62 1 181 1 243 1 45 1 93 1 
224 2 39 1 198 1 128 1 181 1 62 1 176 1 45 1 221 1 93 1 
16 1 198 1 2 4 107 1 118 1 120 1 137 1 221 1 222 1 224 3 39 1 73 1 128 1 62 1 181 1 243 1 45 1 93 1 
224 2 39 1 198 1 87 1 128 1 181 1 62 1 183 1 45 1 221 1 93 1 
97 3 138 1 92 1 
97 1 
1 1 2 2 5 3 6 1 121 1 7 2 123 1 8 3 124 1 9 2 125 2 126 14 128 1 127 1 14 1 16 1 133 1 134 2 18 1 21 3 140 1 23 1 149 1 25 1 26 5 151 1 154 1 30 3 29 1 32 2 33 2 157 1 156 2 35 1 36 1 38 1 163 3 162 4 45 3 168 5 171 4 52 1 55 1 57 3 59 1 60 1 62 2 181 1 184 1 66 6 67 1 68 1 188 4 189 2 70 2 191 3 71 1 192 1 75 3 74 2 196 3 76 1 197 3 77 2 199 1 202 1 201 3 204 4 207 3 208 4 210 2 211 1 85 1 214 1 91 1 216 1 96 1 217 2 98 3 99 2 221 5 222 1 224 4 225 1 103 2 102 1 229 3 233 2 238 4 111 3 241 2 243 2 245 2 
1 1 2 2 189 2 188 4 5 2 6 1 7 2 191 3 121 1 192 1 8 3 124 1 125 2 9 2 126 4 127 1 128 1 74 2 75 3 196 3 76 1 197 3 14 1 77 2 16 1 134 2 199 1 18 1 201 3 202 1 204 4 207 3 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 5 151 1 154 1 216 1 96 1 217 2 30 3 33 2 32 2 156 2 157 1 35 1 36 1 98 2 99 2 222 1 221 3 224 3 225 1 163 3 162 4 102 1 103 2 229 3 233 2 45 2 168 5 171 4 238 4 52 1 55 1 111 3 59 1 60 1 241 2 62 1 181 1 243 2 245 2 66 6 184 1 67 1 68 1 
216 1 204 4 6 1 140 1 192 1 124 1 162 4 214 1 91 1 184 1 151 1 68 1 
216 1 204 4 6 1 140 1 223 1 192 1 124 1 162 4 214 1 91 1 184 1 151 1 68 1 
2 2 188 2 6 1 7 2 191 4 121 1 192 1 124 1 126 8 127 1 128 1 130 2 76 1 14 1 16 1 199 1 202 1 204 4 19 2 208 4 20 4 140 1 213 4 211 1 85 1 86 1 146 2 214 1 90 2 91 1 151 1 152 4 153 1 216 1 96 1 217 2 155 1 35 1 36 1 160 3 221 3 222 1 224 3 225 1 162 4 101 2 102 1 42 1 44 2 232 1 46 1 45 2 237 1 238 2 52 1 55 1 56 2 111 4 59 1 62 1 181 1 243 2 245 2 66 4 184 1 67 1 68 1 
2 2 189 2 188 4 5 2 6 1 191 3 7 2 121 1 8 2 192 1 124 1 9 2 125 2 126 4 127 1 128 1 74 2 75 2 196 4 76 1 197 2 14 1 16 1 134 2 199 1 18 1 201 2 202 1 204 4 205 2 207 2 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 4 151 1 94 1 216 1 96 1 217 2 30 2 33 2 32 2 156 2 35 1 36 1 98 2 99 2 221 3 222 1 224 3 225 1 163 2 162 4 102 1 103 2 228 2 229 2 43 2 233 2 45 2 168 4 171 4 52 1 238 4 55 1 111 3 59 1 115 2 241 2 62 1 181 1 64 2 243 2 245 2 66 6 184 1 67 1 68 1 
1 1 2 2 189 2 188 4 5 2 6 1 7 2 191 3 121 1 192 1 8 3 124 1 125 2 9 2 126 4 127 1 128 1 74 2 75 3 196 3 76 1 197 3 14 1 77 2 16 1 134 2 199 1 18 1 201 3 202 1 204 4 207 3 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 5 28 1 151 1 154 1 216 1 96 1 217 2 30 3 29 1 33 2 32 2 156 2 157 1 35 1 36 1 98 2 99 2 222 1 221 4 225 1 224 3 163 3 162 4 102 1 103 2 229 3 233 2 45 2 168 5 171 4 238 4 52 1 55 1 111 3 59 1 60 1 241 2 62 1 181 1 243 2 245 2 66 6 184 1 67 1 68 1 
83 1 
117 1 2 2 5 2 6 1 7 2 121 1 8 2 124 1 125 2 9 2 10 1 126 4 11 2 128 1 127 1 129 1 14 1 15 2 134 2 18 1 21 2 140 1 23 1 149 1 26 4 151 1 30 2 32 2 33 2 156 2 158 2 35 1 159 1 36 1 162 4 163 2 43 2 166 2 45 2 168 4 48 1 170 1 171 4 52 1 55 1 59 1 64 2 184 1 66 6 185 2 67 1 68 1 186 1 188 4 189 2 191 3 192 1 193 1 75 2 74 2 196 4 76 1 197 2 199 1 202 1 201 2 204 4 205 2 207 2 206 1 208 4 210 2 211 1 85 1 214 1 91 1 94 1 96 1 217 2 98 2 99 2 222 1 221 3 225 1 224 3 228 2 103 2 102 1 229 2 231 1 230 1 233 2 236 1 238 4 110 1 111 3 115 2 241 2 243 2 245 2 
162 1 214 1 204 1 151 1 140 1 
1 1 2 2 189 2 188 4 5 2 7 2 191 3 121 1 192 1 8 3 124 1 125 2 9 2 126 4 127 1 128 1 74 2 75 3 196 3 76 1 197 3 14 1 77 2 16 1 134 2 199 1 18 1 201 3 202 1 204 4 207 3 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 5 151 1 154 1 216 1 96 1 217 2 30 3 33 2 32 2 156 2 157 1 35 1 36 1 98 2 99 2 222 1 221 3 224 3 225 1 163 3 162 4 102 1 103 2 229 3 233 2 45 2 168 5 171 4 238 4 52 1 55 1 111 3 59 1 60 1 241 2 62 1 181 1 243 2 245 2 66 6 184 1 67 1 68 1 
1 1 2 2 189 2 188 4 5 2 7 2 191 3 121 1 192 1 8 3 124 1 125 2 9 2 126 4 127 1 128 1 74 2 75 3 196 3 76 1 197 3 14 1 77 2 16 1 134 2 199 1 18 1 201 3 202 1 204 4 207 3 208 4 21 2 140 1 210 2 211 1 85 1 23 1 147 1 149 1 91 1 26 5 151 1 154 1 216 1 96 1 217 2 30 3 33 2 32 2 156 2 157 1 35 1 36 1 98 2 99 2 222 1 221 3 224 3 225 1 163 3 162 4 102 1 103 2 229 3 233 2 45 2 168 5 171 4 238 4 52 1 55 1 111 3 59 1 60 1 241 2 62 1 181 1 243 2 245 2 66 6 184 1 67 1 68 1 
1 1 2 2 189 2 188 4 5 2 6 1 7 2 191 3 121 1 122 1 192 1 8 3 124 1 125 2 9 2 126 4 127 1 128 1 74 2 75 3 196 3 76 1 197 3 14 1 77 2 16 1 134 2 199 1 18 1 201 3 202 1 204 4 207 3 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 5 151 1 154 1 216 1 96 1 217 2 30 3 33 2 32 2 156 2 157 1 34 1 35 1 36 1 98 2 99 2 222 1 221 3 225 1 224 3 163 3 162 4 102 1 103 2 229 3 233 2 45 2 168 5 171 4 238 4 52 1 55 1 111 3 59 1 241 2 62 1 181 1 243 2 245 2 66 6 184 1 67 1 68 1 
2 2 189 2 188 4 5 2 6 1 191 3 7 2 121 1 8 2 192 1 124 1 9 2 125 2 126 4 127 1 128 1 74 2 75 2 196 4 76 1 197 2 14 1 16 1 134 2 199 1 18 1 201 2 202 1 204 4 205 2 207 2 208 4 21 2 140 1 210 2 211 1 85 1 214 1 23 1 149 1 91 1 26 4 151 1 94 1 216 1 96 1 217 2 30 2 33 2 32 2 156 2 35 1 36 1 98 2 99 2 221 3 222 1 224 3 225 1 163 2 162 4 102 1 103 2 228 2 229 2 43 2 233 2 45 2 168 4 171 4 52 1 238 4 55 1 111 3 59 1 115 2 241 2 62 1 181 1 64 2 243 2 245 2 66 6 184 1 67 1 68 1 
126 1 187 1 25 1 
126 1 141 1 
212 1 126 1 
212 1 126 1 
126 1 135 1 243 1 66 1 14 1 111 1 
17 1 3 1 53 1 175 1 111 1 82 1 126 1 114 1 65 1 243 1 14 1 66 1 
72 1 126 1 
82 1 126 1 53 1 243 1 65 1 66 1 14 1 
212 1 126 1 
126 1 141 1 
126 1 141 1 
152 1 126 1 54 1 109 1 
226 1 126 1 20 1 
202 1 119 1 19 1 208 2 37 2 221 1 144 1 224 2 212 1 126 2 179 1 128 1 242 1 62 1 181 1 24 1 45 1 
69 1 
224 2 144 1 202 1 61 1 242 1 119 1 128 1 181 1 62 1 19 1 24 1 45 1 221 1 
224 2 202 1 128 1 129 1 149 1 231 1 98 1 5 1 45 1 21 1 221 1 
202 1 98 2 5 2 21 2 221 1 224 3 128 1 149 1 129 1 231 2 13 1 45 1 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
202 1 98 2 5 2 21 2 221 1 224 3 128 1 149 1 129 1 231 2 13 1 45 1 
117 1 2 1 186 1 189 2 188 4 5 1 121 1 7 2 191 3 8 2 9 2 125 2 10 1 126 4 193 1 11 2 127 1 128 1 129 1 75 2 74 2 196 2 197 2 14 1 15 2 134 2 199 1 202 1 201 2 205 2 206 1 207 2 208 4 21 1 210 2 149 1 26 4 217 2 29 1 30 2 32 2 33 2 156 2 159 1 35 1 158 2 98 1 99 2 222 1 221 2 224 3 163 2 102 1 103 2 229 2 230 1 166 2 231 1 233 2 45 1 168 4 48 1 170 1 236 1 171 4 238 4 55 1 110 1 111 3 241 2 243 2 245 2 185 2 66 6 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 43 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 128 1 229 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 203 2 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
202 1 80 1 98 1 5 1 21 1 221 1 224 2 128 1 149 1 129 1 231 1 13 1 45 1 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 203 2 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 72 1 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 28 1 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 128 1 229 1 129 1 75 1 74 1 196 2 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 64 1 26 2 
3 2 189 1 5 2 123 1 9 1 125 1 126 3 128 1 127 1 75 1 129 1 74 1 196 2 197 1 13 1 14 1 17 2 134 1 78 1 199 1 202 1 201 1 207 1 208 2 21 2 82 1 210 1 148 1 149 1 25 3 26 2 217 1 29 1 31 1 33 1 32 1 156 1 35 1 98 2 99 1 221 4 224 3 163 1 229 1 231 2 45 2 168 2 171 2 51 1 52 1 174 2 53 1 175 3 111 2 114 2 241 1 64 1 243 1 65 1 245 1 66 2 246 1 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
117 1 2 1 189 1 188 2 5 1 121 1 7 1 191 3 8 1 9 1 125 1 126 2 11 1 128 1 129 1 75 1 74 1 196 1 197 1 15 1 134 1 202 1 201 1 205 1 207 1 208 2 21 1 210 1 149 1 26 2 217 1 30 1 32 1 33 1 156 1 158 1 98 1 99 1 222 1 221 1 224 3 163 1 102 1 103 1 229 1 166 1 231 1 233 1 45 1 168 2 236 1 171 2 238 2 55 1 241 1 243 1 245 1 185 1 66 3 
202 1 98 1 5 1 21 1 221 1 224 2 128 1 149 1 129 1 231 1 13 1 45 1 15 1 
117 1 2 1 188 2 189 1 191 3 7 1 121 1 8 1 125 1 9 1 126 2 11 1 75 1 74 1 196 2 197 1 15 1 16 1 134 1 201 1 205 1 207 1 208 2 210 1 26 2 216 1 217 1 30 1 32 1 33 1 156 1 158 1 99 1 222 1 224 1 163 1 102 1 228 1 103 1 229 1 43 1 166 1 233 1 168 2 171 2 238 2 55 1 115 1 241 1 243 1 64 1 245 1 185 1 66 3 
117 1 2 1 189 1 188 2 5 1 121 1 7 1 191 3 8 1 9 1 125 1 126 2 11 1 128 1 129 1 75 1 74 1 196 1 197 1 15 1 134 1 202 1 201 1 205 1 207 1 208 2 21 1 210 1 149 1 26 2 28 1 217 1 30 1 32 1 33 1 156 1 158 1 98 1 99 1 222 1 221 1 224 3 163 1 102 1 103 1 229 1 166 1 231 1 233 1 45 1 168 2 236 1 171 2 238 2 55 1 241 1 243 1 245 1 185 1 66 3 
117 1 2 1 189 1 188 2 5 1 121 1 7 1 191 3 8 1 9 1 125 1 126 2 11 1 128 1 75 1 74 1 196 1 197 1 15 1 16 1 134 1 202 1 201 1 205 1 207 1 208 2 21 1 210 1 149 1 26 2 28 1 216 1 217 1 30 1 32 1 33 1 156 1 158 1 98 1 99 1 222 1 221 1 224 3 163 1 102 1 103 1 229 1 166 1 233 1 45 1 168 2 171 2 238 2 55 1 241 1 62 1 181 1 243 1 245 1 185 1 66 3 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 229 1 128 1 74 1 129 1 75 1 196 2 43 1 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 212 1 115 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
126 1 238 1 205 1 12 1 188 1 
126 1 238 1 12 1 188 1 233 1 
126 1 200 1 238 1 205 1 220 1 188 1 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
3 3 189 1 188 2 5 1 7 1 8 1 9 1 125 1 126 2 128 1 127 1 74 1 129 1 75 1 196 2 197 1 13 1 14 1 17 3 134 1 199 1 202 1 201 1 205 1 207 1 208 2 21 1 82 1 210 1 149 1 26 2 217 1 30 1 32 1 33 1 156 1 35 1 98 1 99 1 221 2 224 2 163 1 103 1 228 1 229 1 43 1 231 1 233 1 45 1 168 2 171 2 238 2 52 1 174 1 53 1 175 4 111 3 114 3 115 1 241 1 64 1 243 1 65 1 245 1 66 3 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 103 1 229 1 128 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 28 1 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 33 1 32 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 228 1 128 1 229 1 75 1 129 1 74 1 196 2 231 1 197 1 13 1 45 1 168 2 171 2 134 1 202 1 201 1 207 1 208 2 21 1 115 1 241 1 149 1 64 1 26 2 
30 1 32 1 33 1 156 1 189 1 98 1 5 1 99 1 221 1 8 1 224 2 163 1 9 1 128 1 229 1 129 1 75 1 74 1 196 1 231 1 197 1 45 1 168 2 171 3 134 1 202 1 201 1 207 1 208 3 21 1 212 1 241 1 149 1 26 2 
217 1 2 1 3 2 35 1 221 2 224 2 100 1 125 1 227 1 126 4 128 1 127 1 129 1 231 1 45 1 14 1 132 1 17 2 199 1 202 1 108 1 52 1 174 1 175 3 19 1 209 1 111 2 210 1 82 1 143 1 84 1 22 1 114 2 89 1 65 1 243 1 245 1 66 2 25 3 150 1 27 1 
217 1 219 1 3 2 158 1 221 1 224 2 100 1 125 1 126 4 104 1 11 1 128 1 127 1 164 1 129 1 131 1 166 1 231 1 45 1 14 1 17 2 199 1 202 1 174 1 206 1 175 3 19 1 111 2 82 1 143 1 210 1 84 1 22 1 87 1 114 2 89 1 65 1 243 1 183 1 245 1 185 1 66 2 25 3 27 1 
154 1 1 1 30 3 33 1 32 1 156 1 157 2 189 1 98 1 5 1 99 1 221 1 8 3 224 2 163 3 9 1 103 1 229 3 128 1 74 1 75 3 129 1 196 3 231 1 197 3 45 1 105 1 168 4 171 2 134 1 201 3 202 1 207 3 208 2 21 1 241 1 149 1 26 4 28 1 
154 1 1 1 30 3 157 3 98 1 5 1 221 1 8 3 224 2 163 3 229 3 128 1 75 3 129 1 196 3 231 1 197 3 45 1 168 3 201 3 202 1 207 3 21 1 180 1 149 1 26 3 
154 1 1 1 30 1 157 1 98 1 5 1 221 1 8 1 224 2 163 1 229 1 128 1 75 1 129 1 196 1 231 1 197 1 45 1 168 1 201 1 202 1 207 1 176 1 21 1 149 1 26 1 
1 1 202 1 176 1 157 1 98 1 5 1 21 1 221 1 224 2 128 1 149 1 129 1 231 1 45 1 
154 1 1 1 202 1 201 1 30 1 238 1 207 1 157 1 188 1 98 1 5 1 21 1 221 1 224 2 8 1 163 1 126 1 128 1 229 1 129 1 149 1 75 1 196 1 231 1 197 1 45 1 26 1 77 1 168 1 
154 1 1 1 202 1 201 1 30 1 207 1 157 1 98 1 5 1 21 1 221 1 224 2 8 1 163 1 128 1 229 1 129 1 149 1 75 1 196 1 231 1 197 1 45 1 26 1 168 1 
224 1 173 1 116 1 112 1 
224 1 244 1 81 1 4 1 235 1 
224 1 79 1 173 1 
224 1 136 2 244 1 81 1 
173 1 139 1 
17 1 114 1 174 1 3 1 175 1 111 1 
199 1 127 1 243 1 14 1 
17 1 114 1 174 1 3 1 53 1 175 1 111 1 
195 1 206 1 243 1 166 1 158 1 185 1 14 1 
171 1 9 1 40 1 229 1 208 1 26 2 105 1 
229 1 26 1 
212 1 171 1 9 1 126 1 208 1 26 1 
229 1 26 1 
212 1 171 1 126 1 208 1 
181 1 
62 1 
62 1 
231 1 
129 1 
231 1 
172 1 202 1 176 1 136 1 19 1 161 1 221 1 224 2 41 1 194 1 128 1 63 1 45 1 47 1 169 1 
172 2 202 2 136 2 19 2 161 2 221 2 224 4 240 1 41 2 194 2 128 2 63 2 165 1 45 2 47 2 169 2 
172 1 202 1 136 1 19 1 161 1 221 1 224 2 240 1 41 1 194 1 128 1 63 1 45 1 47 1 169 1 
172 1 202 1 136 1 19 1 161 1 221 1 224 2 41 1 194 1 88 1 61 1 128 1 63 1 45 1 47 1 169 1 
49 1 172 1 202 1 136 1 19 1 20 1 208 2 161 1 221 1 224 2 212 1 126 1 41 1 194 1 128 1 63 1 45 1 47 1 215 2 169 1 
58 1 
212 1 126 2 177 1 25 2 
212 1 126 2 190 1 25 2 
117 1 217 1 29 1 2 1 158 1 190 1 191 2 121 1 161 1 221 2 222 1 224 3 125 1 126 2 41 1 102 1 194 1 11 1 128 1 166 1 45 1 47 1 169 1 49 1 236 1 202 1 172 1 55 1 19 1 136 1 208 1 177 1 58 1 210 1 145 1 240 1 63 1 243 1 245 1 185 1 66 2 25 2 215 1 
202 1 172 1 88 1 61 1 128 1 
152 1 217 1 29 1 3 3 35 1 190 1 161 1 221 3 224 2 125 1 126 3 41 1 194 1 127 1 128 1 45 1 14 1 47 1 169 1 49 1 17 3 199 1 202 1 172 1 174 1 52 1 53 1 175 4 19 1 136 1 20 1 208 1 177 1 58 1 111 3 210 1 82 1 114 3 63 1 65 1 243 1 245 1 66 2 25 2 215 1 
49 1 172 1 202 1 136 1 19 1 20 2 208 1 161 1 221 1 224 2 212 1 126 3 41 1 194 1 128 1 63 1 45 1 47 1 215 1 169 1 
172 1 202 1 136 1 19 1 161 1 221 1 224 2 41 1 194 1 128 1 63 1 165 1 45 1 47 1 169 1 
172 2 202 2 136 2 19 2 161 2 221 2 224 4 41 2 194 2 88 1 61 1 128 2 63 2 165 1 45 2 47 2 169 2 
153 1 86 1 61 1 155 1 46 1 160 1 
106 1 218 1 202 1 109 1 136 1 19 1 208 2 20 1 160 1 221 1 224 2 212 1 213 2 126 2 86 1 194 1 128 1 130 1 182 1 46 1 45 1 
153 1 202 1 155 1 109 1 136 1 19 1 208 2 20 1 160 1 221 1 224 2 212 1 213 2 126 2 86 1 194 1 128 1 130 1 46 1 45 1 
152 1 153 1 217 1 29 1 155 1 3 2 35 1 160 1 221 3 224 2 126 1 101 1 194 1 128 1 127 1 130 1 45 1 46 1 14 1 17 2 199 1 202 1 174 1 52 1 53 1 175 3 19 1 136 1 56 1 208 1 20 1 111 2 82 1 213 1 86 1 146 1 114 2 65 1 243 1 245 1 66 1 
213 1 90 1 44 1 208 1 160 1 105 1 
212 1 101 1 
212 1 56 1 
153 1 155 1 188 1 160 2 221 1 224 2 126 2 194 1 128 1 44 1 45 1 46 1 202 1 238 1 19 1 136 1 208 1 20 1 213 1 86 1 146 1 90 1 
153 1 155 1 188 1 160 2 221 1 226 1 224 2 126 2 194 1 128 1 44 1 45 1 46 1 105 1 202 1 238 1 19 1 136 1 208 1 20 1 213 1 86 1 146 1 113 1 90 1 
146 1 
152 2 153 1 117 1 217 1 29 1 2 1 155 1 158 1 188 1 160 2 7 1 191 4 121 1 221 2 222 1 224 3 126 3 101 1 102 1 194 1 11 1 128 1 130 1 44 1 166 1 45 1 46 1 236 1 106 1 202 1 238 1 55 1 19 1 136 1 56 1 208 2 20 2 213 2 86 1 146 1 90 1 243 1 245 1 185 1 66 2 
153 1 86 1 61 1 155 1 46 1 160 1 
152 2 153 1 217 1 29 1 155 1 3 4 188 1 35 1 160 2 7 1 221 3 224 2 126 3 101 1 194 1 128 1 127 1 130 1 44 1 45 1 46 1 14 1 17 4 199 1 202 1 238 1 174 1 52 1 53 1 175 5 19 1 136 1 56 1 208 2 20 2 111 4 82 1 213 2 86 1 146 1 114 4 90 1 65 1 243 1 245 1 66 2 

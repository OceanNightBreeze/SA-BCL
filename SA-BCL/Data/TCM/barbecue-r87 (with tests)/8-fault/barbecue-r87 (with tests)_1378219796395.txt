#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 159 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z | OPERATOR | 12289 | >= -> <=
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String; | CONDITION | 6950 | if (x) -> if (!x)
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V | STATEMENT | 11646 | stmt -> ;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 3523 | stmt -> ;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 6328 | 2 -> -1
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | CONSTANT | 6358 | 1 -> 2
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 24211 | 3 -> 1
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
243 1 124 1 185 1 101 1 116 1 47 1 
243 1 124 1 185 1 116 1 47 1 
54 2 153 1 132 1 
134 1 52 1 100 1 85 2 127 1 58 1 103 1 204 1 206 3 205 1 139 1 227 1 60 1 89 1 15 1 214 1 95 1 47 1 147 1 
134 1 22 1 52 1 85 1 127 1 58 1 206 3 205 1 103 2 139 1 227 1 89 1 143 1 214 1 47 1 147 1 
89 2 134 1 85 1 214 1 16 1 127 1 205 2 206 2 227 1 139 3 
134 1 52 1 85 2 241 1 127 1 58 1 206 4 205 1 103 1 139 2 227 1 89 2 143 1 214 1 47 1 147 1 
89 1 134 1 85 1 214 1 194 1 127 1 205 1 206 2 227 1 139 1 
134 1 52 1 85 1 40 1 127 1 58 1 206 3 205 1 103 4 139 1 227 1 158 1 89 1 214 1 74 1 250 1 47 1 147 1 
89 1 134 1 135 1 85 1 214 1 127 1 8 1 205 1 206 2 227 1 139 1 
37 1 134 1 214 1 127 1 
79 1 134 1 85 1 127 1 173 1 206 2 205 2 139 1 227 1 89 1 214 1 
134 1 52 1 100 1 85 1 58 1 103 1 206 3 205 1 204 1 139 1 227 1 243 1 60 1 89 1 108 1 214 1 64 1 95 1 47 2 147 2 
134 1 52 1 100 1 85 1 58 1 103 1 206 3 205 1 204 1 139 1 227 1 243 1 60 1 89 1 214 1 64 1 95 1 47 2 147 2 
134 1 85 1 127 1 206 2 205 1 139 1 227 1 61 1 243 1 27 1 89 1 90 1 108 1 214 1 64 1 47 1 147 1 
134 1 85 1 200 1 127 1 206 2 205 1 139 1 227 1 243 1 27 1 89 1 90 1 108 1 214 1 64 1 47 1 147 1 
134 1 115 1 85 1 127 1 206 2 205 1 156 1 139 1 227 1 243 1 27 1 89 1 90 1 163 1 214 1 64 1 47 1 147 1 
134 1 115 1 85 1 127 1 206 2 205 1 156 1 139 1 227 1 243 1 27 1 89 1 90 1 163 1 108 1 214 1 64 1 47 1 147 1 
89 1 134 1 85 2 214 1 16 1 127 1 205 1 206 3 227 1 139 2 
134 1 240 1 125 2 202 1 127 1 206 3 205 1 139 2 89 1 214 1 
89 1 150 1 134 1 240 1 125 1 214 1 127 1 205 2 206 2 139 1 
133 1 134 1 240 1 125 1 127 1 206 2 205 1 139 1 89 1 214 1 
245 1 236 3 67 1 
236 1 
0 2 123 3 3 1 125 2 126 1 9 1 14 5 130 1 16 1 133 2 20 2 22 1 136 2 138 2 139 4 28 3 140 2 141 1 30 14 143 1 32 1 146 2 35 1 38 1 149 6 39 2 155 2 42 1 164 1 45 3 165 1 46 2 168 1 47 2 169 2 48 4 171 4 170 1 50 1 52 1 174 3 175 1 177 2 62 1 63 1 180 1 64 1 65 1 181 1 184 1 185 2 66 3 188 5 190 2 70 2 71 1 195 1 79 1 78 1 196 1 83 3 199 3 202 1 206 4 205 5 208 1 86 1 88 4 91 4 210 2 214 1 216 1 217 2 93 3 220 1 221 1 222 3 98 3 97 1 223 3 224 2 225 1 103 2 105 3 107 1 110 4 231 3 232 3 233 1 235 4 112 3 240 1 241 1 118 2 244 1 243 1 
0 2 123 2 184 1 185 2 3 1 125 1 66 2 126 1 188 5 190 2 9 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 83 3 22 1 199 3 202 1 138 2 206 3 205 3 139 2 86 1 208 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 35 1 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
195 1 221 1 220 1 48 4 171 4 38 1 3 1 202 1 164 1 130 1 165 1 65 1 
123 2 185 2 3 1 125 1 66 2 126 1 188 5 190 2 9 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 197 1 83 3 22 1 26 1 199 3 202 1 138 2 206 3 205 3 139 2 208 1 86 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 171 4 112 3 50 1 240 1 52 1 57 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 65 1 181 1 
184 1 185 2 3 1 125 1 126 1 9 1 11 3 193 2 130 1 16 1 131 4 133 2 195 1 78 1 22 2 23 2 24 4 202 1 203 1 206 3 205 3 139 2 208 1 86 1 88 2 140 2 141 1 91 4 209 2 30 8 143 1 144 2 214 1 32 1 221 1 220 1 149 4 38 1 98 4 103 3 42 1 105 4 106 2 229 4 228 1 164 1 109 2 110 2 165 1 166 1 47 2 233 1 48 4 171 4 50 1 240 1 53 1 52 1 56 2 242 1 243 1 244 1 175 1 176 1 178 1 63 1 64 1 65 1 181 1 
0 2 123 2 185 2 3 1 125 1 66 2 126 1 188 5 190 2 9 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 83 3 22 1 199 3 202 1 138 2 206 4 205 3 139 2 86 1 208 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 35 1 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
123 2 3 1 125 1 126 1 9 1 14 5 16 1 130 1 133 2 20 2 22 2 138 2 139 2 140 2 141 1 30 4 143 1 32 1 146 2 35 1 38 1 149 6 39 2 155 2 42 1 164 1 165 1 45 3 46 2 168 1 47 2 169 2 48 4 171 4 170 1 50 1 52 1 57 1 174 3 175 1 177 2 63 1 180 1 64 1 65 1 181 1 185 2 184 1 66 2 188 5 190 2 70 2 195 1 78 1 79 1 196 1 83 3 197 1 199 3 202 1 205 4 206 3 208 1 86 1 88 4 91 4 210 2 214 1 216 1 217 2 93 3 220 1 221 1 222 3 97 1 98 3 223 3 224 2 103 3 105 3 110 4 231 2 232 3 233 1 235 4 112 3 240 1 118 2 244 1 243 1 
226 1 
0 2 123 2 2 2 3 1 126 1 9 1 14 7 16 1 130 1 18 1 133 2 19 1 20 2 22 1 138 2 139 2 140 2 141 1 30 4 143 1 32 1 146 2 35 1 38 1 149 6 151 2 39 2 155 2 41 2 42 1 162 2 164 1 165 1 45 5 46 2 168 3 47 2 169 2 48 4 171 4 170 1 50 1 52 1 172 1 58 1 174 5 177 2 63 1 180 1 64 1 65 1 181 1 184 1 185 2 66 2 188 7 190 2 70 2 72 1 195 1 78 1 196 1 81 1 83 5 198 1 85 1 199 5 205 3 206 3 86 1 208 1 88 4 91 4 210 2 214 1 216 1 217 2 93 5 218 1 220 1 221 1 222 5 97 1 98 3 223 5 224 2 103 2 227 1 105 3 230 1 110 4 231 2 111 2 233 1 232 5 234 1 235 4 112 5 118 2 244 1 243 1 121 1 122 1 
221 1 195 1 48 1 171 1 164 1 
0 2 123 2 185 2 125 1 66 2 126 1 188 5 190 2 9 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 197 1 83 3 22 1 199 3 202 1 138 2 206 3 205 3 139 2 208 1 86 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 35 1 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 57 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
0 2 123 2 185 2 125 1 66 2 126 1 188 5 190 2 9 1 69 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 197 1 83 3 22 1 199 3 202 1 138 2 206 3 205 3 139 2 208 1 86 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 35 1 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 57 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
0 2 123 2 185 2 3 1 125 1 66 2 126 1 188 5 190 2 9 1 70 2 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 82 1 197 1 83 3 22 1 199 3 202 1 138 2 206 3 205 3 139 2 86 1 208 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 35 1 222 3 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 233 1 232 3 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 57 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
0 2 123 2 184 1 185 2 3 1 125 1 66 2 126 1 188 5 190 2 9 1 70 2 72 1 14 5 130 1 16 1 133 2 195 1 78 1 20 2 196 1 83 3 22 1 199 3 202 1 138 2 206 3 205 3 139 2 86 1 208 1 88 4 140 2 141 1 91 4 210 2 30 4 143 1 214 1 217 2 216 1 93 3 32 1 146 2 221 1 220 1 222 3 35 1 149 6 38 1 98 3 97 1 39 2 223 3 224 2 155 2 103 2 42 1 105 3 164 1 110 4 45 3 165 1 46 2 231 2 47 2 168 1 232 3 233 1 169 2 48 4 235 4 170 1 171 4 112 3 50 1 240 1 52 1 118 2 174 3 243 1 244 1 175 1 177 2 63 1 64 1 180 1 65 1 181 1 
30 1 62 1 102 1 
30 1 249 1 
30 1 75 1 
149 1 98 1 84 1 156 1 243 1 27 1 43 1 90 1 30 1 213 1 47 1 17 1 
243 1 43 1 27 1 149 1 90 1 30 1 47 1 
30 1 75 1 
243 1 149 1 98 1 30 1 189 1 47 1 
12 1 30 1 
30 1 75 1 
30 1 249 1 
30 1 249 1 
10 1 30 1 55 1 131 1 
30 1 229 1 154 1 
240 1 114 1 125 1 6 1 187 2 206 2 205 1 139 1 9 1 91 2 29 1 30 2 247 1 212 1 214 1 109 1 75 1 
92 1 
9 1 37 1 29 1 240 1 114 1 212 1 125 1 109 1 214 1 6 1 205 1 206 2 139 1 
9 1 123 1 66 1 85 1 214 1 216 1 231 1 205 1 206 2 227 1 139 1 
1 1 123 2 85 2 66 2 206 3 205 1 139 1 227 1 9 1 214 1 216 1 231 2 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 123 2 85 2 66 2 206 3 205 1 139 1 227 1 9 1 214 1 216 1 231 2 
123 1 2 2 185 2 66 1 126 1 188 4 190 2 9 1 129 2 70 2 14 4 18 1 19 1 133 2 79 1 81 1 20 2 198 1 83 2 22 1 85 1 199 2 206 3 205 2 139 1 88 4 140 2 141 1 91 4 30 4 210 2 214 1 217 2 216 1 93 2 146 2 218 1 222 2 149 6 98 3 152 2 39 2 223 2 224 2 155 2 41 2 103 1 227 1 105 3 162 2 230 1 110 4 45 2 231 1 46 2 47 2 111 2 232 2 234 1 169 2 235 4 112 2 52 1 172 1 58 1 174 2 118 2 243 1 244 1 177 2 121 1 122 1 64 1 181 1 
1 1 222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 123 1 183 2 5 1 66 1 188 2 9 1 70 1 12 1 14 2 75 1 83 1 199 1 85 1 206 2 205 1 139 1 91 3 210 1 31 1 214 1 216 1 217 1 93 1 146 1 222 1 99 1 223 1 224 1 155 1 227 1 45 2 231 1 46 1 232 1 169 1 235 3 112 1 239 1 118 1 174 1 119 1 177 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 
222 1 183 2 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
1 1 123 1 85 1 66 1 7 1 206 2 205 1 139 1 227 1 9 1 214 1 216 1 231 1 
222 1 183 2 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
0 1 222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
1 1 123 2 66 2 188 2 190 1 9 1 70 1 14 2 17 2 133 1 79 1 20 1 83 1 84 2 85 2 199 1 200 1 205 4 206 3 139 2 87 1 140 1 27 1 141 1 91 2 90 1 210 1 211 1 30 3 213 2 215 1 214 1 217 1 216 1 93 1 222 1 149 2 98 2 223 1 224 1 155 1 156 3 227 1 43 1 45 1 46 1 231 2 47 1 232 1 169 1 235 2 112 1 50 1 115 2 241 1 174 1 118 1 243 1 119 1 246 1 177 1 62 3 64 1 181 1 
1 1 222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 
123 1 2 1 185 1 66 1 126 1 188 2 190 1 9 1 129 1 70 1 14 2 133 1 81 1 20 1 83 1 22 1 85 1 199 1 206 3 205 1 139 1 88 2 140 1 91 2 30 2 210 1 214 1 217 1 216 1 93 1 146 1 222 1 149 3 152 1 39 1 223 1 224 1 155 1 41 1 103 1 227 1 105 3 162 1 110 2 45 1 231 1 46 1 47 1 111 1 232 1 169 1 235 2 112 1 52 1 58 1 174 1 118 1 244 1 177 1 
1 1 123 1 152 1 85 1 66 1 206 2 205 1 139 1 227 1 9 1 214 1 216 1 231 1 
2 1 185 1 5 1 126 1 188 2 190 1 129 1 70 1 14 2 133 1 81 1 20 1 83 1 22 1 199 1 202 1 206 1 140 1 88 2 91 2 30 2 210 1 31 1 217 1 93 1 146 1 222 1 149 3 99 1 152 1 39 1 223 1 224 1 155 1 41 1 103 1 105 3 162 1 110 2 45 2 46 1 47 1 111 1 232 1 169 1 235 2 112 1 239 1 52 1 118 1 174 1 244 1 119 1 175 1 177 1 
0 1 123 1 2 1 185 1 66 1 126 1 188 2 190 1 9 1 129 1 70 1 14 2 133 1 81 1 20 1 83 1 22 1 85 1 199 1 206 3 205 1 139 1 88 2 140 1 91 2 30 2 210 1 214 1 217 1 216 1 93 1 146 1 222 1 149 3 152 1 39 1 223 1 224 1 155 1 41 1 103 1 227 1 105 3 162 1 110 2 45 1 231 1 46 1 47 1 111 1 232 1 169 1 235 2 112 1 52 1 58 1 174 1 118 1 244 1 177 1 
0 1 123 1 2 1 185 1 125 1 66 1 126 1 188 2 190 1 9 1 129 1 70 1 14 2 133 1 81 1 20 1 83 1 22 1 199 1 202 1 205 1 206 3 139 1 88 2 140 1 91 2 210 1 30 2 214 1 217 1 216 1 93 1 146 1 222 1 149 3 152 1 39 1 223 1 224 1 155 1 41 1 103 1 105 3 162 1 110 2 45 1 231 1 46 1 47 1 111 1 232 1 169 1 235 2 112 1 240 1 52 1 174 1 118 1 244 1 175 1 177 1 
222 1 1 1 123 1 99 1 5 1 223 1 224 1 66 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 231 1 46 1 232 1 169 1 235 2 83 1 112 1 239 1 199 1 85 1 174 1 118 1 205 1 206 2 139 1 119 1 91 2 210 1 177 1 31 1 214 1 217 1 216 1 93 1 
1 1 222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 46 1 231 1 232 1 169 1 235 2 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 2 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 146 1 
88 1 129 1 237 1 30 1 110 1 
88 1 237 1 30 1 39 1 110 1 
34 1 88 1 129 1 30 1 113 1 110 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 123 1 185 1 5 1 66 1 188 2 190 1 9 1 129 1 70 1 14 2 17 3 133 1 20 1 83 1 84 3 199 1 85 1 206 2 205 2 139 1 88 2 140 1 27 1 141 1 90 1 91 2 210 1 30 2 31 1 213 3 214 1 217 1 216 1 93 1 146 1 222 1 149 3 98 3 99 1 39 1 223 1 224 1 155 1 156 4 227 1 43 1 110 2 45 2 231 1 46 1 47 1 232 1 169 1 235 2 112 1 50 1 239 1 115 1 174 1 118 1 119 1 243 1 177 1 64 1 181 1 
0 1 222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 231 1 46 1 232 1 169 1 235 2 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 2 210 1 177 1 214 1 217 1 216 1 93 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 183 2 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 12 1 14 2 45 1 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 146 1 
1 1 222 1 183 2 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 
1 1 222 1 123 1 99 1 5 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 2 75 1 46 1 231 1 232 1 169 1 235 3 83 1 112 1 239 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 119 1 91 3 210 1 177 1 31 1 214 1 217 1 216 1 93 1 
222 1 123 1 223 1 66 1 224 1 155 1 188 2 227 1 9 1 70 1 14 2 45 1 75 1 231 1 46 1 232 1 169 1 235 3 83 1 112 1 85 1 199 1 174 1 118 1 205 1 206 2 139 1 91 3 210 1 177 1 214 1 217 1 216 1 93 1 
149 2 98 2 100 1 103 1 156 3 190 1 227 1 9 1 157 1 160 1 109 1 47 1 17 2 133 1 20 1 50 1 51 1 84 2 85 1 115 1 204 1 205 2 206 2 139 1 61 1 60 1 243 1 27 1 140 1 141 1 90 1 120 1 30 4 213 2 62 3 214 1 179 1 64 1 94 1 95 1 181 1 
148 1 149 2 2 1 98 2 4 1 41 1 8 1 156 3 104 1 227 1 190 1 9 1 157 1 162 1 160 1 109 1 47 1 111 1 17 2 19 1 133 1 80 1 20 1 51 1 84 2 135 1 85 1 115 1 205 1 206 2 139 1 243 1 27 1 140 1 141 1 90 1 120 1 30 4 213 2 62 3 214 1 179 1 94 1 181 1 
0 1 222 3 123 1 97 1 223 3 224 1 66 1 155 1 188 4 227 1 9 1 70 1 14 4 45 3 46 1 231 1 168 2 232 3 169 1 235 2 196 1 83 3 112 3 54 1 199 3 85 1 118 1 205 1 174 3 206 2 139 1 91 2 210 1 177 1 214 1 217 1 216 1 93 3 146 1 
222 1 123 1 97 1 223 1 66 1 188 1 128 1 227 1 9 1 14 1 110 1 45 1 75 1 231 1 168 1 232 1 196 1 237 1 83 1 112 1 199 1 85 1 138 1 205 1 174 1 206 2 139 1 88 1 30 1 214 1 216 1 93 1 
222 1 123 1 97 1 223 1 66 1 188 1 227 1 9 1 14 1 45 1 231 1 168 1 232 1 196 1 83 1 112 1 199 1 85 1 205 1 174 1 206 2 139 1 214 1 216 1 93 1 
222 3 123 1 151 1 97 1 223 3 66 1 188 3 227 1 9 1 14 3 45 3 231 1 168 3 232 3 196 1 83 3 112 3 199 3 85 1 205 1 174 3 206 2 139 1 214 1 216 1 93 3 
222 1 123 1 97 1 223 1 66 1 188 1 227 1 9 1 14 1 194 1 45 1 231 1 168 1 232 1 196 1 83 1 112 1 199 1 85 1 205 1 174 1 206 2 139 1 214 1 216 1 93 1 
123 1 97 1 85 1 66 1 205 1 206 2 139 1 227 1 9 1 214 1 194 1 216 1 231 1 168 1 
68 1 191 1 142 1 206 1 
68 1 73 1 206 1 
13 2 15 1 145 1 206 1 
15 1 145 1 167 1 206 1 59 1 
68 1 77 1 
98 1 84 1 213 1 115 1 156 1 17 1 
43 1 98 1 84 1 213 1 115 1 156 1 17 1 
19 1 2 1 41 1 207 1 243 1 162 1 47 1 
243 1 141 1 181 1 47 1 
91 1 235 1 54 1 93 1 155 1 188 2 219 1 
93 1 188 1 
235 1 155 1 188 1 91 1 30 1 12 1 75 1 
93 1 188 1 
91 1 235 1 30 1 75 1 
240 1 
125 1 
125 1 
85 1 
227 1 
85 1 
96 1 182 1 36 1 21 1 238 1 240 1 125 1 137 1 206 2 205 1 139 1 9 1 192 1 214 1 109 1 
96 1 182 1 36 1 21 1 238 1 240 1 125 1 206 2 205 1 139 1 9 1 192 1 214 1 109 1 194 1 
96 2 182 2 36 2 21 2 238 2 240 2 125 2 137 1 206 4 205 2 139 2 9 2 192 2 214 2 109 2 76 1 
96 1 182 1 36 1 49 2 21 1 238 1 240 1 25 1 125 1 206 2 205 1 139 1 9 1 91 2 30 1 229 1 192 1 214 1 109 1 75 1 
117 1 
30 2 62 2 201 1 75 1 
33 1 30 2 62 2 75 1 
33 1 182 1 96 1 36 1 149 2 2 1 125 1 126 1 41 1 103 1 190 1 9 1 105 2 162 1 161 1 192 1 109 1 47 1 111 1 133 1 79 1 81 1 49 1 20 1 21 1 22 1 240 1 238 1 52 1 25 1 137 1 201 1 117 1 205 2 206 3 139 1 244 1 140 1 91 1 175 1 30 2 62 2 214 1 
9 1 37 1 159 1 238 1 214 1 
33 1 182 1 96 1 36 1 149 2 98 3 125 1 156 4 190 1 9 1 43 1 229 1 192 1 109 1 131 1 47 1 17 3 133 1 79 1 49 1 20 1 21 1 50 1 240 1 238 1 84 3 25 1 115 1 201 1 117 1 205 3 206 2 139 1 243 1 27 1 140 1 141 1 91 1 90 1 30 3 213 3 62 2 214 1 64 1 181 1 
96 1 182 1 36 1 49 1 21 1 238 1 240 1 25 1 125 1 206 2 205 1 139 1 9 1 91 1 30 3 229 2 192 1 214 1 109 1 75 1 
96 1 182 1 36 1 21 1 238 1 240 1 125 1 206 2 205 1 139 1 9 1 192 1 214 1 109 1 76 1 
96 2 182 2 36 2 37 1 21 2 238 2 240 2 125 2 206 4 205 2 139 2 9 2 159 1 192 2 214 2 109 2 76 1 
96 1 182 1 36 1 37 1 21 1 238 1 240 1 125 1 206 2 205 1 139 1 9 1 159 1 192 1 214 1 109 1 
240 1 53 1 24 2 125 1 55 1 203 1 205 1 242 1 206 2 139 1 9 1 11 1 91 2 30 2 229 1 228 1 144 1 214 1 109 1 75 1 
149 1 98 2 125 1 156 3 9 1 43 1 11 1 229 1 228 1 109 1 193 1 131 1 47 1 17 2 133 1 79 1 50 1 240 1 84 2 53 1 23 1 24 1 115 1 203 1 206 2 242 1 205 3 139 1 243 1 27 1 140 1 141 1 91 1 90 1 209 1 30 1 144 1 213 2 214 1 64 1 181 1 
11 1 91 1 106 1 54 1 24 1 56 1 
193 1 75 1 
23 1 75 1 
240 1 53 1 24 1 125 1 56 1 203 1 205 1 242 1 206 2 139 1 9 1 88 1 11 2 91 1 209 1 30 2 106 1 229 1 228 1 214 1 109 1 110 1 
240 1 53 1 54 1 24 1 125 1 56 1 154 1 203 1 205 1 242 1 206 2 139 1 9 1 88 1 11 2 91 1 209 1 30 2 106 1 229 1 228 1 214 1 109 1 110 1 132 1 
209 1 
149 2 2 1 185 1 125 1 126 1 41 1 103 1 9 1 11 2 105 4 162 1 106 1 229 2 228 1 109 1 193 1 110 1 131 2 47 1 111 1 133 1 79 1 81 1 22 1 240 1 53 1 52 1 23 1 24 2 56 1 203 1 206 3 242 1 205 2 139 1 244 1 88 1 140 1 91 2 175 1 209 1 30 3 144 1 248 1 214 1 
11 1 37 1 228 1 53 1 203 1 242 1 
185 1 125 1 9 1 11 2 193 1 131 2 17 4 133 1 79 1 23 1 84 4 24 2 203 1 205 3 206 2 139 1 140 1 27 1 88 1 90 1 91 2 141 1 209 1 30 3 144 1 213 4 214 1 149 2 98 4 156 5 43 1 106 1 228 1 229 2 109 1 110 1 47 1 50 1 240 1 53 1 115 1 56 1 242 1 243 1 64 1 181 1 
11 1 37 1 228 1 53 1 203 1 242 1 
125 1 186 1 9 1 11 1 229 1 109 1 44 1 75 1 240 1 53 1 24 2 55 1 203 1 206 2 205 1 139 1 91 2 30 2 144 1 248 1 214 1 

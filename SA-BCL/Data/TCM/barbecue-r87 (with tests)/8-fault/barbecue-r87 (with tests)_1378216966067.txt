#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 131 194 208 91 15 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 162 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 131 194 208 91 67 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 46 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 29748 | stmt -> ;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4320 | = null
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 13696 | stmt -> ;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module; | OPERATOR | 4518 | > -> >=
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 192 1 120 1 134 1 121 1 17 1 
192 1 120 1 134 1 121 1 17 1 
127 2 60 1 68 1 
31 1 138 2 0 1 2 1 65 1 142 1 215 1 177 1 116 1 161 3 101 1 56 1 204 1 120 1 58 1 224 1 26 1 180 1 107 1 
31 1 138 1 0 1 2 1 213 1 142 1 215 1 161 3 177 2 101 1 56 1 120 1 58 1 224 1 137 1 107 1 
31 1 0 2 138 1 161 2 101 1 168 1 58 2 142 1 215 1 107 3 
31 1 138 2 0 2 2 1 213 1 142 1 215 1 161 4 177 1 101 1 56 1 120 1 58 1 224 1 10 1 107 2 
31 1 0 1 138 1 161 2 101 1 152 1 58 1 142 1 215 1 107 1 
31 1 138 1 0 1 2 1 14 1 109 1 64 1 142 1 215 1 161 3 177 4 101 1 56 1 23 1 120 1 58 1 224 1 107 1 
31 1 138 1 0 1 89 1 142 1 52 1 215 1 161 2 101 1 58 1 107 1 
31 1 101 1 61 1 215 1 
31 1 0 1 138 1 161 2 101 1 58 2 104 1 142 1 166 1 215 1 107 1 
138 1 0 1 2 1 65 1 142 1 94 1 215 1 132 1 177 1 161 3 116 1 101 1 56 1 204 1 120 2 121 1 58 1 224 2 26 1 107 1 
138 1 0 1 2 1 65 1 142 1 215 1 132 1 177 1 161 3 116 1 101 1 56 1 204 1 120 2 121 1 58 1 224 2 26 1 107 1 
31 1 138 1 0 1 66 1 48 1 142 1 94 1 215 1 132 1 161 2 101 1 120 1 40 1 121 1 58 1 224 1 107 1 
31 1 138 1 0 1 66 1 142 1 94 1 235 1 215 1 132 1 161 2 101 1 120 1 40 1 121 1 58 1 224 1 107 1 
31 1 138 1 0 1 66 1 142 1 215 1 132 1 161 2 101 1 120 1 40 1 121 1 58 1 224 1 242 1 85 1 27 1 107 1 
31 1 138 1 0 1 66 1 142 1 94 1 215 1 132 1 161 2 101 1 120 1 40 1 121 1 58 1 224 1 242 1 85 1 27 1 107 1 
31 1 0 1 138 2 161 3 101 1 168 1 58 1 142 1 215 1 107 2 
31 1 0 1 184 2 215 1 191 1 19 1 161 3 101 1 58 1 107 2 
19 1 31 1 0 1 161 2 184 1 101 1 58 2 174 1 215 1 107 1 
19 1 31 1 0 1 161 2 144 1 184 1 101 1 58 1 215 1 107 1 
100 1 9 3 74 1 
9 1 
1 4 183 3 63 1 125 3 126 3 184 2 186 1 187 1 67 1 188 1 190 1 189 3 128 1 5 2 191 1 130 1 69 5 132 1 71 4 131 1 70 3 7 1 194 1 135 2 195 1 137 1 11 6 10 1 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 203 1 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 209 1 91 1 213 1 92 4 37 2 154 3 156 2 155 2 93 1 214 5 215 1 220 14 159 1 160 1 221 1 161 4 102 3 42 3 223 3 104 1 225 2 226 1 44 2 105 1 107 3 227 2 45 3 168 1 231 1 232 2 113 2 170 3 50 1 114 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 5 243 3 244 3 179 3 
1 4 183 3 125 3 126 2 184 1 186 1 187 1 67 1 188 1 189 2 128 1 5 2 191 1 130 1 69 5 132 1 71 4 70 3 131 1 7 1 194 1 135 2 137 1 11 6 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 203 1 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 209 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 160 1 221 1 159 1 161 3 102 3 42 3 223 3 226 1 44 2 105 1 107 2 227 2 45 3 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 3 243 2 244 3 179 3 
67 1 231 1 91 1 140 4 50 1 191 1 203 1 221 1 130 1 54 4 117 1 148 1 
1 2 184 1 186 1 3 2 67 1 187 1 188 1 128 1 191 1 130 1 132 1 71 2 131 1 133 2 194 1 137 1 11 4 196 1 75 1 141 1 140 4 17 2 143 4 199 4 203 1 20 1 19 1 144 2 82 1 208 1 148 1 210 2 36 4 90 1 91 1 213 1 155 2 215 1 220 8 97 2 158 2 221 1 159 1 161 3 102 4 41 1 223 4 226 1 107 2 228 1 47 3 231 1 168 1 49 2 233 2 50 1 171 1 54 4 177 2 55 4 117 1 118 1 56 1 239 1 120 2 121 1 58 3 
183 2 125 2 126 2 1 4 184 1 186 1 67 1 187 1 188 1 189 2 128 1 5 2 191 1 69 4 130 1 132 1 70 2 131 1 71 4 6 2 7 1 194 1 135 2 137 1 11 6 76 2 78 2 77 2 139 2 141 1 140 4 17 2 201 2 143 4 202 2 203 1 19 1 144 2 82 1 84 2 146 2 145 2 208 1 148 1 28 1 91 1 213 1 92 4 37 2 156 2 214 4 155 2 215 1 220 4 160 1 221 1 159 1 161 3 39 2 102 3 42 2 223 3 226 1 44 2 107 2 45 2 227 2 231 1 168 1 232 2 170 2 50 1 175 1 176 2 54 4 177 2 117 1 118 1 56 1 239 1 120 2 121 1 58 3 243 2 179 2 124 2 244 4 
183 2 125 2 126 2 1 4 184 1 186 1 67 1 187 1 188 1 189 2 128 1 5 2 191 1 69 4 130 1 132 1 70 2 131 1 71 4 6 2 7 1 194 1 135 2 137 1 11 6 76 2 78 2 77 2 139 2 141 1 140 4 17 2 201 2 143 4 202 2 203 1 19 1 144 2 82 1 84 2 146 2 145 2 208 1 148 1 28 1 91 1 213 1 92 4 37 2 156 2 214 4 155 2 215 1 220 4 160 1 221 1 159 1 161 3 39 2 102 3 42 2 223 3 226 1 44 2 107 2 45 2 227 2 231 1 168 1 232 2 170 2 50 1 175 1 176 2 54 4 177 2 117 1 118 1 56 1 239 1 120 2 121 1 58 3 243 2 179 2 124 2 244 4 
1 4 183 3 125 3 126 2 184 1 186 1 187 1 67 1 188 1 189 2 128 1 5 2 191 1 69 5 130 1 132 1 71 4 70 3 131 1 194 1 135 2 137 1 11 6 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 203 1 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 35 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 221 1 159 1 161 3 102 3 42 3 223 3 226 1 44 2 105 1 107 2 227 2 45 3 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 3 243 2 244 3 179 3 
1 4 126 2 125 2 2 1 128 1 5 2 130 1 131 1 132 1 6 2 7 1 135 2 137 1 11 6 138 1 139 2 140 4 141 1 142 1 17 2 143 4 18 2 144 2 145 2 146 2 148 1 28 1 37 2 155 2 156 2 157 1 159 1 160 1 161 3 39 2 42 2 44 2 45 2 168 1 170 2 50 1 172 1 175 1 176 2 54 4 177 2 56 1 57 2 58 3 179 2 183 2 186 1 67 1 188 1 189 2 69 4 71 4 70 2 194 1 72 1 76 2 77 2 78 2 202 2 201 2 203 1 82 1 84 2 208 1 87 1 91 1 213 1 92 4 214 4 215 1 218 2 220 4 95 1 219 1 221 1 99 2 102 3 103 1 223 3 226 1 107 2 227 2 110 1 231 1 232 2 238 2 117 1 118 1 120 2 239 1 121 1 122 1 123 1 243 2 244 4 124 2 
54 1 67 1 91 1 140 1 221 1 
1 4 183 3 125 3 126 2 184 1 186 1 187 1 67 1 188 1 189 2 128 1 5 2 191 1 130 1 69 5 132 1 71 4 70 3 131 1 7 1 194 1 135 2 137 1 11 6 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 209 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 160 1 221 1 159 1 161 3 102 3 42 3 223 3 226 1 44 2 105 1 107 2 227 2 45 3 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 3 243 2 244 3 179 3 
1 4 183 3 125 3 126 2 184 1 186 1 187 1 188 1 189 2 128 1 5 2 191 1 130 1 69 5 132 1 71 4 70 3 131 1 7 1 194 1 135 2 137 1 11 6 76 2 77 2 15 1 139 2 140 4 141 1 17 2 143 4 201 3 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 209 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 160 1 221 1 159 1 161 3 102 3 42 3 223 3 226 1 44 2 105 1 107 2 227 2 45 3 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 3 243 2 244 3 179 3 
1 4 183 3 182 1 125 3 126 2 184 1 186 1 187 1 67 1 188 1 189 2 128 1 5 2 191 1 130 1 69 5 132 1 71 4 131 1 70 3 7 1 194 1 135 2 137 1 11 6 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 203 1 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 160 1 221 1 159 1 161 3 162 1 102 3 42 3 223 3 226 1 44 2 105 1 107 2 227 2 45 3 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 3 243 2 244 3 179 3 
181 1 
1 4 183 3 125 3 126 2 184 1 186 1 187 1 67 1 188 1 189 2 128 1 5 2 191 1 130 1 69 5 132 1 71 4 131 1 70 3 7 1 194 1 135 2 137 1 11 6 76 2 77 2 139 2 140 4 141 1 17 2 143 4 201 3 203 1 19 1 144 2 82 1 84 2 146 2 208 1 148 1 150 1 209 1 91 1 213 1 92 4 37 2 156 2 155 2 93 1 214 5 215 1 220 4 160 1 221 1 159 1 161 3 102 3 42 3 223 3 104 1 226 1 44 2 105 1 107 2 227 2 45 3 108 1 231 1 168 1 232 2 113 2 170 3 50 1 175 1 176 2 54 4 177 2 117 1 56 1 118 1 239 1 120 2 121 1 58 4 243 2 244 3 179 3 
21 1 114 1 220 1 
38 1 220 1 
81 1 220 1 
81 1 220 1 
81 1 220 1 
38 1 220 1 
32 1 120 1 66 1 240 1 40 1 121 1 223 1 178 1 242 1 80 1 11 1 220 1 
120 1 66 1 240 1 40 1 121 1 11 1 220 1 
38 1 220 1 
197 1 120 1 121 1 223 1 11 1 220 1 
220 1 30 1 
199 1 220 1 106 1 
36 1 211 1 4 1 220 1 
149 1 34 1 184 1 3 1 215 1 220 1 38 1 161 2 165 1 73 1 107 1 141 1 143 1 237 1 19 1 58 1 206 1 30 1 
247 1 
184 1 34 1 3 1 141 1 215 1 237 1 19 1 161 2 58 1 206 1 165 1 61 1 107 1 
138 2 126 2 167 1 141 1 142 1 189 2 215 1 175 1 161 3 58 1 243 2 107 1 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
1 2 126 1 183 1 125 1 2 1 189 1 128 1 5 1 69 2 71 2 70 1 135 1 137 1 11 3 138 1 76 1 77 1 139 1 141 1 142 1 17 1 201 1 143 2 18 1 144 1 84 1 146 1 145 1 37 1 92 2 156 1 155 1 214 2 218 1 215 1 95 1 220 2 99 1 161 3 102 3 42 1 226 1 44 1 107 1 227 1 45 1 232 1 170 1 175 1 176 1 238 1 177 1 56 1 57 1 120 1 58 1 243 1 179 1 244 1 
138 1 126 1 167 1 141 1 142 1 189 1 218 1 215 1 175 1 161 2 58 1 243 1 107 1 
1 2 125 1 183 1 187 1 128 1 5 1 191 1 69 2 71 2 70 1 6 1 135 1 137 1 11 3 76 1 77 1 78 1 139 1 17 1 202 1 143 2 201 1 18 1 144 1 84 1 145 1 146 1 37 1 92 2 156 1 155 1 214 2 218 1 95 1 220 2 99 1 161 1 39 1 102 3 42 1 226 1 44 1 227 1 45 1 232 1 170 1 176 1 238 1 177 1 56 1 57 1 120 1 244 2 124 1 179 1 
1 2 126 1 183 1 125 1 2 1 189 1 128 1 5 1 69 2 71 2 70 1 135 1 137 1 11 3 138 1 76 1 77 1 139 1 141 1 142 1 17 1 201 1 143 2 18 1 144 1 84 1 146 1 145 1 37 1 92 2 156 1 155 1 214 2 218 1 215 1 95 1 220 2 99 1 161 3 102 3 42 1 226 1 44 1 107 1 227 1 45 1 108 1 232 1 170 1 175 1 176 1 238 1 177 1 56 1 57 1 120 1 58 1 243 1 179 1 244 1 
125 1 1 2 126 1 183 1 184 1 187 1 189 1 128 1 5 1 191 1 69 2 71 2 70 1 135 1 137 1 11 3 76 1 77 1 139 1 141 1 17 1 201 1 143 2 18 1 19 1 144 1 84 1 146 1 145 1 37 1 92 2 156 1 155 1 214 2 218 1 215 1 95 1 220 2 99 1 161 3 102 3 42 1 226 1 44 1 107 1 227 1 45 1 108 1 232 1 170 1 175 1 176 1 238 1 177 1 56 1 57 1 120 1 58 1 243 1 179 1 244 1 
183 1 125 1 126 1 37 1 92 2 189 1 214 2 215 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 78 1 167 1 77 1 232 1 141 1 170 1 142 1 201 1 202 1 143 2 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 156 1 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 143 3 201 1 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 156 1 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 143 3 201 1 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 156 1 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 143 3 201 1 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 2 37 1 189 1 214 2 156 1 215 1 38 1 69 2 70 1 161 2 6 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 2 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 156 1 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 143 2 201 1 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 30 1 
71 1 1 1 145 1 220 1 62 1 
71 1 1 1 5 1 220 1 62 1 
71 1 22 1 1 1 145 1 217 1 220 1 
183 2 126 1 125 2 189 1 69 4 70 2 6 2 135 2 138 1 76 2 78 2 77 2 141 1 142 1 201 2 202 2 143 3 84 2 146 2 30 1 37 2 92 5 156 1 214 4 215 1 38 1 161 2 39 2 42 2 44 2 107 1 45 2 167 1 232 2 170 2 175 1 176 2 58 1 243 1 244 4 124 2 179 2 
183 1 125 1 1 2 126 1 186 1 66 1 189 1 5 1 69 2 71 2 132 1 70 1 6 1 135 1 11 3 138 1 76 1 78 1 77 1 139 1 141 1 142 1 17 1 201 1 202 1 143 2 80 3 144 1 84 1 146 1 145 1 27 1 32 3 37 1 92 2 156 1 214 2 155 1 215 1 220 2 159 1 161 2 39 1 40 1 42 1 223 3 44 1 107 1 45 1 227 1 167 1 232 1 170 1 175 1 176 1 120 1 239 1 240 1 121 1 58 2 178 3 242 4 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 108 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 79 2 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 79 2 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
126 1 138 1 161 2 58 1 141 1 142 1 189 1 243 1 215 1 175 1 107 1 
138 2 126 2 167 1 141 1 142 1 189 2 215 1 175 1 161 3 58 1 243 2 107 1 
1 4 126 1 183 2 125 2 2 1 186 1 189 1 128 1 5 2 69 4 132 1 71 4 70 2 72 1 135 2 137 1 11 6 138 1 76 2 77 2 139 2 141 1 142 1 17 2 201 2 143 4 18 2 144 2 84 2 146 2 145 2 87 1 37 2 92 4 156 2 155 2 214 4 157 1 218 2 215 1 219 1 95 1 220 4 99 2 161 3 102 3 42 2 103 1 223 3 104 1 226 1 44 2 107 1 227 2 45 2 110 1 232 2 170 2 172 1 175 1 176 2 238 2 177 1 56 1 239 1 57 2 120 2 121 1 58 2 122 1 123 1 243 1 179 2 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 92 3 37 1 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 39 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 79 2 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 202 1 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 79 2 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
138 1 126 1 167 1 141 1 142 1 189 1 215 1 175 1 161 2 58 1 25 1 243 1 107 1 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 79 2 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 244 1 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 108 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 1 183 1 37 1 92 3 189 1 156 1 214 2 215 1 38 1 69 2 70 1 161 2 42 1 135 1 44 1 107 1 45 1 138 1 76 1 77 1 232 1 141 1 170 1 142 1 201 1 143 3 175 1 176 1 58 1 84 1 146 1 243 1 179 1 124 1 244 2 
125 1 126 2 183 1 186 1 66 1 189 2 69 2 70 1 132 1 135 1 136 1 10 1 11 1 138 2 76 1 77 1 78 1 139 1 141 1 142 1 143 1 201 1 80 1 144 1 84 1 146 1 27 2 32 1 37 1 92 2 214 2 155 1 215 1 220 3 159 1 98 1 161 3 40 1 42 1 223 1 104 1 44 1 107 2 227 1 45 1 167 1 232 1 112 1 170 1 235 1 114 3 175 1 176 1 120 1 239 1 121 1 58 4 178 1 242 2 243 2 179 1 244 1 245 1 
125 1 126 1 183 1 37 1 92 3 189 1 214 2 215 1 38 1 69 2 70 1 161 2 6 1 42 1 135 1 44 1 107 1 45 1 138 1 76 1 167 1 77 1 78 1 232 1 141 1 170 1 142 1 143 3 201 1 175 1 176 1 84 1 58 1 146 1 243 1 179 1 244 1 
32 2 33 1 186 1 65 1 66 1 3 1 155 1 215 1 220 4 159 1 96 1 132 1 161 2 40 1 223 2 11 2 107 1 227 1 138 1 13 1 48 1 139 1 141 1 142 1 198 1 114 3 80 2 177 1 116 1 144 1 204 1 120 1 239 1 58 2 121 1 83 1 178 2 242 3 26 1 27 1 246 1 
32 2 89 1 33 1 186 1 66 1 3 1 155 1 215 1 220 4 96 1 99 1 161 2 40 1 163 1 223 2 11 2 107 1 227 1 138 1 13 1 169 1 139 1 141 1 142 1 198 1 53 1 52 1 114 3 80 2 18 1 238 1 144 1 119 1 57 1 120 1 239 1 58 1 121 1 83 1 178 2 123 1 242 3 27 1 246 1 
150 1 183 3 125 3 126 1 127 1 92 2 37 1 189 1 156 1 214 4 93 1 215 1 69 4 70 3 161 2 42 3 135 1 44 1 105 2 107 1 45 3 108 1 138 1 76 1 77 1 232 1 141 1 170 3 142 1 143 2 201 3 175 1 176 1 84 1 58 1 146 1 243 1 244 3 179 3 
150 1 183 1 125 1 126 1 189 1 214 1 93 1 215 1 69 1 70 1 161 2 42 1 105 1 107 1 45 1 138 1 141 1 170 1 142 1 201 1 175 1 58 1 243 1 244 1 179 1 
150 1 88 1 183 3 125 3 126 1 189 1 214 3 93 1 215 1 69 3 70 3 161 2 42 3 105 3 107 1 45 3 138 1 141 1 170 3 142 1 201 3 175 1 58 1 243 1 244 3 179 3 
150 1 183 1 125 1 126 1 152 1 189 1 214 1 93 1 215 1 69 1 70 1 161 2 42 1 105 1 107 1 45 1 138 1 141 1 170 1 142 1 201 1 175 1 58 1 243 1 244 1 179 1 
138 1 126 1 152 1 141 1 142 1 189 1 93 1 215 1 175 1 161 2 58 1 243 1 105 1 107 1 
150 1 1 1 183 1 125 1 126 1 153 1 189 1 214 1 93 1 215 1 38 1 220 1 69 1 71 1 70 1 161 2 42 1 105 1 107 1 45 1 138 1 113 1 141 1 170 1 142 1 201 1 175 1 58 1 243 1 244 1 179 1 62 1 
161 1 205 1 234 1 173 1 
161 1 205 1 8 1 
161 1 185 2 43 1 180 1 
161 1 16 1 43 1 180 1 29 1 
205 1 59 1 
32 1 223 1 178 1 242 1 80 1 27 1 
18 1 238 1 57 1 120 1 164 1 121 1 123 1 
186 1 239 1 120 1 121 1 
32 1 240 1 223 1 178 1 242 1 80 1 27 1 
92 1 146 1 143 1 38 1 220 1 69 1 
70 1 69 1 
92 1 143 1 38 1 220 1 
70 1 127 1 92 1 146 1 143 1 69 2 86 1 
70 1 69 1 
184 1 
19 1 
184 1 
138 1 
138 1 
142 1 
229 1 184 1 230 1 3 1 212 1 151 1 152 1 141 1 200 1 216 1 215 1 19 1 161 2 58 1 107 1 
229 2 184 2 230 2 3 2 151 2 212 2 141 2 200 2 216 2 215 2 19 2 161 4 241 1 58 2 207 1 107 2 
229 1 184 1 230 1 3 1 212 1 151 1 141 1 200 1 216 1 215 1 19 1 161 2 241 1 58 1 107 1 
184 1 3 1 151 1 212 1 215 1 216 1 220 1 161 2 193 1 107 1 229 1 230 1 141 1 200 1 199 1 143 1 236 1 19 1 58 1 
229 1 184 1 230 1 3 1 151 1 212 1 141 1 200 1 216 1 215 1 19 1 161 2 58 1 207 1 107 1 
229 2 184 2 230 2 3 2 151 2 212 2 141 2 200 2 115 1 216 2 215 2 19 2 161 4 58 2 207 1 61 1 107 2 
229 1 184 1 230 1 3 1 151 1 212 1 141 1 200 1 216 1 115 1 215 1 19 1 161 2 58 1 61 1 107 1 
184 1 3 1 151 1 212 1 215 1 216 1 220 1 161 2 193 1 107 1 229 1 230 1 141 1 200 1 199 1 143 1 236 1 19 1 58 1 
24 1 
129 1 114 2 38 1 220 2 
12 1 114 2 38 1 220 2 
184 1 3 1 187 1 129 1 128 1 193 1 137 1 11 2 12 1 139 1 141 1 200 1 199 1 143 1 19 1 18 1 144 1 24 1 36 1 151 1 212 1 155 1 216 1 215 1 220 3 95 1 99 1 161 3 102 3 104 1 226 1 107 1 227 1 229 1 46 1 230 1 114 2 236 1 177 1 238 1 56 1 120 1 57 1 58 2 241 1 
141 1 200 1 61 1 215 1 115 1 
184 1 186 1 66 1 3 1 129 1 132 1 193 1 11 2 12 1 139 1 141 1 200 1 199 1 143 1 80 3 19 1 144 1 24 1 27 1 32 3 36 1 212 1 151 1 155 1 216 1 215 1 220 3 159 1 161 2 40 1 223 3 104 1 107 1 227 1 229 1 230 1 114 2 236 1 120 1 239 1 240 1 121 1 58 3 178 3 242 4 
1 1 184 1 3 1 127 1 68 1 215 1 220 2 158 1 97 1 71 1 161 2 133 1 106 1 107 1 196 1 228 1 75 1 47 2 141 1 171 1 143 1 199 1 19 1 55 1 58 1 
158 1 
1 1 184 1 210 1 36 2 3 1 187 1 155 1 128 1 215 1 95 1 220 3 97 1 158 1 99 1 71 1 161 3 133 1 102 4 104 1 226 1 137 1 11 2 107 1 196 1 228 1 75 1 47 2 111 1 49 1 141 1 233 1 17 1 143 2 199 2 171 1 18 1 19 1 238 1 177 1 55 2 144 1 56 1 57 1 120 1 58 2 
196 1 228 1 75 1 47 1 171 1 61 1 
1 1 32 4 184 1 186 1 210 1 36 2 3 1 66 1 155 1 215 1 220 3 97 1 158 1 159 1 71 1 132 1 161 2 133 1 40 1 223 4 104 1 11 2 107 1 196 1 228 1 75 1 47 2 49 1 141 1 233 1 17 1 143 2 199 2 171 1 80 4 19 1 55 2 144 1 120 1 239 1 240 1 58 3 121 1 178 4 242 5 27 1 
196 1 228 1 75 1 47 1 171 1 61 1 
184 1 210 1 3 1 211 1 215 1 220 2 38 1 161 2 107 1 196 1 228 1 47 1 111 1 141 1 51 1 199 1 143 2 19 1 55 2 58 1 147 1 
196 1 75 1 228 1 184 1 210 1 47 1 3 1 211 1 141 1 143 2 199 1 171 1 215 1 38 1 220 2 19 1 161 2 55 2 58 1 107 1 
32 2 184 1 186 1 210 1 36 1 3 1 66 1 155 1 215 1 220 1 158 1 159 1 132 1 161 2 40 1 223 2 104 1 11 1 107 1 196 1 228 1 75 1 47 1 49 1 141 1 233 1 143 1 199 1 171 1 80 2 19 1 55 1 144 1 120 1 239 1 240 1 58 3 121 1 178 2 242 3 27 1 
55 1 47 1 133 1 127 1 143 1 97 1 
49 1 38 1 
233 1 38 1 
1 1 184 1 3 1 215 1 220 2 158 1 97 1 71 1 161 2 133 1 107 1 196 1 228 1 75 1 47 2 141 1 171 1 143 1 199 1 19 1 55 1 58 1 

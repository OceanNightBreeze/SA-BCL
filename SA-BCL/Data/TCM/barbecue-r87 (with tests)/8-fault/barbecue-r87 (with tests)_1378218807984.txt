#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 126 
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 126 
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 9 238 169 137 215 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 121 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 9 238 169 137 202 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.StringIndexOutOfBoundsException 223 128 177 37 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.StringIndexOutOfBoundsException 223 128 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V ERROR java.lang.StringIndexOutOfBoundsException 223 128 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V ERROR java.lang.ArrayIndexOutOfBoundsException 109 60 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I | CONSTANT | 4183 | 2 -> 1
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color; | RETURN | 6680 | return null
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | RETURN | 3349 | return null
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Module:widthInBars()I | OPERATOR | 3384 | ++ -> --
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | OPERATOR | 8572 | + -> *
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | CONDITION | 11518 | if (x) -> if (!x)
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 25276 | stmt -> ;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String; | CONDITION | 10939 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
134 1 144 1 47 1 93 1 104 1 106 1 
134 1 144 1 47 1 93 1 104 1 
15 1 7 2 92 1 
22 1 49 1 237 1 144 1 50 1 181 1 194 2 34 1 84 1 242 1 108 3 39 1 95 1 16 1 154 1 155 1 18 1 232 1 173 1 
22 1 49 1 163 1 143 1 237 1 144 1 194 1 34 1 108 3 39 1 95 1 16 1 154 1 18 2 232 1 173 1 
22 1 49 1 237 2 194 1 34 1 108 2 110 1 16 2 232 3 173 1 
22 1 49 1 163 1 237 2 144 1 194 2 34 1 197 1 108 4 39 1 95 1 16 1 154 1 18 1 232 2 173 1 
34 1 49 1 173 1 149 1 
22 1 49 1 237 1 183 1 194 1 34 1 73 1 108 2 16 2 232 1 173 1 
22 1 49 1 237 1 144 2 50 1 181 1 194 1 134 1 84 1 108 3 242 1 37 1 39 1 95 1 16 1 154 2 18 1 171 1 232 1 173 1 
22 1 49 1 237 1 144 2 50 1 181 1 194 1 134 1 84 1 108 3 242 1 37 1 39 1 95 1 16 1 154 2 18 1 232 1 173 1 
22 1 49 1 216 1 237 1 144 1 127 1 53 1 194 1 134 1 34 1 108 2 37 1 16 1 154 1 232 1 171 1 173 1 
22 1 49 1 237 1 144 1 127 1 53 1 194 1 134 1 34 1 108 2 37 1 16 1 154 1 89 1 232 1 171 1 173 1 
22 1 49 1 126 1 237 1 144 1 127 1 8 1 53 1 194 1 134 1 34 1 108 2 37 1 16 1 154 1 46 1 232 1 173 1 
22 1 49 1 126 1 237 1 144 1 127 1 8 1 53 1 194 1 134 1 34 1 108 2 37 1 16 1 154 1 46 1 171 1 232 1 173 1 
22 1 49 1 237 1 194 2 34 1 108 3 110 1 16 1 232 2 173 1 
36 2 34 1 108 3 49 1 16 1 25 1 237 1 232 2 123 1 173 1 
36 1 34 1 108 2 49 1 74 1 16 2 25 1 237 1 232 1 173 1 
36 1 34 1 108 2 49 1 16 1 25 1 237 1 27 1 232 1 173 1 
36 1 34 1 108 2 49 1 16 1 25 1 237 1 232 1 54 1 173 1 
49 1 25 1 5 1 237 1 144 1 165 1 34 1 36 1 108 3 38 1 39 1 16 1 17 1 154 1 18 4 138 1 232 1 173 1 
49 1 25 1 237 1 119 1 34 1 36 1 83 1 108 2 16 1 232 1 173 1 
188 1 210 3 148 1 
210 1 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 197 1 87 1 16 5 136 1 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 2 151 2 207 3 37 1 39 1 211 4 153 1 212 2 44 2 214 1 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 3 222 2 166 2 103 1 224 14 102 3 56 3 107 1 108 4 168 3 169 1 59 2 110 1 229 1 230 1 231 2 62 1 232 3 114 1 175 1 63 2 173 1 64 2 177 2 178 1 236 1 238 1 179 1 182 4 239 4 120 1 72 2 73 1 243 2 191 1 123 1 77 3 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 3 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 1 151 2 37 1 39 1 153 1 211 4 212 2 44 2 214 1 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 166 2 102 2 224 4 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 177 2 236 1 238 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
78 1 202 1 179 1 230 1 182 4 213 1 137 1 191 1 131 1 114 1 123 1 30 4 
193 2 78 1 4 4 128 2 129 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 3 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 1 151 2 37 1 39 1 211 4 212 2 44 2 214 1 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 102 2 224 4 166 2 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 177 2 238 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
78 1 4 4 131 1 81 1 9 1 134 1 82 2 14 1 87 1 16 3 200 1 137 1 18 2 138 1 19 1 20 2 141 1 202 1 90 1 25 1 143 1 26 4 144 2 27 2 30 4 206 4 36 1 37 1 152 2 39 1 211 2 42 2 213 1 47 2 159 4 48 2 160 1 163 1 164 4 224 8 56 4 107 1 108 3 169 1 227 3 110 1 228 2 229 1 230 1 232 2 233 2 114 1 174 1 173 1 177 2 235 2 238 1 179 1 182 4 71 1 120 1 187 1 122 1 191 1 123 1 77 4 125 1 
193 2 78 1 2 2 4 4 128 2 130 1 132 2 131 1 81 1 9 1 134 1 10 2 11 4 12 4 87 1 16 3 199 2 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 33 2 150 2 36 1 151 2 37 1 39 1 211 4 212 2 40 2 44 2 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 223 2 102 2 224 4 166 2 56 3 107 1 168 2 108 3 169 1 59 2 110 1 229 1 61 2 230 1 232 2 114 1 63 2 173 1 177 2 236 1 238 1 117 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 4 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 150 2 36 1 151 2 37 1 39 1 211 4 153 1 212 2 44 2 214 1 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 166 2 102 2 224 4 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 177 2 236 1 238 1 179 1 182 4 239 4 120 1 72 2 73 1 243 2 191 1 123 1 77 3 
2 2 3 1 4 4 128 2 130 1 131 1 132 2 9 1 10 2 134 1 12 4 11 4 13 1 16 3 18 2 137 1 140 1 19 1 20 4 141 1 22 1 23 2 24 2 143 1 26 6 144 2 27 2 145 2 147 2 30 4 33 2 150 2 35 1 151 2 39 1 37 1 40 2 44 2 47 2 158 2 160 1 161 2 162 4 163 1 51 1 166 2 56 3 167 2 57 1 168 2 169 1 59 2 170 1 61 2 173 1 63 2 65 2 177 2 179 1 182 4 70 1 72 2 191 1 77 3 192 1 193 2 78 1 79 1 81 1 194 1 87 1 199 2 202 1 90 1 95 1 211 4 212 2 213 1 217 1 221 2 101 2 224 4 102 2 223 2 222 2 107 1 108 3 226 2 110 1 229 1 230 1 232 2 113 2 114 1 238 1 236 1 117 1 239 4 120 1 243 2 244 2 
146 1 
202 1 182 1 137 1 131 1 30 1 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 3 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 1 151 2 37 1 39 1 153 1 211 4 212 2 44 2 214 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 102 2 224 4 166 2 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 177 2 236 1 238 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 3 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 1 151 2 37 1 39 1 153 1 211 4 212 2 44 2 214 1 215 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 102 2 224 4 166 2 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 177 2 236 1 238 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
193 2 78 1 4 4 128 2 130 1 132 2 131 1 81 1 9 1 133 1 134 1 10 2 11 4 12 2 87 1 16 3 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 205 1 150 2 36 1 151 2 37 1 39 1 211 4 212 2 44 2 214 1 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 166 2 102 2 224 4 56 3 107 1 108 3 168 2 169 1 59 2 110 1 229 1 230 1 62 1 232 2 114 1 63 2 173 1 64 2 234 1 177 2 236 1 238 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 121 1 123 1 77 3 
193 2 78 1 2 2 4 4 128 2 130 1 132 2 131 1 81 1 9 1 134 1 10 2 11 4 12 4 87 1 16 3 199 2 137 1 18 2 138 1 140 1 19 1 20 4 141 1 23 2 202 1 24 2 90 1 25 1 143 1 26 6 144 2 145 2 27 2 147 2 30 4 33 2 150 2 36 1 151 2 37 1 39 1 211 4 212 2 40 2 44 2 213 1 158 2 47 2 160 1 161 2 163 1 162 4 101 2 221 2 222 2 223 2 102 2 224 4 166 2 56 3 107 1 168 2 108 3 169 1 59 2 110 1 229 1 61 2 230 1 232 2 114 1 63 2 173 1 177 2 236 1 238 1 117 1 179 1 182 4 239 4 120 1 72 2 243 2 191 1 123 1 77 3 
99 1 224 1 103 1 
209 1 224 1 
52 1 224 1 
218 1 26 1 127 1 144 1 8 1 80 1 53 1 224 1 55 1 134 1 86 1 77 1 
134 1 26 1 144 1 127 1 80 1 53 1 224 1 
52 1 224 1 
134 1 189 1 26 1 144 1 224 1 77 1 
112 1 224 1 
52 1 224 1 
209 1 224 1 
209 1 224 1 
115 1 164 1 224 1 201 1 
224 1 172 1 159 1 
160 1 4 2 68 1 69 2 25 1 220 1 52 1 224 2 36 1 82 1 108 2 245 1 16 1 76 1 232 1 173 1 124 1 
1 1 
36 1 160 1 82 1 108 2 245 1 16 1 25 1 220 1 76 1 232 1 124 1 173 1 149 1 
160 1 22 1 168 1 108 2 16 1 221 1 102 1 232 1 194 1 140 1 173 1 
160 1 22 1 221 2 102 2 194 2 108 3 168 2 88 1 16 1 232 1 140 1 173 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 40 1 44 1 158 1 
160 1 22 1 221 2 102 2 194 2 108 3 168 2 88 1 16 1 232 1 140 1 173 1 
193 2 2 2 3 1 4 4 79 1 128 2 132 2 194 1 134 1 10 2 12 2 11 4 13 1 87 1 16 2 18 1 140 1 20 4 141 1 22 1 23 2 24 2 143 1 26 6 144 2 27 2 145 2 147 2 35 1 150 2 151 2 37 1 39 1 95 1 211 4 212 2 44 2 47 2 158 2 160 1 161 2 217 1 162 4 221 1 101 2 51 1 222 2 166 2 224 4 102 1 167 2 56 3 107 1 57 1 108 3 168 1 226 2 59 2 170 1 229 1 113 2 232 1 173 1 63 2 65 2 177 2 239 4 70 1 73 1 72 2 244 2 243 2 192 1 77 3 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 2 162 2 221 1 128 1 101 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 2 147 1 150 1 151 1 72 1 243 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 40 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 112 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 44 1 158 1 
160 1 4 2 162 2 221 1 128 1 101 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 2 147 1 33 1 150 1 151 1 72 1 243 1 40 1 44 1 43 2 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 43 2 158 1 
160 1 22 1 221 1 102 1 194 1 108 2 168 1 88 1 16 1 232 1 140 1 173 1 66 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 43 2 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 205 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
193 1 160 1 161 1 218 1 128 1 221 2 127 1 8 1 53 1 223 1 224 2 102 2 103 2 194 2 55 1 134 1 12 1 86 1 168 2 108 3 197 1 88 1 16 4 229 1 135 1 232 2 140 1 173 1 22 1 177 1 26 1 144 1 27 1 240 1 120 1 151 1 94 1 73 1 243 1 37 1 46 1 77 1 
160 1 22 1 128 1 221 1 223 1 102 1 194 1 12 1 151 1 108 2 168 1 243 1 88 1 16 1 199 1 232 1 140 1 173 1 
193 1 2 1 4 2 128 1 132 1 194 1 10 1 12 1 11 2 87 1 16 1 18 1 140 1 20 2 141 1 22 1 23 1 24 1 143 1 26 3 144 1 27 1 145 1 147 1 150 1 151 1 39 1 95 1 211 2 212 1 44 1 47 1 158 1 160 1 161 1 162 2 221 1 101 1 166 1 224 2 102 1 222 1 167 1 56 3 108 3 168 1 226 1 59 1 113 1 232 1 173 1 63 1 65 1 177 1 239 2 70 1 72 1 244 1 243 1 
160 1 22 1 221 1 102 1 194 1 108 2 168 1 226 1 88 1 16 1 232 1 140 1 173 1 
193 1 2 1 4 2 128 1 132 1 10 1 12 2 11 2 87 1 199 1 18 1 138 1 20 2 141 1 23 1 24 1 143 1 26 3 144 1 27 1 145 1 147 1 33 1 150 1 151 1 39 1 211 2 212 1 40 1 44 1 47 1 158 1 161 1 162 2 101 1 166 1 224 2 223 1 222 1 167 1 56 3 108 1 226 1 59 1 61 1 113 1 63 1 65 1 177 1 239 2 70 1 72 1 244 1 243 1 123 1 
193 1 2 1 4 2 128 1 132 1 194 1 10 1 12 1 11 2 87 1 16 1 18 1 140 1 20 2 141 1 22 1 23 1 24 1 143 1 26 3 144 1 27 1 145 1 147 1 205 1 150 1 151 1 39 1 95 1 211 2 212 1 44 1 47 1 158 1 160 1 161 1 162 2 221 1 101 1 222 1 166 1 224 2 102 1 167 1 56 3 108 3 168 1 226 1 59 1 113 1 232 1 173 1 63 1 65 1 177 1 239 2 70 1 72 1 244 1 243 1 
193 1 2 1 4 2 128 1 132 1 10 1 12 1 11 2 87 1 16 1 18 1 138 1 140 1 20 2 141 1 23 1 24 1 143 1 25 1 26 3 144 1 145 1 27 1 147 1 205 1 150 1 36 1 151 1 39 1 211 2 212 1 44 1 47 1 158 1 160 1 161 1 162 2 221 1 101 1 222 1 166 1 224 2 102 1 167 1 56 3 108 3 168 1 226 1 59 1 113 1 232 1 173 1 63 1 65 1 177 1 239 2 70 1 72 1 244 1 243 1 123 1 
160 1 4 2 162 2 101 1 221 1 128 1 132 1 222 1 102 1 223 1 194 1 10 1 11 2 12 2 168 1 108 2 88 1 59 1 16 1 199 1 61 1 232 1 140 1 63 1 173 1 22 1 23 1 24 1 145 1 239 2 147 1 33 1 150 1 151 1 72 1 243 1 40 1 44 1 158 1 
160 1 4 1 162 1 221 1 128 1 101 1 222 1 102 1 223 1 132 1 194 1 10 1 11 1 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 1 147 1 151 1 72 1 243 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 2 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 2 147 1 150 1 72 1 151 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
2 1 211 1 224 1 32 1 20 1 
211 1 224 1 166 1 32 1 20 1 
2 1 109 1 60 1 211 1 224 1 20 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 40 1 44 1 158 1 
193 1 2 1 4 2 127 1 128 1 8 4 80 1 132 1 194 1 10 1 134 1 11 2 86 3 12 2 88 1 16 2 199 1 140 1 20 2 22 1 23 1 24 1 26 3 144 1 145 1 27 1 147 1 33 1 150 1 151 1 37 1 211 2 212 1 40 1 44 1 46 1 158 1 47 1 160 1 161 1 218 3 162 2 101 1 221 1 53 1 222 1 166 1 224 2 102 1 223 1 55 3 107 1 108 2 168 1 59 1 229 1 61 1 232 1 63 1 173 1 177 1 239 2 120 1 72 1 243 1 77 3 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 205 1 150 1 151 1 72 1 243 1 212 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 2 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 33 1 150 1 151 1 72 1 243 1 212 1 40 1 44 1 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 212 1 44 1 43 2 158 1 
160 1 4 2 162 2 221 1 128 1 101 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 2 147 1 150 1 151 1 72 1 243 1 44 1 43 2 158 1 
160 1 4 3 162 2 221 1 128 1 101 1 52 1 222 1 102 1 223 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 88 1 16 1 199 1 112 1 61 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 44 1 158 1 
160 1 4 3 162 2 128 1 221 1 101 1 52 1 222 1 102 1 132 1 194 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 3 147 1 150 1 151 1 72 1 243 1 44 1 158 1 
193 1 160 1 161 1 98 1 216 1 219 1 218 2 50 1 127 1 8 3 53 1 103 3 224 4 194 1 55 2 134 1 84 1 107 1 86 2 82 1 108 2 16 2 229 1 18 1 232 1 173 1 22 1 177 1 67 1 26 2 144 1 181 1 27 1 29 1 184 1 120 1 242 1 37 1 41 1 46 1 77 2 
160 1 193 1 161 1 98 1 219 1 218 2 127 1 8 3 53 1 103 3 224 4 194 1 55 2 105 1 167 1 134 1 107 1 83 1 86 2 82 1 13 1 108 2 58 1 16 1 229 1 113 1 232 1 139 1 173 1 65 1 22 1 177 1 67 1 26 2 144 1 27 1 119 1 29 1 184 1 31 1 244 1 41 1 46 1 77 2 
160 1 4 2 162 2 101 1 221 1 128 1 132 1 222 1 102 1 194 1 133 1 10 1 11 2 12 1 168 1 108 2 59 1 16 1 62 1 232 1 140 1 173 1 63 1 22 1 23 1 24 1 145 1 239 2 147 1 150 1 151 1 72 1 243 1 44 1 214 1 158 1 
160 1 22 1 221 1 102 1 194 1 133 2 108 2 168 1 16 1 214 1 62 1 232 1 140 1 173 1 176 1 
160 1 22 1 221 1 102 1 194 1 54 1 133 1 108 2 168 1 16 1 214 1 62 1 232 1 140 1 173 1 
160 1 162 1 101 1 221 1 132 1 102 1 194 1 54 1 133 1 10 1 11 1 12 1 108 2 168 1 16 1 232 1 140 1 173 1 22 1 23 1 24 1 151 1 44 1 214 1 158 1 
160 1 22 1 221 1 52 1 224 1 102 1 194 1 32 1 133 1 225 1 108 2 168 1 211 1 16 1 214 1 62 1 232 1 140 1 173 1 20 1 64 1 
160 1 22 1 168 1 108 2 16 1 221 1 214 1 62 1 102 1 232 1 194 1 140 1 173 1 133 1 
108 1 208 1 247 1 186 1 
108 1 6 1 116 1 155 1 75 1 
108 1 208 1 28 1 
108 1 111 2 155 1 75 1 
208 1 157 1 
86 1 218 1 8 1 46 1 55 1 77 1 
134 1 107 1 229 1 144 1 
218 1 8 1 80 1 55 1 86 1 46 1 77 1 
167 1 134 1 13 1 244 1 96 1 144 1 113 1 
150 1 24 1 4 1 162 2 7 1 239 1 185 1 
24 1 162 1 
150 1 4 1 162 1 52 1 239 1 224 1 
24 1 162 1 
4 1 52 1 239 1 224 1 
25 1 
36 1 
36 1 
194 1 
22 1 
194 1 
160 1 21 1 100 1 118 1 204 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 45 1 232 1 173 1 
160 1 21 1 100 1 204 1 54 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 45 1 232 1 173 1 
160 2 21 2 142 1 100 2 118 1 204 2 82 2 196 2 108 4 190 2 16 2 111 2 198 2 45 2 232 2 173 2 
160 1 21 1 100 1 204 1 149 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 156 1 45 1 232 1 173 1 
160 1 21 1 4 2 100 1 52 1 204 1 224 1 85 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 45 1 97 2 232 1 159 1 173 1 
180 1 
52 1 224 2 103 2 195 1 
0 1 52 1 224 2 103 2 
193 1 160 1 0 1 161 1 4 1 100 1 224 2 103 2 195 1 167 1 56 2 85 1 82 1 108 3 196 1 87 1 16 2 111 1 198 1 18 1 113 1 232 1 173 1 65 1 141 1 21 1 177 1 143 1 26 2 180 1 144 1 27 1 118 1 204 1 70 1 241 1 73 1 244 1 39 1 190 1 95 1 45 1 97 1 
160 1 198 1 156 1 173 1 149 1 
193 1 160 1 0 1 161 1 4 1 218 3 100 1 127 1 164 1 8 4 80 1 53 1 224 3 103 2 55 3 195 1 134 1 107 1 85 1 86 3 82 1 108 2 196 1 16 3 229 1 111 1 198 1 232 1 173 1 21 1 177 1 26 2 180 1 144 1 27 1 204 1 120 1 73 1 37 1 190 1 45 1 46 1 97 1 159 1 77 3 
160 1 21 1 4 1 100 1 52 1 204 1 224 3 85 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 45 1 97 1 232 1 159 2 173 1 
160 1 21 1 142 1 100 1 204 1 82 1 196 1 108 2 190 1 16 1 111 1 198 1 45 1 232 1 173 1 
160 2 21 2 142 1 100 2 204 2 149 1 82 2 196 2 108 4 190 2 16 2 111 2 198 2 156 1 45 2 232 2 173 2 
14 1 227 1 71 1 125 1 149 1 187 1 
160 1 4 2 52 1 224 2 82 1 108 2 14 1 227 1 16 1 111 1 232 1 173 1 201 1 235 1 91 1 203 1 71 1 206 2 246 1 45 1 159 1 
160 1 4 2 235 1 52 1 224 2 71 1 206 2 187 1 82 1 14 1 108 2 227 1 16 1 111 1 45 1 232 1 159 1 125 1 173 1 201 1 
160 1 4 1 218 2 127 1 164 1 8 3 80 1 53 1 224 1 55 2 134 1 107 1 86 2 82 1 108 2 14 1 227 1 16 3 228 1 111 1 229 1 232 1 173 1 177 1 235 1 26 1 144 1 27 1 71 1 120 1 206 1 187 1 73 1 37 1 42 1 45 1 46 1 159 1 77 2 125 1 48 1 
152 1 4 1 227 1 7 1 233 1 206 1 
42 1 52 1 
228 1 52 1 
160 1 4 1 224 2 71 1 206 1 187 1 82 1 14 1 108 2 152 1 227 2 211 1 16 1 111 1 45 1 232 1 233 1 159 1 125 1 173 1 20 1 48 1 
160 1 4 1 7 1 224 2 82 1 108 2 14 1 227 2 16 1 111 1 232 1 172 1 233 1 173 1 20 1 92 1 71 1 187 1 206 1 152 1 211 1 45 1 125 1 159 1 48 1 
48 1 
160 1 4 2 164 2 224 3 167 1 56 4 82 1 108 3 14 1 87 1 227 2 16 2 228 1 111 1 18 1 113 1 232 1 233 1 173 1 65 1 20 1 141 1 177 1 235 1 143 1 26 2 144 1 91 1 27 1 70 1 71 1 206 2 187 1 73 1 244 1 152 1 39 1 95 1 211 1 42 1 45 1 47 1 159 2 125 1 48 1 
14 1 227 1 71 1 125 1 149 1 187 1 
4 2 127 1 8 5 80 1 134 1 82 1 86 4 14 1 16 3 20 1 26 2 144 1 27 1 206 2 37 1 152 1 211 1 42 1 45 1 46 1 47 1 159 2 48 1 160 1 218 4 164 2 53 1 224 3 55 4 107 1 108 2 227 2 228 1 229 1 111 1 232 1 233 1 173 1 177 1 235 1 120 1 71 1 187 1 73 1 125 1 77 4 

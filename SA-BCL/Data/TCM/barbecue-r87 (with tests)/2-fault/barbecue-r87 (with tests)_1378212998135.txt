#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 213 251 241 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 28200 | stmt -> ;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 1 54 1 105 1 145 1 252 1 151 1 
80 1 54 1 105 1 145 1 252 1 
9 1 130 2 85 1 
194 3 174 2 215 2 3 1 65 1 200 1 234 2 75 1 40 1 191 2 60 1 
171 1 194 2 145 1 174 2 81 1 215 4 65 1 200 1 88 1 234 2 238 1 75 1 141 1 40 1 191 1 223 1 
171 1 194 1 145 1 174 1 132 1 215 3 65 1 200 1 230 1 88 1 234 1 238 1 75 1 206 1 141 1 156 1 40 1 191 1 
171 2 194 1 242 1 145 1 81 1 174 1 215 3 65 1 200 1 88 1 234 1 238 1 75 1 141 1 40 1 191 1 
91 1 65 1 75 1 200 1 
194 1 174 1 11 1 215 2 65 1 200 1 234 1 75 1 169 1 40 1 191 2 
171 1 194 1 145 2 174 1 132 1 215 3 65 1 200 1 230 1 88 1 234 1 153 1 252 1 237 1 238 2 206 1 141 1 40 1 191 1 156 1 
171 1 194 1 145 2 174 1 132 1 215 3 65 1 200 1 230 1 88 1 234 1 153 1 252 1 238 2 206 1 141 1 40 1 191 1 156 1 
194 1 145 1 174 1 215 2 117 1 65 1 200 1 20 1 127 1 234 1 153 1 252 1 237 1 238 1 75 1 40 1 191 1 
194 1 145 1 174 1 215 2 65 1 200 1 231 1 20 1 127 1 234 1 153 1 252 1 237 1 238 1 75 1 40 1 191 1 
193 1 194 1 145 1 174 1 215 2 65 1 150 1 200 1 227 1 20 1 127 1 234 1 153 1 252 1 238 1 75 1 40 1 191 1 
193 1 194 1 145 1 174 1 215 2 65 1 150 1 200 1 227 1 20 1 127 1 234 1 153 1 252 1 237 1 238 1 75 1 40 1 191 1 
194 2 174 1 215 3 65 1 200 1 234 2 75 1 40 1 191 1 60 1 
194 2 174 1 215 3 65 1 200 1 15 2 75 1 142 1 191 1 254 1 
194 1 174 1 215 2 65 1 75 1 15 1 200 1 191 2 142 1 165 1 
194 1 174 1 215 2 65 1 75 1 155 1 15 1 200 1 191 1 142 1 
195 1 194 1 174 1 215 2 65 1 75 1 15 1 200 1 191 1 142 1 
171 4 194 1 145 1 146 1 158 1 174 1 215 3 82 1 65 1 200 1 15 1 88 1 238 1 75 1 38 1 253 1 142 1 191 1 
194 1 2 1 174 1 215 2 65 1 226 1 200 1 15 1 75 1 142 1 191 1 
249 3 187 1 149 1 
249 1 
131 3 1 1 134 1 137 2 139 3 8 1 10 3 142 1 143 2 145 2 144 2 15 2 18 3 16 2 153 1 21 1 155 2 157 1 22 4 162 1 166 4 35 1 37 4 167 2 39 3 169 1 41 2 171 2 45 6 173 1 46 3 47 1 176 1 50 1 179 3 54 2 183 3 184 5 56 2 186 1 188 1 58 2 191 5 60 1 194 4 62 1 65 1 69 2 202 2 70 1 204 1 71 4 74 3 77 3 207 3 79 1 210 1 212 1 213 1 214 2 81 1 215 4 86 2 87 5 88 1 220 3 222 1 224 14 223 1 98 1 225 1 100 2 101 1 103 1 232 3 233 1 235 1 109 1 108 1 110 1 111 3 115 1 242 1 116 1 243 2 119 3 124 1 126 4 128 4 250 2 251 1 129 2 252 1 253 1 254 1 
62 1 194 2 131 3 65 1 134 1 137 2 69 2 202 2 139 3 8 1 71 4 204 1 77 2 10 3 142 1 143 2 207 3 79 1 212 1 144 2 145 2 213 1 81 1 214 2 215 3 15 1 86 2 16 2 18 3 87 5 88 1 220 3 153 1 155 2 21 1 222 1 224 4 157 1 98 1 22 4 225 1 101 1 162 1 103 1 232 2 166 4 233 1 235 1 109 1 35 1 108 1 110 1 37 4 111 3 167 2 39 3 41 2 171 2 242 1 115 1 116 1 45 6 243 2 173 1 46 2 119 3 50 1 176 1 179 3 124 1 54 2 126 4 128 4 250 2 183 3 251 1 184 5 56 2 129 2 186 1 252 1 188 1 58 2 253 1 191 3 254 1 60 1 
22 4 116 1 213 1 225 1 176 1 8 1 251 1 71 4 110 1 186 1 222 1 254 1 
22 1 213 1 71 1 251 1 186 1 
194 2 62 1 131 3 65 1 134 1 137 2 69 2 202 2 139 3 71 4 8 1 204 1 77 2 10 3 142 1 143 2 207 3 79 1 212 1 144 2 145 2 213 1 81 1 214 2 215 3 15 1 86 2 16 2 18 3 87 5 88 1 220 3 153 1 155 2 21 1 222 1 224 4 157 1 98 1 22 4 101 1 162 1 103 1 232 2 166 4 233 1 235 1 109 1 35 1 108 1 110 1 37 4 111 3 167 2 39 3 41 2 171 2 242 1 115 1 116 1 45 6 172 1 243 2 173 1 46 2 118 1 119 3 50 1 176 1 179 3 124 1 54 2 126 4 128 4 250 2 183 3 251 1 184 5 56 2 129 2 186 1 252 1 58 2 253 1 191 3 254 1 60 1 
194 2 62 1 131 3 65 1 134 1 137 2 69 2 202 2 139 3 71 4 8 1 204 1 77 2 10 3 142 1 143 2 207 3 79 1 212 1 144 2 145 2 213 1 81 1 214 2 215 3 15 1 86 2 16 2 18 3 87 5 88 1 220 3 153 1 155 2 21 1 222 1 224 4 157 1 98 1 22 4 101 1 162 1 103 1 232 2 166 4 233 1 235 1 109 1 35 1 108 1 110 1 37 4 111 3 167 2 39 3 41 2 171 2 242 1 115 1 116 1 45 6 172 1 243 2 173 1 46 2 118 1 119 3 50 1 176 1 179 3 124 1 54 2 126 4 128 4 250 2 183 3 184 5 56 2 129 2 186 1 252 1 58 2 189 1 253 1 191 3 254 1 60 1 
131 5 5 1 134 1 136 2 137 2 139 3 8 1 142 4 10 3 143 2 145 2 144 2 15 4 18 3 16 2 19 2 153 1 21 1 155 2 157 1 22 4 24 1 162 1 166 4 37 6 167 2 39 3 41 2 171 2 45 6 172 1 173 4 46 5 176 1 50 1 179 3 54 2 183 3 184 5 56 2 186 1 58 2 57 2 191 6 60 1 194 5 62 1 65 4 67 2 69 2 202 2 204 4 71 4 77 5 207 3 79 1 212 1 213 1 214 2 81 1 215 9 86 2 87 5 88 1 90 1 220 3 222 1 97 1 224 6 98 1 225 1 101 1 228 1 103 1 232 5 233 1 106 2 235 1 109 1 108 1 110 1 111 3 112 2 241 1 115 1 242 1 116 1 243 2 118 1 119 3 124 1 126 6 128 4 250 2 251 1 129 2 252 1 253 1 254 1 
194 2 62 1 64 2 198 1 65 1 6 4 134 1 204 1 8 1 71 4 142 1 207 4 79 1 208 1 212 1 145 2 213 1 81 1 215 3 84 1 15 1 86 2 217 1 88 1 220 4 153 1 95 2 221 3 155 2 222 1 224 8 98 1 22 4 225 1 101 1 162 1 30 2 31 1 104 2 34 2 235 1 108 1 110 1 37 2 239 4 171 3 240 1 115 1 242 2 116 1 45 4 244 4 176 1 50 1 180 2 124 1 54 2 181 1 126 2 128 4 251 1 186 1 252 1 188 1 191 3 253 1 190 2 254 1 60 1 
194 2 62 1 131 4 65 1 67 2 136 2 134 1 137 2 69 2 202 2 139 2 204 1 8 1 71 4 77 2 10 2 142 1 143 2 207 3 79 1 212 1 145 2 213 1 81 1 214 2 215 4 15 1 86 2 16 2 18 2 87 4 88 1 19 2 220 3 153 1 222 1 155 2 157 1 224 4 98 1 22 4 225 1 101 1 162 1 228 1 232 2 166 4 233 1 106 2 235 1 108 1 110 1 111 2 37 4 167 2 112 2 39 2 41 2 171 2 115 1 242 1 116 1 45 6 243 2 173 1 46 2 119 2 176 1 50 1 179 2 124 1 54 2 126 4 128 4 250 2 183 2 184 4 251 1 56 2 129 2 186 1 252 1 57 2 58 2 191 3 253 1 254 1 60 1 
194 2 62 1 131 4 65 1 67 2 136 2 134 1 137 2 69 2 202 2 139 2 204 1 8 1 71 4 77 2 10 2 142 1 143 2 207 3 79 1 212 1 145 2 213 1 81 1 214 2 215 3 15 1 86 2 16 2 18 2 87 4 88 1 19 2 220 3 153 1 222 1 155 2 157 1 224 4 98 1 22 4 225 1 101 1 162 1 228 1 232 2 166 4 233 1 106 2 235 1 108 1 110 1 111 2 37 4 167 2 112 2 39 2 41 2 171 2 115 1 242 1 116 1 45 6 243 2 173 1 46 2 119 2 176 1 50 1 177 1 179 2 124 1 54 2 126 4 128 4 250 2 183 2 184 4 251 1 56 2 129 2 186 1 252 1 188 1 57 2 58 2 191 3 253 1 254 1 60 1 
194 2 62 1 131 3 0 1 65 1 134 1 137 2 69 2 202 2 139 3 8 1 71 4 204 1 77 2 10 3 142 1 143 2 207 3 79 1 212 1 144 2 145 2 213 1 81 1 214 2 215 3 15 1 86 2 16 2 18 3 87 5 88 1 220 3 153 1 155 2 21 1 222 1 224 4 98 1 22 4 225 1 101 1 162 1 103 1 232 2 166 4 235 1 109 1 108 1 110 1 37 4 111 3 167 2 39 3 41 2 171 2 115 1 242 1 116 1 45 6 172 1 243 2 173 1 46 2 118 1 119 3 50 1 176 1 179 3 124 1 54 2 126 4 128 4 250 2 183 3 251 1 184 5 56 2 129 2 186 1 252 1 58 2 253 1 191 3 254 1 60 1 
7 1 
131 3 134 1 137 2 139 3 8 1 142 1 10 3 143 2 145 2 144 2 15 1 18 3 16 2 153 1 21 1 155 2 157 1 22 4 162 1 166 4 35 1 37 4 167 2 39 3 169 1 41 2 171 3 45 6 173 1 172 1 46 2 176 1 50 1 179 3 54 2 183 3 184 5 56 2 186 1 58 2 188 1 191 4 60 1 194 2 62 1 65 1 68 1 69 2 202 2 204 1 71 4 77 2 207 3 79 1 212 1 213 1 214 2 81 1 215 3 86 2 87 5 88 1 220 3 222 1 224 4 98 1 225 1 101 1 103 1 232 2 233 1 235 1 108 1 109 1 110 1 111 3 115 1 242 2 116 1 243 2 118 1 119 3 124 1 126 4 128 4 250 2 251 1 129 2 252 1 253 1 254 1 
131 4 134 1 136 2 137 2 139 2 8 1 141 1 10 2 143 2 145 2 12 2 18 2 16 2 19 2 153 1 155 2 157 1 22 4 25 1 26 1 162 1 33 1 166 4 37 4 167 2 39 2 40 1 41 2 171 2 42 1 45 6 173 1 175 1 46 2 50 1 176 1 177 1 179 2 54 2 55 1 183 2 184 4 56 2 186 1 188 1 58 2 57 2 59 1 191 3 60 1 61 1 62 1 194 2 63 2 65 1 67 2 69 2 202 2 71 4 204 1 77 2 207 3 79 1 209 1 212 1 213 1 214 2 81 1 215 3 86 2 87 4 88 1 220 3 93 2 222 1 224 4 98 1 225 1 101 1 228 1 232 2 106 2 233 1 235 1 234 1 108 1 110 1 111 2 112 2 113 2 242 1 115 1 116 1 243 2 119 2 123 2 124 1 248 1 126 4 128 4 250 2 251 1 129 2 252 1 
1 1 236 1 224 1 
216 1 224 1 
159 1 224 1 
159 1 224 1 
193 1 145 1 45 1 148 1 53 1 20 1 127 1 252 1 154 1 168 1 207 1 224 1 
145 1 127 1 20 1 45 1 154 1 252 1 224 1 
145 1 45 1 252 1 246 1 207 1 224 1 
216 1 224 1 
216 1 224 1 
196 1 224 1 
159 1 224 1 
6 1 78 1 224 1 
49 1 239 1 164 1 224 1 
194 1 215 2 65 1 28 1 216 1 133 1 135 1 247 2 125 1 128 2 234 1 204 1 72 1 95 1 40 1 191 1 224 2 
4 1 
194 1 215 2 65 1 133 1 135 1 125 1 91 1 234 1 204 1 72 1 95 1 40 1 191 1 
194 1 131 1 63 1 65 1 137 1 69 1 202 1 139 1 204 1 141 1 77 1 10 1 143 1 212 1 145 1 214 1 215 3 12 1 86 1 18 1 16 1 87 2 88 1 220 3 93 1 155 1 224 2 232 1 106 1 166 2 234 1 37 2 111 1 167 1 39 1 40 1 41 1 113 1 42 1 171 1 242 1 45 3 243 1 173 1 46 1 119 1 50 1 123 1 179 1 54 1 126 2 128 2 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 173 1 46 1 215 2 65 1 232 1 182 1 234 1 204 1 77 1 40 1 191 1 113 1 
131 2 63 1 67 1 136 1 137 1 69 1 202 1 139 1 10 1 143 1 212 1 145 1 214 1 215 1 12 1 86 1 18 1 16 1 87 2 88 1 19 1 220 3 93 1 155 1 224 2 106 1 166 2 37 2 111 1 167 1 112 1 39 1 41 1 113 1 42 1 171 1 242 1 45 3 243 1 119 1 50 1 123 1 179 1 54 1 126 2 128 2 250 1 183 1 184 2 56 1 129 1 58 1 57 1 253 1 254 1 
194 1 131 2 63 1 65 1 68 1 137 2 69 2 202 1 139 2 204 1 141 1 77 1 10 2 143 1 212 1 145 1 214 2 215 3 12 1 86 1 18 2 16 2 87 4 88 1 220 3 93 1 155 1 224 2 232 1 106 1 166 4 234 1 37 2 111 2 167 1 39 2 40 1 41 1 113 1 42 1 171 1 242 1 45 3 243 2 173 1 46 1 119 2 50 1 123 1 179 2 54 1 126 2 128 2 250 2 183 2 184 4 56 2 129 2 58 2 191 1 
194 1 131 2 63 1 65 1 68 1 137 2 69 2 202 1 139 2 204 1 77 1 142 1 10 2 143 1 212 1 145 1 214 2 215 3 12 1 15 1 86 1 18 2 16 2 87 4 88 1 220 3 93 1 155 1 224 2 232 1 106 1 166 4 37 2 111 2 167 1 39 2 41 1 113 1 42 1 171 1 242 1 45 3 243 2 173 1 46 1 119 2 50 1 123 1 179 2 54 1 126 2 128 2 250 2 183 2 184 4 56 2 129 2 58 2 253 1 191 1 254 1 
194 1 131 2 65 1 67 1 136 1 137 1 232 1 69 1 166 2 139 1 234 1 204 1 111 1 112 1 39 1 77 1 10 1 40 1 243 1 173 1 46 1 214 1 215 2 119 1 16 1 18 1 179 1 87 2 19 1 128 2 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 1 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 182 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 67 1 136 1 137 1 69 1 232 1 166 2 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 2 250 1 183 1 182 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
126 1 106 1 92 1 37 1 224 1 
126 1 92 1 37 1 143 1 224 1 
126 1 106 1 245 1 73 1 37 1 224 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
193 4 194 1 131 2 65 1 67 1 136 1 137 1 69 1 202 1 139 1 204 1 77 1 10 1 143 1 207 3 79 1 145 1 214 1 215 2 148 3 86 1 16 1 18 1 87 2 19 1 20 1 153 1 154 1 155 1 224 2 98 1 162 1 227 1 232 1 106 1 166 2 234 1 111 1 37 2 167 1 168 3 112 1 39 1 40 1 41 1 45 3 243 1 173 1 46 1 119 1 53 3 179 1 54 1 126 2 127 1 128 2 250 1 183 1 182 1 184 2 56 1 129 1 252 1 57 1 58 1 191 2 
194 1 131 2 196 1 65 1 68 1 137 2 232 1 69 2 166 5 139 2 234 1 204 1 111 2 167 1 77 1 39 2 40 1 10 2 243 2 173 1 46 1 214 2 215 2 119 2 216 1 18 2 16 2 179 2 87 4 128 3 250 2 183 2 184 4 56 2 129 2 58 2 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 1 65 1 67 1 136 1 137 1 69 1 232 1 107 2 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 182 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 107 2 166 3 139 1 234 1 204 1 111 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 107 2 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 173 1 46 1 215 2 65 1 51 1 232 1 182 1 234 1 204 1 77 1 40 1 191 1 
194 1 131 1 65 1 137 1 232 1 69 1 107 2 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 2 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 68 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 137 1 232 1 69 1 166 3 139 1 234 1 204 1 111 1 167 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 184 2 56 1 129 1 57 1 58 1 191 1 
193 3 194 2 131 1 1 3 65 1 67 1 137 1 69 1 202 1 139 1 204 1 77 2 10 1 207 2 79 1 145 1 214 1 215 3 148 2 83 1 86 1 17 1 18 1 16 1 87 2 20 1 153 1 154 1 155 1 223 1 224 3 98 1 162 1 227 2 29 1 231 1 232 2 166 2 234 2 111 1 168 2 39 1 169 1 40 1 41 1 45 2 243 1 173 1 46 2 119 1 121 1 53 2 179 1 128 2 127 1 250 1 183 1 182 1 184 2 56 1 129 1 252 1 58 1 191 4 
194 1 131 1 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 182 1 184 2 56 1 129 1 58 1 191 1 
232 2 194 1 234 2 173 1 182 1 46 2 204 1 215 3 65 1 77 2 191 1 40 1 
61 1 194 1 131 2 63 2 65 1 137 2 69 2 202 2 139 2 204 1 141 1 77 1 10 2 143 2 207 3 79 1 209 1 212 1 145 2 214 2 215 3 12 2 86 2 18 2 16 2 87 4 88 1 220 3 93 2 153 1 155 2 224 4 98 1 25 1 26 1 232 1 33 1 106 2 166 4 234 1 37 4 111 2 167 2 39 2 40 1 169 1 41 2 113 2 42 1 171 1 242 1 45 6 243 2 173 1 175 1 46 1 119 2 50 1 123 2 179 2 248 1 54 2 126 4 128 4 55 1 250 2 183 2 184 4 56 2 129 2 252 1 59 1 58 2 191 2 
194 1 131 1 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 128 3 250 1 183 1 182 1 184 2 56 1 129 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 107 2 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
194 1 173 1 46 2 215 3 65 1 232 2 182 1 234 2 204 1 77 2 40 1 191 1 
194 1 131 2 65 1 67 1 136 1 137 1 69 1 232 1 166 3 139 1 234 1 204 1 111 1 167 1 112 1 77 1 39 1 40 1 10 1 243 1 173 1 46 1 214 1 215 2 119 1 216 1 18 1 16 1 179 1 87 2 19 1 128 3 250 1 183 1 182 1 184 2 56 1 129 1 57 1 58 1 191 1 
232 1 194 1 234 1 173 1 46 1 204 1 215 2 65 1 77 1 191 1 40 1 
193 3 194 1 98 1 23 1 63 1 1 3 2 1 226 1 65 1 27 1 161 1 160 1 227 1 163 1 202 1 234 1 204 1 168 2 40 1 41 1 207 2 79 1 114 1 145 1 45 2 44 1 215 2 12 1 148 2 13 1 86 1 123 1 53 2 178 1 218 1 127 1 20 1 55 1 93 1 95 1 252 1 155 1 191 1 224 4 
193 3 194 1 98 1 1 3 132 1 65 1 27 1 160 1 162 1 227 1 230 1 202 1 234 1 204 1 206 1 168 2 41 1 40 1 207 2 171 1 79 1 114 1 145 1 45 2 44 1 215 2 117 1 148 2 86 1 53 2 178 1 218 1 20 1 127 1 95 1 153 1 252 1 155 1 156 1 191 2 224 4 
194 1 131 1 65 1 103 1 232 1 139 1 234 1 109 1 204 1 111 1 39 1 77 1 10 1 40 1 173 1 46 1 215 2 119 1 18 1 179 1 87 1 183 1 184 1 21 1 191 1 
194 1 131 3 65 1 68 1 103 1 137 1 69 1 232 1 166 2 139 3 234 1 109 1 204 1 111 3 167 1 39 3 77 1 10 3 40 1 243 1 173 1 214 1 46 1 215 2 119 3 16 1 18 3 179 3 87 4 128 2 250 1 183 3 184 4 56 1 129 1 58 1 21 2 130 1 191 1 
194 1 131 1 65 1 103 1 232 1 138 1 139 1 234 1 109 1 204 1 37 1 111 1 39 1 77 1 10 1 40 1 144 1 173 1 46 1 215 2 119 1 216 1 18 1 179 1 87 1 126 1 183 1 92 1 184 1 21 1 191 1 224 1 
194 1 131 3 65 1 103 1 232 1 139 3 234 1 109 1 204 1 111 3 39 3 77 1 10 3 40 1 173 1 46 1 215 2 119 3 120 1 18 3 179 3 87 3 183 3 184 3 21 3 191 1 
195 1 194 1 131 1 65 1 103 1 232 1 139 1 234 1 109 1 204 1 111 1 39 1 77 1 10 1 40 1 173 1 46 1 215 2 119 1 18 1 179 1 87 1 183 1 184 1 21 1 191 1 
195 1 194 1 173 1 46 1 215 2 65 1 103 1 232 1 234 1 204 1 21 1 77 1 191 1 40 1 
215 1 102 1 32 1 
3 1 215 1 185 1 122 2 
215 1 102 1 192 1 201 1 
99 1 3 1 215 1 185 1 76 1 
203 1 102 1 
145 1 63 1 123 1 55 1 93 1 252 1 170 1 
193 1 148 1 168 1 227 1 53 1 207 1 
193 1 148 1 154 1 168 1 227 1 53 1 207 1 
79 1 98 1 145 1 252 1 
87 1 128 1 166 1 243 1 216 1 224 1 
87 1 119 1 
128 1 166 1 216 1 224 1 
87 2 128 1 166 1 243 1 119 1 130 1 255 1 
87 1 119 1 
15 1 
142 1 
15 1 
234 1 
234 1 
40 1 
43 1 194 1 211 1 48 1 215 2 197 1 65 1 6 2 15 1 216 1 52 1 219 1 89 1 128 1 204 1 205 1 95 1 142 1 191 1 224 3 
43 1 194 1 211 1 215 2 197 1 65 1 15 1 219 1 89 1 204 1 205 1 95 1 140 1 142 1 191 1 
43 2 194 2 211 2 215 4 197 2 65 2 15 2 152 1 219 2 89 2 91 1 204 2 205 2 95 2 140 1 142 2 191 2 
43 1 194 1 211 1 48 2 215 2 197 1 65 1 6 1 15 1 216 1 52 1 219 1 89 1 128 2 204 1 205 1 95 1 142 1 191 1 224 1 
199 1 
43 1 194 1 211 1 215 2 197 1 65 1 15 1 229 1 219 1 89 1 204 1 205 1 95 1 142 1 191 1 
195 1 43 1 194 1 211 1 215 2 197 1 65 1 15 1 219 1 89 1 204 1 205 1 95 1 142 1 191 1 
43 2 194 2 211 2 215 4 197 2 65 2 15 2 229 1 219 2 89 2 204 2 205 2 95 2 140 1 142 2 191 2 
1 2 216 1 96 1 224 2 
1 2 94 1 216 1 224 2 
194 1 63 1 1 2 197 1 65 1 199 1 229 1 202 1 204 1 205 1 41 1 142 1 169 1 42 1 171 1 43 1 242 1 212 1 211 1 145 1 45 2 48 1 215 3 12 1 14 1 50 1 15 1 86 1 123 1 52 1 89 1 219 1 88 1 128 1 220 2 93 1 94 1 95 1 155 1 191 2 253 1 96 1 224 2 
43 1 152 1 91 1 204 1 65 1 
193 4 98 1 194 1 1 2 197 1 65 1 199 1 6 1 227 1 162 1 202 1 204 1 205 1 239 1 168 3 41 1 142 1 169 1 207 3 79 1 43 1 211 1 145 1 45 2 48 1 215 2 148 3 15 1 86 1 52 1 53 3 89 1 219 1 128 1 20 1 127 1 94 1 95 1 153 1 154 1 252 1 155 1 191 3 96 1 224 3 
43 1 194 1 211 1 215 2 197 1 65 1 15 1 219 1 152 1 89 1 91 1 204 1 205 1 95 1 142 1 191 1 
208 1 240 1 194 1 244 2 215 2 65 1 6 1 15 1 216 1 164 1 180 1 181 1 217 1 128 2 204 1 95 1 221 1 191 1 142 1 224 2 
193 3 194 1 98 1 65 1 6 1 227 1 162 1 30 1 104 1 204 1 239 1 168 2 142 1 169 1 207 2 79 1 208 1 240 1 145 1 45 1 244 1 215 2 148 2 15 1 86 1 53 2 180 1 217 1 181 1 128 1 20 1 127 1 95 1 153 1 154 1 252 1 221 1 155 1 191 3 190 1 224 1 
34 1 128 1 244 1 64 1 221 1 130 1 
216 1 104 1 
216 1 190 1 
208 1 240 1 194 1 244 1 64 1 215 2 65 1 6 1 15 1 30 1 181 1 217 1 126 1 34 1 128 1 204 1 95 1 37 1 221 2 191 1 142 1 224 2 
208 1 217 1 181 1 240 1 91 1 221 1 
194 1 65 1 66 1 6 1 164 1 204 1 36 1 142 1 208 1 244 2 147 1 215 2 15 1 216 1 180 1 217 1 128 2 95 1 221 1 191 1 224 2 
30 1 
194 1 63 1 64 1 65 1 6 2 30 1 104 1 34 1 204 1 37 1 239 2 169 1 142 1 42 1 208 1 171 1 240 1 242 1 212 1 145 1 45 2 244 2 147 1 215 3 12 1 15 1 50 1 86 1 123 1 180 1 54 1 217 1 181 1 126 1 88 1 128 2 220 4 93 1 95 1 221 2 155 1 191 2 253 1 190 1 224 3 
194 1 64 1 65 1 6 1 30 1 34 1 204 1 37 1 9 1 142 1 78 1 208 1 240 1 244 1 215 2 15 1 217 1 181 1 126 1 128 1 95 1 221 2 130 1 191 1 224 2 
208 1 217 1 181 1 240 1 91 1 221 1 
193 5 194 1 98 1 64 1 65 1 6 2 227 1 162 1 30 1 104 1 34 1 204 1 37 1 239 2 168 4 142 1 169 1 207 4 79 1 208 1 240 1 145 1 45 2 244 2 215 2 148 4 15 1 86 1 53 4 180 1 54 1 217 1 181 1 126 1 128 2 20 1 127 1 95 1 153 1 154 1 252 1 221 2 155 1 191 3 190 1 224 3 

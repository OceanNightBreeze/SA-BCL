#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 220 143 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 233 172 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 189 236 141 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 189 236 164 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 189 236 141 98 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4490 | = null
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
125 1 138 1 213 1 152 1 186 1 
168 1 185 2 25 1 
125 1 138 1 213 1 152 1 186 1 24 1 
114 1 2 1 181 1 29 1 
210 1 196 1 21 2 113 1 170 1 1 2 2 1 114 1 206 1 181 1 208 1 77 2 
210 1 196 1 123 1 138 1 21 1 155 1 99 1 1 1 2 1 114 1 160 1 117 1 134 1 27 2 182 1 149 1 208 1 57 1 152 2 77 3 
210 1 196 1 123 1 138 1 21 1 155 1 99 1 1 1 2 1 114 1 160 1 134 1 27 2 182 1 149 1 208 1 57 1 152 2 77 3 
210 1 196 1 138 1 21 1 1 1 2 1 114 1 23 1 116 1 117 1 203 1 27 1 181 1 208 1 152 1 57 1 77 2 
210 1 196 1 138 1 21 1 1 1 2 1 114 1 23 1 116 1 117 1 68 1 27 1 181 1 208 1 152 1 57 1 77 2 
210 1 196 1 228 1 138 1 21 1 1 1 2 1 114 1 23 1 116 1 27 1 106 1 181 1 208 1 226 1 152 1 57 1 77 2 
210 1 196 1 228 1 138 1 21 1 1 1 2 1 114 1 23 1 116 1 117 1 27 1 106 1 181 1 208 1 226 1 152 1 57 1 77 2 
196 1 210 1 219 1 21 1 1 2 114 1 2 1 181 1 208 2 77 3 
210 1 229 1 21 1 53 1 114 1 2 1 181 1 190 2 208 2 77 3 
210 1 21 2 53 1 114 1 2 1 181 1 108 1 190 1 208 1 77 2 
210 1 21 1 53 1 114 1 2 1 181 1 101 1 190 1 208 1 77 2 
210 1 123 1 21 1 155 1 99 1 2 1 114 1 190 1 8 1 160 1 134 1 27 1 53 1 181 1 182 1 208 1 152 1 77 3 
210 1 21 1 22 1 155 2 99 1 2 1 114 1 190 1 8 1 27 1 53 1 181 1 107 1 208 1 152 1 77 3 
210 2 219 1 21 2 53 1 114 1 2 1 181 1 190 1 208 3 77 2 
210 2 21 1 22 1 155 1 99 1 2 1 114 1 5 1 190 2 8 1 27 1 53 1 181 1 208 2 152 1 77 4 
210 1 21 1 53 1 114 1 2 1 181 1 190 1 207 1 208 1 77 2 
210 1 139 1 21 1 155 4 99 1 2 1 114 1 4 1 190 1 8 1 27 1 53 1 181 1 224 1 208 1 152 1 77 3 109 1 
210 1 21 1 2 1 114 1 83 1 190 1 37 1 53 1 181 1 208 1 77 2 
26 1 19 1 131 3 
131 1 
229 1 112 1 141 1 230 3 97 3 189 1 143 1 36 1 132 1 133 1 163 1 220 1 221 1 236 1 153 1 
229 1 211 1 141 1 230 3 97 3 114 1 189 1 86 1 217 2 132 1 133 1 163 1 40 1 205 1 234 1 221 1 29 1 183 1 236 1 153 1 
229 1 211 1 141 1 230 3 97 3 114 1 189 1 86 1 132 1 133 1 163 1 205 1 234 1 221 1 29 1 183 1 236 1 153 1 
229 1 141 1 230 3 97 3 128 1 156 1 172 1 189 1 174 1 132 1 233 1 133 1 163 1 221 1 236 1 56 1 153 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 16 1 236 1 56 1 153 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 16 1 236 1 56 1 153 1 
229 1 141 1 230 3 97 3 189 1 132 1 133 1 163 1 221 1 236 1 153 1 
201 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 16 1 236 1 56 1 153 1 
211 1 141 1 230 3 97 3 114 1 189 1 86 1 132 1 133 1 163 1 205 1 234 1 221 1 29 1 183 1 236 1 153 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 16 1 236 1 56 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 16 1 236 1 56 1 
229 1 211 1 230 3 97 3 128 1 156 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 164 1 221 1 16 1 236 1 56 1 
229 1 211 1 141 1 230 3 97 3 128 1 156 1 98 1 189 1 174 1 132 1 233 1 133 1 163 1 205 1 221 1 236 1 56 1 193 1 153 1 
40 1 48 1 217 1 
179 1 217 1 
188 1 217 1 
138 1 96 1 23 1 231 1 217 1 87 1 116 1 106 1 184 1 152 1 239 1 80 1 
138 1 96 1 217 1 92 1 152 1 239 1 
138 1 96 1 23 1 217 1 87 1 152 1 116 1 
188 1 217 1 
217 1 89 1 
188 1 217 1 
179 1 217 1 
179 1 217 1 
61 1 142 1 51 1 217 1 
129 1 217 1 136 1 
188 1 21 1 114 1 217 2 86 1 64 1 190 1 6 1 218 2 53 1 192 2 135 1 223 1 208 1 237 1 77 2 60 1 
118 1 
21 1 53 1 114 1 29 1 86 1 190 1 64 1 237 1 6 1 208 1 223 1 77 2 60 1 
196 1 21 1 1 2 114 1 86 1 232 1 161 2 70 2 183 1 208 1 43 2 77 3 
188 1 124 2 128 1 1 1 130 1 67 3 191 1 12 1 69 1 70 1 71 2 192 3 77 2 18 1 196 1 20 1 21 1 198 1 199 1 82 1 86 1 85 1 144 1 146 1 145 1 31 1 150 1 208 1 93 1 95 3 157 1 32 1 217 8 102 1 161 1 162 1 42 1 43 1 44 1 45 1 169 2 114 1 174 2 232 1 55 1 183 1 122 1 
196 1 21 1 70 2 1 2 114 1 86 1 183 1 43 2 208 1 77 3 232 1 161 2 
63 1 126 2 125 2 128 2 1 1 130 2 191 2 13 1 70 1 71 4 14 2 75 1 192 4 77 3 18 2 196 1 20 2 138 1 21 2 199 2 85 2 86 1 202 4 147 3 28 2 206 1 90 1 91 1 30 1 149 1 31 2 93 2 208 1 150 2 152 2 209 1 94 1 155 1 95 4 96 6 99 1 157 2 216 2 32 2 217 4 101 2 33 4 102 2 34 2 161 1 162 2 41 1 167 1 107 1 42 2 43 1 44 2 45 2 110 1 111 2 169 4 47 1 114 1 173 2 174 2 176 2 52 2 178 1 235 1 55 2 183 1 57 1 238 2 239 3 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 1 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 59 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 150 1 208 1 59 2 
196 1 21 1 1 1 114 1 86 1 115 1 232 1 161 1 70 1 183 1 208 1 43 1 77 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 150 1 208 1 59 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 10 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 2 55 1 183 1 31 1 93 1 150 1 208 1 
62 1 128 1 1 2 3 1 5 1 130 1 191 1 68 1 71 2 70 2 13 1 192 2 77 3 18 1 79 1 80 2 20 1 196 1 138 1 21 4 199 1 200 1 23 1 85 1 86 1 87 1 144 1 28 1 206 1 30 1 31 1 93 1 208 2 150 1 152 1 95 2 96 2 157 1 32 1 217 3 101 1 102 1 161 2 162 1 40 3 106 3 42 1 43 2 44 1 228 2 169 2 114 1 231 2 173 1 174 1 116 1 232 1 119 1 55 1 183 1 184 2 57 1 238 1 239 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 1 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 
196 1 21 1 70 1 1 1 114 1 86 1 183 1 43 1 208 1 77 2 161 1 
63 1 126 1 125 1 128 1 1 1 130 1 191 1 70 1 71 2 14 1 75 1 192 2 77 3 18 1 196 1 20 1 21 1 199 1 86 1 85 1 202 2 147 3 28 1 90 1 149 1 31 1 93 1 208 1 150 1 152 1 155 1 95 2 96 3 99 1 157 1 216 1 32 1 101 1 217 2 33 2 102 1 34 1 161 1 162 1 107 1 42 1 43 1 44 1 45 1 111 1 169 2 114 1 173 1 174 1 176 1 52 1 55 1 183 1 238 1 
196 1 111 1 21 1 1 1 114 1 86 1 232 1 161 1 70 1 183 1 208 1 43 1 77 2 
125 1 63 1 126 1 128 1 130 1 8 1 191 1 12 1 69 1 71 2 14 1 75 1 192 2 77 1 18 1 20 1 198 1 199 1 85 1 144 1 202 2 147 3 28 1 90 1 31 1 150 1 93 1 152 1 155 1 95 2 96 3 99 1 157 1 216 1 32 1 101 1 217 2 33 2 102 1 34 1 162 1 107 1 42 1 44 1 45 1 111 1 229 1 169 2 174 2 173 1 176 1 52 1 55 1 238 1 122 1 
63 1 126 1 125 1 128 1 1 1 130 1 191 1 10 1 70 1 71 2 14 1 75 1 192 2 77 3 18 1 196 1 20 1 21 1 199 1 85 1 86 1 202 2 147 3 28 1 90 1 149 1 31 1 93 1 208 1 150 1 152 1 155 1 95 2 96 3 99 1 157 1 216 1 32 1 101 1 217 2 33 2 102 1 34 1 161 1 162 1 107 1 42 1 43 1 44 1 45 1 111 1 169 2 114 1 173 1 174 1 176 1 52 1 55 1 183 1 238 1 
126 1 63 1 125 1 128 1 190 1 130 1 8 1 191 1 10 1 70 1 71 2 14 1 75 1 192 2 77 3 18 1 20 1 21 1 199 1 85 1 86 1 202 2 147 3 28 1 90 1 31 1 93 1 208 1 150 1 152 1 155 1 95 2 96 3 99 1 157 1 216 1 32 1 217 2 101 1 33 2 102 1 34 1 161 1 162 1 107 1 42 1 43 1 44 1 45 1 111 1 229 1 169 2 114 1 173 1 174 1 176 1 52 1 53 1 55 1 183 1 238 1 
95 2 157 1 128 1 32 1 1 1 102 1 130 1 161 1 162 1 191 1 12 1 69 1 70 1 71 2 192 2 42 1 43 1 44 1 77 2 18 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 1 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 2 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 71 2 70 1 192 2 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 1 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 208 1 150 1 
126 1 217 1 33 1 202 1 177 1 
217 1 33 1 176 1 202 1 177 1 
9 1 126 1 127 1 217 1 33 1 202 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
126 1 125 1 128 1 1 1 130 1 191 1 12 1 69 1 70 1 13 1 71 2 192 2 77 2 18 1 80 3 20 1 196 1 138 1 21 2 198 1 200 1 199 1 23 1 85 1 86 1 87 1 144 1 202 2 28 1 30 1 31 1 93 1 208 1 150 1 152 1 95 2 96 3 157 1 32 1 217 2 101 1 33 2 102 1 161 1 162 1 106 4 42 1 43 1 44 1 45 1 228 1 169 2 114 1 231 3 173 1 174 2 176 1 116 1 232 1 55 1 183 1 184 3 57 1 238 1 239 3 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 10 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 150 1 208 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 45 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 1 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 59 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 59 2 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 12 1 69 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 198 1 199 1 114 1 85 1 86 1 174 2 144 1 232 1 55 1 183 1 31 1 93 1 208 1 150 1 122 1 
188 1 95 3 157 1 128 1 32 1 1 1 102 1 130 1 161 1 191 1 162 1 71 2 70 1 192 3 42 1 43 1 77 2 44 1 18 1 20 1 196 1 21 1 169 2 199 1 114 1 85 1 86 1 174 1 55 1 183 1 31 1 93 1 150 1 208 1 
123 1 155 1 0 1 96 2 1 1 217 4 101 1 103 1 160 1 134 1 39 1 106 3 40 3 13 1 166 1 77 2 227 1 80 2 196 1 228 1 21 2 138 1 200 1 231 2 23 1 114 1 86 1 173 1 116 1 203 1 28 1 54 1 182 1 30 1 184 2 208 1 238 1 57 1 152 1 239 2 60 1 
0 1 96 2 158 1 216 1 1 1 217 4 101 1 159 1 103 1 35 1 34 1 37 1 104 1 39 1 106 3 40 3 13 1 14 1 167 1 166 1 77 2 227 1 80 2 196 1 228 1 21 1 138 1 231 2 23 1 114 1 83 1 86 1 173 1 52 1 116 1 28 1 54 1 30 1 184 2 208 1 152 1 238 1 239 2 60 1 
95 2 157 3 128 3 156 1 32 1 1 1 102 1 130 1 161 1 191 1 162 3 10 1 71 4 70 1 192 2 42 3 43 1 44 3 77 2 18 3 45 1 20 1 196 1 21 1 169 4 199 3 114 1 85 1 86 1 174 3 233 2 55 1 183 1 31 3 185 1 93 1 150 1 56 1 208 1 
188 1 157 1 128 1 156 1 1 1 217 1 33 1 161 1 162 1 71 1 70 1 42 1 17 1 43 1 44 1 77 2 18 1 196 1 21 1 169 1 199 1 114 1 86 1 174 1 175 1 202 1 177 1 233 1 183 1 31 1 56 1 208 1 
214 1 157 3 128 3 156 1 1 1 161 1 162 3 71 3 70 1 42 3 43 1 44 3 77 2 18 3 196 1 21 1 169 3 199 3 114 1 86 1 174 3 233 3 183 1 31 3 56 1 208 1 
157 1 128 1 156 1 1 1 161 1 162 1 71 1 70 1 42 1 43 1 44 1 77 2 18 1 196 1 21 1 169 1 199 1 114 1 86 1 174 1 233 1 183 1 31 1 207 1 56 1 208 1 
196 1 21 1 156 1 1 1 114 1 86 1 161 1 233 1 70 1 183 1 207 1 208 1 43 1 77 2 
196 1 21 1 169 1 156 1 128 1 199 1 157 1 1 1 114 1 86 1 174 1 161 1 233 1 162 1 70 1 71 1 183 1 31 1 42 1 43 1 208 1 56 1 77 2 44 1 18 1 
197 1 11 1 222 1 77 1 
113 1 100 1 88 1 77 1 151 1 
11 1 77 1 7 1 
113 1 72 2 77 1 151 1 
11 1 120 1 
228 1 106 1 231 1 184 1 239 1 80 1 
228 1 106 1 231 1 184 1 87 1 239 1 80 1 
138 1 13 1 30 1 152 1 
138 1 215 1 216 1 34 1 52 1 167 1 152 1 
95 1 199 1 32 1 71 2 192 1 185 1 137 1 
199 1 71 1 
188 1 95 1 71 1 32 1 192 1 217 1 
199 1 71 1 
188 1 95 1 192 1 217 1 
53 1 
190 1 
190 1 
1 1 
196 1 
1 1 
21 1 114 1 49 1 86 1 105 1 38 1 148 1 72 1 207 1 76 1 208 1 77 2 195 1 78 1 60 1 
21 2 114 2 49 2 86 2 66 1 105 2 38 2 148 2 72 2 76 2 208 2 77 4 121 1 195 2 78 2 60 2 
21 1 114 1 49 1 86 1 105 1 38 1 148 1 72 1 76 1 208 1 77 2 121 1 195 1 78 1 60 1 
188 1 21 1 114 1 49 1 217 1 86 1 180 1 105 1 38 1 148 1 72 1 15 2 192 2 136 1 76 1 208 1 77 2 195 1 78 1 60 1 
58 1 
188 1 204 1 40 2 217 2 
188 1 40 2 50 1 217 2 
63 1 155 1 96 2 99 1 216 1 101 1 217 2 34 1 105 1 38 1 40 2 14 1 72 1 15 1 107 1 75 1 192 1 76 1 77 3 194 1 78 1 195 1 21 2 114 1 50 1 49 1 86 1 173 1 52 1 180 1 147 2 204 1 206 1 28 1 90 1 148 1 149 1 208 1 58 1 238 1 152 1 121 1 60 1 
81 1 114 1 29 1 86 1 78 1 
96 2 101 1 217 3 105 1 38 1 106 4 40 2 13 1 72 1 15 1 192 1 136 1 76 1 77 2 78 1 195 1 80 3 228 1 21 3 138 1 200 1 231 3 114 1 23 1 50 1 49 1 51 1 86 1 173 1 87 1 116 1 180 1 204 1 206 1 28 1 148 1 30 1 184 3 208 1 58 1 238 1 57 1 152 1 239 3 60 1 
21 1 81 1 114 1 49 1 86 1 105 1 38 1 148 1 72 1 29 1 76 1 208 1 77 2 195 1 78 1 60 1 
188 1 21 1 114 1 49 1 217 3 86 1 180 1 105 1 38 1 148 1 72 1 15 1 192 1 136 2 76 1 208 1 77 2 195 1 78 1 60 1 
21 1 114 1 49 1 86 1 66 1 105 1 38 1 148 1 72 1 76 1 208 1 77 2 195 1 78 1 60 1 
21 2 81 1 114 2 49 2 86 2 66 1 105 2 38 2 148 2 72 2 29 1 76 2 208 2 77 4 195 2 78 2 60 2 
188 1 21 1 112 1 142 1 114 1 217 2 84 1 86 1 36 1 38 1 220 1 165 1 74 1 72 1 192 2 136 1 208 1 77 2 154 2 60 1 
212 1 96 1 217 1 101 1 36 1 38 1 106 3 165 1 220 1 13 1 72 1 74 1 73 1 192 1 136 1 77 2 80 2 228 1 21 3 138 1 112 1 200 1 231 2 114 1 23 1 84 1 51 1 86 1 87 1 116 1 206 1 28 1 30 1 184 2 208 1 57 1 152 1 239 2 187 1 154 1 60 1 
140 1 165 1 192 1 185 1 65 1 154 1 
188 1 73 1 
188 1 187 1 
21 1 140 1 212 1 112 1 114 1 217 2 86 1 33 1 65 1 202 1 36 1 38 1 220 1 165 2 74 1 72 1 192 1 136 1 208 1 77 2 154 1 60 1 
112 1 165 1 220 1 74 1 29 1 36 1 
188 1 217 2 38 1 165 1 72 1 74 1 192 2 136 1 77 2 225 1 46 1 21 1 112 1 142 1 114 1 171 1 86 1 84 1 208 1 60 1 154 2 
212 1 129 1 217 2 33 1 65 1 36 1 38 1 165 2 220 1 72 1 74 1 192 1 136 1 77 2 21 1 112 1 140 1 114 1 86 1 202 1 25 1 208 1 185 1 60 1 154 1 
212 1 
63 1 125 1 65 1 73 1 74 1 72 1 14 1 192 2 75 1 136 2 77 3 21 1 140 1 86 1 84 1 202 1 147 4 28 1 90 1 149 1 208 1 152 1 154 2 155 1 212 1 96 2 99 1 216 1 101 1 217 3 33 1 36 1 34 1 38 1 220 1 165 2 107 1 46 1 112 1 114 1 51 2 52 1 187 1 60 1 
112 1 165 1 220 1 74 1 29 1 36 1 
125 1 65 1 13 1 73 1 74 1 72 1 192 2 136 2 77 2 80 4 138 1 21 3 140 1 200 1 23 1 86 1 84 1 87 1 202 1 28 1 206 1 30 1 208 1 152 1 154 2 212 1 96 2 101 1 217 3 33 1 36 1 38 1 106 5 220 1 165 2 228 1 112 1 114 1 231 4 51 2 116 1 184 4 57 1 239 4 187 1 60 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module; | RETURN | 9966 | return null
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 22 1 156 1 199 1 179 1 
106 2 123 1 125 1 
95 1 22 1 156 1 199 1 108 1 179 1 
71 1 10 1 178 1 61 1 
21 2 42 2 218 1 102 1 61 1 8 1 138 1 10 1 124 1 178 1 216 1 20 2 
21 1 42 1 218 1 199 1 154 1 206 1 138 1 156 2 242 1 63 1 10 1 120 2 143 1 53 1 235 1 212 1 124 1 194 1 178 1 20 3 
21 1 42 1 218 1 199 1 154 1 206 1 138 1 156 2 242 1 63 1 10 1 120 2 143 1 53 1 212 1 124 1 194 1 178 1 20 3 
21 1 42 1 218 1 238 1 199 1 103 1 29 1 61 1 138 1 156 1 10 1 120 1 143 1 235 1 124 1 178 1 20 2 
21 1 42 1 218 1 126 1 238 1 199 1 103 1 61 1 138 1 156 1 10 1 120 1 143 1 235 1 124 1 178 1 20 2 
21 1 42 1 218 1 43 1 238 1 199 1 103 1 61 1 138 1 156 1 10 1 120 1 143 1 146 1 17 1 124 1 178 1 20 2 
21 1 42 1 218 1 43 1 238 1 199 1 103 1 61 1 138 1 156 1 10 1 120 1 143 1 235 1 146 1 17 1 124 1 178 1 20 2 
21 1 42 2 218 1 61 1 138 1 10 1 52 1 124 2 178 1 20 3 
21 1 218 1 48 1 61 1 234 2 10 1 81 1 124 2 178 1 20 3 
21 2 218 1 234 1 10 1 173 1 81 1 124 1 178 1 61 1 20 2 
21 1 218 1 61 1 234 1 10 1 81 1 213 1 124 1 178 1 20 2 
21 2 218 2 61 1 234 1 10 1 52 1 81 1 124 3 178 1 20 2 
21 1 89 1 218 2 61 1 156 1 118 1 242 1 234 2 10 1 120 1 107 1 81 1 124 2 178 1 194 1 20 4 
21 1 218 1 154 1 61 1 156 1 118 1 242 1 63 1 234 1 10 1 120 1 53 1 81 1 212 1 124 1 194 1 178 1 20 3 
21 1 89 1 218 1 61 1 156 1 118 1 209 1 242 2 234 1 10 1 120 1 81 1 124 1 178 1 194 1 20 3 
21 1 218 1 234 1 10 1 56 1 81 1 124 1 178 1 61 1 20 2 
21 1 164 1 218 1 6 1 61 1 156 1 118 1 242 4 234 1 10 1 51 1 120 1 81 1 109 1 124 1 178 1 194 1 20 3 
21 1 218 1 1 1 61 1 234 1 10 1 97 1 81 1 124 1 178 1 20 2 
16 3 149 1 4 1 
16 1 
69 1 196 1 0 1 199 1 75 1 202 1 130 2 129 4 3 2 134 1 5 1 209 2 9 1 10 1 210 1 143 1 211 4 144 2 12 2 145 1 15 2 80 1 81 1 213 2 215 2 150 1 86 1 20 3 21 3 89 1 22 2 23 1 92 1 26 1 25 1 219 1 155 4 156 2 33 1 35 1 161 4 38 3 39 2 225 2 46 1 101 1 229 8 230 1 48 1 105 4 49 1 233 4 234 1 171 1 52 1 239 1 114 2 58 4 241 1 242 3 118 1 64 1 244 1 119 4 247 4 192 2 193 1 124 2 194 1 
0 1 132 2 129 6 3 2 135 2 5 1 136 2 139 3 10 1 143 1 150 1 20 4 21 3 22 2 23 1 25 1 152 3 30 3 156 2 33 1 159 1 34 2 35 1 36 4 161 4 162 1 44 2 166 2 48 1 49 1 50 5 171 1 170 1 52 1 177 1 58 3 60 1 186 1 189 2 193 1 194 1 196 1 69 1 198 3 73 2 74 3 75 1 199 1 77 2 207 1 209 1 78 1 210 1 211 3 80 1 81 1 213 2 214 1 84 3 215 4 85 2 86 1 87 2 89 1 90 3 219 1 222 2 223 2 224 5 99 1 225 4 226 2 227 2 229 14 101 1 230 1 231 2 233 4 234 1 237 2 239 1 115 3 241 1 117 1 242 2 118 1 119 4 244 1 243 2 245 3 246 1 121 3 124 2 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 2 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 23 1 90 3 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 2 161 4 36 4 226 2 225 4 44 2 227 2 166 2 46 1 101 1 229 4 230 1 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 239 1 113 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 244 1 119 4 189 2 121 3 193 1 124 2 194 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 135 2 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 90 3 23 1 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 224 5 35 1 34 2 161 4 36 4 37 1 226 2 225 4 44 2 227 2 166 2 101 1 229 4 230 1 104 1 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 111 1 239 1 58 3 115 3 241 1 118 1 242 2 243 2 244 1 119 4 189 2 121 3 193 1 124 2 194 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 3 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 4 216 1 21 5 89 1 22 2 23 1 90 3 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 3 161 4 36 4 226 2 225 4 44 2 227 3 166 2 46 1 101 1 229 4 230 1 48 1 231 2 50 5 49 1 233 4 234 2 170 1 171 1 52 1 107 1 177 1 237 2 239 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 244 1 119 4 189 2 121 3 193 1 124 4 194 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 2 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 23 1 90 3 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 2 161 4 36 4 226 2 225 4 44 2 227 2 166 2 46 1 101 1 229 4 230 1 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 239 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 244 1 119 4 189 2 121 3 193 1 124 2 194 1 
196 1 0 1 239 1 75 1 230 1 48 1 233 4 171 1 244 1 119 4 80 1 193 1 
233 1 119 1 75 1 230 1 193 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 2 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 90 3 23 1 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 2 161 4 36 4 37 1 226 2 225 4 44 2 227 2 166 2 101 1 229 4 230 1 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 111 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 119 4 244 1 189 2 121 3 193 1 124 2 194 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 2 136 2 5 1 139 3 209 1 141 1 78 1 10 1 210 1 143 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 90 3 23 1 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 2 161 4 36 4 37 1 226 2 225 4 44 2 227 2 166 2 101 1 229 4 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 111 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 119 4 244 1 189 2 121 3 193 1 124 2 194 1 
69 1 196 1 198 3 0 1 199 1 74 3 75 1 129 6 132 2 3 2 77 2 207 1 135 2 136 2 5 1 139 3 209 1 78 1 10 1 210 1 143 1 11 1 211 3 80 1 81 1 213 2 85 2 215 4 84 3 214 1 150 1 86 1 87 2 20 3 21 3 89 1 22 2 23 1 90 3 25 1 152 3 219 1 156 2 30 3 33 1 222 2 223 2 159 1 224 5 35 1 99 1 34 2 161 4 36 4 37 1 226 2 225 4 44 2 227 2 166 2 101 1 229 4 230 1 48 1 231 2 50 5 49 1 233 4 234 1 170 1 171 1 52 1 177 1 237 2 111 1 239 1 58 3 115 3 241 1 118 1 242 2 186 1 243 2 244 1 119 4 189 2 121 3 193 1 124 2 194 1 
0 1 132 2 129 6 3 2 135 2 5 1 136 2 138 1 139 5 10 1 142 2 143 1 13 1 19 1 150 1 20 3 21 3 22 2 23 1 25 1 152 5 153 1 30 5 156 2 32 1 158 1 33 1 159 1 35 1 34 2 36 4 161 4 42 1 44 2 166 2 46 1 47 1 49 1 50 7 171 1 170 1 52 1 177 3 57 1 58 3 186 1 189 2 67 2 193 1 194 1 196 1 69 1 198 5 75 1 74 5 199 1 204 1 206 1 77 2 207 1 209 1 78 1 210 1 211 3 80 1 213 2 214 1 84 5 215 4 85 2 82 1 86 1 87 2 89 1 90 5 219 1 96 1 222 2 223 2 224 7 99 1 100 2 225 4 226 2 227 2 229 4 101 1 230 1 231 2 233 4 237 2 239 1 113 1 112 2 115 5 241 1 242 2 244 1 119 4 243 2 121 5 122 2 124 2 
7 1 
0 1 132 2 129 6 3 2 135 2 5 1 136 2 139 3 10 1 143 1 150 1 20 3 21 4 22 2 23 1 25 1 152 3 30 3 156 2 33 1 34 2 35 1 36 4 161 4 37 1 44 2 166 2 46 1 48 1 49 1 50 5 171 1 170 1 52 1 177 1 58 3 186 1 189 2 193 1 194 1 196 1 69 1 198 3 75 1 74 3 199 1 77 2 207 1 209 2 78 1 210 1 211 3 81 1 80 1 213 2 214 1 84 3 215 4 85 2 86 1 216 1 87 2 89 1 90 3 219 1 222 2 223 2 224 5 99 1 225 4 226 2 227 2 229 4 101 1 230 1 231 2 233 4 234 1 237 2 111 1 239 1 115 3 241 1 242 3 118 1 119 4 244 1 243 2 121 3 124 2 
246 1 229 1 94 1 
172 1 229 1 
229 1 27 1 
229 1 27 1 
172 1 229 1 
172 1 229 1 
156 1 199 1 211 1 129 1 45 1 229 1 
24 1 238 1 199 1 129 1 229 1 103 1 59 1 156 1 157 1 65 1 211 1 17 1 
14 1 229 1 
156 1 24 1 238 1 199 1 129 1 229 1 103 1 
229 1 27 1 
133 1 229 1 247 1 
131 1 229 1 105 1 137 1 
40 1 21 1 72 1 229 2 116 1 49 1 221 2 234 1 10 1 31 1 172 1 79 1 12 1 81 1 161 2 124 1 20 2 
197 1 
21 1 71 1 72 1 116 1 49 1 234 1 10 1 31 1 79 1 12 1 81 1 124 1 20 2 
69 1 198 1 74 1 132 1 129 3 3 1 206 1 77 1 135 1 136 1 138 1 139 1 209 1 10 1 142 1 213 1 215 2 214 1 85 1 84 1 20 3 87 1 21 1 22 1 90 1 152 1 156 1 30 1 158 1 222 1 223 1 224 2 34 1 36 2 161 2 100 1 163 1 42 1 225 2 226 1 44 1 227 1 166 1 101 1 229 2 231 1 49 1 50 2 112 1 58 3 115 1 242 1 243 1 189 1 121 1 67 1 124 1 250 1 194 1 
21 1 42 1 227 1 205 1 135 1 49 1 138 1 10 1 34 1 214 1 124 1 250 1 20 2 
69 1 198 1 127 1 74 1 200 1 129 3 132 1 3 1 77 1 136 1 139 1 209 1 142 1 213 1 85 1 215 2 84 1 20 1 87 1 22 1 91 1 90 1 152 1 30 2 156 1 158 1 222 1 223 1 224 2 36 2 161 2 100 1 163 1 225 2 226 1 44 1 166 1 101 1 229 2 48 1 231 1 50 2 112 1 58 3 115 1 242 1 118 1 187 1 243 1 189 1 121 1 190 1 67 1 250 1 194 1 
69 1 198 1 74 1 132 1 129 3 3 1 206 1 77 1 135 1 136 1 138 1 139 1 209 1 10 1 142 1 213 1 215 2 214 1 85 1 84 1 20 3 87 1 21 1 22 1 90 1 152 1 156 1 30 1 158 1 222 1 223 1 159 1 224 2 34 1 36 2 161 2 100 1 163 1 42 1 225 2 226 1 44 1 227 1 166 1 101 1 229 2 231 1 49 1 50 2 112 1 58 3 115 1 242 1 243 1 189 1 121 1 67 1 124 1 250 1 194 1 
69 1 198 1 74 1 132 1 129 3 3 1 77 1 135 1 136 1 139 1 209 1 10 1 142 1 81 1 213 1 84 1 215 2 214 1 85 1 20 3 87 1 21 1 22 1 90 1 152 1 156 1 30 1 158 1 222 1 223 1 159 1 224 2 34 1 36 2 161 2 100 1 163 1 225 2 226 1 44 1 227 1 166 1 101 1 229 2 48 1 231 1 49 1 50 2 234 1 112 1 58 3 115 1 118 1 242 1 243 1 189 1 121 1 67 1 124 1 250 1 194 1 
198 1 42 1 127 1 226 1 44 1 74 1 227 1 200 1 166 1 205 1 77 1 135 1 49 1 136 1 50 2 138 1 139 1 10 1 84 1 214 1 20 2 87 1 21 1 90 1 91 1 152 1 115 1 30 2 187 1 243 1 222 1 223 1 224 2 190 1 121 1 34 1 36 2 161 2 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 1 187 1 243 1 222 1 223 1 224 2 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 127 1 44 1 227 1 74 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 1 187 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 161 2 36 2 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
225 1 201 1 229 1 215 1 163 1 
225 1 201 1 229 1 231 1 215 1 
232 1 225 1 229 1 208 1 215 1 163 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 127 1 74 1 199 1 200 1 132 1 129 3 3 1 205 1 77 1 135 1 136 1 138 1 139 1 10 1 143 1 211 3 146 1 213 1 17 4 84 1 215 2 214 1 85 1 20 2 87 1 21 2 22 1 24 1 90 1 91 1 25 1 152 1 219 1 156 1 30 2 157 3 33 1 222 1 223 1 224 2 34 1 36 2 161 2 163 1 42 1 225 2 226 1 44 1 227 1 166 1 229 2 103 1 231 1 49 1 50 2 238 1 115 1 59 3 187 1 243 1 65 3 189 1 190 1 121 1 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 189 1 222 1 223 1 224 2 159 1 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 183 2 30 1 187 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 183 2 30 2 187 1 243 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
21 1 42 2 227 2 205 1 135 2 49 1 138 1 10 1 34 2 214 1 124 1 20 3 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 1 243 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 183 2 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
21 1 42 1 227 1 205 1 135 1 49 1 138 1 10 1 34 1 214 1 124 1 110 1 20 2 
198 1 42 1 226 1 44 1 227 1 74 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 183 2 30 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 159 1 34 1 121 1 36 3 161 3 124 1 
198 1 42 1 226 1 44 1 227 1 74 1 200 1 166 1 77 1 135 1 50 2 136 1 49 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 20 2 87 1 21 1 90 1 152 1 115 1 30 2 243 1 189 1 222 1 223 1 224 2 34 1 121 1 36 3 161 3 124 1 
198 1 126 1 127 1 199 1 74 1 132 1 129 2 3 1 205 1 77 1 135 2 136 1 138 1 139 1 140 1 10 1 143 1 211 2 146 2 213 1 17 3 84 1 214 1 85 1 87 1 216 1 20 3 21 4 24 1 90 1 25 1 152 1 219 1 156 1 30 1 157 2 33 1 222 1 223 1 224 2 34 2 161 2 36 2 42 2 226 1 44 1 227 2 166 1 167 1 229 3 103 1 50 2 49 1 107 1 238 1 181 1 115 1 59 2 62 1 243 1 65 2 246 3 121 1 124 2 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 1 243 1 222 1 223 1 224 2 34 1 121 1 161 3 36 3 124 1 
21 1 42 2 227 2 205 1 135 2 49 1 138 1 10 1 34 2 214 1 124 1 20 3 
69 1 198 2 199 1 74 2 132 2 129 6 204 1 3 2 206 1 77 2 135 1 136 2 138 1 139 2 209 1 10 1 143 1 142 2 13 1 211 3 213 2 19 1 82 1 215 4 214 1 85 2 84 2 20 3 216 1 87 2 21 2 22 2 90 2 152 2 153 1 219 1 96 1 156 2 30 2 32 1 158 1 33 1 222 2 223 2 224 4 34 1 36 4 161 4 100 2 163 2 42 1 225 4 226 2 44 2 227 1 166 2 47 1 101 1 229 4 231 2 49 1 50 4 57 1 112 2 58 3 115 2 242 1 243 2 189 2 121 2 67 2 124 1 250 2 194 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 1 187 1 243 1 189 1 222 1 223 1 224 2 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 42 1 127 1 226 1 44 1 227 1 74 1 200 1 166 1 205 1 77 1 135 1 50 2 49 1 136 1 138 1 139 1 10 1 172 1 14 1 84 1 214 1 87 1 20 2 21 1 91 1 90 1 152 1 115 1 30 2 187 1 243 1 189 1 222 1 223 1 224 2 190 1 34 1 121 1 161 3 36 3 124 1 
198 1 127 1 74 1 200 1 205 1 77 1 135 1 136 1 138 1 139 1 10 1 14 1 214 1 84 1 20 2 87 1 21 1 90 1 91 1 152 1 30 2 222 1 223 1 224 2 34 1 36 3 161 3 42 1 226 1 227 1 44 1 166 1 49 1 50 2 172 1 115 1 183 2 187 1 243 1 189 1 121 1 190 1 124 1 
21 1 42 1 10 1 227 1 34 1 135 1 124 1 49 1 214 1 138 1 20 2 
42 1 165 1 199 1 1 1 128 1 129 2 132 1 229 4 103 1 3 1 49 1 138 1 169 1 10 1 142 1 211 2 12 1 175 1 54 1 146 1 213 1 18 1 17 3 19 1 85 1 20 2 21 1 151 1 238 1 112 1 28 1 59 2 219 1 220 1 156 1 157 2 65 2 33 1 97 1 246 3 67 1 124 1 195 1 100 1 
42 1 165 1 199 1 128 1 129 2 132 1 229 4 103 1 3 1 49 1 138 1 169 1 10 1 53 1 143 1 211 2 12 1 212 1 54 1 146 1 213 1 17 3 85 1 20 2 21 2 151 1 238 1 25 1 154 1 59 2 29 1 219 1 220 1 242 1 63 1 156 1 157 2 65 2 33 1 246 3 124 1 
21 1 42 1 198 1 90 1 227 1 74 1 152 1 115 1 135 1 49 1 50 1 138 1 139 1 30 1 10 1 170 1 78 1 224 1 34 1 121 1 124 1 214 1 84 1 177 1 20 2 
198 1 42 1 225 1 74 1 227 1 201 1 229 1 135 1 50 1 49 1 138 1 139 1 78 1 170 1 10 1 172 1 148 1 215 1 177 1 84 1 214 1 237 1 20 2 21 1 90 1 152 1 115 1 30 1 224 1 121 1 34 1 124 1 
198 3 42 1 226 1 44 1 74 3 227 1 166 1 77 1 135 1 136 1 50 4 49 1 138 1 139 3 106 1 78 1 170 1 10 1 177 2 84 3 214 1 87 1 20 2 21 1 90 3 152 3 115 3 30 3 243 1 189 1 222 1 223 1 159 1 224 4 121 3 34 1 161 2 36 2 124 1 
198 3 42 1 74 3 227 1 135 1 50 3 49 1 138 1 139 3 78 1 170 1 10 1 177 3 84 3 214 1 20 2 21 1 90 3 152 3 115 3 30 3 224 3 122 1 121 3 34 1 124 1 
21 1 42 1 198 1 90 1 56 1 227 1 74 1 152 1 115 1 135 1 49 1 50 1 138 1 139 1 30 1 10 1 170 1 78 1 224 1 34 1 121 1 124 1 214 1 84 1 177 1 20 2 
21 1 42 1 56 1 227 1 135 1 49 1 138 1 78 1 10 1 34 1 177 1 214 1 124 1 20 2 
147 1 20 1 68 1 
180 1 228 2 8 1 20 1 
147 1 248 1 20 1 184 1 
88 1 180 1 191 1 8 1 20 1 
147 1 236 1 
156 1 66 1 142 1 199 1 67 1 19 1 100 1 
157 1 65 1 211 1 146 1 59 1 17 1 
24 1 157 1 65 1 211 1 146 1 59 1 17 1 
156 1 33 1 199 1 219 1 
172 1 44 1 229 1 161 1 36 1 50 1 
50 1 139 1 
172 1 229 1 161 1 36 1 
106 1 44 1 98 1 161 1 36 1 50 2 139 1 
50 1 139 1 
234 1 
81 1 
234 1 
42 1 
42 1 
138 1 
21 1 240 1 93 1 229 3 203 1 49 1 234 1 10 1 172 1 12 1 247 2 174 1 81 1 161 1 176 1 160 1 55 1 124 1 249 1 20 2 
21 1 240 1 93 1 203 1 49 1 234 1 188 1 10 1 12 1 81 1 176 1 160 1 124 1 249 1 20 2 
21 2 71 1 240 2 93 2 203 2 182 1 49 2 234 2 188 1 10 2 12 2 81 2 176 2 160 2 124 2 249 2 20 4 
21 1 56 1 240 1 93 1 203 1 49 1 234 1 10 1 12 1 81 1 176 1 160 1 124 1 249 1 20 2 
21 2 41 1 240 2 93 2 203 2 49 2 234 2 188 1 10 2 12 2 81 2 176 2 160 2 124 2 249 2 20 4 
21 1 240 1 93 1 229 1 203 1 49 1 234 1 10 1 172 1 12 1 247 1 174 2 81 1 161 2 176 1 160 1 55 1 124 1 249 1 20 2 
2 1 
217 1 172 1 246 2 229 2 
70 1 172 1 246 2 229 2 
69 1 41 1 70 1 129 2 132 1 101 1 229 2 203 1 2 1 3 1 49 1 209 1 234 1 10 1 142 1 12 1 174 1 81 1 213 1 176 1 55 1 85 1 83 1 20 3 216 1 21 2 217 1 112 1 240 1 93 1 58 2 242 1 118 1 156 1 158 1 246 2 67 1 161 1 160 1 249 1 124 1 100 1 194 1 
71 1 10 1 203 1 182 1 49 1 
70 1 199 1 129 2 132 1 229 3 203 1 2 1 103 1 3 1 105 1 49 1 234 1 10 1 143 1 211 3 12 1 174 1 146 1 81 1 213 1 176 1 17 4 55 1 85 1 20 2 216 1 21 3 24 1 217 1 238 1 25 1 240 1 93 1 59 3 219 1 156 1 157 3 65 3 33 1 246 2 247 1 161 1 160 1 249 1 124 1 
21 1 41 1 240 1 93 1 203 1 49 1 234 1 10 1 12 1 81 1 176 1 160 1 124 1 249 1 20 2 
21 1 71 1 240 1 93 1 203 1 182 1 49 1 234 1 10 1 12 1 81 1 176 1 160 1 124 1 249 1 20 2 
21 1 26 1 229 2 134 1 137 1 49 1 155 2 9 1 234 1 10 1 172 1 12 1 247 1 145 1 15 1 81 1 161 2 38 1 124 1 20 2 
199 1 129 1 229 1 103 1 3 1 134 1 105 1 49 1 234 1 9 1 10 1 143 1 211 2 12 1 144 1 145 1 15 1 146 1 81 1 213 1 17 3 20 2 216 1 21 3 24 1 238 1 26 1 25 1 114 1 59 2 219 1 155 1 156 1 157 2 65 2 33 1 247 1 161 1 124 1 38 1 39 1 
155 1 106 1 130 1 161 1 192 1 38 1 
172 1 144 1 
172 1 114 1 
225 1 130 1 229 2 134 1 49 1 234 1 9 1 10 1 12 1 145 1 81 1 215 1 20 2 21 1 26 1 155 1 247 1 192 1 161 1 124 1 38 2 39 1 
9 1 71 1 26 1 145 1 134 1 38 1 
21 1 229 2 76 1 168 1 134 1 137 1 49 1 185 1 155 2 9 1 234 1 10 1 172 1 12 1 247 1 15 1 81 1 161 2 38 1 124 1 20 2 
225 1 130 1 133 1 229 2 134 1 49 1 234 1 9 1 106 1 10 1 12 1 145 1 81 1 215 1 20 2 21 1 26 1 155 1 247 1 192 1 161 1 123 1 124 1 38 2 39 1 
39 1 
69 1 225 1 130 1 129 2 101 1 229 3 3 1 134 1 105 2 49 1 209 1 234 1 9 1 10 1 142 1 12 1 144 1 145 1 15 1 81 1 213 1 215 1 216 1 20 3 21 2 22 1 26 1 112 1 114 1 58 4 185 1 155 2 242 1 118 1 156 1 158 1 247 2 67 1 192 1 161 2 124 1 38 2 100 1 194 1 39 1 
9 1 71 1 26 1 145 1 134 1 38 1 
199 1 129 2 130 1 3 1 134 1 9 1 10 1 143 1 144 1 12 1 211 4 145 1 81 1 146 1 15 1 213 1 17 5 215 1 216 1 20 2 21 3 22 1 24 1 25 1 26 1 219 1 155 2 156 1 157 4 33 1 161 2 38 2 39 1 225 1 229 3 103 1 49 1 105 2 234 1 238 1 114 1 59 4 65 4 247 2 192 1 124 1 

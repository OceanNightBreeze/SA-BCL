#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 8 56 66 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.twod.pdf417.PDF417Module:outbit(ILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createNW7(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 15779 | return null
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 15338 | 3 -> 0
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:Int2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:init()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:init()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createInt2of5(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:getBarcodeHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Int2of5ModuleFactory:getModule(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:setResolution(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:getBarcodeWidth()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createStd2of5(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createUSD4(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:encode([IILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:Int2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
170 1 77 1 145 1 198 1 265 1 
258 1 196 2 9 1 
220 1 170 1 77 1 145 1 198 1 265 1 
36 1 237 1 279 1 30 1 
111 2 279 1 237 1 3 2 171 1 181 1 197 1 174 1 201 2 184 1 231 1 30 1 
179 1 111 1 234 1 237 1 3 3 170 2 94 1 116 1 197 1 174 1 183 1 201 1 26 1 202 1 13 1 231 1 145 1 186 1 274 2 30 1 
179 1 111 1 234 1 237 1 3 3 170 2 94 1 197 1 174 1 183 1 201 1 26 1 202 1 13 1 231 1 145 1 186 1 274 2 30 1 
179 1 111 1 109 1 279 1 237 1 3 2 170 1 116 1 197 1 246 1 174 1 201 1 231 1 145 1 274 1 30 1 208 1 
179 1 111 1 109 1 279 1 237 1 3 2 170 1 116 1 197 1 174 1 201 1 231 1 291 1 145 1 274 1 30 1 208 1 
179 1 111 1 109 1 279 1 237 1 3 2 241 1 170 1 134 1 197 1 174 1 201 1 231 1 145 1 274 1 30 1 208 1 106 1 
179 1 111 1 109 1 279 1 237 1 3 2 241 1 170 1 116 1 134 1 197 1 174 1 201 1 231 1 145 1 274 1 30 1 208 1 106 1 
111 1 279 1 237 1 3 3 197 1 174 2 201 2 289 1 231 1 30 1 
111 1 112 1 279 1 237 1 3 3 197 1 174 2 100 1 30 1 165 2 
174 1 111 2 101 1 112 1 237 1 279 1 3 2 197 1 165 1 30 1 
111 1 112 1 279 1 237 1 130 1 3 2 197 1 174 1 30 1 165 1 
111 2 112 1 279 1 237 1 3 2 197 2 174 3 289 1 30 1 165 1 
111 1 112 1 216 1 279 1 237 1 3 4 170 1 94 1 197 2 174 2 13 1 249 1 254 1 274 1 30 1 165 2 
111 1 234 1 112 1 279 1 237 1 3 3 170 1 94 1 197 1 174 1 26 1 202 1 13 1 249 1 186 1 274 1 30 1 165 1 
111 1 112 1 216 1 279 1 237 1 3 3 170 1 94 1 96 1 197 1 174 1 13 2 249 1 274 1 30 1 165 1 
174 1 111 1 112 1 237 1 279 1 3 2 133 1 197 1 165 1 30 1 
111 1 112 1 279 1 237 1 3 3 170 1 94 1 173 1 197 1 174 1 13 4 249 1 102 1 15 1 55 1 274 1 30 1 165 1 
111 1 112 1 279 1 237 1 3 2 114 1 197 1 174 1 27 1 30 1 165 1 
1 1 259 3 194 1 
259 1 
211 2 214 1 216 1 215 1 218 1 3 3 8 1 160 1 11 1 13 3 229 4 84 4 163 1 164 4 18 1 232 4 165 1 236 1 169 1 239 4 91 1 240 2 94 1 170 2 172 2 97 4 96 2 243 1 174 2 100 1 25 2 103 1 249 1 251 1 253 1 107 1 30 1 108 2 179 1 110 4 111 3 112 1 260 2 40 2 265 2 50 1 49 1 273 1 128 1 56 1 277 1 191 1 58 1 278 1 130 2 132 2 282 1 63 1 199 3 136 8 139 2 138 4 65 4 284 1 289 1 145 1 70 2 210 1 209 1 
147 2 3 4 153 2 154 2 8 1 11 1 160 1 12 1 13 2 162 4 163 1 165 1 167 2 166 2 168 4 170 2 22 3 174 2 24 2 25 2 176 2 30 1 179 1 182 1 49 1 50 1 54 1 56 1 58 1 193 2 63 1 65 3 200 2 203 2 204 2 206 2 209 1 211 4 214 1 215 1 216 1 217 2 218 1 221 2 223 2 222 2 226 1 227 2 225 2 79 2 81 1 229 4 84 6 83 1 85 2 87 2 89 4 90 1 236 1 239 4 91 1 94 1 96 1 97 3 243 1 242 1 245 2 247 2 100 1 249 1 251 1 104 2 253 1 111 3 110 4 112 1 262 2 117 2 265 2 269 2 270 2 124 2 122 4 128 1 277 1 278 1 130 2 132 4 135 2 136 14 284 1 289 1 288 2 145 1 
211 4 214 1 216 1 215 1 217 2 218 1 153 2 3 3 154 2 221 2 222 2 223 2 8 1 79 2 225 2 227 2 226 1 160 1 11 1 13 2 229 4 162 4 84 6 163 1 85 2 87 2 165 1 166 2 167 2 89 4 90 1 236 1 168 4 91 1 239 4 94 1 170 2 97 3 96 1 242 1 243 1 245 2 174 2 24 2 247 2 100 1 25 2 250 1 249 1 251 1 104 2 176 2 253 1 30 1 179 1 110 4 111 3 112 1 262 2 182 1 117 2 265 2 269 2 270 2 122 4 124 2 49 1 50 1 128 1 56 1 277 1 191 1 58 1 278 1 193 2 130 2 132 4 63 1 135 2 136 4 65 3 284 1 200 2 288 2 289 1 203 2 204 2 145 1 206 2 209 1 
211 4 71 1 214 1 216 1 215 1 217 2 218 1 3 3 154 2 221 3 222 2 223 2 8 1 79 2 225 2 227 2 160 1 11 1 13 2 229 4 162 5 84 6 163 1 85 2 165 1 167 2 166 3 89 4 90 1 236 1 168 3 239 4 91 1 170 2 94 1 97 3 96 1 243 1 245 2 174 2 24 3 247 3 25 2 248 1 100 1 249 1 251 1 176 3 253 1 105 1 30 1 179 1 110 4 111 3 112 1 262 2 265 2 267 1 269 2 270 2 122 5 124 3 50 1 49 1 128 1 56 1 189 2 277 1 58 1 278 1 193 2 130 2 132 4 63 1 135 3 136 4 65 3 284 1 67 1 289 1 203 3 143 1 204 2 145 1 206 2 209 1 
211 4 214 1 216 1 215 1 217 3 218 1 3 4 154 2 221 3 222 2 223 3 8 1 79 2 225 2 227 2 226 1 11 1 160 1 13 2 229 4 162 5 84 6 163 1 85 2 165 2 167 2 166 3 89 4 90 1 236 1 168 3 239 4 91 1 170 2 94 1 97 3 96 1 242 1 243 1 245 2 174 4 24 3 247 3 25 2 248 1 100 1 249 1 251 1 176 3 253 1 28 1 254 1 30 1 179 1 110 4 111 5 112 1 181 1 262 2 265 2 267 1 269 3 270 2 124 3 122 5 50 1 49 1 128 1 56 1 189 2 277 1 191 1 58 1 278 1 193 2 130 2 132 4 63 1 135 3 136 4 65 3 284 1 289 1 203 3 143 1 204 2 145 1 206 2 209 1 
211 4 214 1 216 1 215 1 217 2 218 1 3 3 154 2 221 3 222 2 223 2 8 1 79 2 225 2 227 2 226 1 11 1 160 1 13 2 229 4 162 5 84 6 163 1 85 2 165 1 167 2 166 3 89 4 90 1 236 1 168 3 239 4 91 1 170 2 94 1 97 3 96 1 242 1 243 1 245 2 174 2 24 3 247 3 25 2 248 1 100 1 249 1 251 1 176 3 253 1 28 1 30 1 179 1 110 4 111 3 112 1 262 2 265 2 267 1 269 2 270 2 124 3 122 5 50 1 49 1 128 1 56 1 189 2 277 1 191 1 58 1 278 1 193 2 130 2 132 4 63 1 135 3 136 4 65 3 284 1 289 1 203 3 143 1 204 2 145 1 206 2 209 1 
277 1 110 4 215 1 239 4 8 1 284 1 160 1 100 1 49 1 163 1 253 1 56 1 
3 3 153 2 4 1 154 2 8 1 157 1 11 1 160 1 13 2 162 4 163 1 167 2 166 2 168 4 170 2 174 2 24 2 25 2 176 2 178 2 30 1 179 1 38 2 182 1 43 1 183 1 48 1 50 1 49 1 56 1 191 1 58 1 193 2 63 1 64 1 65 3 200 2 201 1 203 2 68 2 204 2 206 2 209 1 211 4 214 1 215 1 216 1 217 2 218 1 221 2 76 1 223 2 222 2 226 1 227 2 225 2 79 2 229 4 82 1 231 1 84 6 85 2 87 2 89 4 90 1 236 1 239 4 91 1 93 2 94 1 96 1 97 3 243 1 242 1 245 2 247 2 250 1 251 1 104 2 253 1 111 3 110 4 262 2 117 2 263 2 265 2 264 1 269 2 270 2 124 2 122 4 127 1 128 1 277 1 278 1 130 2 132 4 281 1 135 2 136 4 284 1 289 1 288 2 145 1 
277 1 110 1 239 1 8 1 56 1 
211 4 71 1 214 1 216 1 215 1 217 2 218 1 3 3 154 2 221 3 222 2 223 2 8 1 79 2 225 2 227 2 226 1 160 1 11 1 13 2 229 4 162 5 84 6 163 1 85 2 165 1 167 2 166 3 89 4 90 1 236 1 168 3 239 4 91 1 170 2 94 1 97 3 96 1 242 1 243 1 245 2 174 2 24 3 247 3 25 2 248 1 100 1 249 1 251 1 176 3 253 1 28 1 30 1 179 1 110 4 111 3 112 1 262 2 265 2 267 1 269 2 270 2 124 3 122 5 50 1 128 1 56 1 189 2 277 1 58 1 278 1 193 2 130 2 132 4 63 1 135 3 136 4 65 3 284 1 67 1 289 1 203 3 143 1 204 2 145 1 206 2 209 1 
211 4 71 1 214 1 216 1 215 1 217 2 218 1 3 3 154 2 221 3 222 2 223 2 8 1 79 2 225 2 227 2 226 1 160 1 11 1 13 2 229 4 162 5 84 6 163 1 85 2 165 1 167 2 166 3 89 4 90 1 236 1 168 3 239 4 91 1 170 2 94 1 97 3 96 1 242 1 243 1 245 2 174 2 24 3 247 3 25 2 248 1 100 1 249 1 251 1 176 3 253 1 28 1 30 1 179 1 110 4 111 3 112 1 262 2 265 2 267 1 269 2 270 2 124 3 123 1 122 5 50 1 128 1 189 2 277 1 58 1 278 1 193 2 130 2 132 4 63 1 135 3 136 4 65 3 284 1 67 1 289 1 203 3 143 1 204 2 145 1 206 2 209 1 
149 2 151 2 153 2 3 29 154 2 5 2 6 2 7 2 8 1 10 2 11 1 160 1 13 2 161 2 162 9 163 1 17 1 164 4 18 1 165 14 20 2 167 2 166 7 168 9 169 1 170 3 172 2 174 15 24 7 25 2 176 7 177 1 29 2 30 14 32 2 31 2 34 1 179 1 180 1 39 1 40 5 182 1 44 3 45 2 46 1 47 1 185 2 50 1 49 1 52 1 187 1 56 1 57 1 188 1 189 2 190 2 58 1 193 2 60 1 195 1 63 1 199 1 65 6 66 1 200 2 67 1 203 7 204 2 206 2 70 2 209 1 211 6 212 3 71 1 214 1 216 1 215 1 74 1 217 10 73 1 218 1 221 7 222 2 223 10 224 1 78 2 79 2 225 2 227 2 226 1 228 3 80 2 81 10 229 12 230 2 84 8 85 2 232 2 87 2 88 1 89 4 235 1 90 9 236 1 91 14 239 4 238 1 240 2 92 1 94 1 95 2 96 1 97 7 243 1 242 1 245 2 99 1 247 7 100 1 248 5 249 1 103 1 251 1 104 2 253 1 256 3 111 16 110 4 112 14 113 2 260 2 261 3 115 1 262 4 117 2 265 2 118 1 119 1 267 5 268 3 121 1 269 10 270 4 122 9 124 7 126 2 272 1 128 1 273 1 277 1 278 1 131 1 130 2 132 6 282 1 135 7 137 1 136 30 138 2 140 2 141 1 284 1 285 2 286 1 288 2 289 1 143 5 145 2 292 3 146 3 293 3 
287 1 
3 3 154 2 8 1 160 1 11 1 13 3 162 5 163 1 165 1 166 3 167 2 168 3 170 2 174 2 24 3 25 2 176 3 28 1 30 1 179 1 181 1 49 1 50 1 56 1 189 2 191 1 58 1 193 2 63 1 65 3 67 1 203 3 204 2 206 2 209 1 211 4 71 1 214 1 215 1 216 1 217 2 218 1 221 3 223 2 222 2 226 1 227 2 225 2 79 2 229 4 84 6 85 2 89 4 90 1 236 1 91 1 239 4 94 1 96 2 97 3 243 1 242 1 245 2 99 1 247 3 100 1 248 1 249 1 251 1 253 1 111 4 110 4 112 1 262 2 265 2 267 1 269 2 270 2 122 5 124 3 128 1 277 1 278 1 130 2 132 4 135 3 136 4 284 1 289 1 143 1 145 1 
81 1 136 1 275 1 
276 1 136 1 
155 1 136 1 
109 1 233 1 61 1 170 1 97 1 136 1 84 1 69 1 145 1 252 1 208 1 106 1 
109 1 61 1 84 1 170 1 145 1 136 1 208 1 
155 1 136 1 
219 1 84 1 170 1 97 1 145 1 136 1 
59 1 136 1 
155 1 136 1 
276 1 136 1 
276 1 136 1 
120 1 283 1 232 1 136 1 
164 1 136 1 294 1 
190 1 31 1 111 1 112 1 91 1 3 2 40 1 155 1 7 1 136 2 140 1 174 1 10 1 229 2 185 2 30 1 165 1 
149 1 
10 1 31 1 174 1 190 1 111 1 112 1 36 1 3 2 91 1 40 1 140 1 165 1 30 1 
33 1 111 1 90 1 217 2 91 1 3 3 223 2 174 1 201 2 269 2 231 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 90 1 217 2 91 1 3 3 223 2 174 1 201 2 269 2 231 1 30 1 
211 4 217 1 218 1 3 3 4 1 154 2 221 2 76 1 223 1 222 2 157 1 79 2 227 2 225 2 13 1 229 4 162 4 82 1 231 1 84 6 85 2 167 2 166 2 89 4 90 1 168 2 91 1 93 2 170 2 94 1 97 3 96 1 245 2 174 1 24 2 247 2 25 2 251 1 176 2 178 2 30 1 179 1 111 2 38 2 181 1 262 2 263 2 43 1 264 1 265 2 183 1 269 1 48 1 270 2 124 2 122 4 50 1 127 1 58 1 193 2 130 2 281 1 132 4 64 1 135 2 136 4 65 3 200 2 201 1 68 2 203 2 204 2 145 1 206 2 
33 1 111 1 217 1 3 2 154 1 221 1 222 1 223 1 155 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 280 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
174 1 111 1 201 1 90 1 217 1 269 1 3 2 91 1 231 1 223 1 30 1 
111 1 217 1 3 2 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 280 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
33 1 111 1 192 1 90 1 217 1 91 1 3 2 223 1 174 1 201 1 269 1 231 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 280 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 59 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 99 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 117 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
148 1 217 2 3 3 218 1 221 1 222 1 223 2 79 1 225 1 227 1 158 1 81 3 229 2 162 2 231 1 84 2 86 1 85 1 167 1 166 1 233 2 89 2 90 1 168 1 91 1 170 1 241 2 97 2 174 2 24 1 247 1 25 1 176 1 252 2 254 1 255 1 30 1 106 3 33 1 179 1 109 1 111 4 181 1 262 1 269 2 270 1 122 2 124 1 58 1 278 1 193 1 61 1 130 1 135 1 136 3 201 2 288 1 203 1 204 1 69 2 291 1 145 1 206 1 208 1 
33 1 111 1 217 1 3 2 221 1 222 1 223 1 155 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
211 2 217 1 3 3 154 1 221 1 223 1 222 1 227 1 225 1 79 1 13 1 229 2 162 2 231 1 84 3 85 1 167 1 166 1 89 2 90 1 168 1 91 1 93 1 170 1 94 1 96 1 245 1 174 1 24 1 247 1 25 1 251 1 176 1 178 1 30 1 111 1 38 1 262 1 263 1 265 1 183 1 269 1 270 1 124 1 122 2 50 1 193 1 130 1 132 2 64 1 135 1 136 2 65 3 200 1 201 1 68 1 203 1 204 1 206 1 
33 1 111 1 90 1 217 1 91 1 3 2 223 1 263 1 174 1 201 1 269 1 231 1 30 1 
211 2 3 1 153 1 154 1 221 1 222 1 227 1 225 1 79 1 13 1 229 2 162 2 84 3 85 1 87 1 167 1 166 1 89 2 168 2 93 1 94 1 170 1 96 1 245 1 24 1 247 1 100 1 25 1 249 1 251 1 104 1 176 1 178 1 38 1 262 1 263 1 117 1 265 1 270 1 124 1 122 2 50 1 193 1 130 1 132 2 64 1 135 1 136 2 65 3 200 1 288 1 68 1 203 1 204 1 206 1 
211 2 217 1 3 3 154 1 221 1 223 1 222 1 79 1 227 1 225 1 13 1 229 2 162 2 231 1 84 3 85 1 167 1 166 1 89 2 90 1 168 1 91 1 93 1 170 1 94 1 96 1 245 1 174 1 99 1 24 1 247 1 25 1 251 1 176 1 178 1 30 1 111 1 38 1 262 1 263 1 265 1 183 1 269 1 270 1 124 1 122 2 50 1 193 1 130 1 132 2 64 1 135 1 136 2 65 3 200 1 201 1 68 1 203 1 204 1 206 1 
211 2 217 1 3 3 154 1 221 1 223 1 222 1 79 1 225 1 227 1 13 1 229 2 162 2 84 3 85 1 165 1 167 1 166 1 89 2 90 1 168 1 91 1 93 1 170 1 94 1 96 1 245 1 174 1 99 1 24 1 247 1 25 1 100 1 249 1 251 1 176 1 178 1 30 1 111 1 112 1 38 1 262 1 263 1 265 1 269 1 270 1 124 1 122 2 50 1 193 1 130 1 132 2 64 1 135 1 136 2 65 3 200 1 68 1 203 1 204 1 206 1 
33 1 111 1 217 1 153 1 3 2 221 1 223 1 222 1 117 1 79 1 225 1 227 1 269 1 229 2 162 2 124 1 122 2 231 1 85 1 87 1 166 1 167 1 89 2 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 3 2 221 1 222 1 223 1 155 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 3 2 154 1 221 1 222 1 223 1 155 1 79 1 225 1 227 1 229 2 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 2 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
211 1 200 1 132 1 53 1 136 1 
211 1 132 1 53 1 136 1 245 1 
211 1 200 1 132 1 156 1 136 1 98 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
211 2 217 1 153 1 3 2 218 1 154 1 221 1 223 1 222 1 79 1 225 1 227 1 229 2 162 2 231 1 84 3 85 1 87 1 166 1 167 1 233 3 89 2 90 1 168 2 91 1 170 1 241 1 97 3 245 1 174 1 24 1 247 1 25 1 104 1 176 1 252 3 30 1 106 4 33 1 179 1 109 1 111 2 262 1 117 1 265 1 269 1 270 1 124 1 122 2 58 1 278 1 193 1 61 1 130 1 132 2 135 1 136 2 200 1 201 1 288 1 203 1 204 1 69 3 145 1 206 1 208 1 
111 1 217 1 3 2 154 1 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 99 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 154 1 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 3 2 154 1 221 1 222 1 223 1 155 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 1 280 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 280 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
33 1 111 1 217 1 153 1 3 2 221 1 222 1 223 1 155 1 117 1 79 1 225 1 227 1 229 3 269 1 162 2 122 2 124 1 231 1 85 1 87 1 167 1 166 1 89 3 193 1 90 1 168 2 91 1 135 1 174 1 24 1 201 1 247 1 288 1 203 1 104 1 176 1 204 1 206 1 30 1 
111 1 217 1 3 2 221 1 223 1 222 1 155 1 79 1 225 1 227 1 269 1 229 3 162 2 122 2 124 1 231 1 85 1 167 1 166 1 89 3 193 1 90 1 168 1 91 1 135 1 174 1 24 1 201 1 247 1 203 1 176 1 204 1 206 1 30 1 
109 1 111 2 179 1 257 1 213 1 3 2 218 1 40 1 262 1 81 3 13 1 270 1 84 2 231 1 186 1 21 1 58 1 233 2 278 1 234 1 130 1 91 1 62 1 170 1 241 1 97 2 136 4 244 1 246 1 174 1 142 1 201 1 202 1 26 1 25 1 69 2 252 2 145 1 106 3 30 1 208 1 
109 1 111 1 257 1 2 1 213 1 3 2 218 1 38 1 114 1 40 1 262 1 264 1 81 3 270 1 271 1 84 2 231 1 21 1 58 1 233 2 130 1 91 1 93 1 62 1 170 1 241 1 97 2 23 1 136 4 244 1 174 1 142 1 201 1 25 1 68 1 27 1 290 1 69 2 252 2 145 1 178 1 106 3 208 1 30 1 
111 1 217 1 3 2 154 1 221 3 222 1 223 1 79 1 225 1 227 1 267 1 229 2 269 1 162 4 122 4 124 3 231 1 85 1 167 1 166 3 89 2 193 1 90 1 168 3 91 1 196 1 135 3 99 1 174 1 24 3 247 3 201 1 248 2 203 3 143 1 176 3 204 1 206 1 30 1 
111 1 37 1 217 1 3 2 221 3 223 1 267 1 269 1 162 3 122 3 124 3 231 1 166 3 90 1 168 3 91 1 135 3 174 1 24 3 247 3 201 1 248 3 203 3 143 1 176 3 30 1 
166 1 111 1 90 1 217 1 168 1 3 2 91 1 221 1 223 1 133 1 135 1 174 1 24 1 201 1 247 1 267 1 248 1 203 1 269 1 162 1 143 1 124 1 122 1 231 1 176 1 30 1 
111 1 90 1 217 1 91 1 3 2 223 1 133 1 174 1 201 1 267 1 248 1 269 1 231 1 30 1 
211 1 111 1 217 1 3 2 221 1 41 1 223 1 155 1 267 1 269 1 162 1 122 1 124 1 231 1 53 1 189 1 166 1 90 1 168 1 91 1 132 1 135 1 136 1 174 1 24 1 247 1 201 1 248 1 203 1 143 1 176 1 30 1 
166 1 111 1 90 1 217 1 168 1 3 2 91 1 221 1 223 1 135 1 174 1 24 1 201 1 247 1 267 1 248 1 203 1 269 1 162 1 143 1 124 1 122 1 231 1 176 1 30 1 
72 1 14 1 3 1 19 1 
184 1 3 1 144 1 75 1 51 1 
72 1 3 1 150 1 
184 1 152 2 3 1 75 1 
72 1 125 1 
233 1 241 1 69 1 252 1 97 1 106 1 
58 1 218 1 170 1 145 1 
233 1 61 1 241 1 69 1 252 1 97 1 106 1 
68 1 38 1 170 1 205 1 145 1 178 1 264 1 
159 1 89 1 229 1 122 2 124 1 196 1 204 1 
122 1 124 1 
89 1 229 1 122 1 204 1 155 1 136 1 
122 1 124 1 
89 1 229 1 155 1 136 1 
112 1 
165 1 
165 1 
201 1 
231 1 
201 1 
111 1 91 1 3 2 152 1 92 1 40 1 133 1 224 1 141 1 174 1 119 1 121 1 175 1 17 1 30 1 
111 2 129 1 91 2 3 4 152 2 92 2 40 2 224 2 141 2 174 2 119 2 121 2 175 2 16 1 17 2 30 2 
111 1 91 1 3 2 152 1 92 1 40 1 224 1 141 1 174 1 119 1 121 1 175 1 16 1 17 1 30 1 
111 1 36 1 91 1 3 2 152 1 92 1 40 1 224 1 141 1 174 1 119 1 121 1 175 1 17 1 207 1 30 1 
111 1 91 1 3 2 152 1 92 1 5 1 40 1 155 1 224 1 136 1 141 1 174 1 45 2 119 1 121 1 175 1 229 2 17 1 164 1 30 1 
95 1 
32 1 81 2 155 1 136 2 
81 2 155 1 6 1 136 2 
32 1 111 2 152 1 3 3 38 1 5 1 40 1 42 1 6 1 181 1 262 1 224 1 45 1 119 1 183 1 121 1 81 2 13 1 229 1 270 1 16 1 84 2 50 1 17 1 130 1 91 1 93 1 92 1 94 1 170 1 95 1 64 1 96 1 136 2 65 2 141 1 174 1 25 1 175 1 68 1 251 1 178 1 30 1 
119 1 36 1 91 1 207 1 30 1 
32 1 111 3 109 1 179 1 218 1 152 1 3 2 5 1 40 1 6 1 181 1 262 1 224 1 45 1 119 1 121 1 81 2 229 1 270 1 84 2 17 1 164 1 232 1 58 1 233 3 278 1 61 1 130 1 91 1 92 1 241 1 170 1 95 1 97 3 136 3 141 1 174 1 25 1 175 1 69 3 252 3 145 1 106 4 30 1 208 1 
111 1 91 1 3 2 152 1 92 1 5 1 40 1 155 1 224 1 136 3 141 1 174 1 45 1 119 1 121 1 175 1 229 1 17 1 164 2 30 1 
111 1 129 1 91 1 3 2 152 1 92 1 40 1 224 1 141 1 174 1 119 1 121 1 175 1 17 1 30 1 
111 2 129 1 36 1 91 2 3 4 152 2 92 2 40 2 224 2 141 2 174 2 119 2 121 2 175 2 17 2 207 1 30 2 
36 1 103 1 169 1 282 1 18 1 199 1 
35 1 0 1 111 1 152 1 3 2 40 1 155 1 266 1 229 2 18 1 164 1 91 1 169 1 283 1 199 1 136 2 138 2 174 1 175 1 30 1 70 1 
111 1 169 1 91 1 3 2 152 1 282 1 40 1 155 1 283 1 136 2 199 1 138 2 174 1 175 1 103 1 229 2 164 1 18 1 70 1 30 1 
111 3 109 1 179 1 152 1 3 2 218 1 260 1 40 1 181 1 229 1 84 1 164 1 18 1 232 1 58 1 233 2 278 1 61 1 130 1 91 1 169 1 240 1 241 1 282 1 170 1 172 1 97 2 136 1 199 1 138 1 174 1 25 1 175 1 103 1 69 2 252 2 145 1 70 1 106 3 30 1 208 1 
108 1 229 1 196 1 199 1 138 1 139 1 
172 1 155 1 
240 1 155 1 
211 1 108 1 111 1 169 1 91 1 3 2 152 1 260 1 132 1 282 1 40 1 136 2 199 2 138 1 139 1 174 1 175 1 103 1 229 1 164 1 18 1 30 1 
211 1 108 1 111 1 258 1 152 1 3 2 260 1 40 1 229 1 18 1 164 1 91 1 169 1 282 1 132 1 196 1 199 2 136 2 139 1 138 1 174 1 175 1 103 1 294 1 30 1 
260 1 
211 1 108 1 111 2 152 1 3 3 38 1 260 1 40 1 181 1 265 1 266 1 183 1 13 1 229 2 50 1 84 2 164 2 18 1 232 2 130 1 91 1 169 1 93 1 240 1 132 1 282 1 94 1 170 1 172 1 64 1 96 1 136 3 199 2 139 1 138 2 65 4 174 1 25 1 175 1 68 1 103 1 251 1 178 1 70 1 30 1 
36 1 103 1 169 1 282 1 18 1 199 1 
211 1 218 1 3 2 152 1 229 2 84 2 18 1 164 2 232 2 233 4 169 1 91 1 240 1 170 1 241 1 172 1 97 4 174 1 25 1 175 1 103 1 252 4 30 1 106 5 108 1 179 1 109 1 111 3 260 1 40 1 181 1 265 1 278 1 58 1 61 1 130 1 282 1 132 1 199 2 136 3 138 2 139 1 69 4 145 1 208 1 70 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 237 55 212 242 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | CONSTANT | 5657 | 928 -> -1
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D | CONDITION | 6721 | if (x) -> if (!x)
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 141 1 100 1 191 1 255 1 40 1 
127 1 141 1 100 1 191 1 255 1 
221 1 15 1 18 2 
0 2 206 2 123 1 37 1 188 1 89 2 154 2 63 1 76 1 118 1 232 3 
0 2 214 1 206 2 17 1 123 1 37 1 191 1 89 1 154 4 109 1 263 1 63 1 75 1 92 1 118 1 232 2 
214 1 0 1 206 1 167 1 123 1 37 1 191 1 89 1 154 3 59 1 108 1 109 1 179 1 63 1 75 1 92 1 118 1 232 1 
0 1 214 1 206 1 123 1 37 1 191 1 89 1 154 3 223 1 109 1 263 1 63 1 75 1 92 2 118 1 232 1 
0 1 206 1 123 1 37 1 63 1 69 1 89 1 154 2 232 1 118 1 
0 1 147 1 214 1 206 1 123 1 37 1 190 1 191 1 89 1 154 3 126 1 197 1 109 1 63 1 75 1 92 4 118 1 232 1 
0 1 184 1 206 1 123 1 37 1 63 1 174 1 89 1 154 2 232 1 118 1 
245 1 37 1 63 1 118 1 
0 1 206 1 123 1 37 1 267 1 63 1 89 2 162 1 154 2 232 1 118 1 
214 1 0 1 163 1 206 1 167 1 123 1 37 1 100 1 191 2 89 1 154 3 59 1 108 1 109 1 261 1 179 1 75 2 92 1 118 1 232 1 
214 1 0 1 206 1 167 1 123 1 37 1 100 1 191 2 89 1 154 3 59 1 108 1 109 1 261 1 179 1 75 2 92 1 118 1 232 1 
0 1 233 1 234 1 119 1 163 1 206 1 123 1 37 1 100 1 191 1 89 1 154 2 261 1 63 1 75 1 118 1 232 1 
0 1 233 1 234 1 163 1 206 1 123 1 37 1 100 1 191 1 89 1 154 2 261 1 180 1 63 1 75 1 118 1 232 1 
0 1 233 1 234 1 206 1 152 1 123 1 37 1 100 1 191 1 89 1 154 2 260 1 261 1 31 1 63 1 75 1 118 1 232 1 
0 1 233 1 234 1 163 1 206 1 152 1 123 1 37 1 100 1 191 1 89 1 154 2 260 1 261 1 31 1 63 1 75 1 118 1 232 1 
0 2 206 1 123 1 37 1 63 1 76 1 89 1 154 3 232 2 118 1 
206 1 121 1 37 1 89 1 154 3 26 1 63 1 247 2 118 1 232 2 
206 1 26 1 37 1 63 1 8 1 89 2 247 1 154 2 232 1 118 1 
206 1 253 1 37 1 89 1 154 2 26 1 63 1 247 1 118 1 232 1 
44 1 3 3 254 1 
3 1 
175 1 
2 2 133 1 136 14 7 1 9 2 11 2 138 2 144 1 143 4 142 2 148 2 150 2 153 1 154 3 23 1 155 2 158 1 26 1 29 3 160 4 34 1 166 3 165 1 35 1 169 1 37 1 39 3 41 2 176 2 42 1 47 3 50 1 51 1 182 2 185 1 187 1 55 1 57 1 191 2 60 1 198 1 64 1 202 1 203 2 205 1 208 1 70 1 210 1 71 1 72 2 73 4 76 1 212 1 214 1 215 3 79 2 81 3 216 6 83 4 89 4 223 2 224 3 91 1 92 3 232 2 93 4 236 1 237 1 99 1 100 1 101 1 238 2 102 4 103 1 104 5 105 1 241 2 243 3 112 2 113 1 246 3 247 1 116 1 117 1 249 2 121 1 250 5 253 2 257 2 127 2 128 3 261 1 263 1 130 1 265 3 267 1 132 3 
202 1 2 2 203 2 133 1 208 1 136 4 7 1 11 2 9 2 138 2 70 1 210 1 142 2 143 4 144 1 72 2 73 4 76 1 212 1 214 1 148 3 215 3 79 2 216 6 81 3 17 1 83 4 89 5 154 4 155 2 23 1 223 1 158 1 224 3 26 1 29 3 160 4 91 1 92 2 232 4 93 4 165 1 166 3 35 1 169 1 236 1 237 1 37 1 100 1 99 1 39 3 101 1 238 2 102 4 176 2 41 2 103 1 42 1 105 1 104 5 241 2 243 3 47 3 113 1 112 3 246 3 51 1 247 2 182 3 117 1 249 2 121 1 250 5 253 2 55 1 187 1 191 2 57 1 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 267 1 132 3 64 1 
202 1 2 2 203 2 133 1 208 1 136 4 7 1 11 2 9 2 138 2 70 1 210 1 142 2 143 4 144 1 72 2 73 4 76 1 212 1 214 1 148 2 215 3 79 2 216 6 81 3 83 4 89 3 154 3 155 2 23 1 223 1 158 1 224 3 26 1 29 3 160 4 91 1 92 2 232 2 93 4 165 1 166 3 35 1 169 1 236 1 237 1 37 1 100 1 39 3 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 105 1 104 5 241 2 243 3 47 3 113 1 112 2 246 3 51 1 247 1 182 2 117 1 249 2 121 1 250 5 253 2 55 1 187 1 191 2 57 1 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
202 1 93 4 35 1 121 1 210 1 198 1 237 1 55 1 113 1 102 4 117 1 212 1 
202 1 204 2 208 1 136 8 7 1 10 1 12 1 13 1 210 1 143 4 73 2 76 1 146 1 212 1 214 1 216 4 83 2 19 4 89 3 154 3 23 1 223 2 158 1 26 1 159 1 91 1 30 1 229 2 32 2 92 3 232 2 93 4 35 1 169 1 236 1 168 2 237 1 37 1 100 1 99 1 101 1 172 4 102 4 103 1 42 1 107 2 111 2 113 1 247 1 117 1 186 3 121 1 253 2 187 1 55 1 191 2 125 2 257 2 58 4 60 1 127 2 261 1 263 1 198 1 130 1 265 4 131 1 132 4 64 1 
202 1 2 2 208 1 136 4 137 2 7 1 11 2 9 2 138 2 70 1 210 1 142 2 143 4 72 2 74 2 73 4 76 1 212 1 214 1 148 2 215 2 79 2 81 2 216 6 83 4 86 2 89 3 154 4 155 2 23 1 222 2 223 1 158 1 224 4 26 1 29 2 160 4 91 1 227 1 92 2 232 2 93 4 166 2 35 1 236 1 237 1 37 1 100 1 39 2 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 104 4 105 1 241 2 243 2 47 2 112 2 113 1 246 2 51 1 52 2 247 1 182 2 117 1 249 2 121 1 250 4 252 2 253 2 187 1 55 1 191 2 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
202 1 2 2 208 1 136 4 137 2 7 1 11 2 9 2 138 2 70 1 210 1 142 2 143 4 72 2 74 2 73 4 76 1 212 1 214 1 148 2 215 2 79 2 81 2 216 6 83 4 86 2 89 3 154 3 155 2 23 1 222 2 223 1 158 1 224 4 26 1 29 2 160 4 91 1 227 1 92 2 232 2 93 4 166 2 35 1 169 1 236 1 237 1 37 1 100 1 39 2 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 104 4 105 1 241 2 243 2 47 2 112 2 113 1 246 2 51 1 52 2 247 1 182 2 117 1 249 2 121 1 250 4 251 1 252 2 253 2 187 1 55 1 191 2 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
202 1 2 2 203 2 133 1 205 1 208 1 136 4 7 1 11 2 9 2 138 2 210 1 142 2 143 4 144 1 72 2 73 4 76 1 212 1 214 1 148 2 215 3 79 2 216 6 81 3 83 4 89 3 154 3 155 2 23 1 223 1 158 1 224 3 26 1 29 3 160 4 91 1 92 2 232 2 94 1 93 4 166 3 165 1 35 1 236 1 237 1 37 1 100 1 39 3 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 104 5 241 2 243 3 47 3 113 1 112 2 246 3 51 1 247 1 182 2 117 1 249 2 185 1 121 1 250 5 253 2 55 1 187 1 191 2 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
0 1 2 2 136 4 137 2 7 1 11 2 9 2 138 2 140 2 143 4 142 2 148 2 151 2 21 1 154 3 155 2 25 1 158 1 157 2 27 2 29 2 160 4 166 2 35 1 169 1 37 1 39 2 41 2 176 2 42 1 47 2 178 1 49 1 51 1 52 2 182 2 55 1 187 1 191 2 60 1 198 1 64 1 202 1 66 1 208 1 70 1 210 1 72 2 73 4 74 2 76 1 77 1 212 1 214 1 215 2 79 2 216 6 81 2 83 4 86 2 87 1 89 3 220 1 223 1 222 2 224 4 91 1 227 1 92 2 232 2 93 4 236 1 237 1 99 1 100 1 101 1 238 2 102 4 103 1 105 1 104 4 241 2 106 2 109 1 243 2 113 1 112 2 246 2 117 1 249 2 250 4 251 1 253 2 123 1 252 2 256 1 257 2 258 1 127 2 261 1 263 1 130 1 265 3 132 3 
93 1 55 1 102 1 117 1 212 1 
202 1 2 2 203 2 133 1 205 1 208 1 136 4 7 1 11 2 9 2 138 2 70 1 142 2 143 4 144 1 72 2 73 4 76 1 212 1 214 1 148 2 215 3 79 2 216 6 81 3 83 4 89 3 154 3 155 2 23 1 223 1 158 1 224 3 26 1 29 3 160 4 91 1 92 2 232 2 93 4 166 3 165 1 35 1 236 1 237 1 37 1 100 1 39 3 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 105 1 104 5 241 2 243 3 47 3 113 1 112 2 246 3 51 1 247 1 182 2 117 1 249 2 185 1 121 1 250 5 253 2 55 1 187 1 191 2 57 1 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
202 1 2 2 203 2 133 1 205 1 207 1 208 1 136 4 7 1 11 2 9 2 138 2 70 1 142 2 143 4 144 1 72 2 73 4 76 1 214 1 148 2 215 3 79 2 216 6 81 3 83 4 89 3 154 3 155 2 23 1 223 1 158 1 224 3 26 1 29 3 160 4 91 1 92 2 232 2 93 4 166 3 165 1 35 1 236 1 237 1 37 1 100 1 39 3 99 1 101 1 238 2 102 4 176 2 41 2 103 1 42 1 105 1 104 5 241 2 243 3 47 3 113 1 112 2 246 3 51 1 247 1 182 2 117 1 249 2 185 1 121 1 250 5 253 2 55 1 187 1 191 2 57 1 257 2 60 1 127 2 261 1 263 1 198 1 130 1 265 3 132 3 64 1 
2 2 133 5 136 7 137 2 7 1 9 2 11 2 138 2 142 2 144 5 143 4 148 10 154 20 23 1 155 2 158 1 26 9 29 7 160 4 166 7 165 5 35 1 170 1 37 10 39 7 41 2 176 2 42 1 47 7 50 1 51 9 52 2 182 10 185 1 187 10 55 1 191 3 193 1 60 1 198 1 199 1 64 1 200 1 201 1 202 1 203 2 205 1 208 1 209 1 70 1 210 1 72 2 74 2 73 6 76 1 212 1 213 1 214 1 215 7 79 2 81 7 216 6 83 6 86 2 89 11 218 1 222 2 223 1 224 9 90 1 91 1 227 1 228 1 92 2 232 11 93 4 96 1 236 1 98 1 237 1 100 2 99 1 101 1 238 2 102 4 103 1 104 9 105 1 241 2 242 1 243 7 112 10 113 1 246 7 114 1 247 10 115 1 117 1 248 1 249 2 120 1 121 1 250 9 252 2 253 2 257 2 127 2 261 1 263 1 130 1 265 3 132 3 
65 1 34 1 136 1 
225 1 136 1 
136 1 68 1 
225 1 136 1 
225 1 136 1 
136 1 68 1 
233 1 234 1 53 1 216 1 152 1 136 1 100 1 191 1 139 1 129 1 161 1 132 1 
216 1 177 1 136 1 100 1 191 1 132 1 
233 1 53 1 234 1 216 1 136 1 100 1 191 1 
136 1 68 1 
226 1 136 1 
136 1 6 1 19 1 85 1 
136 1 268 1 58 1 
204 1 80 1 4 1 82 1 136 2 187 1 37 1 20 1 68 1 89 1 154 2 195 1 26 1 143 2 247 1 230 2 232 1 
239 1 
195 1 204 1 80 1 26 1 82 1 245 1 37 1 187 1 20 1 89 1 247 1 154 2 232 1 
0 2 148 2 123 1 187 1 37 1 89 1 154 3 61 1 112 2 51 1 182 2 232 1 
0 1 2 2 66 1 136 4 137 2 7 1 9 2 11 2 138 2 140 2 142 2 143 4 72 2 73 4 77 1 214 1 148 1 215 2 79 2 216 6 81 2 151 2 83 4 87 1 89 2 21 1 220 1 154 3 155 2 25 1 223 1 157 2 224 2 27 2 29 2 160 4 92 1 232 1 166 2 37 1 100 1 39 2 101 1 238 2 41 2 176 2 42 1 104 4 106 2 241 2 109 1 243 2 47 2 49 1 178 1 112 1 246 2 51 1 182 1 249 2 250 4 123 1 253 2 187 1 191 2 256 1 257 2 258 1 127 2 261 1 265 3 267 1 132 3 64 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 89 1 154 2 155 1 61 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 14 2 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 2 148 2 123 1 187 1 37 1 89 1 154 3 61 1 112 2 51 1 182 2 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 148 1 123 1 37 1 187 1 112 1 51 1 89 1 182 1 154 2 232 1 
0 1 2 1 136 2 137 1 7 1 9 1 11 1 138 1 140 1 142 1 143 2 72 1 73 2 214 1 148 1 215 1 79 1 216 3 81 1 151 1 83 2 89 1 220 1 154 3 155 1 223 1 157 1 224 1 27 1 29 1 160 2 92 1 232 1 166 1 37 1 39 1 238 1 41 1 176 1 42 1 104 2 106 1 241 1 109 1 243 1 47 1 112 1 246 1 51 1 182 1 249 1 250 2 253 1 123 1 187 1 191 1 257 1 127 1 265 3 
0 1 148 1 123 1 187 1 37 1 89 1 154 2 106 1 61 1 112 1 51 1 182 1 232 1 
2 1 136 2 137 1 7 1 11 1 9 1 138 1 140 1 143 2 142 1 72 1 73 2 74 1 214 1 215 1 79 1 81 1 216 3 151 1 83 2 86 1 220 1 154 1 23 1 155 1 223 1 222 1 157 1 224 2 27 1 29 1 160 2 92 1 166 1 39 1 238 1 41 1 176 1 42 1 104 2 106 1 241 1 243 1 47 1 246 1 52 1 249 1 121 1 250 2 253 1 252 1 191 1 257 1 127 1 265 3 
0 1 2 1 136 2 137 1 7 1 9 1 11 1 138 1 140 1 142 1 143 2 72 1 73 2 214 1 148 1 215 1 79 1 216 3 81 1 151 1 83 2 89 1 220 1 154 3 155 1 223 1 157 1 224 1 27 1 29 1 160 2 92 1 232 1 166 1 37 1 39 1 238 1 41 1 176 1 42 1 104 2 106 1 241 1 109 1 243 1 47 1 50 1 112 1 246 1 51 1 182 1 249 1 250 2 253 1 123 1 187 1 191 1 257 1 127 1 265 3 
2 1 136 2 137 1 7 1 9 1 11 1 138 1 140 1 142 1 143 2 72 1 73 2 214 1 148 1 215 1 79 1 216 3 81 1 151 1 83 2 89 1 220 1 154 3 23 1 155 1 223 1 157 1 224 1 27 1 26 1 29 1 160 2 92 1 232 1 166 1 37 1 39 1 238 1 41 1 176 1 42 1 104 2 106 1 241 1 243 1 47 1 50 1 112 1 246 1 51 1 247 1 182 1 249 1 121 1 250 2 253 1 187 1 191 1 257 1 127 1 265 3 
0 1 2 1 166 1 37 1 39 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 2 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 252 1 123 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 2 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 89 1 154 2 155 1 61 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 138 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 138 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 138 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 176 1 41 1 104 2 241 1 138 1 243 1 47 1 142 1 143 2 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 89 1 154 2 155 1 61 1 224 1 29 1 160 2 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 138 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
149 1 73 1 136 1 83 1 137 1 
9 1 149 1 73 1 136 1 83 1 
244 1 73 1 136 1 83 1 211 1 137 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 136 2 137 1 9 1 11 1 138 1 139 3 142 1 143 2 72 1 73 2 74 1 148 1 215 1 79 1 216 3 81 1 152 4 83 2 86 1 89 2 154 2 155 1 222 1 224 2 29 1 160 2 31 1 161 3 232 1 233 1 234 1 166 1 37 1 39 1 100 1 101 1 238 1 41 1 176 1 104 2 241 1 243 1 47 1 112 1 246 1 51 1 52 1 182 1 53 1 249 1 250 2 252 1 123 1 253 1 187 1 191 1 257 1 61 1 127 1 261 1 129 3 130 1 132 3 64 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 50 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 14 2 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 89 1 154 2 155 1 61 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 14 2 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 52 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 86 1 89 1 154 2 155 1 222 1 61 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 14 2 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 95 1 148 1 123 1 187 1 37 1 89 1 154 2 61 1 112 1 51 1 182 1 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 14 2 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 224 1 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 50 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 138 1 241 1 243 1 47 1 142 1 143 3 72 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 187 1 89 1 154 2 155 1 222 1 224 2 29 1 160 3 232 1 
0 2 2 1 5 1 136 3 11 1 139 2 142 1 143 2 72 1 148 2 215 1 79 1 216 2 81 1 17 1 152 3 89 4 154 3 155 1 224 1 29 1 160 2 31 2 161 2 232 2 233 1 234 1 164 1 34 3 166 1 36 1 37 1 100 1 39 1 101 1 238 1 41 1 176 1 104 2 241 1 243 1 47 1 112 2 180 1 246 1 51 1 182 2 53 1 249 1 250 2 123 1 253 1 252 1 56 1 187 1 191 1 257 1 61 1 261 1 129 2 130 1 267 1 132 2 64 1 
0 1 2 1 166 1 37 1 39 1 68 1 41 1 176 1 104 2 241 1 243 1 47 1 142 1 143 3 72 1 74 1 112 1 246 1 51 1 182 1 249 1 148 1 215 1 79 1 81 1 250 2 123 1 252 1 187 1 89 1 154 2 155 1 61 1 224 1 29 1 160 3 232 1 
0 1 233 1 234 1 204 1 34 3 167 1 67 1 171 1 37 1 136 4 100 1 101 1 238 1 11 1 108 1 139 2 48 1 179 1 145 1 119 1 216 2 152 3 123 1 253 1 187 1 191 1 89 2 257 1 88 1 154 2 59 1 129 2 261 1 130 1 62 1 31 1 161 2 132 2 92 1 64 1 232 1 
233 1 0 1 234 1 204 1 34 3 97 1 67 1 171 1 37 1 136 4 100 1 101 1 238 1 174 1 11 1 110 1 140 1 139 2 48 1 145 1 184 1 216 2 151 1 152 3 123 1 253 1 187 1 87 1 191 1 89 1 257 1 88 1 154 2 196 1 24 1 157 1 27 1 129 2 62 1 31 1 161 2 132 2 64 1 232 1 
0 1 2 1 133 1 166 3 165 2 37 1 39 3 176 1 41 1 104 4 138 1 241 1 243 3 47 3 142 1 143 2 144 1 72 1 50 1 112 1 246 3 51 1 182 1 249 1 148 1 215 3 79 1 81 3 250 4 123 1 18 1 187 1 89 1 154 2 155 1 224 3 29 3 160 2 232 1 
0 1 133 1 166 3 165 3 37 1 39 3 104 3 243 3 47 3 144 1 112 1 246 3 51 1 182 1 183 1 148 1 215 3 81 3 250 3 123 1 187 1 89 1 154 2 224 3 29 3 232 1 
0 1 133 1 166 1 165 1 37 1 39 1 69 1 104 1 243 1 47 1 144 1 112 1 246 1 51 1 182 1 148 1 215 1 81 1 250 1 123 1 187 1 89 1 154 2 224 1 29 1 232 1 
0 1 148 1 133 1 165 1 123 1 187 1 37 1 69 1 89 1 154 2 112 1 51 1 182 1 232 1 
0 1 148 1 215 1 133 1 165 1 166 1 81 1 250 1 123 1 37 1 187 1 39 1 89 1 154 2 104 1 224 1 243 1 47 1 29 1 144 1 112 1 246 1 51 1 182 1 232 1 
0 1 203 1 133 1 166 1 165 1 136 1 37 1 39 1 68 1 104 1 243 1 47 1 144 1 73 1 112 1 246 1 51 1 182 1 149 1 148 1 215 1 81 1 250 1 123 1 187 1 83 1 89 1 219 1 154 2 224 1 29 1 232 1 
46 1 135 1 231 1 154 1 
156 1 188 1 217 1 181 1 154 1 
46 1 194 1 154 1 
262 2 188 1 181 1 154 1 
235 1 46 1 
139 1 129 1 152 1 31 1 161 1 132 1 
100 1 101 1 191 1 64 1 
151 1 100 1 191 1 87 1 173 1 157 1 140 1 
53 1 139 1 129 1 152 1 31 1 161 1 132 1 
104 1 249 1 143 1 160 1 136 1 68 1 
104 1 166 1 
143 1 160 1 136 1 68 1 
104 2 249 1 166 1 143 1 160 1 264 1 18 1 
104 1 166 1 
247 1 
26 1 
247 1 
0 1 
0 1 
123 1 
204 1 122 1 187 1 37 1 124 1 38 1 84 1 192 1 89 1 154 2 240 1 45 1 262 1 266 1 232 1 
204 1 122 1 187 1 37 1 124 1 38 1 84 1 192 1 69 1 89 1 154 2 45 1 262 1 266 1 232 1 
33 1 204 2 122 2 124 2 187 2 37 2 38 2 84 2 192 2 89 2 154 4 240 1 45 2 262 2 266 2 232 2 
204 1 122 1 134 1 124 1 187 1 37 1 38 1 84 1 192 1 89 1 154 2 45 1 245 1 262 1 266 1 232 1 
78 1 204 1 122 1 136 3 187 1 37 1 124 1 38 1 84 1 192 1 68 1 89 1 58 2 154 2 43 1 45 1 143 1 262 1 266 1 232 1 
33 1 204 1 122 1 124 1 187 1 37 1 38 1 84 1 192 1 89 1 154 2 45 1 262 1 266 1 232 1 
33 1 204 2 134 1 122 2 124 2 187 2 37 2 38 2 84 2 192 2 89 2 154 4 45 2 245 1 262 2 266 2 232 2 
78 2 204 1 122 1 136 1 187 1 37 1 124 1 38 1 84 1 192 1 68 1 89 1 58 1 154 2 43 1 45 1 143 2 262 1 266 1 232 1 
54 1 
34 2 28 1 136 2 68 1 
34 2 189 1 136 2 68 1 
204 1 34 2 136 2 37 1 38 1 238 1 7 1 11 1 42 1 240 1 43 1 45 1 109 1 140 1 143 1 214 1 78 1 54 1 216 2 151 1 122 1 253 1 189 1 187 1 124 1 84 1 192 1 191 1 89 2 257 1 220 1 154 3 259 1 223 1 157 1 27 1 28 1 262 1 265 2 266 1 267 1 92 1 232 1 
134 1 245 1 37 1 187 1 192 1 
233 1 234 1 204 1 34 2 136 3 37 1 38 1 100 1 101 1 238 1 11 1 43 1 45 1 139 3 143 1 53 1 78 1 54 1 216 2 122 1 152 4 253 1 189 1 124 1 187 1 19 1 84 1 192 1 191 1 89 3 257 1 58 1 154 2 129 3 261 1 28 1 262 1 130 1 31 1 161 3 266 1 267 1 132 3 64 1 232 1 
12 1 186 1 13 1 245 1 159 1 131 1 
1 1 204 1 168 1 37 1 136 2 6 1 38 1 172 2 68 1 12 1 13 1 143 2 186 1 16 1 187 1 89 1 58 1 154 2 22 1 262 1 232 1 
204 1 37 1 136 2 38 1 172 1 12 1 107 1 13 1 143 1 73 1 15 1 186 2 187 1 18 1 83 1 125 1 89 1 58 1 154 2 262 1 159 1 131 1 229 1 268 1 232 1 
229 1 
1 1 204 1 168 1 136 3 37 1 38 1 172 2 7 1 42 1 12 1 107 1 109 1 140 1 13 1 111 1 143 2 73 1 214 1 186 2 216 2 151 1 253 1 187 1 83 1 19 2 191 1 125 1 89 2 257 1 58 2 220 1 154 3 223 1 157 1 127 1 27 1 262 1 159 1 265 4 131 1 267 1 229 1 32 1 92 1 232 1 
12 1 186 1 13 1 245 1 159 1 131 1 
233 1 234 1 204 1 168 1 136 3 37 1 38 1 100 1 172 2 101 1 12 1 107 1 139 4 13 1 111 1 143 2 73 1 53 1 216 2 186 2 152 5 253 1 187 1 83 1 19 2 191 1 125 1 89 3 257 1 58 2 154 2 127 1 129 4 261 1 262 1 159 1 130 1 31 1 131 1 161 4 267 1 229 1 132 4 32 1 64 1 232 1 
204 1 186 1 168 1 6 1 136 2 187 1 37 1 38 1 172 2 68 1 89 1 58 1 154 2 12 1 13 1 143 2 262 1 159 1 131 1 232 1 
233 1 234 1 204 1 168 1 136 1 37 1 38 1 100 1 172 1 101 1 12 1 139 2 13 1 111 1 143 1 53 1 216 1 186 1 152 3 253 1 187 1 19 1 191 1 89 3 257 1 58 1 154 2 129 2 261 1 262 1 159 1 130 1 31 1 131 1 161 2 267 1 229 1 132 2 32 1 64 1 232 1 
107 1 186 1 143 1 18 1 172 1 125 1 
111 1 68 1 
32 1 68 1 
204 1 37 1 136 2 38 1 172 1 12 1 107 1 13 1 143 1 73 1 186 2 187 1 83 1 125 1 89 1 58 1 154 2 262 1 159 1 131 1 229 1 232 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 27684 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | OPERATOR | 7033 | == -> !=
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 1 154 1 96 1 142 1 199 1 65 1 
9 1 154 1 142 1 199 1 65 1 
196 1 235 1 171 2 
194 1 10 2 195 1 46 1 62 3 184 1 126 2 66 1 15 2 177 1 157 2 
194 1 10 2 232 1 195 1 216 1 76 1 62 2 45 1 184 1 138 1 126 1 29 1 66 1 15 4 157 2 142 1 
194 1 10 1 232 1 195 1 79 1 45 1 62 1 138 1 184 1 148 1 126 1 29 1 66 1 15 3 7 1 157 1 142 1 91 1 
194 1 10 1 74 1 232 1 195 1 76 1 62 1 45 1 184 1 138 2 126 1 29 1 66 1 15 3 157 1 142 1 
194 1 214 1 66 1 195 1 
194 1 10 1 163 1 195 1 62 1 184 1 126 2 66 1 15 2 178 1 157 1 
10 1 232 1 182 1 195 1 79 1 45 1 62 1 138 1 184 1 148 1 126 1 65 1 29 2 66 1 15 3 7 1 157 1 142 2 227 1 91 1 
10 1 232 1 195 1 79 1 45 1 62 1 138 1 184 1 148 1 126 1 65 1 29 2 66 1 15 3 7 1 157 1 142 2 227 1 91 1 
194 1 10 1 122 1 182 1 195 1 62 1 184 1 126 1 65 1 127 1 29 1 66 1 15 2 204 1 157 1 142 1 227 1 
194 1 10 1 122 1 182 1 195 1 62 1 184 1 126 1 65 1 127 1 29 1 66 1 15 2 70 1 157 1 142 1 227 1 
194 1 10 1 122 1 195 1 62 1 184 1 150 1 126 1 65 1 127 1 29 1 66 1 15 2 191 1 157 1 142 1 227 1 145 1 
194 1 10 1 122 1 182 1 195 1 62 1 184 1 150 1 126 1 65 1 127 1 29 1 66 1 15 2 191 1 157 1 142 1 227 1 145 1 
194 1 10 2 195 1 62 2 46 1 184 1 126 1 66 1 15 3 157 1 
194 1 195 1 94 2 62 2 200 1 126 1 66 1 15 3 116 1 157 1 
194 1 84 1 66 1 15 2 195 1 94 1 62 1 157 1 126 2 200 1 
194 1 195 1 94 1 233 1 62 1 200 1 126 1 66 1 15 2 157 1 
194 1 66 1 15 2 195 1 94 1 62 1 157 1 237 1 126 1 200 1 
194 1 195 1 94 1 62 1 45 1 138 4 25 1 200 1 126 1 29 1 66 1 15 3 158 1 157 1 142 1 72 1 92 1 181 1 
194 1 195 1 94 1 62 1 200 1 126 1 66 1 15 2 6 1 157 1 146 1 
156 3 179 1 90 1 
156 1 
123 1 0 1 1 6 62 4 124 3 186 2 126 5 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 71 2 72 1 73 2 135 1 74 1 136 3 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 4 16 1 206 2 87 1 18 1 89 2 142 2 210 1 144 14 209 1 19 2 93 4 212 2 21 2 216 1 22 3 94 2 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 3 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 39 1 162 1 38 4 231 1 40 2 163 1 107 2 167 2 233 2 44 1 108 2 46 1 45 1 50 1 110 2 169 3 240 2 170 3 174 2 114 1 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 114 1 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 2 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 3 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 114 1 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 4 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 51 1 240 2 170 2 174 2 114 1 56 2 57 1 116 1 180 1 120 4 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 176 1 56 2 57 1 116 1 180 1 120 4 121 1 
109 1 
123 1 0 1 1 6 62 2 124 3 186 2 126 4 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 2 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 3 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 163 1 107 2 167 2 44 1 233 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 114 1 176 1 56 2 57 1 116 1 180 1 120 4 121 1 
123 1 0 1 1 6 124 3 2 1 126 3 129 1 4 1 8 2 134 2 135 1 10 1 136 2 137 2 138 2 140 1 15 3 142 2 144 4 19 2 21 2 22 3 23 2 24 2 26 1 149 4 151 1 152 1 154 2 159 1 36 1 38 4 162 1 40 2 41 1 164 1 167 2 44 1 45 1 46 1 50 1 51 1 170 2 174 2 57 1 56 2 180 1 58 1 61 1 62 2 184 1 186 2 187 4 65 1 188 2 66 1 189 1 190 4 192 2 193 4 73 2 74 1 197 1 77 4 76 1 78 1 80 2 81 1 202 1 85 2 206 2 89 2 93 4 209 1 210 1 212 2 97 1 99 2 222 1 223 1 225 2 226 2 227 1 228 2 229 2 230 1 232 1 231 1 107 2 233 2 108 2 110 2 240 2 243 2 114 1 120 4 
38 1 0 1 162 1 77 1 189 1 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 230 1 162 1 38 4 231 1 40 2 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 176 1 56 2 57 1 116 1 180 1 120 4 121 1 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 77 4 197 1 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 230 1 162 1 38 4 231 1 40 2 42 1 107 2 44 1 233 2 167 2 108 2 46 1 45 1 50 1 110 2 240 2 170 2 174 2 176 1 56 2 57 1 116 1 180 1 120 4 121 1 
123 1 0 1 1 6 62 2 124 3 186 2 126 3 65 1 187 4 66 1 4 1 189 1 190 4 8 2 193 4 72 1 73 2 135 1 74 1 136 2 137 2 76 1 197 1 77 4 78 1 80 2 138 2 200 1 85 2 15 3 206 2 89 2 142 2 210 1 209 1 19 2 144 4 93 4 212 2 21 2 22 3 94 1 23 2 24 2 149 4 26 1 152 1 151 1 97 1 154 2 99 2 222 1 223 1 227 1 226 2 225 2 228 2 159 1 230 1 162 1 38 4 231 1 40 2 107 2 167 2 44 1 233 2 108 2 46 1 45 1 50 1 110 2 238 1 240 2 170 2 174 2 176 1 56 2 57 1 116 1 180 1 120 4 121 1 
16 1 69 1 144 1 
211 1 144 1 
207 1 144 1 
122 1 1 1 22 1 127 1 65 1 201 1 130 1 100 1 32 1 142 1 144 1 145 1 
1 1 30 1 22 1 142 1 144 1 65 1 
122 1 130 1 1 1 142 1 144 1 65 1 127 1 
207 1 144 1 
98 1 144 1 
207 1 144 1 
211 1 144 1 
211 1 144 1 
166 1 111 1 55 1 144 1 
53 1 224 1 144 1 
215 1 94 1 62 1 236 1 198 1 200 1 126 1 27 1 173 1 66 1 15 2 207 1 101 2 193 2 33 1 144 2 210 1 
34 1 
173 1 214 1 66 1 215 1 15 2 94 1 62 1 198 1 126 1 200 1 33 1 27 1 210 1 
10 2 136 2 62 1 184 1 126 1 14 1 170 2 66 1 15 3 99 2 180 1 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
10 1 136 1 66 1 15 2 99 1 62 1 184 1 180 1 126 1 170 1 210 1 
10 2 136 2 66 1 15 3 99 2 62 1 184 1 180 1 126 1 170 2 210 1 14 1 
1 6 61 1 62 1 184 1 124 3 2 1 126 2 186 2 65 1 187 4 188 2 129 1 66 1 4 1 190 4 8 2 192 2 193 4 134 2 73 2 10 1 74 1 136 1 137 2 80 2 81 1 138 1 140 1 202 1 85 2 15 3 206 2 89 2 142 2 93 4 144 4 19 2 210 1 212 2 21 2 22 3 23 2 24 2 149 4 151 1 154 2 99 1 227 1 226 2 225 2 228 2 229 2 36 1 232 1 41 1 40 2 163 1 164 1 107 2 233 2 167 2 45 1 108 2 50 1 110 2 240 2 170 1 243 2 174 2 57 1 56 2 180 1 120 4 58 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 110 1 170 1 14 1 174 1 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 221 2 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 221 2 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
10 1 105 1 136 1 62 1 184 1 126 1 14 1 170 1 66 1 15 2 99 1 180 1 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 221 2 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 139 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 2 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
122 1 1 2 62 2 184 1 186 1 126 4 187 2 65 1 127 1 66 1 4 1 130 1 70 1 8 1 193 2 73 1 10 2 136 2 137 1 80 1 14 1 201 2 85 1 15 3 16 3 206 1 17 1 89 1 142 1 210 1 144 3 145 3 212 1 21 1 216 1 22 2 217 1 23 1 24 1 149 2 150 2 99 2 100 2 32 2 102 1 225 1 227 1 228 1 35 1 40 1 163 1 165 1 107 1 44 1 233 1 167 1 108 1 50 1 110 1 170 2 174 1 56 1 180 1 120 2 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 170 1 14 1 174 1 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
1 3 62 1 184 1 124 3 126 1 186 1 187 2 188 1 66 1 190 2 8 1 192 1 193 2 134 1 73 1 10 1 74 1 136 1 137 1 80 1 138 1 15 3 85 1 206 1 89 1 142 1 93 2 144 2 19 1 210 1 212 1 21 1 23 1 24 1 149 2 151 1 154 1 99 1 226 1 225 1 228 1 229 1 232 1 40 1 164 1 107 1 233 1 167 1 45 1 108 1 110 1 240 1 170 1 243 1 174 1 57 1 56 1 180 1 120 2 
10 1 136 1 62 1 184 1 126 1 14 1 170 1 66 1 15 2 99 1 180 1 210 1 134 1 
1 3 63 1 124 3 186 1 128 1 187 2 188 1 190 2 8 1 192 1 193 2 72 1 134 1 73 1 74 1 137 1 80 1 138 1 15 1 85 1 206 1 17 1 142 1 89 1 93 2 19 1 144 2 212 1 21 1 23 1 24 1 149 2 151 1 154 1 226 1 225 1 228 1 229 1 37 1 40 1 164 1 107 1 167 1 233 1 45 1 108 1 234 1 110 1 240 1 243 1 174 2 57 1 56 1 116 1 120 2 
1 3 62 1 184 1 124 3 126 1 186 1 187 2 188 1 66 1 190 2 8 1 192 1 193 2 134 1 73 1 10 1 74 1 136 1 137 1 80 1 138 1 139 1 85 1 15 3 206 1 89 1 142 1 93 2 144 2 19 1 210 1 212 1 21 1 23 1 24 1 149 2 151 1 154 1 99 1 226 1 225 1 228 1 229 1 232 1 40 1 164 1 107 1 233 1 167 1 45 1 108 1 110 1 240 1 170 1 243 1 174 1 57 1 56 1 180 1 120 2 
1 3 62 1 124 3 186 1 126 1 187 2 188 1 66 1 190 2 8 1 192 1 193 2 72 1 134 1 73 1 74 1 136 1 137 1 80 1 138 1 139 1 200 1 85 1 15 3 206 1 89 1 142 1 93 2 144 2 19 1 210 1 212 1 21 1 94 1 23 1 24 1 149 2 151 1 154 1 99 1 226 1 225 1 228 1 229 1 40 1 164 1 107 1 233 1 167 1 45 1 108 1 110 1 240 1 170 1 243 1 174 1 57 1 56 1 116 1 180 1 120 2 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 2 186 1 126 1 128 1 187 2 66 1 99 1 8 1 225 1 193 2 228 1 73 1 10 1 136 1 37 1 137 1 40 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 17 1 56 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 110 1 170 1 14 1 174 1 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 226 1 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 226 1 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 226 1 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 2 186 1 126 1 187 2 128 1 66 1 99 1 8 1 225 1 193 2 226 1 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 110 1 170 1 14 1 174 1 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 226 1 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
59 1 190 1 93 1 144 1 19 1 
59 1 190 1 240 1 93 1 144 1 
106 1 113 1 190 1 93 1 144 1 19 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
122 1 1 3 63 1 62 1 184 1 186 1 126 2 65 1 127 1 128 1 187 2 66 1 4 1 130 1 190 2 8 1 193 2 73 1 10 1 136 1 137 1 80 1 14 1 201 3 85 1 15 2 206 1 17 1 89 1 142 1 93 2 144 2 19 1 210 1 145 4 212 1 21 1 22 3 23 1 24 1 149 2 150 1 154 1 99 1 100 3 32 3 226 1 225 1 227 1 228 1 37 1 40 1 107 1 44 1 233 1 167 1 108 1 234 1 50 1 110 1 240 1 170 1 174 2 56 1 180 1 120 2 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 40 1 137 1 107 1 108 1 110 1 139 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 221 2 99 1 8 1 226 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 110 1 170 1 14 1 174 1 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 221 2 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 63 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 128 1 66 1 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 37 1 40 1 137 1 107 1 108 1 234 1 110 1 170 1 14 1 174 2 85 1 15 2 56 1 17 1 207 1 89 1 180 1 120 2 210 1 
212 1 21 1 62 1 23 1 184 1 24 1 149 3 186 1 126 1 187 2 66 1 99 1 8 1 225 1 193 3 228 1 73 1 10 1 136 1 137 1 40 1 107 1 108 1 110 1 170 1 174 1 85 1 15 2 56 1 207 1 89 1 180 1 120 2 210 1 
122 1 1 2 22 2 62 1 184 1 148 1 126 2 150 1 127 1 65 1 66 1 4 1 68 1 7 1 32 2 100 2 104 1 227 1 33 1 10 1 161 1 79 1 167 1 44 1 233 1 80 1 50 1 138 1 242 1 201 2 15 2 204 1 244 1 16 3 206 1 117 1 142 1 91 1 145 3 210 1 144 4 
122 1 1 2 22 2 62 1 218 1 184 1 2 1 126 1 150 1 127 1 65 1 188 1 66 1 4 1 68 1 131 1 6 1 32 2 100 2 192 1 104 1 33 1 229 1 10 1 161 1 233 1 167 1 49 1 80 1 50 1 168 1 242 1 201 2 243 1 15 2 244 1 16 3 206 1 117 1 142 1 145 3 210 1 144 4 146 1 
212 3 213 1 21 3 62 1 23 3 184 1 126 1 187 3 66 1 5 3 99 1 8 3 103 1 228 3 73 3 10 1 136 1 40 3 108 3 170 1 174 3 15 2 180 1 120 3 119 1 210 1 
212 1 21 1 62 1 23 1 184 1 126 1 187 1 66 1 5 1 99 1 8 1 103 1 228 1 73 1 10 1 136 1 40 1 108 1 237 1 170 1 174 1 15 2 180 1 120 1 119 1 210 1 
10 1 136 1 62 1 184 1 237 1 126 1 170 1 66 1 15 2 5 1 99 1 180 1 119 1 210 1 
212 3 21 3 62 1 23 3 184 1 24 1 149 2 186 1 126 1 187 4 66 1 5 2 99 1 8 3 103 1 226 1 225 1 193 2 228 3 73 3 10 1 136 1 137 1 40 3 107 1 108 3 110 1 139 1 170 1 171 1 174 3 85 1 15 2 56 1 89 1 180 1 120 4 119 1 210 1 
212 1 59 1 21 1 62 1 23 1 184 1 125 1 126 1 187 1 66 1 5 1 99 1 190 1 8 1 103 1 228 1 73 1 10 1 136 1 40 1 108 1 241 1 170 1 174 1 15 2 207 1 180 1 120 1 119 1 93 1 144 1 210 1 
10 1 212 1 136 1 21 1 40 1 62 1 108 1 23 1 184 1 126 1 170 1 187 1 174 1 66 1 15 2 99 1 5 1 8 1 103 1 180 1 119 1 120 1 228 1 210 1 73 1 
67 1 60 1 15 1 220 1 177 1 
203 1 15 1 155 1 118 1 
11 1 15 1 118 1 
20 2 15 1 220 1 177 1 
12 1 118 1 
201 1 22 1 32 1 100 1 150 1 145 1 
4 1 50 1 142 1 65 1 
201 1 130 1 22 1 32 1 100 1 150 1 145 1 
43 1 2 1 65 1 188 1 243 1 142 1 229 1 
40 1 193 1 149 1 225 1 219 1 171 1 187 2 
40 1 187 1 
207 1 193 1 149 1 225 1 144 1 187 1 
40 1 187 1 
207 1 193 1 149 1 144 1 
200 1 
94 1 
94 1 
10 1 
184 1 
10 1 
20 1 62 1 95 1 64 1 13 1 237 1 126 1 153 1 66 1 15 2 115 1 132 1 33 1 210 1 133 1 
20 2 62 2 95 2 64 2 13 2 239 1 126 2 83 1 153 2 66 2 15 4 115 2 132 2 33 2 210 2 133 2 
20 1 214 1 75 1 62 1 95 1 64 1 13 1 126 1 153 1 66 1 15 2 115 1 132 1 33 1 210 1 133 1 
20 1 62 1 95 1 64 1 13 1 239 1 126 1 153 1 66 1 15 2 115 1 132 1 33 1 210 1 133 1 
20 1 62 1 95 1 64 1 13 1 126 1 153 1 66 1 86 2 15 2 205 1 115 1 207 1 132 1 224 1 193 2 33 1 144 1 210 1 133 1 
172 1 
16 2 207 1 185 1 144 2 
16 2 207 1 208 1 144 2 
20 1 1 2 62 1 95 1 124 2 64 1 126 2 185 1 151 1 153 1 188 1 66 1 192 1 132 1 193 1 33 1 229 1 133 1 74 1 232 1 163 1 164 1 167 1 233 1 45 1 80 1 138 1 13 1 239 1 172 1 243 1 86 1 15 3 205 1 115 1 16 2 206 1 141 1 57 1 208 1 142 1 144 2 210 1 
214 1 66 1 75 1 115 1 210 1 
20 1 122 1 1 2 22 3 62 1 95 1 64 1 150 1 126 3 185 1 127 1 65 1 153 1 66 1 4 1 130 1 32 3 100 3 132 1 224 1 193 1 227 1 33 1 133 1 163 1 167 1 233 1 44 1 50 1 80 1 13 1 55 1 172 1 201 3 86 1 15 2 205 1 115 1 16 2 206 1 208 1 142 1 145 4 144 3 210 1 
20 1 62 1 95 1 64 1 13 1 126 1 153 1 66 1 86 1 15 2 205 1 115 1 207 1 132 1 224 2 193 1 33 1 144 3 210 1 133 1 
20 1 62 1 95 1 64 1 13 1 126 1 83 1 153 1 66 1 15 2 115 1 132 1 33 1 210 1 133 1 
20 2 214 1 75 1 62 2 95 2 64 2 13 2 126 2 83 1 153 2 66 2 15 4 115 2 132 2 33 2 210 2 133 2 
147 1 214 1 175 1 183 1 82 1 143 1 
20 1 147 1 62 1 3 1 126 1 66 1 31 1 132 1 224 1 193 2 33 1 166 1 47 1 82 1 52 2 15 2 175 1 88 1 207 1 210 1 144 2 
20 1 147 1 166 1 47 1 183 1 62 1 52 2 82 1 126 1 66 1 15 2 175 1 207 1 132 1 193 2 224 1 143 1 33 1 144 2 210 1 
20 1 147 1 122 1 1 1 22 2 62 1 183 1 150 1 126 3 127 1 65 1 28 1 66 1 4 1 130 1 32 2 100 2 132 1 193 1 224 1 227 1 33 1 163 1 233 1 44 1 47 1 80 1 50 1 52 1 82 1 54 1 55 1 201 2 112 1 15 2 175 1 142 1 143 1 144 1 145 3 210 1 
147 1 48 1 193 1 52 1 171 1 160 1 
112 1 207 1 
207 1 54 1 
20 1 147 2 62 1 183 1 126 1 28 1 66 1 190 1 132 1 193 1 224 1 33 1 160 1 48 1 82 1 52 1 15 2 175 1 143 1 210 1 144 2 93 1 
20 1 147 2 62 1 183 1 126 1 28 1 66 1 190 1 132 1 193 1 224 1 33 1 160 1 196 1 48 1 53 1 82 1 52 1 171 1 15 2 175 1 143 1 210 1 144 2 93 1 
28 1 
20 1 147 2 1 2 62 1 183 1 124 4 3 1 126 2 151 1 28 1 188 1 66 1 154 1 190 1 192 1 132 1 193 2 224 2 33 1 229 1 160 1 74 1 232 1 163 1 164 1 233 1 48 1 47 1 45 1 80 1 138 1 52 2 82 1 54 1 55 2 243 1 112 1 15 3 175 1 57 1 142 1 143 1 93 1 144 3 210 1 
147 1 214 1 175 1 183 1 82 1 143 1 
122 1 1 2 183 1 62 1 126 3 65 1 127 1 66 1 4 1 130 1 190 1 132 1 193 2 80 1 82 1 201 4 15 2 142 1 143 1 210 1 145 5 144 3 93 1 20 1 147 2 22 4 150 1 28 1 154 1 100 4 32 4 227 1 224 2 33 1 160 1 163 1 44 1 233 1 47 1 48 1 50 1 52 2 54 1 55 2 112 1 175 1 

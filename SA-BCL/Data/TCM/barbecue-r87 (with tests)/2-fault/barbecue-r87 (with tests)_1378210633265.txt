#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 248 1 163 1 147 1 155 1 25 1 
101 1 248 1 163 1 147 1 25 1 
219 1 111 1 18 2 
91 1 132 1 233 1 215 1 197 1 14 3 238 2 147 1 241 1 70 1 136 1 244 1 205 1 115 1 89 1 117 1 128 1 140 1 12 1 
91 1 233 1 197 1 14 3 215 2 238 1 147 1 70 1 125 1 115 1 117 1 89 1 128 1 230 1 140 1 12 1 
233 1 91 1 14 2 197 1 115 1 238 1 117 1 210 1 140 1 70 1 
91 1 233 1 197 1 14 3 215 4 198 1 238 1 147 1 70 1 115 1 117 1 35 1 89 1 128 1 154 1 140 1 12 1 104 1 
91 1 233 1 197 1 14 2 175 1 238 1 79 1 70 1 115 1 117 1 140 1 
197 1 159 1 115 1 140 1 
91 1 233 1 197 1 14 2 238 1 70 2 151 1 115 1 87 1 117 1 140 1 
91 1 233 1 215 1 14 3 238 1 147 2 241 1 70 1 136 1 150 1 244 1 205 1 100 1 115 1 89 1 117 1 128 1 25 1 140 1 12 2 
91 1 233 1 215 1 14 3 238 1 147 2 241 1 70 1 136 1 244 1 205 1 100 1 115 1 89 1 117 1 128 1 25 1 140 1 12 2 
91 1 233 1 197 1 14 2 238 1 147 1 70 1 150 1 100 1 57 1 115 1 117 1 25 1 140 1 38 1 75 1 12 1 
91 1 233 1 197 1 14 2 238 1 147 1 70 1 150 1 100 1 115 1 117 1 25 1 140 1 38 1 75 1 157 1 12 1 
91 1 233 1 197 1 14 2 238 1 147 1 16 1 70 1 73 1 100 1 115 1 117 1 36 1 25 1 140 1 38 1 75 1 12 1 
91 1 233 1 197 1 14 2 238 1 147 1 16 1 70 1 73 1 150 1 100 1 115 1 117 1 36 1 25 1 140 1 38 1 75 1 12 1 
233 1 91 2 14 3 197 1 115 1 225 1 238 2 117 1 140 1 70 1 
233 1 91 2 14 3 197 1 115 1 110 2 140 1 70 1 19 1 203 1 
233 1 91 1 14 2 197 1 45 1 115 1 110 1 140 1 70 2 203 1 
82 1 233 1 91 1 14 2 197 1 115 1 110 1 140 1 70 1 203 1 
233 2 91 3 14 2 197 1 115 1 225 1 110 1 140 1 70 2 203 1 
91 2 233 2 197 1 14 4 215 1 110 2 147 1 164 1 182 1 70 1 203 1 115 1 89 1 140 1 230 1 12 1 
199 1 46 1 168 3 
168 1 
213 1 145 1 2 1 139 1 196 1 
122 3 123 2 124 3 2 4 125 1 5 3 130 1 10 2 131 3 13 2 14 3 19 1 21 6 23 1 24 1 140 1 139 1 25 1 141 1 142 4 143 2 144 2 145 1 28 1 147 2 29 1 148 1 149 2 32 1 34 3 152 3 153 1 40 1 156 1 42 1 160 1 161 1 47 2 49 1 163 2 164 1 165 2 167 2 55 1 58 1 60 1 170 2 62 2 63 1 181 5 68 1 70 3 74 3 186 1 190 1 191 2 193 1 194 2 195 1 196 4 76 1 78 2 203 1 204 1 82 2 84 1 207 2 208 1 89 1 212 1 91 2 213 1 214 1 215 2 93 1 218 3 97 2 222 3 98 3 99 2 100 1 225 1 228 3 103 2 230 1 232 3 106 4 109 4 110 1 242 14 243 2 114 1 245 4 247 5 
62 2 122 3 123 2 124 3 63 1 2 4 68 1 181 5 70 3 125 1 5 3 184 1 74 3 186 1 190 1 191 2 193 1 194 2 130 1 195 1 10 2 131 3 196 4 13 2 14 3 78 2 19 1 203 1 82 2 207 2 21 6 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 218 3 147 2 28 1 29 1 149 2 97 2 222 3 32 1 99 2 98 3 100 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 40 1 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
62 2 122 3 123 2 63 1 124 3 2 4 68 1 181 5 70 3 125 1 5 3 74 3 186 1 190 1 191 2 193 1 194 2 130 1 195 1 10 2 131 3 196 4 13 2 14 3 78 2 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 29 1 149 2 97 2 222 3 32 1 99 2 98 3 100 1 225 1 34 3 152 3 153 1 37 1 230 1 103 2 156 1 40 1 232 3 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
120 1 63 1 2 4 68 1 70 3 125 2 5 4 187 2 190 1 8 3 193 1 196 4 14 3 200 1 80 1 19 1 203 1 82 2 21 4 22 1 138 1 208 1 24 1 89 1 90 1 211 1 25 1 139 1 140 1 212 1 142 2 213 1 91 2 214 1 215 3 93 1 145 1 95 2 146 2 220 2 147 2 29 1 96 4 222 4 100 1 33 4 225 1 153 1 102 2 230 1 231 2 156 1 42 1 106 2 105 1 161 1 160 1 110 1 163 2 242 8 164 1 112 1 53 4 55 1 245 4 114 1 60 1 170 2 251 2 
62 2 122 3 123 2 63 1 124 3 2 4 68 1 181 5 70 3 125 1 5 3 74 3 186 1 190 1 191 2 193 1 194 2 195 1 10 2 131 3 196 4 13 2 14 4 78 2 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 29 1 149 2 97 2 222 3 99 2 98 3 100 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 40 1 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
62 2 122 3 123 2 63 1 124 3 2 4 68 1 181 5 70 3 125 1 5 3 74 3 186 1 190 1 191 2 193 1 194 2 195 1 10 2 131 3 196 4 13 2 14 3 78 2 200 1 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 221 1 29 1 149 2 97 2 222 3 99 2 98 3 100 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 40 1 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
62 2 122 3 123 2 124 3 63 1 2 4 181 5 68 1 70 3 125 1 5 3 74 3 190 1 191 2 193 1 194 2 130 1 195 1 10 2 131 3 196 4 13 2 14 3 78 2 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 29 1 149 2 97 2 222 3 32 1 99 2 98 3 100 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 41 1 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 242 4 164 1 165 2 167 2 55 1 245 4 114 1 247 5 60 1 170 2 
62 3 122 3 123 2 63 1 124 3 2 4 68 1 181 5 70 5 182 1 125 1 5 3 74 3 186 1 190 1 191 3 193 1 194 2 195 1 10 3 131 3 196 4 13 2 14 4 78 2 200 1 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 4 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 29 1 149 2 97 2 222 3 99 2 98 3 100 1 151 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 40 1 42 1 106 4 161 1 160 1 109 4 47 2 110 2 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
62 2 122 3 123 2 63 1 124 3 2 4 68 1 181 5 70 3 125 1 5 3 74 3 186 1 190 1 191 2 193 1 194 2 195 1 10 2 131 3 196 4 13 2 14 3 78 2 200 1 19 1 203 1 82 2 207 2 21 6 22 1 84 1 208 1 24 1 89 1 25 1 139 1 140 1 141 1 212 1 142 4 213 1 91 2 143 2 215 2 214 1 93 1 144 2 145 1 218 3 147 2 28 1 29 1 149 2 97 2 222 3 99 2 98 3 100 1 225 1 34 3 152 3 153 1 230 1 103 2 156 1 232 3 40 1 42 1 106 4 161 1 160 1 109 4 47 2 110 1 163 2 49 1 242 4 164 1 165 2 167 2 55 1 245 4 114 1 58 1 247 5 60 1 170 2 
213 1 214 1 22 1 160 1 145 1 60 1 2 4 139 1 68 1 19 1 212 1 196 4 
202 1 
122 3 123 2 124 3 2 4 125 2 5 3 10 2 130 1 131 3 13 2 14 3 19 1 22 1 21 6 24 1 140 1 139 1 25 1 141 1 142 4 143 2 144 2 145 1 28 1 147 2 29 1 149 2 32 1 151 1 34 3 152 3 153 1 40 1 156 1 42 1 160 1 161 1 47 2 49 1 163 2 164 1 165 2 167 2 55 1 60 1 170 2 62 2 63 1 181 5 68 1 70 4 186 1 74 3 190 1 191 2 193 1 194 2 195 1 196 4 78 2 200 1 203 1 82 2 84 1 207 2 208 1 89 1 212 1 91 2 213 1 214 1 215 3 93 1 218 3 97 2 222 3 98 3 99 2 100 1 225 1 103 2 230 1 232 3 106 4 109 4 110 1 242 4 114 1 245 4 247 5 
121 2 122 5 123 2 124 5 2 4 4 2 125 1 5 3 128 1 10 2 131 5 13 2 14 3 22 1 21 6 24 1 140 1 139 1 25 1 141 3 142 4 143 2 144 2 145 1 28 1 147 2 29 1 30 2 149 2 31 1 34 5 152 5 153 1 39 1 40 1 156 1 42 1 158 2 161 1 160 1 47 2 49 1 163 2 165 2 167 2 55 1 58 1 59 1 60 1 170 2 62 2 63 1 68 1 181 7 70 3 71 1 186 1 74 5 188 1 190 1 191 2 193 1 194 2 195 1 196 4 78 2 200 1 81 1 82 2 84 1 207 2 206 1 86 2 208 1 88 1 89 1 212 1 91 2 213 1 214 1 215 2 93 1 218 5 221 1 97 2 222 3 98 5 99 2 100 1 225 1 103 2 230 1 232 5 234 1 106 4 109 4 238 1 239 1 242 4 114 1 245 4 247 7 117 1 
76 1 85 1 242 1 
137 1 5 1 21 1 147 1 242 1 25 1 
6 1 21 1 242 1 147 1 25 1 38 1 75 1 
174 1 162 1 147 1 242 1 16 1 52 1 5 1 21 1 6 1 25 1 38 1 75 1 
169 1 242 1 
169 1 242 1 
242 1 43 1 
249 1 242 1 
169 1 242 1 
249 1 242 1 
249 1 242 1 
116 1 242 1 180 1 53 1 
133 1 33 1 242 1 
91 1 107 1 14 2 95 1 15 1 238 1 242 2 70 1 223 1 54 1 245 2 114 1 169 1 189 2 118 1 117 1 140 1 
179 1 
91 1 14 2 114 1 107 1 159 1 15 1 95 1 238 1 117 1 118 1 140 1 70 1 223 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 181 2 149 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 166 2 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 0 1 62 1 14 2 238 1 70 1 84 1 114 1 191 1 117 1 140 1 10 1 172 1 
91 1 62 2 14 3 238 2 70 1 84 1 114 1 191 2 117 1 140 1 10 2 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 14 2 114 1 84 1 238 1 191 1 117 1 140 1 10 1 70 1 
91 1 62 2 14 3 238 2 70 1 84 1 114 1 191 2 117 1 140 1 10 2 172 1 
121 2 62 1 122 2 123 2 124 2 181 4 70 2 71 1 125 1 5 3 74 2 188 1 191 1 128 1 194 2 10 1 131 2 13 2 14 3 78 2 81 1 201 2 82 2 206 1 207 2 84 1 21 6 86 2 88 1 208 1 89 1 25 1 140 1 142 4 91 1 215 1 143 2 93 1 217 2 218 2 147 2 30 2 149 2 97 2 222 3 31 1 99 2 98 2 100 1 151 1 34 2 152 2 103 2 39 1 156 1 232 2 234 1 106 4 158 2 161 1 109 4 238 1 47 2 239 1 163 2 242 4 165 2 167 2 114 1 245 4 59 1 247 4 117 1 170 2 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 166 2 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
121 1 62 1 122 1 123 1 124 1 181 2 70 1 125 1 74 1 191 1 128 1 194 1 10 1 131 1 13 1 14 3 78 1 81 1 201 1 82 1 207 1 84 1 21 3 86 1 89 1 140 1 142 2 91 1 215 1 143 1 93 1 217 1 218 1 147 1 30 1 149 1 97 1 222 3 99 1 98 1 34 1 152 1 103 1 156 1 232 1 106 2 158 1 109 2 238 1 47 1 163 1 242 2 165 1 167 1 114 1 245 2 247 2 117 1 170 1 
91 1 62 1 14 2 238 1 70 1 201 1 84 1 114 1 191 1 117 1 140 1 10 1 172 1 
121 1 122 1 123 1 124 1 1 1 181 2 125 1 74 1 194 1 131 2 13 1 14 1 78 1 17 1 81 1 19 1 201 1 82 1 21 3 207 1 86 1 89 1 142 2 215 1 143 1 93 1 217 1 218 1 147 1 30 1 149 1 97 1 222 3 98 1 99 1 226 1 34 1 152 1 103 1 229 1 156 1 232 1 106 2 44 1 158 1 109 2 47 1 163 1 164 1 242 2 165 1 167 1 245 2 247 2 170 1 
121 1 62 1 122 1 123 1 124 1 181 2 70 1 125 1 74 1 191 1 128 1 194 1 10 1 131 1 13 1 14 3 78 1 81 1 201 1 82 1 207 1 84 1 21 3 86 1 89 1 140 1 142 2 91 1 215 1 143 1 93 1 217 1 218 1 147 1 30 1 149 1 97 1 222 3 99 1 98 1 34 1 152 1 103 1 156 1 232 1 106 2 158 1 109 2 238 1 47 1 163 1 242 2 165 1 167 1 114 1 245 2 58 1 247 2 117 1 170 1 
121 1 62 1 122 1 123 1 124 1 181 2 70 1 125 1 74 1 191 1 194 1 10 1 131 1 13 1 14 3 78 1 81 1 19 1 201 1 203 1 82 1 207 1 84 1 21 3 86 1 89 1 140 1 142 2 91 1 215 1 143 1 93 1 217 1 218 1 147 1 30 1 149 1 97 1 222 3 99 1 98 1 34 1 152 1 103 1 156 1 232 1 106 2 158 1 109 2 110 1 47 1 163 1 242 2 164 1 165 1 167 1 114 1 245 2 58 1 247 2 170 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 149 1 181 2 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 2 47 1 238 1 17 1 167 1 207 1 114 1 84 1 245 2 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 97 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 97 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 97 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 97 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 44 1 14 2 78 1 109 2 238 1 47 1 17 1 167 1 207 1 245 2 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 97 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
106 1 217 1 242 1 11 1 142 1 
106 1 13 1 242 1 11 1 142 1 
106 1 246 1 217 1 127 1 242 1 142 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
62 1 174 3 122 1 123 1 124 1 1 1 181 2 70 2 5 3 6 1 74 1 191 1 194 1 10 1 75 1 131 2 13 1 14 2 78 1 16 4 17 1 82 1 207 1 84 1 21 3 208 1 25 1 140 1 142 2 91 1 143 1 217 1 218 1 147 1 149 1 97 1 99 1 98 1 100 1 226 1 34 1 152 1 153 1 36 1 229 1 103 1 38 1 232 1 106 2 44 1 161 1 109 2 47 1 238 1 162 3 163 1 242 2 165 1 167 1 52 3 114 1 245 2 247 2 117 1 170 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 58 1 247 2 117 1 140 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 44 1 14 2 78 1 109 3 238 1 47 1 17 1 166 2 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 166 2 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 229 1 103 1 10 1 232 1 131 2 44 1 14 2 78 1 109 3 238 1 47 1 17 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 181 2 149 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 14 2 78 1 109 3 238 1 47 1 166 2 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 58 1 247 2 117 1 140 1 
91 1 62 1 143 1 122 1 123 1 124 1 218 1 1 1 181 2 149 1 97 1 70 1 99 1 98 1 74 1 34 1 191 1 152 1 103 1 10 1 232 1 131 2 14 2 78 1 109 3 238 1 47 1 167 1 207 1 114 1 84 1 245 3 169 1 247 2 117 1 140 1 
62 2 174 2 122 1 123 1 124 1 181 2 182 1 70 4 5 2 6 1 74 1 191 2 194 1 10 2 75 1 131 1 76 3 14 3 78 1 16 3 82 1 83 1 207 1 84 1 21 2 208 1 25 1 140 1 26 1 91 2 143 1 94 1 218 1 147 1 149 1 99 1 98 1 100 1 151 1 226 1 34 1 152 1 153 1 36 2 103 1 38 1 157 1 232 1 161 1 109 2 238 2 237 1 47 1 162 2 242 3 165 1 167 1 52 2 245 2 114 1 247 2 117 1 170 1 172 1 
91 1 62 1 122 1 143 1 123 1 124 1 218 1 181 2 149 1 70 1 99 1 98 1 74 1 226 1 34 1 191 1 152 1 103 1 10 1 232 1 131 1 44 1 14 2 78 1 109 3 238 1 47 1 167 1 207 1 245 3 114 1 84 1 169 1 247 2 117 1 140 1 172 1 
91 1 174 2 27 1 92 1 215 1 95 1 147 1 177 1 70 2 5 2 100 1 7 1 153 1 36 1 194 1 38 1 75 1 76 3 14 2 161 1 134 1 238 1 162 2 241 1 16 3 242 4 165 1 52 2 135 1 136 1 244 1 82 1 205 1 21 2 114 1 57 1 208 1 117 1 140 1 25 1 170 1 
91 1 121 1 174 2 27 1 92 1 175 1 95 1 147 1 177 1 67 1 30 1 70 1 72 1 5 2 126 1 7 1 36 1 194 1 38 1 75 1 76 3 158 1 14 2 161 1 134 1 79 1 238 1 162 2 16 3 242 4 165 1 52 2 135 1 113 1 82 1 21 2 114 1 86 1 88 1 208 1 117 1 140 1 25 1 170 1 
91 1 62 1 143 1 122 3 123 1 218 3 124 3 28 1 149 1 181 4 97 1 70 1 99 1 98 3 74 3 34 3 191 1 152 3 103 1 195 1 10 1 232 3 131 3 14 2 78 1 109 2 47 1 238 1 18 1 167 1 207 1 245 2 84 1 114 1 58 1 247 4 117 1 140 1 141 2 
91 1 62 1 122 3 218 3 124 3 28 1 4 1 181 3 70 1 98 3 74 3 34 3 191 1 152 3 195 1 10 1 232 3 131 3 14 2 238 1 84 1 114 1 247 3 117 1 140 1 141 3 
91 1 62 1 122 1 218 1 124 1 28 1 181 1 70 1 98 1 74 1 34 1 191 1 152 1 195 1 10 1 232 1 131 1 14 2 238 1 84 1 114 1 247 1 117 1 210 1 140 1 141 1 
91 1 62 1 14 2 238 1 70 1 84 1 114 1 191 1 117 1 210 1 140 1 195 1 10 1 141 1 
91 1 62 1 14 2 122 1 238 1 124 1 218 1 28 1 181 1 70 1 98 1 114 1 84 1 74 1 247 1 191 1 34 1 117 1 152 1 140 1 10 1 195 1 141 1 232 1 131 1 
91 1 62 1 122 1 144 1 218 1 124 1 28 1 181 1 70 1 98 1 74 1 34 1 191 1 152 1 11 1 195 1 10 1 232 1 131 1 106 1 14 2 238 1 242 1 84 1 114 1 169 1 247 1 117 1 140 1 141 1 173 1 142 1 
14 1 56 1 236 1 209 1 
132 1 183 1 14 1 66 1 48 1 
14 1 236 1 51 1 
132 1 183 1 14 1 235 2 
236 1 192 1 
174 1 5 1 6 1 162 1 36 1 16 1 52 1 
174 1 5 1 162 1 36 1 16 1 52 1 
161 1 208 1 147 1 25 1 
158 1 147 1 30 1 224 1 86 1 88 1 25 1 
245 1 207 1 122 1 109 1 9 1 18 1 181 2 
122 1 181 1 
245 1 207 1 169 1 109 1 242 1 181 1 
122 1 181 1 
245 1 169 1 109 1 242 1 
203 1 
110 1 
110 1 
238 1 
117 1 
238 1 
91 1 14 2 108 1 95 1 235 1 64 1 242 1 240 2 50 1 178 1 3 1 70 1 245 2 114 1 33 1 169 1 140 1 129 1 171 1 119 1 
216 1 
76 2 169 1 242 2 69 1 
76 2 169 1 227 1 242 2 
91 1 14 2 108 1 95 1 235 1 64 1 50 1 3 1 70 1 114 1 210 1 140 1 129 1 171 1 119 1 
91 2 14 4 108 2 95 2 235 2 65 1 64 2 50 2 3 2 70 2 114 2 250 1 140 2 129 2 171 2 119 2 
91 1 14 2 108 1 95 1 235 1 65 1 64 1 50 1 3 1 70 1 114 1 140 1 129 1 171 1 119 1 
91 1 14 2 159 1 108 1 95 1 235 1 64 1 50 1 3 1 70 1 185 1 114 1 140 1 129 1 171 1 119 1 
91 1 14 2 108 1 95 1 235 1 64 1 242 3 240 1 50 1 178 1 3 1 70 1 245 1 114 1 33 2 169 1 140 1 129 1 171 1 119 1 
91 1 14 2 108 1 95 1 235 1 64 1 50 1 3 1 70 1 114 1 250 1 140 1 129 1 171 1 119 1 
91 2 14 4 159 1 108 2 95 2 235 2 64 2 50 2 3 2 70 2 185 1 114 2 250 1 140 2 129 2 171 2 119 2 
91 1 121 1 215 1 93 1 216 1 95 1 65 1 64 1 176 1 147 1 178 1 30 1 3 1 70 2 69 1 222 2 125 1 151 1 227 1 128 1 194 1 129 1 156 1 76 2 158 1 14 3 108 1 235 1 240 1 242 2 50 1 165 1 81 1 82 1 245 1 21 2 114 1 86 1 89 1 140 1 170 1 119 1 171 1 
114 1 185 1 159 1 64 1 140 1 
91 1 174 3 216 1 95 1 64 1 147 1 178 1 3 1 70 3 69 1 5 3 6 1 33 1 100 1 151 1 227 1 36 1 153 1 194 1 129 1 38 1 75 1 76 2 14 2 161 1 108 1 235 1 162 3 240 1 16 4 242 3 50 1 165 1 52 3 53 1 82 1 245 1 21 2 114 1 208 1 140 1 25 1 170 1 119 1 171 1 
105 1 91 1 14 2 95 1 235 1 242 2 80 1 50 1 180 1 96 2 112 1 70 1 245 2 114 1 33 1 169 1 187 1 138 1 8 1 140 1 
169 1 251 1 
169 1 231 1 
106 1 105 1 91 1 14 2 95 1 146 1 235 1 220 1 242 2 80 1 50 1 96 1 112 1 70 1 245 1 114 1 33 1 138 1 8 2 102 1 140 1 142 1 
245 1 146 1 8 1 220 1 96 1 18 1 
105 1 159 1 138 1 8 1 80 1 112 1 
91 1 95 1 96 2 180 1 70 1 33 1 187 1 8 1 14 2 77 1 235 1 50 1 80 1 242 2 112 1 20 1 114 1 245 2 169 1 140 1 61 1 
91 1 95 1 146 1 220 1 219 1 96 1 70 1 33 1 8 2 102 1 105 1 106 1 133 1 14 2 235 1 50 1 80 1 242 2 112 1 18 1 114 1 245 1 138 1 140 1 142 1 
102 1 
91 1 121 1 215 1 93 1 95 1 146 1 220 1 147 1 30 1 96 2 70 2 222 4 125 1 33 2 151 1 187 1 8 2 102 1 128 1 231 1 156 1 106 1 105 1 158 1 14 3 77 1 235 1 163 1 242 3 50 1 80 1 81 1 112 1 53 2 82 1 245 2 114 1 21 2 86 1 138 1 89 1 140 1 170 1 142 1 251 1 
105 1 159 1 138 1 8 1 80 1 112 1 
91 1 174 4 95 1 146 1 220 1 147 1 96 2 70 3 5 4 6 1 33 2 100 1 187 1 151 1 8 2 36 1 153 1 102 1 38 1 75 1 231 1 106 1 105 1 14 2 161 1 235 1 162 4 163 1 242 3 16 5 50 1 80 1 52 4 112 1 53 2 82 1 245 2 21 2 114 1 138 1 208 1 140 1 25 1 170 1 142 1 251 1 
91 1 174 2 95 1 147 1 96 1 70 3 5 2 6 1 33 1 100 1 187 1 151 1 8 1 36 1 153 1 102 1 38 1 75 1 231 1 105 1 14 2 161 1 235 1 162 2 242 1 16 3 50 1 80 1 52 2 112 1 53 1 82 1 245 1 21 1 114 1 138 1 208 1 140 1 25 1 170 1 251 1 

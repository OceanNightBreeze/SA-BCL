#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 207 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 15 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 229 69 51 198 124 19 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.IndexOutOfBoundsException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 45 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 3227 | 2 -> 3
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I | OPERATOR | 3938 | < -> >
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
141 1 78 1 222 1 88 1 63 1 118 1 
78 1 222 1 88 1 63 1 118 1 
46 2 39 1 54 1 
192 1 82 2 242 1 231 1 64 2 203 1 58 1 26 1 206 1 237 1 190 1 
193 1 192 1 154 1 174 1 82 3 242 1 231 1 64 1 177 4 203 1 5 1 7 1 222 1 58 1 26 1 206 1 151 1 73 1 
192 1 64 1 231 1 203 1 1 1 58 1 206 1 26 1 31 1 82 2 242 1 
192 2 82 2 242 1 231 3 64 1 203 1 23 1 58 1 26 1 206 2 
193 1 192 1 226 1 82 4 242 1 112 1 231 2 64 2 177 1 203 1 7 1 222 1 58 1 26 1 206 2 73 1 
193 1 153 1 192 1 82 3 242 1 177 1 231 1 64 1 244 1 203 1 7 1 222 1 58 1 26 1 206 1 186 1 73 1 152 1 
193 1 192 1 226 1 82 3 242 1 231 1 64 1 177 2 203 1 7 1 222 1 58 1 26 1 206 1 12 1 73 1 
203 1 58 1 26 1 21 1 
192 2 82 2 242 1 231 1 64 1 203 1 235 1 58 1 26 1 206 1 131 1 
193 2 192 1 153 1 156 1 63 1 82 3 242 1 177 1 231 1 64 1 244 1 218 1 203 1 7 1 222 2 58 1 206 1 186 1 73 1 152 1 
193 2 192 1 153 1 156 1 63 1 82 3 242 1 177 1 231 1 64 1 244 1 203 1 7 1 222 2 58 1 206 1 186 1 73 1 152 1 
193 1 192 1 156 1 63 1 82 2 217 1 242 1 231 1 64 1 203 1 218 1 34 1 40 1 222 1 58 1 26 1 206 1 
193 1 192 1 156 1 63 1 82 2 217 1 242 1 231 1 64 1 203 1 218 1 34 1 145 1 222 1 58 1 26 1 206 1 
193 1 192 1 61 1 156 1 63 1 82 2 217 1 230 1 242 1 231 1 64 1 203 1 34 1 142 1 222 1 58 1 26 1 206 1 
193 1 192 1 61 1 156 1 63 1 82 2 217 1 230 1 242 1 231 1 64 1 218 1 203 1 34 1 142 1 222 1 58 1 26 1 206 1 
192 1 82 3 242 1 231 2 64 2 203 1 23 1 58 1 26 1 206 1 
192 1 82 3 55 1 231 2 203 1 127 2 58 1 26 1 206 1 148 1 
192 2 231 1 203 1 60 1 127 1 58 1 206 1 26 1 82 2 55 1 
192 1 82 2 55 1 231 1 161 1 203 1 127 1 58 1 26 1 206 1 
225 3 66 1 187 1 
225 1 
192 5 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 2 130 1 11 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 19 1 81 3 82 4 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 90 1 27 1 226 1 30 1 155 1 157 2 93 2 229 1 158 4 159 1 96 1 32 1 161 1 97 1 162 3 231 3 163 1 164 1 235 1 234 2 165 3 100 1 236 1 43 1 238 1 239 1 103 2 168 2 169 1 49 2 106 1 51 1 172 2 52 1 107 3 108 2 109 1 241 3 176 2 55 1 110 3 177 2 112 1 111 1 114 2 249 1 58 1 184 1 117 2 118 1 119 12 191 2 
192 3 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 90 1 27 1 226 1 155 1 157 2 93 2 229 1 158 4 159 1 32 1 161 1 97 1 231 2 163 1 234 2 165 2 100 1 236 1 43 1 238 1 239 1 168 2 103 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 249 1 58 1 184 1 117 2 118 1 119 2 191 2 
111 1 169 1 124 1 16 1 249 1 25 1 19 1 148 1 158 4 100 1 3 4 134 1 
192 3 0 1 194 1 122 1 197 1 3 4 198 1 124 1 69 1 127 1 130 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 27 1 226 1 155 1 157 2 93 2 158 4 229 1 159 1 32 1 161 1 97 1 231 2 234 2 165 2 100 1 236 1 43 1 238 1 239 1 168 2 103 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 249 1 58 1 184 1 117 2 118 1 119 2 188 1 191 2 
192 3 122 1 123 1 63 1 3 4 198 1 124 1 68 2 69 1 127 1 9 2 128 2 12 2 73 1 134 1 136 1 16 1 210 2 18 1 17 2 19 1 138 4 82 3 83 1 140 1 23 1 85 2 87 1 222 2 25 1 148 1 223 2 226 1 155 1 156 1 93 2 94 2 158 4 229 1 32 1 161 2 231 2 232 1 36 1 38 2 101 1 166 3 100 1 102 1 238 2 44 1 169 1 105 1 173 4 51 1 53 4 52 1 108 4 55 1 110 4 111 1 177 3 246 1 249 1 182 1 58 1 117 2 118 2 119 8 
192 3 0 1 194 1 122 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 205 1 132 1 12 1 73 1 134 1 135 1 136 1 137 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 2 221 1 222 1 25 1 148 1 27 1 226 1 155 1 157 1 93 2 158 4 229 1 159 1 32 1 231 2 161 1 163 1 234 1 165 2 100 1 236 1 43 1 238 1 239 1 168 1 103 1 169 1 240 1 104 1 106 1 172 2 51 1 52 1 107 2 241 2 108 2 176 1 55 1 243 1 110 3 111 1 177 2 114 1 249 1 183 1 58 1 184 1 117 2 118 1 119 2 191 1 
192 4 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 86 1 220 3 222 1 221 2 25 1 148 1 90 1 27 1 226 1 155 1 157 2 93 2 229 1 158 4 159 1 32 1 161 1 97 1 231 2 163 1 234 2 235 1 165 2 100 1 236 1 43 1 238 1 239 1 168 2 103 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 249 1 58 1 184 1 117 2 118 1 119 2 191 2 
192 3 0 1 194 1 122 1 196 1 3 4 198 1 201 1 64 1 124 1 69 1 7 1 130 1 205 1 132 1 12 1 73 1 134 1 135 1 136 1 137 1 208 1 209 1 211 2 16 1 19 1 81 2 215 1 82 3 140 1 23 1 24 1 144 1 220 2 221 1 222 1 25 1 27 1 226 1 227 1 155 1 157 1 93 2 158 4 229 1 159 1 32 1 231 2 161 1 163 1 234 1 165 2 100 1 236 1 43 1 238 1 239 1 168 1 103 1 169 1 240 1 104 1 106 1 172 2 51 1 52 1 107 2 241 2 108 2 176 1 242 1 243 1 110 3 111 1 177 2 114 1 249 1 59 1 183 1 58 1 184 1 117 2 120 1 119 2 118 1 191 1 
77 1 
124 1 19 1 158 1 100 1 3 1 
192 3 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 90 1 27 1 226 1 155 1 157 2 93 2 158 4 229 1 159 1 32 1 161 1 97 1 231 2 163 1 234 2 165 2 100 1 236 1 43 1 238 1 239 1 168 2 103 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 58 1 184 1 117 2 118 1 119 2 191 2 
192 3 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 207 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 209 1 211 2 16 1 81 2 82 3 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 90 1 27 1 226 1 155 1 157 2 93 2 158 4 229 1 159 1 32 1 161 1 97 1 231 2 163 1 234 2 165 2 100 1 236 1 43 1 238 1 239 1 168 2 103 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 58 1 184 1 117 2 118 1 119 2 191 2 
192 3 0 1 194 1 122 1 197 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 12 1 73 1 134 1 14 1 137 1 136 1 208 1 15 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 3 222 1 221 2 25 1 148 1 27 1 226 1 155 1 157 2 93 2 229 1 158 4 159 1 32 1 161 1 97 1 231 2 163 1 234 2 165 2 100 1 236 1 43 1 238 1 239 1 103 2 168 2 169 1 106 1 172 2 51 1 52 1 107 2 108 2 109 1 241 3 176 2 55 1 110 3 177 2 111 1 114 2 249 1 58 1 184 1 116 1 117 2 118 1 119 2 191 2 
192 3 0 1 194 1 122 1 3 4 198 1 201 1 124 1 69 1 127 1 130 1 205 1 132 1 12 1 73 1 134 1 135 1 136 1 137 1 208 1 209 1 211 2 16 1 19 1 81 2 82 3 83 1 140 1 23 1 144 1 220 2 221 1 222 1 25 1 148 1 27 1 226 1 155 1 157 1 93 2 158 4 229 1 159 1 32 1 231 2 161 1 163 1 234 1 165 2 100 1 236 1 43 1 238 1 239 1 168 1 103 1 169 1 240 1 104 1 106 1 172 2 51 1 52 1 107 2 241 2 108 2 176 1 55 1 243 1 110 3 111 1 177 2 114 1 249 1 183 1 58 1 184 1 117 2 118 1 119 2 191 1 
30 1 119 1 84 1 
212 1 119 1 
219 1 119 1 
63 1 217 1 110 1 34 1 35 1 222 1 119 1 
110 1 34 1 35 1 222 1 63 1 217 1 119 1 
219 1 119 1 
110 1 222 1 63 1 42 1 119 1 
216 1 119 1 
219 1 119 1 
212 1 119 1 
212 1 119 1 
53 1 149 1 150 1 119 1 
138 1 119 1 4 1 
136 1 192 1 210 1 82 2 108 2 55 1 231 1 219 1 57 2 181 1 248 1 127 1 58 1 185 1 74 1 119 2 91 1 
70 1 
192 1 231 1 136 1 248 1 181 1 210 1 127 1 58 1 82 2 21 1 74 1 91 1 55 1 
192 1 64 1 231 1 136 1 137 1 58 1 81 1 165 1 107 1 82 2 242 1 
137 1 136 1 192 1 107 2 81 2 82 3 242 1 113 1 231 1 64 2 58 1 165 2 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
137 1 136 1 192 1 107 2 81 2 82 3 242 1 113 1 231 1 64 2 58 1 165 2 
192 2 0 2 194 2 122 1 196 1 63 1 64 1 8 1 7 1 130 2 12 1 73 1 137 1 136 1 208 2 209 2 211 4 81 1 215 2 82 3 139 1 24 2 144 2 220 4 222 2 221 2 89 1 146 1 27 2 227 2 92 1 156 1 157 2 93 4 95 1 159 2 32 1 231 1 161 2 36 1 235 1 234 2 165 1 236 2 102 1 43 2 238 2 239 2 103 2 168 2 172 2 106 2 107 1 108 4 241 4 175 1 176 2 242 1 243 2 177 1 110 6 114 2 59 2 58 1 184 2 250 1 117 4 120 2 119 4 118 2 189 1 191 2 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 147 2 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 147 2 191 1 
137 1 136 1 192 1 107 1 81 1 82 2 242 1 65 1 113 1 231 1 64 1 58 1 165 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 147 2 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 86 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
192 4 0 1 194 1 63 1 199 1 64 2 75 1 135 1 137 1 136 1 208 1 209 1 211 2 214 1 81 2 82 3 217 1 142 1 144 1 220 2 145 1 222 1 221 1 27 1 30 3 157 1 156 1 159 1 230 2 231 2 161 1 34 1 36 1 235 1 234 1 165 2 236 1 102 1 43 1 238 1 103 1 168 1 50 1 172 1 106 1 52 1 107 2 108 2 241 2 176 1 242 1 112 1 113 1 110 2 114 1 58 1 184 1 119 3 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 165 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
192 1 0 1 194 1 122 1 196 1 64 1 7 1 130 1 12 1 73 1 137 1 136 1 208 1 209 1 211 2 81 1 215 1 82 3 24 1 144 1 220 2 222 1 221 1 27 1 227 1 157 1 93 2 159 1 32 1 161 1 231 1 234 1 165 1 236 1 43 1 238 1 239 1 103 1 168 1 172 1 106 1 107 1 108 2 241 2 176 1 242 1 243 1 177 1 110 3 114 1 59 1 58 1 184 1 117 2 120 1 119 2 118 1 191 1 
137 1 136 1 192 1 107 1 81 1 82 2 242 1 113 1 231 1 64 1 59 1 58 1 165 1 
0 1 194 1 122 1 196 1 205 1 130 1 12 1 132 1 73 1 135 1 208 1 209 1 211 2 215 1 82 1 83 1 24 1 144 1 220 2 222 1 221 1 148 1 27 1 227 1 157 1 93 2 159 1 32 1 161 1 234 1 236 1 43 1 238 1 239 1 103 1 168 1 240 1 172 2 106 1 108 2 241 2 176 1 243 1 110 3 177 1 114 1 59 1 183 1 184 1 117 2 120 1 118 1 119 2 191 1 
192 1 0 1 194 1 122 1 196 1 64 1 7 1 130 1 12 1 73 1 137 1 136 1 208 1 209 1 211 2 81 1 215 1 82 3 24 1 86 1 144 1 220 2 222 1 221 1 27 1 227 1 157 1 93 2 159 1 32 1 161 1 231 1 234 1 165 1 236 1 43 1 238 1 239 1 103 1 168 1 172 1 106 1 107 1 108 2 241 2 176 1 242 1 243 1 177 1 110 3 114 1 59 1 58 1 184 1 117 2 120 1 119 2 118 1 191 1 
192 1 0 1 194 1 122 1 196 1 127 1 130 1 12 1 73 1 137 1 136 1 208 1 209 1 211 2 81 1 215 1 82 3 83 1 24 1 86 1 144 1 220 2 222 1 221 1 148 1 27 1 227 1 157 1 93 2 159 1 32 1 231 1 161 1 234 1 165 1 236 1 43 1 238 1 239 1 103 1 168 1 172 1 106 1 107 1 108 2 241 2 176 1 243 1 55 1 177 1 110 3 114 1 59 1 58 1 184 1 117 2 120 1 119 2 118 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 205 1 165 1 132 1 236 1 43 1 135 1 168 1 103 1 136 1 137 1 208 1 240 1 209 1 211 2 106 1 172 2 81 1 107 1 82 2 241 2 108 2 176 1 242 1 113 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 2 172 1 106 1 81 1 107 1 82 2 241 2 108 2 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
126 1 93 1 117 1 119 1 243 1 
126 1 93 1 117 1 119 1 239 1 
228 1 129 1 93 1 117 1 119 1 243 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
192 2 0 1 194 1 63 1 64 1 130 1 205 1 132 1 135 1 137 1 136 1 208 1 209 1 211 2 81 1 82 2 217 1 142 1 144 1 220 2 221 1 222 1 27 1 156 1 157 1 93 2 159 1 230 1 231 1 161 1 34 1 35 1 36 1 234 1 165 1 236 1 102 1 43 1 238 1 239 1 168 1 103 1 240 1 106 1 172 2 52 1 107 1 108 2 241 2 176 1 242 1 243 1 113 1 110 3 114 1 183 1 58 1 184 1 117 2 119 2 118 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 86 1 144 1 220 2 221 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 130 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 58 1 147 2 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 147 2 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 205 1 165 1 132 1 236 1 43 1 135 1 136 1 137 1 103 1 168 1 208 1 240 1 209 1 211 3 172 2 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 113 1 219 1 114 1 144 1 220 2 221 1 183 1 58 1 191 1 
27 1 192 1 0 1 157 1 159 1 64 1 231 1 234 1 165 1 236 1 43 1 136 1 137 1 103 1 168 1 208 1 209 1 211 3 172 1 106 1 81 1 107 1 82 2 241 2 108 3 176 1 242 1 219 1 114 1 144 1 220 2 221 1 58 1 191 1 
153 1 192 2 30 3 194 1 62 1 156 1 63 1 230 1 33 1 64 1 231 1 161 1 34 1 125 1 36 1 40 1 102 1 238 1 133 1 76 1 136 1 210 1 52 1 82 2 217 1 242 1 177 1 244 1 56 1 110 2 142 1 222 1 58 1 184 1 186 1 119 4 152 1 
192 1 227 1 30 3 1 1 194 1 62 1 31 1 63 1 2 1 230 1 33 1 64 1 231 1 161 1 34 1 125 1 36 1 99 1 102 1 238 1 133 1 76 1 136 1 210 1 79 1 215 1 82 2 217 1 139 1 242 1 56 1 110 2 247 1 142 1 24 1 222 1 58 1 184 1 120 1 119 4 
27 1 192 1 0 1 157 3 197 2 159 1 97 1 231 1 64 1 234 3 130 1 165 1 236 1 43 1 168 3 103 3 14 1 137 1 136 1 208 1 46 1 209 1 211 2 106 1 172 3 107 1 81 1 82 2 108 2 241 4 176 3 242 1 114 3 144 1 86 1 220 4 221 3 58 1 191 3 
192 1 157 3 197 3 97 1 231 1 64 1 234 3 165 1 168 3 103 3 14 1 137 1 136 1 172 3 107 1 81 1 82 2 241 3 176 3 242 1 114 3 180 1 220 3 221 3 58 1 191 3 
192 1 157 1 197 1 97 1 231 1 64 1 234 1 165 1 168 1 103 1 14 1 137 1 136 1 172 1 107 1 81 1 82 2 241 1 176 1 242 1 114 1 220 1 221 1 58 1 190 1 191 1 
192 1 137 1 136 1 107 1 81 1 197 1 82 2 242 1 97 1 231 1 64 1 58 1 165 1 190 1 
192 1 157 1 93 1 197 1 97 1 231 1 64 1 126 1 41 1 234 1 165 1 168 1 103 1 14 1 137 1 136 1 172 1 107 1 81 1 82 2 109 1 241 1 176 1 242 1 219 1 114 1 220 1 221 1 58 1 117 1 119 1 191 1 
192 1 157 1 197 1 97 1 231 1 64 1 234 1 165 1 168 1 103 1 14 1 137 1 136 1 172 1 107 1 81 1 82 2 241 1 176 1 242 1 114 1 220 1 221 1 58 1 191 1 
98 1 82 1 224 1 202 1 
178 1 233 1 80 1 82 1 237 1 
28 1 82 1 224 1 
233 1 82 1 237 1 167 2 
121 1 224 1 
22 1 142 1 204 1 9 1 72 1 230 1 
36 1 222 1 63 1 102 1 
35 1 22 1 142 1 204 1 9 1 72 1 230 1 
227 1 63 1 139 1 160 1 24 1 222 1 120 1 
0 1 67 1 46 1 211 1 220 2 234 1 108 1 
220 1 234 1 
219 1 0 1 211 1 220 1 108 1 119 1 
220 1 234 1 
219 1 211 1 108 1 119 1 
55 1 
127 1 
127 1 
64 1 
242 1 
64 1 
136 1 192 1 13 1 210 1 82 2 200 1 231 1 179 1 6 1 37 1 115 1 10 1 58 1 71 1 167 1 
136 1 192 1 13 1 210 1 82 2 200 1 231 1 179 1 37 1 115 1 10 1 58 1 71 1 190 1 167 1 
136 2 192 2 13 2 210 2 82 4 200 2 245 1 231 2 179 2 6 1 37 2 115 2 10 2 58 2 71 2 167 2 
136 1 192 1 13 1 210 1 171 1 82 2 21 1 200 1 231 1 179 1 37 1 115 1 10 1 58 1 71 1 167 1 
136 1 192 1 13 1 210 1 20 2 138 1 82 2 108 2 200 1 231 1 219 1 179 1 37 1 143 1 115 1 10 1 58 1 71 1 119 1 167 1 
195 1 
219 1 29 1 30 2 119 2 
219 1 30 2 213 1 119 2 
192 2 227 1 29 1 30 2 194 1 122 1 196 1 195 1 200 1 32 1 161 1 231 1 6 1 37 1 7 1 10 1 235 1 71 1 12 1 73 1 238 1 167 1 13 1 136 1 45 1 210 1 20 1 213 1 215 1 82 3 108 1 110 2 177 1 179 1 24 1 143 1 115 1 222 1 58 1 184 1 120 1 119 2 
136 1 115 1 171 1 58 1 21 1 
192 3 194 1 195 1 63 1 200 1 9 1 204 1 10 1 71 1 72 1 136 1 13 1 210 1 213 1 20 1 82 2 138 1 217 1 22 1 142 2 143 1 222 1 30 2 29 1 156 1 230 1 231 1 161 1 34 1 35 1 37 1 36 1 235 1 102 1 238 1 167 1 52 1 53 1 108 1 110 2 179 1 115 1 58 1 184 1 119 3 
136 1 192 1 13 1 210 1 20 1 138 2 82 2 108 1 200 1 231 1 219 1 179 1 37 1 143 1 115 1 10 1 58 1 71 1 119 3 167 1 
13 1 192 1 231 1 136 1 245 1 179 1 37 1 210 1 115 1 10 1 58 1 71 1 82 2 200 1 167 1 
136 2 192 2 13 2 210 2 171 1 82 4 21 1 200 2 245 1 231 2 179 2 37 2 115 2 10 2 58 2 71 2 167 2 
232 1 44 1 87 1 123 1 166 1 21 1 
192 1 231 1 232 1 71 1 166 1 167 1 136 1 170 1 47 1 210 1 48 1 173 2 82 2 138 1 108 2 219 1 87 1 58 1 149 1 223 1 119 2 
192 1 136 1 44 1 210 1 173 2 123 1 138 1 82 2 108 2 231 1 219 1 232 1 87 1 58 1 71 1 149 1 223 1 166 1 119 2 167 1 
192 3 123 1 156 1 63 1 230 1 161 1 231 1 232 1 34 1 35 1 36 1 38 1 204 1 9 1 128 1 235 1 72 1 71 1 166 1 102 1 238 1 167 1 136 1 44 1 210 1 173 1 53 1 52 1 138 1 82 2 217 1 108 1 110 1 22 1 142 2 85 1 87 1 222 1 58 1 223 1 119 1 
46 1 68 1 17 1 173 1 166 1 108 1 
219 1 38 1 
219 1 128 1 
192 1 123 1 93 1 231 1 232 1 68 1 71 1 166 2 167 1 136 1 44 1 210 1 17 1 173 1 82 2 138 1 108 1 85 1 87 1 58 1 117 1 119 2 
192 1 123 1 93 1 4 1 231 1 232 1 68 1 39 1 71 1 166 2 167 1 136 1 44 1 46 1 210 1 17 1 173 1 82 2 138 1 108 1 85 1 87 1 58 1 117 1 119 2 
85 1 
192 1 122 1 123 1 196 1 68 1 128 1 7 1 71 1 12 1 73 1 136 1 210 1 17 1 82 3 138 2 215 1 85 1 24 1 222 1 87 1 223 1 227 1 93 1 94 2 32 1 161 1 231 1 232 1 38 1 166 2 238 1 167 1 44 1 170 1 173 2 53 2 108 2 110 2 177 1 58 1 117 1 118 1 119 3 120 1 
232 1 44 1 87 1 123 1 166 1 21 1 
192 3 123 1 63 1 68 1 128 1 9 2 204 2 71 1 72 2 136 1 210 1 17 1 82 2 138 2 217 1 22 2 142 3 85 1 222 1 87 1 223 1 156 1 93 1 230 1 231 1 161 1 232 1 34 1 35 1 36 1 38 1 235 1 166 2 102 1 238 1 167 1 44 1 173 2 52 1 53 2 108 2 110 2 58 1 117 1 118 1 119 3 

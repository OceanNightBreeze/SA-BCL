#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 11 7 57 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 10332 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 103 1 48 1 178 1 213 1 
227 1 232 1 249 2 
168 1 103 1 218 1 48 1 178 1 213 1 
114 1 154 2 171 2 23 3 173 1 246 2 101 1 160 1 197 2 209 1 237 1 
54 1 114 1 154 1 240 1 188 1 171 2 23 2 173 1 6 1 73 1 246 2 160 1 77 1 197 4 178 1 237 1 
114 1 160 1 150 1 237 1 
94 1 114 1 154 2 187 1 171 1 23 1 173 1 246 1 160 1 197 2 237 1 
53 1 54 1 114 1 154 1 188 1 170 1 171 1 6 1 23 1 173 1 246 1 213 1 8 1 75 1 118 1 77 2 197 3 110 1 178 2 237 1 
54 1 114 1 154 1 188 1 170 1 171 1 6 1 23 1 173 1 246 1 213 1 8 1 75 1 118 1 77 2 197 3 110 1 178 2 237 1 
53 1 114 1 154 1 71 1 171 1 23 1 173 1 246 1 213 1 216 1 160 1 135 1 77 1 197 2 178 1 110 1 237 1 
53 1 114 1 154 1 71 1 171 1 23 1 173 1 133 1 246 1 213 1 160 1 135 1 77 1 197 2 178 1 110 1 237 1 
114 1 154 1 71 1 171 1 23 1 173 1 43 1 246 1 213 1 194 1 196 1 160 1 135 1 77 1 197 2 178 1 110 1 237 1 
53 1 114 1 154 1 71 1 171 1 23 1 173 1 43 1 246 1 213 1 194 1 196 1 160 1 135 1 77 1 197 2 178 1 110 1 237 1 
101 1 114 1 160 1 154 1 197 3 171 2 173 1 23 2 246 1 237 1 
114 1 154 1 23 2 246 1 214 1 175 2 160 1 197 3 236 1 237 1 
175 1 114 1 160 1 2 1 154 2 197 2 23 1 246 1 214 1 237 1 
175 1 114 1 160 1 76 1 154 1 197 2 23 1 246 1 214 1 237 1 
114 1 154 1 188 1 170 1 6 1 23 1 246 1 214 1 8 1 175 1 75 1 160 1 118 1 77 1 197 3 141 1 178 1 237 1 
114 1 154 1 188 2 23 1 211 1 6 1 73 1 246 1 214 1 175 1 160 1 77 1 197 3 141 1 178 1 237 1 
175 1 114 1 68 1 160 1 154 1 197 2 23 1 246 1 214 1 237 1 
114 1 67 1 154 1 188 4 5 1 23 1 6 1 246 1 214 1 175 1 160 1 77 1 32 1 197 3 141 1 178 1 52 1 237 1 
175 1 114 1 160 1 154 1 197 2 23 1 246 1 214 1 36 1 193 1 237 1 
252 1 186 1 106 3 
106 1 
4 2 6 1 132 3 7 1 9 4 11 1 12 1 10 4 137 1 138 2 14 2 15 1 140 1 141 1 145 1 147 1 19 3 153 1 154 5 23 4 28 3 156 1 159 1 30 2 31 1 161 2 33 1 166 3 35 1 38 3 168 2 39 1 42 2 46 1 174 2 175 2 47 1 50 5 178 2 51 3 184 1 56 3 189 14 188 2 197 4 198 1 64 3 63 1 199 3 70 4 72 1 73 1 203 1 204 3 205 6 76 2 206 4 78 2 208 1 79 3 82 3 84 3 210 2 86 1 87 2 211 1 215 1 214 1 213 1 217 3 88 2 89 1 90 1 93 3 94 1 224 4 225 2 97 5 101 1 230 1 102 1 228 2 234 1 107 1 236 1 235 4 110 1 111 1 237 1 240 1 247 2 248 1 119 1 120 2 125 2 
70 4 72 1 6 1 132 3 73 1 203 1 7 1 204 2 205 6 9 4 10 4 11 1 12 1 76 2 206 4 78 2 137 1 14 2 138 2 15 1 79 3 141 1 82 3 145 1 84 3 147 1 19 3 210 2 153 1 154 3 86 1 87 2 211 1 23 2 215 1 213 1 28 3 214 1 88 2 156 1 217 3 89 1 30 2 90 1 161 2 31 1 33 1 93 2 166 3 35 1 168 2 39 1 42 2 225 2 224 4 97 5 174 2 46 1 175 1 101 1 228 2 102 1 230 1 47 1 107 1 235 4 236 1 110 1 178 2 50 5 111 1 51 2 237 1 184 1 56 3 189 4 188 2 248 1 247 2 119 1 197 3 198 1 120 2 64 3 63 1 125 2 199 3 
102 1 31 1 11 1 119 1 70 4 206 4 72 1 236 1 63 1 145 1 156 1 7 1 
0 4 70 4 127 4 72 1 6 1 73 1 7 1 205 4 10 2 11 1 12 1 76 2 206 4 138 2 15 1 79 4 141 1 142 2 143 2 145 1 147 1 20 2 154 3 23 2 211 2 215 1 213 1 214 1 156 1 89 1 31 1 33 1 219 1 35 1 37 1 168 2 40 1 224 2 46 1 98 1 175 1 100 2 101 1 230 1 229 1 102 1 104 2 47 1 235 4 236 1 110 1 109 4 178 2 111 1 237 1 184 1 56 4 185 3 189 8 188 3 190 1 245 2 248 1 116 1 119 1 197 3 198 1 255 2 63 1 
70 4 3 2 72 1 6 1 132 2 73 1 204 2 7 1 205 6 9 4 11 1 12 1 10 4 76 2 206 4 78 2 14 2 138 2 15 1 79 3 141 1 82 2 84 2 145 1 147 1 19 2 210 2 153 1 154 3 87 2 23 2 211 1 213 1 28 2 214 1 217 2 88 2 156 1 89 1 30 2 91 2 161 2 31 1 33 1 93 2 166 2 35 1 168 2 39 1 42 2 224 4 225 2 97 4 174 2 46 1 175 1 101 1 228 2 230 1 102 1 176 2 47 1 108 1 107 1 235 4 236 1 110 1 50 4 178 2 111 1 51 2 237 1 183 2 239 2 184 1 56 3 188 2 189 4 248 1 247 2 117 2 119 1 197 4 198 1 120 2 64 2 63 1 199 4 
70 4 3 2 72 1 6 1 132 2 73 1 204 2 7 1 205 6 9 4 11 1 12 1 10 4 76 2 206 4 78 2 14 2 138 2 15 1 79 3 141 1 82 2 84 2 145 1 147 1 17 1 19 2 210 2 153 1 154 3 87 2 23 2 211 1 215 1 213 1 28 2 214 1 217 2 88 2 156 1 89 1 30 2 91 2 161 2 31 1 33 1 93 2 166 2 35 1 168 2 39 1 42 2 224 4 225 2 97 4 174 2 46 1 175 1 101 1 228 2 230 1 102 1 176 2 47 1 108 1 107 1 235 4 236 1 110 1 50 4 178 2 111 1 51 2 237 1 183 2 239 2 184 1 56 3 188 2 189 4 248 1 247 2 117 2 119 1 197 3 198 1 120 2 64 2 63 1 199 4 
70 4 72 1 6 1 132 3 73 1 7 1 204 2 205 6 9 4 10 4 11 1 12 1 76 2 206 4 78 2 137 1 14 2 138 2 15 1 79 3 141 1 82 3 145 1 84 3 147 1 19 3 210 2 154 3 86 1 87 2 23 2 211 1 213 1 28 3 214 1 88 2 156 1 217 3 89 1 30 2 90 1 161 2 31 1 33 1 93 2 166 3 35 1 168 2 96 1 39 1 42 2 225 2 224 4 97 5 174 2 46 1 175 1 101 1 228 2 102 1 230 1 47 1 235 4 236 1 110 1 178 2 50 5 111 1 51 2 237 1 184 1 56 3 189 4 188 2 248 1 247 2 250 1 119 1 197 3 198 1 120 2 64 3 63 1 65 1 125 2 199 3 
11 1 70 1 206 1 72 1 7 1 
70 4 72 1 6 1 132 3 73 1 203 1 7 1 204 2 205 6 9 4 10 4 11 1 12 1 76 2 206 4 78 2 137 1 14 2 138 2 15 1 79 3 141 1 82 3 145 1 84 3 147 1 19 3 210 2 153 1 154 3 86 1 87 2 211 1 23 2 213 1 28 3 214 1 88 2 156 1 217 3 89 1 30 2 90 1 161 2 31 1 33 1 93 2 166 3 35 1 168 2 39 1 42 2 225 2 224 4 97 5 174 2 46 1 175 1 101 1 228 2 102 1 230 1 47 1 107 1 235 4 236 1 110 1 178 2 50 5 111 1 51 2 237 1 184 1 56 3 189 4 188 2 248 1 247 2 250 1 119 1 197 3 198 1 120 2 64 3 65 1 125 2 199 3 
70 4 72 1 6 1 132 3 73 1 203 1 204 2 205 6 9 4 10 4 11 1 12 1 76 2 206 4 78 2 137 1 14 2 138 2 15 1 79 3 141 1 82 3 145 1 84 3 147 1 19 3 210 2 153 1 154 3 86 1 87 2 211 1 23 2 213 1 28 3 214 1 88 2 156 1 217 3 89 1 30 2 90 1 29 1 161 2 31 1 33 1 93 2 166 3 35 1 168 2 39 1 42 2 225 2 224 4 97 5 174 2 46 1 175 1 101 1 228 2 102 1 230 1 47 1 107 1 235 4 236 1 110 1 178 2 50 5 111 1 51 2 237 1 184 1 56 3 189 4 188 2 248 1 247 2 250 1 119 1 197 3 198 1 120 2 64 3 65 1 125 2 199 3 
3 2 6 1 132 3 7 1 9 4 11 1 12 1 10 6 137 1 138 2 14 2 15 1 141 1 147 1 145 1 19 3 154 6 153 1 23 5 24 1 27 1 28 3 156 1 30 2 31 1 161 2 33 1 166 3 35 1 168 2 39 4 42 2 46 1 174 2 175 4 47 1 176 2 50 5 178 2 51 5 182 1 183 2 184 1 57 1 56 3 188 2 189 6 197 9 198 1 63 1 64 3 65 1 199 5 70 4 72 1 73 1 204 5 205 6 76 2 206 4 78 2 79 3 82 3 84 3 210 2 86 1 87 2 211 1 214 4 213 1 217 3 88 2 89 1 90 1 91 2 93 5 224 6 225 2 97 5 101 1 230 4 102 1 228 2 108 1 107 1 236 1 235 4 110 1 111 1 237 4 239 2 247 2 248 1 250 1 117 2 119 1 253 1 120 2 125 2 
129 1 3 2 6 1 132 2 7 1 9 4 10 4 12 1 11 1 138 2 14 2 15 1 147 1 145 1 17 1 148 2 19 2 154 3 153 1 23 2 28 2 156 1 157 2 30 2 31 1 161 2 33 1 163 1 35 1 166 2 167 1 168 2 39 1 171 1 173 1 42 2 46 1 174 2 47 1 176 2 178 2 50 4 51 2 183 2 184 1 54 1 56 3 189 4 188 2 191 1 192 1 197 3 198 1 63 1 64 2 199 4 70 4 72 1 73 1 204 2 205 6 74 1 76 2 206 4 78 2 79 3 82 2 84 2 85 1 210 2 87 2 211 1 215 1 213 1 88 2 217 2 89 1 91 2 93 2 220 1 223 1 225 2 224 4 97 4 99 2 101 1 102 1 230 1 228 2 107 1 108 1 235 4 110 1 111 1 237 1 239 2 113 2 244 1 247 2 248 1 117 2 119 1 254 2 120 2 
152 1 
70 4 72 1 6 1 132 3 73 1 203 1 7 1 204 2 205 6 9 4 10 4 12 1 11 1 76 2 206 4 78 2 137 1 14 2 138 2 15 1 79 3 141 1 82 3 145 1 84 3 147 1 19 3 210 2 153 1 154 4 86 1 87 2 211 2 23 2 26 1 215 1 213 1 28 3 214 1 88 2 156 1 217 3 89 1 30 2 90 1 161 2 31 1 33 1 93 2 166 3 35 1 94 1 168 2 39 1 42 2 225 2 224 4 97 5 174 2 46 1 175 1 101 1 228 2 102 1 230 1 47 1 107 1 235 4 236 1 110 1 178 2 50 5 111 1 51 2 237 1 184 1 56 3 189 4 188 3 248 1 247 2 250 1 119 1 197 3 198 1 120 2 64 3 63 1 65 1 125 2 199 3 
189 1 234 1 60 1 
115 1 189 1 
13 1 189 1 
13 1 189 1 
13 1 189 1 
56 1 71 1 189 1 41 1 226 1 213 1 205 1 196 1 135 1 231 1 105 1 178 1 
135 1 71 1 189 1 178 1 226 1 213 1 205 1 
56 1 189 1 178 1 213 1 112 1 205 1 
115 1 189 1 
115 1 189 1 
158 1 189 1 
0 1 189 1 242 1 
127 1 189 1 243 1 181 1 
151 1 154 1 115 1 189 2 172 1 23 1 134 2 201 1 214 1 175 1 230 1 104 1 197 2 177 1 235 2 83 1 237 1 
62 1 
151 1 154 1 23 1 201 1 214 1 175 1 230 1 104 1 197 2 177 1 83 1 150 1 237 1 
230 1 154 1 39 1 197 2 171 1 173 1 23 1 93 1 51 1 204 1 237 1 
126 1 39 1 154 1 171 2 23 1 173 1 204 2 230 1 197 3 93 2 51 2 237 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
6 1 132 1 204 1 205 3 9 2 10 2 76 1 78 1 138 1 14 1 79 3 82 1 84 1 148 1 19 1 154 1 210 1 87 1 23 1 211 1 28 1 217 1 88 1 157 1 30 1 161 1 93 1 166 1 168 1 39 1 171 1 173 1 223 1 42 1 225 1 224 2 97 2 46 1 174 1 99 1 230 1 228 1 235 2 178 1 50 2 51 1 183 1 237 1 113 1 54 1 189 2 188 1 248 1 247 1 197 3 254 1 120 1 64 1 199 1 
126 1 39 1 154 1 171 1 23 1 173 1 204 1 230 1 197 2 93 1 51 1 148 1 237 1 
3 1 6 1 132 1 205 3 9 2 10 2 76 1 78 1 138 1 14 1 79 3 141 1 82 1 84 1 148 1 19 1 210 1 87 1 211 1 28 1 88 1 217 1 157 1 30 1 91 1 161 1 166 1 168 1 223 1 42 1 225 1 224 2 97 2 46 1 174 1 99 1 228 1 176 1 236 1 235 2 178 1 50 2 183 1 113 1 239 1 188 1 189 2 248 1 247 1 117 1 197 1 254 1 120 1 64 1 199 2 
6 1 132 1 204 1 205 3 9 2 10 2 76 1 78 1 14 1 138 1 79 3 82 1 84 1 148 1 19 1 154 1 210 1 87 1 23 1 211 1 26 1 28 1 217 1 88 1 157 1 30 1 161 1 93 1 166 1 168 1 39 1 171 1 173 1 223 1 42 1 225 1 224 2 97 2 46 1 174 1 99 1 230 1 228 1 235 2 178 1 50 2 51 1 183 1 237 1 113 1 54 1 189 2 188 1 248 1 247 1 197 3 254 1 120 1 64 1 199 1 
6 1 132 1 204 1 205 3 9 2 10 2 76 1 78 1 14 1 138 1 79 3 141 1 82 1 84 1 148 1 19 1 154 1 210 1 87 1 211 1 23 1 26 1 214 1 28 1 217 1 88 1 157 1 30 1 161 1 93 1 166 1 168 1 39 1 223 1 42 1 225 1 224 2 97 2 46 1 174 1 99 1 175 1 230 1 228 1 236 1 235 2 178 1 50 2 51 1 183 1 237 1 113 1 189 2 188 1 248 1 247 1 197 3 254 1 120 1 64 1 199 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 2 230 1 228 1 176 1 14 1 235 2 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 87 1 23 1 28 1 217 1 88 1 91 1 117 1 161 1 197 2 120 1 64 1 93 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 91 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 2 230 1 228 1 14 1 176 1 235 2 50 2 82 1 84 1 51 1 237 1 19 1 210 1 154 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
10 1 189 1 49 1 224 1 183 1 
10 1 189 1 49 1 224 1 225 1 
10 1 189 1 179 1 224 1 59 1 183 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 71 1 3 1 132 1 204 1 205 3 9 2 10 2 135 1 76 1 78 1 14 1 138 1 15 1 82 1 84 1 147 1 19 1 154 2 210 1 87 1 23 1 28 1 213 1 217 1 88 1 30 1 91 1 161 1 33 1 93 1 166 1 168 1 39 1 171 1 41 3 173 1 42 1 225 1 224 2 43 1 226 1 97 2 174 1 230 1 231 3 228 1 105 3 176 1 235 2 50 2 178 1 110 1 51 1 183 1 237 1 239 1 56 3 189 2 247 1 196 4 117 1 197 2 120 1 64 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 26 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 238 2 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 238 2 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
126 1 39 1 154 1 171 2 23 1 173 1 204 2 230 1 197 3 93 2 51 2 237 1 
129 1 6 1 132 2 204 1 74 1 205 6 9 4 10 4 76 2 78 2 14 2 138 2 15 1 79 3 82 2 84 2 148 2 19 2 85 1 154 2 210 2 87 2 211 1 23 1 213 1 28 2 217 2 88 2 157 2 30 2 161 2 33 1 163 1 93 1 220 1 166 2 167 1 94 1 168 2 39 1 171 1 173 1 223 1 42 2 225 2 224 4 97 4 46 1 174 2 99 2 230 1 228 2 235 4 110 1 178 2 50 4 51 1 183 2 237 1 113 2 54 1 56 3 189 4 188 1 191 1 192 1 244 1 248 1 247 2 197 3 254 2 120 2 64 2 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 39 1 3 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 238 2 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 91 1 117 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 238 2 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
66 1 126 1 39 1 154 1 171 1 23 1 173 1 204 1 230 1 197 2 93 1 51 1 237 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 238 2 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 26 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 228 1 230 1 14 1 235 3 50 2 82 1 84 1 51 1 237 1 239 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 30 1 161 1 197 2 120 1 93 1 64 1 166 1 199 2 
126 1 200 1 71 1 133 1 132 1 204 2 205 2 9 2 135 1 76 1 78 1 14 1 138 1 15 1 82 1 84 1 147 1 19 1 154 4 210 1 87 1 23 2 213 1 28 1 217 1 88 1 161 1 33 1 164 1 93 2 166 1 94 1 39 1 171 2 41 2 173 1 42 1 43 2 226 1 97 2 174 1 230 1 231 2 228 1 233 1 105 2 234 3 176 1 235 2 50 2 178 1 110 1 51 2 237 1 56 2 240 1 189 3 247 1 251 1 196 3 197 3 120 1 64 1 199 1 
126 1 39 1 171 1 173 1 42 1 132 1 97 2 204 1 174 1 9 3 230 1 228 1 14 1 176 1 235 3 50 2 82 1 84 1 51 1 237 1 19 1 154 1 210 1 115 1 87 1 23 1 28 1 217 1 88 1 91 1 161 1 197 2 120 1 93 1 64 1 166 1 199 1 
71 1 170 1 41 2 171 1 173 1 43 1 44 1 8 1 205 2 75 1 231 2 135 1 230 1 104 1 76 1 105 2 78 1 234 3 138 1 15 1 110 1 178 1 147 1 237 1 55 1 56 2 154 2 188 1 189 4 23 1 25 1 155 1 247 1 213 1 216 1 196 3 118 1 33 1 197 2 92 1 165 1 
167 1 169 1 71 1 131 1 41 2 171 1 173 1 43 1 44 1 45 1 205 2 99 1 231 2 135 1 230 1 104 1 76 1 105 2 234 3 78 1 138 1 15 1 178 1 18 1 237 1 113 1 55 1 56 2 154 1 189 4 23 1 25 1 155 1 213 1 247 1 193 1 157 1 196 3 33 1 197 2 254 1 92 1 165 1 36 1 
39 1 171 1 173 1 132 3 97 3 204 1 230 1 137 1 50 3 82 3 84 3 51 1 237 1 19 3 154 1 86 1 21 1 23 1 28 3 217 3 90 3 197 2 64 3 93 1 166 3 199 3 
68 1 39 1 171 1 173 1 132 1 97 1 204 1 230 1 137 1 50 1 82 1 84 1 51 1 237 1 19 1 154 1 86 1 23 1 28 1 217 1 90 1 197 2 64 1 93 1 166 1 199 1 
68 1 154 1 39 1 171 1 23 1 173 1 204 1 90 1 230 1 137 1 197 2 93 1 51 1 237 1 
39 1 171 1 173 1 132 1 97 1 204 1 230 1 137 1 50 1 82 1 84 1 51 1 237 1 19 1 154 1 86 1 23 1 28 1 217 1 90 1 197 2 64 1 93 1 166 1 199 1 
39 1 128 1 171 1 173 1 132 1 224 1 97 1 204 1 10 1 230 1 137 1 49 1 50 1 82 1 84 1 51 1 237 1 19 1 154 1 86 1 115 1 189 1 23 1 28 1 217 1 90 1 197 2 64 1 93 1 166 1 125 1 199 1 
39 1 171 1 173 1 42 1 132 3 97 4 174 1 204 1 9 2 228 1 230 1 137 1 14 1 235 2 50 4 82 3 84 3 51 1 237 1 19 3 210 1 154 1 86 1 87 1 23 1 26 1 28 3 249 1 88 1 217 3 30 1 90 2 161 1 197 2 120 1 64 3 93 1 166 3 199 3 
95 1 197 1 241 1 209 1 144 1 
197 1 80 1 124 1 
95 1 197 1 139 2 209 1 
136 1 197 1 80 1 149 1 
80 1 61 1 
33 1 15 1 178 1 213 1 
196 1 231 1 56 1 105 1 41 1 43 1 
167 1 213 1 157 1 195 1 99 1 254 1 178 1 
196 1 231 1 56 1 105 1 41 1 43 1 226 1 
9 1 115 1 189 1 235 1 42 1 97 1 
82 1 97 1 
9 1 115 1 189 1 235 1 
9 1 235 1 42 1 82 1 146 1 97 2 249 1 
82 1 97 1 
175 1 
214 1 
175 1 
171 1 
171 1 
173 1 
221 1 1 1 69 1 154 1 130 1 22 1 23 1 202 1 230 1 104 1 162 1 197 2 139 1 121 1 150 1 237 1 
221 1 1 1 68 1 69 1 154 1 22 1 23 1 202 1 230 1 104 1 162 1 197 2 139 1 121 1 237 1 
221 2 1 2 69 2 154 2 22 2 23 2 58 1 202 2 230 2 104 2 162 2 197 4 139 2 121 2 123 1 237 2 
0 2 221 1 1 1 69 1 154 1 115 1 189 3 222 1 22 1 23 1 202 1 230 1 104 1 162 1 197 2 139 1 235 1 180 1 121 1 237 1 
221 1 1 1 69 1 154 1 22 1 23 1 58 1 202 1 230 1 104 1 162 1 197 2 139 1 121 1 237 1 
221 2 1 2 69 2 154 2 130 1 22 2 23 2 58 1 202 2 230 2 104 2 162 2 197 4 139 2 121 2 150 1 237 2 
115 1 189 2 234 2 81 1 
115 1 189 2 234 2 34 1 
221 1 1 1 94 1 69 1 222 1 6 1 223 1 202 1 46 1 205 2 99 1 230 1 76 1 104 1 207 1 78 1 234 2 138 1 79 2 139 1 235 1 81 1 178 1 180 1 237 1 113 1 54 1 154 2 189 2 188 1 22 1 23 1 211 1 248 1 247 1 157 1 197 3 162 1 254 1 121 1 122 1 123 1 34 1 
1 1 230 1 130 1 150 1 237 1 
0 1 221 1 1 1 94 1 69 1 127 1 71 1 222 1 41 3 43 1 226 1 202 1 205 2 231 3 230 1 135 1 76 1 104 1 105 3 78 1 234 2 138 1 15 1 139 1 235 1 81 1 110 1 178 1 180 1 147 1 237 1 56 3 154 3 189 3 22 1 23 1 247 1 213 1 196 4 33 1 197 2 162 1 121 1 122 1 34 1 
221 1 1 1 69 1 154 1 22 1 23 1 202 1 230 1 104 1 162 1 197 2 139 1 121 1 123 1 237 1 
0 1 221 1 1 1 69 1 154 1 115 1 189 1 222 1 22 1 23 1 202 1 230 1 104 1 162 1 197 2 139 1 235 2 180 2 121 1 237 1 
122 1 
116 1 185 1 40 1 190 1 150 1 98 1 
0 1 20 1 154 1 185 1 115 1 189 2 190 1 23 1 212 1 243 1 202 1 98 1 230 1 104 1 197 2 139 1 235 2 109 2 16 1 237 1 256 1 
0 1 40 1 224 1 202 1 98 1 100 1 230 1 10 1 104 1 232 1 139 1 235 1 109 1 143 1 237 1 154 1 185 2 189 2 190 1 23 1 242 1 245 1 249 1 116 1 197 2 
245 1 
0 2 94 1 168 1 127 2 40 1 6 1 223 1 224 1 202 1 46 1 98 1 205 2 99 1 100 1 10 1 230 1 104 1 76 1 138 1 79 4 139 1 235 2 142 1 109 2 178 1 143 1 237 1 113 1 20 1 54 1 154 2 185 2 189 3 188 1 190 1 23 1 211 1 212 1 245 1 248 1 157 1 116 1 197 3 254 1 255 1 
116 1 185 1 40 1 190 1 150 1 98 1 
0 2 71 1 127 2 202 1 205 2 135 1 10 1 76 1 138 1 139 1 15 1 142 1 143 1 147 1 20 1 154 3 23 1 213 1 33 1 94 1 168 1 40 1 41 4 43 1 224 1 226 1 98 1 100 1 230 1 231 4 104 1 105 4 235 2 178 1 110 1 109 2 237 1 56 4 185 2 189 3 190 1 245 1 116 1 196 5 197 2 255 1 
0 1 94 1 127 1 71 1 40 1 41 2 43 1 226 1 202 1 205 1 98 1 231 2 230 1 135 1 76 1 104 1 105 2 138 1 15 1 139 1 235 1 142 1 109 1 110 1 178 1 147 1 237 1 20 1 56 2 154 3 185 1 189 1 190 1 23 1 245 1 213 1 196 3 116 1 33 1 197 2 255 1 
100 1 185 1 235 1 109 1 143 1 249 1 
115 1 255 1 
115 1 142 1 
0 1 40 1 224 1 202 1 98 1 100 1 230 1 10 1 104 1 139 1 235 1 109 1 143 1 237 1 154 1 185 2 189 2 190 1 23 1 245 1 116 1 197 2 
0 1 20 1 154 1 185 1 115 1 189 2 40 1 190 1 23 1 243 1 202 1 98 1 116 1 230 1 104 1 197 2 139 1 235 2 109 2 237 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V FAILED junit.framework.ComparisonFailure 251 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String; | CONDITION | 3182 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String; | RETURN | 12237 | return null
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
29 1 34 1 199 1 250 1 142 1 12 1 
29 1 34 1 250 1 142 1 12 1 
162 1 123 2 168 1 
49 1 61 1 2 1 23 1 191 1 98 1 67 1 81 3 142 1 131 1 212 1 194 1 86 1 134 1 133 1 230 1 137 1 124 1 19 2 
49 1 110 1 61 2 2 1 191 1 81 3 83 1 142 1 131 1 212 1 86 1 134 1 133 1 194 1 230 1 19 1 
49 2 2 2 191 1 81 2 206 1 131 3 86 1 134 1 133 1 19 1 
49 1 61 1 2 2 97 1 191 1 81 4 142 1 83 1 131 2 212 1 86 1 134 1 133 1 194 1 230 1 19 2 
134 1 86 1 215 1 191 1 
49 2 2 1 191 1 81 2 131 1 86 1 134 1 133 1 106 1 219 1 19 1 
49 1 61 1 2 1 23 1 191 1 81 3 67 1 142 2 131 1 212 2 194 1 134 1 133 1 29 1 195 1 230 1 137 1 45 1 124 1 19 1 
49 1 61 1 2 1 23 1 191 1 81 3 67 1 142 2 131 1 212 2 194 1 134 1 133 1 29 1 195 1 230 1 137 1 124 1 19 1 
109 1 49 1 2 1 22 1 191 1 81 2 142 1 245 1 131 1 212 1 86 1 134 1 133 1 29 1 195 1 45 1 19 1 
49 1 2 1 22 1 191 1 81 2 9 1 142 1 245 1 131 1 212 1 86 1 134 1 133 1 29 1 195 1 45 1 19 1 
95 1 49 1 2 1 22 1 191 1 78 1 81 2 142 1 245 1 144 1 131 1 212 1 86 1 134 1 133 1 29 1 195 1 19 1 
95 1 49 1 2 1 22 1 191 1 78 1 81 2 142 1 245 1 144 1 131 1 212 1 86 1 134 1 133 1 29 1 195 1 45 1 19 1 
49 1 2 1 191 1 81 3 206 1 131 2 86 1 134 1 133 1 19 2 
49 1 2 1 191 1 128 1 81 3 243 1 131 2 86 1 134 1 149 2 
49 2 131 1 2 1 134 1 86 1 191 1 81 2 243 1 149 1 94 1 
49 1 2 1 191 1 81 2 141 1 243 1 131 1 86 1 134 1 149 1 
49 1 131 1 2 1 134 1 86 1 191 1 25 1 81 2 243 1 149 1 
59 1 49 1 61 4 2 1 191 1 173 1 81 3 243 1 142 1 207 1 131 1 212 1 86 1 134 1 194 1 213 1 220 1 149 1 
49 1 2 1 191 1 81 2 243 1 175 1 131 1 86 1 134 1 231 1 149 1 
38 1 160 1 43 3 
43 1 
1 2 4 1 3 2 125 1 5 1 127 2 7 2 129 14 12 2 131 2 133 1 14 4 135 1 15 1 139 1 16 1 17 1 19 1 21 3 141 2 26 2 142 2 28 2 29 1 30 1 32 2 148 2 151 1 153 2 33 1 155 4 35 1 159 1 39 3 40 1 164 1 165 2 167 4 166 2 48 1 49 3 172 4 174 2 177 4 54 1 56 2 179 1 182 1 183 2 184 1 185 1 61 2 187 2 62 2 191 1 193 2 68 2 69 2 71 1 194 1 195 1 196 1 72 4 74 2 75 1 202 3 203 2 204 1 79 2 81 3 205 6 206 1 83 1 85 1 89 1 88 1 214 2 216 2 218 2 91 1 92 2 223 1 99 1 100 1 226 1 102 1 104 2 230 1 229 1 232 1 233 1 234 1 235 4 236 2 237 1 108 2 107 2 238 2 110 1 240 2 241 2 242 4 244 4 113 1 115 1 246 2 114 2 118 1 117 2 119 2 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 71 1 131 4 194 1 195 1 14 4 196 1 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 4 206 1 83 1 142 2 27 1 28 2 29 1 89 1 88 1 30 1 216 2 218 2 32 2 219 1 91 1 149 2 148 3 151 1 153 3 154 1 96 1 223 1 97 1 33 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 5 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 115 1 114 3 246 3 56 2 117 3 118 1 179 1 119 3 183 3 184 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 14 4 196 1 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 27 1 28 2 29 1 88 1 30 1 89 1 216 2 218 2 32 2 91 1 149 1 148 2 151 1 153 3 154 1 96 1 223 1 33 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 3 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 115 1 114 3 246 2 56 2 117 2 118 1 179 1 119 3 183 3 184 1 
185 1 223 1 128 1 226 1 244 4 71 1 14 4 196 1 88 1 16 1 91 1 17 1 
185 1 61 3 188 2 191 1 5 1 128 1 129 8 12 2 71 1 131 2 194 1 195 1 14 4 196 1 72 2 197 1 15 1 138 2 16 1 139 1 17 1 18 1 201 2 202 4 205 4 141 2 80 1 81 3 206 1 83 1 142 2 143 2 211 1 29 1 146 2 30 1 88 1 89 1 91 1 93 3 149 1 151 1 152 4 223 1 226 1 159 1 102 1 39 4 164 1 104 2 42 4 234 1 235 2 167 4 48 1 49 3 110 2 170 1 50 4 51 2 171 1 173 1 243 1 244 4 115 1 55 2 118 1 179 1 122 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 2 7 2 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 14 4 196 1 135 1 72 4 15 1 16 1 139 1 17 1 202 3 203 2 205 6 81 4 141 2 206 1 83 1 142 2 26 2 28 2 29 1 214 2 30 1 88 1 89 1 216 2 218 2 32 2 91 1 148 2 149 1 153 2 223 1 33 1 155 4 226 1 159 1 102 1 39 3 164 1 104 2 233 1 234 1 165 2 166 2 167 4 235 4 236 2 48 1 107 2 108 2 238 2 49 3 110 1 240 2 241 2 172 4 173 1 242 4 174 2 243 1 244 4 177 4 114 2 246 2 115 1 117 2 118 1 56 2 179 1 119 2 183 2 184 1 
1 2 185 1 187 2 61 2 125 1 191 1 5 1 127 2 7 2 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 14 4 196 1 135 1 72 4 15 1 16 1 139 1 17 1 202 3 203 2 205 6 81 3 141 2 206 1 83 1 142 2 26 2 28 2 29 1 214 2 30 1 88 1 89 1 216 2 218 2 32 2 91 1 148 2 149 1 151 1 153 2 223 1 33 1 155 4 226 1 159 1 102 1 39 3 164 1 104 2 233 1 234 1 165 2 166 2 167 4 235 4 236 2 48 1 107 2 108 2 238 2 49 3 110 1 240 2 241 2 172 4 173 1 242 4 174 2 243 1 244 4 177 4 114 2 246 2 115 1 117 2 118 1 56 2 179 1 119 2 183 2 184 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 14 4 196 1 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 210 1 28 2 29 1 88 1 30 1 89 1 216 2 218 2 32 2 91 1 149 1 148 2 153 3 154 1 96 1 223 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 3 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 114 3 246 2 115 1 178 1 56 2 117 2 118 1 179 1 119 3 183 3 
140 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 14 4 196 1 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 27 1 28 2 29 1 89 1 88 1 30 1 216 2 218 2 32 2 217 1 219 1 91 1 149 1 148 2 153 3 154 1 96 1 223 1 33 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 4 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 115 1 114 3 246 2 178 1 56 2 117 2 118 1 179 1 119 3 183 3 184 1 
185 1 14 1 88 1 16 1 244 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 131 2 194 1 195 1 14 4 196 1 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 27 1 28 2 29 1 88 1 30 1 89 1 216 2 218 2 32 2 91 1 149 1 148 2 153 3 154 1 96 1 223 1 33 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 3 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 114 3 246 2 115 1 178 1 56 2 117 2 118 1 179 1 119 3 183 3 184 1 
1 2 185 1 187 2 61 2 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 131 2 194 1 195 1 14 4 196 1 72 4 15 1 198 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 27 1 28 2 29 1 88 1 30 1 89 1 216 2 218 2 32 2 91 1 149 1 148 2 153 3 154 1 96 1 223 1 33 1 155 4 226 1 159 1 102 1 103 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 3 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 114 3 246 2 115 1 178 1 56 2 117 2 118 1 179 1 119 3 183 3 184 1 
1 2 185 1 187 2 61 2 189 1 191 1 5 1 127 3 128 1 129 4 193 2 69 2 12 2 71 1 131 2 194 1 195 1 196 1 14 4 72 4 15 1 198 1 16 1 139 1 17 1 202 3 203 3 205 6 141 2 81 3 206 1 83 1 142 2 28 2 29 1 89 1 88 1 30 1 216 2 218 2 32 2 91 1 149 1 148 2 153 3 154 1 96 1 223 1 33 1 155 4 226 1 159 1 102 1 39 3 104 2 164 1 233 1 234 1 165 3 167 4 235 4 44 2 166 3 48 1 107 2 108 2 238 2 49 3 110 1 172 5 173 1 242 3 174 2 243 1 244 4 177 5 115 1 114 3 246 2 178 1 56 2 117 2 118 1 179 1 119 3 183 3 184 1 251 1 
232 1 129 1 181 1 
136 1 129 1 
248 1 129 1 
136 1 129 1 
136 1 129 1 
248 1 129 1 
22 1 202 1 78 1 129 1 66 1 205 1 142 1 70 1 245 1 53 1 29 1 47 1 
132 1 202 1 29 1 129 1 205 1 142 1 
29 1 22 1 129 1 205 1 142 1 47 1 245 1 
248 1 129 1 
129 1 84 1 
200 1 76 1 42 1 129 1 
145 1 50 1 129 1 
49 1 188 1 191 1 224 1 129 2 24 1 81 2 243 1 13 1 131 1 87 1 30 1 248 1 167 2 58 2 149 1 20 1 
36 1 
49 1 188 1 191 1 224 1 24 1 81 2 243 1 13 1 131 1 215 1 30 1 149 1 20 1 
49 1 191 1 81 3 131 1 246 2 133 1 117 2 30 1 233 1 46 1 19 2 148 2 
1 2 61 1 187 2 4 1 3 2 191 1 5 1 127 2 129 4 193 2 68 2 69 2 12 2 131 1 194 1 133 1 195 1 72 4 19 1 74 2 75 1 202 3 203 2 204 1 79 2 81 3 141 2 205 6 26 2 142 2 85 1 28 2 29 1 30 1 216 2 218 2 219 1 32 2 92 2 148 1 153 2 100 1 155 4 35 1 102 1 39 3 40 1 104 2 230 1 233 1 234 1 165 2 235 4 167 4 166 2 48 1 107 2 108 2 49 2 238 2 110 1 172 4 242 2 174 2 113 1 177 4 246 1 114 2 54 1 56 2 117 1 119 2 182 1 183 2 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 46 1 19 1 107 1 108 1 49 1 238 1 240 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 41 2 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 61 1 187 1 3 1 191 1 127 1 129 2 193 1 68 1 69 1 12 1 131 1 194 1 133 1 72 2 19 1 74 1 203 1 79 1 141 1 81 3 205 3 26 1 142 1 28 1 30 1 216 1 218 1 32 1 92 1 148 1 153 1 100 1 155 2 102 1 39 3 104 1 230 1 233 1 165 1 235 2 167 2 166 1 48 1 108 1 107 1 49 1 238 1 110 1 172 2 242 1 174 1 177 2 246 1 114 1 56 1 117 1 119 1 183 1 
49 1 3 1 191 1 81 2 131 1 246 1 133 1 117 1 30 1 233 1 46 1 19 1 148 1 
1 1 61 1 187 1 3 1 127 1 128 1 7 1 129 2 193 1 68 1 69 1 12 1 194 1 72 2 74 1 203 1 79 1 205 3 141 1 81 1 142 1 26 1 28 1 214 1 216 1 32 1 218 1 92 1 153 1 100 1 155 2 102 1 39 3 104 1 165 1 235 2 167 2 166 1 236 1 48 1 108 1 107 1 238 1 110 1 240 1 241 1 172 2 173 1 242 2 174 1 177 2 114 1 56 1 119 1 183 1 
1 1 61 1 187 1 3 1 191 1 127 1 129 2 193 1 68 1 69 1 12 1 131 1 194 1 133 1 72 2 19 1 74 1 203 1 79 1 141 1 81 3 205 3 26 1 142 1 28 1 30 1 216 1 218 1 217 1 32 1 92 1 148 1 153 1 100 1 155 2 102 1 39 3 104 1 230 1 233 1 165 1 235 2 167 2 166 1 48 1 107 1 108 1 49 1 238 1 110 1 172 2 242 1 174 1 177 2 246 1 114 1 56 1 117 1 119 1 183 1 
1 1 61 1 187 1 3 1 191 1 127 1 128 1 129 2 193 1 68 1 69 1 12 1 131 1 194 1 72 2 74 1 203 1 79 1 81 3 141 1 205 3 26 1 142 1 28 1 30 1 216 1 218 1 32 1 217 1 92 1 149 1 148 1 153 1 100 1 155 2 102 1 39 3 104 1 233 1 165 1 235 2 167 2 166 1 48 1 107 1 108 1 49 1 238 1 110 1 172 2 173 1 242 1 243 1 174 1 177 2 114 1 246 1 56 1 117 1 119 1 183 1 
1 1 153 1 187 1 191 1 127 1 7 1 155 2 193 1 131 1 133 1 233 1 165 1 167 2 166 1 236 1 46 1 19 1 107 1 108 1 238 1 49 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 214 1 30 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 46 1 19 1 107 1 108 1 49 1 238 1 240 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 2 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 2 46 1 19 1 107 1 108 1 49 1 238 1 240 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
72 1 129 1 235 1 26 1 101 1 
56 1 72 1 129 1 235 1 101 1 
112 1 72 1 129 1 235 1 158 1 26 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 187 1 191 1 127 1 5 1 7 1 129 2 66 3 193 1 69 1 70 3 12 1 131 1 133 1 195 1 72 2 139 1 19 1 22 1 202 3 203 1 78 4 81 2 141 1 205 3 26 1 142 1 144 1 28 1 29 1 214 1 30 1 216 1 218 1 32 1 148 1 153 1 155 2 104 1 233 1 234 1 165 1 235 2 167 2 166 1 236 1 47 1 46 1 107 1 108 1 238 1 49 2 240 1 241 1 172 2 242 2 174 1 245 1 177 2 114 1 246 1 53 3 56 1 117 1 119 1 183 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 217 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 41 2 233 1 165 1 166 1 167 3 46 1 19 1 107 1 108 1 49 1 238 1 240 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 41 2 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 218 1 32 1 183 1 148 1 
49 1 191 1 81 3 131 1 246 2 133 1 117 2 30 1 233 1 46 1 19 2 148 2 
1 1 153 1 187 1 191 1 127 1 155 3 7 1 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 46 1 19 1 107 1 108 1 49 1 238 1 240 1 241 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 216 1 218 1 32 1 183 1 148 1 
49 1 131 1 246 1 133 1 117 1 191 1 30 1 233 1 81 2 148 1 19 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 41 2 233 1 165 1 167 3 166 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
49 1 191 1 81 2 208 1 131 1 246 1 133 1 117 1 30 1 233 1 46 1 19 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 41 2 233 1 165 1 167 3 166 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 217 1 183 1 148 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 167 3 166 1 236 1 19 1 107 1 108 1 49 1 238 1 203 1 172 2 242 2 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 248 1 216 1 218 1 32 1 183 1 148 1 
1 1 187 1 191 1 5 1 127 1 129 3 66 2 193 1 9 1 69 1 70 2 131 2 133 1 195 1 139 1 19 2 22 1 202 2 203 1 78 3 81 3 141 1 205 2 142 1 144 2 28 1 29 1 30 1 214 1 90 1 31 1 218 1 32 1 219 1 148 2 153 1 222 1 97 1 155 2 163 1 104 1 232 3 233 1 234 1 165 1 166 1 167 2 47 1 46 1 107 1 108 1 49 4 238 1 172 2 242 1 174 1 245 1 177 2 114 1 246 2 53 2 117 2 119 1 183 1 
1 1 153 1 187 1 191 1 127 1 155 3 193 1 131 1 133 1 233 1 165 1 166 1 167 3 46 1 19 1 107 1 108 1 49 1 238 1 240 1 203 1 172 2 242 1 81 2 177 2 114 1 246 1 28 1 117 1 119 1 30 1 214 1 248 1 218 1 32 1 183 1 148 1 
0 1 60 1 63 1 65 1 126 1 188 1 191 1 5 1 66 2 129 4 68 1 8 1 10 1 70 2 69 1 131 1 133 1 104 1 231 1 232 3 234 1 19 1 74 1 49 1 202 2 22 1 111 1 78 3 79 1 205 2 81 2 141 1 174 1 142 1 175 1 209 1 245 1 144 1 53 2 29 1 30 1 180 1 182 1 92 1 
0 1 61 1 63 1 65 1 126 1 188 1 191 1 5 1 66 2 129 4 67 1 8 1 70 2 69 1 131 1 133 1 195 1 104 1 137 1 232 3 234 1 139 1 19 1 109 1 49 2 202 2 22 1 111 1 23 1 78 3 205 2 81 2 141 1 174 1 142 1 245 1 144 1 53 2 29 1 30 1 124 1 
153 1 154 1 96 1 191 1 127 1 131 1 133 1 233 1 165 1 166 1 198 1 19 1 49 1 172 1 203 1 242 1 81 2 177 1 114 1 246 1 117 1 119 1 30 1 183 1 148 1 
1 1 153 3 187 1 154 1 96 1 191 1 127 3 155 2 193 1 131 1 133 1 233 1 165 3 167 2 166 3 198 2 19 1 107 1 108 1 238 1 49 1 172 4 203 3 242 3 81 2 177 4 114 3 246 1 28 1 117 1 119 3 30 1 216 1 218 1 32 1 217 1 123 1 183 3 148 1 
153 3 154 1 96 1 191 1 127 3 192 1 131 1 133 1 233 1 165 3 166 3 198 3 19 1 49 1 172 3 203 3 242 3 81 2 177 3 114 3 246 1 117 1 119 3 30 1 183 3 148 1 
153 1 154 1 96 1 191 1 127 1 131 1 133 1 233 1 165 1 166 1 198 1 19 1 49 1 172 1 203 1 25 1 242 1 81 2 177 1 114 1 246 1 117 1 119 1 30 1 183 1 148 1 
49 1 154 1 191 1 25 1 81 2 131 1 246 1 133 1 117 1 30 1 233 1 198 1 19 1 148 1 
153 1 154 1 96 1 191 1 127 1 129 1 101 1 131 1 133 1 72 1 233 1 165 1 235 1 44 1 166 1 198 1 19 1 49 1 172 1 203 1 242 1 81 2 177 1 114 1 246 1 117 1 119 1 30 1 248 1 183 1 148 1 150 1 
161 1 247 1 81 1 
239 2 98 1 81 1 157 1 
186 1 247 1 147 1 81 1 
116 1 64 1 98 1 81 1 157 1 
247 1 156 1 
29 1 182 1 68 1 142 1 92 1 11 1 74 1 
144 1 53 1 202 1 78 1 66 1 70 1 
29 1 5 1 234 1 142 1 
144 1 53 1 202 1 78 1 66 1 47 1 70 1 
172 1 166 1 
1 1 172 1 248 1 155 1 129 1 167 1 
248 1 155 1 129 1 167 1 
172 1 121 1 166 1 
172 1 166 1 
149 1 
243 1 
149 1 
19 1 
19 1 
133 1 
49 1 50 2 52 1 188 1 190 1 191 1 6 1 129 3 81 2 82 1 243 1 227 1 131 1 30 1 120 1 248 1 105 1 167 1 73 1 149 1 
49 1 52 1 190 1 188 1 191 1 81 2 82 1 243 1 227 1 37 1 131 1 30 1 120 1 73 1 149 1 
221 1 49 2 52 2 190 2 188 2 191 2 81 4 82 2 243 2 227 2 37 1 131 2 215 1 30 2 120 2 73 2 149 2 
49 1 52 1 188 1 190 1 191 1 25 1 81 2 82 1 243 1 227 1 131 1 30 1 120 1 73 1 149 1 
49 2 52 2 190 2 188 2 191 2 81 4 82 2 243 2 227 2 37 1 228 1 131 2 30 2 120 2 73 2 149 2 
49 1 52 1 188 1 190 1 191 1 81 2 82 1 243 1 227 1 228 1 131 1 30 1 120 1 73 1 149 1 
221 1 49 1 52 1 190 1 188 1 191 1 81 2 82 1 243 1 227 1 131 1 215 1 30 1 120 1 73 1 149 1 
49 1 50 1 52 1 188 1 190 1 191 1 6 1 129 1 81 2 82 1 243 1 227 1 131 1 30 1 120 1 248 1 105 2 167 2 73 1 149 1 
130 1 
248 1 232 2 129 2 176 1 
77 1 248 1 232 2 129 2 
61 1 188 1 190 1 191 1 6 1 225 1 100 1 129 2 68 1 227 1 69 1 102 1 228 1 130 1 39 2 131 1 194 1 104 1 105 1 232 2 167 1 48 1 73 1 74 1 49 2 110 1 77 1 52 1 79 1 173 1 205 2 141 1 81 3 174 1 243 1 82 1 142 1 176 1 120 1 30 1 219 1 92 1 149 1 
221 1 215 1 191 1 30 1 82 1 
190 1 188 1 191 1 6 1 5 1 66 3 129 3 227 1 70 3 69 1 130 1 131 1 195 1 104 1 105 1 42 1 232 2 234 1 167 1 139 1 47 1 73 1 49 3 77 1 50 1 202 3 22 1 52 1 78 4 205 2 141 1 81 2 174 1 243 1 82 1 142 1 245 1 176 1 144 1 53 3 29 1 120 1 30 1 219 1 149 1 
152 1 49 1 201 1 50 1 188 1 191 1 129 2 80 1 81 2 243 1 131 1 145 1 55 1 30 1 72 1 197 1 122 1 138 1 235 1 167 1 123 1 168 1 18 1 93 2 149 1 
201 1 
152 2 61 1 188 1 191 1 100 1 129 3 68 1 102 1 12 1 39 4 131 1 194 1 104 1 72 1 42 2 197 1 138 1 235 1 167 2 48 1 18 1 74 1 49 2 110 1 201 1 50 2 51 1 79 1 173 1 81 3 80 1 141 1 205 2 243 1 142 1 143 1 55 1 146 1 30 1 122 1 57 1 219 1 92 1 149 1 93 2 
215 1 122 1 197 1 80 1 93 1 18 1 
152 2 188 1 191 1 5 1 129 3 66 4 70 4 12 1 131 1 195 1 104 1 72 1 42 2 234 1 197 1 138 1 235 1 167 2 139 1 47 1 18 1 49 3 201 1 50 2 202 4 22 1 51 1 78 5 205 2 141 1 81 2 80 1 243 1 142 1 245 1 143 1 144 1 53 4 55 1 29 1 146 1 30 1 122 1 219 1 149 1 93 2 
215 1 122 1 197 1 80 1 93 1 18 1 
152 2 188 1 191 1 129 2 131 1 167 2 169 1 18 1 49 1 200 1 50 1 51 1 81 2 243 1 30 1 248 1 122 1 57 1 249 1 149 1 93 1 
152 2 49 1 200 1 50 1 51 1 188 1 191 1 129 2 80 1 81 2 243 1 131 1 30 1 248 1 197 1 122 1 167 2 18 1 93 1 149 1 
152 1 188 1 191 1 5 1 129 1 66 2 70 2 131 1 195 1 104 1 42 1 234 1 197 1 167 1 139 1 47 1 18 1 49 3 201 1 50 1 202 2 22 1 51 1 78 3 205 1 141 1 81 2 80 1 243 1 142 1 245 1 143 1 144 1 53 2 29 1 146 1 30 1 122 1 219 1 149 1 93 1 
152 1 55 1 138 1 167 1 123 1 93 1 
248 1 143 1 
146 1 248 1 
152 1 188 1 191 1 129 2 131 1 72 1 197 1 138 1 167 1 235 1 18 1 49 1 201 1 50 1 81 2 80 1 243 1 55 1 30 1 122 1 149 1 93 2 

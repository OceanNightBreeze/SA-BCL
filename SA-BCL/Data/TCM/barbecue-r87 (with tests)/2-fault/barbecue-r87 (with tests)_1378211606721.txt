#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7029 | if (x) -> if (!x)
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module; | RETURN | 3094 | return null
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 97 1 61 1 13 1 116 1 101 1 
240 1 97 1 13 1 116 1 101 1 
154 1 65 1 148 2 
29 1 198 1 47 1 168 1 138 1 4 1 52 1 239 1 199 1 126 1 18 1 97 1 201 1 60 1 99 1 163 2 147 1 195 3 27 1 
198 1 47 1 168 1 138 1 52 2 4 1 126 1 82 1 97 1 60 1 99 1 145 1 163 1 147 1 195 3 27 1 
198 3 47 2 168 1 126 2 60 1 9 1 99 1 163 1 147 1 195 2 
198 2 47 1 168 1 138 1 52 1 4 1 126 2 97 1 82 1 60 1 99 1 43 1 163 2 147 1 195 4 27 1 
60 1 123 1 47 1 198 1 168 1 99 1 126 1 163 1 195 2 147 1 
46 1 198 1 47 1 168 1 89 1 138 1 52 4 4 1 126 1 97 1 60 1 143 1 99 1 203 1 163 1 147 1 195 3 27 1 
44 1 198 1 47 1 168 1 126 1 60 1 186 1 99 1 163 1 147 1 195 2 
60 1 168 1 124 1 147 1 
70 1 198 1 47 2 168 1 126 1 60 1 23 1 99 1 163 1 147 1 195 2 
198 1 47 1 13 1 168 1 138 2 4 1 52 1 239 1 126 1 199 1 18 1 97 2 201 1 60 1 187 1 133 1 99 1 163 1 195 3 27 1 
198 1 47 1 13 1 168 1 138 2 4 1 52 1 239 1 126 1 199 1 18 1 97 2 201 1 60 1 187 1 99 1 163 1 195 3 27 1 
198 1 47 1 13 1 168 1 138 1 126 1 200 1 97 1 60 1 187 1 133 1 99 1 25 1 163 1 26 1 147 1 195 2 
164 1 198 1 47 1 13 1 168 1 138 1 126 1 200 1 97 1 60 1 187 1 133 1 99 1 25 1 163 1 147 1 195 2 
198 1 47 1 13 1 168 1 138 1 126 1 55 1 57 1 200 1 97 1 60 1 216 1 187 1 99 1 25 1 163 1 147 1 195 2 
198 1 47 1 13 1 168 1 138 1 126 1 55 1 57 1 200 1 97 1 60 1 216 1 187 1 133 1 99 1 25 1 163 1 147 1 195 2 
198 2 47 1 168 1 126 1 60 1 9 1 99 1 163 2 147 1 195 3 
198 2 47 1 49 1 168 1 17 1 126 1 75 2 60 1 147 1 195 3 
120 1 60 1 47 2 198 1 168 1 17 1 126 1 75 1 195 2 147 1 
198 1 47 1 168 1 17 1 126 1 75 1 60 1 146 1 147 1 195 2 
223 1 91 3 194 1 
91 1 
137 2 73 4 198 4 4 1 141 1 5 1 75 2 76 1 79 1 82 1 81 1 202 14 9 1 146 2 145 1 206 1 87 1 209 4 149 3 88 1 13 1 14 2 90 1 15 2 150 1 16 2 211 1 17 1 212 1 152 3 153 1 95 2 97 2 98 3 155 2 21 1 156 2 22 1 217 1 23 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 226 1 37 2 38 1 111 2 39 1 173 4 229 2 115 1 230 1 40 1 231 2 176 6 117 2 43 1 118 2 234 4 178 2 235 3 236 2 47 5 48 2 49 1 50 2 237 4 181 1 238 1 52 2 59 2 127 3 60 1 187 1 188 1 242 2 191 1 66 4 196 3 195 4 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 226 1 37 2 38 1 111 2 173 4 39 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 2 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 226 1 37 2 38 1 111 2 173 4 39 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 3 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 4 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 226 1 37 2 38 1 111 2 173 4 39 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 54 1 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 174 1 113 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
81 1 173 1 237 1 141 1 206 1 
137 2 73 4 198 2 4 1 141 1 5 1 76 1 75 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 174 1 113 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 76 1 75 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 174 1 113 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 51 1 237 4 181 1 238 1 52 2 127 2 59 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 1 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 37 2 38 1 111 2 173 4 39 1 174 1 113 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 3 48 2 49 1 50 2 237 4 181 1 238 1 52 2 59 2 127 2 131 1 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
137 2 1 2 4 1 141 1 5 1 9 1 10 2 146 2 145 1 11 1 149 3 13 1 14 2 150 1 15 2 16 2 152 2 153 1 155 2 22 1 156 2 21 1 161 2 163 1 27 1 28 2 31 1 32 1 169 2 36 1 38 1 37 2 39 1 173 4 40 1 176 6 41 1 178 2 47 3 50 2 48 2 181 1 52 2 53 1 54 1 58 1 59 2 60 1 188 1 187 1 191 1 66 4 192 1 193 1 197 2 195 3 196 2 73 4 198 2 76 1 79 1 81 1 82 1 202 4 206 1 207 1 87 1 209 4 88 1 210 1 211 1 95 2 97 2 99 1 100 2 219 1 221 2 101 2 224 1 225 4 106 4 226 1 227 2 111 2 229 2 114 2 231 2 117 2 234 4 235 3 236 2 237 4 238 1 127 2 242 2 244 2 
80 1 
137 2 73 4 198 2 4 1 141 1 5 1 75 1 76 1 79 1 82 1 81 1 202 4 9 1 145 2 146 2 206 1 87 1 209 4 149 3 88 1 13 1 14 2 15 2 150 1 16 2 211 1 17 1 152 2 153 1 95 2 97 2 155 2 21 1 156 2 22 1 217 1 23 1 161 2 100 2 219 1 221 2 101 2 28 2 224 1 225 4 32 1 169 2 106 4 226 1 37 2 38 1 111 2 173 4 39 1 174 1 113 1 229 2 40 1 231 2 176 6 117 2 234 4 178 2 235 3 236 2 47 4 48 2 49 1 50 2 237 4 181 1 238 1 52 3 59 2 127 2 60 1 187 1 188 1 242 2 191 1 66 4 196 2 195 3 197 2 
6 1 202 1 212 1 
202 1 222 1 
202 1 222 1 
97 1 235 1 84 1 202 1 13 1 176 1 
235 1 13 1 74 1 55 1 200 1 185 1 97 1 202 1 215 1 176 1 25 1 205 1 
202 1 162 1 
97 1 215 1 202 1 13 1 176 1 25 1 200 1 
132 1 202 1 
202 1 222 1 
132 1 202 1 
132 1 202 1 
86 1 20 1 202 1 56 1 
202 1 7 1 144 1 
71 1 198 1 47 1 88 1 125 1 17 1 106 2 75 1 214 1 60 1 202 2 189 2 103 1 68 1 222 1 195 2 119 1 
78 1 
71 1 60 1 47 1 198 1 88 1 124 1 125 1 17 1 68 1 103 1 75 1 195 2 214 1 
60 1 47 1 198 1 88 1 99 1 150 1 163 1 152 1 196 1 195 2 127 1 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 165 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
198 1 47 1 88 1 150 1 152 1 127 1 172 1 60 1 99 1 102 1 163 1 195 2 196 1 
137 1 73 2 165 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 128 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 170 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 2 74 2 200 1 76 1 202 3 146 1 205 2 209 2 88 1 13 1 14 1 150 1 15 1 16 1 212 3 152 2 153 1 95 1 97 1 215 1 216 2 155 1 156 1 23 1 159 1 161 1 99 1 100 1 219 1 220 1 221 1 25 1 163 2 164 1 28 1 105 1 225 2 169 1 106 2 172 1 37 1 112 1 111 1 231 1 176 2 117 1 43 1 178 1 235 2 47 4 236 1 48 1 50 1 55 3 127 2 59 1 185 2 60 1 187 1 136 1 195 3 196 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 172 1 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
172 1 60 1 47 1 198 1 88 1 99 1 150 1 163 2 152 2 196 2 195 3 127 2 
137 2 1 2 73 4 198 1 4 1 202 4 10 2 145 1 146 2 207 1 11 1 209 4 88 1 149 3 13 1 210 1 14 2 150 1 15 2 16 2 152 1 153 1 95 2 97 2 155 2 21 1 156 2 23 1 161 2 99 1 100 2 219 1 221 2 163 1 101 2 27 1 28 2 31 1 225 4 169 2 106 4 36 1 227 2 37 2 39 1 111 2 229 2 114 2 41 1 176 6 231 2 117 2 234 4 178 2 235 3 47 2 236 2 50 2 48 2 52 1 53 1 58 1 127 1 59 2 60 1 187 1 242 2 66 4 193 1 192 1 197 2 195 3 196 1 244 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 165 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 1 1 73 2 198 1 4 1 202 2 10 1 146 1 145 1 11 1 209 2 88 1 149 3 14 1 150 1 15 1 16 1 152 1 95 1 97 1 155 1 21 1 156 1 99 1 161 1 100 1 221 1 163 1 101 1 27 1 28 1 225 2 169 1 106 2 227 1 37 1 39 1 111 1 229 1 114 1 176 3 231 1 117 1 234 2 178 1 47 1 236 1 50 1 48 1 52 1 127 1 59 1 60 1 242 1 66 2 197 1 195 3 196 1 244 1 
198 1 47 1 88 1 150 1 152 1 127 1 172 1 60 1 99 1 163 1 195 2 196 1 244 1 
137 1 1 1 73 2 4 1 202 2 10 1 146 1 145 1 11 1 209 2 149 3 14 1 15 1 16 1 95 1 97 1 155 1 21 1 156 1 217 1 159 1 160 1 161 1 100 1 221 1 101 1 28 1 30 1 225 2 169 1 106 2 170 1 227 1 37 1 39 1 111 1 229 1 114 1 176 3 231 1 117 1 234 2 178 1 236 2 49 1 50 1 48 1 52 1 59 1 242 1 64 1 66 2 197 1 195 1 244 1 
137 1 1 1 73 2 198 1 4 1 202 2 10 1 146 1 145 1 11 1 209 2 88 1 149 3 14 1 150 1 15 1 16 1 152 1 95 1 97 1 155 1 21 1 156 1 161 1 99 1 100 1 221 1 163 1 101 1 27 1 28 1 225 2 169 1 106 2 227 1 37 1 39 1 111 1 229 1 114 1 176 3 231 1 117 1 234 2 178 1 47 1 236 1 50 1 48 1 52 1 127 1 59 1 128 1 60 1 242 1 66 2 197 1 195 3 196 1 244 1 
137 1 1 1 73 2 198 1 4 1 75 1 202 2 10 1 145 1 146 1 11 1 209 2 88 1 149 3 14 1 150 1 15 1 16 1 17 1 152 1 95 1 97 1 155 1 21 1 217 1 156 1 161 1 100 1 221 1 101 1 28 1 225 2 169 1 106 2 227 1 37 1 111 1 39 1 229 1 114 1 176 3 231 1 117 1 234 2 178 1 47 1 236 1 50 1 49 1 48 1 52 1 127 1 59 1 128 1 60 1 242 1 66 2 197 1 195 3 196 1 244 1 
137 1 73 2 198 1 30 1 225 2 169 1 106 2 170 1 172 1 37 1 111 1 231 1 117 1 178 1 47 1 236 2 209 2 88 1 48 1 14 1 15 1 150 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 64 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 2 172 1 37 1 111 1 231 1 117 1 178 1 209 2 47 1 236 1 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
184 1 234 1 202 1 229 1 66 1 
184 1 234 1 202 1 66 1 197 1 
234 1 83 1 202 1 229 1 175 1 66 1 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 74 3 76 1 200 1 202 2 146 1 205 3 209 2 88 1 13 1 14 1 15 1 150 1 16 1 152 1 153 1 95 1 97 1 215 1 216 1 155 1 156 1 160 1 159 1 161 1 99 1 100 1 219 1 221 1 25 1 163 1 101 1 28 1 30 1 225 2 169 1 106 2 170 1 172 1 37 1 111 1 229 1 176 3 231 1 117 1 234 2 178 1 235 3 47 2 236 2 50 1 48 1 55 4 127 1 59 1 185 3 60 1 187 1 242 1 64 1 66 2 197 1 195 2 196 1 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 128 1 95 1 60 1 155 1 242 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 165 2 198 1 30 1 225 2 169 1 106 3 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 1 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 165 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
137 1 73 2 198 1 225 2 169 1 106 3 37 1 111 1 231 1 117 1 178 1 47 1 236 1 209 3 88 1 48 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 156 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
198 1 47 1 88 1 150 1 152 2 127 2 172 1 60 1 99 1 163 2 195 3 196 2 
137 1 73 2 198 1 30 1 225 2 169 1 106 3 170 1 172 1 37 1 111 1 231 1 117 1 178 1 209 3 47 1 236 2 48 1 88 1 14 1 150 1 15 1 16 1 152 1 127 1 95 1 60 1 155 1 242 1 156 1 64 1 160 1 159 1 161 1 99 1 100 1 221 1 163 1 222 1 196 1 195 2 
69 1 28 1 1 1 3 1 198 1 167 1 74 2 200 1 227 1 202 4 114 1 10 1 176 2 232 1 42 1 205 2 146 1 44 1 208 1 235 2 47 1 88 1 50 1 13 1 182 1 212 3 151 1 55 3 214 1 153 1 59 1 185 2 97 1 60 1 186 1 216 1 134 1 135 1 99 1 219 1 192 1 25 1 163 1 195 2 
28 1 198 1 167 1 74 2 199 1 200 1 76 1 201 1 202 4 176 2 232 1 42 1 205 2 146 1 208 1 235 2 47 2 88 1 50 1 13 1 52 1 239 1 212 3 18 1 55 3 59 1 214 1 153 1 185 2 97 1 60 1 187 1 216 1 134 1 135 1 99 1 219 1 25 1 163 1 26 1 195 2 
73 3 198 1 225 3 171 1 109 3 110 1 111 3 231 3 117 3 178 3 47 1 236 3 88 1 15 3 150 1 16 3 152 1 127 1 60 1 62 1 156 3 99 1 221 3 163 1 195 2 196 1 
73 1 198 1 225 1 109 1 110 1 111 1 231 1 117 1 178 1 123 1 47 1 236 1 88 1 15 1 150 1 16 1 152 1 127 1 60 1 62 1 156 1 99 1 221 1 163 1 195 2 196 1 
123 1 47 1 198 1 88 1 150 1 152 1 127 1 109 1 60 1 62 1 99 1 163 1 195 2 196 1 
73 1 198 1 225 1 108 1 109 1 110 1 202 1 111 1 231 1 117 1 234 1 178 1 47 1 236 1 88 1 15 1 150 1 16 1 19 1 152 1 127 1 184 1 60 1 62 1 156 1 99 1 66 1 162 1 221 1 163 1 222 1 195 2 196 1 
137 1 73 4 198 1 225 4 169 1 106 2 37 1 109 2 110 1 111 3 231 3 117 3 148 1 178 3 209 2 47 1 236 3 48 1 88 1 14 1 15 3 150 1 16 3 152 1 128 1 127 1 95 1 60 1 155 1 62 1 242 1 156 3 161 1 99 1 100 1 221 3 163 1 195 2 196 1 
73 1 198 1 225 1 109 1 110 1 111 1 231 1 117 1 178 1 47 1 236 1 88 1 15 1 150 1 16 1 152 1 127 1 60 1 62 1 156 1 99 1 221 1 163 1 195 2 196 1 
129 1 29 1 94 1 195 1 85 1 
157 1 180 1 213 1 195 1 
33 1 213 1 195 1 
29 1 139 2 195 1 85 1 
130 1 213 1 
97 1 13 1 219 1 153 1 
185 1 216 1 215 1 235 1 74 1 205 1 55 1 
227 1 97 1 190 1 13 1 114 1 10 1 192 1 
185 1 216 1 235 1 74 1 205 1 55 1 
73 2 121 1 209 1 231 1 169 1 106 1 148 1 
73 1 231 1 
73 1 202 1 209 1 169 1 106 1 222 1 
73 1 231 1 
202 1 209 1 106 1 222 1 
17 1 
75 1 
75 1 
163 1 
99 1 
163 1 
12 1 122 1 198 1 47 1 88 1 124 1 139 1 34 1 77 1 214 1 142 1 60 1 228 1 24 1 195 2 177 1 
122 1 198 1 47 1 88 1 139 1 183 1 106 2 34 1 77 1 214 1 142 1 60 1 202 1 228 1 7 1 158 2 24 1 222 1 195 2 177 1 
35 1 
202 2 179 1 212 2 222 1 
202 2 212 2 222 1 104 1 
28 1 1 1 198 1 166 1 139 1 4 1 35 1 106 1 34 1 77 1 142 1 227 1 39 1 202 2 228 1 114 1 10 1 176 2 146 1 145 1 177 1 11 1 122 1 47 2 149 2 88 1 50 1 179 1 52 1 183 1 92 1 212 2 59 1 214 1 97 1 60 1 21 1 158 1 23 1 24 1 104 1 195 3 27 1 
12 1 60 1 88 1 228 1 124 1 
28 1 198 1 139 1 74 3 35 1 106 1 34 1 76 1 200 1 77 1 142 1 202 3 228 1 7 1 176 2 205 3 146 1 177 1 235 3 122 1 47 3 88 1 50 1 13 1 179 1 183 1 212 2 55 4 59 1 153 1 214 1 20 1 185 3 97 1 60 1 215 1 216 1 187 1 158 1 23 1 219 1 24 1 25 1 104 1 195 2 
122 1 198 1 47 1 88 1 139 1 92 1 34 1 77 1 214 1 142 1 60 1 228 1 24 1 195 2 177 1 
122 1 198 1 47 1 88 1 139 1 183 1 106 1 34 1 77 1 214 1 142 1 60 1 202 3 228 1 7 2 158 1 24 1 222 1 195 2 177 1 
122 1 198 1 47 1 88 1 139 1 34 1 77 1 214 1 142 1 60 1 228 1 8 1 24 1 195 2 177 1 
12 1 122 2 198 2 47 2 88 2 124 1 139 2 34 2 77 2 214 2 142 2 60 2 228 2 8 1 24 2 195 4 177 2 
123 1 122 1 198 1 47 1 88 1 139 1 34 1 77 1 214 1 142 1 60 1 228 1 24 1 195 2 177 1 
122 2 198 2 47 2 88 2 139 2 92 1 34 2 77 2 214 2 142 2 60 2 228 2 8 1 24 2 195 4 177 2 
96 1 124 1 218 1 67 1 204 1 93 1 
0 1 198 1 139 1 140 1 106 2 202 2 7 1 233 1 45 2 122 1 47 1 88 1 93 1 56 1 214 1 60 1 63 1 218 1 67 1 195 2 222 1 
45 2 122 1 47 1 198 1 88 1 139 1 93 1 106 2 56 1 214 1 96 1 60 1 202 2 63 1 7 1 67 1 218 1 204 1 222 1 195 2 
198 1 2 1 139 1 74 2 106 1 76 1 200 1 107 1 202 1 7 1 176 1 204 1 205 2 146 1 45 1 235 2 122 1 47 3 88 1 50 1 13 1 93 1 55 3 214 1 153 1 20 1 185 2 96 1 97 1 60 1 215 1 216 1 187 1 63 1 23 1 243 1 218 1 67 1 219 1 25 1 195 2 
45 1 241 1 72 1 218 1 106 1 148 1 
2 1 222 1 
243 1 222 1 
72 1 198 1 139 1 106 1 107 1 202 2 7 1 204 1 234 1 45 1 122 1 47 1 88 1 93 1 214 1 96 1 241 1 60 1 218 2 67 1 66 1 195 2 
72 1 198 1 139 1 106 1 107 1 202 2 7 1 144 1 204 1 148 1 234 1 45 1 122 1 47 1 88 1 93 1 214 1 96 1 241 1 60 1 154 1 218 2 67 1 66 1 195 2 
107 1 
72 1 1 1 198 1 2 1 139 1 4 1 106 2 107 1 227 1 202 3 39 1 7 2 114 1 10 1 176 2 204 1 145 1 146 1 233 1 11 1 234 1 45 2 122 1 47 2 149 4 88 1 50 1 52 1 93 1 214 1 241 1 20 2 96 1 97 1 60 1 21 1 63 1 23 1 243 1 66 1 218 2 67 1 101 1 195 3 27 1 
96 1 124 1 218 1 67 1 204 1 93 1 
72 1 2 1 198 1 139 1 74 4 200 1 76 1 202 3 7 2 204 1 146 1 205 4 88 1 13 1 93 1 153 1 214 1 96 1 20 2 97 1 216 1 215 1 23 1 218 2 219 1 25 1 101 1 106 2 107 1 176 2 234 1 45 2 122 1 235 4 47 3 50 1 55 5 185 4 241 1 60 1 187 1 63 1 243 1 67 1 66 1 195 2 

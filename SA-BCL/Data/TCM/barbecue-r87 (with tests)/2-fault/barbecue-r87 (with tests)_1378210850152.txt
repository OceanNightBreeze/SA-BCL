#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 59 0 124 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
222 1 174 1 83 1 44 1 211 1 39 1 
222 1 174 1 83 1 44 1 39 1 
158 1 139 2 67 1 
163 1 96 1 63 1 97 1 83 1 28 1 165 1 230 1 121 1 203 1 204 1 57 1 221 1 69 3 155 2 206 1 36 1 38 1 78 1 
163 1 63 1 83 1 28 1 165 2 149 1 230 1 121 1 204 1 57 1 69 3 155 1 206 1 159 1 36 1 38 1 
6 1 63 1 28 1 57 1 
163 1 63 1 28 1 102 1 121 2 57 1 69 2 155 1 36 1 12 1 38 1 
174 1 163 1 63 1 96 1 97 1 83 2 28 1 29 1 165 1 84 1 230 1 121 1 204 2 69 3 221 1 155 1 206 1 36 1 38 1 78 1 
174 1 163 1 63 1 96 1 97 1 83 2 28 1 165 1 84 1 230 1 121 1 204 2 69 3 221 1 155 1 206 1 36 1 38 1 78 1 
174 1 227 1 163 1 63 1 83 1 28 1 29 1 84 1 121 1 204 1 57 1 69 2 155 1 141 1 36 1 38 1 94 1 
174 1 227 1 163 1 63 1 83 1 28 1 29 1 84 1 121 1 204 1 57 1 69 2 155 1 35 1 36 1 38 1 94 1 
95 1 174 1 227 1 163 1 63 1 83 1 28 1 84 1 121 1 204 1 57 1 69 2 155 1 36 1 38 1 92 1 172 1 94 1 
95 1 174 1 227 1 163 1 63 1 83 1 28 1 29 1 84 1 121 1 204 1 57 1 69 2 155 1 36 1 38 1 92 1 172 1 94 1 
69 3 155 2 163 1 105 1 63 1 28 1 36 2 121 1 38 1 57 1 
63 1 28 1 82 2 199 1 121 1 57 1 69 3 32 1 36 2 38 1 
69 2 63 1 71 1 82 1 28 1 199 1 36 1 121 2 38 1 57 1 
69 2 63 1 82 1 28 1 199 1 36 1 45 1 121 1 38 1 57 1 
69 2 63 1 82 1 28 1 166 1 199 1 36 1 121 1 38 1 57 1 
63 1 83 1 28 1 82 1 229 1 165 4 199 1 200 1 121 1 87 1 204 1 57 1 69 3 19 1 206 1 91 1 36 1 38 1 
63 1 28 1 82 1 199 1 121 1 57 1 69 2 182 1 33 1 36 1 38 1 
69 2 105 1 63 1 82 1 28 1 199 1 36 3 121 2 38 2 57 1 
63 1 83 1 28 1 82 2 165 1 199 1 149 1 121 1 204 1 57 1 69 4 206 1 91 1 36 2 38 2 111 1 
195 1 41 1 202 3 
202 1 
0 1 1 1 174 1 54 4 116 1 177 1 179 4 120 1 121 3 180 2 58 2 126 4 59 1 9 2 127 1 189 1 13 1 190 1 192 1 131 3 132 1 196 1 15 1 199 1 70 4 69 3 207 4 206 1 72 1 142 2 74 1 75 2 25 1 80 1 147 1 28 1 82 1 83 2 215 2 84 1 149 1 151 1 218 1 153 4 220 4 31 2 224 4 32 1 157 2 159 2 34 8 36 2 91 1 225 2 165 3 231 1 103 2 44 2 45 2 233 1 236 1 104 1 105 1 170 1 49 1 171 1 241 1 110 4 173 1 
0 1 1 1 112 2 113 4 116 1 117 2 119 2 121 3 3 2 5 2 126 3 9 2 10 2 11 2 13 1 129 4 132 1 15 1 133 2 21 2 24 2 143 2 25 1 26 2 146 2 145 2 147 1 28 1 149 1 150 1 153 3 30 2 32 1 159 1 34 14 36 2 37 2 162 1 40 2 165 2 42 1 44 2 45 2 47 2 170 1 171 1 49 1 173 1 52 2 174 1 54 4 55 2 180 4 183 2 185 2 59 1 186 1 187 2 189 1 190 1 194 4 196 1 64 2 199 1 68 3 69 4 206 1 207 4 72 1 75 4 77 2 80 1 81 1 83 2 82 1 84 1 85 2 218 1 88 2 224 6 91 1 93 1 226 2 228 2 100 4 233 1 234 2 104 1 105 1 238 1 106 2 108 1 241 1 110 4 
0 1 1 1 174 1 54 4 113 4 112 2 55 2 116 1 117 2 119 2 121 3 3 2 180 4 5 2 183 2 185 2 126 3 59 1 186 1 9 2 187 2 10 2 11 2 189 1 13 1 190 1 129 4 194 4 64 2 132 1 196 1 15 1 133 2 199 1 69 3 21 2 207 4 206 1 72 1 24 2 75 4 143 2 77 2 25 1 26 2 80 1 145 2 146 2 147 1 82 1 28 1 83 2 84 1 149 1 150 1 85 2 218 1 153 3 30 2 88 2 224 6 32 1 159 1 34 4 36 2 91 1 37 2 40 2 226 2 228 2 101 1 100 4 165 2 42 1 231 1 44 2 45 2 234 2 233 1 47 2 104 1 105 1 106 2 108 1 170 1 49 1 171 1 241 1 110 4 173 1 
0 1 1 1 174 1 54 4 113 4 55 3 116 1 117 2 119 2 2 1 121 3 180 4 183 2 185 2 126 3 59 1 9 2 187 3 11 2 189 1 13 1 190 1 129 3 62 1 194 5 64 2 132 1 196 1 15 1 133 2 199 1 69 3 205 1 21 2 206 1 207 4 72 1 24 3 75 4 143 3 77 2 25 1 144 2 80 1 145 2 146 3 147 1 83 2 28 1 82 1 84 1 149 1 218 1 153 3 30 2 156 1 88 2 224 6 32 1 89 1 159 1 34 4 91 1 36 2 37 3 40 2 226 2 228 2 100 5 165 2 42 1 44 2 45 2 234 3 233 1 47 3 104 1 105 1 106 2 170 1 49 1 171 1 241 1 50 1 110 4 173 1 
152 1 
0 1 1 1 113 4 115 1 116 1 117 2 119 2 121 4 2 1 126 3 9 2 11 2 13 1 129 3 132 1 15 1 133 2 21 2 24 3 143 3 25 1 144 2 146 3 145 2 147 1 28 1 149 1 150 1 153 3 30 2 156 1 32 1 159 2 34 4 36 2 37 3 40 2 165 3 42 1 44 2 45 2 47 3 170 1 171 1 49 1 50 1 173 1 174 1 54 4 55 3 180 4 183 2 185 2 59 1 187 3 189 1 190 1 191 1 62 1 194 5 196 1 64 2 199 1 69 3 207 4 206 1 72 1 75 4 77 2 80 1 82 1 83 2 84 1 218 1 88 2 224 6 89 1 91 1 226 2 228 2 100 5 231 1 102 1 233 1 234 3 104 1 105 1 106 2 108 1 241 1 110 4 
0 1 1 1 174 1 54 4 113 4 55 3 116 1 117 3 119 2 121 5 180 4 183 2 185 3 126 3 59 1 9 2 187 3 11 2 189 1 13 1 190 1 191 1 129 3 62 1 194 5 64 2 132 1 196 1 15 1 133 2 199 1 69 4 21 2 206 1 207 4 72 1 24 3 75 4 143 3 77 2 25 1 144 2 80 1 145 2 146 3 147 1 83 2 28 1 82 2 84 1 149 1 150 1 218 1 153 3 30 2 156 1 88 3 224 6 32 1 89 1 159 1 34 4 91 1 36 4 37 3 40 2 226 2 228 2 100 5 165 2 42 1 231 1 102 1 44 2 45 2 234 3 233 1 104 1 47 3 105 1 106 2 108 1 170 1 49 1 171 1 241 1 110 4 173 1 111 1 
0 1 1 1 174 1 54 4 113 4 55 3 116 1 117 2 119 2 121 3 180 4 183 2 185 2 126 3 59 1 9 2 187 3 11 2 189 1 13 1 191 1 190 1 129 3 62 1 194 5 64 2 132 1 196 1 15 1 133 2 199 1 69 3 21 2 206 1 207 4 72 1 24 3 75 4 143 3 77 2 25 1 144 2 80 1 145 2 146 3 147 1 83 2 28 1 82 1 84 1 149 1 150 1 218 1 153 3 30 2 156 1 88 2 224 6 32 1 89 1 159 1 34 4 91 1 36 2 37 3 40 2 226 2 228 2 100 5 165 2 42 1 231 1 44 2 45 2 234 3 233 1 104 1 47 3 105 1 106 2 108 1 170 1 49 1 171 1 241 1 110 4 173 1 
0 1 32 1 132 1 15 1 59 1 116 1 207 4 72 1 171 1 241 1 13 1 110 4 
0 1 1 1 112 2 113 4 116 1 117 2 119 2 121 3 3 2 5 2 126 3 9 2 10 2 11 2 13 1 129 4 132 1 15 1 133 2 135 1 137 1 21 2 22 1 24 2 143 2 25 1 26 2 146 2 145 2 27 2 147 1 28 1 149 1 150 1 153 3 30 2 155 1 159 1 34 4 36 2 37 2 40 2 163 1 164 2 165 2 42 1 44 2 45 2 46 2 47 2 48 2 170 1 171 1 49 1 173 1 174 1 175 1 54 4 55 2 180 4 183 2 185 2 59 1 186 1 187 2 189 1 190 1 194 4 196 1 64 2 198 1 69 3 206 1 207 4 72 1 210 2 75 4 77 2 80 1 83 2 84 1 85 2 218 1 88 2 224 6 226 2 228 2 98 1 101 1 99 1 100 4 230 1 231 1 233 1 234 2 104 1 237 1 105 1 239 1 106 2 240 1 108 1 241 1 110 4 
0 1 15 1 59 1 207 1 110 1 
0 1 1 1 174 1 54 4 113 4 55 3 116 1 117 2 119 2 2 1 121 3 180 4 183 2 185 2 126 3 59 1 9 2 187 3 11 2 189 1 13 1 191 1 190 1 129 3 62 1 194 5 64 2 132 1 196 1 15 1 133 2 199 1 69 3 21 2 206 1 207 4 72 1 24 3 75 4 143 3 77 2 25 1 144 2 80 1 145 2 146 3 147 1 83 2 28 1 82 1 84 1 149 1 150 1 218 1 153 3 30 2 156 1 88 2 224 6 32 1 89 1 159 1 34 4 91 1 36 2 37 3 40 2 226 2 228 2 100 5 165 2 42 1 44 2 45 2 234 3 233 1 47 3 104 1 105 1 106 2 108 1 170 1 49 1 241 1 50 1 110 4 173 1 
1 1 174 1 54 4 113 4 55 3 116 1 117 2 119 2 2 1 121 3 180 4 183 2 185 2 126 3 59 1 9 2 187 3 11 2 189 1 13 1 191 1 190 1 129 3 62 1 194 5 64 2 132 1 196 1 15 1 133 2 199 1 69 3 21 2 206 1 207 4 72 1 24 3 75 4 143 3 77 2 25 1 144 2 80 1 145 2 146 3 147 1 83 2 28 1 82 1 84 1 149 1 150 1 218 1 153 3 30 2 156 1 88 2 224 6 32 1 89 1 159 1 34 4 91 1 36 2 37 3 40 2 226 2 228 2 100 5 165 2 42 1 44 2 45 2 234 3 233 1 47 3 104 1 105 1 168 1 106 2 108 1 170 1 49 1 241 1 50 1 110 4 173 1 
0 1 1 1 113 4 112 2 116 1 117 5 119 2 2 1 121 6 3 2 124 1 5 2 125 1 126 3 9 2 10 2 11 2 13 1 129 5 130 1 14 1 132 1 15 1 133 2 21 2 24 3 143 3 25 1 144 2 26 2 146 3 145 2 147 4 28 4 149 1 150 1 153 3 30 2 156 1 32 1 159 1 34 6 36 5 37 3 40 2 165 2 42 4 44 2 45 2 47 3 170 1 171 1 49 1 50 1 173 1 174 1 54 4 55 3 180 6 183 2 185 5 59 1 186 1 187 3 189 1 190 1 62 1 194 5 196 1 64 2 199 4 201 1 69 9 207 4 206 1 72 1 75 6 77 2 80 1 82 4 83 2 84 1 85 2 218 1 88 5 224 6 89 1 91 1 226 2 228 2 100 5 234 3 233 1 104 1 105 1 106 2 108 1 241 1 110 4 
238 1 109 1 34 1 
34 1 167 1 
140 1 34 1 
227 1 174 1 83 1 86 1 153 1 224 1 138 1 34 1 23 1 92 1 94 1 161 1 
174 1 4 1 224 1 83 1 34 1 153 1 
174 1 227 1 224 1 83 1 23 1 34 1 94 1 
140 1 34 1 
34 1 123 1 
140 1 34 1 
34 1 167 1 
34 1 167 1 
79 1 176 1 34 1 179 1 
220 1 214 1 34 1 
212 1 213 1 54 2 147 1 114 2 28 1 82 1 216 1 199 1 121 1 69 2 157 1 140 1 209 1 34 2 188 1 36 1 
160 1 
212 1 213 1 147 1 28 1 82 1 199 1 121 1 69 2 6 1 157 1 209 1 188 1 36 1 
163 1 147 1 28 1 42 1 117 2 232 1 121 1 69 3 155 2 88 2 185 2 36 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
69 3 88 2 155 2 163 1 147 1 185 2 28 1 117 2 42 1 36 1 121 1 232 1 
174 1 175 1 54 4 113 4 55 2 117 1 119 2 121 2 180 4 183 2 185 1 126 3 9 2 187 2 11 2 189 1 129 2 194 4 64 2 133 2 198 1 135 1 137 1 69 3 206 1 21 2 22 1 210 2 24 2 75 4 143 2 77 2 25 1 26 2 27 2 145 2 146 2 147 1 83 2 28 1 84 1 218 1 153 3 30 2 155 1 88 1 224 6 159 1 34 4 36 1 37 2 40 2 226 2 163 1 228 2 98 1 99 1 164 2 100 4 165 1 230 1 42 1 102 1 44 2 45 2 46 2 234 2 47 2 237 1 48 2 239 1 240 1 106 2 49 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 56 2 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 56 2 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
163 1 147 1 28 1 42 1 117 1 232 1 121 1 69 2 155 1 88 1 185 1 36 1 51 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 56 2 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 115 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 85 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
174 1 54 2 113 2 55 1 117 2 119 1 121 4 3 1 183 1 7 1 185 2 8 1 9 1 60 1 187 1 11 1 129 1 194 2 64 1 133 1 69 3 138 2 21 1 23 1 24 1 143 1 145 1 146 1 147 1 83 1 28 1 84 1 86 2 218 1 153 2 30 1 155 2 88 2 224 2 35 1 34 3 90 1 36 2 37 1 92 3 94 1 161 2 227 1 95 2 226 1 163 1 228 1 100 2 42 1 102 1 232 1 45 1 234 1 47 1 238 3 106 1 170 1 49 1 111 1 
145 1 146 1 54 3 147 1 112 1 113 3 28 1 55 1 117 1 119 1 121 1 3 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
69 2 88 1 155 1 163 1 147 1 185 1 28 1 117 1 42 1 36 1 121 1 
54 2 113 2 55 1 117 1 119 1 121 1 180 2 183 1 185 1 126 3 9 1 187 1 11 1 189 1 129 1 194 2 64 1 133 1 69 3 206 1 21 1 210 1 24 1 75 2 143 1 77 1 25 1 26 1 27 1 145 1 146 1 147 1 83 1 28 1 30 1 155 1 88 1 224 3 159 1 34 2 36 1 37 1 40 1 226 1 163 1 228 1 98 1 164 1 100 2 165 1 230 1 42 1 44 1 45 1 46 1 234 1 47 1 48 1 106 1 
163 1 147 1 28 1 42 1 117 1 232 1 121 1 46 1 69 2 155 1 88 1 185 1 36 1 
54 2 112 1 113 2 55 1 119 1 180 2 3 1 5 1 183 1 126 3 9 1 187 1 10 1 11 1 189 1 129 2 194 2 64 1 133 1 69 1 206 1 21 1 210 1 24 1 75 2 143 1 77 1 25 1 26 1 27 1 146 1 145 1 83 1 85 1 30 1 224 3 32 1 159 1 34 2 91 1 37 1 40 1 226 1 228 1 98 1 164 1 100 2 165 1 44 1 45 1 46 1 234 1 47 1 48 1 106 1 
54 2 113 2 115 1 55 1 117 1 119 1 121 1 180 2 183 1 185 1 126 3 9 1 187 1 11 1 189 1 129 1 194 2 64 1 133 1 69 3 206 1 21 1 210 1 24 1 75 2 143 1 77 1 25 1 26 1 27 1 145 1 146 1 147 1 83 1 28 1 30 1 155 1 88 1 224 3 159 1 34 2 36 1 37 1 40 1 226 1 163 1 228 1 98 1 164 1 100 2 165 1 230 1 42 1 44 1 45 1 46 1 234 1 47 1 48 1 106 1 
54 2 113 2 115 1 55 1 117 1 119 1 121 1 180 2 183 1 185 1 126 3 9 1 187 1 11 1 189 1 129 1 194 2 64 1 133 1 199 1 69 3 206 1 21 1 210 1 24 1 75 2 143 1 77 1 25 1 26 1 27 1 145 1 146 1 147 1 83 1 28 1 82 1 30 1 88 1 32 1 224 3 159 1 34 2 91 1 36 1 37 1 40 1 226 1 228 1 98 1 164 1 100 2 165 1 42 1 44 1 45 1 46 1 234 1 47 1 48 1 106 1 
145 1 146 1 147 1 54 2 112 1 113 2 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 226 1 194 2 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 2 147 1 113 2 112 1 28 1 55 1 117 1 119 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
26 1 34 1 76 1 75 1 180 1 
34 1 76 1 75 1 180 1 77 1 
26 1 61 1 65 1 34 1 75 1 180 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
174 1 54 2 112 1 113 2 55 1 117 1 119 1 121 2 3 1 180 2 5 1 183 1 185 1 9 1 187 1 10 1 11 1 129 2 194 2 64 1 133 1 69 2 138 3 21 1 23 1 24 1 75 2 143 1 77 1 26 1 145 1 146 1 147 1 83 1 28 1 84 1 85 1 86 3 218 1 153 3 30 1 155 1 88 1 224 3 34 2 36 1 92 4 37 1 94 1 161 3 40 1 227 1 95 1 226 1 163 1 228 1 100 2 42 1 44 1 232 1 45 1 234 1 47 1 106 1 170 1 49 1 
145 1 146 1 147 1 54 3 113 3 28 1 115 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 121 1 56 2 3 1 88 1 155 1 5 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 40 1 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 56 2 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 54 3 147 1 113 3 112 1 28 1 55 1 117 1 119 1 85 1 121 1 3 1 88 1 155 1 5 1 183 1 185 1 187 1 10 1 36 1 11 1 37 1 129 2 194 2 226 1 163 1 228 1 133 1 100 2 42 1 232 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
145 1 146 1 147 1 54 3 113 3 28 1 55 1 117 1 119 1 121 1 88 1 155 1 183 1 185 1 187 1 36 1 11 1 37 1 129 1 194 2 226 1 228 1 163 1 133 1 100 2 42 1 234 1 47 1 69 2 140 1 106 1 21 1 24 1 143 1 
174 1 53 1 147 1 28 1 83 1 84 1 118 1 178 1 86 2 218 1 153 2 121 2 30 1 221 1 155 1 224 2 157 1 9 1 34 4 36 1 128 1 92 3 161 2 94 1 227 1 95 1 163 1 96 1 97 1 64 1 165 1 134 1 45 1 16 1 69 2 138 2 238 3 141 1 170 1 49 1 78 1 
174 1 53 1 27 1 147 1 28 1 83 1 118 1 178 1 86 2 218 1 153 2 121 1 30 1 155 1 223 1 224 2 157 1 182 1 9 1 33 1 34 4 36 1 128 1 92 3 161 2 94 1 227 1 95 1 163 1 64 1 164 1 66 1 135 1 134 1 45 1 16 1 69 2 138 2 20 1 48 1 238 3 208 1 210 1 49 1 
145 1 146 3 54 2 147 1 113 2 115 1 28 1 55 3 117 1 119 1 121 1 156 1 155 1 88 1 183 1 89 2 185 1 187 3 36 1 11 1 37 3 129 3 62 1 40 1 226 1 194 4 228 1 163 1 133 1 100 4 42 1 234 3 47 3 69 2 139 1 106 1 21 1 24 3 143 3 
144 1 146 1 147 1 28 1 55 1 117 1 121 1 180 1 219 1 156 1 155 1 88 1 89 1 185 1 34 1 187 1 36 1 37 1 129 1 62 1 194 1 163 1 100 1 42 1 234 1 47 1 69 2 140 1 24 1 76 1 75 1 143 1 
146 3 147 1 28 1 55 3 117 1 121 1 156 1 155 1 88 1 89 3 184 1 185 1 187 3 36 1 37 3 129 3 62 1 194 3 163 1 100 3 42 1 234 3 47 3 69 2 24 3 143 3 
146 1 147 1 28 1 55 1 117 1 121 1 156 1 155 1 88 1 89 1 185 1 187 1 36 1 37 1 129 1 62 1 194 1 163 1 100 1 166 1 42 1 234 1 47 1 69 2 24 1 143 1 
163 1 147 1 28 1 166 1 42 1 117 1 121 1 69 2 155 1 88 1 89 1 185 1 36 1 62 1 
194 1 163 1 146 1 147 1 28 1 55 1 100 1 117 1 42 1 121 1 234 1 47 1 69 2 88 1 155 1 156 1 89 1 185 1 187 1 36 1 24 1 37 1 143 1 129 1 62 1 
69 1 181 1 197 1 148 1 
69 1 154 1 217 1 43 1 203 1 
69 1 148 1 73 1 
69 1 154 1 203 1 193 2 
148 1 136 1 
95 1 138 1 86 1 92 1 153 1 161 1 
95 1 138 1 23 1 86 1 92 1 153 1 161 1 
174 1 83 1 49 1 218 1 
174 1 27 1 83 1 164 1 210 1 135 1 122 1 
17 1 194 2 145 1 139 1 54 1 113 1 37 1 
194 1 37 1 
194 1 145 1 54 1 113 1 140 1 34 1 
194 1 37 1 
54 1 113 1 140 1 34 1 
199 1 
82 1 
82 1 
155 1 
163 1 
155 1 
54 2 147 1 176 1 131 1 28 1 177 1 151 1 121 1 235 1 70 2 220 1 69 2 157 1 140 1 34 2 127 1 36 1 142 1 192 1 193 1 
174 1 54 1 147 1 28 1 83 1 215 1 177 1 84 1 86 2 151 1 179 1 218 1 153 2 121 3 220 1 31 1 224 1 157 1 9 1 34 1 127 1 36 1 92 3 192 1 161 2 193 1 94 1 225 1 95 1 227 1 131 1 102 1 45 1 235 1 70 1 69 2 138 2 170 1 23 1 49 1 142 1 
70 1 139 1 54 1 58 1 131 1 103 1 
140 1 225 1 
31 1 140 1 
147 1 54 1 28 1 215 1 177 1 151 1 121 1 180 1 220 1 157 1 58 1 127 1 34 2 36 1 192 1 193 1 131 2 103 1 235 1 69 2 70 1 75 1 
6 1 131 1 177 1 127 1 151 1 192 1 
147 1 54 2 176 1 28 1 151 1 121 1 220 1 157 1 34 2 36 1 192 1 193 1 131 1 235 1 69 2 70 2 18 1 140 1 169 1 107 1 142 1 
147 1 54 1 214 1 28 1 215 1 177 1 151 1 121 1 180 1 220 1 157 1 58 1 158 1 127 1 34 2 36 1 192 1 193 1 131 2 103 1 235 1 69 2 70 1 139 1 75 1 
215 1 
27 1 54 2 147 1 28 1 83 1 215 1 177 1 151 1 179 2 121 2 180 1 220 2 31 1 157 1 224 2 58 1 126 4 9 1 159 1 34 3 127 1 36 1 189 1 192 1 193 1 225 1 131 2 98 1 164 1 165 1 230 1 102 1 103 1 44 1 45 1 235 1 70 2 69 3 48 1 169 1 206 1 210 1 142 1 75 1 25 1 
6 1 131 1 177 1 127 1 151 1 192 1 
174 1 54 2 177 1 179 2 121 3 180 1 58 1 9 1 127 1 192 1 193 1 131 2 69 2 70 2 138 4 23 1 142 1 75 1 147 1 83 1 28 1 215 1 84 1 151 1 86 4 153 4 218 1 220 2 31 1 157 1 224 2 34 3 36 1 92 5 225 1 94 1 161 4 227 1 95 1 102 1 103 1 44 1 45 1 235 1 170 1 49 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
224 1 246 1 100 1 70 1 221 1 170 1 
224 1 246 1 100 1 70 1 170 1 
156 1 28 1 188 2 
230 2 2 2 3 1 234 1 35 1 11 1 36 2 12 3 175 2 120 1 228 1 
230 2 2 4 3 1 32 1 131 1 35 1 36 2 87 1 224 1 12 2 175 1 120 1 228 1 199 1 200 1 98 1 
230 1 2 3 231 1 3 1 30 1 220 1 32 1 131 1 35 1 87 1 36 1 224 1 12 1 223 1 175 1 120 1 228 1 200 1 
230 1 2 3 3 1 32 1 131 1 35 1 36 1 87 2 224 1 12 1 175 1 143 1 120 1 228 1 199 1 200 1 
3 1 120 1 228 1 244 1 
230 1 2 2 3 1 35 1 36 1 12 1 175 2 93 1 120 1 228 1 95 1 
230 1 2 3 231 1 3 1 100 1 30 1 220 1 32 2 131 1 35 1 87 1 36 1 224 2 12 1 223 1 175 1 105 1 150 1 228 1 200 1 
230 1 2 3 231 1 3 1 100 1 30 1 220 1 32 2 131 1 35 1 87 1 36 1 224 2 12 1 223 1 175 1 105 1 228 1 200 1 
230 1 2 2 65 1 3 1 100 1 32 1 35 1 36 1 224 1 12 1 175 1 165 1 105 1 120 1 148 1 150 1 228 1 
230 1 2 2 3 1 100 1 32 1 35 1 36 1 224 1 12 1 175 1 165 1 105 1 149 1 120 1 148 1 150 1 228 1 
230 1 2 2 3 1 100 1 32 1 35 1 51 1 36 1 224 1 12 1 175 1 165 1 105 1 17 1 120 1 148 1 135 1 228 1 
230 1 2 2 3 1 100 1 32 1 35 1 51 1 36 1 224 1 12 1 175 1 165 1 105 1 17 1 150 1 120 1 148 1 135 1 228 1 
230 2 12 2 175 1 2 3 3 1 120 1 228 1 35 1 11 1 36 1 
2 3 3 1 186 2 36 1 37 1 12 2 175 1 120 1 178 1 228 1 
12 1 175 2 2 2 3 1 120 1 228 1 186 1 71 1 37 1 36 1 
2 2 3 1 186 1 86 1 36 1 37 1 12 1 175 1 120 1 228 1 
12 1 175 1 81 1 2 2 3 1 120 1 228 1 186 1 37 1 36 1 
2 3 3 1 186 1 161 1 32 1 115 1 141 1 36 1 37 1 87 4 224 1 73 1 12 1 175 1 146 1 120 1 228 1 200 1 
2 2 3 1 186 1 50 1 36 1 37 1 12 1 175 1 120 1 227 1 228 1 
52 3 45 1 10 1 
52 1 
0 3 2 4 3 1 7 4 9 2 11 1 12 4 142 1 143 1 145 3 15 3 18 3 19 1 22 1 151 3 23 1 152 1 154 2 157 1 26 1 158 1 159 1 29 1 162 1 37 1 164 1 163 1 166 1 38 5 169 2 46 2 47 1 174 1 175 5 54 5 177 2 57 3 178 1 180 2 60 4 61 2 62 4 63 1 183 1 186 2 189 1 73 1 190 2 74 3 192 1 195 1 75 1 197 4 199 1 200 1 201 2 204 1 86 2 87 2 89 3 211 1 91 14 93 1 92 2 96 3 98 1 97 1 99 1 216 6 217 1 100 1 101 1 103 3 222 2 224 2 105 1 229 3 107 1 233 1 113 2 114 2 236 2 237 4 118 3 123 3 125 4 240 1 241 1 129 1 130 2 246 2 132 3 134 1 249 1 136 3 251 2 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 23 1 96 3 97 1 154 2 216 6 99 1 157 1 217 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 241 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
107 1 157 1 241 1 101 1 159 1 129 1 195 1 178 1 23 1 249 1 60 4 62 4 
79 1 2 3 3 1 83 2 204 1 7 2 86 2 209 2 11 1 87 3 88 2 142 1 12 2 211 1 143 2 14 1 91 8 19 1 151 4 23 1 97 1 216 4 25 1 157 1 217 1 158 1 100 1 219 2 27 1 101 1 159 1 37 1 163 1 224 2 225 2 166 1 105 1 107 1 109 4 233 1 47 1 116 2 174 1 175 3 237 2 56 4 57 4 178 1 179 3 180 2 126 2 60 4 62 4 64 1 241 1 183 1 69 1 129 1 186 1 243 4 73 1 246 2 195 1 75 1 248 1 197 4 249 1 199 1 200 1 
0 2 2 4 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 23 1 96 3 97 1 154 2 216 6 99 1 157 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 241 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 23 1 96 3 97 1 154 2 216 6 99 1 157 1 217 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 121 1 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 241 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 13 1 211 1 143 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 23 1 96 3 97 1 154 2 216 6 157 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 41 1 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 62 4 241 1 184 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
0 2 1 1 2 3 3 1 7 4 9 2 11 1 12 2 142 1 143 1 145 5 15 5 16 1 18 5 19 1 22 1 151 3 23 1 24 2 153 1 154 2 157 1 158 1 26 1 159 1 29 1 31 2 162 1 35 1 163 1 166 1 38 7 40 1 169 2 42 2 46 2 47 1 174 1 175 3 54 7 177 2 57 3 180 2 60 4 61 2 181 1 62 4 63 1 183 1 190 2 74 5 193 2 195 1 75 1 196 1 197 4 199 1 200 1 201 2 202 1 204 1 86 2 87 2 89 2 211 1 91 4 92 2 213 1 96 5 214 1 97 1 99 1 216 6 217 1 218 2 100 1 101 1 103 5 222 2 224 2 105 1 229 5 230 1 107 1 233 1 112 1 113 2 236 2 237 4 118 2 121 1 123 5 125 4 240 1 241 1 129 1 130 2 131 1 246 2 132 5 134 3 249 1 251 2 
68 1 
0 2 2 3 3 1 7 4 9 2 11 1 12 2 142 1 143 2 145 3 15 3 18 3 19 1 22 1 151 3 23 1 154 2 157 1 26 1 158 1 159 1 29 1 162 1 37 1 163 1 166 1 38 5 169 2 41 1 46 2 47 1 174 1 175 4 54 5 177 2 57 3 178 1 180 2 60 4 61 2 62 4 183 1 184 1 186 1 73 1 190 2 74 3 195 1 75 1 197 4 199 1 200 1 201 2 204 1 86 2 87 3 89 2 211 1 91 4 93 1 92 2 96 3 97 1 99 1 216 6 217 1 100 1 101 1 103 3 222 2 224 2 105 1 229 3 107 1 233 1 113 2 236 2 237 4 118 2 123 3 125 4 240 1 241 1 129 1 130 2 246 2 132 3 134 1 249 1 251 2 
241 1 195 1 249 1 60 1 62 1 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 96 3 97 1 154 2 216 6 99 1 157 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 41 1 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 241 1 184 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 90 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 96 3 97 1 154 2 216 6 99 1 157 1 26 1 158 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 41 1 107 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 184 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
0 2 2 3 3 1 204 1 7 4 86 2 9 2 87 2 11 1 142 1 12 2 89 2 143 1 211 1 145 3 15 3 91 4 18 3 92 2 19 1 151 3 22 1 23 1 96 3 97 1 154 2 216 6 99 1 157 1 158 1 26 1 100 1 101 1 29 1 159 1 103 3 162 1 222 2 37 1 224 2 163 1 166 1 105 1 38 5 169 2 229 3 41 1 107 1 110 1 46 2 233 1 47 1 113 2 236 2 174 1 175 3 237 4 54 5 177 2 118 2 57 3 178 1 123 3 125 4 180 2 60 4 61 2 240 1 63 1 62 4 241 1 184 1 183 1 129 1 186 1 130 2 190 2 73 1 246 2 74 3 132 3 195 1 75 1 134 1 197 4 249 1 199 1 200 1 201 2 251 2 
192 1 167 1 91 1 
80 1 91 1 
91 1 203 1 
216 1 100 1 104 1 224 1 165 1 17 1 91 1 57 1 148 1 119 1 20 1 182 1 
216 1 224 1 100 1 57 1 91 1 207 1 
216 1 224 1 165 1 100 1 91 1 148 1 182 1 
91 1 203 1 
91 1 242 1 
91 1 203 1 
80 1 91 1 
80 1 91 1 
56 1 91 1 226 1 171 1 
109 1 91 1 94 1 
2 2 3 1 203 1 204 1 102 1 186 1 172 1 37 1 117 1 12 1 175 1 91 2 39 2 197 2 124 1 126 1 250 1 
4 1 
12 1 117 1 175 1 2 2 3 1 204 1 102 1 172 1 186 1 124 1 126 1 244 1 37 1 
89 1 230 1 12 1 175 1 0 1 2 2 118 1 3 1 204 1 22 1 35 1 
230 2 0 2 2 3 3 1 204 1 111 1 35 1 12 1 89 2 175 1 118 2 22 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 2 0 2 2 3 3 1 204 1 111 1 35 1 12 1 89 2 175 1 118 2 22 1 
1 1 0 1 202 1 2 3 3 1 204 1 7 4 86 2 9 2 87 1 142 1 12 1 89 1 143 1 145 2 16 1 15 2 91 4 18 2 92 2 93 1 19 1 22 1 151 3 213 1 24 2 96 2 153 1 214 1 154 2 216 6 100 1 218 2 103 2 222 2 35 1 224 2 166 1 105 1 38 4 40 1 169 2 229 2 230 1 42 2 46 2 112 1 113 2 236 2 175 2 237 4 54 4 118 1 177 2 57 3 123 2 239 2 180 2 125 4 181 1 130 2 72 2 131 1 190 2 246 2 74 2 132 2 193 2 75 1 196 1 197 4 200 1 251 2 201 2 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 43 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 43 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 204 1 5 1 111 1 35 1 12 1 89 1 175 1 118 1 22 1 
230 1 0 1 2 2 43 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 63 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 160 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
0 2 2 3 3 1 204 1 86 1 12 2 89 2 144 1 145 1 17 3 15 1 18 1 91 3 149 1 148 1 93 1 19 1 22 1 20 2 96 1 98 1 154 1 216 2 155 1 100 1 103 1 104 2 222 1 35 1 224 1 165 1 105 1 166 1 38 2 169 1 229 1 230 2 46 1 47 1 111 1 113 1 235 1 51 2 236 1 175 4 53 1 54 2 118 2 177 1 57 2 119 2 123 1 180 1 125 2 182 1 66 1 130 1 190 1 74 1 132 1 192 3 197 2 251 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 197 3 229 1 201 1 
0 1 2 3 3 1 204 1 7 2 86 1 9 1 87 1 142 1 12 1 89 1 143 1 145 1 15 1 91 2 18 1 92 1 22 1 151 3 24 1 96 1 154 1 216 3 218 1 103 1 222 1 35 1 224 1 38 2 169 1 229 1 230 1 42 1 46 1 113 1 236 1 175 1 237 2 54 2 118 1 177 1 123 1 239 1 180 1 125 2 181 1 130 1 72 1 131 1 190 1 246 1 74 1 132 1 193 1 75 1 197 2 200 1 251 1 201 1 
230 1 0 1 2 2 3 1 204 1 111 1 35 1 12 1 89 1 175 1 118 1 22 1 239 1 
2 1 7 2 86 1 9 1 87 1 142 1 143 1 145 2 15 1 91 2 18 1 92 1 151 3 24 1 96 1 154 1 216 3 155 1 218 1 160 1 103 1 33 1 222 1 224 1 38 2 169 1 229 1 42 1 46 1 113 1 236 1 237 2 54 2 177 1 178 1 123 1 239 1 180 1 125 2 181 1 128 1 130 1 72 1 73 1 190 1 246 1 74 1 132 1 193 1 247 1 75 1 197 2 200 1 251 1 201 1 
0 1 2 3 3 1 204 1 7 2 86 1 9 1 87 1 142 1 12 1 89 1 143 1 145 1 15 1 91 2 18 1 92 1 22 1 151 3 24 1 96 1 154 1 216 3 218 1 103 1 222 1 35 1 224 1 38 2 169 1 229 1 230 1 42 1 46 1 113 1 236 1 175 1 237 2 54 2 118 1 177 1 123 1 239 1 180 1 125 2 181 1 63 1 130 1 72 1 131 1 190 1 246 1 74 1 132 1 193 1 75 1 197 2 200 1 251 1 201 1 
0 1 2 3 3 1 204 1 7 2 86 1 9 1 87 1 142 1 12 1 89 1 143 1 145 1 15 1 18 1 91 2 92 1 22 1 151 3 24 1 96 1 154 1 216 3 218 1 103 1 222 1 37 1 224 1 38 2 169 1 229 1 42 1 46 1 113 1 236 1 175 1 237 2 54 2 118 1 177 1 178 1 123 1 239 1 180 1 125 2 181 1 63 1 186 1 130 1 72 1 73 1 190 1 246 1 74 1 132 1 193 1 75 1 197 2 200 1 251 1 201 1 
230 1 0 1 2 2 3 1 46 1 204 1 111 1 113 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 2 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 247 1 38 2 229 1 197 2 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 2 96 1 154 1 155 1 128 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 2 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 197 3 229 1 201 1 
237 1 91 1 7 1 85 1 72 1 
237 1 91 1 92 1 7 1 85 1 
237 1 91 1 59 1 7 1 72 1 215 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
0 1 2 2 3 1 204 1 7 2 86 1 9 1 12 1 89 1 145 2 15 1 17 4 18 1 91 2 92 1 148 1 19 1 22 1 20 3 96 1 154 1 216 3 155 1 100 1 103 1 160 1 104 3 33 1 222 1 35 1 224 1 165 1 105 1 166 1 38 2 229 1 169 1 230 1 46 1 47 1 111 1 113 1 51 1 236 1 175 2 54 2 237 2 118 1 177 1 57 3 119 3 123 1 180 1 125 2 182 1 128 1 130 1 72 1 190 1 74 1 246 1 132 1 247 1 197 2 201 1 251 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 63 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 43 2 3 1 46 1 203 1 204 1 111 1 113 1 9 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 43 2 3 1 46 1 203 1 204 1 111 1 113 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 111 1 113 1 89 1 12 1 236 1 175 1 54 2 118 1 177 1 145 2 15 1 18 1 22 1 123 1 125 3 96 1 154 1 155 1 128 1 103 1 160 1 130 1 33 1 222 1 35 1 190 1 74 1 132 1 38 2 247 1 197 3 229 1 201 1 
230 1 0 1 2 2 3 1 46 1 203 1 204 1 113 1 89 1 12 1 236 1 175 1 54 2 177 1 118 1 145 1 15 1 18 1 22 1 123 1 125 3 96 1 154 1 103 1 130 1 222 1 35 1 190 1 74 1 132 1 38 2 229 1 197 3 201 1 
230 1 108 1 231 1 2 2 3 1 138 1 47 1 204 1 49 1 86 1 87 1 51 1 12 1 175 2 17 3 57 2 91 4 119 2 148 1 19 1 20 2 122 1 180 1 126 1 216 2 65 1 100 1 30 1 220 1 104 2 35 1 223 1 245 1 224 1 165 1 105 1 192 3 166 1 169 1 251 1 77 1 
230 1 108 1 42 1 2 2 3 1 44 1 138 1 204 1 139 1 49 1 86 1 8 1 50 1 51 1 12 1 175 1 55 1 17 3 57 2 91 4 119 2 148 1 19 1 20 2 122 1 213 1 24 1 180 1 126 1 216 2 218 1 100 1 104 2 35 1 245 1 224 1 165 1 193 1 192 3 166 1 227 1 169 1 251 1 77 1 
230 1 0 1 2 2 3 1 204 1 12 1 89 1 175 1 54 3 145 3 118 1 15 3 18 3 22 1 123 3 96 3 26 1 29 1 31 1 103 3 35 1 74 3 132 3 38 3 134 3 229 3 
230 1 0 1 81 1 2 2 3 1 204 1 12 1 89 1 175 1 54 1 145 1 118 1 15 1 18 1 22 1 123 1 96 1 26 1 29 1 103 1 35 1 74 1 132 1 38 1 134 1 229 1 
230 1 0 1 81 1 2 2 26 1 3 1 204 1 35 1 12 1 89 1 175 1 118 1 134 1 22 1 
230 1 0 1 2 2 3 1 46 1 204 1 113 1 9 1 236 1 12 1 89 1 175 1 54 4 177 1 145 3 118 1 15 3 18 3 22 1 123 3 125 2 96 3 154 1 63 1 26 1 29 1 103 3 130 1 188 1 222 1 35 1 190 1 74 3 132 3 38 4 134 2 197 2 229 3 201 1 
230 1 0 1 2 2 3 1 203 1 204 1 7 1 85 1 12 1 89 1 175 1 237 1 54 1 145 1 118 1 15 1 91 1 18 1 22 1 123 1 96 1 61 1 26 1 29 1 103 1 35 1 74 1 132 1 194 1 38 1 134 1 229 1 
230 1 0 1 2 2 3 1 204 1 12 1 89 1 175 1 54 1 145 1 118 1 15 1 18 1 22 1 123 1 96 1 26 1 29 1 103 1 35 1 74 1 132 1 38 1 134 1 229 1 
191 1 2 1 127 1 234 1 106 1 
2 1 198 1 34 1 210 1 
2 1 168 1 34 1 
2 1 127 1 232 2 234 1 
185 1 34 1 
224 1 166 1 100 1 19 1 
17 1 57 1 119 1 20 1 104 1 51 1 
17 1 57 1 119 1 20 1 104 1 182 1 51 1 
224 1 238 1 218 1 193 1 100 1 213 1 24 1 
132 1 38 2 197 1 125 1 137 1 113 1 188 1 
132 1 38 1 
38 1 91 1 203 1 197 1 125 1 113 1 
132 1 38 1 
91 1 203 1 197 1 125 1 
37 1 
186 1 
186 1 
230 1 
35 1 
230 1 
2 2 3 1 204 1 232 1 6 1 205 1 84 1 187 1 244 1 12 1 175 1 212 1 147 1 21 1 126 1 76 1 
81 1 2 2 3 1 204 1 232 1 6 1 205 1 187 1 12 1 175 1 212 1 147 1 21 1 126 1 76 1 
2 4 82 1 3 2 204 2 232 2 6 2 205 2 187 2 173 1 12 2 175 2 212 2 147 2 21 2 126 2 76 2 
2 2 3 1 204 1 232 1 6 1 205 1 187 1 173 1 12 1 175 1 212 1 147 1 21 1 126 1 76 1 
2 2 109 1 3 1 203 1 204 1 232 1 48 2 6 1 205 1 187 1 12 1 175 1 212 1 147 1 91 1 21 1 197 2 126 1 76 1 78 1 
133 1 
192 2 91 2 203 1 208 1 
67 1 192 2 91 2 203 1 
42 1 2 3 3 1 232 1 204 1 48 1 140 1 6 1 205 1 86 1 208 1 173 1 87 1 142 1 12 1 175 2 143 1 147 1 212 1 91 2 93 1 151 2 21 1 24 1 180 1 126 1 181 1 216 2 218 1 67 1 187 1 131 1 224 1 193 1 192 2 75 1 133 1 197 1 169 1 200 1 76 1 251 1 78 1 
3 1 204 1 6 1 84 1 244 1 
2 2 3 1 204 1 6 1 205 1 208 1 86 1 12 1 212 1 147 1 17 4 91 3 148 1 93 1 19 1 21 1 20 3 216 2 100 1 104 3 224 1 165 1 105 1 166 1 169 1 109 1 47 1 232 1 48 1 51 1 175 3 56 1 57 3 119 3 180 1 126 1 182 1 67 1 187 1 192 2 133 1 197 1 76 1 251 1 78 1 
2 2 109 2 3 1 203 1 204 1 232 1 48 1 6 1 205 1 187 1 12 1 175 1 212 1 147 1 91 3 21 1 197 1 126 1 76 1 78 1 
2 2 82 1 3 1 204 1 232 1 6 1 205 1 187 1 12 1 175 1 212 1 147 1 21 1 126 1 76 1 
2 4 82 1 3 2 204 2 232 2 6 2 84 1 205 2 187 2 244 1 12 2 175 2 212 2 147 2 21 2 126 2 76 2 
25 1 64 1 27 1 248 1 179 1 244 1 
2 2 3 1 109 1 232 1 204 1 203 1 206 1 209 1 12 1 175 1 176 1 91 2 58 1 179 1 126 1 64 1 243 2 226 1 248 1 197 2 76 1 
25 1 64 1 2 2 109 1 3 1 203 1 27 1 204 1 232 1 243 2 209 1 12 1 175 1 226 1 91 2 248 1 197 2 179 1 126 1 76 1 
2 2 109 1 3 1 83 1 232 1 204 1 47 1 86 1 209 1 116 1 51 1 88 1 12 1 175 3 56 1 17 3 91 1 57 2 119 2 93 1 148 1 19 1 20 2 179 1 180 1 126 1 182 1 216 1 25 1 64 1 100 1 27 1 104 2 243 1 224 1 165 1 105 1 166 1 248 1 197 1 76 1 
225 1 219 1 197 1 179 1 188 1 243 1 
203 1 116 1 
203 1 88 1 
25 1 64 1 2 2 109 1 3 1 219 1 83 1 27 1 204 1 232 1 7 1 243 1 12 1 175 1 237 1 225 1 91 2 248 1 197 1 179 2 126 1 76 1 
2 2 3 1 109 1 232 1 204 1 83 1 7 1 12 1 175 1 237 1 91 2 94 1 179 2 126 1 25 1 156 1 64 1 27 1 219 1 243 1 188 1 225 1 248 1 197 1 76 1 
83 1 
42 1 2 3 109 2 3 1 83 1 232 1 204 1 7 1 206 1 86 1 209 1 116 1 87 1 88 1 142 1 12 1 175 2 143 1 237 1 56 2 91 3 93 1 151 4 24 1 179 2 180 1 126 1 181 1 216 2 25 1 64 1 218 1 219 1 27 1 243 2 131 1 224 1 246 1 225 1 193 1 75 1 248 1 197 2 200 1 76 1 
25 1 64 1 27 1 248 1 179 1 244 1 
2 2 109 2 3 1 83 1 232 1 204 1 47 1 7 1 86 1 209 1 116 1 51 1 88 1 12 1 175 3 237 1 56 2 17 5 91 3 57 4 119 4 93 1 148 1 19 1 20 4 179 2 180 1 126 1 182 1 216 2 25 1 64 1 100 1 219 1 27 1 104 4 243 2 224 1 246 1 165 1 225 1 105 1 166 1 248 1 197 2 76 1 

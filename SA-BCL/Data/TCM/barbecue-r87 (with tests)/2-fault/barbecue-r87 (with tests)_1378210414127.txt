#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V ERROR java.lang.NullPointerException 196 168 
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 18 118 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 18 118 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 18 118 151 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 18 118 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V ERROR java.lang.NullPointerException 196 168 85 158 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 3631 | return null
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 14020 | = null
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 1 180 1 208 1 72 1 99 1 137 1 
55 1 180 1 72 1 99 1 137 1 
45 2 48 1 134 1 
70 1 110 2 206 1 160 2 5 2 28 1 31 3 29 2 228 1 17 1 22 1 
0 1 215 1 188 1 110 2 206 1 160 2 5 1 27 1 190 1 99 1 209 1 31 2 29 4 228 1 17 1 22 1 
0 1 215 1 79 1 110 1 206 1 160 1 5 1 190 1 99 1 209 1 31 1 29 3 53 1 178 1 228 1 17 1 16 1 22 1 
0 2 188 1 215 1 96 1 110 1 206 1 160 1 5 1 190 1 99 1 209 1 31 1 29 3 228 1 17 1 22 1 
228 1 235 1 206 1 22 1 
1 1 236 1 110 1 206 1 160 1 5 2 31 1 29 2 228 1 17 1 22 1 
0 1 215 2 79 1 110 1 206 1 160 1 5 1 190 1 99 2 209 1 31 1 29 3 137 1 177 1 178 1 53 1 228 1 17 1 16 1 170 1 
0 1 215 2 79 1 110 1 206 1 160 1 5 1 190 1 99 2 209 1 31 1 29 3 137 1 177 1 178 1 53 1 228 1 17 1 16 1 
78 1 215 1 110 1 206 1 160 1 5 1 99 1 31 1 29 2 137 1 177 1 228 1 17 1 245 1 170 1 21 1 22 1 
78 1 215 1 110 1 206 1 160 1 5 1 99 1 31 1 29 2 137 1 177 1 228 1 17 1 170 1 20 1 21 1 22 1 
78 1 215 1 110 1 206 1 160 1 5 1 99 1 31 1 29 2 137 1 177 1 228 1 17 1 36 1 21 1 22 1 42 1 248 1 
78 1 215 1 110 1 206 1 160 1 5 1 99 1 31 1 29 2 137 1 177 1 228 1 17 1 36 1 170 1 21 1 22 1 42 1 248 1 
70 1 228 1 110 2 160 1 206 1 5 1 17 1 29 3 31 2 22 1 
228 1 160 1 206 1 5 1 29 3 31 2 154 1 63 1 22 1 247 2 
94 1 228 1 160 1 206 1 5 2 29 2 31 1 63 1 22 1 247 1 
228 1 160 1 206 1 5 1 244 1 29 2 31 1 63 1 22 1 247 1 
241 1 228 1 160 1 206 1 5 1 29 2 31 1 63 1 22 1 247 1 
0 4 175 1 215 1 206 1 160 1 5 1 190 1 99 1 31 1 29 3 101 1 63 1 228 1 242 1 213 1 169 1 22 1 247 1 
228 1 168 1 160 1 206 1 5 1 196 1 29 2 31 1 63 1 22 1 247 1 
64 1 33 1 172 3 
172 1 
0 2 3 2 132 1 5 5 7 2 136 3 137 1 11 1 15 1 18 1 19 3 23 1 141 1 25 4 26 2 142 4 27 1 29 4 31 4 30 4 148 1 149 1 35 1 154 1 153 2 39 3 155 1 41 3 156 14 158 2 43 1 159 1 47 1 163 1 50 1 161 2 52 2 54 3 56 3 171 3 174 2 60 1 61 1 63 1 176 3 177 1 65 1 182 3 184 3 68 5 186 1 70 1 71 2 188 1 190 1 72 2 193 1 75 4 76 2 202 1 203 6 204 3 207 2 83 1 87 2 213 1 214 5 216 3 95 1 96 1 98 2 218 3 99 2 102 1 222 1 223 1 224 1 227 4 228 1 230 2 232 1 109 1 236 1 111 2 113 1 239 4 114 1 115 1 116 3 118 1 122 3 244 2 243 2 247 2 127 1 
0 2 188 1 3 2 71 2 70 1 132 1 5 3 72 2 190 1 7 2 137 1 136 3 11 1 75 4 15 1 76 2 18 1 19 3 141 1 202 1 203 6 25 4 204 3 207 2 142 4 30 4 31 2 29 3 83 1 148 1 149 1 87 2 35 1 213 1 153 2 154 1 39 3 155 1 156 4 41 3 158 2 43 1 214 5 159 1 96 1 95 1 216 2 98 2 47 1 163 1 161 2 50 1 218 3 99 2 52 2 102 1 54 3 223 1 224 1 227 4 228 1 230 2 171 3 109 1 174 2 60 1 111 2 61 1 113 1 239 4 114 1 115 1 63 1 176 3 177 1 116 2 65 1 118 1 182 3 243 2 244 2 122 3 184 2 68 5 247 1 127 1 186 1 
43 1 202 1 95 1 60 1 142 4 239 4 102 1 118 1 18 1 154 1 155 1 109 1 
0 2 188 1 3 2 71 2 70 1 130 1 5 3 72 2 190 1 7 2 137 1 136 3 11 1 138 1 75 4 15 1 76 2 18 1 19 3 141 1 202 1 203 6 25 4 204 3 207 2 142 4 30 4 31 2 29 3 83 1 148 1 149 1 87 2 35 1 213 1 153 2 154 1 39 3 155 1 156 4 41 3 158 2 44 1 43 1 214 5 159 1 95 1 216 2 96 1 98 2 47 1 163 1 161 2 50 1 218 3 99 2 52 2 102 1 54 3 224 1 227 4 228 1 230 2 171 3 109 1 174 2 60 1 111 2 61 1 239 4 115 1 63 1 176 3 177 1 116 2 65 1 118 1 182 3 243 2 244 2 122 3 184 2 68 5 247 1 127 1 186 1 
0 3 129 2 188 1 70 1 131 4 133 2 5 3 72 2 190 1 137 1 136 4 192 1 15 1 18 1 198 1 201 4 202 1 203 4 25 4 80 3 142 4 30 2 31 2 29 3 83 1 84 1 148 1 32 1 211 2 35 1 213 1 154 1 155 1 156 8 158 2 43 1 159 1 95 1 96 2 47 1 163 1 50 1 99 2 219 1 220 4 102 1 224 1 227 2 229 2 228 1 231 1 107 2 109 1 60 1 112 2 239 4 114 1 115 1 63 1 176 4 177 1 240 2 65 1 118 1 244 2 126 1 247 1 127 1 186 1 
43 1 202 1 95 1 60 1 132 1 142 4 239 4 102 1 223 1 118 1 123 1 18 1 154 1 155 1 109 1 
0 3 3 2 130 1 132 1 5 4 7 2 136 3 137 1 11 1 138 1 15 1 18 1 19 3 141 1 25 4 142 4 29 3 31 2 30 4 148 1 149 1 35 1 154 1 153 2 155 1 39 3 41 3 156 4 158 2 43 1 159 1 47 1 50 1 161 2 163 1 52 2 54 3 167 1 171 3 174 2 60 1 61 1 63 1 177 1 176 3 65 1 182 3 184 2 68 5 186 1 70 1 71 2 188 1 190 1 72 2 75 4 76 2 202 1 203 6 204 3 207 2 83 1 87 2 213 1 214 5 216 2 95 1 96 2 98 2 218 3 99 2 102 1 223 1 224 1 227 4 228 1 230 2 109 1 236 1 111 2 113 1 239 4 114 1 115 1 116 2 118 1 122 3 244 2 243 2 247 1 127 1 
43 1 202 1 95 1 60 1 142 4 132 1 239 4 102 1 223 1 118 1 123 1 18 1 155 1 109 1 
108 1 
43 1 118 1 142 1 239 1 18 1 
0 2 188 1 3 2 71 2 70 1 130 1 132 1 5 3 72 2 190 1 7 2 137 1 136 3 11 1 138 1 75 4 15 1 76 2 18 1 19 3 141 1 203 6 25 4 204 3 207 2 142 4 30 4 31 2 29 3 83 1 148 1 149 1 87 2 35 1 213 1 153 2 154 1 39 3 155 1 156 4 41 3 158 2 43 1 214 5 159 1 96 1 95 1 216 2 98 2 47 1 163 1 161 2 50 1 218 3 99 2 52 2 102 1 54 3 223 1 224 1 227 4 228 1 230 2 171 3 109 1 174 2 60 1 111 2 61 1 113 1 239 4 115 1 63 1 176 3 177 1 116 2 65 1 118 1 182 3 243 2 244 2 122 3 184 2 68 5 247 1 127 1 186 1 
0 2 188 1 3 2 71 2 70 1 130 1 132 1 5 3 72 2 190 1 7 2 137 1 136 3 11 1 138 1 75 4 15 1 76 2 18 1 19 3 141 1 203 6 25 4 204 3 207 2 142 4 30 4 31 2 29 3 83 1 148 1 149 1 87 2 35 1 213 1 153 2 154 1 39 3 155 1 156 4 41 3 158 2 43 1 214 5 159 1 96 1 95 1 216 2 98 2 47 1 163 1 161 2 50 1 218 3 99 2 52 2 102 1 54 3 223 1 224 1 227 4 228 1 230 2 171 3 109 1 174 2 60 1 111 2 61 1 113 1 239 4 115 1 63 1 176 3 177 1 116 2 65 1 182 3 243 2 244 2 122 3 184 2 67 1 68 5 247 1 127 1 186 1 
0 2 188 1 3 2 71 2 70 1 130 1 132 1 5 3 72 2 190 1 7 2 137 1 136 3 11 1 138 1 75 4 15 1 76 2 18 1 19 3 141 1 202 1 203 6 25 4 204 3 207 2 142 4 30 4 31 2 29 3 83 1 148 1 149 1 87 2 35 1 213 1 151 1 153 2 154 1 39 3 155 1 156 4 41 3 158 2 43 1 159 1 214 5 96 1 95 1 216 2 98 2 47 1 163 1 161 2 50 1 218 3 99 2 52 2 102 1 54 3 223 1 224 1 227 4 228 1 230 2 171 3 109 1 174 2 60 1 111 2 61 1 239 4 115 1 63 1 176 3 177 1 116 2 65 1 118 1 66 1 182 3 243 2 244 2 122 3 123 1 184 2 68 5 247 1 186 1 127 1 
43 1 202 1 95 1 60 1 132 1 142 4 239 4 102 1 223 1 118 1 123 1 18 1 154 1 155 1 109 1 
217 1 232 1 156 1 
226 1 156 1 
106 1 156 1 
128 1 24 1 78 1 203 1 99 1 191 1 137 1 176 1 103 1 21 1 156 1 42 1 
78 1 203 1 99 1 191 1 21 1 156 1 137 1 
106 1 156 1 
203 1 99 1 51 1 137 1 156 1 176 1 
81 1 156 1 
106 1 156 1 
226 1 156 1 
226 1 156 1 
131 1 62 1 100 1 156 1 
212 1 156 1 220 1 
129 1 25 2 5 1 31 1 29 2 63 1 10 2 147 1 73 1 65 1 228 1 106 1 37 1 124 1 91 1 156 2 247 1 
92 1 
129 1 65 1 73 1 228 1 235 1 5 1 37 1 29 2 31 1 91 1 63 1 247 1 147 1 
116 1 11 1 216 1 65 1 228 1 110 1 5 1 17 1 184 1 29 2 31 1 
216 2 110 2 5 1 31 1 29 3 146 1 11 1 116 2 65 1 228 1 17 1 184 2 
0 1 2 1 4 2 3 2 71 2 189 1 5 2 190 1 72 2 7 2 137 1 136 3 11 1 195 1 75 4 17 1 76 2 197 2 19 2 140 1 203 6 204 2 25 4 30 4 209 1 31 1 29 3 85 2 87 2 89 1 153 2 39 2 40 1 41 2 156 4 158 2 214 4 96 1 216 1 98 2 49 1 163 1 50 1 161 2 218 2 99 2 52 2 54 2 104 2 224 1 225 2 227 4 228 1 230 2 57 2 171 2 59 1 174 2 111 2 110 1 236 1 238 1 115 1 176 3 177 1 116 1 65 1 182 2 243 2 244 2 122 2 184 1 246 1 68 4 
214 2 3 1 216 1 46 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 1 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 117 2 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
116 2 11 1 216 2 65 1 228 1 110 2 5 1 17 1 184 2 29 3 31 1 146 1 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 117 2 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
216 1 110 1 5 1 31 1 29 2 146 1 11 1 116 1 12 1 65 1 228 1 17 1 184 1 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 117 2 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 167 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 164 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 2 41 1 68 2 
128 2 3 1 5 4 191 1 7 1 137 1 11 1 75 2 17 1 76 1 19 1 20 1 199 1 21 1 24 2 78 1 203 2 25 2 204 1 27 1 31 2 29 3 146 1 87 1 153 1 39 1 41 1 156 3 158 1 42 3 214 2 216 2 47 1 46 1 98 1 163 1 161 1 218 1 99 1 52 1 103 2 54 1 224 1 228 1 230 1 232 3 171 1 234 1 174 1 236 1 110 2 177 1 176 2 116 2 65 1 119 1 182 1 243 1 244 1 122 1 184 2 68 2 69 1 248 2 
214 2 3 1 216 1 46 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 39 1 41 1 68 2 
0 1 4 1 71 1 3 1 5 1 190 1 72 1 7 1 136 3 11 1 75 2 17 1 76 1 197 1 19 1 203 3 204 1 25 2 30 2 209 1 31 1 29 3 85 1 87 1 153 1 39 1 40 1 41 1 156 2 158 1 214 2 216 1 96 1 98 1 50 1 161 1 218 1 99 1 52 1 54 1 104 1 225 1 227 2 228 1 230 1 57 1 171 1 174 1 111 1 110 1 115 1 116 1 65 1 182 1 243 1 244 1 122 1 184 1 68 2 
216 1 110 1 5 1 31 1 29 2 146 1 11 1 116 1 65 1 228 1 17 1 197 1 184 1 
0 1 4 1 71 1 3 1 72 1 190 1 7 1 136 3 75 2 76 1 197 1 19 1 203 3 25 2 204 1 29 1 30 2 85 1 87 1 213 1 153 1 154 1 38 1 39 2 40 1 156 2 41 1 158 1 214 2 96 1 98 1 46 1 50 1 161 1 164 1 218 1 99 1 52 1 165 1 54 1 104 1 225 1 227 2 230 1 57 1 171 1 174 1 111 1 115 1 182 1 183 1 122 1 244 1 243 1 68 2 
0 1 4 1 3 1 71 1 5 1 190 1 72 1 7 1 136 3 11 1 75 2 17 1 76 1 197 1 19 1 203 3 204 1 25 2 30 2 209 1 31 1 29 3 85 1 87 1 153 1 39 1 40 1 41 1 156 2 158 1 214 2 216 1 96 1 98 1 50 1 161 1 218 1 99 1 52 1 54 1 104 1 167 1 225 1 227 2 228 1 230 1 57 1 171 1 174 1 111 1 110 1 115 1 116 1 65 1 182 1 243 1 244 1 122 1 184 1 68 2 
0 1 4 1 3 1 71 1 5 1 190 1 72 1 7 1 136 3 11 1 75 2 76 1 197 1 19 1 203 3 204 1 25 2 30 2 31 1 29 3 85 1 87 1 213 1 154 1 153 1 39 1 40 1 41 1 156 2 158 1 214 2 96 1 216 1 98 1 161 1 50 1 218 1 99 1 52 1 54 1 104 1 167 1 225 1 227 2 228 1 230 1 57 1 171 1 174 1 111 1 115 1 63 1 116 1 65 1 182 1 243 1 244 1 122 1 184 1 68 2 247 1 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 75 2 17 1 76 1 19 1 171 1 174 1 204 1 25 2 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 111 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 111 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 111 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 2 17 1 76 1 19 1 171 1 174 1 25 2 204 1 110 1 111 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 1 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 111 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
179 1 225 1 227 1 30 1 156 1 
179 1 227 1 71 1 30 1 156 1 
225 1 227 1 74 1 30 1 185 1 156 1 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
128 3 3 1 71 1 5 2 72 1 191 1 7 1 137 1 11 1 75 2 17 1 76 1 19 1 21 1 24 3 78 1 203 3 204 1 25 2 30 2 31 1 29 2 146 1 87 1 153 1 38 1 39 2 41 1 156 2 158 1 42 4 214 2 216 1 46 1 98 1 47 1 163 1 164 1 161 1 218 1 99 1 165 1 52 1 103 3 54 1 225 1 224 1 227 2 228 1 230 1 171 1 174 1 111 1 110 1 177 1 176 3 116 1 65 1 182 1 183 1 243 1 244 1 122 1 184 1 68 2 248 1 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 167 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 111 1 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 111 1 110 1 29 2 31 1 146 1 116 1 117 2 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 1 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 29 2 31 1 146 1 116 1 117 2 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 46 1 98 1 5 1 164 1 161 1 218 1 7 1 165 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 25 3 204 1 110 1 29 2 31 1 146 1 116 1 65 1 87 1 182 1 183 1 243 1 122 1 184 1 38 1 39 2 41 1 68 2 
214 2 3 1 216 1 98 1 5 1 161 1 218 1 7 1 52 1 54 1 11 1 228 1 106 1 75 3 17 1 76 1 19 1 171 1 174 1 204 1 25 3 110 1 29 2 31 1 116 1 65 1 87 1 182 1 243 1 122 1 184 1 39 1 41 1 68 2 
0 1 128 2 187 1 129 1 47 1 5 2 163 1 99 1 135 1 137 1 103 2 53 1 224 1 13 1 228 1 16 1 230 1 17 1 232 3 21 1 24 2 78 1 203 2 79 1 110 1 29 2 31 1 144 1 176 2 177 1 178 1 65 1 120 1 90 1 244 1 245 1 153 1 156 4 42 3 158 1 248 1 
128 2 187 1 129 1 5 1 99 1 135 1 137 1 103 2 224 1 13 1 228 1 168 1 17 1 230 1 196 1 232 3 21 1 24 2 78 1 203 2 110 1 29 2 31 1 144 1 176 2 85 1 65 1 120 1 90 1 244 1 153 1 156 4 42 2 158 1 248 1 
45 1 214 4 3 1 216 1 98 1 5 1 161 1 218 3 7 1 52 1 54 3 167 1 11 1 228 1 75 2 17 1 76 1 19 3 171 3 141 1 174 1 25 2 204 3 111 1 110 1 61 2 31 1 29 2 116 1 65 1 149 1 87 1 182 3 243 1 122 3 184 1 39 3 68 4 41 3 
214 3 216 1 5 1 218 3 9 1 54 3 11 1 228 1 17 1 19 3 171 3 141 1 204 3 110 1 61 3 31 1 29 2 116 1 65 1 149 1 182 3 122 3 184 1 39 3 68 3 41 3 
214 1 216 1 5 1 218 1 54 1 11 1 228 1 17 1 19 1 171 1 141 1 204 1 110 1 61 1 31 1 29 2 116 1 241 1 65 1 149 1 182 1 122 1 184 1 39 1 68 1 41 1 
216 1 110 1 5 1 61 1 31 1 29 2 11 1 116 1 241 1 65 1 228 1 17 1 184 1 141 1 
214 1 216 1 5 1 218 1 54 1 11 1 227 1 228 1 106 1 17 1 58 1 19 1 171 1 141 1 204 1 110 1 207 1 61 1 30 1 31 1 29 2 116 1 179 1 65 1 149 1 182 1 122 1 184 1 39 1 156 1 68 1 41 1 
214 1 216 1 5 1 218 1 54 1 11 1 228 1 17 1 19 1 171 1 141 1 204 1 110 1 61 1 31 1 29 2 116 1 65 1 149 1 182 1 122 1 184 1 39 1 68 1 41 1 
86 1 29 1 93 1 157 1 
205 1 152 1 28 1 29 1 200 1 
14 1 29 1 93 1 
34 2 205 1 28 1 29 1 
125 1 93 1 
24 1 128 1 103 1 42 1 176 1 248 1 
224 1 163 1 99 1 137 1 
24 1 128 1 191 1 103 1 42 1 176 1 248 1 
2 1 4 1 237 1 99 1 137 1 104 1 57 1 
45 1 214 2 25 1 181 1 75 1 243 1 218 1 
214 1 218 1 
214 1 25 1 106 1 75 1 243 1 156 1 
214 1 218 1 
25 1 106 1 75 1 156 1 
63 1 
247 1 
247 1 
110 1 
17 1 
110 1 
173 1 129 1 5 1 82 1 31 1 29 2 145 1 210 1 105 1 65 1 228 1 34 1 139 1 233 1 77 1 
173 1 129 1 5 1 82 1 31 1 29 2 145 1 210 1 241 1 105 1 65 1 228 1 34 1 233 1 77 1 
173 2 129 2 97 1 5 2 82 2 31 2 29 4 145 2 210 2 105 2 65 2 228 2 34 2 139 1 233 2 77 2 
173 1 129 1 235 1 5 1 82 1 143 1 31 1 29 2 145 1 210 1 105 1 65 1 228 1 34 1 233 1 77 1 
173 1 129 1 25 2 5 1 162 2 82 1 31 1 29 2 6 1 145 1 220 1 210 1 105 1 65 1 228 1 34 1 106 1 233 1 156 1 77 1 
8 1 
194 1 106 1 232 2 156 2 
106 1 232 2 156 2 221 1 
0 1 129 1 4 1 96 1 5 2 162 1 50 1 190 1 99 1 6 1 8 1 136 2 221 1 104 1 105 1 228 1 194 1 230 1 57 1 232 2 139 1 233 1 77 1 173 1 203 2 25 1 236 1 82 1 29 3 31 1 209 1 115 1 145 1 210 1 85 1 65 1 34 1 121 1 244 1 153 1 40 1 156 2 158 1 
65 1 105 1 228 1 235 1 143 1 
128 3 129 1 47 1 131 1 5 3 163 1 162 1 99 1 191 1 6 1 8 1 220 1 137 1 103 3 221 1 224 1 105 1 228 1 194 1 230 1 232 2 233 1 21 1 77 1 24 3 173 1 78 1 203 2 25 1 236 1 82 1 29 2 31 1 145 1 210 1 176 3 177 1 65 1 34 1 244 1 153 1 156 3 42 4 158 1 248 1 
173 1 129 1 25 1 5 1 162 1 82 1 31 1 29 2 6 1 145 1 220 2 210 1 105 1 65 1 228 1 34 1 106 1 233 1 156 3 77 1 
173 1 129 1 97 1 5 1 82 1 31 1 29 2 145 1 210 1 105 1 65 1 228 1 34 1 233 1 77 1 
173 2 129 2 97 1 235 1 5 2 82 2 143 1 31 2 29 4 145 2 210 2 105 2 65 2 228 2 34 2 233 2 77 2 
235 1 80 1 231 1 126 1 84 1 192 1 
129 1 5 1 100 1 220 1 166 1 228 1 229 1 106 1 231 1 233 1 201 2 25 2 80 1 29 2 31 1 84 1 65 1 34 1 150 1 88 1 156 2 
129 1 25 2 80 1 5 1 31 1 29 2 100 1 220 1 84 1 192 1 65 1 229 1 228 1 34 1 106 1 231 1 126 1 233 1 156 2 201 2 
128 2 129 1 47 1 131 1 5 3 163 1 99 1 191 1 220 1 137 1 103 2 192 1 224 1 229 1 228 1 231 1 107 1 233 1 21 1 201 1 24 2 78 1 203 1 25 1 236 1 80 1 112 1 29 2 31 1 84 1 176 2 177 1 65 1 34 1 211 1 244 1 126 1 156 1 42 3 158 1 248 1 
240 1 45 1 25 1 80 1 133 1 201 1 
106 1 107 1 
211 1 106 1 
129 1 25 1 80 2 133 1 112 1 5 1 30 1 31 1 29 2 220 1 84 1 192 1 240 1 227 1 65 1 228 1 34 1 231 1 126 1 233 1 156 2 201 1 
129 1 45 1 48 1 5 1 133 1 220 1 192 1 227 1 228 1 231 1 233 1 201 1 25 1 80 2 112 1 29 2 31 1 30 1 84 1 240 1 65 1 34 1 212 1 126 1 156 2 
112 1 
0 1 129 1 4 1 96 1 131 2 133 1 5 2 72 1 190 1 50 1 99 1 220 2 136 4 192 1 104 1 227 1 229 1 228 1 231 1 107 1 57 1 233 1 201 2 203 2 25 2 236 1 80 2 112 1 30 1 29 3 31 1 209 1 115 1 84 1 85 1 240 1 65 1 34 1 211 1 150 1 244 1 126 1 40 1 156 3 158 1 
235 1 80 1 231 1 126 1 84 1 192 1 
128 4 129 1 47 1 131 2 133 1 5 3 163 1 72 1 99 1 191 1 220 2 137 1 103 4 192 1 224 1 227 1 229 1 228 1 231 1 107 1 233 1 21 1 201 2 24 4 78 1 203 2 25 2 236 1 80 2 112 1 30 1 29 2 31 1 84 1 176 4 177 1 240 1 65 1 34 1 211 1 244 1 126 1 156 3 42 5 158 1 248 1 

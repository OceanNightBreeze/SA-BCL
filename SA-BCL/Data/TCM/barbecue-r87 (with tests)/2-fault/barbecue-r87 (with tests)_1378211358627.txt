#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 192 204 6 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 13763 | stmt -> ;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 1 133 1 95 1 232 1 89 1 42 1 
133 1 95 1 232 1 89 1 42 1 
3 1 19 2 72 1 
133 1 53 1 150 1 0 1 151 1 104 1 121 2 110 1 165 1 166 1 168 1 28 1 12 1 48 1 241 1 190 1 211 1 32 1 246 3 
133 1 53 1 151 1 104 2 38 1 121 1 110 1 165 1 25 1 166 1 28 1 48 1 241 1 190 1 32 1 246 3 
165 3 53 1 166 2 209 1 28 1 241 1 121 1 190 2 246 2 32 1 
133 1 53 1 151 1 104 1 121 2 38 1 110 1 165 2 166 1 28 1 48 1 241 1 190 2 172 1 32 1 246 4 
53 1 231 1 28 1 32 1 
100 1 53 1 121 1 165 1 166 2 28 1 241 1 190 1 32 1 246 2 16 1 
133 2 53 1 150 1 0 1 151 1 104 1 121 1 42 1 156 1 110 2 165 1 166 1 168 1 48 1 241 1 243 1 190 1 211 1 32 1 246 3 
133 2 53 1 150 1 0 1 151 1 104 1 121 1 42 1 110 2 165 1 166 1 168 1 48 1 241 1 243 1 190 1 211 1 32 1 246 3 
133 1 53 1 37 1 121 1 42 1 21 1 110 1 165 1 156 1 166 1 28 1 241 1 243 1 190 1 193 1 32 1 246 2 
133 1 53 1 121 1 42 1 21 1 110 1 165 1 156 1 166 1 28 1 241 1 243 1 190 1 193 1 254 1 32 1 246 2 
133 1 53 1 121 1 42 1 21 1 137 1 183 1 110 1 165 1 166 1 28 1 241 1 243 1 190 1 244 1 193 1 32 1 246 2 
133 1 53 1 121 1 42 1 21 1 137 1 183 1 110 1 156 1 165 1 166 1 28 1 241 1 243 1 190 1 244 1 193 1 32 1 246 2 
165 2 53 1 166 1 209 1 28 1 241 1 121 2 190 1 246 3 32 1 
53 1 17 1 120 1 74 2 165 2 166 1 28 1 190 1 32 1 246 3 
74 1 165 1 53 1 166 2 17 1 28 1 4 1 190 1 246 2 32 1 
74 1 165 1 53 1 174 1 166 1 17 1 28 1 190 1 246 2 32 1 
74 1 165 1 53 1 166 1 17 1 28 1 142 1 190 1 246 2 32 1 
133 1 53 1 163 1 17 1 151 1 2 1 104 4 74 1 110 1 165 1 166 1 226 1 28 1 49 1 190 1 158 1 32 1 246 3 
74 1 165 1 53 1 216 1 166 1 17 1 28 1 190 1 235 1 246 2 32 1 
154 1 96 3 138 1 
96 1 
132 1 133 2 1 3 134 3 2 1 135 3 136 1 10 1 9 1 143 4 144 1 146 1 147 1 17 1 151 1 18 1 152 4 24 3 155 5 25 1 27 1 157 3 32 1 159 1 31 2 161 2 162 2 40 3 39 3 38 1 42 1 43 1 165 4 166 5 45 3 47 1 170 1 50 3 172 1 51 2 174 2 55 1 56 6 181 1 57 2 184 2 58 2 187 4 188 1 60 1 192 1 63 4 66 14 198 2 69 1 68 2 201 1 204 1 70 3 74 2 76 2 77 1 209 1 210 1 80 1 213 1 82 1 84 4 85 2 88 5 90 2 220 1 222 3 221 1 224 3 94 1 95 2 97 1 228 3 100 1 104 2 107 3 239 1 238 2 109 1 243 1 246 4 120 1 248 4 124 1 125 2 249 1 251 2 255 2 130 3 
66 4 132 1 133 2 198 2 69 1 68 2 1 3 201 1 2 1 134 3 135 3 136 1 204 1 70 3 74 1 76 2 9 1 10 1 77 1 210 1 209 1 143 4 144 1 146 1 213 1 147 1 82 1 84 4 85 2 151 1 17 1 18 1 152 4 88 5 90 2 220 1 222 3 155 5 24 2 25 1 224 3 27 1 157 3 94 1 95 2 97 1 228 3 31 2 32 1 159 1 161 2 162 2 104 2 38 1 39 3 42 1 107 3 238 2 43 1 109 1 165 2 166 3 45 2 47 1 243 1 50 2 246 3 51 2 174 2 120 1 55 1 56 6 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 60 1 251 2 63 4 192 1 255 2 130 3 
84 4 120 1 18 1 152 4 204 1 181 1 10 1 94 1 249 1 144 1 192 1 147 1 
66 8 133 2 69 1 1 4 201 1 2 1 136 1 204 1 75 1 74 1 10 1 77 1 209 1 210 1 143 2 212 1 144 1 146 1 81 1 215 1 147 1 82 1 84 4 17 1 151 1 18 1 152 4 91 4 220 1 222 4 223 2 25 2 225 4 227 1 94 1 95 2 29 2 32 1 159 1 34 1 229 1 104 3 38 1 42 1 106 2 109 1 165 2 166 3 47 1 243 1 246 3 52 4 174 2 116 3 120 1 56 4 177 2 248 2 181 1 124 1 187 4 59 2 186 2 126 2 188 1 249 1 60 1 192 1 255 2 
66 4 133 2 198 2 69 1 1 3 201 1 134 2 2 1 135 2 136 1 204 1 70 2 73 2 74 1 76 2 10 1 77 1 209 1 210 1 143 4 144 1 213 1 146 1 147 1 82 1 84 4 85 2 17 1 151 1 18 1 152 4 218 2 88 4 90 2 220 1 222 3 155 4 24 2 26 2 224 2 25 1 157 2 94 1 95 2 228 2 31 2 32 1 159 1 161 2 162 2 103 2 104 2 38 1 39 2 42 1 107 2 238 2 43 1 165 2 109 1 166 3 45 2 47 1 242 2 243 1 50 2 246 4 51 2 174 2 55 1 120 1 56 6 178 2 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 61 1 251 2 63 4 192 1 255 2 130 4 
66 4 133 2 198 2 69 1 1 3 201 1 134 2 2 1 135 2 136 1 204 1 70 2 73 2 74 1 76 2 10 1 77 1 209 1 210 1 143 4 144 1 213 1 146 1 147 1 82 1 84 4 85 2 17 1 151 1 18 1 152 4 218 2 88 4 90 2 220 1 222 3 155 4 24 2 26 2 224 2 25 1 157 2 94 1 95 2 228 2 31 2 32 1 159 1 161 2 162 2 103 2 104 2 38 1 39 2 233 1 42 1 107 2 238 2 43 1 165 2 109 1 166 3 45 2 47 1 242 2 243 1 50 2 246 3 51 2 174 2 55 1 120 1 56 6 178 2 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 60 1 61 1 251 2 63 4 192 1 255 2 130 4 
66 4 132 1 133 2 198 2 69 1 68 2 1 3 201 1 2 1 134 3 135 3 136 1 204 1 5 1 70 3 205 1 74 1 76 2 9 1 10 1 77 1 209 1 210 1 143 4 144 1 146 1 147 1 82 1 84 4 85 2 151 1 17 1 217 1 18 1 152 4 88 5 90 2 220 1 222 3 155 5 24 2 224 3 25 1 27 1 157 3 94 1 95 2 228 3 31 2 32 1 159 1 161 2 162 2 104 2 38 1 39 3 42 1 107 3 238 2 109 1 165 2 166 3 45 2 47 1 243 1 50 2 246 3 51 2 174 2 120 1 55 1 56 6 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 251 2 63 4 192 1 255 2 130 3 
30 1 
132 1 133 2 1 3 134 3 2 1 135 3 136 1 5 1 10 1 9 1 143 4 144 1 146 1 147 1 17 1 151 1 18 1 152 4 24 2 155 5 25 2 27 1 157 3 159 1 32 1 31 2 161 2 162 2 39 3 38 1 42 1 43 1 165 2 166 4 45 2 47 1 50 2 51 2 174 2 55 1 56 6 181 1 184 2 58 2 187 4 188 1 60 1 192 1 63 4 66 4 198 2 68 2 69 1 201 1 204 1 70 3 74 1 76 2 77 1 209 1 210 1 213 1 82 1 84 4 85 2 217 1 88 5 90 2 220 1 222 3 224 3 94 1 95 2 97 1 228 3 100 1 104 3 236 1 107 3 238 2 109 1 243 1 246 3 120 1 248 4 124 1 125 2 249 1 251 2 255 2 130 3 
133 2 1 3 134 2 135 2 136 1 139 2 10 1 143 4 144 1 146 1 147 1 151 1 18 1 152 4 24 2 155 4 25 1 26 2 157 2 159 1 32 1 31 2 33 1 161 2 162 2 39 2 38 1 41 1 42 1 43 1 165 2 166 3 45 2 47 1 48 1 50 2 51 2 174 2 55 1 56 6 178 2 180 2 181 1 182 1 184 2 58 2 187 4 188 1 60 1 61 1 62 1 192 1 63 4 194 1 66 4 198 2 197 1 69 1 201 1 204 1 70 2 73 2 76 2 77 1 210 1 209 1 213 1 82 1 83 1 84 4 85 2 218 2 88 4 90 2 220 1 222 3 224 2 94 1 95 2 228 2 99 2 103 2 104 2 233 1 107 2 238 2 109 1 241 1 242 2 243 1 112 1 245 2 114 1 246 3 121 1 248 4 124 1 125 2 249 1 251 2 252 1 253 2 255 2 130 4 
84 1 152 1 204 1 192 1 147 1 
66 4 132 1 133 2 198 2 69 1 68 2 1 3 201 1 2 1 134 3 135 3 136 1 204 1 5 1 70 3 74 1 76 2 9 1 10 1 77 1 209 1 210 1 143 4 146 1 213 1 147 1 82 1 84 4 85 2 151 1 17 1 217 1 18 1 152 4 88 5 90 2 220 1 222 3 155 5 24 2 25 1 224 3 27 1 157 3 94 1 95 2 97 1 228 3 31 2 32 1 159 1 161 2 162 2 104 2 38 1 39 3 42 1 107 3 238 2 43 1 109 1 165 2 166 3 45 2 47 1 243 1 50 2 246 3 51 2 174 2 120 1 55 1 56 6 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 251 2 63 4 192 1 255 2 130 3 
66 4 132 1 133 2 198 2 69 1 68 2 1 3 201 1 2 1 134 3 135 3 136 1 5 1 70 3 74 1 76 2 9 1 10 1 77 1 209 1 210 1 143 4 146 1 213 1 147 1 82 1 84 4 85 2 151 1 17 1 217 1 18 1 152 4 88 5 90 2 220 1 222 3 155 5 24 2 25 1 224 3 27 1 157 3 94 1 95 2 97 1 228 3 31 2 32 1 159 1 161 2 230 1 162 2 104 2 38 1 39 3 42 1 107 3 238 2 43 1 109 1 165 2 166 3 45 2 47 1 243 1 50 2 246 3 51 2 174 2 120 1 55 1 56 6 248 4 181 1 124 1 184 2 125 2 58 2 187 4 188 1 249 1 251 2 63 4 192 1 255 2 130 3 
131 1 132 1 133 2 1 3 134 3 2 1 135 3 136 1 5 1 6 1 10 1 9 1 143 6 144 1 146 1 147 1 17 4 151 1 18 1 152 4 24 5 155 5 25 1 26 2 27 1 157 3 159 1 32 4 31 2 161 2 162 2 39 3 38 1 42 1 43 1 165 5 166 6 45 5 47 1 50 5 51 2 174 2 55 4 56 6 178 2 181 1 184 2 58 2 187 4 188 1 61 1 192 1 63 4 66 6 198 2 69 1 68 2 201 1 204 1 70 3 73 2 74 4 76 2 77 1 208 1 209 1 210 1 213 1 82 1 84 4 86 1 85 2 217 1 218 2 88 5 90 2 220 1 222 3 224 3 94 1 95 2 228 3 103 2 104 2 107 3 238 2 109 4 242 2 243 1 246 9 120 1 248 6 123 1 124 1 125 2 249 1 251 2 255 2 130 5 
66 1 196 1 170 1 
66 1 101 1 
66 1 179 1 
66 1 149 1 133 1 35 1 200 1 56 1 176 1 21 1 42 1 222 1 244 1 193 1 
222 1 66 1 133 1 56 1 250 1 42 1 
149 1 66 1 133 1 56 1 42 1 21 1 193 1 
66 1 179 1 
66 1 93 1 
66 1 179 1 
66 1 101 1 
66 1 101 1 
66 1 65 1 91 1 173 1 
66 1 225 1 117 1 
66 2 195 1 17 1 119 2 202 1 179 1 237 1 74 1 109 1 165 1 166 1 92 1 187 2 59 1 129 1 32 1 246 2 
240 1 
195 1 231 1 17 1 237 1 74 1 109 1 165 1 166 1 92 1 59 1 129 1 32 1 246 2 
55 1 121 2 24 2 109 1 165 1 166 1 141 1 45 2 241 1 50 2 32 1 246 3 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
24 1 165 1 109 1 166 1 45 1 241 1 55 1 121 1 50 1 246 2 32 1 
55 1 121 2 24 2 109 1 165 1 166 1 141 1 45 2 241 1 50 2 32 1 246 3 
194 1 66 4 133 2 197 1 198 2 1 3 201 1 134 2 135 2 136 1 70 2 139 2 76 2 143 4 146 1 83 1 85 2 151 1 218 2 88 4 90 2 220 1 222 3 24 1 155 4 25 1 224 2 157 2 95 2 228 2 31 2 32 1 33 1 99 2 161 2 100 1 162 2 104 1 39 2 41 1 42 1 107 2 238 2 109 1 165 1 166 2 45 1 48 1 241 1 243 1 112 1 50 1 114 1 245 2 246 3 51 2 174 2 55 1 121 1 56 6 248 4 180 2 182 1 184 2 125 2 58 2 187 4 62 1 251 2 252 1 63 4 253 2 255 2 130 2 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
198 1 134 1 135 1 70 1 206 2 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 206 2 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
55 1 121 1 24 1 109 1 165 1 166 1 141 1 45 1 241 1 50 1 32 1 246 2 247 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 206 2 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 236 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 93 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
66 3 133 1 198 1 200 2 201 1 134 1 135 1 70 1 137 2 73 1 76 1 141 1 145 1 149 1 85 1 88 2 21 1 219 1 220 1 222 2 155 2 24 2 224 1 157 1 228 1 98 1 31 1 159 1 32 1 161 1 35 2 100 1 162 1 39 1 42 1 107 1 238 1 109 1 165 2 166 4 45 2 111 1 170 3 241 1 243 1 244 3 50 2 172 1 246 3 51 1 174 1 55 1 121 2 56 2 176 2 125 1 58 1 187 2 251 1 193 1 63 2 254 1 255 1 130 1 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
66 2 133 1 198 1 1 3 134 1 135 1 136 1 70 1 139 1 76 1 143 2 146 1 85 1 151 1 218 1 88 2 90 1 24 1 155 2 25 1 224 1 157 1 95 1 228 1 31 1 32 1 99 1 161 1 162 1 104 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 48 1 241 1 50 1 245 1 246 3 51 1 174 1 55 1 121 1 56 3 248 2 180 1 182 1 184 1 125 1 58 1 187 2 251 1 63 2 253 1 255 1 130 1 
55 1 121 1 24 1 109 1 165 1 166 1 141 1 45 1 241 1 50 1 245 1 32 1 246 2 
66 2 133 1 198 1 1 3 2 1 134 1 135 1 136 1 70 1 73 1 139 1 76 1 143 2 146 1 85 1 151 1 218 1 88 2 90 1 155 2 25 1 224 1 26 1 157 1 95 1 228 1 31 1 99 1 161 1 162 1 103 1 104 1 39 1 107 1 238 1 242 1 245 1 246 1 51 1 174 1 120 1 56 3 248 2 178 1 180 1 182 1 184 1 125 1 58 1 187 2 251 1 63 2 253 1 255 1 130 2 
66 2 133 1 198 1 1 3 134 1 135 1 136 1 70 1 139 1 76 1 143 2 146 1 85 1 151 1 218 1 88 2 90 1 24 1 155 2 25 1 224 1 157 1 95 1 228 1 31 1 32 1 99 1 161 1 162 1 104 1 39 1 236 1 107 1 238 1 109 1 165 1 166 1 45 1 48 1 241 1 50 1 245 1 246 3 51 1 174 1 55 1 121 1 56 3 248 2 180 1 182 1 184 1 125 1 58 1 187 2 251 1 63 2 253 1 255 1 130 1 
66 2 133 1 198 1 1 3 134 1 2 1 135 1 136 1 70 1 139 1 74 1 76 1 143 2 146 1 85 1 151 1 17 1 218 1 88 2 90 1 24 1 155 2 25 1 224 1 157 1 95 1 228 1 31 1 32 1 99 1 161 1 162 1 104 1 39 1 236 1 107 1 238 1 109 1 165 1 166 1 45 1 50 1 245 1 246 3 51 1 174 1 120 1 55 1 56 3 248 2 180 1 182 1 184 1 125 1 58 1 187 2 251 1 63 2 253 1 255 1 130 1 
161 1 198 1 162 1 103 1 134 1 39 1 135 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 24 1 155 2 26 1 224 1 157 1 187 2 251 1 63 2 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 179 1 155 2 24 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 93 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 179 1 155 2 24 1 224 1 184 1 157 1 187 2 251 1 63 2 228 1 31 1 32 1 130 1 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
66 1 199 1 143 1 218 1 248 1 
66 1 199 1 143 1 248 1 90 1 
148 1 66 1 143 1 218 1 248 1 164 1 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
66 2 133 1 198 1 200 3 201 1 134 1 135 1 70 1 137 1 73 1 76 1 141 1 143 2 149 1 85 1 218 1 88 2 21 1 90 1 220 1 222 3 24 1 155 2 26 1 224 1 157 1 95 1 228 1 31 1 159 1 32 1 161 1 35 3 162 1 103 1 39 1 42 1 107 1 238 1 109 1 165 1 166 2 45 1 241 1 242 1 243 1 244 4 50 1 246 2 51 1 174 1 55 1 121 1 56 3 176 3 248 2 178 1 184 1 125 1 58 1 187 2 251 1 193 1 63 2 255 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 236 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 184 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
198 1 134 1 135 1 70 1 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 26 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 242 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 2 
198 1 134 1 135 1 70 1 206 2 73 1 76 1 141 1 85 1 88 2 24 1 155 2 224 1 93 1 157 1 228 1 32 1 31 1 161 1 162 1 103 1 39 1 107 1 238 1 109 1 165 1 166 1 45 1 241 1 50 1 246 2 51 1 55 1 121 1 178 1 179 1 184 1 187 3 251 1 63 3 130 1 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 206 2 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 179 1 155 2 24 1 26 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 103 1 134 1 135 1 39 1 70 1 73 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 141 1 241 1 242 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 178 1 179 1 155 2 24 1 26 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 2 
161 1 198 1 162 1 134 1 135 1 39 1 70 1 107 1 76 1 238 1 165 1 109 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 88 2 179 1 155 2 24 1 224 1 157 1 187 3 251 1 63 3 228 1 31 1 32 1 130 1 
66 4 35 2 133 1 0 1 200 2 37 1 104 1 201 1 71 1 42 1 137 1 165 1 109 1 166 2 168 1 169 1 241 1 170 3 79 1 243 1 171 1 211 1 244 3 246 2 150 1 174 1 121 1 56 2 176 2 21 1 23 1 220 1 222 2 125 1 58 1 59 1 193 1 159 1 32 1 255 1 256 1 
99 1 66 4 35 2 133 1 197 1 200 2 201 1 71 1 42 1 137 1 235 1 139 1 140 1 165 1 109 1 166 1 169 1 241 1 170 3 79 1 171 1 244 3 246 2 216 1 174 1 87 1 121 1 56 2 176 2 21 1 180 1 23 1 220 1 222 2 125 1 58 1 59 1 127 1 128 1 193 1 253 1 32 1 255 1 256 1 
132 1 161 1 198 1 162 1 134 3 39 3 135 3 70 3 236 1 107 3 76 1 9 1 238 1 109 1 165 1 166 1 45 1 241 1 50 1 246 2 51 1 85 1 55 1 121 1 19 1 88 4 155 4 24 1 224 3 184 1 27 2 157 3 187 2 251 1 63 2 228 3 31 1 32 1 130 3 
132 1 134 3 39 3 135 3 70 3 107 3 207 1 9 1 109 1 165 1 166 1 45 1 241 1 50 1 246 2 55 1 121 1 88 3 155 3 24 1 224 3 27 3 157 3 228 3 32 1 130 3 
132 1 134 1 39 1 135 1 70 1 107 1 9 1 109 1 165 1 166 1 45 1 142 1 241 1 50 1 246 2 55 1 121 1 88 1 155 1 24 1 224 1 27 1 157 1 228 1 32 1 130 1 
55 1 121 1 9 1 24 1 109 1 165 1 166 1 27 1 45 1 142 1 241 1 50 1 32 1 246 2 
66 1 132 1 68 1 199 1 134 1 39 1 135 1 70 1 107 1 9 1 109 1 165 1 166 1 45 1 241 1 143 1 50 1 246 2 55 1 121 1 88 1 248 1 179 1 155 1 24 1 224 1 27 1 185 1 157 1 228 1 32 1 130 1 
132 1 134 1 39 1 135 1 70 1 107 1 9 1 109 1 165 1 166 1 45 1 241 1 50 1 246 2 55 1 121 1 88 1 155 1 24 1 224 1 27 1 157 1 228 1 32 1 130 1 
54 1 102 1 22 1 246 1 
12 1 78 1 175 1 15 1 246 1 
54 1 13 1 246 1 
12 1 78 1 105 2 246 1 
54 1 214 1 
222 1 35 1 200 1 176 1 244 1 137 1 
133 1 201 1 42 1 220 1 
222 1 149 1 35 1 200 1 176 1 244 1 137 1 
99 1 133 1 197 1 46 1 42 1 253 1 180 1 
155 2 162 1 187 1 189 1 19 1 70 1 63 1 
155 1 70 1 
155 1 66 1 162 1 187 1 63 1 179 1 
155 1 70 1 
66 1 187 1 63 1 179 1 
17 1 
74 1 
74 1 
121 1 
241 1 
121 1 
115 1 36 1 153 1 234 1 105 1 7 1 108 1 8 1 109 1 165 1 166 1 59 1 14 1 32 1 246 2 
115 1 36 1 153 1 234 1 105 1 7 1 108 1 8 1 109 1 165 1 166 1 59 1 142 1 32 1 246 2 
115 2 36 2 153 2 234 2 105 2 7 2 108 2 8 2 109 2 165 2 166 2 167 1 59 2 14 1 32 2 246 4 
115 1 36 1 231 1 153 1 234 1 105 1 7 1 108 1 8 1 109 1 165 1 166 1 59 1 64 1 32 1 246 2 
115 1 66 1 36 1 153 1 234 1 105 1 122 2 179 1 7 1 108 1 8 1 109 1 165 1 225 1 166 1 187 2 59 1 191 1 32 1 246 2 
20 1 
66 2 170 2 113 1 179 1 
66 2 170 2 203 1 179 1 
99 1 66 2 133 1 100 1 36 1 1 2 104 1 203 1 136 1 234 1 105 1 7 1 139 1 108 1 8 1 165 1 109 1 166 2 48 1 170 2 14 1 113 1 146 1 246 3 115 1 174 1 151 1 56 2 153 1 20 1 122 1 180 1 182 1 25 1 125 1 58 1 187 1 59 1 191 1 253 1 32 1 255 1 160 1 
8 1 109 1 231 1 32 1 64 1 
66 3 35 3 133 1 100 1 36 1 200 3 201 1 203 1 234 1 105 1 42 1 137 1 7 1 108 1 8 1 165 1 109 1 166 3 170 2 243 1 244 4 113 1 246 2 115 1 149 1 174 1 56 2 176 3 153 1 20 1 21 1 122 1 91 1 220 1 222 3 225 1 125 1 58 1 187 1 59 1 191 1 193 1 32 1 159 1 255 1 
115 1 66 3 36 1 153 1 234 1 105 1 122 1 179 1 7 1 108 1 8 1 109 1 165 1 225 2 166 1 187 1 59 1 191 1 32 1 246 2 
115 1 36 1 153 1 234 1 105 1 7 1 108 1 8 1 109 1 165 1 166 1 167 1 59 1 32 1 246 2 
115 2 36 2 231 1 153 2 234 2 105 2 7 2 108 2 8 2 109 2 165 2 166 2 167 1 59 2 64 1 32 2 246 4 
34 1 229 1 116 1 231 1 212 1 81 1 
34 1 66 2 65 1 105 1 165 1 109 1 166 1 44 1 11 1 212 1 246 2 115 1 52 2 116 1 118 1 179 1 223 1 225 1 59 1 187 2 32 1 
115 1 65 1 66 2 34 1 52 2 229 1 116 1 105 1 179 1 223 1 109 1 165 1 225 1 166 1 187 2 59 1 212 1 81 1 32 1 246 2 
66 1 34 1 35 2 229 1 133 1 100 1 200 2 201 1 105 1 42 1 137 1 106 1 165 1 109 1 166 3 243 1 244 3 212 1 246 2 81 1 115 1 149 1 52 1 174 1 116 1 56 1 176 2 21 1 91 1 220 1 222 2 223 1 225 1 187 1 59 1 186 1 29 1 193 1 32 1 159 1 255 1 
52 1 116 1 187 1 126 1 19 1 177 1 
186 1 179 1 
106 1 179 1 
115 1 66 2 34 1 52 1 229 1 116 2 105 1 177 1 248 1 109 1 165 1 225 1 166 1 187 1 59 1 126 1 143 1 29 1 212 1 81 1 32 1 246 2 
34 1 66 2 229 1 105 1 72 1 165 1 109 1 166 1 143 1 212 1 246 2 81 1 115 1 52 1 116 2 117 1 19 1 177 1 248 1 225 1 59 1 187 1 126 1 29 1 32 1 
29 1 
99 1 66 3 34 1 229 1 133 1 100 1 1 4 104 1 136 1 105 1 106 1 139 1 165 1 109 1 166 2 48 1 143 1 212 1 146 1 246 3 81 1 115 1 52 2 116 2 174 1 118 1 151 1 56 2 177 1 248 1 91 2 180 1 182 1 223 1 25 1 225 2 187 2 59 1 186 1 126 1 95 1 29 1 253 1 32 1 255 1 
34 1 229 1 116 1 231 1 212 1 81 1 
66 3 34 1 35 4 229 1 133 1 100 1 200 4 201 1 105 1 42 1 137 1 106 1 165 1 109 1 166 3 143 1 243 1 244 5 212 1 246 2 81 1 115 1 149 1 52 2 174 1 116 2 56 2 176 4 177 1 21 1 248 1 91 2 220 1 222 4 223 1 225 2 187 2 59 1 186 1 126 1 95 1 29 1 193 1 32 1 159 1 255 1 

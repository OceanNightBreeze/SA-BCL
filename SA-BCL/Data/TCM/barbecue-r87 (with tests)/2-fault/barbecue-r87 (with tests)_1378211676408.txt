#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 213 197 77 207 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 6520 | % -> >>
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
174 1 149 1 45 1 233 1 163 1 70 1 
174 1 149 1 233 1 163 1 70 1 
202 2 165 1 252 1 
5 1 209 1 25 1 96 2 166 1 180 2 231 3 250 1 134 2 234 1 36 2 
73 1 104 1 174 1 5 1 209 1 25 1 94 1 11 1 96 2 166 1 180 4 231 2 114 1 134 1 99 1 36 2 
231 1 134 1 5 1 144 1 25 1 209 1 96 1 36 1 180 2 166 1 
187 1 104 1 174 1 5 1 209 1 25 1 11 1 96 1 166 1 180 3 41 1 231 1 248 1 114 1 134 1 99 4 85 1 36 1 
185 1 53 1 5 1 209 1 25 1 96 1 166 1 180 2 231 1 134 1 36 1 
104 1 174 1 2 1 5 1 209 1 25 1 11 1 96 1 166 1 180 3 231 1 114 1 134 1 99 1 117 1 235 1 36 1 136 1 
73 1 104 1 174 1 5 1 209 1 25 1 11 1 96 1 166 1 180 3 80 1 231 1 114 1 134 1 99 2 36 1 
25 1 209 1 67 1 166 1 
231 1 134 2 5 1 25 1 209 1 108 1 96 1 36 1 138 1 180 2 166 1 
104 1 174 2 2 1 5 1 25 1 11 2 96 1 166 1 180 3 231 1 149 1 114 1 82 1 134 1 116 1 99 1 117 1 235 1 36 1 136 1 
104 1 174 2 2 1 5 1 25 1 11 2 96 1 166 1 180 3 231 1 149 1 114 1 134 1 116 1 99 1 117 1 235 1 36 1 136 1 
22 1 174 1 188 1 5 1 209 1 25 1 11 1 96 1 166 1 180 2 231 1 149 1 134 1 98 1 82 1 116 1 36 1 
22 1 174 1 5 1 209 1 25 1 11 1 96 1 166 1 180 2 28 1 231 1 149 1 134 1 98 1 82 1 116 1 36 1 
22 1 174 1 76 1 5 1 57 1 209 1 25 1 8 1 11 1 96 1 166 1 180 2 231 1 149 1 134 1 98 1 116 1 36 1 
22 1 174 1 76 1 5 1 57 1 209 1 25 1 8 1 11 1 96 1 166 1 180 2 231 1 149 1 82 1 134 1 98 1 116 1 36 1 
231 2 134 1 5 1 25 1 209 1 234 1 96 1 36 2 180 3 166 1 
140 1 231 2 134 1 3 1 25 1 209 1 96 1 97 2 180 3 166 1 
140 1 231 1 199 1 134 2 25 1 209 1 96 1 97 1 180 2 166 1 
140 1 231 1 150 1 134 1 25 1 209 1 96 1 97 1 180 2 166 1 
249 1 118 1 194 3 
194 1 
139 3 140 1 141 2 1 1 142 1 3 1 145 2 146 1 147 1 13 2 150 2 149 1 17 1 154 2 155 1 156 2 158 4 161 3 20 1 162 5 25 1 26 2 29 1 30 1 31 1 33 1 169 3 34 2 35 4 37 4 39 1 174 2 180 4 42 1 181 2 43 1 44 6 52 4 54 3 192 3 191 3 59 1 61 1 63 4 64 1 66 1 68 1 69 14 72 3 71 1 73 1 196 3 197 1 78 3 77 1 201 3 80 1 83 2 203 2 86 1 87 2 94 1 95 1 97 2 213 1 214 3 217 1 99 2 218 2 219 3 222 1 225 1 106 5 107 3 108 1 110 1 228 2 229 1 111 4 231 4 232 1 114 1 116 1 233 2 120 1 234 1 125 1 236 2 127 3 243 2 245 1 244 2 246 3 134 5 137 1 
73 1 139 3 72 3 196 2 140 1 141 2 142 1 1 1 197 1 78 3 77 1 3 1 145 2 146 1 201 2 80 1 13 2 147 1 149 1 150 2 17 1 154 2 155 1 203 2 156 2 158 4 20 1 161 3 87 2 86 1 162 5 25 1 26 2 97 1 213 1 29 1 31 1 30 1 214 3 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 39 1 225 1 174 2 106 5 107 3 228 2 110 1 111 4 180 3 42 1 231 2 181 2 232 1 43 1 114 1 44 6 116 1 233 2 120 1 234 1 125 1 236 2 52 4 127 3 54 3 243 2 244 2 245 1 191 3 59 1 192 3 61 1 63 4 134 3 64 1 66 1 68 1 69 4 137 1 
39 1 1 1 197 1 77 1 3 1 59 1 213 1 147 1 63 4 17 1 64 1 35 4 
73 1 140 1 141 2 1 1 197 1 77 1 3 1 146 1 80 2 147 1 15 3 149 1 150 2 17 1 155 1 84 2 157 2 20 1 159 1 25 1 210 2 211 1 97 1 213 1 29 1 31 1 32 2 217 1 99 3 101 2 169 4 35 4 222 1 37 2 223 2 39 1 225 1 174 2 178 4 110 1 111 2 180 3 231 2 182 1 43 1 114 1 44 4 116 1 233 2 47 1 234 1 125 1 237 1 126 2 52 4 240 4 54 4 190 1 129 4 59 1 61 1 63 4 134 3 64 1 66 1 68 1 254 1 69 8 137 1 
73 1 72 2 139 2 196 2 140 1 141 2 142 1 1 1 197 1 200 2 78 4 77 1 3 1 146 1 201 2 80 1 13 2 147 1 149 1 150 2 17 1 154 2 155 1 203 2 18 1 156 2 158 4 20 1 161 2 87 2 86 1 89 2 162 4 25 1 26 2 97 1 213 1 29 1 214 2 31 1 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 39 1 225 1 173 2 174 2 106 4 107 2 228 2 110 1 111 4 180 4 231 2 181 2 43 1 114 1 44 6 116 1 233 2 234 1 236 2 52 4 127 2 55 2 54 3 243 2 244 2 245 1 130 2 192 2 191 2 59 1 61 1 63 4 134 3 64 1 66 1 195 2 68 1 69 4 137 1 
73 1 72 2 139 2 196 2 140 1 141 2 142 1 1 1 197 1 200 2 78 4 77 1 3 1 146 1 201 2 80 1 13 2 147 1 149 1 150 2 16 1 17 1 154 2 155 1 203 2 18 1 156 2 158 4 20 1 161 2 87 2 86 1 89 2 162 4 25 1 26 2 97 1 213 1 29 1 214 2 31 1 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 39 1 225 1 173 2 174 2 106 4 107 2 228 2 110 1 111 4 180 3 231 2 181 2 43 1 114 1 44 6 116 1 233 2 234 1 125 1 236 2 52 4 127 2 55 2 54 3 243 2 244 2 245 1 130 2 192 2 191 2 59 1 61 1 63 4 134 3 64 1 66 1 195 2 68 1 69 4 137 1 
73 1 139 3 72 3 196 2 140 1 141 2 1 1 197 1 198 1 78 3 77 1 3 1 145 2 146 1 201 2 80 1 13 2 147 1 149 1 150 2 17 1 154 2 155 1 203 2 156 2 158 4 20 1 161 3 87 2 162 5 25 1 27 1 26 2 97 1 213 1 29 1 31 1 30 1 214 3 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 224 1 39 1 225 1 174 2 106 5 107 3 228 2 110 1 111 4 180 3 231 2 181 2 232 1 43 1 114 1 44 6 116 1 233 2 120 1 234 1 236 2 52 4 127 3 54 3 243 2 244 2 245 1 191 3 59 1 192 3 61 1 63 4 134 3 64 1 66 1 68 1 69 4 137 1 
175 1 
139 3 140 1 141 2 1 1 142 1 3 1 145 2 146 1 147 1 13 2 150 2 149 1 17 1 154 2 155 1 156 2 158 4 161 3 20 1 162 5 25 1 26 2 27 1 29 1 30 1 31 1 34 2 169 3 35 4 37 4 171 1 39 1 174 2 180 3 42 1 181 2 43 1 44 6 52 4 54 3 192 3 59 1 191 3 61 1 63 4 64 1 66 1 68 1 69 4 72 3 73 1 196 2 197 1 198 1 77 1 78 3 201 2 80 2 203 2 86 1 87 2 97 1 213 1 214 3 217 1 99 3 218 2 219 2 222 1 225 1 106 5 108 1 107 3 110 1 228 2 111 4 231 2 232 1 114 1 116 1 233 2 120 1 234 1 236 2 125 1 127 3 243 2 245 1 244 2 134 4 137 1 
139 2 141 2 142 1 1 1 5 1 146 1 147 1 13 2 148 1 150 2 149 1 16 1 17 1 154 2 155 1 18 1 156 2 158 4 161 2 20 1 162 4 25 1 26 2 29 1 34 2 170 2 169 3 35 4 37 4 36 1 39 1 173 2 174 2 180 3 181 2 43 1 44 6 183 2 46 1 51 1 52 4 54 3 55 2 59 1 191 2 192 2 60 1 61 1 63 4 64 1 66 1 195 2 68 1 69 4 72 2 73 1 196 2 197 1 77 1 78 4 200 2 201 2 81 1 80 1 203 2 86 1 87 2 89 2 208 1 90 1 93 1 213 1 214 2 217 1 99 2 218 2 219 2 222 1 104 1 225 1 106 4 107 2 110 1 228 2 111 4 231 2 114 1 116 1 233 2 122 2 234 1 124 2 125 1 236 2 127 2 242 1 243 2 244 2 245 1 130 2 131 1 134 3 251 2 137 1 
197 1 63 1 77 1 17 1 35 1 
73 1 139 3 72 3 196 2 140 1 141 2 142 1 197 1 1 1 198 1 78 3 77 1 3 1 145 2 146 1 201 2 80 1 13 2 149 1 150 2 17 1 154 2 155 1 203 2 156 2 158 4 20 1 161 3 87 2 86 1 162 5 25 1 27 1 26 2 97 1 213 1 29 1 31 1 30 1 214 3 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 39 1 225 1 174 2 106 5 107 3 228 2 110 1 111 4 180 3 42 1 231 2 181 2 232 1 43 1 114 1 44 6 116 1 233 2 120 1 234 1 236 2 52 4 127 3 54 3 243 2 244 2 245 1 191 3 59 1 192 3 61 1 63 4 134 3 64 1 66 1 68 1 69 4 137 1 
73 1 139 3 72 3 196 2 140 1 141 2 142 1 197 1 1 1 198 1 78 3 3 1 145 2 146 1 201 2 80 1 13 2 149 1 150 2 17 1 154 2 155 1 203 2 156 2 158 4 20 1 161 3 87 2 86 1 162 5 25 1 27 1 26 2 97 1 213 1 29 1 31 1 30 1 214 3 217 1 99 2 218 2 219 2 169 3 34 2 35 4 222 1 37 4 39 1 225 1 174 2 106 5 107 3 228 2 110 1 111 4 180 3 42 1 231 2 181 2 232 1 43 1 114 1 44 6 116 1 233 2 120 1 234 1 236 2 52 4 127 3 241 1 54 3 243 2 244 2 245 1 191 3 59 1 192 3 61 1 63 4 134 3 64 1 66 1 68 1 69 4 137 1 
139 7 140 9 141 2 1 1 142 1 3 1 143 1 145 2 146 1 147 1 13 2 14 1 151 1 149 2 150 2 17 1 154 2 155 1 18 1 156 2 158 4 20 1 161 7 21 1 162 9 25 10 27 1 26 2 29 1 30 5 31 1 167 1 169 3 34 2 35 4 37 6 171 1 39 1 172 1 173 2 40 1 174 3 180 20 181 2 43 1 44 6 52 4 55 2 54 3 58 1 192 7 191 7 59 1 61 1 63 4 64 1 65 1 66 1 195 2 68 10 69 7 73 1 72 7 196 10 197 1 198 1 200 2 77 1 78 9 201 10 80 1 203 2 206 1 207 1 86 1 87 2 89 2 92 1 97 10 213 1 214 7 216 1 217 1 99 2 218 2 219 10 102 1 222 1 225 1 226 1 106 9 107 7 110 1 228 2 111 6 230 1 231 11 232 5 114 1 116 1 233 2 120 5 121 1 234 1 236 2 127 7 243 2 245 9 244 2 130 2 134 11 133 1 137 1 
179 1 95 1 69 1 
128 1 174 1 149 1 44 1 169 1 69 1 
22 1 174 1 149 1 44 1 98 1 7 1 69 1 
22 1 174 1 76 1 23 1 7 1 109 1 149 1 98 1 44 1 169 1 69 1 38 1 
4 1 69 1 
4 1 69 1 
186 1 69 1 
220 1 69 1 
4 1 69 1 
220 1 69 1 
220 1 69 1 
62 1 178 1 69 1 50 1 
12 1 240 1 69 1 
88 2 140 1 52 2 74 1 4 1 25 1 180 2 97 1 231 1 193 1 32 1 134 1 48 1 49 1 253 1 68 1 69 2 
168 1 
140 1 74 1 25 1 180 2 97 1 231 1 193 1 32 1 134 1 48 1 67 1 49 1 68 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 152 2 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
196 1 5 1 6 1 245 1 25 1 201 1 180 2 231 1 134 1 219 1 204 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 152 2 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 171 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 2 141 1 76 3 78 1 5 1 7 1 8 2 79 1 201 2 13 1 149 1 150 1 204 1 203 1 156 1 158 2 20 1 161 1 87 1 22 1 23 2 162 2 25 1 94 1 95 3 28 1 214 1 215 1 98 1 218 1 219 2 34 1 169 2 36 2 38 2 174 1 106 2 108 1 107 1 228 1 109 2 180 3 231 2 181 1 113 1 44 2 116 1 236 1 52 2 127 1 55 1 243 1 245 1 244 1 247 1 192 1 191 1 61 1 134 4 66 1 68 1 69 3 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
196 2 5 1 245 1 25 1 201 2 180 3 231 1 134 1 219 2 204 1 68 1 36 2 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
196 1 231 1 134 1 5 1 219 1 245 1 25 1 201 1 68 1 36 1 180 2 
196 2 5 1 245 1 25 1 201 2 180 3 231 1 134 1 219 2 204 1 68 1 36 2 
139 2 72 2 196 1 141 2 78 2 5 1 146 1 201 1 81 1 80 1 13 2 148 1 149 1 150 2 154 2 203 2 156 2 158 4 20 1 161 2 87 2 89 2 208 1 90 1 93 1 162 4 25 1 26 2 29 1 214 2 99 1 218 2 219 1 169 3 170 2 34 2 37 4 36 1 104 1 174 2 106 4 108 1 107 2 228 2 111 4 180 3 231 1 181 2 114 1 44 6 116 1 183 2 46 1 233 2 122 2 124 2 51 1 236 2 127 2 52 4 54 3 242 1 243 2 245 1 244 2 131 1 192 2 191 2 60 1 61 1 134 2 251 2 68 1 69 4 
72 1 139 1 196 1 78 1 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 152 2 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
139 1 72 1 196 1 141 1 78 1 5 1 146 1 201 1 80 1 13 1 150 1 154 1 203 1 156 1 158 2 161 1 87 1 89 1 162 2 25 1 26 1 29 1 214 1 99 1 218 1 219 1 170 1 34 1 37 2 36 1 104 1 174 1 106 2 107 1 228 1 111 2 180 3 231 1 181 1 114 1 44 3 183 1 233 1 122 1 124 1 236 1 127 1 52 2 54 3 242 1 243 1 245 1 244 1 192 1 191 1 134 1 251 1 68 1 69 2 
196 1 5 1 245 1 25 1 201 1 180 2 231 1 134 1 183 1 219 1 204 1 68 1 36 1 
139 1 72 1 141 1 78 2 200 1 3 1 146 1 80 1 13 1 150 1 154 1 203 1 156 1 158 2 161 1 87 1 89 1 162 2 26 1 29 1 31 1 214 1 99 1 218 1 170 1 34 1 37 2 173 1 174 1 106 2 107 1 228 1 111 2 180 1 181 1 114 1 44 3 183 1 233 1 122 1 124 1 236 1 127 1 52 2 54 3 55 1 242 1 243 1 244 1 130 1 191 1 192 1 251 1 195 1 69 2 
139 1 72 1 196 1 141 1 78 1 5 1 146 1 201 1 80 1 13 1 150 1 154 1 203 1 156 1 158 2 161 1 87 1 89 1 162 2 25 1 26 1 29 1 214 1 99 1 218 1 219 1 170 1 34 1 37 2 36 1 171 1 104 1 174 1 106 2 107 1 228 1 111 2 180 3 231 1 181 1 114 1 44 3 183 1 233 1 122 1 124 1 236 1 127 1 52 2 54 3 242 1 243 1 245 1 244 1 192 1 191 1 134 1 251 1 68 1 69 2 
72 1 139 1 196 1 140 1 141 1 78 1 3 1 146 1 201 1 80 1 13 1 150 1 154 1 203 1 156 1 158 2 161 1 87 1 89 1 162 2 25 1 26 1 97 1 29 1 31 1 214 1 99 1 218 1 219 1 170 1 34 1 37 2 171 1 174 1 106 2 107 1 228 1 111 2 180 3 231 1 181 1 114 1 44 3 183 1 233 1 122 1 124 1 236 1 127 1 52 2 54 3 242 1 243 1 245 1 244 1 192 1 191 1 134 1 251 1 68 1 69 2 
72 1 139 1 196 1 173 1 78 2 200 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 203 1 204 1 156 1 158 2 161 1 87 1 236 1 127 1 52 2 55 1 243 1 245 1 162 2 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 78 1 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 78 1 200 1 4 1 106 2 5 1 107 1 201 1 180 2 13 1 231 1 181 1 154 1 204 1 203 1 156 1 158 2 161 1 87 1 236 1 52 2 127 1 55 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
89 1 184 1 37 1 69 1 111 1 
26 1 184 1 37 1 69 1 111 1 
89 1 24 1 221 1 37 1 69 1 111 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 141 1 76 4 78 2 200 1 5 1 7 1 8 1 201 1 13 1 149 1 150 1 154 1 203 1 204 1 156 1 158 2 161 1 20 1 87 1 89 1 22 1 23 3 162 2 25 1 26 1 214 1 98 1 218 1 219 1 34 1 169 3 37 2 36 1 38 3 173 1 174 1 106 2 107 1 228 1 109 3 111 2 180 2 231 1 181 1 44 3 116 1 233 1 236 1 127 1 52 2 55 1 243 1 245 1 244 1 130 1 192 1 191 1 61 1 134 2 66 1 195 1 68 1 69 2 
72 1 139 1 171 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 78 1 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 152 2 154 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 152 2 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 173 1 78 2 200 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 204 1 203 1 156 1 158 3 161 1 87 1 236 1 52 3 127 1 55 1 243 1 162 2 245 1 25 1 130 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 195 1 68 1 36 1 
72 1 139 1 196 1 78 1 4 1 106 2 5 1 107 1 201 1 180 2 231 1 13 1 181 1 203 1 156 1 158 3 161 1 87 1 236 1 127 1 52 3 243 1 162 2 245 1 25 1 192 1 191 1 214 1 134 1 218 1 219 1 34 1 68 1 36 1 
141 1 0 1 2 1 76 3 174 1 5 1 227 1 8 1 109 2 228 1 180 2 231 1 149 1 150 1 44 2 117 1 116 1 235 1 20 1 22 1 188 1 23 2 244 1 25 1 164 1 189 1 95 3 212 1 61 1 32 1 132 1 98 1 134 2 99 1 66 1 169 2 68 1 136 1 36 1 69 4 38 2 
141 1 0 1 75 1 76 3 174 1 105 1 5 1 227 1 8 1 109 2 228 1 180 2 231 1 149 1 150 1 44 2 46 1 122 1 20 1 124 1 185 1 53 1 22 1 91 1 23 2 244 1 25 1 164 1 189 1 95 3 212 1 61 1 32 1 132 1 98 1 134 1 135 1 251 1 170 1 169 2 68 1 36 1 69 4 38 2 
171 1 139 3 72 3 196 1 78 3 106 4 5 1 107 3 201 1 180 2 13 1 231 1 181 1 232 2 154 1 202 1 203 1 120 1 156 1 158 2 161 3 87 1 236 1 52 2 127 3 243 1 162 4 245 1 25 1 191 3 192 3 214 3 30 1 134 1 218 1 219 1 34 1 68 1 36 1 
139 3 72 3 196 1 78 3 106 3 5 1 107 3 10 1 201 1 180 2 231 1 232 3 120 1 161 3 127 3 162 3 245 1 25 1 191 3 192 3 214 3 30 1 134 1 219 1 68 1 36 1 
139 1 72 1 196 1 78 1 106 1 5 1 144 1 107 1 201 1 180 2 231 1 232 1 120 1 161 1 127 1 162 1 245 1 25 1 191 1 192 1 214 1 30 1 134 1 219 1 68 1 36 1 
196 1 5 1 144 1 245 1 25 1 201 1 180 2 231 1 232 1 134 1 219 1 120 1 68 1 36 1 
72 1 139 1 196 1 127 1 78 1 106 1 5 1 245 1 162 1 25 1 107 1 201 1 180 2 192 1 191 1 231 1 232 1 30 1 214 1 134 1 219 1 120 1 68 1 36 1 161 1 
139 1 72 1 196 1 78 1 4 1 106 1 5 1 176 1 145 1 107 1 201 1 111 1 180 2 231 1 232 1 120 1 184 1 161 1 127 1 162 1 245 1 25 1 191 1 192 1 214 1 30 1 134 1 219 1 68 1 37 1 69 1 36 1 
239 1 205 1 177 1 180 1 
238 1 250 1 100 1 9 1 180 1 
56 1 205 1 180 1 
115 2 250 1 100 1 180 1 
19 1 205 1 
76 1 23 1 7 1 8 1 169 1 109 1 38 1 
76 1 23 1 8 1 169 1 109 1 38 1 
61 1 174 1 149 1 20 1 
174 1 149 1 153 1 46 1 122 1 170 1 124 1 
139 1 52 1 202 1 162 2 156 1 158 1 160 1 
139 1 162 1 
52 1 4 1 162 1 156 1 158 1 69 1 
139 1 162 1 
52 1 4 1 158 1 69 1 
140 1 
97 1 
97 1 
36 1 
5 1 
36 1 
141 1 76 3 174 1 7 1 8 1 108 1 178 1 109 2 180 2 231 1 15 1 150 1 115 1 149 1 44 1 116 1 157 1 123 1 20 1 237 1 126 1 52 1 240 1 22 1 23 2 25 1 190 1 129 1 211 1 61 1 32 1 134 3 98 1 101 1 66 1 169 2 68 1 254 1 69 1 223 1 38 2 
237 1 52 2 240 1 4 1 25 1 190 1 129 2 211 1 180 2 231 1 15 1 62 1 115 1 32 1 134 1 254 1 68 1 123 1 69 2 223 1 
237 1 15 1 67 1 190 1 254 1 211 1 
4 1 112 1 180 2 231 1 15 1 115 1 119 1 123 1 240 1 52 2 25 1 190 1 129 2 32 1 62 1 134 1 68 1 254 1 69 2 103 1 223 1 
4 1 157 1 
126 1 4 1 
111 1 180 2 231 1 15 2 115 1 84 1 123 1 237 1 52 1 240 1 25 1 190 1 129 1 210 1 211 1 32 1 134 1 101 1 68 1 254 1 69 2 37 1 
52 1 15 1 202 1 84 1 129 1 210 1 
237 1 240 1 52 1 25 1 190 1 129 1 210 1 111 1 211 1 180 2 12 1 231 1 15 2 115 1 32 1 134 1 202 1 84 1 101 1 252 1 254 1 68 1 123 1 37 1 69 2 
101 1 
104 1 141 1 174 1 108 1 146 1 178 2 111 1 180 3 80 1 231 1 15 2 115 1 114 1 150 1 44 2 119 1 233 1 84 1 122 1 157 1 123 1 124 1 237 1 126 1 52 2 240 2 54 4 242 1 25 1 190 1 129 2 210 1 211 1 29 1 32 1 134 2 99 1 251 1 101 1 170 1 68 1 254 1 37 1 69 3 223 1 
237 1 15 1 67 1 190 1 254 1 211 1 
141 1 76 5 174 1 7 1 8 1 108 1 178 2 109 4 111 1 180 2 231 1 15 2 150 1 115 1 149 1 44 2 116 1 233 1 84 1 157 1 123 1 20 1 237 1 126 1 52 2 240 2 22 1 23 4 25 1 190 1 129 2 210 1 211 1 61 1 32 1 134 3 98 1 101 1 66 1 169 4 68 1 254 1 37 1 69 3 223 1 38 4 

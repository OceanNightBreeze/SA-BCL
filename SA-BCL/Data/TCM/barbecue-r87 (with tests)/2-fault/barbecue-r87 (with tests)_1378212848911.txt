#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 224 199 148 96 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 6520 | % -> >>
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 44 1 170 1 221 1 46 1 93 1 
44 1 170 1 221 1 46 1 93 1 
239 1 266 2 243 1 
159 2 257 1 188 1 131 1 147 1 168 3 225 2 90 2 45 1 122 2 30 1 
159 4 164 1 142 1 131 1 147 1 168 2 225 2 90 1 194 1 45 1 109 1 122 2 30 1 93 1 124 1 156 1 
159 2 225 1 168 1 147 1 90 1 45 1 122 1 30 1 131 1 73 1 
48 1 159 3 164 1 142 4 131 1 120 1 145 1 147 1 168 1 225 1 90 1 194 1 229 1 45 1 109 1 122 1 30 1 93 1 
159 2 225 1 168 1 147 1 90 1 20 1 45 1 231 1 122 1 30 1 131 1 
159 3 164 1 85 1 142 1 131 1 167 1 57 1 147 1 168 1 225 1 90 1 194 1 149 1 45 1 109 1 122 1 30 1 93 1 
159 3 164 1 142 2 131 1 147 1 168 1 225 1 90 1 194 1 45 1 109 1 122 1 30 1 93 1 156 1 12 1 
147 1 264 1 45 1 30 1 
159 2 131 1 28 1 211 1 147 1 168 1 225 1 90 2 45 1 122 1 30 1 
159 3 164 1 85 1 22 1 142 1 131 1 167 1 57 1 168 1 225 1 29 1 90 1 194 1 149 1 45 1 109 2 122 1 46 1 30 1 93 2 
159 3 164 1 85 1 22 1 142 1 131 1 167 1 57 1 168 1 225 1 90 1 194 1 149 1 45 1 109 2 122 1 46 1 30 1 93 2 
159 2 22 1 102 1 131 1 147 1 168 1 225 1 90 1 29 1 150 1 45 1 109 1 122 1 46 1 30 1 93 1 178 1 
159 2 22 1 131 1 147 1 168 1 225 1 90 1 29 1 150 1 230 1 45 1 109 1 122 1 46 1 30 1 93 1 178 1 
159 2 22 1 37 1 131 1 147 1 168 1 225 1 90 1 150 1 45 1 109 1 122 1 46 1 30 1 93 1 32 1 178 1 139 1 
159 2 22 1 37 1 131 1 147 1 168 1 225 1 29 1 90 1 150 1 45 1 109 1 122 1 46 1 30 1 93 1 32 1 178 1 139 1 
159 3 131 1 188 1 147 1 168 2 225 2 90 1 45 1 122 1 30 1 
159 3 140 1 147 1 168 2 90 1 45 1 122 1 30 1 62 2 176 1 
159 2 168 1 147 1 90 2 45 1 122 1 62 1 30 1 118 1 176 1 
159 2 147 1 168 1 90 1 45 1 122 1 30 1 62 1 173 1 176 1 
130 1 103 1 132 3 
132 1 
127 1 0 1 129 1 135 4 3 14 136 1 9 6 10 5 11 2 12 1 13 2 140 1 141 2 17 1 21 1 22 1 24 3 25 3 23 1 142 2 27 1 146 3 28 1 148 1 152 2 153 1 30 1 156 1 157 4 158 2 159 4 160 3 162 1 163 4 164 1 39 3 43 1 168 4 171 4 173 2 46 1 175 1 176 1 177 4 179 2 49 2 182 1 186 1 188 1 189 1 193 2 62 2 196 3 63 3 64 1 66 1 199 1 200 1 68 4 205 1 206 2 69 1 212 3 214 1 76 2 77 3 78 1 79 3 80 3 216 1 218 2 219 2 221 2 222 3 223 1 224 1 90 5 228 1 91 3 92 1 93 2 234 2 237 1 238 2 99 5 100 1 241 2 106 3 251 1 252 1 114 2 121 1 263 3 265 1 124 1 
200 1 127 1 68 4 129 1 205 1 206 2 135 4 3 4 136 1 212 3 214 1 76 2 77 3 9 6 78 1 79 2 11 2 10 5 80 3 216 1 12 1 218 2 219 2 13 2 140 1 141 2 17 1 221 2 21 1 22 1 222 3 23 1 24 3 142 2 27 1 146 3 224 1 148 1 228 1 90 3 91 3 152 2 92 1 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 3 160 3 162 1 237 1 164 1 163 4 238 2 100 1 99 5 39 2 168 2 171 4 106 3 46 1 173 2 175 1 176 1 177 4 251 1 179 2 252 1 49 2 114 2 182 1 186 1 188 1 189 1 193 2 263 3 121 1 62 1 196 2 63 3 265 1 64 1 199 1 66 1 
140 1 237 1 129 1 17 1 163 4 23 1 100 1 135 4 224 1 148 1 199 1 66 1 
127 1 203 4 129 1 204 2 205 1 135 4 3 8 136 1 214 1 8 1 9 4 78 1 216 1 12 2 82 2 140 1 16 4 17 1 221 2 21 1 84 1 22 1 23 1 142 3 146 4 224 1 88 2 148 1 228 1 90 3 30 1 93 2 156 1 235 2 157 2 159 3 35 1 162 1 237 1 163 4 164 1 238 2 100 1 101 1 168 2 171 2 107 2 46 1 173 2 175 1 249 2 176 1 177 4 251 1 252 1 182 1 256 3 258 2 188 1 190 1 189 1 263 4 123 1 62 1 197 1 64 1 199 1 66 1 268 4 
127 1 68 4 129 1 205 1 206 2 135 4 136 1 3 4 212 4 214 1 76 2 77 2 9 6 78 1 79 2 10 4 11 2 80 2 216 1 12 1 218 2 219 2 13 2 140 1 141 2 220 2 17 1 221 2 21 1 22 1 222 2 24 2 23 1 142 2 146 3 224 1 148 1 228 1 90 3 91 2 152 2 92 1 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 4 160 2 162 1 237 1 163 4 164 1 238 2 99 4 100 1 39 2 105 2 168 2 171 4 106 2 46 1 173 2 111 2 176 1 177 4 251 1 113 2 252 1 49 2 114 2 182 1 188 1 189 1 58 1 193 2 195 2 263 3 121 1 62 1 196 2 63 2 64 1 267 2 199 1 66 1 
127 1 68 4 129 1 205 1 206 2 135 4 136 1 3 4 212 4 214 1 76 2 77 2 9 6 78 1 79 2 10 4 11 2 80 2 216 1 12 1 218 2 219 2 13 2 140 1 141 2 220 2 17 1 18 1 221 2 21 1 22 1 222 2 24 2 23 1 142 2 146 3 224 1 148 1 228 1 90 3 91 2 152 2 92 1 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 3 160 2 162 1 237 1 163 4 164 1 238 2 99 4 100 1 39 2 105 2 168 2 171 4 106 2 46 1 173 2 111 2 175 1 176 1 177 4 251 1 113 2 252 1 49 2 114 2 182 1 188 1 189 1 58 1 193 2 195 2 263 3 121 1 62 1 196 2 63 2 64 1 267 2 199 1 66 1 
200 1 127 1 68 4 128 1 129 1 205 1 206 2 135 4 3 4 136 1 212 3 214 1 76 2 77 3 9 6 78 1 79 2 11 2 10 5 80 3 216 1 12 1 218 2 219 2 13 2 140 1 141 2 15 1 17 1 221 2 21 1 22 1 222 3 23 1 24 3 26 1 142 2 146 3 224 1 148 1 228 1 90 3 91 3 152 2 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 3 160 3 162 1 237 1 164 1 163 4 238 2 100 1 99 5 39 2 168 2 171 4 106 3 46 1 173 2 176 1 177 4 251 1 179 2 252 1 49 2 114 2 182 1 186 1 188 1 189 1 193 2 263 3 62 1 196 2 63 3 265 1 64 1 199 1 66 1 
127 1 129 1 131 1 135 4 3 4 136 1 5 1 9 6 11 2 10 4 12 1 13 2 141 2 17 1 18 1 21 1 22 1 23 1 24 2 142 2 143 1 146 3 148 1 152 2 153 1 30 1 156 1 157 4 158 2 33 1 159 3 160 2 162 1 164 1 163 4 39 2 41 2 168 2 171 4 173 2 46 1 175 1 177 4 49 2 182 1 52 2 188 1 187 2 189 1 58 1 194 1 193 2 195 2 196 2 63 2 66 1 199 1 68 4 201 1 205 1 206 2 71 1 212 4 214 1 76 2 77 2 78 1 79 2 216 1 80 2 81 1 218 2 219 2 220 2 221 2 222 2 224 1 225 1 90 3 228 1 91 2 92 1 93 2 234 2 237 1 238 2 100 1 99 4 240 2 245 1 105 2 106 2 111 2 113 2 251 1 250 1 252 1 253 1 114 2 254 2 117 1 121 1 263 3 267 2 
56 1 
127 1 129 1 135 4 136 1 3 4 9 6 10 5 11 2 12 2 13 2 140 1 141 2 17 1 15 1 21 1 22 1 24 3 23 1 142 3 26 1 27 1 28 1 146 3 148 1 152 2 153 1 30 1 156 1 157 4 158 2 159 3 160 3 162 1 163 4 164 1 39 2 168 2 171 4 173 2 46 1 176 1 175 1 177 4 179 2 49 2 182 1 188 1 186 1 189 1 193 2 196 2 62 1 63 3 64 1 66 1 199 1 200 1 68 4 205 1 206 2 212 3 214 1 76 2 77 3 78 1 79 2 80 3 216 1 218 2 219 2 221 2 222 3 224 1 90 4 228 1 91 3 92 1 93 2 234 2 94 1 237 1 238 2 99 5 100 1 106 3 251 1 252 1 114 2 121 1 263 3 265 1 
135 1 148 1 237 1 163 1 199 1 
200 1 127 1 68 4 129 1 205 1 206 2 135 4 3 4 136 1 212 3 214 1 76 2 77 3 9 6 78 1 79 2 11 2 10 5 80 3 216 1 12 1 218 2 219 2 13 2 140 1 141 2 15 1 17 1 221 2 21 1 22 1 222 3 24 3 26 1 142 2 27 1 146 3 224 1 148 1 228 1 90 3 91 3 152 2 92 1 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 3 160 3 162 1 237 1 164 1 163 4 238 2 100 1 99 5 39 2 168 2 171 4 106 3 46 1 173 2 176 1 177 4 251 1 179 2 252 1 49 2 114 2 182 1 186 1 188 1 189 1 193 2 263 3 121 1 62 1 196 2 63 3 265 1 64 1 199 1 66 1 
200 1 127 1 68 4 129 1 205 1 206 2 135 4 3 4 136 1 212 3 214 1 76 2 77 3 9 6 78 1 79 2 11 2 10 5 80 3 216 1 12 1 218 2 219 2 13 2 140 1 141 2 15 1 17 1 221 2 21 1 22 1 222 3 24 3 26 1 142 2 27 1 146 3 224 1 228 1 90 3 91 3 152 2 92 1 153 1 30 1 234 2 93 2 156 1 158 2 157 4 159 3 160 3 162 1 237 1 164 1 163 4 238 2 100 1 99 5 39 2 168 2 171 4 106 3 46 1 173 2 176 1 177 4 251 1 179 2 252 1 49 2 114 2 182 1 186 1 188 1 189 1 261 1 193 2 263 3 121 1 62 1 196 2 63 3 265 1 64 1 199 1 66 1 
125 1 127 1 129 1 133 1 135 4 3 7 136 1 9 6 10 9 11 2 12 1 13 2 140 1 141 2 15 1 17 1 21 10 22 1 24 7 23 1 26 1 142 2 146 3 148 1 152 2 153 9 30 10 156 1 157 6 158 2 159 20 160 7 162 1 163 4 164 1 38 1 166 1 39 10 168 11 171 6 46 2 173 2 176 9 177 4 179 2 49 2 50 1 182 1 183 1 185 1 186 5 188 1 54 1 189 1 58 1 193 2 195 2 196 10 62 10 63 7 64 1 66 1 199 1 200 5 68 4 205 1 206 2 208 1 212 9 214 1 76 2 77 7 78 1 79 10 80 7 216 1 218 2 219 2 220 2 221 2 222 7 86 1 224 1 228 1 90 11 91 7 92 1 234 2 93 3 94 1 236 1 96 1 237 1 98 1 238 2 99 9 100 1 242 1 244 1 104 1 105 2 247 1 106 7 110 1 111 2 113 2 251 1 252 1 114 2 121 1 263 3 265 5 267 2 
3 1 69 1 210 1 
3 1 137 1 
3 1 72 1 
3 1 72 1 
3 1 72 1 
3 1 137 1 
146 1 3 1 60 1 202 1 150 1 9 1 46 1 233 1 93 1 31 1 139 1 178 1 
146 1 181 1 3 1 9 1 46 1 93 1 
3 1 60 1 150 1 9 1 46 1 93 1 178 1 
3 1 137 1 
3 1 226 1 
3 1 40 1 268 1 
3 1 246 1 75 1 203 1 
159 2 14 1 126 2 97 1 19 1 21 1 3 2 88 1 137 1 168 1 213 1 90 1 6 1 30 1 62 1 176 1 177 2 
119 1 
14 1 88 1 159 2 168 1 97 1 90 1 213 1 21 1 6 1 264 1 62 1 30 1 176 1 
68 2 206 1 131 1 3 2 212 1 76 1 77 1 78 1 9 3 79 1 11 1 10 2 80 1 12 1 218 1 13 1 219 1 141 1 21 1 221 1 222 1 24 1 142 1 143 1 225 1 228 1 90 1 91 1 152 1 153 1 30 1 234 1 93 1 157 2 158 1 159 3 160 1 164 1 238 1 240 1 99 2 39 1 41 1 168 1 171 2 106 1 173 1 113 1 177 2 49 1 254 1 114 1 52 1 187 1 194 1 193 1 263 3 196 1 63 1 
159 2 115 1 21 1 240 1 39 1 131 1 168 1 225 1 90 1 153 1 30 1 196 1 79 1 
68 2 206 1 3 2 212 2 76 1 77 1 9 3 78 1 11 1 10 2 80 1 12 1 218 1 13 1 219 1 140 1 141 1 220 1 221 1 222 1 24 1 142 1 143 1 228 1 91 1 152 1 93 1 234 1 157 2 158 1 159 1 160 1 164 1 238 1 240 1 99 2 41 1 105 1 171 2 106 1 173 1 111 1 113 1 177 2 49 1 254 1 114 1 52 1 187 1 193 1 195 1 263 3 63 1 64 1 267 1 
68 2 206 1 131 1 3 2 212 1 76 1 77 1 78 1 9 3 79 1 11 1 10 2 80 1 12 1 218 1 13 1 219 1 141 1 21 1 221 1 222 1 24 1 142 1 143 1 225 1 228 1 90 1 91 1 152 1 153 1 30 1 234 1 93 1 94 1 157 2 158 1 159 3 160 1 164 1 238 1 240 1 99 2 39 1 41 1 168 1 171 2 106 1 173 1 113 1 177 2 49 1 254 1 114 1 52 1 187 1 194 1 193 1 263 3 196 1 63 1 
68 2 206 1 3 2 212 1 76 1 77 1 78 1 9 3 79 1 11 1 10 2 80 1 12 1 218 1 13 1 219 1 140 1 141 1 21 1 221 1 222 1 24 1 142 1 143 1 228 1 90 1 91 1 152 1 153 1 30 1 234 1 93 1 94 1 157 2 158 1 159 3 160 1 164 1 238 1 240 1 99 2 39 1 41 1 168 1 171 2 106 1 173 1 176 1 113 1 177 2 49 1 254 1 114 1 52 1 187 1 193 1 263 3 62 1 196 1 63 1 64 1 
158 1 159 2 160 1 68 2 99 2 131 1 39 1 105 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 11 1 10 2 177 2 80 1 218 1 13 1 219 1 49 1 115 1 114 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 99 2 131 1 39 1 105 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 2 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 2 80 1 218 1 13 1 219 1 49 1 114 1 115 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
157 1 3 1 171 1 259 1 113 1 
157 1 3 1 141 1 171 1 259 1 
157 1 3 1 171 1 172 1 154 1 113 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
127 1 68 2 202 3 206 1 131 1 3 2 212 2 76 1 77 1 9 3 79 1 11 1 10 2 139 4 80 1 218 1 13 1 219 1 141 1 220 1 21 1 221 1 22 1 222 1 24 1 146 3 225 1 90 2 91 1 150 1 152 1 153 1 30 1 233 3 234 1 93 1 32 1 31 3 158 1 157 2 159 2 160 1 162 1 238 1 99 2 39 1 105 1 168 1 171 2 106 1 46 1 173 1 111 1 113 1 178 1 177 2 49 1 182 1 115 1 114 1 60 1 193 1 195 1 196 1 63 1 267 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 94 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 134 2 105 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 99 2 131 1 39 1 134 2 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 160 1 68 3 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
159 3 115 1 21 1 39 2 131 1 168 1 225 2 90 1 153 1 30 1 196 2 79 2 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
159 3 115 1 21 1 39 2 131 1 168 1 225 2 90 1 153 1 30 1 196 2 79 2 
127 1 68 4 201 1 206 2 131 1 71 1 3 4 212 2 5 1 76 2 77 2 78 1 9 6 79 1 11 2 10 4 80 2 12 1 81 1 218 2 13 2 219 2 141 2 21 1 221 2 22 1 222 2 24 2 142 1 143 1 146 3 28 1 225 1 228 1 90 2 91 2 152 2 153 1 30 1 234 2 93 2 33 1 157 4 158 2 159 3 160 2 162 1 164 1 238 2 240 2 99 4 39 1 41 2 245 1 168 1 171 4 106 2 46 1 173 2 250 1 113 2 177 4 253 1 49 2 254 2 114 2 117 1 52 2 187 2 194 1 193 2 263 3 196 1 63 2 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 68 3 160 1 206 1 99 2 131 1 39 1 134 2 105 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 220 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 267 1 
159 2 225 1 168 1 90 1 21 1 153 1 196 1 30 1 79 1 131 1 39 1 
158 1 159 2 160 1 68 3 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 134 2 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
159 2 115 1 1 1 21 1 39 1 131 1 168 1 225 1 90 1 153 1 30 1 196 1 79 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 134 2 137 1 168 1 212 1 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 94 1 
158 1 159 2 160 1 68 3 206 1 99 2 131 1 39 1 137 1 168 1 212 2 76 1 106 1 77 1 79 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 21 1 222 1 24 1 225 1 90 1 91 1 153 1 196 1 30 1 63 1 234 1 267 1 
127 1 68 2 202 2 69 3 2 1 131 1 3 3 212 1 76 1 77 1 9 2 79 2 10 2 11 1 139 3 80 1 218 1 13 1 219 1 21 1 22 1 222 1 24 1 28 1 146 2 225 2 90 4 91 1 150 1 230 1 151 1 152 1 153 1 30 1 233 2 234 1 93 1 32 2 31 2 158 1 159 3 160 1 162 1 238 1 99 2 39 2 168 2 106 1 46 1 173 1 177 2 178 1 180 1 49 1 114 1 182 1 115 1 51 1 60 1 193 1 195 1 196 2 63 1 124 1 
158 1 159 2 160 1 68 3 99 2 131 1 39 1 137 1 168 1 212 1 76 1 106 1 77 1 79 1 111 1 10 2 11 1 177 3 80 1 218 1 13 1 219 1 49 1 114 1 115 1 21 1 222 1 24 1 225 1 90 1 91 1 195 1 153 1 196 1 30 1 63 1 234 1 
95 1 159 2 127 1 162 1 202 2 238 1 69 3 131 1 41 1 74 1 3 4 168 1 47 1 9 2 46 1 173 1 139 3 178 1 253 1 254 1 20 1 21 1 52 1 187 1 87 1 53 1 146 2 88 1 191 1 225 1 89 1 227 1 90 1 262 1 193 1 150 1 152 1 231 1 30 1 233 2 93 1 31 2 32 1 67 1 
159 2 127 1 162 1 202 2 238 1 102 1 69 3 131 1 167 1 3 4 168 1 9 2 46 1 173 1 139 3 178 1 182 1 85 1 21 1 22 1 142 1 87 1 53 1 146 2 57 1 88 1 191 1 225 1 89 1 227 1 90 2 149 1 193 1 150 1 152 1 30 1 233 2 93 1 31 2 32 1 67 1 
200 1 159 2 160 1 21 1 222 1 99 1 24 1 131 1 39 1 186 1 225 1 168 1 212 1 90 1 91 1 106 1 153 1 77 1 196 1 30 1 79 1 63 1 265 1 10 1 80 1 
158 1 200 1 159 2 68 2 160 3 206 1 99 4 39 1 131 1 212 3 168 1 76 1 106 3 77 3 79 1 11 1 10 4 177 2 80 3 218 1 219 1 13 1 49 1 114 1 21 1 222 3 24 3 186 1 225 1 90 1 91 3 153 1 30 1 196 1 63 3 234 1 265 2 266 1 94 1 
200 1 34 1 159 2 160 3 99 3 39 1 131 1 212 3 168 1 106 3 77 3 79 1 10 3 80 3 21 1 222 3 24 3 186 1 225 1 90 1 91 3 153 1 30 1 196 1 63 3 265 3 
200 1 159 2 160 1 99 1 39 1 131 1 73 1 212 1 168 1 106 1 77 1 79 1 10 1 80 1 21 1 222 1 24 1 186 1 225 1 90 1 91 1 153 1 30 1 196 1 63 1 265 1 
159 2 21 1 186 1 39 1 131 1 73 1 168 1 225 1 90 1 153 1 30 1 196 1 79 1 265 1 
157 1 200 1 159 2 160 1 99 1 39 1 131 1 3 1 137 1 212 1 168 1 171 1 106 1 77 1 79 1 10 1 80 1 179 1 21 1 116 1 222 1 259 1 24 1 186 1 225 1 90 1 91 1 153 1 30 1 196 1 63 1 265 1 
159 1 209 1 112 1 
159 1 59 1 255 2 257 1 
159 1 7 1 112 1 70 1 
159 1 59 1 61 1 257 1 65 1 
155 1 112 1 
253 1 52 1 46 1 187 1 93 1 41 1 144 1 
146 1 202 1 233 1 32 1 31 1 139 1 
127 1 162 1 46 1 93 1 
146 1 60 1 202 1 233 1 32 1 31 1 139 1 
218 1 3 1 137 1 68 1 10 1 177 1 
106 1 10 1 
3 1 137 1 68 1 177 1 
218 1 68 1 207 1 106 1 10 2 266 1 177 1 
106 1 10 1 
62 1 
176 1 
62 1 
225 1 
225 1 
131 1 
159 2 21 1 165 1 184 1 42 1 55 1 3 3 88 1 137 1 168 1 169 1 90 1 4 1 248 1 30 1 62 1 174 1 176 1 177 1 268 2 
159 2 21 1 165 1 184 1 42 1 55 1 88 1 168 1 169 1 90 1 4 1 30 1 62 1 232 1 176 1 
159 4 21 2 165 2 184 2 42 2 55 2 88 2 260 1 168 2 169 2 90 2 4 2 264 1 30 2 62 2 232 1 176 2 
159 2 21 1 165 1 184 1 42 1 73 1 55 1 88 1 168 1 169 1 90 1 4 1 30 1 62 1 176 1 
159 4 21 2 165 2 184 2 42 2 55 2 88 2 168 2 169 2 90 2 4 2 30 2 62 2 232 1 176 2 217 1 
159 2 21 1 165 1 184 1 42 1 55 1 88 1 168 1 169 1 90 1 4 1 30 1 62 1 176 1 217 1 
159 2 21 1 165 1 184 1 42 1 55 1 88 1 260 1 168 1 169 1 90 1 4 1 264 1 30 1 62 1 176 1 
159 2 21 1 165 1 184 1 42 1 55 1 3 1 88 1 137 1 168 1 169 1 90 1 4 1 248 1 30 1 62 1 174 2 176 1 177 2 268 1 
192 1 
3 2 137 1 161 1 69 2 
3 2 137 1 83 1 69 2 
159 3 161 1 164 1 238 1 165 1 69 2 41 1 42 1 3 2 168 1 169 1 4 1 108 1 248 1 9 2 173 1 78 1 174 1 176 1 177 1 217 1 12 1 254 1 83 1 21 1 184 1 52 1 142 1 143 1 187 1 55 1 28 1 88 1 228 1 90 2 192 1 193 1 263 2 152 1 62 1 30 1 93 1 64 1 
260 1 21 1 264 1 184 1 30 1 
159 2 127 1 162 1 203 1 202 3 161 1 238 1 165 1 69 2 42 1 3 3 168 1 169 1 4 1 248 1 9 2 173 1 46 1 174 1 176 1 177 1 139 4 178 1 83 1 182 1 21 1 22 1 184 1 55 1 146 3 28 1 88 1 60 1 90 3 192 1 193 1 150 1 152 1 62 1 30 1 233 3 93 1 31 3 32 1 268 1 
157 1 159 2 204 1 239 1 101 1 40 1 3 2 168 1 171 1 8 1 176 1 249 1 177 1 256 2 16 1 21 1 84 1 258 1 88 1 90 1 123 1 62 1 30 1 266 1 268 1 
204 1 
157 1 159 3 203 2 164 1 204 1 238 1 101 1 41 1 3 3 168 1 171 1 107 1 8 1 78 1 173 1 9 2 249 1 176 1 177 2 12 1 82 1 254 1 256 2 16 2 221 1 21 1 84 1 258 1 52 1 142 1 143 1 187 1 28 1 88 1 228 1 90 2 263 4 123 1 62 1 30 1 93 1 198 1 64 1 268 2 235 1 
256 1 84 1 264 1 8 1 123 1 101 1 
127 1 202 4 203 2 204 1 3 3 8 1 9 2 139 5 82 1 16 2 84 1 21 1 221 1 22 1 28 1 146 4 88 1 90 3 150 1 30 1 233 4 93 1 32 1 31 4 235 1 157 1 159 2 162 1 238 1 101 1 168 1 171 1 107 1 46 1 173 1 176 1 249 1 178 1 177 2 182 1 256 2 258 1 60 1 123 1 62 1 268 2 
256 1 84 1 264 1 8 1 123 1 101 1 
159 2 101 1 3 2 168 1 246 1 137 1 138 1 215 1 8 1 176 1 177 2 256 1 16 2 21 1 88 1 90 1 62 1 30 1 198 1 235 1 268 1 
159 2 256 1 16 2 84 1 21 1 101 1 3 2 88 1 137 1 246 1 168 1 90 1 123 1 8 1 30 1 62 1 176 1 177 2 268 1 235 1 
159 2 127 1 162 1 203 1 202 2 204 1 238 1 101 1 3 1 168 1 107 1 8 1 9 1 173 1 46 1 176 1 177 1 139 3 178 1 82 1 182 1 256 1 16 1 21 1 84 1 22 1 146 2 28 1 88 1 60 1 90 3 150 1 123 1 62 1 30 1 233 2 93 1 31 2 32 1 268 1 235 1 
256 1 16 1 258 1 249 1 266 1 177 1 
82 1 137 1 
137 1 107 1 
157 1 159 2 204 1 101 1 3 2 168 1 171 1 8 1 176 1 249 1 177 1 256 2 16 1 21 1 84 1 258 1 88 1 90 1 123 1 62 1 30 1 268 1 

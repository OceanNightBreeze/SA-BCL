#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 110 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 154 19 132 165 166 109 153 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.ClassCastException 161 98 29 23 116 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V ERROR java.lang.ClassCastException 161 98 29 23 131 64 38 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V ERROR java.lang.ClassCastException 161 98 29 181 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V ERROR java.lang.ClassCastException 161 98 29 181 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V ERROR java.lang.NullPointerException 161 98 29 181 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.ClassCastException 161 98 29 181 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V ERROR java.lang.ClassCastException 161 98 29 181 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.ClassCastException 161 98 29 23 116 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.ClassCastException 161 98 29 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V | CONDITION | 12998 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:size()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
200 1 62 1 220 1 177 1 126 1 
194 1 180 2 105 1 
200 1 62 1 196 1 220 1 177 1 126 1 
204 1 52 1 227 1 73 1 229 2 5 1 118 2 39 1 151 1 224 1 83 1 
204 1 52 1 227 1 195 1 85 1 131 1 73 1 229 1 5 1 118 3 168 1 39 1 233 1 149 1 45 1 64 4 177 1 224 1 
204 1 52 1 227 1 71 1 73 1 229 1 5 1 118 2 39 1 139 1 224 1 
204 1 39 1 88 1 224 1 
204 1 52 1 227 2 141 1 73 1 229 1 5 1 118 2 18 1 39 1 224 1 
204 1 52 1 227 1 85 2 131 1 54 1 116 1 73 1 229 1 5 1 118 3 102 1 217 1 134 1 200 1 40 1 45 1 64 1 177 2 224 1 
204 1 52 1 227 1 85 2 131 1 54 1 116 1 73 1 229 1 5 1 118 3 102 1 217 1 134 1 200 1 45 1 64 1 177 2 224 1 
204 1 179 1 52 1 227 1 85 1 143 1 116 1 73 1 229 1 5 1 118 2 200 1 39 1 40 1 177 1 224 1 112 1 
204 1 179 1 52 1 227 1 85 1 143 1 116 1 73 1 167 1 229 1 5 1 118 2 200 1 39 1 40 1 177 1 224 1 
204 1 179 1 52 1 227 1 85 1 143 1 116 1 73 1 213 1 229 1 5 1 118 2 186 1 200 1 39 1 177 1 224 1 24 1 
204 1 179 1 52 1 227 1 85 1 143 1 116 1 73 1 213 1 229 1 5 1 118 2 186 1 200 1 39 1 40 1 177 1 224 1 24 1 
204 1 52 1 227 1 73 2 212 1 229 2 5 1 118 3 39 1 224 1 
204 1 227 1 182 1 73 2 5 1 118 3 59 1 39 1 224 1 140 2 
204 1 39 1 227 2 14 1 73 1 5 1 118 2 224 1 59 1 140 1 
204 1 227 1 36 1 73 1 5 1 118 2 59 1 39 1 224 1 140 1 
204 1 227 2 73 3 212 1 5 2 118 2 59 1 39 1 224 1 140 1 
204 1 207 1 227 1 85 1 131 1 3 1 73 2 5 2 118 4 55 1 59 1 39 1 64 1 177 1 224 1 140 2 
204 1 207 1 227 1 85 1 131 1 54 1 73 1 5 1 118 3 59 1 102 1 217 1 134 1 39 1 64 1 177 1 224 1 140 1 
204 1 207 1 227 1 85 1 131 1 73 1 5 1 55 1 118 3 59 1 38 1 39 1 64 2 177 1 224 1 140 1 
193 1 187 3 136 1 
187 1 
113 1 182 1 116 1 55 1 119 2 118 3 57 1 59 1 61 2 64 3 68 4 69 1 13 1 128 1 12 1 129 1 131 1 132 1 73 2 15 2 75 1 16 1 19 1 199 4 200 1 135 2 79 1 80 2 201 1 81 1 23 2 140 1 203 1 25 8 204 1 207 1 27 4 86 2 28 4 212 1 216 1 146 1 90 1 33 1 92 4 154 1 220 2 156 4 158 4 223 2 159 3 227 3 36 2 163 1 165 1 166 1 99 1 106 2 231 4 107 1 232 1 38 2 108 1 109 1 175 4 176 1 43 1 177 2 48 2 
114 1 50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 1 59 1 61 2 188 1 64 1 191 1 10 1 128 1 12 1 129 1 131 1 132 1 73 2 75 1 16 1 17 1 76 1 19 1 199 1 79 1 23 1 140 1 203 1 204 1 25 12 208 1 207 1 210 2 27 4 87 1 28 2 212 1 29 1 218 1 150 2 154 1 220 1 221 1 34 1 94 1 155 2 160 1 161 1 96 1 226 1 98 1 35 1 228 1 227 3 162 1 36 1 163 1 165 1 166 1 101 1 103 1 104 3 231 4 107 1 106 2 171 1 232 1 38 1 108 1 109 1 236 1 235 1 175 2 44 1 177 1 47 1 
50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 1 59 1 61 2 188 1 64 1 191 1 128 1 12 1 129 1 131 1 132 1 73 2 16 1 75 1 17 1 76 1 19 1 199 1 79 1 23 1 140 1 203 1 204 1 25 2 208 1 207 1 210 2 27 4 87 1 28 2 212 1 29 1 218 1 150 2 154 1 220 1 221 1 34 1 94 1 160 1 161 1 226 1 98 1 35 1 228 1 227 3 162 1 36 1 163 1 165 1 166 1 101 1 103 1 231 4 107 1 106 2 171 1 232 1 38 1 108 1 109 1 236 1 235 1 175 2 177 1 47 1 
50 1 51 1 182 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 128 1 12 1 129 1 131 1 132 1 133 1 73 2 75 1 16 1 17 2 76 2 19 1 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 209 1 210 2 27 4 28 2 87 1 212 1 29 1 218 1 150 2 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 3 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 41 1 108 1 109 1 236 1 175 2 177 1 
50 1 51 1 182 1 4 1 3 1 118 4 184 1 58 3 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 128 1 12 1 129 1 131 1 130 1 132 1 133 1 73 3 75 1 16 1 17 2 19 1 76 2 18 1 199 1 79 1 23 1 140 2 203 1 25 2 204 1 207 1 208 1 209 1 210 3 27 4 28 2 87 1 212 1 29 1 218 1 150 3 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 5 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 108 1 109 1 236 1 175 2 177 1 
50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 128 1 12 1 129 1 131 1 130 1 132 1 133 1 73 2 75 1 16 1 17 2 76 2 19 1 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 208 1 209 1 210 2 27 4 28 2 87 1 212 1 29 1 218 1 150 2 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 3 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 108 1 109 1 236 1 175 2 177 1 
128 1 12 1 129 1 27 4 182 1 166 1 231 4 107 1 79 1 108 1 109 1 203 1 
50 1 52 1 51 1 4 1 118 3 184 1 58 2 57 1 6 1 61 2 188 1 64 1 191 1 12 1 129 1 128 1 131 1 132 1 73 2 16 1 75 1 17 1 76 1 19 1 199 1 79 1 23 1 203 1 204 1 25 2 208 1 210 2 27 4 87 1 28 2 212 1 29 1 218 1 150 2 154 1 220 1 221 1 34 1 94 1 160 1 161 1 226 1 98 1 35 1 228 1 227 3 162 1 36 1 163 1 165 1 166 1 229 1 101 1 103 1 231 4 107 1 106 2 171 1 232 1 38 1 108 1 109 1 236 1 235 1 175 2 45 1 177 1 47 1 
95 1 
50 1 51 1 182 1 183 1 4 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 128 1 12 1 129 1 131 1 130 1 132 1 133 1 73 2 75 1 16 1 17 2 19 1 76 2 18 1 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 208 1 209 1 210 2 27 4 28 2 87 2 212 1 29 1 218 1 150 2 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 4 36 1 163 1 165 1 166 1 101 2 103 2 106 2 231 4 107 1 173 1 232 1 38 1 108 1 109 1 236 1 175 2 177 1 
12 1 109 1 27 1 166 1 231 1 
50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 12 1 129 1 128 1 131 1 130 1 132 1 133 1 73 2 75 1 16 1 17 2 76 2 19 1 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 208 1 209 1 210 2 27 4 28 2 87 1 212 1 29 1 218 1 150 2 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 3 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 109 1 236 1 175 2 177 1 
50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 12 1 129 1 128 1 131 1 130 1 132 1 133 1 73 2 75 1 16 1 17 2 76 2 19 1 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 208 1 209 1 210 2 27 4 28 2 87 1 212 1 29 1 218 1 150 2 152 1 154 1 220 1 221 1 34 1 160 2 161 1 98 1 35 1 226 1 228 1 227 3 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 236 1 175 2 110 1 177 1 
50 1 51 1 182 1 4 1 118 3 184 1 58 2 57 1 6 2 59 1 60 1 61 2 188 2 64 1 191 2 128 1 12 1 129 1 131 1 132 1 133 1 73 2 75 1 16 1 17 2 19 1 76 2 199 1 79 1 23 1 140 1 203 1 25 2 204 1 207 1 208 1 209 1 210 2 27 4 28 2 87 1 212 1 29 1 218 1 150 2 152 1 154 1 153 1 220 1 221 1 34 1 157 1 160 2 161 1 98 1 35 1 226 1 228 1 227 3 36 1 163 1 165 1 166 1 101 2 103 1 106 2 231 4 107 1 173 1 232 1 38 1 108 1 109 1 236 1 175 2 177 1 
25 1 82 1 10 1 
25 1 200 1 179 1 1 1 143 1 28 1 177 1 
25 1 179 1 115 1 1 1 143 1 28 1 89 1 200 1 92 1 177 1 24 1 127 1 
200 1 25 1 92 1 28 1 177 1 111 1 
25 1 121 1 
25 1 121 1 
25 1 117 1 
25 1 185 1 
25 1 121 1 
25 1 185 1 
25 1 185 1 
205 1 25 1 222 1 68 1 
25 1 31 1 158 1 
25 2 204 1 49 1 97 1 227 1 72 2 73 1 15 1 118 2 100 1 121 1 20 1 59 1 199 2 232 1 65 1 140 1 
53 1 
204 1 232 1 49 1 97 1 227 1 73 1 15 1 88 1 118 2 65 1 100 1 59 1 140 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 51 1 52 1 227 1 210 1 73 1 214 1 197 1 229 1 118 2 58 1 232 1 150 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 183 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 51 1 52 1 227 1 210 2 73 1 197 1 229 2 118 3 58 2 232 1 150 2 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 51 1 52 1 227 1 210 2 73 1 197 1 229 2 118 3 58 2 232 1 150 2 
204 1 25 2 50 1 52 1 51 1 210 1 87 1 28 2 29 1 118 3 184 1 58 1 6 1 218 1 61 2 188 1 150 1 220 1 221 1 34 1 64 1 191 1 160 1 161 1 98 1 226 1 35 1 228 1 227 2 162 1 131 1 36 1 73 1 229 1 75 1 17 1 101 1 76 1 18 1 103 1 199 1 106 2 232 1 38 1 236 1 175 2 45 1 23 1 177 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 
179 1 51 1 52 1 115 1 50 1 116 1 3 1 118 3 184 1 57 1 58 2 6 1 186 1 188 1 191 1 10 2 127 1 73 2 197 1 17 1 18 1 76 1 199 1 200 1 78 1 22 1 23 1 24 1 204 1 25 2 210 2 143 1 28 1 87 1 29 1 145 1 89 1 150 2 92 1 34 1 221 1 160 1 225 1 161 1 35 1 226 1 98 1 227 4 228 1 36 1 229 2 101 1 103 1 232 1 236 1 43 1 177 1 
204 1 25 2 50 1 52 1 51 1 210 1 87 1 28 2 29 1 118 3 184 1 58 1 6 1 218 1 61 2 188 1 150 1 220 1 221 1 34 1 64 1 191 1 160 1 161 1 98 1 226 1 35 1 228 1 227 1 162 1 131 1 36 1 73 1 229 1 75 1 17 1 101 1 76 1 103 1 199 1 106 2 232 1 38 1 236 1 175 2 45 1 23 1 177 1 
204 1 51 1 52 1 227 1 210 1 73 1 197 1 229 1 215 1 118 2 58 1 232 1 150 1 
25 2 50 1 207 1 182 1 87 1 28 2 29 1 118 1 184 1 6 1 218 1 61 2 188 1 220 1 221 1 64 1 34 1 94 1 191 1 160 1 161 1 226 1 98 1 35 1 228 1 162 1 131 1 36 1 75 1 17 1 76 1 101 1 103 1 199 1 106 2 171 1 38 1 236 1 175 2 23 1 177 1 47 1 
204 1 25 2 50 1 52 1 51 1 210 1 87 1 183 1 28 2 29 1 118 3 184 1 58 1 6 1 218 1 61 2 188 1 150 1 220 1 221 1 34 1 64 1 191 1 160 1 161 1 98 1 226 1 35 1 228 1 227 1 162 1 131 1 36 1 73 1 229 1 75 1 17 1 101 1 76 1 103 1 199 1 106 2 232 1 38 1 236 1 175 2 45 1 23 1 177 1 
204 1 25 2 50 1 51 1 207 1 210 1 182 1 87 1 183 1 28 2 29 1 118 3 184 1 58 1 6 1 59 1 218 1 61 2 188 1 150 1 220 1 221 1 34 1 64 1 191 1 160 1 161 1 98 1 226 1 35 1 228 1 227 1 162 1 131 1 36 1 73 1 75 1 17 1 101 1 76 1 103 1 199 1 106 2 232 1 38 1 236 1 175 2 23 1 177 1 140 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 94 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 181 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 2 227 1 73 1 229 1 17 1 76 1 101 1 103 1 199 2 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 181 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 2 227 1 73 1 229 1 17 1 76 1 101 1 103 1 199 2 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 181 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 2 227 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 181 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 98 1 226 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 181 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 2 227 1 73 1 229 1 17 1 76 1 101 1 103 1 199 2 232 1 236 1 
25 1 61 1 162 1 237 1 106 1 
25 1 61 1 237 1 218 1 106 1 
25 1 61 1 162 1 8 1 219 1 106 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
179 1 51 1 52 1 115 2 50 1 116 1 118 2 57 1 58 1 184 1 6 1 186 1 61 2 188 1 191 1 127 2 73 1 197 1 17 1 76 1 199 1 200 1 23 1 24 2 25 2 204 1 210 1 143 1 87 1 28 2 29 1 89 2 218 1 150 1 92 2 220 1 221 1 34 1 94 1 160 1 161 1 226 1 35 1 98 1 162 1 227 2 228 1 36 1 229 1 101 1 103 1 106 2 232 1 171 1 236 1 43 1 177 1 47 1 
204 1 52 1 51 1 50 1 210 1 183 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 145 1 118 2 184 1 58 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 228 1 227 1 73 1 197 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 171 1 236 1 47 1 
204 1 52 1 51 1 50 1 210 1 87 1 29 1 118 2 58 1 184 1 6 1 188 1 150 1 221 1 191 1 160 1 161 1 226 1 98 1 227 1 228 1 73 1 229 1 17 1 76 1 101 1 103 1 199 1 232 1 236 1 
204 1 232 1 227 1 52 1 51 1 210 1 150 1 73 1 229 1 118 2 58 1 
204 1 25 4 179 1 115 2 52 1 143 1 54 1 28 2 116 1 89 2 118 2 57 1 217 1 90 1 186 1 122 1 92 2 93 1 64 1 34 1 67 1 192 1 127 2 10 3 35 1 70 1 227 2 36 1 73 1 15 1 229 1 102 1 134 1 169 1 232 1 200 1 43 1 23 1 177 1 112 1 24 3 
206 1 204 1 25 4 26 1 179 1 115 2 52 1 143 1 28 2 30 1 89 2 118 2 56 1 90 1 186 1 122 1 123 1 124 1 92 2 93 1 34 1 67 1 192 1 127 2 10 3 35 1 70 1 227 1 36 1 71 1 164 1 73 1 15 1 229 1 169 1 232 1 200 1 137 1 43 1 23 1 177 1 139 1 178 1 24 3 
204 1 50 1 51 1 52 1 209 1 210 1 183 1 87 2 29 1 118 2 184 1 58 1 6 2 60 1 188 2 150 1 221 1 191 2 160 2 161 1 98 1 226 1 228 1 227 1 133 1 73 1 229 1 17 2 101 2 76 2 103 2 199 1 173 1 232 1 236 1 
204 1 51 1 52 1 209 1 210 1 87 1 118 2 58 1 6 1 60 1 188 1 150 1 191 1 160 1 226 1 227 1 133 1 73 1 229 1 17 1 101 1 76 1 103 1 173 1 232 1 
25 1 204 1 0 1 51 1 52 1 209 1 210 1 87 1 118 2 58 1 121 1 6 1 60 1 61 1 188 1 150 1 152 1 191 1 160 1 226 1 227 1 133 1 73 1 229 1 17 1 101 1 76 1 103 1 106 1 173 1 232 1 237 1 
204 1 51 1 52 1 209 1 210 1 87 3 118 2 58 1 6 3 60 3 188 3 150 1 191 3 160 3 226 3 227 1 133 3 73 1 229 1 17 3 101 3 76 3 103 3 173 1 232 1 202 1 
204 1 51 1 52 1 209 1 210 1 87 1 118 2 58 1 6 1 60 1 188 1 151 1 150 1 191 1 160 1 226 1 227 1 133 1 73 1 229 1 17 1 101 1 76 1 103 1 173 1 232 1 
204 1 227 1 51 1 52 1 210 1 133 1 73 1 229 1 118 2 58 1 173 1 232 1 151 1 150 1 
74 1 63 1 118 1 190 1 
63 1 118 1 198 1 
172 1 84 2 118 1 83 1 
172 1 77 1 46 1 118 1 83 1 
63 1 11 1 
115 1 92 1 89 1 186 1 127 1 24 1 
206 1 200 1 124 1 164 1 125 1 30 1 177 1 
115 1 1 1 92 1 89 1 186 1 127 1 24 1 
200 1 43 1 177 1 90 1 
25 1 228 1 144 1 121 1 6 1 199 1 
188 1 6 1 
25 1 228 1 121 1 199 1 
228 1 188 1 180 1 144 1 6 2 9 1 199 1 
188 1 6 1 
140 1 
59 1 
140 1 
229 1 
229 1 
52 1 
25 1 204 1 227 1 211 2 142 1 73 1 15 1 230 1 118 2 121 1 59 1 199 2 232 1 91 1 7 1 234 1 189 1 138 1 158 1 140 1 
42 1 
204 1 227 1 142 1 73 1 15 1 230 1 118 2 59 1 232 1 91 1 7 1 234 1 151 1 189 1 140 1 
204 2 227 2 142 2 73 2 15 2 230 2 118 4 37 1 59 2 232 2 91 2 234 2 7 2 189 2 66 1 140 2 
204 1 227 1 142 1 73 1 15 1 230 1 118 2 59 1 232 1 91 1 7 1 234 1 189 1 66 1 140 1 
25 3 204 1 227 1 211 1 142 1 73 1 15 1 230 1 118 2 121 1 59 1 199 1 232 1 91 1 7 1 234 1 189 1 138 1 158 2 140 1 
204 1 227 1 142 1 73 1 15 1 230 1 118 2 37 1 59 1 232 1 91 1 234 1 7 1 189 1 140 1 
204 2 227 2 142 2 73 2 15 2 88 1 230 2 118 4 147 1 37 1 59 2 232 2 91 2 234 2 7 2 189 2 140 2 
25 2 2 1 121 1 10 2 
25 2 32 1 121 1 10 2 
206 1 25 2 204 1 207 1 2 1 211 1 142 1 28 2 30 1 118 3 56 1 32 1 59 1 91 1 7 1 124 1 189 1 34 1 64 1 66 1 10 2 13 1 35 1 227 2 131 1 36 1 73 1 15 1 75 1 230 1 18 1 21 1 199 1 232 1 38 1 174 1 234 1 42 1 175 2 138 1 23 1 177 1 140 1 
204 1 232 1 88 1 230 1 147 1 
25 3 204 1 179 1 115 3 1 1 2 1 211 1 142 1 143 1 28 2 116 1 89 3 118 2 32 1 57 1 90 1 59 1 186 1 91 1 7 1 92 3 189 1 34 1 158 1 68 1 127 3 10 2 35 1 227 3 36 1 73 1 15 1 230 1 18 1 199 1 232 1 200 1 234 1 42 1 43 1 138 1 23 1 177 1 140 1 24 4 
204 1 227 1 142 1 73 1 15 1 88 1 230 1 118 2 147 1 59 1 232 1 91 1 234 1 7 1 189 1 140 1 
25 2 204 1 113 1 227 1 73 1 15 1 119 1 118 2 121 1 59 1 199 2 232 1 33 1 176 1 222 1 156 2 158 1 159 1 140 1 69 1 
204 1 25 2 113 1 118 2 59 1 61 1 33 1 156 1 158 1 159 2 69 1 227 1 73 1 15 1 199 1 106 1 232 1 135 1 176 1 80 1 48 1 140 1 
223 1 121 1 
86 1 121 1 
135 1 180 1 80 1 156 1 159 1 199 1 
204 1 25 2 113 1 180 1 31 1 118 2 59 1 61 1 33 1 156 1 158 1 159 2 69 1 227 1 194 1 73 1 15 1 199 1 106 1 232 1 135 1 176 1 80 1 48 1 140 1 
48 1 
206 1 25 3 204 1 113 1 207 1 86 1 28 2 30 1 119 1 118 3 56 1 59 1 148 1 61 1 33 1 124 1 220 1 64 1 156 2 158 2 223 1 68 2 159 2 69 1 13 1 227 2 131 1 36 1 73 1 15 1 75 1 18 1 21 1 106 1 199 2 135 1 232 1 38 1 175 4 176 1 80 1 23 1 177 1 48 1 140 1 
113 1 33 1 176 1 88 1 159 1 69 1 
25 3 204 1 179 1 113 1 115 4 1 1 143 1 86 1 28 2 116 1 119 1 89 4 118 2 57 1 90 1 59 1 186 1 61 1 33 1 92 4 220 1 156 2 158 2 223 1 68 2 159 2 127 4 69 1 227 3 36 1 73 1 15 1 18 1 106 1 199 2 135 1 232 1 200 1 176 1 80 1 43 1 23 1 177 1 48 1 140 1 24 5 
25 1 204 1 179 1 113 1 115 2 1 1 143 1 86 1 28 1 116 1 119 1 89 2 118 2 57 1 90 1 59 1 186 1 33 1 92 2 156 1 158 1 223 1 68 1 159 1 127 2 69 1 227 3 36 1 73 1 15 1 18 1 199 1 232 1 200 1 176 1 43 1 23 1 177 1 48 1 140 1 24 3 
113 1 33 1 176 1 88 1 159 1 69 1 
204 1 25 2 113 1 118 2 119 1 59 1 120 1 121 1 148 1 222 1 156 2 158 1 159 1 69 1 227 1 73 1 15 1 199 2 232 1 170 1 140 1 

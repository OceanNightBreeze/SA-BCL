#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 53 150 103 36 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 6223 | < -> !=
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module; | RETURN | 3094 | return null
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
80 1 75 1 128 1 204 1 16 1 87 1 
80 1 128 1 204 1 16 1 87 1 
185 2 9 1 37 1 
46 1 184 1 21 1 203 1 23 1 62 1 187 1 51 3 80 1 258 1 69 1 40 1 12 1 101 2 14 1 261 1 227 1 146 1 119 1 
46 1 21 1 187 1 51 3 80 1 69 1 258 2 40 1 12 1 101 1 195 1 14 1 261 1 227 1 146 1 43 1 
69 1 126 1 187 1 146 1 
45 1 46 1 187 1 51 2 193 1 69 1 40 1 12 2 101 1 14 1 146 1 
46 1 184 1 21 2 203 1 128 1 23 1 51 3 131 1 67 1 80 2 258 1 69 1 40 1 12 1 101 1 14 1 261 1 227 1 146 1 119 1 
46 1 184 1 21 2 203 1 128 1 23 1 51 3 131 1 80 2 258 1 69 1 40 1 12 1 101 1 14 1 261 1 227 1 146 1 119 1 
46 1 21 1 128 1 187 1 51 2 241 1 131 1 67 1 80 1 69 1 40 1 12 1 101 1 14 1 15 1 146 1 106 1 
46 1 21 1 128 1 187 1 51 2 131 1 67 1 245 1 80 1 69 1 40 1 12 1 101 1 14 1 15 1 146 1 106 1 
0 1 46 1 21 1 157 1 128 1 187 1 51 2 131 1 80 1 69 1 40 1 12 1 260 1 101 1 14 1 15 1 146 1 106 1 
0 1 46 1 21 1 157 1 128 1 187 1 51 2 131 1 67 1 80 1 69 1 40 1 12 1 260 1 101 1 14 1 15 1 146 1 106 1 
46 1 187 1 51 3 34 1 69 1 40 2 12 1 101 2 14 1 146 1 
187 1 51 3 69 1 40 2 12 1 14 1 143 1 84 2 30 1 146 1 
257 1 69 1 40 1 12 2 14 1 30 1 84 1 51 2 187 1 146 1 
187 1 51 2 69 1 40 1 12 1 14 1 84 1 30 1 146 1 229 1 
187 1 51 2 34 1 69 1 40 3 12 2 14 2 84 1 30 1 146 1 
21 1 155 1 187 1 51 4 80 1 69 1 258 1 40 2 12 1 14 2 195 1 178 1 84 2 30 1 261 1 146 1 
160 1 69 1 40 1 12 1 14 1 30 1 84 1 51 2 187 1 146 1 
21 1 235 1 155 1 187 1 51 3 78 1 26 1 136 1 80 1 69 1 258 4 40 1 12 1 14 1 84 1 30 1 261 1 146 1 
187 1 51 2 69 1 40 1 12 1 14 1 84 1 30 1 146 1 118 1 264 1 
198 1 3 1 188 3 
188 1 
200 1 99 1 103 1 179 1 150 1 
121 1 122 1 123 4 4 1 124 3 127 3 6 1 128 1 132 2 131 1 135 2 138 2 137 1 140 3 13 3 12 3 142 1 143 1 145 1 150 1 153 3 19 2 22 1 20 2 155 1 158 3 159 2 29 3 30 1 164 1 165 1 33 1 34 1 35 2 175 4 40 2 179 1 42 4 43 1 180 5 44 2 182 2 47 1 51 3 189 1 190 1 53 1 191 2 195 1 199 1 200 4 202 1 201 2 61 2 204 2 205 2 63 1 206 2 69 1 71 2 207 1 211 3 74 5 219 3 221 2 77 1 79 1 80 2 223 1 81 6 224 1 84 1 228 1 229 2 86 3 231 2 232 1 92 2 233 1 94 1 242 1 99 4 249 3 103 1 102 4 104 2 251 3 255 14 256 1 110 1 258 2 115 1 261 1 
123 4 124 3 4 1 201 2 200 4 199 1 202 1 128 1 6 1 127 3 204 2 61 2 63 1 205 2 131 1 132 2 135 2 206 2 137 1 138 2 71 2 69 1 207 1 140 3 13 3 12 3 143 1 142 1 210 1 145 1 211 3 150 1 74 5 153 3 19 2 20 2 22 1 155 1 219 3 158 3 77 1 159 2 81 6 223 1 80 2 224 1 84 1 30 1 229 2 228 1 164 1 86 3 232 1 231 2 92 2 233 1 94 1 33 1 242 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 104 2 179 1 42 4 43 1 180 5 44 2 251 3 182 2 47 1 255 4 256 1 110 1 51 3 189 1 190 1 191 2 53 1 258 2 195 1 115 1 261 1 
123 6 4 9 124 7 6 1 127 9 128 2 129 2 131 1 132 2 135 2 138 10 140 7 12 11 13 7 143 1 142 1 145 1 150 1 153 7 19 2 22 1 20 2 154 1 155 1 158 7 159 2 162 1 30 9 164 1 166 2 171 1 33 10 173 1 34 1 35 2 36 1 175 6 40 11 176 1 179 1 42 4 43 1 180 9 44 2 182 2 47 1 51 20 189 5 190 1 53 1 191 2 194 1 195 1 199 1 200 4 202 1 201 2 60 2 61 10 204 2 205 10 63 5 206 2 69 10 71 2 207 1 209 1 211 7 74 9 215 1 219 7 77 1 80 3 223 1 81 6 224 1 84 10 228 1 229 2 86 7 88 1 232 1 231 2 92 2 233 1 234 1 93 1 94 1 242 5 244 1 249 3 99 4 103 1 102 4 104 2 105 1 107 1 251 3 108 2 253 2 254 1 255 7 256 1 110 1 111 2 112 1 258 2 115 1 261 1 263 1 266 1 
123 2 1 3 2 2 200 4 199 1 202 1 125 2 128 1 6 1 204 2 131 1 66 4 139 2 70 1 11 1 69 1 71 2 12 3 142 1 143 1 144 1 150 1 214 4 22 1 155 1 77 1 81 4 80 2 223 1 82 2 84 1 30 1 229 2 228 1 164 1 232 1 90 2 91 1 233 1 237 1 94 1 33 1 34 1 96 1 175 2 98 2 248 1 40 2 249 4 99 4 103 1 179 1 42 4 43 2 251 4 47 1 255 8 50 4 256 1 51 3 190 1 53 1 258 3 195 1 196 1 115 1 261 1 57 2 266 1 
123 4 124 2 4 1 201 2 200 4 199 1 202 1 128 1 6 1 60 2 127 4 204 2 61 2 129 2 205 2 131 1 132 2 135 2 206 2 138 2 69 1 71 2 140 2 13 2 12 3 142 1 143 1 145 1 211 2 74 4 150 1 153 2 19 2 20 2 22 1 155 1 219 2 158 2 77 1 159 2 81 6 80 2 223 1 84 1 30 1 228 1 164 1 229 2 86 2 166 2 232 1 92 2 233 1 234 1 94 1 33 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 103 1 104 2 179 1 42 4 43 1 180 4 44 2 251 3 182 2 108 2 47 1 253 2 255 4 256 1 51 4 110 1 190 1 191 2 53 1 111 2 258 2 195 1 115 1 261 1 266 1 
123 4 124 2 4 1 201 2 200 4 199 1 202 1 128 1 6 1 60 2 127 4 204 2 61 2 129 2 205 2 131 1 132 2 133 1 135 2 206 2 138 2 69 1 71 2 140 2 13 2 12 3 142 1 143 1 145 1 211 2 74 4 150 1 153 2 19 2 20 2 22 1 155 1 219 2 158 2 77 1 159 2 81 6 80 2 223 1 84 1 30 1 228 1 164 1 229 2 86 2 166 2 232 1 92 2 233 1 234 1 237 1 94 1 33 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 103 1 104 2 179 1 42 4 43 1 180 4 44 2 251 3 182 2 108 2 47 1 253 2 255 4 256 1 51 3 110 1 190 1 191 2 53 1 111 2 258 2 195 1 115 1 261 1 266 1 
123 4 124 3 4 1 201 2 200 4 199 1 202 1 128 1 6 1 127 3 204 2 61 2 63 1 205 2 131 1 132 2 135 2 206 2 138 2 71 2 69 1 207 1 140 3 13 3 12 3 141 1 142 1 143 1 211 3 150 1 74 5 153 3 19 2 20 2 22 1 155 1 219 3 158 3 77 1 159 2 81 6 223 1 80 2 224 1 84 1 30 1 229 2 228 1 164 1 86 3 232 1 231 2 92 2 233 1 94 1 33 1 242 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 103 1 104 2 179 1 42 4 43 1 180 5 44 2 251 3 182 2 47 1 255 4 256 1 51 3 189 1 190 1 191 2 53 1 258 2 195 1 115 1 261 1 266 1 
123 4 124 3 4 1 201 2 202 1 200 4 199 1 128 1 6 1 127 3 204 2 61 3 63 1 205 3 131 1 132 2 135 2 206 2 137 1 138 3 71 2 69 1 140 3 13 3 12 5 142 1 143 1 145 1 211 3 150 1 74 5 153 3 19 2 20 2 22 1 155 1 219 3 158 3 77 1 159 2 81 6 223 1 80 2 84 2 30 1 229 2 228 1 164 1 86 3 232 1 231 2 92 2 233 1 237 1 94 1 33 1 242 1 34 1 35 2 175 4 40 4 249 3 99 4 102 4 103 1 104 2 179 1 178 1 42 4 43 1 180 5 44 2 251 3 182 2 45 1 47 1 255 4 256 1 110 1 51 4 190 1 189 1 191 2 53 1 258 2 195 1 115 1 261 1 266 1 
123 4 124 3 4 1 201 2 200 4 199 1 202 1 128 1 6 1 127 3 204 2 61 2 63 1 205 2 131 1 132 2 135 2 206 2 137 1 138 2 71 2 69 1 140 3 13 3 12 3 142 1 143 1 145 1 211 3 150 1 74 5 153 3 19 2 20 2 22 1 155 1 219 3 158 3 77 1 159 2 81 6 223 1 80 2 84 1 30 1 229 2 228 1 164 1 86 3 232 1 231 2 92 2 233 1 237 1 94 1 33 1 242 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 103 1 104 2 179 1 42 4 43 1 180 5 44 2 251 3 182 2 47 1 255 4 256 1 110 1 51 3 189 1 190 1 191 2 53 1 258 2 195 1 115 1 261 1 266 1 
200 4 199 1 94 1 53 1 99 4 103 1 142 1 179 1 143 1 228 1 266 1 150 1 
27 1 
123 4 124 3 4 1 201 2 202 1 200 4 199 1 128 1 6 1 127 3 204 2 61 2 63 1 205 2 131 1 132 2 135 2 206 2 137 1 138 2 71 2 69 1 207 1 140 3 13 3 12 4 142 1 143 1 145 1 211 3 150 1 74 5 153 3 19 2 20 2 22 1 155 1 219 3 158 3 77 1 159 2 81 6 223 1 80 2 224 1 84 1 30 1 229 2 228 1 164 1 86 3 232 1 231 2 92 2 233 1 237 1 94 1 33 1 242 1 34 1 35 2 175 4 40 2 249 3 99 4 102 4 103 1 104 2 179 1 42 4 105 1 43 2 180 5 44 2 251 3 182 2 45 1 47 1 255 4 256 1 110 1 51 3 189 1 190 1 191 2 53 1 258 3 195 1 115 1 261 1 266 1 
123 4 4 1 124 2 5 1 127 4 6 1 128 1 8 1 129 2 130 1 132 2 131 1 133 1 135 2 138 2 140 2 12 3 13 2 142 1 145 1 148 1 150 1 151 2 152 2 153 2 19 2 22 1 20 2 156 1 158 2 159 2 164 1 166 2 33 1 34 1 35 2 175 4 40 2 179 1 42 4 43 1 180 4 44 2 182 2 46 1 47 1 51 3 190 1 53 1 191 2 192 2 54 1 195 1 202 1 199 1 200 4 201 2 60 2 204 2 61 2 205 2 206 2 71 2 69 1 208 2 211 2 74 4 217 1 219 2 77 1 223 1 80 2 81 6 227 1 229 2 228 1 86 2 230 1 232 1 92 2 233 1 234 1 237 1 94 1 243 2 99 4 249 3 103 1 101 1 102 4 104 2 251 3 108 2 253 2 255 4 256 1 110 1 111 2 258 2 113 1 114 1 115 1 261 1 266 1 
72 1 255 1 165 1 
255 1 161 1 
183 1 252 1 216 1 128 1 255 1 80 1 81 1 249 1 260 1 225 1 15 1 106 1 
183 1 81 1 80 1 255 1 128 1 15 1 106 1 
255 1 161 1 
213 1 81 1 80 1 249 1 128 1 255 1 
255 1 134 1 
255 1 262 1 
255 1 161 1 
255 1 262 1 
255 1 262 1 
255 1 50 1 24 1 265 1 
255 1 218 1 66 1 
167 1 46 1 169 1 48 1 255 2 240 1 51 2 33 1 69 1 40 1 82 1 12 1 101 1 226 1 73 2 161 1 42 2 
170 1 
46 1 167 1 69 1 48 1 82 1 40 1 12 1 226 1 101 1 126 1 51 2 240 1 33 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 100 2 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
46 1 4 1 172 1 61 1 51 2 205 1 33 1 138 1 69 1 177 1 40 1 12 1 101 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 100 2 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 102 3 104 1 105 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 128 1 127 1 61 2 205 2 131 1 132 1 135 1 206 1 138 2 71 1 69 1 140 1 12 4 13 1 15 1 211 1 149 1 74 2 153 1 20 1 216 2 157 2 219 1 158 1 77 1 159 1 80 1 81 2 225 2 229 1 165 3 86 1 168 1 92 1 233 1 172 1 33 1 35 1 245 1 40 2 249 2 101 2 102 2 104 1 178 1 42 2 106 1 180 2 44 1 183 1 45 1 46 1 47 1 186 1 252 2 255 3 51 3 191 1 111 1 260 3 55 1 
4 1 124 1 201 1 172 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 108 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 
46 1 4 1 172 1 61 2 51 3 205 2 33 1 138 2 69 1 40 1 12 1 101 2 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
46 1 4 1 172 1 61 2 51 3 205 2 33 1 138 2 69 1 40 1 12 1 101 2 
123 4 4 1 124 2 201 2 5 1 128 1 6 1 127 2 8 1 129 2 61 1 204 2 130 1 205 1 131 1 132 2 135 2 138 1 206 2 71 2 69 1 140 2 208 2 12 2 13 2 148 1 211 2 151 2 74 4 152 2 153 2 19 2 20 2 217 1 156 1 219 2 158 2 159 2 223 1 80 2 81 6 227 1 229 2 86 2 230 1 92 2 233 1 33 1 35 2 243 2 175 4 40 1 249 3 101 1 102 4 104 2 42 4 43 1 180 4 251 3 44 2 182 2 46 1 45 1 47 1 255 4 51 3 192 2 191 2 54 1 113 1 258 1 114 1 261 1 
4 1 124 1 201 1 172 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 100 2 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
123 2 4 1 124 1 201 1 5 1 6 1 127 1 129 1 61 1 204 1 205 1 132 1 135 1 138 1 206 1 71 1 69 1 140 1 208 1 12 1 13 1 211 1 151 1 74 2 152 1 153 1 19 1 20 1 219 1 158 1 159 1 223 1 80 1 81 3 227 1 229 1 86 1 92 1 33 1 35 1 243 1 175 2 40 1 101 1 102 2 104 1 42 2 43 1 180 2 251 3 44 1 182 1 46 1 255 2 51 3 192 1 191 1 258 1 261 1 
46 1 4 1 172 1 61 1 51 2 205 1 33 1 192 1 138 1 69 1 40 1 12 1 101 1 
123 2 124 1 201 1 5 1 6 1 127 2 60 1 204 1 129 1 132 1 135 1 206 1 71 1 140 1 208 1 13 1 143 1 211 1 151 1 74 2 152 1 153 1 19 1 20 1 155 1 219 1 158 1 159 1 81 3 223 1 80 1 229 1 86 1 166 1 92 1 35 1 243 1 175 2 102 2 104 1 42 2 43 1 180 2 251 3 44 1 182 1 108 1 253 1 255 2 51 1 192 1 191 1 111 1 258 1 261 1 
123 2 4 1 124 1 201 1 5 1 6 1 127 1 129 1 61 1 204 1 205 1 132 1 135 1 138 1 206 1 71 1 69 1 140 1 208 1 12 1 13 1 211 1 151 1 74 2 152 1 153 1 19 1 20 1 219 1 158 1 159 1 223 1 80 1 81 3 227 1 229 1 86 1 92 1 33 1 35 1 243 1 175 2 40 1 101 1 102 2 104 1 105 1 42 2 43 1 180 2 251 3 44 1 182 1 46 1 255 2 51 3 192 1 191 1 258 1 261 1 
123 2 4 1 124 1 201 1 5 1 6 1 127 1 129 1 61 1 204 1 205 1 132 1 135 1 206 1 138 1 71 1 69 1 140 1 208 1 12 1 13 1 143 1 211 1 151 1 74 2 152 1 153 1 19 1 20 1 155 1 219 1 158 1 159 1 80 1 223 1 81 3 84 1 30 1 229 1 86 1 92 1 33 1 35 1 243 1 175 2 40 1 102 2 104 1 105 1 42 2 43 1 180 2 251 3 44 1 182 1 255 2 51 3 192 1 191 1 258 1 261 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 13 1 12 1 101 1 102 2 104 1 42 2 211 1 180 2 44 1 74 2 153 1 46 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 86 1 166 1 
4 1 124 1 201 1 172 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 172 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 2 101 1 104 1 42 2 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
123 1 59 1 255 1 129 1 175 1 
123 1 19 1 59 1 255 1 175 1 
123 1 255 1 129 1 95 1 250 1 175 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
123 2 4 1 124 1 201 1 60 1 128 1 127 2 129 1 61 1 204 1 205 1 131 1 132 1 135 1 206 1 138 1 71 1 69 1 140 1 13 1 12 2 15 1 211 1 74 2 153 1 19 1 20 1 216 3 157 1 219 1 158 1 77 1 159 1 80 1 81 3 225 3 229 1 86 1 166 1 92 1 233 1 172 1 33 1 35 1 175 2 40 1 249 3 101 1 102 2 104 1 42 2 106 1 180 2 44 1 182 1 183 1 46 1 108 1 47 1 252 3 253 1 255 2 51 2 191 1 111 1 260 4 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 102 3 104 1 105 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 172 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 100 2 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 182 1 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 100 2 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 60 1 172 1 127 2 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 140 1 40 1 12 1 13 1 102 3 101 1 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 108 1 253 1 219 1 51 2 158 1 191 1 111 1 159 1 161 1 86 1 166 1 
4 1 124 1 201 1 127 1 61 1 205 1 33 1 132 1 35 1 135 1 206 1 138 1 69 1 40 1 140 1 12 1 13 1 101 1 102 3 104 1 42 3 211 1 180 2 44 1 74 2 46 1 153 1 219 1 51 2 158 1 191 1 159 1 161 1 86 1 
46 1 138 1 69 1 40 1 4 1 12 1 101 1 61 1 205 1 51 2 33 1 
197 1 92 1 233 1 203 1 236 1 128 1 33 1 241 1 131 1 10 1 69 1 71 1 40 1 249 2 12 2 101 1 15 1 106 1 46 1 184 1 47 1 20 1 216 2 252 2 255 4 157 1 23 1 51 2 77 1 81 2 80 1 258 1 82 1 225 2 260 3 117 1 229 1 31 1 119 1 165 3 85 1 
197 1 92 1 233 1 236 1 128 1 33 1 243 1 10 1 68 1 69 1 71 1 40 1 208 1 249 2 12 1 101 1 15 1 106 1 147 1 151 1 152 1 46 1 47 1 20 1 216 2 252 2 255 4 157 1 51 2 25 1 54 1 81 2 80 1 82 1 225 2 260 3 28 1 117 1 229 1 118 1 31 1 264 1 165 3 85 1 
124 1 4 1 127 1 61 1 63 1 205 1 33 1 242 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 211 1 180 1 74 1 153 1 46 1 219 1 51 2 189 1 158 1 86 1 
124 3 4 1 201 1 127 3 61 1 63 2 205 1 33 1 132 1 242 1 35 1 135 1 206 1 138 1 69 1 140 3 40 1 12 1 13 3 102 2 101 1 104 1 42 2 105 1 211 3 180 4 44 1 74 4 182 1 153 3 46 1 185 1 219 3 51 2 189 1 191 1 158 3 159 1 86 3 
124 3 4 1 127 3 61 1 63 3 205 1 33 1 242 1 138 1 69 1 140 3 40 1 12 1 13 3 101 1 211 3 180 3 74 3 153 3 46 1 49 1 219 3 51 2 189 1 158 3 86 3 
124 1 4 1 127 1 61 1 63 1 205 1 33 1 242 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 211 1 180 1 74 1 153 1 46 1 219 1 51 2 189 1 158 1 160 1 86 1 
46 1 4 1 61 1 63 1 51 2 205 1 189 1 33 1 160 1 138 1 69 1 40 1 12 1 101 1 
123 1 231 1 124 1 4 1 59 1 127 1 61 1 63 1 205 1 33 1 242 1 134 1 175 1 138 1 69 1 140 1 40 1 12 1 13 1 101 1 211 1 180 1 74 1 153 1 46 1 255 1 219 1 51 2 220 1 189 1 158 1 161 1 86 1 
38 1 246 1 51 1 
76 1 62 1 51 1 120 2 
246 1 58 1 51 1 17 1 
89 1 76 1 62 1 51 1 64 1 
246 1 238 1 
216 1 252 1 225 1 260 1 249 1 157 1 
152 1 128 1 243 1 54 1 80 1 208 1 18 1 
80 1 47 1 233 1 128 1 
183 1 216 1 252 1 225 1 260 1 249 1 157 1 
102 1 255 1 161 1 42 1 180 1 35 1 
140 1 180 1 
102 1 255 1 161 1 42 1 
185 1 140 1 102 1 42 1 65 1 180 2 35 1 
140 1 180 1 
84 1 
30 1 
84 1 
101 1 
101 1 
46 1 
255 1 7 1 109 1 239 1 51 2 33 1 66 1 69 1 247 1 40 1 82 1 12 1 83 1 161 1 84 1 30 1 42 2 116 1 181 1 32 2 
41 1 
109 1 239 1 51 2 33 1 160 1 69 1 247 1 40 1 82 1 12 1 83 1 84 1 30 1 116 1 181 1 
109 2 239 2 51 4 33 2 247 2 69 2 40 2 82 2 12 2 56 1 83 2 84 2 30 2 116 2 212 1 181 2 
255 3 7 1 109 1 239 1 51 2 33 1 66 2 69 1 247 1 40 1 82 1 12 1 83 1 161 1 84 1 30 1 42 1 116 1 181 1 32 1 
109 1 239 1 51 2 33 1 247 1 69 1 40 1 82 1 12 1 83 1 84 1 30 1 116 1 212 1 181 1 
126 1 109 2 239 2 51 4 52 1 33 2 247 2 69 2 40 2 82 2 12 2 83 2 84 2 30 2 116 2 212 1 181 2 
109 1 239 1 51 2 33 1 69 1 247 1 40 1 82 1 12 1 56 1 83 1 84 1 30 1 116 1 181 1 
126 1 109 1 239 1 51 2 52 1 33 1 247 1 69 1 40 1 82 1 12 1 83 1 84 1 30 1 116 1 181 1 
255 2 161 1 163 1 165 2 
255 2 161 1 165 2 222 1 
92 1 5 1 6 1 7 1 239 1 33 1 174 1 243 1 69 1 247 1 71 1 40 1 208 1 12 2 41 1 42 1 43 1 251 2 181 1 151 1 152 1 45 1 20 1 155 1 255 2 109 1 51 3 222 1 81 2 223 1 80 1 258 1 82 1 56 1 83 1 30 1 84 1 261 1 116 1 163 1 229 1 165 2 32 1 
69 1 126 1 239 1 33 1 52 1 
92 1 233 1 7 1 128 1 239 1 33 1 131 1 66 1 247 1 69 1 71 1 40 1 249 3 12 3 41 1 15 1 42 1 106 1 181 1 183 1 45 1 47 1 20 1 216 3 252 3 157 1 255 3 50 1 109 1 51 2 222 1 77 1 81 2 80 1 82 1 225 3 260 4 83 1 30 1 84 1 116 1 163 1 229 1 165 2 32 1 
214 2 1 1 2 1 255 2 51 2 24 1 33 1 66 1 96 1 11 1 69 1 248 1 40 1 82 1 12 1 161 1 144 1 84 1 30 1 42 2 
123 1 1 2 90 1 125 1 33 1 9 1 96 1 66 1 175 1 98 1 69 1 11 1 40 1 248 1 12 1 144 1 42 1 214 1 185 1 255 2 218 1 51 2 82 1 30 1 84 1 
98 1 
123 1 1 2 2 1 90 1 5 1 125 1 6 1 204 1 33 1 66 2 96 1 243 1 175 1 98 1 139 1 69 1 11 1 71 1 40 1 248 1 208 1 12 2 144 1 42 2 43 1 251 4 151 1 152 1 45 1 214 2 155 1 255 3 50 2 51 3 80 1 223 1 81 2 258 1 259 1 82 1 30 1 84 1 261 1 229 1 57 1 
1 1 11 1 248 1 126 1 144 1 96 1 
123 1 1 2 2 1 125 1 128 1 204 1 131 1 66 2 139 1 71 1 11 1 69 1 12 3 15 1 144 1 214 2 216 4 157 1 77 1 80 1 81 2 82 1 225 4 84 1 30 1 229 1 90 1 233 1 33 1 96 1 175 1 98 1 248 1 40 1 249 4 42 2 106 1 45 1 183 1 47 1 252 4 255 3 50 2 51 2 260 5 57 1 
1 1 11 1 248 1 126 1 144 1 96 1 
1 1 2 1 33 1 96 1 97 1 66 1 39 1 69 1 11 1 40 1 12 1 42 2 214 2 255 2 51 2 24 1 259 1 82 1 30 1 84 1 161 1 
1 1 2 1 233 1 128 1 33 1 131 1 66 1 96 1 98 1 139 1 69 1 11 1 71 1 40 1 248 1 249 2 12 3 15 1 144 1 42 1 106 1 183 1 45 1 214 1 47 1 216 2 252 2 255 1 157 1 50 1 51 2 77 1 81 1 80 1 82 1 225 2 260 3 30 1 84 1 229 1 57 1 
214 1 1 1 185 1 90 1 125 1 42 1 
161 1 57 1 
139 1 161 1 
123 1 1 2 90 1 125 1 33 1 96 1 66 1 175 1 98 1 69 1 11 1 40 1 248 1 12 1 144 1 42 1 214 1 255 2 51 2 82 1 30 1 84 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 118 285 189 280 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V ERROR net.sourceforge.barbecue.BarcodeException 14 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V FAILED junit.framework.AssertionFailedError 156 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V ERROR net.sourceforge.barbecue.BarcodeException 14 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V FAILED junit.framework.AssertionFailedError 156 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 156 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:Int2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 4403 | 1 -> 0
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeFactory:createUSD4(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Int2of5ModuleFactory:getModule(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:Int2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createStd2of5(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:getBarcodeHeight()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:getBarcodeWidth()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:encode([IILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:setResolution(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:outbit(ILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.twoOfFive.Int2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:init()V | STATEMENT | 3496 | stmt -> ;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createInt2of5(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:init()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 1 288 1 137 1 219 1 61 1 120 1 
206 1 288 1 137 1 61 1 120 1 
63 1 188 2 259 1 
279 1 85 3 217 2 126 1 71 2 9 1 11 2 193 1 101 1 195 2 157 1 
279 1 162 1 85 2 217 4 65 1 71 2 203 1 9 1 288 1 76 1 59 1 231 1 11 1 101 1 195 2 157 1 
196 1 279 1 85 1 217 3 65 1 284 1 71 1 203 1 9 1 288 1 76 1 59 1 11 1 101 1 102 1 238 1 195 1 157 1 
279 1 85 1 217 3 65 2 71 1 203 1 9 1 288 1 76 1 59 1 231 1 11 1 101 1 195 1 157 1 104 1 
9 1 279 1 221 1 101 1 
279 1 85 1 16 1 217 2 71 1 9 1 11 2 213 1 101 1 195 1 157 1 
196 1 85 1 217 3 65 1 284 1 68 1 71 1 203 1 6 1 9 1 288 2 76 1 59 2 11 1 101 1 102 1 61 1 238 1 195 1 157 1 
196 1 85 1 217 3 65 1 284 1 71 1 203 1 6 1 9 1 288 2 76 1 59 2 11 1 101 1 102 1 61 1 238 1 195 1 157 1 
279 1 85 1 217 2 64 1 68 1 4 1 71 1 113 1 6 1 9 1 288 1 59 1 11 1 101 1 61 1 195 1 157 1 
279 1 85 1 217 2 64 1 68 1 4 1 71 1 6 1 9 1 288 1 58 1 59 1 11 1 101 1 61 1 195 1 157 1 
279 1 85 1 217 2 51 1 64 1 52 1 4 1 71 1 6 1 9 1 288 1 59 1 11 1 292 1 101 1 61 1 195 1 157 1 
279 1 85 1 217 2 51 1 64 1 52 1 68 1 4 1 71 1 6 1 9 1 288 1 59 1 11 1 292 1 101 1 61 1 195 1 157 1 
279 1 85 2 217 3 126 1 71 2 9 1 11 1 101 1 195 1 157 1 
279 1 85 2 122 1 217 3 74 2 9 1 208 1 11 1 101 1 195 1 
9 1 279 1 85 1 208 1 217 2 40 1 11 2 101 1 195 1 74 1 
279 1 85 1 217 2 286 1 74 1 9 1 208 1 11 1 101 1 195 1 
9 1 279 1 85 1 208 1 217 2 11 1 269 1 101 1 195 1 74 1 
279 1 85 1 217 3 164 1 65 4 139 1 74 1 9 1 26 1 288 1 148 1 208 1 76 1 59 1 11 1 101 1 240 1 195 1 
9 1 279 1 85 1 208 1 217 2 30 1 11 1 42 1 101 1 195 1 74 1 
47 1 146 1 202 3 
202 1 
137 2 138 2 140 4 144 1 143 1 6 1 148 1 149 1 153 3 152 3 11 5 154 2 13 1 162 1 16 1 165 1 167 4 21 5 168 1 169 1 28 6 179 1 181 1 182 1 183 2 185 3 189 1 33 14 36 2 192 2 44 4 45 1 46 1 50 1 197 1 199 3 53 3 201 1 56 1 204 3 207 1 208 1 211 3 61 1 215 2 217 4 218 3 222 1 65 2 66 1 67 2 69 1 225 1 74 2 75 3 227 3 76 1 229 1 231 1 81 2 236 1 84 3 244 1 85 4 246 2 87 4 89 3 249 3 91 5 251 1 92 2 99 1 101 1 104 1 106 2 265 1 109 2 112 2 114 2 273 4 275 2 116 1 117 3 118 1 119 1 121 3 122 1 126 1 125 1 285 1 127 2 286 2 288 2 129 4 134 1 
215 2 137 2 217 3 218 3 138 2 65 2 222 1 67 2 66 1 140 4 143 1 144 1 225 1 74 1 6 1 75 3 148 1 76 1 227 2 229 1 231 1 149 1 152 3 153 3 11 3 154 2 81 2 13 1 84 2 244 1 85 2 87 4 89 3 167 4 91 5 249 2 21 5 92 2 251 1 168 1 169 1 28 6 99 1 101 1 179 1 181 1 104 1 183 2 182 1 106 2 109 2 265 1 185 3 189 1 112 2 33 4 114 2 36 2 273 4 275 2 192 2 44 4 117 3 45 1 119 1 118 1 46 1 197 1 50 1 121 3 122 1 53 3 126 1 201 1 125 1 285 1 286 2 127 2 56 1 204 3 207 1 129 4 288 2 208 1 211 3 61 1 134 1 
122 1 265 1 66 1 140 4 167 4 189 1 285 1 251 1 229 1 179 1 118 1 134 1 
137 2 217 3 222 1 65 3 66 1 140 4 70 2 143 1 224 4 225 1 74 1 6 1 75 4 76 1 148 1 229 1 231 1 11 3 12 2 13 1 243 4 85 2 90 4 167 4 23 1 251 1 169 1 171 2 253 3 28 4 99 1 100 2 256 1 101 1 179 1 181 1 104 2 261 2 106 2 265 1 189 1 111 1 33 8 34 1 35 2 273 4 39 1 44 2 117 4 45 1 118 1 278 2 46 1 50 1 122 1 126 1 201 1 125 1 285 1 286 2 56 1 207 1 129 2 288 2 208 1 290 1 61 1 134 1 214 1 
215 2 137 2 217 4 218 2 138 2 222 1 65 2 66 1 3 2 140 4 144 1 143 1 225 1 74 1 6 1 75 3 227 2 76 1 148 1 229 1 231 1 152 2 153 2 11 3 154 2 81 2 13 1 84 2 85 2 86 1 87 4 18 2 89 2 19 2 91 4 249 2 167 4 21 4 92 2 251 1 168 1 25 2 169 1 28 6 99 1 101 1 257 2 179 1 181 1 104 1 183 2 106 2 109 2 265 1 185 2 189 1 112 2 33 4 114 2 36 2 37 2 273 4 275 2 192 2 44 4 117 3 118 1 46 1 50 1 197 1 121 2 122 1 53 2 126 1 201 1 125 1 285 1 127 2 286 2 56 1 204 4 207 1 288 2 129 4 208 1 211 2 61 1 134 1 
215 2 137 2 217 3 218 2 138 2 222 1 65 2 66 1 3 2 140 4 144 1 143 1 225 1 74 1 6 1 75 3 145 1 227 2 76 1 148 1 229 1 231 1 152 2 153 2 11 3 154 2 81 2 13 1 84 2 85 2 86 1 87 4 18 2 89 2 19 2 91 4 249 2 167 4 21 4 92 2 251 1 168 1 25 2 169 1 28 6 99 1 101 1 257 2 179 1 181 1 104 1 183 2 106 2 109 2 265 1 185 2 189 1 112 2 33 4 114 2 36 2 37 2 273 4 275 2 192 2 44 4 117 3 45 1 118 1 46 1 50 1 197 1 121 2 122 1 53 2 126 1 201 1 125 1 285 1 127 2 286 2 56 1 204 4 207 1 288 2 129 4 208 1 211 2 61 1 134 1 
216 1 215 2 137 2 217 3 218 3 220 1 138 2 65 2 222 1 67 2 66 1 140 4 143 1 144 1 225 1 74 1 6 1 75 3 148 1 76 1 227 2 229 1 231 1 153 3 152 3 11 3 154 2 81 2 13 1 84 2 244 1 85 2 87 4 89 3 167 4 91 5 249 2 21 5 92 2 251 1 169 1 28 6 99 1 101 1 179 1 181 1 104 1 183 2 182 1 108 1 106 2 109 2 265 1 185 3 189 1 112 2 33 4 114 2 36 2 273 4 275 2 192 2 44 4 117 3 119 1 118 1 46 1 50 1 121 3 122 1 53 3 126 1 201 1 125 1 285 1 286 2 127 2 56 1 204 3 207 1 129 4 288 2 208 1 211 3 61 1 134 1 
191 1 
137 2 138 2 140 4 144 1 143 1 6 1 148 1 149 1 11 4 153 3 152 3 154 2 13 1 16 1 167 4 21 5 168 1 169 1 28 6 179 1 181 1 182 1 183 2 185 3 189 1 33 4 36 2 192 2 44 4 45 1 46 1 50 1 197 1 53 3 201 1 56 1 204 3 207 1 208 1 211 3 61 1 215 2 216 1 217 3 218 3 222 1 65 3 66 1 67 2 225 1 74 1 75 3 227 2 76 1 229 1 231 1 81 2 84 2 242 1 244 1 85 2 87 4 89 3 249 2 91 5 251 1 92 2 99 1 101 1 104 2 106 2 108 1 265 1 109 2 112 2 114 2 273 4 275 2 117 3 118 1 119 1 121 3 122 1 126 1 125 1 285 1 127 2 286 2 288 2 129 4 134 1 
0 1 137 2 138 2 140 4 3 2 143 1 144 1 6 1 145 1 150 2 11 3 153 2 152 2 154 2 13 1 157 1 17 2 18 2 19 2 167 4 21 4 168 1 169 1 25 2 172 1 28 6 179 1 181 1 183 2 185 2 187 2 189 1 33 4 36 2 37 2 192 2 41 1 44 4 45 1 46 1 197 1 50 1 53 2 201 1 56 1 203 1 204 4 207 1 211 2 61 1 215 2 217 3 218 2 65 2 222 1 66 1 71 1 225 1 226 2 75 3 76 1 227 2 229 1 79 1 231 1 233 1 81 2 83 1 84 2 86 1 85 2 87 4 88 1 89 2 249 2 91 4 92 2 251 1 99 1 101 1 257 2 104 1 106 2 265 1 109 2 112 2 271 1 272 2 114 2 273 4 275 2 117 3 118 1 121 2 123 1 124 1 125 1 126 1 285 1 286 2 127 2 129 4 288 2 134 1 
265 1 167 1 140 1 285 1 189 1 
216 1 215 2 137 2 217 3 218 3 138 2 65 2 222 1 67 2 66 1 140 4 143 1 144 1 225 1 74 1 6 1 75 3 148 1 76 1 227 2 231 1 149 1 153 3 152 3 11 3 154 2 81 2 13 1 84 2 244 1 85 2 87 4 89 3 167 4 91 5 249 2 21 5 92 2 251 1 168 1 169 1 28 6 99 1 101 1 179 1 181 1 104 1 183 2 182 1 108 1 106 2 109 2 265 1 185 3 189 1 112 2 33 4 114 2 36 2 273 4 275 2 192 2 44 4 117 3 119 1 118 1 46 1 197 1 50 1 121 3 122 1 53 3 126 1 201 1 125 1 285 1 286 2 127 2 56 1 204 3 207 1 129 4 288 2 208 1 211 3 61 1 134 1 
216 1 215 2 137 2 217 3 218 3 138 2 65 2 222 1 67 2 66 1 140 4 143 1 144 1 225 1 74 1 6 1 75 3 148 1 76 1 227 2 231 1 149 1 153 3 152 3 11 3 154 2 81 2 13 1 84 2 244 1 85 2 87 4 89 3 167 4 91 5 249 2 21 5 92 2 251 1 168 1 169 1 28 6 175 1 99 1 101 1 179 1 181 1 104 1 183 2 182 1 108 1 106 2 109 2 265 1 185 3 112 2 33 4 114 2 36 2 273 4 275 2 192 2 44 4 117 3 119 1 118 1 46 1 197 1 50 1 121 3 122 1 53 3 126 1 201 1 125 1 285 1 286 2 127 2 56 1 204 3 207 1 129 4 288 2 208 1 211 3 61 1 134 1 
136 2 137 2 138 2 3 2 140 4 142 1 143 1 144 9 7 1 6 1 148 1 147 1 11 16 153 7 152 7 154 2 155 1 12 2 13 1 158 1 159 2 160 1 14 1 163 3 18 2 19 2 167 4 20 1 21 9 23 1 168 1 25 2 169 1 27 2 171 2 174 1 28 8 178 1 179 1 181 1 183 4 182 5 184 1 185 7 32 2 189 1 33 24 34 1 35 2 36 2 37 2 38 2 192 2 44 6 46 1 49 1 50 14 197 1 48 1 53 7 201 1 56 1 204 9 205 2 207 1 208 14 211 7 209 1 212 2 61 2 216 1 215 2 62 2 217 29 218 7 65 2 222 1 221 1 67 2 66 1 72 2 224 2 225 1 74 14 75 6 228 2 76 1 227 10 229 1 78 3 231 1 80 3 81 2 234 1 236 6 82 1 237 2 239 3 242 1 243 2 84 10 244 5 86 1 85 15 87 4 89 7 90 2 249 10 91 9 92 4 251 1 93 2 94 2 253 1 97 3 98 1 254 1 255 3 99 1 101 14 256 1 257 2 258 1 104 1 260 3 261 5 108 1 263 2 106 2 262 3 109 2 265 1 267 2 268 2 110 1 111 1 112 2 114 2 273 10 275 2 274 3 276 1 115 1 117 7 118 1 119 5 278 2 280 1 121 7 122 1 282 1 125 1 126 1 285 1 286 2 127 2 129 6 288 3 130 1 131 2 291 1 290 1 289 1 133 1 293 1 134 1 
236 1 22 1 33 1 
266 1 33 1 
33 1 135 1 
64 1 52 1 166 1 4 1 33 1 128 1 288 1 210 1 28 1 232 1 117 1 61 1 
288 1 28 1 117 1 61 1 33 1 287 1 
288 1 28 1 64 1 166 1 4 1 33 1 61 1 
33 1 135 1 
283 1 33 1 
33 1 135 1 
266 1 33 1 
266 1 33 1 
29 1 33 1 243 1 103 1 
132 1 224 1 33 1 
136 2 50 1 85 1 261 1 217 2 33 2 74 1 205 1 273 2 27 1 208 1 11 1 212 1 101 1 237 1 135 1 159 1 
131 1 
50 1 85 1 261 1 217 2 221 1 74 1 205 1 208 1 11 1 212 1 101 1 237 1 159 1 
50 1 85 1 217 3 249 2 144 1 5 1 71 2 227 2 11 1 101 1 157 1 84 2 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
50 1 85 1 227 1 217 2 11 1 249 1 101 1 144 1 71 1 157 1 84 1 
50 1 85 1 217 3 249 2 144 1 5 1 71 2 227 2 11 1 101 1 157 1 84 2 
0 1 215 2 137 2 217 3 218 2 138 2 65 1 143 1 144 1 71 1 6 1 226 2 75 3 76 1 227 1 79 1 150 2 11 2 152 2 153 2 233 1 81 2 154 2 83 1 157 1 84 1 85 1 16 1 87 4 17 2 88 1 89 2 249 1 91 4 21 4 92 2 172 1 28 6 99 1 101 1 181 1 104 1 183 2 106 2 109 2 185 2 187 2 33 4 112 2 271 1 272 2 114 2 36 2 37 2 273 4 275 2 192 2 41 1 44 4 117 3 50 1 121 2 123 1 53 2 124 1 127 2 286 2 56 1 203 1 204 2 129 4 288 2 211 2 61 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 19 1 91 2 249 1 21 2 204 1 25 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 161 2 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 161 2 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
50 1 85 1 217 2 249 1 144 1 5 1 71 1 227 1 10 1 11 1 101 1 157 1 84 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 161 2 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 242 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 18 1 89 1 53 1 91 2 249 1 21 2 204 2 211 1 101 1 135 1 
217 3 218 1 138 1 64 1 4 1 144 1 5 1 71 2 6 1 227 2 153 1 11 4 232 2 152 1 154 1 81 1 236 3 157 1 84 2 162 1 85 2 16 1 87 2 89 1 166 1 91 2 250 1 249 2 21 2 92 1 169 1 25 1 95 1 28 2 101 1 181 1 183 1 106 1 109 1 185 1 112 1 33 3 114 1 36 1 273 2 275 1 192 1 117 2 50 1 121 1 281 1 52 3 53 1 286 1 56 1 57 1 204 1 128 2 288 1 58 1 210 2 211 1 292 2 61 1 
217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 25 1 211 1 101 1 135 1 
215 1 137 1 217 3 218 1 65 1 138 1 143 1 144 1 71 1 226 1 75 3 76 1 227 1 150 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 85 1 87 2 17 1 89 1 249 1 91 2 21 2 92 1 172 1 28 3 99 1 101 1 104 1 183 1 106 1 109 1 185 1 187 1 33 2 112 1 272 1 114 1 36 1 37 1 273 2 275 1 192 1 44 2 50 1 121 1 53 1 286 1 127 1 203 1 204 1 129 2 288 1 211 1 
50 1 85 1 217 2 17 1 249 1 144 1 5 1 71 1 227 1 11 1 101 1 157 1 84 1 
215 1 137 1 217 1 218 1 65 1 138 1 3 1 143 1 226 1 75 3 76 1 148 1 150 1 153 1 152 1 81 1 154 1 87 2 17 1 18 1 89 1 19 1 91 2 21 2 92 1 25 1 172 1 28 3 99 1 257 1 104 1 183 1 106 1 109 1 185 1 187 1 33 2 112 1 272 1 36 1 114 1 37 1 273 2 275 1 192 1 44 2 121 1 122 1 53 1 286 1 127 1 204 2 129 2 288 1 211 1 
215 1 137 1 217 3 218 1 138 1 65 1 143 1 144 1 71 1 226 1 75 3 76 1 227 1 150 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 242 1 85 1 87 2 17 1 89 1 249 1 91 2 21 2 92 1 172 1 28 3 99 1 101 1 104 1 183 1 106 1 109 1 185 1 187 1 33 2 112 1 272 1 114 1 36 1 37 1 273 2 275 1 192 1 44 2 50 1 121 1 53 1 286 1 127 1 203 1 204 1 129 2 288 1 211 1 
215 1 137 1 217 3 218 1 138 1 65 1 144 1 143 1 74 1 226 1 75 3 148 1 76 1 227 1 150 1 11 1 152 1 153 1 81 1 154 1 84 1 242 1 85 1 87 2 17 1 89 1 249 1 91 2 21 2 92 1 172 1 28 3 99 1 101 1 104 1 183 1 106 1 109 1 185 1 187 1 112 1 33 2 272 1 114 1 36 1 37 1 273 2 275 1 192 1 44 2 50 1 121 1 122 1 53 1 127 1 286 1 204 1 129 2 288 1 208 1 211 1 
217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 227 1 273 2 275 1 192 1 152 1 11 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 2 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 
217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 19 1 91 2 249 1 21 2 204 1 25 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 2 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 2 121 1 89 1 53 1 19 1 91 2 249 1 21 2 204 1 25 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 50 1 85 1 87 3 121 1 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
129 1 37 1 270 1 44 1 33 1 
129 1 270 1 44 1 127 1 33 1 
198 1 129 1 37 1 230 1 44 1 33 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
215 1 137 1 217 2 218 1 138 1 64 1 3 1 4 1 144 1 5 1 71 1 6 1 227 1 152 1 11 2 232 3 153 1 81 1 154 1 157 1 84 1 85 1 87 2 18 1 89 1 19 1 166 1 91 2 249 1 21 2 92 1 25 1 169 1 28 3 101 1 257 1 181 1 183 1 106 1 109 1 185 1 112 1 33 2 114 1 36 1 37 1 273 2 275 1 192 1 44 2 117 3 50 1 121 1 52 4 53 1 127 1 286 1 56 1 204 2 128 3 129 2 288 1 211 1 210 3 292 1 61 1 
215 1 217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 153 1 11 1 152 1 81 1 154 1 157 1 84 1 242 1 50 1 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
215 1 217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 161 2 85 1 87 3 121 1 89 1 53 1 19 1 91 2 249 1 21 2 204 1 25 1 211 1 101 1 135 1 
217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 161 2 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
217 2 218 1 109 1 185 1 138 1 3 1 144 1 71 1 5 1 112 1 114 1 36 1 273 3 227 1 275 1 192 1 153 1 11 1 152 1 154 1 81 1 157 1 84 1 50 1 85 1 87 3 121 1 18 1 89 1 53 1 19 1 91 2 249 1 21 2 204 2 25 1 211 1 101 1 257 1 135 1 
217 2 218 1 109 1 185 1 138 1 144 1 71 1 112 1 114 1 36 1 227 1 273 3 275 1 192 1 11 1 152 1 153 1 81 1 154 1 157 1 84 1 50 1 85 1 121 1 87 3 89 1 53 1 91 2 249 1 21 2 204 1 211 1 101 1 135 1 
105 1 183 1 261 1 217 2 106 1 1 1 65 1 64 1 141 1 4 1 71 1 33 4 113 1 6 1 77 1 232 2 11 2 151 1 236 3 117 2 238 1 157 1 196 1 50 1 85 1 200 1 52 3 284 1 286 1 56 1 92 1 128 2 169 1 288 1 210 2 28 2 292 1 101 1 102 1 61 1 181 1 
105 1 183 1 261 1 217 2 106 1 1 1 64 1 187 1 141 1 4 1 71 1 33 4 272 1 226 1 77 1 150 1 232 2 11 1 151 1 233 1 43 1 235 1 42 1 236 3 117 2 157 1 245 1 50 1 85 1 200 1 52 3 286 1 56 1 92 1 128 2 24 1 288 1 210 2 30 1 28 2 292 1 101 1 61 1 181 1 
182 1 217 2 218 3 185 3 186 1 144 1 71 1 227 1 11 1 153 3 152 3 119 1 157 1 84 1 244 3 50 1 85 1 121 3 89 3 53 3 91 3 249 1 21 3 204 3 211 3 101 1 
182 1 217 2 218 1 185 1 269 1 144 1 71 1 227 1 11 1 153 1 152 1 119 1 157 1 84 1 244 1 50 1 85 1 121 1 89 1 53 1 91 1 249 1 21 1 204 1 211 1 101 1 
244 1 50 1 85 1 217 2 269 1 249 1 144 1 71 1 227 1 11 1 101 1 119 1 157 1 84 1 
215 1 182 1 217 2 109 1 218 3 185 3 138 1 188 1 144 1 71 1 112 1 114 1 36 1 273 2 227 1 275 1 192 1 11 1 153 3 152 3 154 1 81 1 119 1 157 1 242 1 84 1 244 2 50 1 85 1 87 2 121 3 89 3 53 3 91 4 249 1 21 4 204 3 211 3 101 1 
182 1 217 2 218 1 185 1 67 1 270 1 144 1 71 1 33 1 227 1 11 1 153 1 152 1 44 1 119 1 157 1 84 1 244 1 50 1 85 1 121 1 89 1 53 1 91 1 249 1 21 1 204 1 129 1 211 1 177 1 101 1 135 1 
182 1 217 2 218 1 185 1 144 1 71 1 227 1 11 1 153 1 152 1 119 1 157 1 84 1 244 1 50 1 85 1 121 1 89 1 53 1 91 1 249 1 21 1 204 1 211 1 101 1 
217 1 247 1 193 1 180 1 8 1 
217 1 248 1 277 1 194 1 
217 1 194 1 31 1 
15 2 217 1 247 1 193 1 
190 1 194 1 
210 1 232 1 52 1 292 1 117 1 128 1 
288 1 56 1 61 1 181 1 
210 1 232 1 52 1 292 1 166 1 117 1 128 1 
288 1 2 1 233 1 187 1 61 1 272 1 226 1 
273 1 87 1 192 1 153 1 188 1 21 2 55 1 
153 1 21 1 
273 1 87 1 192 1 21 1 33 1 135 1 
153 1 21 1 
273 1 87 1 33 1 135 1 
208 1 
74 1 
74 1 
71 1 
157 1 
71 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 209 1 174 1 11 1 115 1 101 1 133 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 209 1 174 1 11 1 115 1 101 1 133 1 156 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 54 1 209 1 174 1 11 1 115 1 101 1 133 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 209 1 174 1 11 1 115 1 101 1 133 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 223 2 224 1 33 1 73 1 273 2 209 1 174 1 11 1 115 1 101 1 133 1 135 1 14 1 
170 1 
173 1 236 2 33 2 135 1 
96 1 236 2 33 2 135 1 
183 1 184 1 261 1 107 1 217 3 106 1 264 1 65 1 187 1 223 1 143 1 73 1 33 2 272 1 226 1 75 2 273 1 76 1 150 1 11 2 115 1 236 2 14 1 50 1 15 1 85 1 16 1 286 1 92 1 203 1 252 1 288 1 172 1 170 1 209 1 173 1 96 1 174 1 28 2 99 1 133 1 101 1 104 1 
50 1 221 1 115 1 54 1 101 1 
183 1 184 1 261 1 217 2 106 1 264 1 64 1 223 1 4 1 224 1 73 1 33 3 6 1 273 1 232 3 11 3 115 1 236 2 117 3 243 1 14 1 50 1 15 1 85 1 16 1 52 4 166 1 286 1 56 1 92 1 128 3 169 1 288 1 170 1 210 3 209 1 173 1 96 1 174 1 28 2 292 1 133 1 101 1 61 1 181 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 223 1 224 2 33 3 73 1 273 1 209 1 174 1 11 1 115 1 101 1 133 1 135 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 209 1 174 1 11 1 115 1 101 1 133 1 156 1 14 1 
50 1 184 1 85 1 15 1 261 1 217 2 264 1 221 1 209 1 174 1 11 1 115 1 101 1 133 1 156 1 14 1 
253 1 221 1 290 1 256 1 111 1 34 1 
261 1 217 2 264 1 224 1 33 2 34 1 273 2 11 1 241 1 12 1 50 1 15 1 85 1 90 2 253 1 29 1 176 1 290 1 60 1 101 1 135 1 
50 1 85 1 15 1 261 1 217 2 264 1 90 2 224 1 111 1 33 2 34 1 273 2 253 1 29 1 11 1 290 1 256 1 101 1 12 1 135 1 
261 1 217 2 106 1 264 1 64 1 4 1 224 1 111 1 33 1 34 1 6 1 35 1 273 1 232 2 11 3 117 2 278 1 12 1 243 1 50 1 15 1 85 1 16 1 52 3 90 1 166 1 286 1 56 1 128 2 169 1 288 1 171 1 210 2 253 1 28 1 290 1 292 1 101 1 256 1 61 1 181 1 
273 1 253 1 90 1 100 1 188 1 70 1 
35 1 135 1 
171 1 135 1 
50 1 85 1 15 1 261 1 217 2 264 1 90 1 70 1 224 1 111 1 33 2 34 1 129 1 273 1 253 2 11 1 290 1 100 1 44 1 256 1 101 1 278 1 
261 1 217 2 264 1 63 1 188 1 70 1 111 1 224 1 33 2 34 1 273 1 11 1 44 1 278 1 50 1 15 1 85 1 90 1 129 1 253 2 290 1 132 1 100 1 101 1 256 1 
278 1 
137 1 217 3 65 1 143 1 70 1 224 2 226 1 75 4 76 1 150 1 11 1 12 1 243 2 85 1 15 1 90 2 171 1 172 1 253 2 28 2 176 1 100 1 99 1 256 1 101 1 104 1 261 1 106 1 264 1 187 1 111 1 33 3 34 1 272 1 35 1 273 2 44 1 278 1 50 1 286 1 203 1 288 1 129 1 290 1 
253 1 221 1 290 1 256 1 111 1 34 1 
137 1 217 2 64 1 4 1 70 1 224 2 6 1 11 3 232 4 12 1 243 2 85 1 15 1 16 1 90 2 166 1 169 1 171 1 253 2 28 2 100 1 256 1 101 1 181 1 261 1 106 1 264 1 111 1 33 3 34 1 35 1 273 2 44 1 117 4 278 1 50 1 52 5 286 1 56 1 128 4 288 1 129 1 210 4 290 1 292 1 61 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 220 2 72 91 122 179 153 175 185 113 89 30 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 220 2 72 91 122 179 153 175 185 113 89 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 220 2 72 91 122 179 153 175 185 113 89 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 220 2 72 91 122 179 153 175 185 113 89 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.NullPointerException 220 2 72 91 122 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.NullPointerException 220 2 72 91 122 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.NullPointerException 220 2 72 91 122 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V ERROR java.lang.NullPointerException 220 2 72 91 122 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V ERROR java.lang.NullPointerException 220 2 72 91 122 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V ERROR java.lang.NullPointerException 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V ERROR java.lang.NullPointerException 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.NullPointerException 220 2 4 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 6625 | 1 -> 0
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | ASSIGN | 10300 | = null
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 1 62 1 21 1 177 1 200 1 38 1 
109 1 62 1 21 1 200 1 38 1 
115 2 149 1 6 1 
142 1 32 1 81 1 170 1 21 1 186 1 148 2 100 1 5 3 219 1 189 1 55 1 72 1 26 1 176 1 107 1 91 1 93 1 166 1 
122 1 32 1 21 1 148 1 5 3 219 1 189 1 55 1 196 1 72 1 26 1 176 1 107 1 93 1 91 2 166 1 
176 1 35 1 189 1 166 1 
32 1 148 1 218 1 5 2 219 1 189 1 55 2 136 1 176 1 93 1 166 1 
142 1 62 1 32 1 81 1 4 1 21 2 148 1 186 1 100 1 5 3 219 1 55 1 72 1 26 1 176 1 10 1 107 2 91 1 93 1 166 1 
142 1 62 1 32 1 81 1 4 1 21 2 148 1 186 1 100 1 5 3 219 1 55 1 72 1 26 1 176 1 107 2 91 1 93 1 166 1 
61 1 14 1 62 1 32 1 4 1 21 1 148 1 5 2 219 1 189 1 55 1 176 1 10 1 140 1 107 1 93 1 166 1 
61 1 14 1 62 1 32 1 4 1 82 1 21 1 148 1 5 2 219 1 189 1 55 1 176 1 10 1 107 1 93 1 166 1 
61 1 14 1 144 1 62 1 32 1 4 1 21 1 148 1 5 2 219 1 189 1 55 1 176 1 44 1 107 1 90 1 93 1 166 1 
61 1 14 1 144 1 62 1 32 1 4 1 21 1 148 1 5 2 219 1 189 1 55 1 176 1 44 1 10 1 107 1 90 1 93 1 166 1 
32 1 176 1 148 2 219 1 5 3 189 1 93 2 55 1 13 1 166 1 
32 1 126 1 5 3 187 2 189 1 129 1 55 1 176 1 93 2 166 1 
201 1 32 1 176 1 187 1 5 2 129 1 189 1 93 1 55 2 166 1 
32 1 176 1 187 1 5 2 129 1 189 1 93 1 232 1 55 1 166 1 
214 1 32 1 176 1 187 1 5 2 129 1 189 1 93 1 55 1 166 1 
181 1 32 1 21 1 5 3 187 1 189 1 129 1 55 1 24 1 72 1 176 1 211 1 58 1 107 1 12 1 93 1 91 4 166 1 
32 1 171 1 5 2 187 1 189 1 129 1 55 1 176 1 155 1 93 1 166 1 
32 2 176 1 187 1 5 2 129 1 189 1 93 3 55 2 13 1 166 1 
32 2 21 1 5 4 187 2 189 1 129 1 55 1 196 1 8 1 72 1 176 1 211 1 107 1 93 2 91 1 166 1 
154 1 199 1 213 3 
213 1 
237 1 210 1 111 1 89 1 113 1 
0 2 122 1 1 2 123 2 2 2 3 2 4 1 124 1 126 1 127 2 5 3 7 3 129 1 133 1 11 3 137 1 141 5 13 1 21 2 23 1 22 1 152 2 25 3 153 1 28 1 156 14 31 2 33 3 157 1 34 1 160 2 163 1 162 2 46 2 166 1 167 1 168 1 49 2 50 2 55 3 175 1 59 1 179 1 60 1 62 1 183 1 66 1 67 3 184 6 185 1 69 3 187 1 188 2 71 4 193 5 192 3 196 1 72 1 75 1 200 2 77 4 204 1 79 3 205 4 206 2 208 3 210 1 85 1 211 1 89 1 93 2 91 2 94 4 95 1 97 1 216 3 101 1 103 2 222 3 224 1 110 2 227 1 228 1 111 4 231 1 113 1 233 3 232 2 234 1 237 4 239 2 119 1 241 2 
0 2 62 1 1 2 122 1 123 2 183 1 66 1 3 2 2 2 4 1 67 3 184 6 124 1 127 2 126 1 185 1 71 4 188 2 5 3 187 1 7 3 129 1 192 3 193 5 196 1 133 1 72 1 75 1 11 3 137 1 200 2 141 5 13 1 77 4 79 3 204 1 205 4 206 2 21 2 22 1 23 1 152 2 25 3 208 3 153 1 210 1 85 1 211 1 156 4 91 2 93 2 94 4 95 1 97 1 31 2 33 3 216 3 34 1 101 1 103 2 160 2 222 3 224 1 162 2 163 1 46 2 166 1 168 1 167 1 110 2 49 2 227 1 111 4 229 1 231 1 113 1 232 2 233 3 55 3 234 1 175 1 237 4 239 2 59 1 241 2 119 1 179 1 
0 2 62 1 1 2 122 1 182 1 123 3 183 1 66 1 3 2 2 2 4 1 67 3 184 6 124 1 127 2 126 1 185 1 71 4 188 2 5 5 187 2 7 3 129 2 192 3 193 5 196 1 133 1 72 1 75 1 137 1 11 3 200 2 141 5 13 1 77 4 79 3 204 1 205 4 206 2 21 2 22 1 23 1 152 3 25 3 208 3 153 1 210 1 85 1 211 1 89 1 156 4 91 2 93 3 94 4 95 1 30 1 97 1 31 3 33 3 216 3 34 1 101 1 103 2 220 1 160 2 222 3 162 2 163 2 46 2 166 2 168 1 167 2 110 2 49 2 227 1 111 4 231 1 113 1 232 2 233 3 54 1 55 4 234 1 175 1 237 4 116 1 239 2 59 1 241 2 119 1 179 1 
62 1 182 1 122 2 183 1 66 1 2 2 4 1 184 4 125 1 126 1 185 1 71 4 70 3 5 3 187 1 129 1 196 1 133 1 72 1 75 1 200 2 13 1 202 4 77 2 145 1 79 4 146 2 205 2 21 2 83 2 23 1 22 1 25 4 153 1 210 1 211 1 87 1 89 1 212 2 156 8 29 1 93 2 91 3 92 2 95 1 97 1 101 1 159 1 163 1 164 1 166 1 169 4 227 1 111 4 51 2 113 1 173 1 232 2 55 3 234 1 235 2 174 1 175 1 237 4 57 2 59 1 119 1 242 4 179 1 
122 1 31 2 182 1 123 2 183 1 2 1 124 1 185 1 126 1 5 3 187 1 101 1 129 1 133 1 220 1 72 1 163 1 13 1 166 1 168 1 167 1 227 1 111 4 21 1 113 1 55 3 23 1 234 1 152 2 175 1 153 1 237 4 210 1 116 1 211 1 59 1 89 1 91 1 119 1 93 2 179 1 
122 1 31 2 182 1 123 2 183 1 2 1 124 1 185 1 126 1 5 3 187 1 101 1 129 1 133 1 220 1 72 1 163 1 13 1 166 1 168 1 167 1 227 1 111 4 21 1 113 1 55 3 23 1 234 1 152 2 175 1 153 1 237 4 210 1 116 1 211 1 59 1 89 1 91 1 119 1 93 2 179 1 
0 2 62 1 1 2 182 1 122 1 123 2 183 1 66 1 3 2 2 2 4 1 67 3 184 6 127 2 126 1 185 1 71 4 188 2 5 3 187 1 7 3 129 1 193 5 192 3 196 1 133 1 72 1 75 1 11 3 137 1 200 2 141 5 13 1 77 4 79 3 204 1 80 1 205 4 206 2 21 2 22 1 23 1 152 2 25 3 208 3 153 1 210 1 85 1 211 1 89 1 156 4 91 2 93 2 94 4 95 1 97 1 31 2 33 3 216 3 34 1 101 1 103 2 160 2 222 3 162 2 163 1 46 2 166 1 167 1 110 2 49 2 227 1 111 4 231 1 113 1 232 2 233 3 55 3 234 1 175 1 237 4 239 2 59 1 241 2 119 1 179 1 
0 2 62 1 1 2 122 1 182 1 123 3 183 1 66 1 3 2 2 2 4 1 67 3 184 6 124 1 127 2 126 1 185 1 71 4 188 2 5 4 187 2 7 3 129 1 192 3 193 5 196 1 133 1 72 1 8 1 75 1 11 3 137 1 200 2 141 5 13 1 77 4 145 1 79 3 204 1 205 4 206 2 21 2 22 1 23 1 152 3 25 3 208 3 153 1 210 1 211 1 89 1 156 4 91 2 93 4 94 4 95 1 97 1 31 3 33 3 216 3 34 1 218 1 101 1 103 2 160 2 222 3 224 1 162 2 163 1 46 2 166 1 168 1 167 1 110 2 49 2 227 1 111 4 113 1 232 2 233 3 55 5 234 1 175 1 237 4 239 2 59 1 241 2 119 1 179 1 
0 2 62 1 1 2 122 1 182 1 123 2 183 1 66 1 3 2 2 2 4 1 67 3 184 6 124 1 127 2 126 1 185 1 71 4 188 2 5 3 187 1 7 3 129 1 192 3 193 5 196 1 133 1 72 1 75 1 11 3 137 1 200 2 141 5 13 1 77 4 145 1 79 3 204 1 205 4 206 2 21 2 22 1 23 1 152 2 25 3 208 3 153 1 210 1 211 1 89 1 156 4 91 2 93 2 94 4 95 1 97 1 31 2 33 3 216 3 34 1 101 1 103 2 160 2 222 3 224 1 162 2 163 1 46 2 166 1 168 1 167 1 110 2 49 2 227 1 111 4 113 1 232 2 233 3 55 3 234 1 175 1 237 4 239 2 59 1 241 2 119 1 179 1 
234 1 133 1 182 1 183 1 237 4 210 1 111 4 126 1 89 1 113 1 119 1 23 1 
122 1 182 1 31 2 123 2 183 1 2 1 124 1 185 1 5 3 219 1 101 1 133 1 220 1 72 1 163 1 13 1 166 1 168 1 167 1 227 1 111 4 21 1 148 1 113 1 55 3 23 1 234 1 152 2 26 1 175 1 153 1 237 4 210 1 116 1 59 1 89 1 91 1 119 1 93 2 179 1 
17 1 
0 2 62 1 1 2 122 2 182 1 123 2 183 1 66 1 3 2 2 2 4 1 67 3 184 6 124 1 127 2 126 1 185 1 71 4 188 2 5 3 187 1 7 3 129 1 192 3 193 5 196 1 133 1 72 1 75 1 11 3 137 1 198 1 200 2 141 5 13 1 77 4 145 1 79 3 204 1 205 4 206 2 21 2 22 1 23 1 152 2 25 3 208 3 153 1 210 1 85 1 211 1 89 1 156 4 91 3 93 2 94 4 95 1 97 1 31 2 33 3 216 3 34 1 218 1 101 1 103 2 160 2 222 3 224 1 162 2 163 1 46 2 166 1 168 1 167 1 110 2 49 2 227 1 111 4 231 1 113 1 232 2 233 3 55 4 234 1 175 1 237 4 239 2 59 1 241 2 119 1 179 1 
48 1 60 1 156 1 
78 1 156 1 
61 1 14 1 62 1 143 1 63 1 79 1 184 1 19 1 21 1 39 1 44 1 156 1 
14 1 61 1 62 1 63 1 184 1 21 1 156 1 
78 1 156 1 
62 1 79 1 42 1 184 1 21 1 156 1 
156 1 120 1 
150 1 156 1 
78 1 156 1 
150 1 156 1 
150 1 156 1 
104 1 169 1 147 1 156 1 
156 1 76 1 242 1 
15 1 78 1 51 1 71 2 5 2 187 1 129 1 36 1 55 1 158 2 195 1 105 1 163 1 88 1 156 2 93 1 166 1 
99 1 
15 1 51 1 35 1 5 2 187 1 129 1 55 1 195 1 105 1 163 1 88 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 52 2 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
167 1 203 1 31 1 123 1 148 1 5 2 219 1 191 1 55 1 152 1 163 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 52 2 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 198 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 219 1 5 2 71 3 7 1 103 1 37 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 60 3 61 1 62 1 1 1 63 1 123 2 3 1 2 1 66 1 4 1 67 1 184 2 127 1 71 2 5 3 7 1 193 2 192 1 194 1 134 1 8 1 9 1 11 1 141 2 14 1 203 1 144 2 143 2 79 2 19 2 206 1 82 1 21 1 148 2 152 2 208 1 156 3 93 2 94 2 97 1 31 2 33 1 216 1 218 1 219 1 39 2 160 1 222 1 44 3 163 1 162 1 46 1 166 1 167 1 110 1 227 1 55 4 232 1 233 1 114 1 239 1 241 1 180 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 71 3 219 1 5 2 7 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 121 1 94 3 
152 1 167 1 31 1 123 1 148 1 163 1 219 1 5 2 93 1 55 1 166 1 
167 1 203 1 31 2 123 2 148 2 5 3 219 1 55 1 152 2 163 1 93 1 166 1 
167 1 122 1 31 1 123 1 2 1 21 1 148 1 5 3 219 1 218 1 55 2 152 1 220 1 72 1 26 1 163 1 91 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 52 2 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
167 1 203 1 31 2 123 2 148 2 5 3 219 1 55 1 152 2 163 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
167 1 31 1 122 1 123 1 2 1 21 1 148 1 5 3 219 1 55 1 152 1 220 1 72 1 26 1 163 1 91 1 93 1 166 1 
167 1 203 1 31 1 123 1 148 1 5 2 219 1 55 1 152 1 163 1 240 1 93 1 166 1 
220 1 72 1 122 1 2 1 211 1 21 1 126 1 5 1 91 1 
167 1 31 1 122 1 123 1 2 1 21 1 148 1 5 3 219 1 55 1 152 1 220 1 72 1 26 1 163 1 91 1 93 1 166 1 
167 1 122 1 31 1 123 1 2 1 21 1 126 1 5 3 187 1 129 1 55 1 152 1 220 1 72 1 211 1 163 1 91 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 219 1 5 2 71 2 7 1 192 1 37 1 193 2 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 121 1 94 2 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 217 1 71 3 219 1 5 2 7 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 217 1 71 2 219 1 5 2 7 1 103 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 2 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
220 1 
77 1 43 1 205 1 188 1 156 1 
220 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
14 1 61 1 167 1 62 1 203 1 31 1 123 1 2 1 227 1 4 1 21 1 148 1 5 2 219 1 55 2 152 1 220 1 163 1 93 1 166 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 103 1 193 2 192 1 160 1 222 1 163 1 11 1 198 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 217 1 71 3 219 1 5 2 7 1 103 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 52 2 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 52 2 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 2 216 1 127 1 217 1 71 3 219 1 5 2 7 1 37 1 193 2 192 1 160 1 222 1 9 1 163 1 11 1 141 2 46 1 166 1 167 1 203 1 78 1 206 1 148 1 230 1 55 1 233 1 152 1 208 1 239 1 241 1 93 1 94 3 121 1 
0 1 1 1 31 1 123 1 33 1 3 1 67 1 216 1 127 1 219 1 5 2 71 3 7 1 193 2 192 1 160 1 222 1 163 1 11 1 141 2 46 1 166 1 167 1 78 1 206 1 148 1 55 1 233 1 152 1 208 1 239 1 93 1 241 1 94 3 
61 1 60 3 62 1 97 1 64 1 65 1 2 1 66 1 4 1 184 2 186 1 100 1 219 1 5 2 39 2 161 1 44 3 162 1 163 1 140 1 47 1 166 1 142 1 14 1 143 2 144 1 110 1 81 1 79 2 227 1 19 2 51 1 148 1 21 1 207 1 55 2 232 1 86 1 156 4 91 1 93 1 
61 1 60 3 62 1 97 1 64 1 65 1 2 1 66 1 184 2 219 1 5 2 130 1 102 1 39 2 41 1 135 1 161 1 106 1 44 3 163 1 162 1 165 1 139 1 47 1 166 1 14 1 143 2 144 1 110 1 79 2 171 1 19 2 51 1 148 1 21 1 207 1 55 1 232 1 236 1 27 1 86 1 155 1 156 4 93 1 
31 1 123 1 33 3 67 3 216 3 34 1 5 2 219 1 7 3 193 3 192 3 222 3 163 1 11 3 137 3 141 3 166 1 167 1 204 1 148 1 151 1 55 1 233 3 152 1 208 3 93 1 
214 1 31 1 123 1 33 1 67 1 216 1 34 1 5 2 219 1 7 1 193 1 192 1 222 1 163 1 11 1 137 1 141 1 166 1 167 1 204 1 148 1 55 1 233 1 152 1 208 1 93 1 
167 1 214 1 31 1 123 1 34 1 148 1 5 2 219 1 55 1 152 1 163 1 137 1 93 1 166 1 
31 1 123 1 33 1 67 1 216 1 34 1 5 2 219 1 7 1 193 1 192 1 222 1 163 1 11 1 137 1 141 1 166 1 167 1 204 1 148 1 55 1 233 1 152 1 208 1 93 1 
0 1 1 1 31 1 123 1 3 1 33 3 67 3 216 3 127 1 34 1 71 2 5 2 219 1 7 3 103 1 193 4 192 3 160 1 222 3 163 1 11 3 137 2 198 1 141 4 46 1 166 1 167 1 204 1 206 1 148 1 55 1 233 3 152 1 115 1 208 3 239 1 241 1 93 1 94 2 
31 1 123 1 33 1 67 1 216 1 34 1 5 2 219 1 7 1 193 1 192 1 43 1 222 1 163 1 11 1 137 1 141 1 166 1 167 1 78 1 77 1 49 1 204 1 205 1 20 1 148 1 55 1 233 1 152 1 208 1 156 1 93 1 
170 1 215 1 68 1 74 1 5 1 
209 1 238 1 5 1 
170 1 215 1 5 1 132 2 
18 1 209 1 5 1 118 1 
209 1 225 1 
62 1 97 1 66 1 21 1 
39 1 144 1 143 1 79 1 19 1 44 1 
62 1 21 1 135 1 27 1 106 1 197 1 165 1 
39 1 144 1 143 1 63 1 79 1 19 1 44 1 
78 1 1 1 71 1 156 1 193 1 94 1 
7 1 193 1 
78 1 71 1 156 1 94 1 
115 1 1 1 73 1 71 1 7 1 193 2 94 1 
7 1 193 1 
187 1 
129 1 
187 1 
148 1 
148 1 
219 1 
78 1 51 1 112 2 128 1 71 2 5 2 172 1 131 1 55 1 132 1 84 1 221 1 163 1 45 1 156 1 93 1 178 1 242 1 226 1 166 1 
108 1 
51 1 35 1 5 2 172 1 131 1 55 1 132 1 84 1 221 1 163 1 138 1 45 1 93 1 178 1 226 1 166 1 
214 1 51 1 5 2 172 1 131 1 55 1 132 1 84 1 221 1 163 1 45 1 93 1 178 1 226 1 166 1 
51 2 5 4 172 2 131 2 55 2 132 2 84 2 40 1 221 2 56 1 163 2 45 2 93 2 178 2 226 2 166 2 
78 1 51 1 112 1 128 1 71 1 5 2 172 1 131 1 55 1 132 1 84 1 221 1 163 1 45 1 156 3 93 1 178 1 242 2 226 1 166 1 
51 1 5 2 172 1 131 1 55 1 132 1 84 1 221 1 56 1 163 1 45 1 93 1 178 1 226 1 166 1 
51 2 35 1 5 4 172 2 131 2 55 2 132 2 84 2 221 2 56 1 163 2 138 1 45 2 93 2 178 2 226 2 166 2 
51 1 5 2 172 1 131 1 55 1 132 1 84 1 40 1 221 1 163 1 45 1 93 1 178 1 226 1 166 1 
60 2 78 1 16 1 156 2 
60 2 78 1 223 1 156 2 
95 1 96 1 60 2 122 1 2 1 184 2 128 1 71 1 5 3 218 1 190 1 131 1 132 1 72 1 135 1 40 1 221 1 223 1 162 1 163 1 165 1 139 1 45 1 108 1 166 1 226 1 110 1 16 1 51 1 21 1 112 1 172 1 232 1 22 1 55 2 84 1 25 2 26 1 27 1 156 2 178 1 93 1 91 1 
163 1 35 1 138 1 166 1 226 1 
61 1 60 2 62 1 97 1 63 1 66 1 2 1 4 1 184 2 128 1 71 1 5 2 218 1 131 1 132 1 39 3 221 1 44 4 223 1 162 1 163 1 45 1 108 1 166 1 226 1 14 1 143 3 144 1 169 1 110 1 16 1 79 3 227 1 19 3 51 1 21 1 112 1 172 1 232 1 55 3 84 1 156 3 178 1 93 1 242 1 
202 2 78 1 146 1 125 1 51 1 71 2 70 1 5 2 172 1 55 1 132 1 104 1 159 1 174 1 163 1 164 1 156 2 93 1 242 1 166 1 
159 1 174 1 125 1 35 1 70 1 164 1 
98 1 125 1 5 2 70 1 71 2 132 1 159 1 104 1 163 1 166 1 202 2 78 1 146 1 51 1 172 1 53 1 55 1 117 1 156 2 93 1 242 1 
125 1 5 2 70 2 71 1 6 1 132 1 159 1 163 1 164 1 76 1 166 1 202 1 77 1 205 1 51 1 83 1 172 1 55 1 235 1 115 1 174 1 57 1 156 2 93 1 242 1 
57 1 
95 1 96 1 122 1 2 1 184 2 125 1 218 1 71 2 5 3 70 2 132 1 159 1 72 1 135 1 163 1 165 1 139 1 164 1 200 1 166 1 202 2 77 1 169 2 146 1 205 1 51 1 21 1 83 1 172 1 55 2 22 1 232 1 235 1 25 4 174 1 26 1 27 1 57 1 212 1 117 1 156 3 93 1 91 1 92 1 242 2 
159 1 174 1 125 1 35 1 70 1 164 1 
61 1 62 1 63 1 66 1 2 1 4 1 184 2 125 1 70 2 5 2 71 2 132 1 200 1 14 1 202 2 144 1 143 4 77 1 79 4 146 1 205 1 19 4 21 1 83 1 212 1 156 3 92 1 93 1 97 1 218 1 159 1 39 4 44 5 163 1 164 1 166 1 169 2 227 1 51 1 172 1 55 3 232 1 235 1 174 1 57 1 242 2 
61 1 62 1 97 1 63 1 2 1 66 1 4 1 184 1 125 1 71 1 5 2 70 1 218 1 132 1 39 2 159 1 44 3 163 1 164 1 166 1 202 1 14 1 143 2 144 1 169 1 146 1 79 2 227 1 19 2 51 1 21 1 172 1 232 1 55 3 174 1 57 1 212 1 156 1 93 1 92 1 242 1 
202 1 115 1 235 1 71 1 70 1 83 1 
78 1 212 1 
78 1 92 1 
125 1 5 2 70 2 71 1 132 1 159 1 163 1 164 1 166 1 202 1 77 1 205 1 51 1 83 1 172 1 55 1 235 1 174 1 57 1 156 2 93 1 242 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 99 109 120 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 99 109 14 204 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 99 109 14 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String; | CONDITION | 5832 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 24416 | stmt -> ;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 1 128 1 223 1 216 1 219 1 50 1 
42 1 128 1 216 1 219 1 50 1 
209 1 45 2 179 1 
191 1 160 2 71 1 178 1 40 1 73 1 135 2 169 3 66 1 215 2 78 2 
191 1 160 2 71 1 178 1 40 1 42 1 5 1 36 1 230 1 135 2 169 2 171 1 215 1 186 1 78 4 81 1 
191 1 160 1 71 1 178 1 40 1 42 1 36 1 230 1 135 1 37 1 169 1 171 1 215 1 174 1 186 1 27 1 78 3 207 1 
191 1 160 1 71 1 178 1 40 1 42 1 36 1 230 2 135 1 64 1 169 1 171 1 215 1 186 1 78 3 81 1 
191 1 166 1 135 1 160 1 178 1 71 1 40 1 169 1 215 1 78 2 
191 1 160 1 193 1 71 1 178 1 40 1 42 1 36 1 230 4 23 1 135 1 169 1 171 1 215 1 153 1 186 1 78 3 97 1 
191 1 160 1 71 1 178 1 40 1 135 1 169 1 53 1 215 1 139 1 78 2 
191 1 71 1 40 1 205 1 
191 1 160 1 71 1 178 1 40 1 148 1 135 1 52 1 169 1 215 2 78 2 
191 1 160 1 178 1 40 1 41 1 42 2 18 1 36 2 230 1 135 1 37 1 169 1 171 1 215 1 216 1 174 1 186 1 78 3 27 1 207 1 
191 1 160 1 178 1 40 1 41 1 42 2 36 2 230 1 135 1 37 1 169 1 171 1 215 1 216 1 174 1 186 1 78 3 27 1 207 1 
191 1 192 1 160 1 71 1 178 1 40 1 42 1 41 1 18 1 93 1 36 1 135 1 169 1 10 1 215 1 216 1 78 2 
191 1 192 1 160 1 71 1 178 1 40 1 42 1 41 1 18 1 36 1 135 1 169 1 10 1 215 1 216 1 78 2 98 1 
191 1 192 1 160 1 71 1 178 1 40 1 42 1 41 1 44 1 164 1 36 1 135 1 169 1 10 1 215 1 216 1 217 1 78 2 
191 1 192 1 160 1 71 1 178 1 40 1 42 1 41 1 44 1 18 1 164 1 36 1 135 1 169 1 10 1 215 1 216 1 217 1 78 2 
191 1 135 1 160 2 178 1 71 1 40 1 169 2 66 1 215 1 78 3 
191 1 71 1 40 1 91 2 135 1 75 1 169 2 215 1 78 3 83 1 
191 1 212 1 135 1 75 1 71 1 40 1 169 1 215 2 78 2 91 1 
191 1 135 1 75 1 71 1 40 1 169 1 215 1 78 2 91 1 82 1 
94 3 88 1 34 1 
94 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
11 1 173 1 24 1 109 1 14 1 99 1 
87 1 86 1 46 1 198 1 59 1 58 1 182 1 51 1 152 1 173 4 11 4 206 2 109 1 125 1 70 1 157 1 14 1 111 1 99 1 15 1 83 1 
11 1 173 1 109 1 14 1 99 1 
120 1 11 1 173 1 109 1 99 1 
204 1 11 1 173 1 24 1 109 1 14 1 99 1 
80 1 
11 1 173 1 24 1 109 1 14 1 99 1 
87 1 4 1 206 1 
206 1 74 1 
9 1 206 1 
192 1 42 1 221 1 164 1 180 1 227 1 103 1 10 1 216 1 206 1 96 1 38 1 
192 1 42 1 10 1 206 1 216 1 180 1 38 1 
9 1 206 1 
221 1 42 1 232 1 216 1 206 1 180 1 
206 1 149 1 
9 1 206 1 
206 1 74 1 
206 1 74 1 
122 1 162 1 19 1 206 1 
118 1 206 1 138 1 
85 1 160 1 178 1 40 1 163 1 224 2 228 1 9 1 121 1 169 1 215 1 206 2 108 1 13 2 78 2 126 1 142 1 
211 1 
160 1 178 1 40 1 163 1 228 1 121 1 169 1 215 1 205 1 108 1 78 2 126 1 142 1 
160 2 178 1 40 1 48 2 169 1 106 2 168 2 215 1 12 1 175 1 78 3 142 1 
177 2 116 1 178 1 117 2 6 2 180 6 181 2 60 2 119 2 183 2 7 4 64 1 184 2 123 2 186 1 187 2 13 4 69 1 70 2 189 2 194 1 195 2 128 2 72 2 197 1 21 4 132 1 131 2 201 2 134 2 203 3 137 2 206 12 76 2 26 1 78 3 142 1 29 1 82 2 144 1 89 1 145 2 32 2 33 1 147 2 92 1 150 2 151 1 215 2 216 1 218 1 159 2 160 1 39 2 40 1 221 3 41 1 42 2 161 2 48 1 225 1 102 4 229 4 230 1 52 1 105 1 169 1 106 1 168 1 171 1 170 1 54 1 172 2 233 2 175 1 110 4 111 2 56 3 112 2 
178 1 117 1 90 1 32 1 181 1 147 1 62 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 12 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 1 2 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
160 2 178 1 40 1 48 2 169 1 106 2 168 2 215 1 12 1 175 1 78 3 142 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 1 2 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
160 1 178 1 40 1 48 1 65 1 169 1 106 1 168 1 215 1 12 1 175 1 78 2 142 1 
178 1 117 1 1 2 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 235 1 
178 1 117 1 32 1 181 1 147 1 61 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
116 1 178 1 117 1 5 1 6 1 180 2 181 1 60 1 119 1 7 2 63 1 8 1 10 1 184 1 123 1 12 1 13 2 69 1 70 1 189 1 192 1 195 1 131 1 201 1 206 3 79 1 140 1 78 3 143 1 142 1 82 1 87 3 145 1 32 1 147 1 215 4 216 1 96 2 38 1 98 1 160 2 39 1 40 1 42 1 41 1 221 2 161 1 222 1 44 2 164 3 48 2 102 2 227 2 103 2 52 1 169 2 106 2 168 2 172 1 233 1 175 1 110 2 111 1 112 1 
178 1 117 1 90 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 12 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 222 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
177 1 178 1 117 1 6 1 180 3 181 1 60 1 119 1 183 1 7 2 64 1 186 1 123 1 184 1 187 1 13 2 70 1 189 1 195 1 128 1 72 1 21 2 131 1 201 1 134 1 203 3 137 1 206 2 78 3 142 1 82 1 89 1 145 1 32 1 147 1 150 1 215 1 218 1 159 1 160 1 39 1 40 1 42 1 161 1 48 1 102 2 229 2 230 1 105 1 169 1 106 1 168 1 171 1 172 1 233 1 175 1 110 2 111 1 112 1 
177 1 160 1 178 1 40 1 48 1 169 1 106 1 168 1 215 1 12 1 175 1 78 2 142 1 
177 1 114 1 117 1 180 3 6 1 181 1 62 1 60 1 61 1 119 1 183 1 7 2 64 1 123 1 184 1 124 1 187 1 13 2 70 2 189 1 195 1 128 1 72 1 21 2 131 1 201 1 134 1 203 3 137 1 206 2 78 1 82 1 83 1 145 1 89 1 90 1 32 1 147 1 150 1 218 1 159 1 39 1 42 1 161 1 222 1 102 2 230 1 229 2 105 1 171 1 233 1 172 1 110 2 111 1 112 1 
177 1 178 1 117 1 6 1 180 3 181 1 60 1 119 1 183 1 7 2 64 1 184 1 186 1 123 1 187 1 13 2 70 1 189 1 195 1 128 1 72 1 21 2 131 1 201 1 134 1 203 3 137 1 206 2 78 3 142 1 82 1 89 1 145 1 32 1 147 1 150 1 215 1 218 1 159 1 160 1 39 1 40 1 42 1 161 1 48 1 102 2 229 2 230 1 105 1 169 1 106 1 168 1 171 1 172 1 233 1 175 1 110 2 111 1 112 1 235 1 
177 1 114 1 117 1 6 1 180 3 181 1 60 1 119 1 183 1 7 2 64 1 184 1 123 1 187 1 13 2 70 1 189 1 195 1 128 1 72 1 21 2 131 1 201 1 134 1 75 1 203 3 137 1 206 2 78 3 142 1 82 1 83 1 89 1 145 1 32 1 147 1 91 1 150 1 215 1 218 1 159 1 39 1 40 1 42 1 161 1 48 1 102 2 229 2 230 1 105 1 169 1 106 1 168 1 171 1 172 1 233 1 175 1 110 2 111 1 112 1 235 1 
178 1 117 1 90 1 32 1 147 1 181 1 61 1 62 1 60 1 119 1 7 2 215 1 124 1 184 1 123 1 12 1 13 2 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 48 1 102 2 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 62 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 12 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 222 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 60 1 62 1 119 1 7 2 9 1 215 1 184 1 123 1 12 1 13 2 70 1 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 2 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
35 1 229 1 206 1 21 1 150 1 
35 1 229 1 134 1 206 1 21 1 
229 1 136 1 206 1 21 1 226 1 150 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
116 1 178 1 117 1 6 1 180 3 181 1 61 1 62 1 60 1 119 1 7 2 10 1 124 1 184 1 123 1 12 1 13 2 69 1 70 2 189 1 192 1 195 1 128 1 72 1 21 2 131 1 201 1 134 1 206 2 78 2 143 1 142 1 82 1 145 1 90 1 32 1 147 1 150 1 215 2 216 1 96 3 38 1 160 1 39 1 40 1 42 1 41 1 221 3 161 1 222 1 44 1 164 4 48 1 102 2 227 3 103 3 229 2 169 1 106 1 168 1 172 1 233 1 175 1 110 2 111 1 112 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 235 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 1 2 90 1 32 1 181 1 147 1 62 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 12 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 222 1 72 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 1 2 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 90 1 32 1 181 1 147 1 61 1 62 1 60 1 119 1 7 2 9 1 215 1 124 1 184 1 123 1 12 1 13 3 70 2 189 1 160 1 39 1 40 1 161 1 195 1 222 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
178 1 117 1 32 1 181 1 147 1 60 1 119 1 7 2 9 1 215 1 184 1 123 1 13 3 70 1 189 1 160 1 39 1 40 1 161 1 195 1 48 1 102 3 131 1 201 1 168 1 106 1 169 1 172 1 233 1 78 2 175 1 110 2 142 1 111 1 
160 1 178 1 40 1 168 1 106 1 169 1 215 1 78 2 175 1 48 1 142 1 
176 1 116 1 178 1 87 3 145 1 180 2 6 1 93 1 37 1 10 1 215 2 96 2 216 1 154 1 155 1 156 1 69 1 192 1 160 1 40 1 221 2 41 1 42 1 44 1 164 3 227 2 103 2 230 1 228 1 167 1 169 1 174 1 206 4 27 1 78 2 207 1 143 1 142 1 82 1 113 1 112 1 
176 1 116 1 178 1 87 3 145 1 180 2 6 1 183 1 10 1 215 1 96 2 216 1 187 1 154 1 155 1 156 1 69 1 159 1 192 1 160 1 40 1 221 2 42 1 44 1 101 1 164 3 47 1 132 1 49 1 227 2 103 2 228 1 167 1 169 1 137 1 53 1 234 1 206 4 139 1 78 2 142 1 82 1 113 1 112 1 
178 1 117 1 32 3 181 1 147 3 60 1 119 1 7 4 215 1 184 1 123 3 13 2 70 3 157 1 189 3 160 1 39 1 40 1 161 1 195 3 72 1 45 1 198 2 48 1 102 2 131 3 201 1 51 1 169 1 106 1 168 1 172 1 233 3 175 1 78 2 110 4 142 1 111 3 235 1 
178 1 32 1 147 1 7 1 35 1 9 1 215 1 123 1 70 1 157 1 189 1 160 1 16 1 40 1 195 1 198 1 48 1 21 1 131 1 229 1 51 1 169 1 106 1 168 1 233 1 206 1 175 1 78 2 110 1 142 1 111 1 57 1 
160 1 178 1 40 1 195 1 198 1 48 1 32 1 147 1 131 1 7 1 51 1 168 1 106 1 169 1 233 1 215 1 123 1 78 2 175 1 157 1 70 1 110 1 142 1 111 1 189 1 
178 1 32 3 147 3 7 3 215 1 123 3 188 1 70 3 157 1 189 3 160 1 40 1 195 3 198 3 48 1 131 3 51 1 169 1 106 1 168 1 233 3 175 1 78 2 110 3 142 1 111 3 
178 1 32 1 147 1 7 1 215 1 123 1 70 1 157 1 189 1 160 1 40 1 195 1 198 1 48 1 131 1 166 1 51 1 169 1 106 1 168 1 233 1 175 1 78 2 110 1 142 1 111 1 
160 1 178 1 40 1 198 1 48 1 166 1 51 1 169 1 106 1 168 1 215 1 175 1 78 2 142 1 
190 1 78 1 28 1 200 1 
78 1 68 1 200 1 
129 1 73 1 78 1 127 2 
214 1 129 1 73 1 78 1 146 1 
55 1 200 1 
221 1 44 1 96 1 164 1 227 1 103 1 
221 1 44 1 96 1 164 1 38 1 227 1 103 1 
42 1 132 1 183 1 137 1 216 1 159 1 30 1 
116 1 42 1 216 1 69 1 
213 1 172 1 45 1 13 1 110 2 32 1 102 1 
110 1 32 1 
9 1 172 1 206 1 13 1 110 1 102 1 
110 1 32 1 
9 1 206 1 13 1 102 1 
75 1 
91 1 
91 1 
160 1 
178 1 
160 1 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 166 1 75 1 169 1 215 1 67 1 78 2 142 1 
40 2 31 2 17 2 20 2 91 2 165 2 22 2 228 2 75 2 169 2 107 1 215 2 67 2 77 1 78 4 142 2 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 75 1 169 1 107 1 215 1 67 1 78 2 142 1 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 9 1 75 1 169 1 215 1 206 1 138 1 67 1 13 2 78 2 142 1 208 1 100 2 
141 1 
9 1 84 1 87 2 206 2 
9 1 87 2 206 2 133 1 
114 1 84 1 87 2 31 1 145 1 89 1 180 2 6 1 91 1 183 1 64 1 215 2 67 1 218 1 187 1 13 1 159 1 100 1 40 1 42 1 130 1 17 1 20 1 22 1 165 1 133 1 228 1 230 1 75 1 52 1 105 1 203 2 169 1 137 1 171 1 107 1 206 2 78 3 141 1 142 1 208 1 82 1 112 1 
40 1 205 1 67 1 142 1 158 1 
84 1 116 1 87 2 31 1 145 1 180 2 6 1 91 1 122 1 10 1 215 3 96 3 67 1 216 1 13 1 38 1 69 1 100 1 192 1 40 1 221 3 41 1 42 1 44 1 17 1 164 4 20 1 22 1 165 1 227 3 133 1 103 3 228 1 75 1 52 1 169 1 138 1 206 3 78 2 141 1 142 1 143 1 208 1 82 1 112 1 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 9 1 75 1 169 1 215 1 206 3 138 2 67 1 13 1 78 2 142 1 208 1 100 1 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 75 1 169 1 215 1 67 1 77 1 78 2 142 1 
40 2 31 2 17 2 20 2 91 2 165 2 22 2 228 2 75 2 169 2 215 2 205 1 67 2 77 1 78 4 142 2 158 1 
40 1 31 1 17 1 20 1 91 1 165 1 22 1 228 1 75 1 169 1 215 1 205 1 67 1 78 2 142 1 158 1 
0 1 115 1 40 1 162 1 2 1 210 1 3 1 91 1 199 1 228 1 9 1 75 1 169 1 215 1 206 2 138 1 185 2 13 2 78 2 142 1 
0 1 116 1 115 1 210 1 2 1 3 1 180 1 91 1 122 1 10 1 215 3 96 2 216 1 185 1 13 1 38 1 69 1 192 1 40 1 221 2 41 1 42 1 43 1 44 1 164 3 227 2 199 1 103 2 228 1 231 1 75 1 52 1 202 1 169 1 206 1 138 1 78 2 142 1 143 1 82 1 112 1 
210 1 95 1 45 1 196 1 185 1 13 1 
9 1 231 1 
9 1 202 1 
115 1 210 2 2 1 3 1 91 1 95 1 215 1 185 1 13 1 40 1 43 1 196 1 21 1 199 1 228 1 229 1 75 1 169 1 206 2 138 1 78 2 142 1 
209 1 115 1 210 2 2 1 3 1 118 1 91 1 95 1 215 1 185 1 13 1 40 1 43 1 196 1 45 1 21 1 199 1 228 1 229 1 75 1 169 1 206 2 138 1 78 2 142 1 
43 1 
0 1 114 1 115 1 210 2 2 1 3 1 89 1 180 2 91 1 183 1 122 2 64 1 95 1 215 2 218 1 185 2 187 1 13 2 220 1 159 1 40 1 42 1 43 1 128 1 196 1 21 1 199 1 229 1 228 1 230 1 231 1 52 1 75 1 202 1 105 1 203 4 169 1 137 1 171 1 206 3 138 2 78 3 142 1 82 1 112 1 
115 1 210 1 2 1 3 1 205 1 199 1 
0 1 116 1 115 1 210 2 2 1 3 1 180 2 91 1 122 2 10 1 95 1 215 3 96 4 216 1 185 2 13 2 38 1 69 1 192 1 40 1 221 4 41 1 42 1 43 1 128 1 196 1 44 1 164 5 21 1 227 4 199 1 103 4 229 1 228 1 231 1 75 1 52 1 202 1 169 1 206 3 138 2 78 2 142 1 143 1 82 1 112 1 
115 1 210 1 2 1 3 1 205 1 199 1 
0 1 210 1 2 1 3 1 91 1 9 1 215 1 185 2 13 2 220 1 40 1 162 1 104 1 228 1 75 1 169 1 25 1 138 1 206 2 78 2 142 1 

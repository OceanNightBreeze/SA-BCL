#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 179 196 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 179 196 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 179 196 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 179 196 184 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 13145 | 2 -> 3
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 3631 | return null
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 220 1 60 1 195 1 169 1 178 1 
71 1 220 1 60 1 169 1 178 1 
140 2 122 1 150 1 
172 1 70 1 227 1 31 1 34 1 108 1 230 1 163 1 149 1 11 3 178 1 164 1 58 1 251 1 221 2 63 1 213 1 29 1 225 1 
172 1 227 1 70 2 214 1 31 1 34 1 35 1 230 1 149 1 11 3 178 1 164 1 58 1 221 1 63 1 29 1 
227 1 104 1 31 2 34 1 230 3 149 1 11 2 221 1 63 2 29 1 
172 1 227 1 70 1 214 1 31 1 34 1 230 2 149 1 11 4 178 1 164 1 58 1 221 2 63 2 103 1 29 1 
34 1 89 1 149 1 29 1 
227 1 106 1 31 2 34 1 230 1 149 1 11 2 36 1 221 1 63 1 29 1 
172 2 70 1 227 1 31 1 34 1 230 1 108 1 163 1 11 3 178 2 164 1 58 1 60 1 249 1 251 1 221 1 63 1 29 1 42 1 225 1 
172 2 70 1 227 1 31 1 34 1 230 1 108 1 163 1 11 3 178 2 164 1 58 1 60 1 251 1 221 1 63 1 29 1 42 1 225 1 
43 1 172 1 227 1 173 1 31 1 34 1 143 1 230 1 149 1 11 2 178 1 60 1 249 1 221 1 63 1 29 1 42 1 
172 1 227 1 173 1 31 1 34 1 143 1 230 1 149 1 11 2 178 1 60 1 249 1 221 1 63 1 29 1 224 1 42 1 
172 1 227 1 173 1 31 1 34 1 143 1 230 1 74 1 149 1 11 2 178 1 235 1 60 1 221 1 63 1 17 1 29 1 42 1 
172 1 227 1 173 1 31 1 34 1 143 1 230 1 74 1 149 1 11 2 178 1 235 1 60 1 249 1 221 1 63 1 17 1 29 1 42 1 
227 1 104 1 31 1 34 1 230 2 149 1 11 3 221 2 63 1 29 1 
68 2 19 1 31 1 34 1 230 2 149 1 11 3 63 1 118 1 29 1 
68 1 46 1 31 2 34 1 230 1 118 1 63 1 11 2 149 1 29 1 
68 1 31 1 34 1 230 1 149 1 11 2 63 1 118 1 185 1 29 1 
68 1 31 1 34 1 230 1 118 1 63 1 217 1 11 2 149 1 29 1 
172 1 68 1 70 4 31 1 141 1 34 1 32 1 230 1 241 1 9 1 149 1 11 3 178 1 58 1 14 1 63 1 118 1 29 1 
247 1 68 1 219 1 31 1 34 1 230 1 118 1 63 1 11 2 149 1 29 1 
59 1 72 1 54 3 
54 1 
1 2 2 1 3 2 146 1 147 2 11 4 10 2 154 1 155 2 157 1 19 1 20 1 21 1 23 6 24 1 167 3 25 3 27 1 170 2 28 3 29 1 31 5 174 2 35 1 176 5 179 1 178 2 180 4 181 2 37 1 183 1 185 2 41 1 42 1 49 1 48 4 50 3 189 1 192 3 57 1 56 3 58 1 60 1 196 1 62 14 66 2 198 1 68 2 69 3 70 2 71 2 201 1 207 3 208 3 77 1 210 3 211 3 81 1 214 1 87 3 86 1 216 3 90 1 92 4 94 1 97 1 98 3 100 2 103 1 223 2 226 4 104 1 105 1 106 1 107 1 230 4 109 2 232 5 112 1 234 1 113 2 114 1 236 3 237 2 118 1 120 1 121 1 240 1 124 1 241 1 128 1 132 4 131 4 133 2 250 2 
70 2 69 3 68 1 71 2 201 1 2 1 1 2 3 2 146 1 10 2 11 3 207 3 208 3 77 1 210 3 211 2 154 1 155 2 157 1 81 1 214 1 19 1 87 3 86 1 20 1 21 1 23 6 90 1 24 1 92 4 94 1 167 3 97 1 25 2 27 1 98 3 100 2 170 2 28 3 223 2 29 1 226 4 104 1 105 1 31 3 107 1 174 2 35 1 109 2 230 2 176 5 178 2 112 1 179 1 232 5 180 4 181 2 113 2 114 1 236 3 37 1 237 2 185 2 118 1 41 1 42 1 120 1 121 1 48 4 240 1 50 2 124 1 241 1 192 3 128 1 56 3 57 1 131 4 132 4 58 1 133 2 60 1 250 2 62 4 196 1 66 2 198 1 
226 4 19 1 201 1 94 1 20 1 27 1 196 1 24 1 41 1 179 1 81 1 180 4 
68 1 70 3 71 2 201 1 2 1 146 1 11 3 75 1 206 1 13 3 12 2 77 1 154 1 81 1 82 2 214 1 19 1 87 4 20 1 23 4 90 1 24 1 94 1 97 1 27 1 28 4 222 1 223 2 29 1 226 4 104 1 105 1 31 3 107 1 35 2 230 2 231 2 179 1 112 1 178 2 233 4 180 4 114 1 117 2 185 2 118 1 238 4 41 1 42 1 119 2 239 2 47 1 48 2 240 1 188 1 124 1 241 1 190 1 248 4 57 1 132 2 131 4 58 1 60 1 62 8 196 1 61 2 252 1 198 1 
226 4 19 1 120 1 201 1 20 1 24 1 179 1 180 4 128 1 94 1 196 1 27 1 186 1 81 1 41 1 
226 4 19 1 120 1 201 1 20 1 24 1 179 1 180 4 128 1 94 1 196 1 27 1 186 1 81 1 41 1 
67 1 70 2 69 3 68 1 71 2 201 1 2 1 1 2 3 2 146 1 10 2 11 3 207 3 208 3 77 1 210 3 211 2 154 1 155 2 157 1 81 1 214 1 19 1 87 3 86 1 20 1 161 1 23 6 90 1 24 1 92 4 94 1 167 3 25 2 27 1 98 3 100 2 170 2 28 3 223 2 29 1 226 4 104 1 105 1 31 3 107 1 174 2 35 1 109 2 230 2 176 5 178 2 232 5 179 1 112 1 180 4 181 2 113 2 114 1 236 3 37 1 237 2 185 2 118 1 41 1 42 1 121 1 48 4 240 1 50 2 124 1 241 1 192 3 56 3 57 1 131 4 132 4 58 1 133 2 60 1 250 2 62 4 196 1 136 1 66 2 198 1 
226 4 201 1 120 1 20 1 24 1 179 1 180 4 128 1 94 1 196 1 27 1 186 1 81 1 41 1 
84 1 
1 2 2 1 3 2 146 1 11 3 10 2 154 1 155 2 157 1 19 1 20 1 21 1 23 6 161 1 24 1 167 3 25 2 27 1 170 2 28 3 29 1 31 4 174 2 35 2 176 5 179 1 178 2 180 4 181 2 37 1 185 2 41 1 42 1 48 4 50 2 192 3 57 1 56 3 58 1 60 1 196 1 62 4 66 2 198 1 68 1 69 3 70 3 67 1 71 2 201 1 207 3 208 3 77 1 210 3 211 2 81 1 83 1 214 1 86 1 87 3 90 1 92 4 94 1 97 1 98 3 100 2 223 2 104 1 226 4 105 1 106 1 107 1 230 2 109 2 232 5 112 1 113 2 114 1 236 3 237 2 118 1 120 1 121 1 240 1 124 1 241 1 128 1 132 4 131 4 133 2 250 2 
226 1 27 1 196 1 179 1 180 1 
67 1 70 2 69 3 68 1 71 2 201 1 2 1 1 2 3 2 146 1 10 2 11 3 207 3 208 3 77 1 210 3 211 2 154 1 155 2 157 1 214 1 19 1 87 3 86 1 20 1 21 1 161 1 23 6 90 1 24 1 92 4 94 1 167 3 25 2 27 1 98 3 100 2 170 2 28 3 223 2 29 1 226 4 104 1 105 1 31 3 107 1 174 2 35 1 109 2 230 2 176 5 178 2 179 1 232 5 112 1 180 4 181 2 113 2 114 1 236 3 37 1 237 2 185 2 118 1 41 1 42 1 120 1 121 1 48 4 240 1 50 2 124 1 241 1 192 3 128 1 56 3 57 1 131 4 132 4 58 1 133 2 60 1 250 2 62 4 196 1 66 2 198 1 
67 1 70 2 69 3 68 1 71 2 200 1 201 1 2 1 1 2 3 2 146 1 10 2 11 3 207 3 208 3 77 1 210 3 211 2 154 1 155 2 157 1 214 1 19 1 87 3 86 1 20 1 21 1 161 1 23 6 90 1 24 1 92 4 94 1 167 3 25 2 27 1 98 3 100 2 170 2 28 3 223 2 29 1 226 4 104 1 105 1 31 3 107 1 174 2 35 1 109 2 230 2 176 5 178 2 179 1 232 5 112 1 180 4 181 2 113 2 114 1 236 3 37 1 237 2 185 2 118 1 41 1 42 1 120 1 121 1 48 4 240 1 50 2 124 1 241 1 192 3 128 1 56 3 57 1 131 4 132 4 58 1 133 2 60 1 250 2 62 4 66 2 198 1 
67 1 70 2 69 3 68 1 71 2 201 1 2 1 1 2 3 2 146 1 10 2 11 3 207 3 208 3 77 1 210 3 211 2 154 1 155 2 157 1 81 1 214 1 19 1 87 3 86 1 20 1 161 1 23 6 90 1 24 1 92 4 94 1 167 3 25 2 27 1 98 3 100 2 170 2 28 3 223 2 29 1 226 4 104 1 105 1 31 3 107 1 174 2 33 1 35 1 109 2 230 2 176 5 178 2 112 1 179 1 232 5 180 4 181 2 113 2 114 1 236 3 37 1 237 2 185 2 184 1 118 1 186 1 41 1 42 1 120 1 121 1 48 4 240 1 50 2 124 1 241 1 192 3 128 1 56 3 57 1 131 4 132 4 58 1 133 2 60 1 250 2 62 4 196 1 66 2 198 1 
228 1 183 1 62 1 
173 1 143 1 60 1 62 1 23 1 65 1 178 1 
173 1 143 1 87 1 74 1 23 1 148 1 178 1 60 1 153 1 62 1 26 1 65 1 
87 1 60 1 62 1 23 1 178 1 126 1 
5 1 62 1 
5 1 62 1 
44 1 62 1 
62 1 246 1 
5 1 62 1 
62 1 246 1 
62 1 246 1 
152 1 62 1 238 1 242 1 
62 1 7 1 233 1 
68 1 31 1 145 1 5 1 230 1 11 2 191 2 165 1 129 1 57 1 131 2 78 1 62 2 118 1 138 1 29 1 82 1 
177 1 
68 1 31 1 89 1 230 1 11 2 165 1 129 1 57 1 78 1 118 1 138 1 29 1 82 1 
227 1 31 1 230 1 50 2 245 1 11 3 57 1 37 1 25 2 211 2 221 2 29 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 39 2 155 1 50 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
227 1 31 1 230 1 50 1 245 1 11 2 57 1 37 1 25 1 211 1 221 1 29 1 30 1 
227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 39 2 155 1 50 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 83 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 2 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
69 1 142 1 143 1 3 1 203 1 74 3 148 2 11 3 10 1 207 1 208 1 151 1 153 2 210 1 211 2 16 1 154 1 155 1 17 2 87 2 162 1 23 2 92 2 167 1 25 2 98 1 26 2 221 2 170 1 223 1 103 1 29 1 224 1 227 1 173 1 106 1 31 4 107 1 174 1 230 2 176 2 232 2 178 1 181 1 113 1 236 1 37 1 183 3 237 1 185 1 42 1 50 2 124 1 245 1 192 1 57 1 56 1 131 2 133 1 60 1 62 3 250 1 65 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 245 1 125 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
227 1 31 1 230 1 50 2 245 1 11 3 57 1 37 1 25 2 211 2 221 2 29 1 
70 1 69 2 71 2 2 1 1 2 202 1 3 2 6 2 11 3 10 2 207 2 208 2 77 1 79 2 210 2 211 1 212 1 155 2 158 2 87 3 160 2 23 6 92 4 164 1 167 2 25 1 99 1 98 2 100 2 221 1 170 2 102 2 223 2 28 3 29 1 171 1 227 1 31 2 106 1 107 1 174 2 35 1 230 1 176 4 178 2 232 4 181 2 113 2 115 1 116 1 37 1 236 2 237 2 185 2 42 1 48 4 50 1 124 1 53 1 244 1 192 2 127 2 57 1 56 2 132 4 58 1 131 4 133 2 60 1 134 1 197 1 62 4 250 2 66 2 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 39 2 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
227 1 31 1 57 1 25 1 37 1 50 1 230 1 211 1 221 1 11 2 29 1 
70 1 69 1 71 1 2 1 1 1 3 1 6 1 11 3 10 1 207 1 208 1 77 1 79 1 210 1 211 1 155 1 158 1 160 1 23 3 92 2 164 1 167 1 25 1 98 1 100 1 221 1 170 1 102 1 223 1 28 3 29 1 227 1 31 1 174 1 35 1 230 1 176 2 178 1 232 2 181 1 113 1 37 1 236 1 237 1 185 1 48 2 50 1 244 1 192 1 127 1 57 1 56 1 132 2 58 1 131 2 133 1 62 2 250 1 66 1 
227 1 31 1 230 1 50 1 6 1 245 1 11 2 57 1 37 1 25 1 211 1 221 1 29 1 
70 1 69 1 0 1 71 1 2 1 1 1 3 1 6 1 11 1 10 1 207 1 208 1 77 1 79 1 210 1 16 1 155 1 19 1 158 1 160 1 23 3 92 2 167 1 98 1 100 1 170 1 102 1 28 3 223 1 174 1 35 1 229 1 176 2 178 1 232 2 181 1 113 1 236 1 237 1 185 1 48 2 241 1 244 1 243 1 125 1 192 2 127 1 56 1 132 2 58 1 131 2 133 1 250 1 62 2 66 1 
70 1 69 1 71 1 2 1 1 1 3 1 6 1 11 3 10 1 207 1 208 1 77 1 79 1 210 1 211 1 155 1 83 1 158 1 160 1 23 3 92 2 164 1 167 1 25 1 98 1 100 1 221 1 170 1 102 1 223 1 28 3 29 1 227 1 31 1 174 1 35 1 230 1 176 2 178 1 232 2 181 1 113 1 37 1 236 1 237 1 185 1 48 2 50 1 244 1 192 1 127 1 57 1 56 1 132 2 58 1 131 2 133 1 62 2 250 1 66 1 
70 1 68 1 69 1 71 1 1 1 2 1 3 1 6 1 11 3 10 1 207 1 208 1 77 1 79 1 210 1 211 1 155 1 83 1 19 1 158 1 160 1 23 3 92 2 167 1 25 1 98 1 100 1 170 1 102 1 223 1 28 3 29 1 31 1 174 1 35 1 230 1 176 2 178 1 232 2 181 1 113 1 37 1 236 1 237 1 118 1 185 1 48 2 50 1 241 1 244 1 192 1 127 1 57 1 56 1 132 2 58 1 131 2 133 1 62 2 250 1 66 1 
0 1 227 1 69 1 31 1 229 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 16 1 211 1 237 1 155 1 50 1 243 1 245 1 125 1 192 2 92 2 56 1 57 1 167 1 131 2 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 100 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 100 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 100 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 10 1 11 2 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 2 192 1 57 1 56 1 167 1 131 2 133 1 25 1 98 1 250 1 221 1 100 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 100 1 170 1 29 1 66 1 
132 1 96 1 48 1 62 1 160 1 
132 1 96 1 48 1 1 1 62 1 
132 1 48 1 168 1 62 1 160 1 205 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 71 1 1 1 143 1 3 1 74 4 148 3 11 2 10 1 207 1 208 1 153 3 210 1 16 1 211 1 154 1 155 1 17 1 87 3 160 1 23 3 92 2 167 1 25 1 98 1 26 3 100 1 221 1 170 1 223 1 29 1 227 1 173 1 31 2 107 1 174 1 229 1 230 1 176 2 178 1 232 2 181 1 113 1 236 1 37 1 237 1 185 1 42 1 48 2 50 1 124 1 243 1 245 1 125 1 192 2 56 1 57 1 132 2 131 2 133 1 60 1 62 2 250 1 65 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 83 1 50 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
69 1 227 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 39 2 155 1 50 1 243 1 245 1 125 1 92 3 192 1 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 100 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 39 2 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
0 1 69 1 227 1 31 1 229 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 16 1 155 1 50 1 243 1 245 1 125 1 92 3 192 2 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
227 1 69 1 31 1 5 1 230 1 176 2 11 2 10 1 232 2 207 1 208 1 181 1 113 1 236 1 37 1 210 1 211 1 237 1 155 1 50 1 192 1 92 3 57 1 56 1 167 1 131 3 133 1 25 1 98 1 250 1 221 1 170 1 29 1 66 1 
70 1 227 1 173 1 31 2 174 1 143 1 107 1 3 1 108 1 230 1 74 3 148 2 111 1 11 2 178 1 183 3 153 2 15 1 185 1 154 1 17 1 82 1 42 1 43 1 85 1 215 1 87 2 124 1 23 2 163 1 57 1 193 1 60 1 251 1 26 2 62 4 221 1 64 1 223 1 29 1 225 1 
139 1 227 1 173 1 31 1 143 1 107 1 174 1 3 1 230 1 110 1 74 3 148 2 8 1 111 1 11 2 178 1 115 1 183 3 79 1 153 2 15 1 185 1 80 1 17 1 82 1 158 1 85 1 215 1 87 2 124 1 23 2 127 1 247 1 219 1 57 1 193 1 60 1 26 2 62 4 221 1 64 1 102 1 223 1 29 1 
69 3 227 1 140 1 31 1 230 1 176 4 10 1 11 2 232 4 207 3 208 3 181 1 113 1 236 3 37 1 210 3 237 1 211 1 155 1 157 1 83 1 121 1 86 2 50 1 92 2 192 3 56 3 57 1 131 2 167 3 133 1 25 1 250 1 98 3 100 1 221 1 170 1 29 1 66 1 
69 3 227 1 31 1 230 1 176 3 11 2 232 3 207 3 208 3 236 3 37 1 210 3 211 1 157 1 121 1 86 3 50 1 52 1 192 3 56 3 57 1 167 3 25 1 98 3 221 1 29 1 
69 1 227 1 31 1 230 1 176 1 11 2 232 1 207 1 208 1 236 1 37 1 210 1 211 1 157 1 121 1 86 1 50 1 217 1 192 1 56 1 57 1 167 1 25 1 98 1 221 1 29 1 
227 1 31 1 86 1 230 1 50 1 217 1 11 2 57 1 37 1 25 1 211 1 221 1 157 1 29 1 
227 1 69 1 31 1 121 1 86 1 50 1 230 1 176 1 11 2 192 1 232 1 207 1 208 1 57 1 56 1 167 1 25 1 37 1 236 1 210 1 211 1 98 1 221 1 157 1 29 1 
69 1 227 1 31 1 5 1 109 1 230 1 176 1 11 2 232 1 207 1 209 1 208 1 236 1 37 1 210 1 211 1 157 1 121 1 48 1 86 1 50 1 192 1 56 1 57 1 132 1 167 1 96 1 25 1 62 1 98 1 221 1 29 1 
123 1 101 1 11 1 199 1 
73 1 51 1 213 1 11 1 187 1 
22 1 11 1 199 1 
4 2 213 1 11 1 187 1 
38 1 199 1 
87 1 153 1 26 1 74 1 148 1 17 1 
107 1 60 1 124 1 178 1 
158 1 178 1 127 1 93 1 115 1 60 1 79 1 
87 1 153 1 26 1 74 1 148 1 17 1 65 1 
131 1 133 1 5 1 62 1 92 1 232 1 
69 1 232 1 
131 1 5 1 62 1 92 1 
69 1 140 1 45 1 131 1 133 1 92 1 232 2 
69 1 232 1 
68 1 
118 1 
68 1 
221 1 
221 1 
227 1 
31 1 159 1 144 1 4 1 88 1 230 1 218 1 11 2 55 1 57 1 95 1 135 1 40 1 29 1 82 1 
31 1 159 1 144 1 4 1 230 1 217 1 218 1 11 2 55 1 57 1 95 1 135 1 40 1 29 1 82 1 
31 2 159 2 144 2 4 2 88 1 230 2 218 2 11 4 55 2 57 2 95 2 182 1 40 2 135 2 29 2 82 2 
31 1 159 1 144 1 4 1 5 1 230 1 204 2 218 1 11 2 233 1 55 1 57 1 131 2 95 1 76 1 62 1 135 1 40 1 29 1 82 1 
156 1 
31 1 159 1 144 1 4 1 89 1 230 1 218 1 11 2 55 1 57 1 130 1 95 1 40 1 135 1 29 1 82 1 
31 1 159 1 144 1 4 1 5 1 230 1 204 1 218 1 11 2 233 2 55 1 57 1 131 1 95 1 76 1 62 3 135 1 40 1 29 1 82 1 
31 1 159 1 144 1 4 1 230 1 218 1 11 2 55 1 57 1 95 1 182 1 40 1 135 1 29 1 82 1 
31 2 159 2 144 2 4 2 89 1 230 2 218 2 11 4 55 2 57 2 130 1 95 2 182 1 40 2 135 2 29 2 82 2 
194 1 183 2 5 1 62 2 
166 1 183 2 5 1 62 2 
70 1 31 2 106 1 174 1 2 1 3 1 4 1 144 1 35 1 230 1 175 1 204 1 11 3 178 1 77 1 76 1 183 2 79 1 185 1 156 1 40 1 82 1 158 1 159 1 88 1 23 2 244 1 218 1 127 1 55 1 164 1 166 1 57 1 131 1 95 1 58 1 194 1 62 2 102 1 135 1 28 2 223 1 29 1 
55 1 57 1 130 1 89 1 29 1 
173 1 31 3 106 1 174 1 107 1 143 1 3 1 4 1 144 1 230 1 74 4 204 1 148 3 11 2 178 1 233 1 76 1 183 2 153 3 185 1 238 1 154 1 156 1 17 1 40 1 82 1 42 1 87 3 159 1 124 1 23 2 218 1 55 1 166 1 57 1 131 1 95 1 194 1 60 1 26 3 62 3 65 1 135 1 223 1 29 1 
31 1 239 1 4 1 5 1 188 1 230 1 11 2 190 1 206 1 75 1 233 1 13 1 248 2 57 1 131 2 152 1 62 2 135 1 29 1 82 1 
89 1 188 1 190 1 75 1 206 1 13 1 
31 1 4 1 230 1 5 1 11 2 75 1 13 1 233 1 152 1 82 1 18 1 239 1 188 1 91 1 248 2 57 1 131 2 62 2 135 1 137 1 29 1 
140 1 31 1 4 1 230 1 231 1 7 1 11 2 75 1 206 1 13 2 233 1 150 1 117 1 82 1 119 1 48 1 188 1 190 1 248 1 57 1 131 1 132 1 62 2 135 1 29 1 
119 1 
70 1 71 1 106 1 31 2 2 1 4 1 35 1 230 1 231 1 11 3 75 1 206 1 178 1 233 2 13 2 12 1 77 1 79 1 117 1 185 1 238 2 82 1 158 1 119 1 239 1 48 1 188 1 23 2 244 1 190 1 127 1 248 2 164 1 57 1 132 1 131 2 58 1 62 3 61 1 102 1 135 1 137 1 28 4 223 1 29 1 
89 1 188 1 190 1 75 1 206 1 13 1 
71 1 143 1 4 1 74 5 148 4 11 2 206 1 75 1 12 1 13 2 153 4 154 1 17 1 82 1 87 4 23 2 26 4 223 1 29 1 173 1 106 1 31 3 107 1 230 1 231 1 178 1 233 2 117 1 185 1 238 2 42 1 119 1 239 1 48 1 188 1 124 1 190 1 248 2 57 1 131 2 132 1 60 1 61 1 62 3 135 1 65 1 
173 1 31 3 106 1 143 1 107 1 4 1 230 1 74 3 148 2 11 2 75 1 206 1 178 1 233 1 13 1 12 1 153 2 185 1 238 1 154 1 17 1 82 1 42 1 119 1 239 1 87 2 188 1 124 1 23 1 190 1 248 1 57 1 131 1 60 1 62 1 26 2 61 1 65 1 135 1 223 1 29 1 
248 1 140 1 131 1 117 1 231 1 13 1 
5 1 12 1 
5 1 61 1 
31 1 4 1 230 1 231 1 11 2 75 1 206 1 13 2 233 1 117 1 82 1 119 1 48 1 188 1 190 1 248 1 57 1 131 1 132 1 62 2 135 1 29 1 

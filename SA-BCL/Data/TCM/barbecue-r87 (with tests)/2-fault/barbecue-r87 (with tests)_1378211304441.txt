#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 61 125 138 57 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String; | STATEMENT | 6813 | stmt -> ;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V | OPERATOR | 7129 | + -> %
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 209 1 130 1 224 1 3 1 38 1 
218 1 209 1 130 1 224 1 38 1 
157 1 259 1 49 2 
224 1 180 1 62 1 146 1 100 1 197 1 137 1 86 1 245 1 188 1 221 3 160 1 250 1 75 1 115 1 266 1 235 1 205 2 165 1 
224 1 62 1 146 1 83 1 100 1 197 1 137 1 86 1 188 1 245 2 221 3 90 1 160 1 115 1 266 1 205 1 
86 1 188 2 166 1 62 1 221 2 146 3 197 1 266 2 115 1 205 1 
224 1 62 1 146 2 100 1 197 1 137 1 86 1 188 2 245 1 221 4 160 1 90 1 77 1 115 1 266 1 205 2 
86 1 197 1 151 1 115 1 
62 1 146 1 1 1 197 1 86 1 188 1 190 1 221 2 115 1 266 2 205 1 
209 1 224 2 62 1 180 1 146 1 100 1 213 1 5 1 137 2 86 1 245 1 188 1 221 3 160 1 75 1 115 1 266 1 235 1 205 1 165 1 
209 1 224 2 62 1 180 1 146 1 100 1 5 1 137 2 86 1 245 1 188 1 221 3 160 1 75 1 115 1 266 1 235 1 205 1 165 1 
209 1 224 1 62 1 146 1 149 1 197 1 213 1 5 1 137 1 86 1 188 1 108 1 221 2 73 1 115 1 266 1 205 1 
209 1 224 1 62 1 146 1 197 1 213 1 122 1 5 1 137 1 86 1 188 1 108 1 221 2 73 1 115 1 266 1 205 1 
209 1 224 1 62 1 146 1 211 1 197 1 5 1 137 1 86 1 188 1 108 1 221 2 50 1 73 1 163 1 115 1 266 1 205 1 
209 1 224 1 62 1 146 1 211 1 197 1 213 1 5 1 137 1 86 1 188 1 108 1 221 2 50 1 73 1 163 1 115 1 266 1 205 1 
86 1 188 1 166 1 62 1 221 3 146 2 197 1 266 1 115 1 205 2 
195 2 146 2 197 1 228 1 86 1 188 1 221 3 115 1 266 1 32 1 
195 1 86 1 188 1 221 2 146 1 197 1 266 2 115 1 32 1 184 1 
195 1 146 1 197 1 86 1 188 1 221 2 176 1 115 1 266 1 32 1 
195 1 86 1 188 1 221 2 146 1 197 1 266 1 115 1 32 1 94 1 
195 1 224 1 239 1 146 1 100 1 197 1 137 1 86 1 188 1 245 4 139 1 221 3 127 1 162 1 115 1 266 1 32 1 206 1 
195 1 86 1 12 1 188 1 221 2 146 1 264 1 197 1 266 1 115 1 32 1 
13 1 132 3 150 1 
132 1 
146 4 5 1 155 2 158 3 9 2 161 3 11 2 14 14 166 1 15 1 168 1 18 3 23 1 171 1 176 2 30 5 31 2 32 1 34 2 36 1 179 3 181 4 39 1 43 1 186 3 48 1 190 1 189 1 191 1 52 1 54 3 56 4 55 3 58 2 59 1 193 2 195 2 61 1 63 3 65 1 67 1 66 2 74 1 77 1 80 1 207 6 209 1 210 1 83 1 217 1 85 2 86 1 218 2 222 3 221 4 220 4 91 1 90 1 92 3 223 2 98 1 224 2 225 2 99 4 100 1 103 3 226 3 228 1 234 1 113 2 237 3 118 2 239 1 240 1 241 1 123 1 244 3 245 2 246 5 124 1 125 1 249 1 251 4 254 1 129 2 134 1 136 2 258 1 257 1 138 1 141 4 142 3 143 1 266 5 144 2 
207 6 80 1 209 1 210 1 146 2 83 1 5 1 85 2 217 1 155 2 218 2 86 1 158 3 9 2 220 4 221 3 222 2 90 1 91 1 161 3 223 2 92 3 11 2 14 4 225 2 224 2 98 1 166 1 15 1 99 4 168 1 100 1 103 3 18 3 226 2 228 1 23 1 171 1 176 2 234 1 113 2 31 2 30 5 32 1 34 2 237 3 118 2 179 3 181 4 239 1 240 1 241 1 39 1 43 1 123 1 245 2 244 3 48 1 246 5 124 1 189 1 125 1 249 1 191 1 52 1 54 3 55 3 56 4 59 1 251 4 254 1 193 2 129 2 195 1 61 1 63 3 65 1 66 2 134 1 67 1 136 2 138 1 257 1 141 4 142 2 266 3 144 2 
98 1 61 1 99 4 241 1 39 1 228 1 138 1 257 1 48 1 125 1 141 4 254 1 
0 1 207 4 209 1 210 1 146 2 83 2 5 1 156 2 218 2 86 1 88 2 220 2 221 3 90 1 91 1 14 8 98 1 166 1 224 2 15 1 99 4 168 1 100 1 101 2 169 4 21 2 228 1 106 1 27 2 171 1 234 1 176 2 32 1 118 2 239 1 240 1 242 2 241 1 39 1 243 2 45 1 123 1 245 3 48 1 189 1 124 1 125 1 249 1 54 4 56 2 55 4 251 4 254 1 195 1 133 1 61 1 65 1 134 1 67 1 135 1 138 1 257 1 202 4 203 4 141 4 266 3 79 2 78 1 
207 6 209 1 210 1 146 2 83 1 5 1 85 2 155 2 218 2 86 1 158 2 9 2 222 2 221 4 220 4 90 1 91 1 161 2 93 2 223 2 92 2 11 2 14 4 225 2 98 1 166 1 224 2 15 1 99 4 168 1 16 1 100 1 102 2 103 2 18 2 226 2 228 1 23 1 230 2 171 1 232 2 234 1 176 2 113 2 31 2 30 4 33 2 32 1 237 2 118 2 179 2 181 4 239 1 240 1 241 1 39 1 42 2 123 1 244 2 245 2 246 4 48 1 189 1 124 1 125 1 191 1 54 3 55 3 56 4 59 1 251 4 254 1 193 2 129 2 195 1 61 1 63 4 65 1 66 2 134 1 67 1 136 2 138 1 257 1 141 4 142 2 266 3 144 2 
207 6 209 1 145 1 210 1 146 2 83 1 5 1 85 2 155 2 218 2 86 1 158 2 9 2 222 2 221 3 220 4 90 1 91 1 161 2 93 2 223 2 92 2 11 2 14 4 225 2 98 1 166 1 224 2 15 1 99 4 168 1 16 1 100 1 102 2 103 2 18 2 226 2 228 1 23 1 230 2 171 1 232 2 234 1 176 2 113 2 31 2 30 4 33 2 32 1 237 2 118 2 179 2 181 4 239 1 240 1 241 1 39 1 42 2 123 1 244 2 245 2 246 4 48 1 189 1 124 1 125 1 249 1 191 1 54 3 55 3 56 4 59 1 251 4 254 1 193 2 129 2 195 1 61 1 63 4 65 1 66 2 134 1 67 1 136 2 138 1 257 1 141 4 142 2 266 3 144 2 
207 6 80 1 209 1 210 1 146 2 83 1 5 1 85 2 217 1 155 2 218 2 86 1 158 3 9 2 220 4 221 3 222 2 90 1 91 1 161 3 223 2 92 3 11 2 14 4 225 2 224 2 98 1 166 1 15 1 99 4 168 1 100 1 103 3 18 3 226 2 228 1 171 1 176 2 234 1 113 2 31 2 30 5 32 1 34 2 237 3 118 2 179 3 181 4 239 1 240 1 241 1 39 1 123 1 245 2 244 3 48 1 246 5 189 1 124 1 125 1 191 1 52 1 54 3 55 3 56 4 251 4 254 1 193 2 129 2 195 1 61 1 63 3 65 1 66 2 134 1 67 1 68 1 136 2 138 1 257 1 261 1 71 1 141 4 142 2 266 3 144 2 
145 1 146 2 147 1 152 1 5 1 155 2 158 2 9 2 160 1 161 2 10 2 11 2 14 4 166 1 15 1 16 1 168 1 18 2 23 1 24 1 171 1 172 1 175 2 29 1 176 2 30 4 31 2 33 2 179 2 181 4 39 1 40 1 41 2 42 2 48 1 189 1 191 1 56 4 55 3 54 3 59 1 193 2 61 1 62 1 63 4 65 1 67 1 66 2 199 1 69 1 205 1 207 6 209 1 210 1 83 1 215 1 85 2 218 2 86 1 220 4 221 3 222 2 91 1 90 1 92 2 223 2 93 2 224 2 98 1 225 2 99 4 100 1 102 2 103 2 226 2 230 2 232 2 234 1 113 2 237 2 118 2 119 2 240 1 241 1 123 1 245 2 244 2 246 4 124 1 125 1 249 1 251 4 254 1 255 2 129 2 134 1 136 2 257 1 138 1 260 1 141 4 142 2 266 3 144 2 
257 1 138 1 125 1 99 1 141 1 
207 6 80 1 209 1 210 1 146 2 83 1 5 1 85 2 217 1 155 2 218 2 86 1 158 3 9 2 220 4 221 3 222 2 90 1 91 1 161 3 223 2 92 3 11 2 14 4 225 2 224 2 98 1 166 1 15 1 99 4 168 1 100 1 103 3 18 3 226 2 228 1 23 1 171 1 176 2 234 1 113 2 31 2 30 5 32 1 34 2 237 3 118 2 179 3 181 4 239 1 240 1 241 1 39 1 43 1 123 1 245 2 244 3 246 5 189 1 124 1 125 1 191 1 52 1 54 3 55 3 56 4 59 1 251 4 254 1 193 2 129 2 195 1 61 1 63 3 65 1 66 2 134 1 67 1 68 1 136 2 138 1 257 1 261 1 141 4 142 2 266 3 144 2 
207 6 80 1 209 1 210 1 146 2 83 1 5 1 85 2 217 1 155 2 218 2 86 1 158 3 9 2 220 4 221 3 222 2 90 1 91 1 161 3 223 2 92 3 11 2 14 4 225 2 224 2 98 1 166 1 15 1 99 4 168 1 100 1 103 3 18 3 226 2 228 1 23 1 171 1 176 2 234 1 113 2 31 2 30 5 32 1 34 2 237 3 118 2 179 3 181 4 239 1 240 1 241 1 39 1 43 1 123 1 46 1 245 2 244 3 246 5 189 1 124 1 125 1 191 1 52 1 54 3 55 3 56 4 59 1 251 4 254 1 193 2 129 2 195 1 61 1 63 3 65 1 66 2 134 1 67 1 68 1 136 2 257 1 261 1 141 4 142 2 266 3 144 2 
146 11 5 1 155 2 158 7 9 2 161 7 11 2 14 7 166 1 15 1 168 1 16 1 18 7 20 1 23 1 171 1 176 2 30 9 31 2 177 1 33 2 32 9 34 2 179 7 181 4 39 1 42 2 48 1 189 1 191 9 51 1 53 1 52 5 54 3 57 1 56 6 55 3 59 1 193 2 194 1 195 10 61 1 63 9 196 1 65 1 198 1 67 1 66 2 68 1 201 1 80 5 207 6 209 2 208 1 210 10 83 1 85 2 217 5 86 10 218 2 222 10 221 20 220 6 90 1 91 1 93 2 92 7 223 2 95 1 96 1 98 1 224 3 225 2 99 4 100 1 102 2 103 7 226 10 229 1 228 1 104 1 230 2 232 2 234 1 113 2 237 7 116 1 118 2 239 1 240 1 241 1 123 1 244 7 245 2 246 9 124 1 125 1 126 1 128 1 252 1 251 4 254 1 129 2 134 1 136 2 257 1 138 1 261 1 141 4 142 10 266 11 268 1 144 2 
174 1 
207 6 80 1 209 1 210 1 146 2 83 2 5 1 85 2 217 1 155 2 218 2 86 1 158 3 9 2 220 4 221 3 222 2 90 1 91 1 161 3 223 2 92 3 11 2 14 4 225 2 224 2 98 1 166 1 15 1 99 4 168 1 100 1 103 3 18 3 226 2 228 1 23 1 171 1 176 2 234 1 113 2 31 2 30 5 32 1 34 2 237 3 118 2 179 3 181 4 239 1 240 1 241 1 39 1 43 1 123 1 245 3 244 3 48 1 246 5 124 1 190 1 189 1 125 1 249 1 191 1 52 1 54 3 55 3 56 4 59 1 251 4 252 1 254 1 193 2 129 2 195 1 61 1 63 3 65 1 66 2 67 1 134 1 68 1 136 2 138 1 257 1 261 1 141 4 142 2 266 4 144 2 
14 1 74 1 212 1 
14 1 183 1 
14 1 7 1 
207 1 209 1 14 1 224 1 37 1 108 1 173 1 263 1 54 1 73 1 163 1 236 1 
207 1 209 1 108 1 14 1 224 1 73 1 236 1 
14 1 7 1 
207 1 209 1 109 1 14 1 224 1 54 1 
14 1 233 1 
14 1 7 1 
14 1 183 1 
14 1 183 1 
25 1 202 1 14 1 164 1 
14 1 178 1 169 1 
195 1 14 2 210 1 146 1 167 1 243 1 19 1 200 1 86 1 107 1 7 1 221 2 72 1 251 2 60 2 266 1 32 1 
4 1 
195 1 210 1 146 1 167 1 151 1 243 1 19 1 200 1 86 1 107 1 221 2 266 1 32 1 
210 1 62 1 146 1 226 2 86 1 221 3 222 2 191 1 142 2 114 1 266 1 205 2 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
210 1 62 1 146 1 226 2 86 1 221 3 222 2 191 1 142 2 114 1 266 1 205 2 
207 6 209 1 210 1 146 1 83 1 147 1 152 1 215 1 5 1 85 2 155 2 86 1 218 2 158 2 220 4 221 3 222 1 9 2 160 1 161 2 10 2 92 2 223 2 11 2 14 4 224 2 225 2 168 1 100 1 102 2 103 2 226 1 18 2 24 1 172 1 175 2 29 1 234 1 176 2 113 2 30 4 31 2 237 2 118 2 179 2 119 2 181 4 240 1 40 1 41 2 123 1 244 2 245 1 246 4 190 1 191 1 54 3 56 4 55 3 251 4 255 2 193 2 129 2 62 1 63 2 66 2 199 1 69 1 136 2 260 1 142 1 266 2 144 2 205 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 223 1 251 3 92 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 111 2 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 111 2 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
210 1 62 1 146 1 226 1 86 1 247 1 221 2 222 1 191 1 142 1 114 1 266 1 205 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 111 2 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 252 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
207 2 209 1 210 1 146 2 85 1 5 1 155 1 86 1 158 1 219 1 221 3 222 2 8 1 9 1 161 1 223 1 92 1 163 3 11 1 14 3 224 1 225 1 15 1 17 1 168 1 103 1 226 2 18 1 108 1 173 2 176 1 31 1 30 2 114 1 236 1 237 1 118 1 179 1 181 2 37 2 122 1 42 1 123 1 244 1 246 2 190 1 50 2 191 1 54 2 251 2 129 1 62 1 63 1 66 1 136 1 140 1 263 2 73 1 74 3 142 2 77 1 266 4 144 1 205 2 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 223 1 251 3 92 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 232 1 31 1 30 2 142 1 266 1 114 1 144 1 205 1 237 1 
207 3 210 1 146 1 83 1 152 1 85 1 155 1 86 1 218 1 158 1 220 2 221 3 222 1 9 1 160 1 161 1 10 1 92 1 223 1 11 1 14 2 224 1 225 1 100 1 102 1 103 1 226 1 18 1 175 1 176 1 234 1 113 1 30 2 31 1 237 1 118 1 179 1 119 1 181 2 240 1 41 1 244 1 245 1 246 2 191 1 56 2 55 3 251 2 255 1 193 1 129 1 62 1 63 1 66 1 136 1 142 1 266 1 205 1 144 1 
210 1 62 1 146 1 226 1 86 1 221 2 222 1 191 1 142 1 255 1 114 1 266 1 205 1 
207 3 83 1 152 1 85 1 218 1 155 1 158 1 9 1 221 1 220 2 161 1 10 1 92 1 223 1 93 1 11 1 14 2 225 1 224 1 100 1 102 1 103 1 18 1 228 1 230 1 175 1 232 1 176 1 234 1 113 1 30 2 31 1 33 1 237 1 118 1 179 1 119 1 239 1 181 2 240 1 41 1 42 1 245 1 244 1 246 2 55 3 56 2 251 2 255 1 193 1 129 1 63 2 66 1 136 1 144 1 
207 3 210 1 146 1 83 1 152 1 85 1 155 1 86 1 218 1 158 1 220 2 221 3 222 1 9 1 160 1 161 1 10 1 92 1 223 1 11 1 14 2 224 1 225 1 100 1 102 1 103 1 226 1 18 1 175 1 176 1 234 1 113 1 30 2 31 1 237 1 118 1 179 1 119 1 181 2 240 1 41 1 244 1 245 1 246 2 191 1 56 2 55 3 252 1 251 2 255 1 193 1 129 1 62 1 63 1 66 1 136 1 142 1 266 1 144 1 205 1 
207 3 210 1 146 1 83 1 152 1 85 1 155 1 86 1 218 1 158 1 220 2 221 3 222 1 9 1 161 1 10 1 92 1 223 1 11 1 14 2 224 1 225 1 100 1 102 1 103 1 226 1 18 1 228 1 175 1 234 1 176 1 113 1 31 1 30 2 32 1 237 1 118 1 179 1 119 1 239 1 181 2 240 1 41 1 244 1 245 1 246 2 191 1 56 2 55 3 252 1 251 2 255 1 193 1 129 1 195 1 63 1 66 1 136 1 142 1 266 1 144 1 
179 1 210 1 181 2 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 222 1 221 2 9 1 191 1 161 1 93 1 92 1 251 2 223 1 129 1 62 1 63 2 103 1 66 1 18 1 226 1 136 1 230 1 232 1 31 1 142 1 30 2 266 1 114 1 33 1 237 1 144 1 205 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 223 1 251 3 92 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 232 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 251 3 92 1 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 113 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 251 3 92 1 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 113 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 251 3 92 1 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 113 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 2 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 223 1 251 2 92 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 232 1 31 1 30 2 142 1 113 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 251 3 92 1 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 113 1 266 1 144 1 205 1 237 1 
14 1 220 1 56 1 102 1 22 1 
14 1 220 1 56 1 193 1 22 1 
231 1 14 1 220 1 56 1 102 1 76 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
207 3 209 1 210 1 146 1 85 1 5 1 155 1 86 1 218 1 158 1 220 2 221 2 222 1 9 1 161 1 93 1 92 1 223 1 163 4 11 1 14 2 224 1 225 1 15 1 168 1 102 1 103 1 18 1 226 1 230 1 108 1 173 3 232 1 176 1 113 1 31 1 30 2 114 1 33 1 236 1 237 1 118 1 179 1 181 2 37 3 42 1 123 1 244 1 246 2 50 1 191 1 56 2 54 3 251 2 193 1 129 1 62 1 63 2 66 1 136 1 263 3 73 1 142 1 266 2 144 1 205 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 252 1 251 3 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 113 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 223 1 251 3 92 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 111 2 232 1 113 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 111 2 232 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 42 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 222 1 221 2 9 1 191 1 161 1 93 1 223 1 251 3 92 1 129 1 62 1 63 2 103 1 66 1 226 1 18 1 136 1 230 1 232 1 31 1 30 2 142 1 266 1 114 1 33 1 144 1 205 1 237 1 
179 1 210 1 181 3 146 1 85 1 155 1 86 1 244 1 158 1 246 2 7 1 9 1 222 1 221 2 191 1 161 1 92 1 251 3 223 1 129 1 62 1 63 1 103 1 66 1 226 1 18 1 136 1 31 1 30 2 142 1 266 1 144 1 205 1 237 1 
86 1 210 1 62 1 222 1 221 2 146 1 191 1 142 1 266 1 226 1 205 1 
207 2 209 1 210 1 180 1 37 2 146 1 182 1 149 1 243 1 123 1 5 1 47 1 86 1 245 1 221 2 50 1 54 2 163 3 11 1 165 1 14 4 225 1 62 1 224 1 15 1 168 1 256 1 227 1 108 1 262 1 263 2 173 2 73 1 28 1 75 1 74 3 176 1 266 2 235 1 205 1 118 1 
207 2 209 1 119 1 210 1 37 2 146 1 182 1 243 1 41 1 84 1 123 1 47 1 86 1 187 1 159 1 221 2 50 1 54 2 10 1 163 3 11 1 12 1 14 4 62 1 224 1 225 1 168 1 64 1 256 1 227 1 24 1 108 1 262 1 263 2 173 2 264 1 175 1 73 1 28 1 74 3 176 1 266 1 205 1 118 1 
179 3 80 1 210 1 181 2 146 1 85 1 217 2 155 1 86 1 244 3 246 4 158 3 49 1 9 1 221 2 222 1 191 1 52 1 161 3 223 1 251 2 252 1 92 3 129 1 62 1 63 3 103 3 66 1 18 3 226 1 136 1 113 1 31 1 30 4 142 1 266 1 144 1 237 3 205 1 
179 1 80 1 210 1 146 1 217 1 86 1 244 1 246 1 158 1 7 1 220 1 221 2 222 1 191 1 52 1 56 1 161 1 92 1 14 1 62 1 63 1 103 1 18 1 226 1 22 1 26 1 30 1 142 1 266 1 34 1 237 1 205 1 
80 1 179 1 210 1 62 1 146 1 63 1 103 1 226 1 18 1 217 1 86 1 244 1 158 1 246 1 222 1 221 2 191 1 52 1 161 1 92 1 142 1 30 1 266 1 205 1 237 1 
179 3 80 1 210 1 146 1 154 1 217 3 86 1 244 3 246 3 158 3 221 2 222 1 191 1 52 1 161 3 92 3 62 1 63 3 103 3 18 3 226 1 30 3 142 1 266 1 237 3 205 1 
179 1 80 1 210 1 146 1 217 1 86 1 244 1 246 1 158 1 221 2 222 1 191 1 52 1 161 1 92 1 94 1 62 1 63 1 103 1 18 1 226 1 30 1 142 1 266 1 237 1 205 1 
210 1 62 1 146 1 226 1 217 1 86 1 221 2 222 1 191 1 52 1 142 1 266 1 94 1 205 1 
82 1 87 1 221 1 105 1 
87 1 97 1 221 1 
221 1 250 1 148 1 253 2 
248 1 221 1 70 1 250 1 148 1 
81 1 87 1 
37 1 50 1 263 1 173 1 54 1 163 1 
37 1 50 1 263 1 173 1 54 1 163 1 236 1 
24 1 209 1 224 1 112 1 175 1 10 1 41 1 
209 1 224 1 168 1 123 1 
155 1 49 1 181 1 161 1 204 1 251 1 30 2 
161 1 30 1 
155 1 14 1 181 1 7 1 251 1 30 1 
161 1 30 1 
14 1 181 1 7 1 251 1 
32 1 
195 1 
195 1 
205 1 
62 1 
205 1 
195 1 210 1 120 1 146 1 2 1 243 1 153 1 44 1 216 1 86 1 221 2 266 1 32 1 94 1 117 1 
195 2 210 2 120 2 146 2 2 2 243 2 214 1 153 2 44 2 216 2 86 2 221 4 267 1 266 2 32 2 117 2 
195 1 210 1 120 1 146 1 2 1 243 1 153 1 44 1 216 1 86 1 221 2 267 1 266 1 32 1 117 1 
195 1 14 1 210 1 120 1 146 1 2 1 243 1 169 1 153 1 44 1 216 1 86 1 110 2 7 1 221 2 89 1 251 2 266 1 32 1 117 1 
6 1 
14 2 7 1 74 2 238 1 
14 2 131 1 7 1 74 2 
207 2 119 1 210 1 120 1 239 1 240 1 146 1 2 1 83 1 243 1 41 1 152 1 44 1 153 1 216 1 86 1 6 1 245 1 190 1 221 3 89 1 192 1 55 2 10 1 251 1 11 1 195 1 14 2 225 1 131 1 224 1 100 1 110 1 175 1 176 1 234 1 74 2 267 1 266 2 32 1 117 1 238 1 118 1 
86 1 210 1 265 1 151 1 153 1 
207 2 209 1 210 1 120 1 37 3 146 1 2 1 243 1 44 1 153 1 123 1 216 1 5 1 86 1 6 1 190 1 221 2 89 1 50 1 54 3 251 1 163 4 11 1 195 1 14 3 225 1 131 1 224 1 15 1 168 1 169 1 108 1 202 1 110 1 263 3 173 3 73 1 176 1 74 2 266 3 32 1 236 1 117 1 238 1 118 1 
195 1 14 3 210 1 120 1 146 1 2 1 243 1 169 2 153 1 44 1 216 1 86 1 110 1 7 1 221 2 89 1 251 1 266 1 32 1 117 1 
195 1 210 1 120 1 146 1 2 1 243 1 214 1 153 1 44 1 216 1 86 1 221 2 266 1 32 1 117 1 
195 2 210 2 120 2 146 2 2 2 151 1 243 2 214 1 153 2 44 2 216 2 86 2 221 4 265 1 266 2 32 2 117 2 
195 1 210 1 120 1 146 1 2 1 151 1 243 1 153 1 44 1 216 1 86 1 221 2 265 1 266 1 32 1 117 1 
0 1 195 1 14 2 210 1 146 1 242 1 243 1 169 1 135 1 106 1 86 1 25 1 7 1 221 2 203 2 251 2 266 1 32 1 
207 1 0 1 209 1 210 1 37 2 146 1 242 1 243 1 123 1 5 1 156 1 86 1 190 1 88 1 221 2 50 1 54 2 251 1 163 3 195 1 14 1 224 1 15 1 168 1 101 1 169 1 135 1 106 1 108 1 202 1 203 1 263 2 173 2 73 1 176 1 266 3 32 1 236 1 118 1 
27 1 49 1 203 1 251 1 21 1 79 1 
7 1 101 1 
88 1 7 1 
0 1 195 1 14 2 210 1 146 1 243 1 169 1 21 1 135 1 106 1 86 1 156 1 27 1 220 1 221 2 203 1 56 1 251 1 266 1 32 1 79 1 
0 1 195 1 14 2 210 1 146 1 243 1 169 1 21 1 135 1 157 1 106 1 86 1 156 1 27 1 49 1 220 1 221 2 203 1 56 1 251 1 178 1 266 1 32 1 79 1 
156 1 
0 1 207 2 119 1 210 1 239 1 240 1 146 1 242 1 83 1 243 1 41 1 152 1 156 1 218 1 86 1 245 1 190 1 88 1 220 1 221 3 56 1 55 4 10 1 251 2 195 1 14 3 224 1 100 1 101 1 169 2 21 1 135 1 106 1 27 1 202 2 203 2 175 1 234 1 176 1 266 2 32 1 35 1 79 1 118 1 
0 1 195 1 210 1 146 1 243 1 135 1 106 1 86 1 221 2 266 1 32 1 
207 2 0 1 209 1 210 1 37 4 146 1 242 1 243 1 123 1 5 1 156 1 218 1 86 1 190 1 88 1 220 1 221 2 50 1 56 1 54 4 251 2 163 5 195 1 14 3 224 1 15 1 168 1 101 1 169 2 21 1 135 1 106 1 108 1 27 1 202 2 203 2 263 4 173 4 73 1 176 1 266 3 32 1 236 1 79 1 118 1 
0 1 195 1 210 1 146 1 243 1 135 1 106 1 86 1 221 2 266 1 32 1 
210 1 146 1 121 1 242 1 243 1 185 1 86 1 221 2 7 1 251 2 195 1 14 2 169 1 135 1 170 1 25 1 203 2 266 1 32 1 35 1 79 1 

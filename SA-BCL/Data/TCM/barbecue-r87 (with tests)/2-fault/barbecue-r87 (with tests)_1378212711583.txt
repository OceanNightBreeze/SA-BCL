#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 13 72 171 176 134 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 185 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 13 72 171 176 19 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V | CONDITION | 11067 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | RETURN | 3349 | return null
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 1 3 1 203 1 4 1 159 1 150 1 
235 1 203 1 4 1 159 1 150 1 
109 1 118 2 30 1 
0 1 102 1 120 1 122 1 4 1 5 1 40 1 127 1 146 1 45 1 76 1 96 1 82 1 113 1 32 3 14 1 217 2 116 1 164 1 
0 1 49 1 120 1 122 1 4 1 240 1 5 2 40 1 127 1 96 1 82 1 113 1 32 3 217 1 116 1 164 1 
122 1 82 1 15 1 116 1 
122 1 124 1 40 1 127 2 214 1 96 1 82 1 32 2 217 1 116 1 164 1 
0 1 235 1 102 1 120 1 37 1 4 2 5 1 40 1 127 1 146 1 76 1 96 1 82 1 113 2 32 3 14 1 178 1 217 1 116 1 164 1 
0 1 235 1 102 1 120 1 4 2 5 1 40 1 127 1 146 1 76 1 96 1 82 1 113 2 32 3 14 1 178 1 217 1 116 1 164 1 
235 1 36 1 122 1 37 1 4 1 40 1 127 1 241 1 58 1 96 1 82 1 113 1 32 2 178 1 217 1 116 1 164 1 
235 1 36 1 122 1 37 1 4 1 153 1 40 1 127 1 58 1 96 1 82 1 113 1 32 2 178 1 217 1 116 1 164 1 
190 1 235 1 36 1 122 1 226 1 4 1 40 1 127 1 58 1 96 1 81 1 82 1 113 1 32 2 178 1 217 1 116 1 164 1 
190 1 235 1 36 1 37 1 122 1 226 1 4 1 40 1 127 1 58 1 96 1 81 1 82 1 113 1 32 2 178 1 217 1 116 1 164 1 
122 1 40 1 127 1 96 1 82 1 32 3 84 1 217 2 116 1 164 2 
64 2 179 1 122 1 40 1 127 1 82 1 62 1 32 3 116 1 164 2 
179 1 64 1 18 1 122 1 82 1 32 2 127 2 40 1 164 1 116 1 
64 1 179 1 122 1 40 1 127 1 107 1 82 1 32 2 116 1 164 1 
64 1 179 1 122 1 40 2 127 2 82 1 32 2 84 1 116 1 164 3 
64 2 179 1 0 1 234 1 49 1 122 1 4 1 5 1 40 2 127 1 26 1 82 1 113 1 32 4 116 1 164 2 
179 1 64 1 122 1 82 1 170 1 32 2 127 1 40 1 164 1 116 1 
64 1 179 1 0 1 122 1 4 1 94 1 5 4 40 1 127 1 26 1 129 1 60 1 82 1 113 1 32 3 98 1 116 1 164 1 
179 1 64 1 122 1 83 1 82 1 154 1 32 2 127 1 40 1 164 1 116 1 
193 1 200 1 136 3 
136 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 147 2 77 1 148 1 78 3 10 1 80 1 9 1 11 3 82 1 13 1 149 2 84 1 204 1 16 1 17 2 88 3 19 1 89 4 92 1 22 3 209 3 152 1 155 2 24 2 157 1 159 2 26 1 95 2 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 222 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 112 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 14 237 1 50 2 51 1 240 1 128 1 127 3 56 3 130 2 131 2 184 3 245 6 61 2 133 3 62 1 135 3 187 3 248 2 138 1 137 1 
189 1 64 1 0 1 194 4 68 4 2 1 72 1 4 2 73 4 5 2 145 2 198 1 10 1 80 1 11 4 82 1 13 1 84 1 205 1 16 1 87 3 206 2 19 1 89 4 92 1 152 1 211 1 158 1 159 2 213 1 26 1 29 1 97 2 161 2 32 3 34 4 164 2 221 2 222 1 224 1 104 1 228 2 171 1 173 4 107 2 44 1 108 1 110 2 174 1 175 1 176 1 178 1 179 1 48 2 235 1 49 1 181 8 125 2 240 1 128 1 127 3 245 4 133 4 62 1 247 2 137 1 138 1 
64 1 0 1 1 2 194 4 68 4 195 2 143 2 72 1 4 2 196 2 5 2 197 4 198 1 75 2 199 1 78 2 147 2 9 1 80 1 10 1 11 3 82 1 13 1 149 2 84 1 16 1 88 2 17 2 19 1 89 4 21 2 92 1 209 2 151 1 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 4 164 2 35 2 220 2 223 4 222 1 221 4 224 1 38 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 119 2 50 2 54 2 240 1 128 1 127 3 56 2 130 2 184 2 131 2 245 6 61 2 133 3 62 1 135 2 187 2 248 2 137 1 138 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 19 1 89 4 92 1 151 1 209 3 152 1 155 2 23 1 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 167 1 222 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 237 1 50 2 124 1 240 1 128 1 127 4 56 3 130 2 131 2 184 3 245 6 61 2 133 3 62 1 135 3 187 3 248 2 138 1 137 1 
64 2 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 19 1 89 4 92 1 151 1 209 3 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 4 216 3 219 5 164 3 35 3 220 2 221 4 167 1 222 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 234 1 237 1 50 2 124 1 240 1 128 1 127 5 56 3 130 3 131 2 184 3 245 6 61 2 133 3 62 1 135 3 187 3 248 3 138 1 137 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 19 1 89 4 92 1 151 1 209 3 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 167 1 222 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 237 1 50 2 240 1 128 1 127 3 56 3 130 2 131 2 184 3 245 6 61 2 133 3 62 1 135 3 187 3 248 2 138 1 137 1 
198 1 44 1 108 1 89 4 19 1 68 4 222 1 29 1 62 1 176 1 128 1 137 1 
0 1 1 2 143 2 4 2 144 1 5 2 7 2 147 2 10 1 9 1 11 3 13 1 12 1 149 2 16 1 17 2 19 1 21 2 151 1 152 1 155 2 24 2 159 2 29 1 32 3 162 2 33 1 165 1 164 2 35 2 38 1 39 1 171 1 42 2 44 1 174 1 175 1 176 1 178 1 48 2 181 4 49 1 50 2 54 2 56 2 184 2 61 2 187 2 68 4 194 4 67 1 195 2 72 1 196 2 74 1 197 4 75 2 198 1 199 1 78 2 80 1 82 1 84 1 88 2 89 4 208 2 92 1 93 1 209 2 212 1 96 1 216 2 217 1 219 4 100 1 220 2 221 4 222 1 223 4 224 1 107 2 108 1 110 4 230 2 115 2 233 4 235 1 119 2 120 1 240 1 127 3 128 1 130 2 131 2 243 2 245 6 133 3 135 2 248 2 138 1 137 1 
180 1 
89 1 19 1 68 1 29 1 176 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 19 1 89 4 92 1 151 1 209 3 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 167 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 237 1 50 2 240 1 128 1 127 3 56 3 130 2 131 2 184 3 245 6 61 2 133 3 62 1 135 3 187 3 248 2 137 1 138 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 89 4 92 1 151 1 209 3 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 167 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 237 1 50 2 240 1 128 1 127 3 56 3 130 2 131 2 184 3 245 6 61 2 133 3 62 1 135 3 134 1 187 3 248 2 137 1 138 1 
64 1 0 1 1 2 191 1 194 4 68 4 143 2 4 2 72 1 6 2 5 2 197 3 198 1 199 1 147 2 77 1 78 3 10 1 9 1 80 1 11 3 82 1 13 1 149 2 84 1 16 1 17 2 88 3 19 1 89 4 92 1 151 1 209 3 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 5 164 2 35 3 220 2 221 4 222 1 223 5 224 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 237 1 50 2 240 1 128 1 127 3 56 3 130 2 131 2 184 3 245 6 185 1 61 2 133 3 246 1 62 1 135 3 187 3 248 2 138 1 137 1 
64 1 0 1 1 2 194 4 68 4 195 2 143 2 72 1 4 2 196 2 5 2 197 4 198 1 75 2 199 1 78 2 147 2 9 1 80 1 10 1 11 3 82 1 13 1 149 2 84 1 16 1 88 2 17 2 19 1 89 4 21 2 92 1 209 2 151 1 152 1 155 2 24 2 159 2 26 1 29 1 162 2 32 3 216 2 219 4 164 2 35 2 220 2 223 4 222 1 221 4 224 1 38 1 171 1 107 2 44 1 108 1 110 4 174 1 175 1 176 1 178 1 115 2 233 4 179 1 48 2 235 1 49 1 181 4 119 2 50 2 54 2 240 1 128 1 127 3 56 2 130 2 184 2 131 2 245 6 61 2 133 3 62 1 135 2 187 2 248 2 137 1 138 1 
65 1 181 1 157 1 
181 1 71 1 
181 1 210 1 
235 1 181 1 36 1 168 1 121 1 142 1 4 1 229 1 58 1 245 1 11 1 81 1 
181 1 235 1 36 1 58 1 245 1 142 1 4 1 
181 1 210 1 
235 1 181 1 245 1 11 1 4 1 47 1 
181 1 69 1 
181 1 210 1 
181 1 71 1 
181 1 71 1 
139 1 181 1 85 1 34 1 
181 1 123 1 73 1 
64 1 179 1 181 2 194 2 182 1 152 1 210 1 172 2 106 1 127 1 126 1 215 1 201 1 82 1 161 1 32 2 164 1 
111 1 
179 1 64 1 215 1 201 1 161 1 82 1 182 1 152 1 32 2 15 1 126 1 127 1 164 1 
130 1 9 1 96 1 82 1 152 1 32 2 216 1 127 1 248 1 217 1 164 1 
152 1 127 1 130 2 9 1 96 1 82 1 186 1 32 3 216 2 217 2 248 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
152 1 127 1 130 2 9 1 96 1 82 1 186 1 32 3 216 2 217 2 248 2 164 1 
0 1 1 2 67 1 194 4 143 2 4 2 144 1 5 1 74 1 7 2 197 2 75 2 147 2 78 2 10 1 9 1 11 3 82 1 12 1 149 2 16 1 17 2 88 2 93 1 92 1 208 2 209 2 152 1 155 2 212 1 24 2 159 2 96 1 33 1 162 2 32 3 216 1 217 1 165 1 164 1 219 4 35 2 100 1 220 2 221 4 223 4 39 1 42 2 107 2 230 2 110 4 174 1 178 1 115 2 233 4 48 2 235 1 181 4 50 2 120 1 124 1 240 1 127 2 56 2 130 1 243 2 131 2 184 2 245 6 61 2 133 3 135 2 187 2 248 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 103 2 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 103 2 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
152 1 127 1 130 1 9 1 96 1 82 1 186 1 32 2 216 1 232 1 217 1 248 1 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 103 2 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 23 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 21 1 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
190 2 1 1 66 1 194 2 142 1 195 1 143 1 4 1 197 1 78 1 9 1 11 2 81 3 82 1 149 1 16 1 88 1 17 1 20 1 209 1 152 1 153 1 155 1 157 3 24 1 96 1 32 3 216 2 217 2 219 2 164 2 35 1 220 1 101 1 36 1 223 2 224 1 168 2 107 1 229 2 174 1 178 1 115 1 233 2 48 1 235 1 234 1 181 3 50 1 121 2 124 1 127 4 56 1 130 2 242 1 58 1 131 1 184 1 245 2 61 1 186 1 135 1 187 1 248 2 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
0 1 1 1 194 2 143 1 4 1 5 1 7 1 197 1 75 1 147 1 78 1 10 1 9 1 82 1 149 1 17 1 88 1 92 1 208 1 209 1 152 1 155 1 24 1 159 1 96 1 162 1 32 3 216 1 217 1 164 1 219 2 35 1 100 1 220 1 221 2 223 2 42 1 107 1 230 1 110 2 115 1 233 2 48 1 181 2 50 1 120 1 240 1 127 1 56 1 130 1 243 1 131 1 184 1 245 3 61 1 133 3 135 1 187 1 248 1 
208 1 152 1 127 1 130 1 9 1 96 1 82 1 186 1 32 2 216 1 217 1 248 1 164 1 
0 1 1 1 194 2 195 1 143 1 4 1 196 1 5 1 7 1 197 2 75 1 147 1 78 1 10 1 149 1 17 1 88 1 21 1 92 1 208 1 209 1 155 1 24 1 159 1 26 1 162 1 32 1 219 2 35 1 100 1 220 1 221 2 223 2 42 1 107 1 230 1 110 2 115 1 233 2 48 1 181 2 50 1 119 1 54 1 240 1 56 1 243 1 131 1 184 1 245 3 133 3 61 1 62 1 135 1 187 1 
0 1 1 1 194 2 143 1 4 1 5 1 7 1 197 1 75 1 147 1 78 1 10 1 9 1 82 1 149 1 17 1 88 1 92 1 208 1 209 1 152 1 23 1 155 1 24 1 159 1 96 1 162 1 32 3 216 1 217 1 164 1 219 2 35 1 100 1 220 1 221 2 223 2 42 1 107 1 230 1 110 2 115 1 233 2 48 1 181 2 50 1 120 1 240 1 127 1 56 1 130 1 243 1 131 1 184 1 245 3 61 1 133 3 135 1 187 1 248 1 
64 1 0 1 1 1 194 2 143 1 4 1 5 1 7 1 197 1 75 1 78 1 147 1 9 1 10 1 82 1 149 1 17 1 88 1 92 1 208 1 209 1 152 1 23 1 155 1 24 1 159 1 26 1 162 1 32 3 216 1 164 1 219 2 35 1 100 1 220 1 221 2 223 2 42 1 107 1 230 1 110 2 115 1 179 1 233 2 48 1 181 2 50 1 240 1 127 1 56 1 130 1 243 1 131 1 184 1 245 3 61 1 133 3 62 1 135 1 187 1 248 1 
35 1 220 1 1 1 194 2 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 2 119 1 21 1 209 1 54 1 152 1 155 1 24 1 127 1 56 1 130 1 184 1 131 1 96 1 61 1 186 1 135 1 32 2 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 162 1 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 162 1 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 162 1 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 2 223 2 195 1 143 1 196 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 2 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 32 2 162 1 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 162 1 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
75 1 181 1 110 1 132 1 221 1 
181 1 110 1 147 1 132 1 221 1 
75 1 181 1 8 1 110 1 221 1 183 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
190 1 1 1 194 2 142 1 195 1 143 1 4 1 196 1 197 2 75 1 78 1 147 1 9 1 11 3 81 4 82 1 149 1 16 1 17 1 88 1 21 1 209 1 152 1 155 1 24 1 159 1 96 1 162 1 32 2 216 1 217 1 219 2 164 1 35 1 220 1 36 1 221 2 223 2 224 1 168 3 107 1 229 3 110 2 174 1 178 1 115 1 233 2 48 1 181 2 235 1 119 1 50 1 121 3 54 1 127 2 56 1 130 1 184 1 58 1 131 1 245 3 61 1 186 1 135 1 187 1 248 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 23 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 103 2 196 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 162 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 103 2 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 195 1 143 1 196 1 197 2 78 1 9 1 82 1 149 1 88 1 115 1 233 3 119 1 21 1 209 1 54 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 186 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
35 1 220 1 1 1 194 3 223 2 143 1 197 1 78 1 9 1 82 1 149 1 88 1 115 1 233 3 209 1 152 1 210 1 155 1 24 1 127 1 56 1 130 1 131 1 184 1 96 1 61 1 32 2 135 1 187 1 216 1 248 1 217 1 219 2 164 1 
190 1 36 1 102 1 224 1 225 1 168 2 4 1 169 1 5 1 107 1 146 1 229 2 76 1 174 1 81 3 11 2 82 1 177 1 14 1 16 1 17 1 178 1 48 1 235 1 181 4 50 1 121 2 152 1 156 1 157 3 127 2 241 1 57 1 58 1 244 1 245 2 96 1 161 1 32 2 217 1 164 1 
190 1 36 1 225 1 168 2 39 1 227 1 4 1 169 1 7 1 42 1 107 1 229 2 230 1 174 1 81 3 11 2 202 1 83 1 82 1 177 1 16 1 17 1 48 1 235 1 181 4 91 1 50 1 121 2 152 1 154 1 156 1 157 3 127 1 57 1 243 1 58 1 244 1 245 2 96 1 161 1 32 2 218 1 217 1 164 1 
35 3 220 1 1 1 191 1 194 2 223 4 143 1 197 3 77 1 78 3 9 1 82 1 149 1 88 3 115 1 233 2 118 1 237 2 209 3 152 1 155 1 23 1 24 1 127 1 56 3 130 1 131 1 184 3 96 1 61 1 162 1 135 3 32 2 187 3 216 1 217 1 248 1 219 4 164 1 
35 3 191 1 192 1 237 3 223 3 209 3 152 1 127 1 197 3 56 3 130 1 78 3 77 1 184 3 9 1 96 1 82 1 32 2 135 3 187 3 216 1 248 1 217 1 88 3 164 1 219 3 
35 1 191 1 223 1 170 1 197 1 77 1 78 1 9 1 82 1 88 1 237 1 209 1 152 1 127 1 56 1 130 1 184 1 96 1 135 1 32 2 187 1 216 1 217 1 248 1 219 1 164 1 
237 1 170 1 152 1 127 1 130 1 77 1 9 1 96 1 82 1 32 2 216 1 217 1 248 1 164 1 
35 1 191 1 221 1 223 1 6 1 197 1 110 1 77 1 78 1 9 1 82 1 88 1 181 1 237 1 209 1 152 1 210 1 238 1 127 1 56 1 130 1 184 1 132 1 96 1 135 1 32 2 187 1 216 1 217 1 248 1 219 1 164 1 
35 1 191 1 237 1 223 1 209 1 152 1 127 1 197 1 56 1 130 1 78 1 77 1 184 1 9 1 96 1 82 1 32 2 135 1 187 1 216 1 248 1 217 1 88 1 164 1 219 1 
52 1 32 1 163 1 41 1 
45 1 166 1 90 1 79 1 32 1 
46 1 32 1 41 1 
45 1 90 1 32 1 105 2 
99 1 41 1 
190 1 229 1 121 1 168 1 81 1 11 1 
235 1 174 1 4 1 16 1 
190 1 229 1 142 1 121 1 168 1 81 1 11 1 
235 1 39 1 4 1 7 1 43 1 230 1 243 1 
233 1 220 1 118 1 194 1 223 2 239 1 88 1 
223 1 88 1 
233 1 220 1 181 1 194 1 223 1 210 1 
223 1 88 1 
233 1 181 1 194 1 210 1 
179 1 
64 1 
64 1 
217 1 
96 1 
217 1 
117 1 70 1 170 1 152 1 25 1 105 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 32 2 164 1 
117 2 70 2 152 2 25 2 105 2 160 1 127 2 55 2 27 2 231 2 82 2 161 2 63 2 31 1 32 4 164 2 
117 1 70 1 152 1 25 1 105 1 160 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 32 2 164 1 
117 1 70 1 152 1 25 1 105 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 32 2 15 1 86 1 164 1 
207 2 181 1 141 1 117 1 194 2 70 1 152 1 210 1 73 1 25 1 105 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 32 2 164 1 
140 1 
181 2 53 1 210 1 157 2 
181 2 210 1 157 2 114 1 
100 1 0 1 140 1 141 1 194 1 70 1 4 1 5 1 7 1 105 1 42 1 107 1 230 1 10 1 231 1 82 1 114 1 17 1 207 1 48 1 181 2 117 1 50 1 120 1 92 1 53 1 124 1 152 1 240 1 157 2 25 1 160 1 127 2 55 1 27 1 243 1 245 2 59 1 133 2 161 1 63 1 32 3 164 1 
82 1 152 1 15 1 25 1 86 1 
190 1 140 1 141 1 36 1 194 1 70 1 224 1 142 1 168 3 4 1 73 1 105 1 107 1 229 3 174 1 81 4 11 3 231 1 82 1 16 1 114 1 17 1 178 1 207 1 48 1 181 3 117 1 235 1 50 1 121 3 53 1 124 1 152 1 157 2 25 1 127 3 55 1 27 1 58 1 245 2 161 1 63 1 32 2 34 1 164 1 
207 1 181 3 141 1 117 1 194 1 70 1 152 1 210 1 73 2 25 1 105 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 32 2 164 1 
117 1 70 1 152 1 25 1 105 1 127 1 55 1 27 1 231 1 82 1 161 1 63 1 31 1 32 2 164 1 
117 2 70 2 152 2 25 2 105 2 127 2 55 2 27 2 231 2 82 2 161 2 63 2 31 1 32 4 15 1 86 1 164 2 
189 1 2 1 211 1 15 1 87 1 213 1 
189 1 139 1 194 2 73 1 105 1 173 2 82 1 87 1 181 2 236 1 152 1 211 1 125 1 210 1 127 1 28 1 161 1 63 1 32 2 164 1 188 1 
139 1 189 1 181 2 194 2 2 1 152 1 210 1 73 1 125 1 211 1 105 1 127 1 213 1 173 2 82 1 161 1 63 1 32 2 87 1 164 1 
190 1 189 1 36 1 194 1 2 1 224 1 142 1 168 2 4 1 73 1 105 1 173 1 107 1 229 2 174 1 81 3 11 2 82 1 16 1 87 1 178 1 206 1 48 1 181 1 235 1 121 2 124 1 152 1 125 1 211 1 127 3 213 1 58 1 245 1 97 1 161 1 63 1 32 2 247 1 34 1 164 1 
173 1 145 1 118 1 194 1 228 1 87 1 
210 1 247 1 
210 1 206 1 
189 1 181 2 194 1 221 1 2 1 152 1 73 1 211 1 228 1 105 1 127 1 213 1 173 1 145 1 110 1 97 1 82 1 161 1 63 1 32 2 87 2 164 1 
189 1 181 2 118 1 194 1 221 1 2 1 123 1 152 1 73 1 211 1 228 1 105 1 127 1 213 1 173 1 145 1 109 1 110 1 97 1 82 1 161 1 63 1 32 2 87 2 164 1 
97 1 
189 1 100 1 0 1 194 2 221 1 2 1 4 1 73 2 228 1 5 1 7 1 105 1 42 1 145 1 173 2 107 1 230 1 110 1 10 1 82 1 87 2 206 1 48 1 181 3 236 1 120 1 92 1 124 1 152 1 125 1 211 1 240 1 159 1 127 2 213 1 243 1 245 2 97 1 133 4 161 1 63 1 32 3 247 1 34 2 164 1 
189 1 2 1 211 1 15 1 87 1 213 1 
190 1 189 1 36 1 194 2 221 1 2 1 224 1 142 1 168 4 4 1 73 2 228 1 105 1 145 1 173 2 107 1 229 4 110 1 174 1 81 5 11 4 82 1 16 1 87 2 178 1 206 1 48 1 181 3 235 1 121 4 124 1 152 1 125 1 211 1 159 1 127 3 213 1 58 1 245 2 97 1 161 1 63 1 32 2 247 1 34 2 164 1 

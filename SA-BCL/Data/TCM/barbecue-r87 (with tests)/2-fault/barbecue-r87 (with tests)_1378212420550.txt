#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.ArithmeticException 62 113 32 60 63 237 66 91 76 190 24 152 248 54 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.ArithmeticException 62 113 32 60 63 237 66 91 76 190 24 152 248 54 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.ArithmeticException 62 113 32 60 63 237 66 91 76 190 24 152 248 54 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 62 113 32 60 63 237 66 91 76 190 24 152 248 54 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 62 113 32 60 63 237 66 91 76 190 24 152 248 160 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 248 54 78 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.ArithmeticException 62 113 32 60 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V ERROR java.lang.ArithmeticException 62 113 32 60 129 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V ERROR java.lang.ArithmeticException 62 113 32 60 129 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.ArithmeticException 62 113 32 60 129 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.ArithmeticException 62 113 32 60 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.ArithmeticException 62 113 32 60 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.ArithmeticException 62 113 32 60 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.ArithmeticException 62 231 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.ArithmeticException 62 231 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 6725 | return null
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V | OPERATOR | 2161 | += -> /=
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
166 1 49 1 92 1 171 1 184 1 176 1 
166 1 92 1 171 1 184 1 176 1 
47 1 228 1 121 2 
0 1 116 1 245 1 55 2 206 1 219 2 120 1 133 2 94 1 123 2 143 3 
87 1 116 1 245 1 55 1 206 1 219 4 171 1 133 2 94 1 66 1 209 1 109 1 162 1 123 2 143 2 237 1 
3 1 87 1 88 1 116 1 245 1 7 1 55 1 206 1 219 3 171 1 133 1 94 1 66 1 109 1 123 1 143 1 237 1 126 1 
87 1 116 1 245 1 55 1 91 1 206 1 219 3 171 1 133 1 94 1 66 2 209 1 109 1 123 1 143 1 237 1 
116 1 245 1 94 1 9 1 
116 1 245 1 55 2 206 1 219 2 133 1 94 1 22 1 211 1 123 1 143 1 
3 1 87 2 88 1 216 1 245 1 7 1 55 1 206 1 219 3 171 2 133 1 94 1 66 1 109 1 123 1 143 1 184 1 28 1 237 1 126 1 
3 1 87 2 88 1 245 1 7 1 55 1 206 1 219 3 171 2 133 1 94 1 66 1 109 1 123 1 143 1 184 1 28 1 237 1 126 1 
87 1 116 1 203 1 216 1 245 1 55 1 206 1 219 2 171 1 133 1 94 1 83 1 123 1 249 1 143 1 184 1 28 1 
87 1 116 1 203 1 216 1 245 1 55 1 206 1 219 2 171 1 133 1 94 1 222 1 123 1 249 1 143 1 184 1 28 1 
187 1 87 1 116 1 203 1 245 1 169 1 55 1 206 1 219 2 171 1 133 1 94 1 81 1 123 1 249 1 143 1 184 1 28 1 
187 1 87 1 116 1 216 1 203 1 245 1 169 1 55 1 206 1 219 2 171 1 133 1 94 1 81 1 123 1 249 1 143 1 184 1 28 1 
116 1 245 1 55 1 206 1 123 1 219 3 120 1 133 2 143 2 94 1 
116 1 117 1 245 1 55 1 123 1 105 1 219 3 143 2 183 2 94 1 
116 1 245 1 55 2 123 1 105 1 219 2 143 1 183 1 94 1 112 1 
116 1 245 1 55 1 123 1 105 1 219 2 143 1 183 1 94 1 40 1 
116 1 53 1 245 1 55 1 123 1 105 1 219 2 143 1 183 1 94 1 
87 1 188 1 116 1 90 1 245 1 55 1 219 3 105 1 171 1 94 1 96 1 66 4 12 1 123 1 143 1 183 1 237 1 238 1 
165 1 157 1 116 1 245 1 55 1 123 1 105 1 219 2 143 1 183 1 94 1 
217 1 191 1 93 3 
93 1 
200 1 74 2 202 2 204 3 6 1 205 1 76 1 207 1 208 1 82 4 12 1 84 1 15 1 85 1 211 1 142 2 213 1 143 3 86 2 18 1 89 1 149 1 151 1 91 1 92 1 21 3 219 4 152 1 153 3 220 3 97 2 24 1 156 2 158 4 162 1 31 1 32 1 34 1 35 1 105 1 106 2 170 2 171 1 38 12 174 2 40 1 41 2 107 1 179 2 232 1 231 1 233 1 182 2 235 1 236 1 183 2 237 1 113 1 239 1 46 1 241 1 242 1 48 2 189 2 243 1 117 1 51 1 190 1 54 1 245 1 55 5 192 1 120 1 60 1 194 1 63 1 62 2 64 1 196 1 66 1 248 1 70 1 250 1 72 2 
200 1 74 2 202 2 204 2 205 1 76 1 207 1 208 1 82 4 12 1 84 1 15 1 85 1 142 2 213 1 143 2 86 2 18 1 89 1 149 1 151 1 91 1 92 1 219 3 21 2 152 1 220 2 97 2 156 2 24 1 158 4 31 1 32 1 34 1 35 1 106 2 105 1 38 2 170 2 171 1 40 1 41 2 179 2 232 1 231 1 182 2 235 1 236 1 183 1 237 1 113 1 239 1 241 1 242 1 48 2 189 2 243 1 117 1 51 1 54 1 245 1 190 1 55 3 192 1 120 1 60 1 194 1 63 1 62 2 64 1 196 1 66 1 248 1 70 1 250 1 72 2 
200 1 89 1 117 1 54 1 149 1 205 1 196 1 82 4 158 4 248 1 235 1 213 1 
127 1 128 2 200 1 75 1 205 1 76 1 207 1 10 1 208 1 82 4 209 1 13 2 12 1 139 1 141 1 210 2 14 2 213 1 143 2 86 2 17 1 146 3 89 1 149 1 91 2 92 2 219 3 152 1 155 1 23 2 24 1 158 4 159 1 225 1 28 1 31 4 34 1 168 4 36 1 105 1 170 2 38 8 171 2 40 2 41 4 179 4 108 4 235 1 184 1 183 1 237 1 117 1 54 1 245 1 190 1 56 4 55 3 120 1 59 1 193 2 63 2 64 1 196 1 66 3 68 4 248 1 69 2 125 1 70 1 
200 1 2 2 129 2 74 2 202 2 204 2 130 1 205 1 76 1 207 1 10 1 11 2 208 1 82 4 209 1 12 1 84 2 15 4 142 4 143 2 213 1 86 4 17 1 147 2 89 1 149 1 151 2 91 1 92 2 219 4 21 2 152 1 220 2 97 2 156 4 24 1 158 4 161 2 102 2 28 1 31 4 32 2 34 1 35 2 106 2 105 1 171 2 170 4 38 4 40 2 41 6 179 3 232 2 108 3 42 2 182 4 235 1 184 1 236 2 183 1 237 1 113 2 241 1 48 2 189 2 51 1 243 1 117 1 245 1 54 1 190 1 55 3 57 2 192 2 120 1 59 1 60 2 194 2 62 2 63 2 64 1 196 1 66 2 248 1 125 1 70 1 250 2 72 2 
127 1 200 1 2 2 129 2 74 2 202 2 204 2 130 1 205 1 76 1 207 1 10 1 11 2 208 1 82 4 209 1 12 1 84 2 15 4 142 4 143 2 213 1 86 4 17 1 147 2 89 1 149 1 151 2 91 1 92 2 219 3 21 2 152 1 220 2 97 2 156 4 24 1 158 4 161 2 102 2 28 1 31 4 32 2 34 1 35 2 37 1 106 2 105 1 171 2 170 4 38 4 40 2 41 6 179 3 232 2 108 3 42 2 182 4 235 1 184 1 236 2 183 1 237 1 113 2 241 1 48 2 189 2 51 1 243 1 117 1 245 1 54 1 190 1 55 3 57 2 192 2 120 1 59 1 60 2 194 2 62 2 63 2 64 1 196 1 66 2 248 1 125 1 70 1 250 2 72 2 
200 1 129 2 74 3 202 3 5 1 204 2 205 1 77 1 76 1 207 1 10 1 11 2 208 1 82 4 209 1 12 1 84 2 15 4 85 2 142 5 213 1 143 2 86 4 17 1 89 1 149 1 151 2 91 1 92 2 219 3 21 2 152 1 220 2 97 3 156 3 24 1 158 4 28 1 31 4 32 2 34 1 35 2 106 3 105 1 38 4 170 4 171 2 229 1 40 2 41 6 179 3 232 2 231 1 108 3 182 5 235 1 184 1 236 2 183 1 237 1 113 2 239 1 242 1 48 3 189 3 117 1 51 1 54 1 245 1 190 1 55 3 192 2 120 1 59 1 60 2 194 2 63 2 62 3 64 1 196 1 66 2 248 1 125 1 70 1 250 2 72 3 
115 1 
200 1 74 2 202 2 204 2 205 1 76 1 207 1 208 1 82 4 12 1 84 1 15 1 85 1 211 1 142 2 213 1 143 2 86 2 18 1 89 1 149 1 151 1 91 1 92 1 219 3 21 2 152 1 220 2 97 2 156 2 24 1 158 4 31 1 32 1 34 1 35 1 106 2 105 1 38 2 170 2 171 1 40 1 41 2 179 2 232 1 231 1 234 1 182 2 235 1 236 1 183 1 237 1 113 1 239 1 241 1 242 1 48 2 189 2 243 1 117 1 51 1 190 1 54 1 245 1 55 4 192 1 120 1 60 1 194 1 63 1 62 2 64 1 196 1 66 1 248 1 70 1 250 1 72 2 
127 1 2 2 129 2 130 1 133 1 10 1 11 2 138 1 15 4 142 4 143 2 17 1 144 2 147 2 148 1 149 1 151 2 21 2 152 1 24 1 156 4 158 4 161 2 163 1 28 1 30 1 31 4 32 2 34 1 35 2 37 1 38 4 170 4 171 2 40 2 41 6 179 3 42 2 182 4 184 1 48 2 189 2 51 1 52 2 190 1 54 1 55 3 192 2 57 2 59 1 58 2 60 2 194 2 195 1 63 2 62 2 64 1 196 1 66 2 70 1 71 1 72 2 200 1 74 2 202 2 204 2 205 1 206 1 76 1 207 1 208 1 82 4 209 1 84 2 212 1 213 1 86 4 89 1 91 1 92 2 219 3 220 2 97 2 99 2 102 2 106 2 232 2 230 1 108 3 109 1 111 2 235 1 236 2 237 1 113 2 241 1 114 1 118 1 243 1 245 1 120 1 248 1 125 1 250 2 
82 1 158 1 248 1 149 1 54 1 
200 1 74 2 202 2 204 2 205 1 76 1 207 1 208 1 82 4 12 1 84 1 15 1 85 1 142 2 143 2 86 2 18 1 89 1 149 1 151 1 91 1 92 1 219 3 21 2 152 1 220 2 97 2 156 2 24 1 158 4 31 1 32 1 34 1 35 1 106 2 105 1 38 2 170 2 171 1 40 1 41 2 179 2 232 1 231 1 182 2 235 1 236 1 183 1 237 1 113 1 239 1 241 1 242 1 48 2 189 2 243 1 117 1 51 1 54 1 245 1 190 1 55 3 192 1 120 1 60 1 194 1 63 1 62 2 64 1 196 1 66 1 248 1 70 1 250 1 72 2 
200 1 74 2 202 2 204 2 205 1 76 1 207 1 208 1 82 4 12 1 84 1 15 1 85 1 142 2 143 2 86 2 18 1 89 1 149 1 151 1 91 1 92 1 219 3 21 2 152 1 220 2 97 2 156 2 24 1 158 4 160 1 31 1 32 1 34 1 35 1 106 2 105 1 38 2 170 2 171 1 40 1 41 2 179 2 232 1 231 1 182 2 235 1 236 1 183 1 237 1 113 1 239 1 241 1 242 1 48 2 189 2 243 1 117 1 51 1 245 1 190 1 55 3 192 1 120 1 60 1 194 1 63 1 62 2 64 1 196 1 66 1 248 1 70 1 250 1 72 2 
200 1 241 1 89 1 243 1 117 1 54 1 149 1 205 1 78 1 196 1 82 4 158 4 248 1 43 1 235 1 213 1 
46 1 167 1 38 1 
122 1 38 1 
50 1 38 1 
203 1 169 1 171 1 38 1 41 1 134 1 197 1 108 1 199 1 110 1 249 1 184 1 
223 1 108 1 171 1 38 1 184 1 41 1 
203 1 110 1 249 1 38 1 171 1 184 1 41 1 
50 1 38 1 
33 1 38 1 
50 1 38 1 
122 1 38 1 
122 1 38 1 
198 1 168 1 38 1 79 1 
178 1 56 1 38 1 
1 2 31 2 50 1 244 1 245 1 55 1 219 2 105 1 38 2 8 1 224 1 25 1 210 1 16 1 143 1 70 1 183 1 
140 1 
224 1 245 1 55 1 210 1 25 1 16 1 105 1 219 2 143 1 183 1 70 1 8 1 9 1 
220 2 51 1 204 2 245 1 55 1 206 1 21 2 219 3 133 2 143 1 39 1 70 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
51 1 204 2 245 1 55 1 206 1 219 3 21 2 39 1 133 2 220 2 143 1 70 1 
2 2 129 2 74 2 202 2 204 1 206 1 133 1 10 1 11 2 138 1 84 2 211 1 15 4 212 1 142 4 143 1 86 4 17 1 144 2 148 1 151 2 91 1 92 2 219 3 21 1 220 1 97 2 99 2 156 2 163 1 28 1 30 1 31 4 32 2 35 2 106 2 38 4 170 4 171 2 40 2 41 6 179 3 230 1 232 2 108 3 109 1 111 2 182 4 184 1 236 2 237 1 113 2 48 2 114 1 189 2 118 1 51 1 52 2 245 1 55 2 192 2 58 2 60 2 195 1 194 2 63 2 62 2 64 1 66 1 125 1 70 1 71 1 250 2 72 2 
129 1 74 1 31 3 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 39 1 11 1 42 1 182 2 15 3 142 2 143 1 113 1 147 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 161 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 180 2 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
31 3 74 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 180 2 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
220 1 51 1 204 1 245 1 55 1 206 1 21 1 219 2 133 1 143 1 39 1 70 1 61 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 180 2 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
129 1 74 1 31 3 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 234 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
129 1 31 3 74 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 102 1 70 1 250 1 72 1 
4 1 74 1 202 1 203 1 204 2 206 1 133 2 11 1 134 2 208 1 84 1 211 1 15 2 142 2 143 2 17 1 147 1 150 1 151 1 219 3 21 2 220 2 222 1 97 1 156 1 162 1 28 1 31 2 32 1 35 1 169 3 106 1 171 1 39 1 38 3 40 1 175 1 41 2 108 2 181 1 110 1 182 2 184 1 236 1 113 1 187 2 46 3 48 1 189 1 51 1 245 1 55 4 192 1 60 1 194 1 62 1 63 1 197 2 199 2 249 1 125 1 70 1 250 1 72 1 
74 1 31 1 202 1 32 1 204 1 206 1 106 1 133 1 39 1 42 1 182 1 15 1 142 1 143 1 113 1 147 1 189 1 51 1 245 1 55 1 21 1 219 2 60 1 194 1 62 1 220 1 156 1 70 1 250 1 72 1 
2 1 129 1 74 1 202 1 204 1 206 1 133 1 10 1 11 1 84 1 15 2 142 2 143 1 86 2 144 1 91 1 151 1 92 1 219 3 21 1 220 1 97 1 99 1 156 1 31 2 32 1 35 1 106 1 38 2 170 2 171 1 40 1 41 3 179 3 232 1 109 1 111 1 182 2 236 1 237 1 113 1 48 1 189 1 51 1 52 1 245 1 55 1 192 1 58 1 60 1 195 1 194 1 63 1 62 1 64 1 66 1 70 1 250 1 72 1 
220 1 51 1 204 1 245 1 55 1 206 1 21 1 219 2 133 1 143 1 39 1 70 1 144 1 
2 1 129 1 74 1 202 1 10 1 11 1 12 1 84 1 15 2 142 2 86 2 144 1 147 1 91 1 151 1 92 1 219 1 97 1 99 1 156 2 161 1 102 1 31 2 32 1 35 1 106 1 171 1 170 2 38 2 40 1 41 3 179 3 232 1 42 1 111 1 182 2 236 1 237 1 113 1 48 1 189 1 117 1 52 1 192 1 57 1 58 1 60 1 195 1 194 1 63 1 62 1 64 1 66 1 250 1 72 1 
2 1 129 1 74 1 202 1 204 1 206 1 133 1 10 1 11 1 84 1 15 2 142 2 143 1 86 2 144 1 151 1 91 1 92 1 219 3 21 1 220 1 97 1 99 1 156 1 31 2 32 1 35 1 106 1 38 2 170 2 171 1 40 1 41 3 179 3 232 1 109 1 234 1 111 1 182 2 236 1 237 1 113 1 48 1 189 1 51 1 52 1 245 1 55 1 192 1 58 1 60 1 195 1 194 1 63 1 62 1 64 1 66 1 70 1 250 1 72 1 
2 1 129 1 74 1 202 1 204 1 10 1 11 1 12 1 84 1 15 2 142 2 143 1 86 2 144 1 151 1 91 1 92 1 219 3 21 1 220 1 97 1 99 1 156 1 31 2 32 1 35 1 105 1 106 1 38 2 170 2 171 1 40 1 41 3 179 3 232 1 234 1 111 1 182 2 183 1 236 1 237 1 113 1 48 1 189 1 117 1 51 1 52 1 245 1 55 1 192 1 58 1 60 1 195 1 194 1 63 1 62 1 64 1 66 1 70 1 250 1 72 1 
31 2 74 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 39 1 11 1 42 1 182 2 15 2 142 2 143 1 113 1 147 1 48 1 189 1 51 1 245 1 151 1 55 1 57 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 161 1 102 1 70 1 250 1 72 1 
74 1 31 3 202 1 32 1 204 1 35 1 206 1 106 1 133 1 39 1 11 1 42 1 182 2 15 3 142 2 143 1 113 1 147 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 161 1 70 1 250 1 72 1 
74 1 31 2 129 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 182 1 15 2 142 1 143 1 113 1 48 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
74 1 31 2 129 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 182 1 15 2 142 1 143 1 113 1 48 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
74 1 31 3 129 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
74 1 31 1 129 1 32 1 202 1 204 1 35 1 206 1 106 1 133 1 39 1 42 1 182 1 15 1 142 1 143 1 113 1 147 1 48 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 161 1 70 1 250 1 72 1 
74 1 31 3 129 1 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
135 1 2 1 38 1 170 1 86 1 
135 1 232 1 38 1 170 1 86 1 
2 1 136 1 164 1 38 1 170 1 86 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
2 1 129 1 74 1 202 1 203 1 204 1 206 1 133 1 11 1 134 3 208 1 84 1 15 2 142 2 143 1 86 2 17 1 147 1 151 1 92 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 28 1 31 2 32 1 35 1 169 4 106 1 38 2 170 2 171 1 39 1 40 1 41 3 232 1 108 3 42 1 110 1 182 2 184 1 236 1 113 1 187 1 48 1 189 1 51 1 245 1 55 2 57 1 192 1 60 1 194 1 62 1 63 1 197 3 199 3 249 1 125 1 70 1 250 1 72 1 
129 1 74 1 31 3 202 1 32 1 33 1 204 1 35 1 206 1 106 1 133 1 11 1 234 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 2 161 1 102 1 31 3 32 1 33 1 35 1 106 1 39 1 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 57 1 60 1 194 1 62 1 70 1 250 1 72 1 
129 1 74 1 202 1 204 1 206 1 133 1 11 1 15 3 142 2 143 1 147 1 151 1 219 2 21 1 220 1 97 1 156 1 161 1 31 3 32 1 33 1 35 1 106 1 39 1 180 2 42 1 182 2 113 1 48 1 189 1 50 1 51 1 245 1 55 1 192 1 60 1 194 1 62 1 70 1 250 1 72 1 
74 1 31 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 39 1 180 2 42 1 182 1 15 1 142 1 143 1 113 1 147 1 48 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 161 1 70 1 250 1 72 1 
74 1 31 3 202 1 32 1 204 1 35 1 206 1 106 1 133 1 39 1 11 1 42 1 182 2 15 3 142 2 143 1 113 1 147 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 57 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 2 161 1 102 1 70 1 250 1 72 1 
31 3 74 1 202 1 32 1 204 1 35 1 206 1 106 1 133 1 11 1 182 2 15 3 142 2 143 1 113 1 48 1 50 1 189 1 51 1 245 1 151 1 55 1 192 1 21 1 219 2 60 1 194 1 62 1 220 1 97 1 156 1 70 1 250 1 72 1 
220 1 51 1 204 1 245 1 55 1 206 1 21 1 219 2 133 1 143 1 70 1 
3 1 203 1 7 1 169 3 206 1 172 1 133 1 171 1 38 4 40 1 41 2 177 1 134 2 208 1 108 2 83 1 84 1 210 1 143 1 236 1 184 1 17 1 19 1 187 1 46 3 88 1 245 1 55 2 219 2 63 1 197 2 66 1 199 2 249 1 124 1 125 1 70 1 27 1 28 1 126 1 251 1 
165 1 203 1 169 3 206 1 172 1 133 1 171 1 38 4 40 1 41 2 177 1 134 2 108 2 210 1 84 1 111 1 44 1 212 1 143 1 184 1 236 1 17 1 19 1 187 1 46 3 52 1 245 1 55 1 246 1 219 2 95 1 58 1 63 1 154 1 197 2 99 1 157 1 199 2 249 1 124 1 125 1 70 1 27 1 251 1 
31 1 74 2 32 1 202 2 204 1 35 1 206 1 106 2 133 1 231 1 234 1 15 1 182 2 142 2 143 1 113 1 239 1 242 1 48 2 189 2 51 1 245 1 151 1 55 1 192 1 219 2 21 1 60 1 194 1 62 2 220 1 97 2 156 2 70 1 250 1 72 2 
62 1 239 1 74 1 242 1 189 1 202 1 156 1 231 1 182 1 142 1 106 1 72 1 
239 1 48 1 242 1 74 1 202 1 189 1 51 1 204 1 245 1 55 1 206 1 21 1 219 2 106 1 133 1 62 1 220 1 97 1 231 1 156 1 182 1 142 1 143 1 70 1 72 1 
74 3 202 3 204 1 206 1 106 3 133 1 231 3 182 3 142 3 143 1 239 1 242 1 48 3 189 3 51 1 245 1 55 1 219 2 21 1 62 3 220 1 97 3 156 3 100 1 70 1 72 3 
62 1 239 1 74 1 242 1 189 1 202 1 156 1 231 1 182 1 142 1 106 1 72 1 
239 1 51 1 204 1 53 1 245 1 55 1 206 1 219 2 21 1 133 1 220 1 231 1 143 1 70 1 
103 1 67 1 219 1 247 1 
103 1 219 1 26 1 
0 1 201 1 215 2 219 1 
0 1 201 1 101 1 219 1 186 1 
98 1 103 1 
187 1 134 1 197 1 108 1 199 1 169 1 
187 1 134 1 197 1 108 1 199 1 169 1 110 1 
171 1 58 1 99 1 111 1 212 1 184 1 145 1 
125 1 171 1 184 1 17 1 
11 1 240 1 31 1 74 1 15 1 142 2 121 1 
74 1 142 1 
11 1 31 1 50 1 15 1 142 1 38 1 
74 1 142 1 
31 1 50 1 15 1 38 1 
105 1 
183 1 
183 1 
133 1 
206 1 
133 1 
53 1 245 1 55 1 104 1 218 1 219 2 105 1 173 1 80 1 210 1 143 1 70 1 183 1 185 1 214 1 
245 2 104 2 131 1 55 2 218 2 219 4 105 2 173 2 80 2 210 2 143 2 70 2 183 2 185 2 29 1 214 2 
245 1 55 1 104 1 218 1 219 2 105 1 173 1 80 1 210 1 143 1 70 1 183 1 185 1 29 1 214 1 
31 2 50 1 245 1 56 1 55 1 104 1 218 1 219 2 105 1 38 1 173 1 80 1 221 2 65 1 210 1 143 1 70 1 183 1 185 1 214 1 
20 1 
226 1 46 2 50 1 38 2 
46 2 50 1 132 1 38 2 
73 1 226 1 31 1 104 1 132 1 105 1 38 2 171 1 173 1 40 1 10 1 41 2 179 2 80 1 12 1 84 1 210 1 111 1 211 1 143 1 236 1 183 1 237 1 185 1 214 1 46 2 20 1 52 1 245 1 55 2 91 1 218 1 219 3 58 1 195 1 63 1 64 1 221 1 99 1 65 1 66 1 70 1 29 1 
227 1 245 1 218 1 70 1 9 1 
226 1 31 1 203 1 168 1 169 4 104 1 132 1 105 1 38 3 171 1 173 1 40 1 41 2 134 3 80 1 208 1 108 3 110 1 84 1 210 1 211 1 143 1 236 1 183 1 184 1 17 1 185 1 214 1 187 1 46 2 20 1 245 1 56 1 55 3 218 1 219 2 63 1 221 1 197 3 65 1 199 3 249 1 125 1 70 1 28 1 
31 1 50 1 245 1 56 2 55 1 104 1 218 1 219 2 105 1 38 3 173 1 80 1 221 1 65 1 210 1 143 1 70 1 183 1 185 1 214 1 
245 1 104 1 131 1 55 1 218 1 219 2 105 1 173 1 80 1 210 1 143 1 70 1 183 1 185 1 214 1 
227 1 245 2 104 2 131 1 55 2 218 2 219 4 105 2 173 2 9 1 80 2 210 2 143 2 70 2 183 2 185 2 214 2 
227 1 245 1 104 1 55 1 218 1 219 2 105 1 173 1 9 1 80 1 210 1 143 1 70 1 183 1 185 1 214 1 
146 1 31 2 50 1 36 1 245 1 56 1 55 1 219 2 105 1 38 2 79 1 68 2 159 1 69 1 139 1 141 1 210 1 143 1 70 1 183 1 
31 1 203 1 168 1 169 3 36 1 105 1 38 1 171 1 40 1 41 1 134 2 208 1 108 2 139 1 110 1 210 1 141 1 211 1 14 1 143 1 183 1 184 1 17 1 187 1 146 1 245 1 56 1 55 3 219 2 193 1 63 1 197 2 23 1 68 1 159 1 69 1 199 2 249 1 125 1 70 1 28 1 
128 1 146 1 31 1 68 1 13 1 121 1 
23 1 50 1 
50 1 14 1 
128 1 31 1 36 1 105 1 170 1 38 2 13 1 139 1 210 1 141 1 143 1 183 1 86 1 146 2 245 1 55 1 56 1 219 2 193 1 68 1 159 1 70 1 
128 1 31 1 36 1 105 1 170 1 38 2 178 1 13 1 139 1 210 1 141 1 143 1 183 1 86 1 146 2 47 1 245 1 55 1 56 1 219 2 193 1 121 1 68 1 159 1 70 1 
193 1 
128 1 31 2 168 2 36 1 105 1 170 1 38 3 171 1 40 1 10 1 41 2 179 4 13 1 12 1 139 1 210 1 141 1 211 1 111 1 14 1 143 1 86 1 183 1 237 1 45 1 146 2 52 1 245 1 56 2 55 2 91 1 92 1 219 3 58 1 193 1 195 1 63 1 64 1 23 1 99 1 66 1 68 2 159 1 69 1 70 1 
146 1 159 1 139 1 36 1 141 1 9 1 
128 1 31 2 203 1 168 2 169 5 36 1 105 1 170 1 38 3 171 1 40 1 41 2 134 4 208 1 13 1 108 4 139 1 110 1 210 1 141 1 211 1 14 1 143 1 86 1 183 1 184 1 17 1 187 1 146 2 245 1 56 2 55 3 92 1 219 2 193 1 63 1 197 4 23 1 68 2 159 1 69 1 199 4 249 1 125 1 70 1 28 1 
146 1 159 1 139 1 36 1 141 1 9 1 
31 2 105 1 38 2 79 1 137 1 210 1 141 1 143 1 183 1 45 1 146 1 50 1 245 1 119 1 55 1 56 1 219 2 68 2 159 1 69 1 70 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4542 | = null
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 1 131 1 120 1 49 1 96 1 108 1 
60 1 131 1 120 1 49 1 108 1 
112 1 189 1 107 2 
60 1 77 1 161 1 182 3 61 1 139 1 193 1 47 2 92 1 166 1 217 1 187 1 35 1 116 1 69 1 11 1 230 1 231 1 154 1 
60 1 161 1 182 3 77 1 139 1 193 1 47 1 92 1 166 1 217 1 35 1 116 1 53 1 69 2 11 1 101 1 
182 2 161 1 139 2 47 1 92 1 217 1 166 3 35 2 116 1 76 1 
60 1 161 1 182 4 77 1 139 2 33 1 193 1 47 2 92 1 166 2 217 1 35 1 116 1 69 1 11 1 101 1 
161 1 2 1 92 1 116 1 
161 1 182 2 139 1 47 1 92 1 166 1 217 1 35 2 116 1 117 1 240 1 
60 2 77 1 161 1 182 3 139 1 61 1 193 1 47 1 49 1 166 1 217 1 35 1 187 1 116 1 69 1 11 2 230 1 59 1 154 1 191 1 
60 2 77 1 161 1 182 3 139 1 61 1 193 1 47 1 49 1 166 1 217 1 35 1 187 1 116 1 69 1 11 2 230 1 59 1 154 1 
60 1 161 1 182 2 181 1 139 1 47 1 78 1 92 1 49 1 166 1 217 1 35 1 116 1 6 1 11 1 59 1 191 1 
60 1 161 1 182 2 181 1 139 1 162 1 47 1 78 1 92 1 49 1 166 1 217 1 35 1 116 1 11 1 59 1 191 1 
60 1 161 1 182 2 181 1 139 1 47 1 78 1 92 1 49 1 166 1 217 1 35 1 197 1 116 1 11 1 71 1 59 1 106 1 
60 1 161 1 182 2 181 1 139 1 47 1 78 1 92 1 49 1 166 1 217 1 35 1 197 1 116 1 11 1 71 1 59 1 106 1 191 1 
182 3 161 1 139 1 47 2 92 1 217 1 166 2 35 1 116 1 76 1 
161 1 182 3 139 1 114 1 92 1 166 2 35 1 116 1 168 2 157 1 
182 2 161 1 18 1 139 1 114 1 92 1 166 1 35 2 116 1 168 1 
182 2 161 1 139 1 114 1 92 1 166 1 35 1 116 1 168 1 75 1 
182 2 161 1 139 1 114 1 92 1 166 1 35 1 116 1 168 1 98 1 
60 1 161 1 182 3 77 1 139 1 114 1 163 1 92 1 166 1 35 1 116 1 169 1 168 1 55 1 69 4 11 1 149 1 175 1 
182 2 161 1 206 1 139 1 56 1 114 1 92 1 166 1 35 1 116 1 168 1 
147 3 218 1 73 1 
147 1 
60 2 125 2 63 4 195 3 4 1 5 1 64 3 7 1 66 2 128 3 8 3 9 1 205 3 68 1 208 14 207 1 69 2 134 2 133 4 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 17 2 77 1 140 6 142 2 144 2 79 1 81 4 220 2 148 4 222 4 150 4 87 1 88 2 152 1 155 2 30 2 157 1 32 2 33 1 93 1 166 4 35 5 168 2 38 1 172 1 100 2 101 1 174 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 4 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 238 1 188 1 119 1 120 2 240 1 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 93 1 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 3 208 4 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 93 1 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 2 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 4 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 93 1 166 2 35 3 95 1 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 72 1 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 20 1 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
125 2 127 1 4 1 5 1 7 1 128 2 9 1 134 2 133 4 13 1 14 1 136 2 15 1 137 1 140 6 142 2 144 2 148 4 150 4 155 2 30 2 158 1 32 2 166 2 35 3 34 1 38 1 39 1 172 1 41 4 42 2 44 2 177 1 178 1 180 2 182 3 46 2 185 1 47 1 184 4 49 1 51 1 53 1 54 1 188 1 58 2 59 1 192 1 60 2 193 1 63 4 195 2 64 2 66 2 202 2 205 3 68 1 208 4 69 2 207 1 75 2 212 1 211 1 76 1 77 1 214 2 216 1 217 1 80 1 81 4 220 2 83 2 221 2 222 4 87 1 88 2 93 1 95 1 100 2 101 1 102 1 103 2 104 1 105 3 109 2 111 2 233 2 235 1 236 1 116 1 237 2 115 2 119 1 120 2 243 2 122 2 
63 1 133 1 5 1 137 1 38 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 72 1 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 20 1 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 72 1 74 1 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 20 1 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 2 208 4 72 1 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 20 1 220 2 148 4 222 4 150 4 87 1 25 1 88 2 155 2 30 2 157 1 32 2 166 2 35 3 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 1 54 1 188 1 119 1 120 2 58 2 243 2 59 1 
228 1 
60 2 125 2 63 4 195 2 4 1 5 1 64 2 7 1 66 2 128 2 9 1 205 3 68 1 207 1 69 3 208 4 72 1 133 4 134 2 13 1 75 2 211 1 136 2 212 1 14 1 137 1 76 1 214 2 77 1 140 6 142 2 144 2 81 4 20 1 220 2 148 4 222 4 150 4 87 1 88 2 155 2 30 2 157 1 32 2 93 1 166 2 35 4 168 1 38 1 172 1 100 2 101 1 103 2 41 4 175 1 105 3 104 1 44 2 177 1 178 1 180 2 182 3 109 2 111 2 46 2 233 2 114 1 184 4 185 1 49 1 236 1 115 2 237 2 116 1 51 1 53 2 54 1 188 1 119 1 120 2 240 1 58 2 243 2 59 1 
208 1 152 1 201 1 
203 1 208 1 
208 1 242 1 
208 1 242 1 
208 1 242 1 
203 1 208 1 
181 1 60 1 78 1 140 1 49 1 197 1 37 1 208 1 151 1 105 1 135 1 179 1 
60 1 181 1 208 1 140 1 78 1 49 1 151 1 
203 1 208 1 
60 1 208 1 140 1 229 1 49 1 105 1 
208 1 31 1 
0 1 208 1 82 1 
118 1 208 1 199 1 159 1 
182 2 114 1 141 1 166 1 35 1 116 1 168 1 54 1 203 1 67 1 208 2 239 1 132 1 41 2 156 2 138 1 232 1 
3 1 
182 2 2 1 239 1 114 1 141 1 132 1 166 1 35 1 116 1 168 1 54 1 138 1 232 1 
182 3 47 2 166 1 195 2 217 1 94 1 35 1 116 1 7 1 64 2 128 2 54 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
60 1 193 1 125 1 195 1 4 1 7 1 64 1 128 1 66 1 202 1 9 1 205 3 208 2 69 1 134 1 75 1 136 1 77 1 214 1 140 3 142 1 217 1 144 1 81 2 220 1 83 1 221 1 148 2 222 2 150 2 88 1 155 1 30 1 32 1 166 1 35 1 39 1 100 1 41 2 103 1 42 1 44 1 180 1 109 1 182 3 111 1 46 1 233 1 47 1 184 2 115 1 116 1 237 1 53 1 54 1 120 1 58 1 243 1 122 1 
182 2 47 1 166 1 195 1 217 1 94 1 35 1 116 1 7 1 64 1 128 1 54 1 122 1 
60 1 125 1 124 1 4 1 66 1 65 1 202 1 9 1 205 3 69 1 208 2 209 1 134 1 75 1 136 1 77 1 214 1 140 3 142 1 144 1 81 2 220 1 83 1 221 1 148 2 222 2 223 1 150 2 88 1 155 1 157 1 30 1 32 1 160 1 39 1 100 1 175 1 41 2 103 1 42 1 44 1 180 1 182 1 109 1 46 1 111 1 233 1 184 2 115 1 237 1 53 1 120 1 58 1 243 2 122 1 
60 1 193 1 125 1 195 1 4 1 7 1 64 1 66 1 128 1 202 1 9 1 205 3 208 2 69 1 134 1 75 1 136 1 77 1 214 1 140 3 142 1 217 1 144 1 81 2 220 1 83 1 221 1 148 2 222 2 150 2 88 1 155 1 30 1 32 1 166 1 35 1 39 1 100 1 41 2 103 1 42 1 44 1 180 1 109 1 182 3 111 1 46 1 233 1 47 1 184 2 115 1 116 1 237 1 53 1 52 1 54 1 120 1 58 1 243 1 122 1 
60 1 125 1 195 1 4 1 7 1 64 1 66 1 128 1 202 1 9 1 205 3 208 2 69 1 134 1 75 1 136 1 77 1 214 1 140 3 142 1 144 1 81 2 220 1 83 1 221 1 148 2 222 2 150 2 88 1 155 1 157 1 30 1 32 1 166 1 35 1 168 1 39 1 100 1 103 1 175 1 41 2 42 1 44 1 180 1 109 1 182 3 111 1 46 1 114 1 233 1 184 2 115 1 116 1 237 1 53 1 52 1 54 1 120 1 58 1 243 1 122 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 65 1 66 1 128 1 209 1 103 1 41 2 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 2 142 1 144 1 217 1 237 1 116 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 115 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 115 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 115 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 103 1 41 2 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 2 47 1 142 1 217 1 144 1 116 1 115 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 115 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
109 1 208 1 23 1 222 1 81 1 
208 1 23 1 222 1 81 1 44 1 
109 1 1 1 208 1 222 1 81 1 84 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
60 1 125 1 124 1 195 1 197 4 7 1 64 1 65 1 66 1 128 1 208 2 209 1 71 1 134 1 75 1 135 3 136 1 214 1 78 1 140 3 142 1 144 1 217 1 81 2 220 1 148 2 222 2 223 1 150 2 151 1 88 1 155 1 30 1 160 1 32 1 166 1 94 1 35 2 37 3 100 1 103 1 41 2 105 3 44 1 177 1 179 3 180 1 109 1 181 1 182 2 111 1 46 1 233 1 47 1 184 2 49 1 236 1 115 1 237 1 116 1 54 1 119 1 120 1 58 1 243 2 59 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 52 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 103 1 41 3 136 1 180 1 110 2 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 1 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 110 2 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
182 3 47 2 166 1 195 2 217 1 94 1 35 1 116 1 7 1 64 2 128 2 54 1 
60 2 193 1 125 2 195 1 127 1 4 1 7 1 64 1 66 2 128 1 202 2 9 1 205 3 208 4 69 1 134 2 75 2 15 1 136 2 77 1 214 2 140 6 216 1 142 2 217 1 144 2 80 1 81 4 220 2 83 2 221 2 148 4 222 4 150 4 88 2 155 2 158 1 30 2 32 2 166 1 34 1 35 2 39 1 100 2 102 1 41 4 103 2 42 2 105 3 44 2 177 1 180 2 109 2 182 3 111 2 46 2 233 2 47 1 184 4 235 1 49 1 115 2 116 1 237 2 53 1 54 1 119 1 120 2 240 1 58 2 243 2 59 1 192 1 122 2 
32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 1 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
160 1 32 1 125 1 124 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 209 1 103 1 41 3 136 1 180 1 110 2 214 1 182 2 111 1 46 1 233 1 184 3 47 1 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 110 2 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
182 2 47 1 166 1 195 1 217 1 94 1 35 1 116 1 7 1 64 1 128 1 54 1 21 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 103 1 41 3 136 1 180 1 110 2 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 1 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 52 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
32 1 125 1 195 1 166 1 35 1 64 1 7 1 66 1 128 1 203 1 209 1 103 1 41 3 136 1 180 1 182 2 214 1 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 115 1 116 1 237 1 220 1 54 1 148 2 150 2 58 1 88 1 243 2 30 1 
60 1 125 1 195 2 196 1 197 3 7 1 64 2 66 1 128 2 65 1 208 3 71 2 134 1 75 1 135 2 136 1 214 1 78 1 140 2 142 1 217 1 144 1 220 1 146 1 148 2 150 2 151 1 152 3 88 1 155 1 30 1 32 1 162 1 33 1 166 2 35 4 94 1 36 1 37 2 100 1 103 1 41 2 105 2 177 1 179 2 180 1 181 1 182 3 111 1 46 1 233 1 47 2 184 2 49 1 236 1 50 1 116 1 237 1 54 1 119 1 240 1 58 1 243 1 59 1 
32 1 125 1 195 1 166 1 35 1 94 1 64 1 7 1 66 1 128 1 65 1 203 1 103 1 41 3 136 1 180 1 214 1 182 2 111 1 46 1 233 1 47 1 184 3 142 1 217 1 144 1 116 1 237 1 220 1 54 1 148 2 223 1 150 2 58 1 88 1 243 1 30 1 
182 2 47 1 217 1 195 1 166 1 35 1 116 1 64 1 7 1 128 1 54 1 
60 1 61 1 90 1 166 1 197 3 35 2 6 1 37 2 69 1 208 4 100 1 71 1 230 1 105 2 134 1 135 2 177 1 75 1 213 1 179 2 182 2 181 1 234 1 140 2 78 1 141 1 47 1 236 1 217 1 49 1 187 1 116 1 219 1 54 1 119 1 57 1 26 1 152 3 154 1 59 1 155 1 
60 1 90 1 166 1 197 3 35 1 202 1 37 2 40 1 206 1 208 4 70 1 100 1 71 1 42 1 105 2 134 1 135 2 177 1 75 1 213 1 179 2 181 1 182 2 234 1 140 2 78 1 141 1 47 1 235 1 217 1 49 1 116 1 219 1 83 1 54 1 119 1 221 1 56 1 57 1 26 1 27 1 152 3 29 1 155 1 
32 3 125 1 164 1 166 1 195 1 35 1 200 1 7 1 64 1 66 1 128 1 41 2 103 3 136 1 107 1 180 1 214 1 182 2 111 1 46 3 233 3 184 2 47 1 142 3 143 2 144 1 217 1 115 1 237 3 116 1 220 1 52 1 54 1 148 4 150 4 58 3 88 1 243 3 30 3 
182 2 32 1 46 1 233 1 47 1 143 1 142 1 217 1 195 1 166 1 164 1 35 1 116 1 237 1 64 1 7 1 200 1 128 1 54 1 148 1 150 1 58 1 103 1 243 1 30 1 
32 1 164 1 166 1 195 1 35 1 200 1 7 1 64 1 128 1 203 1 208 1 103 1 182 2 46 1 233 1 47 1 142 1 143 1 217 1 237 1 116 1 81 1 54 1 22 1 148 1 23 1 222 1 24 1 150 1 58 1 243 1 30 1 
32 3 164 1 166 1 195 1 35 1 200 1 7 1 64 1 128 1 103 3 182 2 46 3 233 3 47 1 142 3 143 3 217 1 237 3 116 1 54 1 148 3 150 3 241 1 58 3 243 3 30 3 
32 1 164 1 166 1 195 1 35 1 200 1 7 1 64 1 128 1 98 1 103 1 182 2 46 1 233 1 47 1 142 1 143 1 217 1 237 1 116 1 54 1 148 1 150 1 58 1 243 1 30 1 
182 2 47 1 143 1 164 1 166 1 195 1 217 1 35 1 116 1 7 1 64 1 128 1 98 1 54 1 
204 1 182 1 183 1 145 1 
182 1 86 1 145 1 
182 1 231 1 28 2 167 1 
182 1 231 1 165 1 167 1 85 1 
10 1 145 1 
71 1 197 1 105 1 135 1 179 1 37 1 
60 1 235 1 49 1 83 1 221 1 225 1 42 1 
71 1 151 1 197 1 105 1 135 1 179 1 37 1 
60 1 119 1 49 1 177 1 
203 1 148 1 111 1 208 1 184 1 41 1 
148 1 233 1 
203 1 208 1 184 1 41 1 
111 1 148 2 233 1 184 1 41 1 129 1 107 1 
148 1 233 1 
168 1 
114 1 
168 1 
47 1 
47 1 
217 1 
182 2 114 1 141 1 166 1 35 1 116 1 198 1 168 1 171 1 54 1 210 1 224 1 12 1 190 1 123 1 
182 2 114 1 141 1 166 1 35 1 116 1 198 1 168 1 171 1 98 1 54 1 224 1 12 1 190 1 123 1 
182 4 114 2 141 2 166 2 35 2 116 2 198 2 168 2 171 2 54 2 210 1 224 2 12 2 190 2 226 1 123 2 
0 2 166 1 35 1 198 1 168 1 171 1 203 1 208 3 12 1 41 1 182 2 114 1 141 1 48 1 116 1 54 1 224 1 190 1 227 1 31 1 123 1 
182 2 114 1 141 1 166 1 35 1 116 1 198 1 168 1 171 1 54 1 224 1 12 1 190 1 226 1 123 1 
182 4 2 1 114 2 141 2 186 1 166 2 35 2 116 2 198 2 168 2 171 2 54 2 224 2 12 2 190 2 226 1 123 2 
182 2 0 1 114 1 141 1 48 2 166 1 35 1 116 1 198 1 168 1 171 1 54 1 203 1 208 1 224 1 41 2 12 1 190 1 227 1 123 1 
43 1 
203 1 208 2 152 2 170 1 
203 1 208 2 113 1 152 2 
60 1 166 1 35 2 198 1 4 1 168 1 171 1 170 1 202 1 9 1 39 1 205 2 208 2 69 1 100 1 210 1 173 1 41 1 12 1 175 1 42 1 43 1 134 1 75 1 182 3 77 1 113 1 114 1 140 2 141 1 48 1 116 1 83 1 53 1 54 1 221 1 224 1 240 1 152 2 190 1 227 1 155 1 123 1 
2 1 186 1 116 1 171 1 54 1 
60 1 0 1 197 4 198 1 199 1 208 3 71 1 12 1 134 1 75 1 135 3 78 1 141 1 140 2 224 1 152 2 151 1 155 1 227 1 166 1 35 3 168 1 170 1 171 1 37 3 100 1 41 1 105 3 43 1 177 1 179 3 181 1 182 2 114 1 113 1 49 1 236 1 48 1 116 1 54 1 119 1 240 1 190 1 59 1 123 1 
182 2 2 1 114 1 141 1 186 1 166 1 35 1 116 1 198 1 168 1 171 1 54 1 224 1 12 1 190 1 123 1 
89 1 62 1 0 1 126 1 91 1 166 1 35 1 168 1 99 1 130 1 208 2 41 1 176 1 107 1 16 1 182 2 112 1 114 1 141 1 19 2 116 1 81 1 82 1 54 1 222 1 
126 1 
89 1 60 1 0 2 62 1 194 1 126 1 91 2 166 1 35 2 4 1 199 2 168 1 97 1 202 1 9 1 39 1 99 1 205 4 130 1 208 3 69 1 41 2 175 1 42 1 176 1 75 1 45 1 16 1 182 3 77 1 114 1 141 1 140 2 215 1 19 2 116 1 81 1 83 1 53 1 54 1 221 1 222 1 120 1 240 1 155 1 
89 1 99 1 62 1 2 1 19 1 16 1 
89 1 60 1 0 2 62 1 126 1 91 2 166 1 197 5 35 3 199 2 168 1 97 1 37 4 99 1 130 1 208 3 71 1 41 2 176 1 105 4 135 4 75 1 177 1 45 1 179 4 16 1 182 2 181 1 114 1 140 2 141 1 78 1 215 1 19 2 236 1 49 1 116 1 81 1 54 1 119 1 222 1 120 1 240 1 151 1 59 1 155 1 
89 1 182 2 0 1 62 1 114 1 141 1 91 2 19 1 166 1 35 1 116 1 168 1 54 1 203 1 99 1 208 2 41 2 45 1 159 1 16 1 
89 1 60 1 0 1 62 1 126 1 91 1 166 1 197 3 35 3 199 1 168 1 97 1 37 2 99 1 208 1 71 1 41 1 105 2 135 2 75 1 177 1 45 1 179 2 16 1 182 2 181 1 114 1 140 1 141 1 78 1 215 1 19 1 236 1 49 1 116 1 54 1 119 1 240 1 151 1 59 1 155 1 
130 1 91 1 41 1 19 1 176 1 107 1 
203 1 215 1 
203 1 97 1 
89 1 182 2 0 1 62 1 114 1 141 1 91 1 126 1 19 2 166 1 35 1 116 1 81 1 168 1 54 1 99 1 208 2 130 1 222 1 41 1 176 1 16 1 
89 1 99 1 62 1 2 1 19 1 16 1 
0 1 194 1 91 2 166 1 35 1 168 1 99 1 203 1 208 2 41 2 45 1 16 1 182 2 114 1 141 1 19 1 116 1 54 1 121 1 153 1 159 1 

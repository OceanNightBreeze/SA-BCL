#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 236 26 178 0 83 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 162 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 236 26 178 0 186 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 1 197 1 138 1 232 1 104 1 36 1 
39 1 197 1 138 1 104 1 36 1 
52 1 188 1 121 2 
90 3 138 1 124 1 205 2 111 1 208 1 191 1 7 1 11 1 144 1 213 1 41 1 32 1 135 1 69 1 185 1 20 1 248 1 214 1 
90 3 138 1 205 1 111 1 208 2 191 1 113 1 11 1 220 1 144 1 213 1 135 1 69 1 185 1 20 1 214 1 
90 2 205 1 11 1 144 1 66 1 213 3 135 2 69 1 185 1 214 2 
90 4 138 1 205 2 126 1 111 1 208 1 191 1 113 1 11 1 144 1 213 2 135 2 69 1 185 1 20 1 214 1 
195 1 11 1 69 1 185 1 
90 2 205 1 11 1 55 1 144 1 181 1 213 1 135 1 69 1 185 1 214 2 
90 3 138 2 124 1 205 1 111 1 61 1 208 1 191 1 7 1 39 1 221 1 144 1 213 1 32 1 41 1 135 1 69 1 185 1 20 2 214 1 
90 3 138 2 124 1 205 1 111 1 61 1 208 1 191 1 7 1 39 1 144 1 213 1 32 1 41 1 135 1 69 1 185 1 20 2 214 1 
90 2 138 1 205 1 156 1 61 1 39 1 11 1 161 1 221 1 144 1 213 1 135 1 69 1 185 1 227 1 20 1 214 1 
90 2 138 1 205 1 61 1 39 1 11 1 161 1 221 1 65 1 144 1 213 1 135 1 69 1 185 1 227 1 20 1 214 1 
90 2 138 1 205 1 60 1 61 1 39 1 11 1 161 1 165 1 144 1 213 1 85 1 135 1 69 1 185 1 227 1 20 1 214 1 
90 2 138 1 205 1 60 1 61 1 39 1 11 1 161 1 221 1 165 1 144 1 213 1 85 1 135 1 69 1 185 1 227 1 20 1 214 1 
90 3 205 2 11 1 144 1 66 1 213 2 135 1 69 1 185 1 214 1 
90 3 216 1 100 1 11 1 28 2 213 2 135 1 69 1 185 1 214 1 
100 1 90 2 11 1 28 1 72 1 213 1 135 1 69 1 185 1 214 2 
90 2 8 1 100 1 11 1 28 1 213 1 135 1 69 1 185 1 214 1 
100 1 90 2 11 1 28 1 101 1 213 1 135 1 69 1 185 1 214 1 
90 3 138 1 111 1 159 1 208 4 112 1 6 1 98 1 100 1 11 1 28 1 213 1 135 1 168 1 69 1 185 1 20 1 214 1 
100 1 90 2 11 1 28 1 180 1 213 1 167 1 135 1 69 1 185 1 214 1 
118 3 132 1 228 1 
118 1 
240 1 
0 1 129 2 6 1 131 2 8 2 9 1 12 2 13 3 14 4 16 1 134 1 136 1 22 2 138 2 140 1 142 1 26 1 28 1 30 4 31 5 147 1 148 1 149 1 33 1 152 2 154 2 157 1 160 1 35 1 37 2 39 1 163 3 172 1 44 1 173 2 174 2 46 1 177 4 178 1 55 1 183 3 184 1 56 1 57 5 186 1 61 1 193 3 194 2 63 3 196 4 197 2 64 2 200 3 66 1 68 1 203 2 69 1 70 2 71 3 206 1 207 6 74 2 208 2 209 1 75 2 79 4 80 1 81 1 211 2 212 1 213 2 84 3 214 4 87 2 90 3 216 1 92 3 94 3 97 1 100 1 220 1 222 2 103 1 109 3 229 2 231 4 111 1 113 1 236 1 239 3 241 1 115 14 242 1 
0 1 126 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 134 1 16 1 68 1 203 2 70 2 69 1 22 3 138 2 71 3 207 6 206 1 74 2 208 2 140 1 209 1 75 2 142 1 79 4 80 1 26 1 211 2 81 1 212 1 28 2 30 4 31 5 84 3 147 1 213 3 149 1 33 1 214 5 87 3 152 2 90 4 154 2 216 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 163 3 103 1 229 2 44 1 172 1 109 3 173 3 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 55 1 115 4 242 1 183 3 184 1 56 1 57 5 186 1 
0 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 134 1 16 1 68 1 203 2 70 2 69 1 22 2 138 2 71 3 207 6 206 1 74 2 208 2 140 1 209 1 75 2 142 1 79 4 80 1 26 1 211 2 81 1 212 1 28 1 30 4 31 5 84 3 147 1 213 2 149 1 33 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 163 3 103 1 229 2 44 1 172 1 109 3 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 242 1 183 3 184 1 56 1 57 5 186 1 
44 1 0 1 172 1 216 1 231 4 177 4 9 1 81 1 212 1 103 1 16 1 186 1 
0 1 61 1 1 2 6 1 8 2 62 4 9 1 196 2 197 2 13 4 133 1 199 1 66 1 16 1 17 3 69 1 137 1 138 2 207 4 206 1 74 2 208 2 209 1 140 1 142 1 210 4 79 2 77 2 80 1 26 1 81 1 212 1 28 1 29 2 30 4 145 2 213 2 214 3 90 3 216 1 157 1 219 1 35 1 100 1 39 1 220 1 102 2 103 1 166 2 105 1 170 4 44 1 172 1 231 4 46 1 111 1 176 2 113 1 177 4 236 1 178 1 54 1 115 8 183 4 56 1 120 1 186 1 
0 1 61 1 129 2 6 1 131 2 193 4 8 2 9 1 63 2 12 2 197 2 196 4 13 3 64 2 14 4 200 2 66 1 134 1 16 1 18 2 203 2 70 2 69 1 204 2 22 2 71 2 138 2 207 6 206 1 74 2 208 2 209 1 140 1 141 2 75 2 142 1 79 4 80 1 26 1 211 2 81 1 28 1 212 1 30 4 31 4 84 2 213 2 147 1 149 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 2 94 2 35 1 37 2 38 1 100 1 39 1 220 1 163 2 223 2 103 1 225 2 229 2 109 2 44 1 172 1 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 183 3 56 1 57 4 246 2 186 1 
0 1 61 1 129 2 6 1 131 2 193 4 8 2 9 1 63 2 12 2 197 2 196 4 13 3 64 2 14 4 200 2 66 1 134 1 16 1 18 2 203 2 70 2 69 1 204 2 22 2 71 2 138 2 207 6 206 1 74 2 208 2 209 1 140 1 141 2 75 2 142 1 79 4 80 1 26 1 211 2 81 1 28 1 212 1 30 4 31 4 84 2 213 2 147 1 149 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 2 94 2 35 1 37 2 38 1 100 1 39 1 220 1 163 2 223 2 103 1 225 2 229 2 109 2 44 1 172 1 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 183 3 56 1 57 4 246 2 186 1 
0 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 16 1 68 1 203 2 70 2 69 1 22 2 138 2 71 3 207 6 206 1 74 2 208 2 209 1 140 1 75 2 142 1 79 4 80 1 26 1 211 2 81 1 212 1 28 1 30 4 31 5 84 3 147 1 213 2 214 3 87 2 152 2 90 3 154 2 216 1 155 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 163 3 103 1 229 2 109 3 44 1 172 1 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 242 1 183 3 184 1 56 1 57 5 186 1 
0 1 231 1 16 1 177 1 186 1 
0 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 134 1 16 1 68 1 203 2 70 2 69 1 22 2 138 2 71 3 207 6 206 1 74 2 208 2 209 1 140 1 75 2 142 1 79 4 80 1 26 1 211 2 81 1 28 1 30 4 31 5 84 3 147 1 213 2 149 1 33 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 163 3 103 1 229 2 109 3 172 1 44 1 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 242 1 183 3 184 1 56 1 57 5 186 1 
0 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 134 1 16 1 68 1 203 2 70 2 69 1 22 2 138 2 71 3 207 6 206 1 74 2 208 2 209 1 140 1 75 2 142 1 79 4 80 1 26 1 211 2 81 1 28 1 30 4 31 5 84 3 83 1 147 1 213 2 149 1 33 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 163 3 103 1 229 2 109 3 172 1 44 1 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 242 1 183 3 184 1 56 1 57 5 
0 1 61 1 129 2 6 1 131 2 193 3 8 2 194 2 9 1 12 2 197 2 196 4 63 3 13 3 64 2 14 4 200 3 66 1 134 1 16 1 68 1 203 2 70 2 69 1 22 2 138 2 71 3 207 6 206 1 74 2 208 2 140 1 209 1 75 2 24 1 142 1 79 4 80 1 26 1 211 2 81 1 212 1 28 1 30 4 31 5 84 3 147 1 213 2 149 1 214 3 87 2 152 2 90 3 154 2 216 1 157 1 92 3 94 3 35 1 37 2 100 1 39 1 220 1 162 1 163 3 103 1 229 2 44 1 172 1 109 3 173 2 231 4 46 1 174 2 111 1 113 1 177 4 236 1 178 1 115 4 242 1 183 3 184 1 56 1 57 5 186 1 
0 1 129 2 130 2 131 2 8 2 9 1 12 2 13 3 14 4 15 1 134 1 16 1 18 2 21 1 22 2 138 2 140 1 141 2 142 1 26 1 30 4 31 4 144 1 147 1 149 1 34 2 152 2 153 1 154 2 157 1 158 1 35 1 37 2 38 1 39 1 163 2 171 1 44 1 172 1 173 2 174 2 46 1 47 2 177 4 178 1 56 1 183 3 57 4 186 1 61 1 189 1 191 1 193 4 197 2 196 4 63 2 64 2 200 2 66 1 202 1 203 2 69 1 70 2 204 2 71 2 205 1 206 1 207 6 74 2 208 2 209 1 75 2 79 4 80 1 81 1 211 2 212 1 82 1 213 2 84 2 214 3 215 2 87 2 90 3 92 2 94 2 220 1 103 1 223 2 224 2 225 2 109 2 229 2 231 4 110 1 111 1 113 1 236 1 115 4 246 2 247 1 
241 1 115 1 150 1 
115 1 122 1 
138 1 207 1 48 1 25 1 39 1 161 1 115 1 85 1 244 1 183 1 227 1 151 1 
39 1 138 1 161 1 207 1 115 1 227 1 25 1 
115 1 122 1 
39 1 138 1 207 1 115 1 119 1 183 1 
115 1 40 1 
27 1 115 1 
115 1 122 1 
27 1 115 1 
27 1 115 1 
139 1 115 1 210 1 50 1 
115 1 93 1 170 1 
187 1 90 2 205 1 157 1 2 2 233 1 76 1 29 1 30 2 115 2 144 1 213 1 69 1 19 1 107 1 214 1 122 1 
95 1 
187 1 90 2 205 1 157 1 76 1 195 1 29 1 144 1 213 1 69 1 19 1 107 1 214 1 
22 1 173 1 90 2 205 1 157 1 144 1 213 1 147 1 69 1 214 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 201 2 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 173 1 22 1 45 1 205 1 157 1 116 1 144 1 147 1 213 1 69 1 214 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 201 2 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 148 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
125 1 126 1 60 2 61 1 129 1 131 1 193 1 8 1 63 1 12 1 64 1 14 2 65 1 200 1 70 1 69 1 22 2 71 1 138 1 205 2 207 2 74 1 75 1 141 1 142 1 25 1 211 1 30 2 31 2 144 1 147 1 213 2 85 3 84 1 86 1 214 4 151 2 87 2 152 1 90 3 154 1 157 1 92 1 94 1 37 1 99 1 39 1 161 1 163 1 227 1 229 1 109 1 173 2 46 1 48 2 175 1 55 1 241 3 116 1 115 3 244 2 56 1 183 2 57 2 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 3 173 2 22 2 205 2 157 1 116 1 144 1 147 1 213 1 69 1 214 1 87 2 
61 1 189 1 129 2 130 2 191 1 131 2 193 2 8 2 196 4 197 2 12 2 63 2 13 3 15 1 64 2 14 4 200 2 202 1 203 2 70 2 69 1 21 1 22 1 138 2 71 2 205 1 207 6 74 2 208 1 75 2 142 1 79 4 80 1 211 2 30 4 31 4 82 1 144 1 147 1 213 1 84 2 215 2 214 2 34 2 87 1 152 2 90 3 153 1 154 2 157 1 158 1 92 2 94 2 35 1 37 2 39 1 220 1 163 2 224 2 225 2 171 1 229 2 109 2 173 1 110 1 46 1 174 2 111 1 47 2 55 1 115 4 183 3 247 1 57 4 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 201 2 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
129 1 130 1 191 1 131 1 193 1 8 1 196 2 197 1 12 1 63 1 13 3 14 2 64 1 200 1 203 1 70 1 69 1 22 1 138 1 71 1 205 1 207 3 74 1 208 1 75 1 79 2 80 1 211 1 30 2 31 2 144 1 147 1 213 1 84 1 215 1 214 1 34 1 87 1 152 1 90 3 154 1 157 1 92 1 94 1 35 1 37 1 220 1 163 1 224 1 225 1 229 1 109 1 173 1 174 1 111 1 47 1 115 2 247 1 57 2 
90 2 173 1 22 1 205 1 157 1 116 1 144 1 147 1 213 1 69 1 214 1 34 1 87 1 
129 1 130 1 6 1 131 1 193 2 8 1 197 1 196 2 12 1 63 1 13 3 14 2 64 1 200 1 203 1 18 1 70 1 204 1 138 1 71 1 207 3 74 1 208 1 75 1 141 1 79 2 80 1 211 1 30 2 31 2 84 1 215 1 34 1 152 1 90 1 154 1 216 1 92 1 94 1 35 1 37 1 220 1 163 1 223 1 224 1 225 1 109 1 229 1 174 1 111 1 47 1 115 2 247 1 246 1 57 2 
129 1 130 1 191 1 131 1 193 1 8 1 196 2 197 1 12 1 63 1 13 3 64 1 14 2 200 1 203 1 70 1 69 1 22 1 138 1 71 1 205 1 207 3 74 1 208 1 75 1 79 2 80 1 211 1 30 2 31 2 144 1 147 1 213 1 84 1 148 1 215 1 214 1 34 1 87 1 152 1 90 3 154 1 157 1 92 1 94 1 35 1 37 1 220 1 163 1 224 1 225 1 229 1 109 1 173 1 174 1 111 1 47 1 115 2 247 1 57 2 
129 1 130 1 6 1 131 1 193 1 8 1 196 2 197 1 12 1 63 1 13 3 64 1 14 2 200 1 203 1 70 1 69 1 22 1 71 1 138 1 207 3 74 1 208 1 75 1 79 2 80 1 211 1 28 1 30 2 31 2 147 1 213 1 84 1 148 1 215 1 214 1 34 1 87 1 152 1 90 3 216 1 154 1 157 1 92 1 94 1 35 1 37 1 100 1 220 1 163 1 224 1 225 1 229 1 109 1 173 1 174 1 111 1 47 1 115 2 247 1 57 2 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 2 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 141 1 75 1 211 1 30 2 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 129 1 92 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 2 200 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 2 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
196 1 115 1 3 1 225 1 79 1 
196 1 115 1 3 1 203 1 79 1 
196 1 115 1 5 1 192 1 225 1 79 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
60 1 61 1 129 1 131 1 193 2 8 1 63 1 196 2 197 1 12 1 64 1 14 2 200 1 18 1 203 1 70 1 69 1 204 1 22 1 71 1 138 1 205 1 207 3 74 1 141 1 75 1 142 1 79 2 25 1 211 1 30 2 31 2 144 1 147 1 213 1 85 4 84 1 214 2 151 3 87 1 152 1 90 2 154 1 157 1 92 1 94 1 37 1 39 1 161 1 163 1 223 1 225 1 227 1 229 1 109 1 173 1 174 1 46 1 48 3 115 2 116 1 244 3 56 1 183 3 57 2 246 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 148 1 57 2 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 201 2 200 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 201 2 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 1 63 1 12 1 163 1 64 1 14 3 200 1 70 1 69 1 229 1 109 1 22 1 173 1 71 1 205 1 75 1 211 1 30 3 31 2 144 1 213 1 147 1 84 1 57 2 214 1 122 1 87 1 
90 3 173 2 22 2 205 2 157 1 116 1 144 1 147 1 213 1 69 1 214 1 87 2 
90 2 154 1 157 1 92 1 129 1 94 1 131 1 193 2 63 1 12 1 163 1 64 1 14 3 200 1 223 1 18 1 70 1 69 1 204 1 229 1 109 1 22 1 173 1 71 1 205 1 174 1 75 1 141 1 211 1 30 3 31 2 144 1 116 1 213 1 147 1 84 1 57 2 246 1 214 1 122 1 87 1 
152 1 90 2 60 1 157 1 218 1 190 1 130 1 37 1 8 1 39 1 161 1 164 1 224 1 167 1 69 1 169 1 171 1 227 1 226 1 138 1 205 1 207 2 46 1 47 1 74 1 48 2 142 1 238 1 29 1 241 3 144 1 115 4 180 1 244 2 85 3 213 1 146 1 245 1 182 1 183 2 215 1 151 2 214 1 88 1 
152 1 90 2 124 1 156 1 60 1 157 1 61 1 7 1 37 1 8 1 39 1 161 1 164 1 41 1 69 1 169 1 227 1 226 1 138 1 205 1 207 2 46 1 74 1 48 2 208 1 142 1 29 1 241 3 144 1 115 4 244 2 85 3 213 1 146 1 32 1 245 1 182 1 183 2 56 1 151 2 214 2 
90 2 157 1 92 3 94 3 193 3 63 3 163 3 200 3 67 1 68 1 69 1 109 3 173 1 22 1 71 3 205 1 31 3 144 1 242 3 84 3 147 1 213 1 184 1 57 3 214 1 87 1 
90 2 157 1 92 1 94 1 193 1 63 1 101 1 163 1 200 1 68 1 69 1 109 1 173 1 22 1 71 1 205 1 31 1 144 1 242 1 84 1 147 1 213 1 184 1 57 1 214 1 87 1 
90 2 173 1 22 1 205 1 157 1 101 1 144 1 242 1 68 1 147 1 213 1 69 1 214 1 87 1 
90 2 154 1 157 1 129 1 92 3 94 3 131 1 193 3 12 1 63 3 163 3 64 1 14 2 200 3 68 1 70 1 69 1 229 1 109 3 173 1 22 1 71 3 205 1 174 1 75 1 211 1 30 2 31 4 144 1 242 2 84 3 147 1 213 1 148 1 184 1 57 4 121 1 214 1 87 1 
90 2 127 1 157 1 3 1 92 1 94 1 193 1 194 1 196 1 63 1 163 1 200 1 68 1 69 1 109 1 173 1 22 1 71 1 205 1 79 1 31 1 115 1 144 1 242 1 84 1 147 1 213 1 184 1 57 1 214 1 122 1 87 1 
109 1 22 1 173 1 90 2 71 1 205 1 157 1 92 1 94 1 193 1 63 1 163 1 200 1 31 1 144 1 242 1 213 1 147 1 68 1 84 1 184 1 69 1 57 1 214 1 87 1 
90 1 217 1 73 1 198 1 248 1 
230 1 90 1 117 1 234 1 
90 1 179 1 117 1 
90 1 198 1 43 2 248 1 
237 1 117 1 
39 1 138 1 46 1 142 1 
60 1 48 1 244 1 85 1 183 1 25 1 151 1 
39 1 138 1 47 1 4 1 130 1 171 1 215 1 
60 1 48 1 244 1 85 1 183 1 151 1 
109 1 30 1 14 1 31 2 70 1 121 1 51 1 
109 1 31 1 
30 1 14 1 31 1 115 1 70 1 122 1 
109 1 31 1 
30 1 14 1 115 1 122 1 
100 1 
28 1 
28 1 
205 1 
144 1 
205 1 
90 2 123 1 157 1 91 1 23 1 78 1 143 1 195 1 10 1 53 1 29 1 243 1 213 1 69 1 43 1 214 1 
90 2 123 1 157 1 91 1 23 1 78 1 143 1 10 1 53 1 29 1 213 1 69 1 43 1 214 1 108 1 
90 2 123 1 157 1 91 1 96 2 23 1 235 1 78 1 143 1 10 1 53 1 29 1 30 2 115 1 213 1 69 1 170 1 43 1 214 1 122 1 
128 1 
58 1 241 2 115 2 122 1 
241 2 115 2 122 1 114 1 
152 1 123 1 90 3 58 1 128 1 157 1 91 1 130 1 191 1 96 1 35 1 37 1 8 1 10 1 220 1 13 2 224 1 69 1 43 1 108 1 138 1 207 2 111 1 47 1 74 1 208 1 49 1 23 1 235 1 143 1 78 1 80 1 114 1 53 1 29 1 55 1 30 1 241 2 115 2 213 1 247 1 215 1 214 2 
195 1 53 1 157 1 243 1 69 1 
123 1 58 1 60 1 128 1 61 1 8 1 10 1 69 1 138 1 207 2 74 1 23 1 210 1 142 1 78 1 143 1 25 1 29 1 30 1 213 1 85 4 214 3 151 3 152 1 90 2 157 1 91 1 96 1 37 1 39 1 161 1 227 1 170 1 43 1 46 1 48 3 235 1 114 1 53 1 55 1 241 2 115 3 244 3 56 1 183 3 
90 2 123 1 157 1 91 1 96 1 23 1 235 1 78 1 143 1 10 1 53 1 29 1 30 1 115 3 213 1 69 1 170 2 43 1 214 1 122 1 
89 1 90 2 123 1 157 1 91 1 23 1 78 1 143 1 10 1 53 1 29 1 213 1 69 1 43 1 214 1 
89 1 90 4 123 2 157 2 91 2 23 2 78 2 143 2 195 1 10 2 53 2 29 2 243 1 213 2 69 2 43 2 214 2 
90 2 123 1 157 1 91 1 23 1 78 1 143 1 10 1 53 1 29 1 101 1 213 1 69 1 43 1 214 1 
89 1 90 4 123 2 157 2 91 2 23 2 78 2 143 2 10 2 53 2 29 2 213 2 69 2 43 2 214 2 108 1 
195 1 54 1 17 1 105 1 219 1 120 1 
90 2 59 1 157 1 1 1 10 1 62 2 17 1 105 1 106 1 69 1 42 1 170 1 43 1 50 1 29 1 30 2 115 2 213 1 120 1 214 1 122 1 
90 2 157 1 1 1 219 1 50 1 62 2 10 1 54 1 29 1 30 2 115 2 17 1 105 1 213 1 120 1 69 1 170 1 214 1 43 1 122 1 
90 2 60 1 157 1 1 1 61 1 219 1 8 1 62 1 10 1 39 1 161 1 166 1 17 1 105 1 69 1 170 1 227 1 43 1 138 1 207 1 46 1 74 1 48 2 176 1 142 1 210 1 77 1 25 1 54 1 29 1 55 1 30 1 115 1 244 2 85 3 213 1 183 2 56 1 120 1 151 2 214 3 
62 1 30 1 102 1 145 1 17 1 121 1 
166 1 122 1 
77 1 122 1 
90 2 157 1 219 1 10 1 62 1 196 1 102 1 17 2 105 1 69 1 170 1 43 1 176 1 79 1 54 1 29 1 30 1 145 1 115 2 213 1 120 1 214 1 
90 2 157 1 93 1 219 1 10 1 62 1 196 1 102 1 17 2 105 1 69 1 170 1 43 1 176 1 79 1 52 1 54 1 29 1 30 1 145 1 115 2 213 1 120 1 121 1 214 1 
176 1 
90 3 59 1 157 1 1 1 130 1 219 1 191 1 35 1 8 1 62 2 10 1 196 1 197 1 220 1 13 4 102 1 166 1 17 2 105 1 224 1 69 1 170 2 43 1 138 1 111 1 207 2 47 1 74 1 208 1 176 1 210 2 79 1 77 1 80 1 54 1 55 1 29 1 30 2 145 1 115 3 213 1 247 1 120 1 215 1 214 2 
195 1 54 1 17 1 105 1 219 1 120 1 
60 1 61 1 1 1 8 1 10 1 62 2 197 1 196 1 17 2 69 1 138 1 207 2 74 1 210 2 142 1 77 1 79 1 25 1 29 1 30 2 145 1 213 1 85 5 214 3 151 4 90 2 157 1 219 1 39 1 161 1 102 1 166 1 105 1 227 1 170 2 43 1 46 1 48 4 176 1 54 1 55 1 115 3 244 4 56 1 183 4 120 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 222 16 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 222 137 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 222 16 217 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 28677 | 2 -> 1
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 5126 | = null
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 27 1 210 1 110 1 124 1 161 1 
0 1 210 1 110 1 124 1 161 1 
164 1 199 1 170 2 
34 3 114 1 200 2 117 1 0 1 148 1 46 1 3 1 122 1 144 1 145 1 51 1 54 1 70 1 24 1 126 1 157 1 206 1 28 1 
34 3 200 1 117 1 0 1 148 1 46 1 122 1 151 1 144 1 54 1 24 1 70 2 126 1 157 1 206 1 13 1 
126 1 206 1 157 1 230 1 
24 1 34 2 126 1 35 1 117 1 200 1 206 1 157 1 148 2 122 1 97 1 
132 1 34 3 200 1 117 1 0 2 148 1 46 2 122 1 3 1 144 1 51 1 145 1 54 1 70 1 24 1 126 1 206 1 28 1 110 1 198 1 
34 3 200 1 117 1 0 2 148 1 46 2 122 1 3 1 144 1 51 1 145 1 54 1 70 1 24 1 126 1 206 1 28 1 110 1 198 1 
34 2 132 1 200 1 117 1 0 1 148 1 1 1 46 1 122 1 91 1 24 1 126 1 157 1 206 1 82 1 110 1 198 1 
34 2 132 1 200 1 117 1 0 1 148 1 1 1 46 1 122 1 24 1 126 1 157 1 206 1 218 1 82 1 110 1 198 1 
113 1 34 2 200 1 117 1 0 1 148 1 1 1 46 1 122 1 24 1 126 1 157 1 206 1 71 1 57 1 82 1 110 1 198 1 
113 1 132 1 34 2 200 1 117 1 0 1 148 1 1 1 46 1 122 1 24 1 126 1 157 1 206 1 71 1 57 1 82 1 110 1 198 1 
34 3 200 2 117 1 148 1 122 2 24 1 126 1 157 1 206 1 73 1 
34 3 116 1 117 1 148 1 122 2 126 1 157 1 206 1 9 2 104 1 
34 2 126 1 156 1 117 1 206 1 157 1 148 2 104 1 9 1 122 1 
34 2 126 1 117 1 206 1 157 1 148 1 104 1 9 1 81 1 122 1 
34 2 126 1 117 1 206 1 157 1 148 1 104 1 9 1 22 1 122 1 
34 3 186 1 117 1 0 1 148 1 46 1 203 1 122 1 144 1 70 4 126 1 157 1 206 1 158 1 196 1 9 1 104 1 106 1 
34 2 126 1 117 1 206 1 157 1 201 1 148 1 104 1 9 1 122 1 224 1 
34 2 117 2 148 2 122 3 126 1 157 1 206 1 9 1 104 1 73 1 
34 4 83 1 117 2 0 1 148 1 46 1 122 2 144 1 70 1 126 1 157 1 206 1 196 1 9 2 104 1 13 1 
79 3 167 1 214 1 
79 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
183 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 58 1 222 1 
191 1 41 4 16 1 128 1 147 1 134 4 58 1 222 1 
41 1 16 1 128 1 134 1 222 1 
191 1 41 4 116 1 16 1 128 1 147 1 134 4 222 1 
191 1 41 4 116 1 128 1 147 1 134 4 222 1 137 1 
191 1 41 4 116 1 16 1 128 1 217 1 147 1 134 4 58 1 222 1 
165 1 172 1 160 1 
160 1 78 1 
160 1 130 1 
160 1 78 1 
160 1 78 1 
160 1 130 1 
190 1 113 1 162 1 63 1 56 1 177 1 0 1 1 1 160 1 135 1 82 1 110 1 
162 1 177 1 0 1 220 1 160 1 110 1 
162 1 63 1 0 1 1 1 160 1 82 1 110 1 
160 1 130 1 
36 1 160 1 
99 1 160 1 207 1 142 1 
160 1 176 1 204 1 
34 2 148 1 89 2 21 2 122 1 66 1 213 1 215 1 206 1 195 1 160 2 9 1 104 1 129 1 130 1 109 1 229 1 
184 1 
215 1 34 2 206 1 148 1 195 1 104 1 9 1 129 1 122 1 213 1 66 1 229 1 230 1 
24 1 34 2 169 1 192 1 200 1 206 1 159 1 148 1 77 1 122 1 229 1 
24 1 34 3 169 2 192 1 200 2 206 1 159 2 148 1 77 2 122 1 197 1 229 1 
62 1 115 2 177 3 0 2 64 2 2 1 65 3 122 1 123 2 181 4 182 1 67 2 69 2 68 2 70 1 6 2 7 4 127 1 8 2 72 2 11 3 12 1 131 2 75 1 187 2 189 2 17 2 19 2 20 2 77 1 139 1 23 1 143 2 144 1 24 1 192 1 29 2 81 2 31 2 198 1 33 1 34 3 200 1 85 2 202 1 148 2 86 2 88 4 89 4 150 2 151 1 40 2 93 2 206 1 159 1 160 12 43 2 44 4 97 1 45 1 161 2 100 1 162 6 168 2 54 1 169 1 55 2 171 2 221 2 175 2 174 4 223 1 110 1 108 1 226 2 227 1 111 1 229 1 61 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 119 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 36 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 98 2 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
115 1 0 1 64 1 122 1 123 1 181 2 67 1 70 1 6 1 68 1 69 1 7 2 8 1 72 1 11 3 131 1 189 1 17 1 19 1 20 1 77 1 143 1 144 1 24 1 192 1 81 1 29 1 31 1 34 3 200 1 85 1 148 1 86 1 88 2 89 2 150 1 151 1 40 1 93 1 206 1 159 1 160 2 43 1 44 2 161 1 100 1 162 3 168 1 54 1 169 1 55 1 171 1 221 1 175 1 174 2 108 1 227 1 226 1 229 1 
34 2 200 1 148 1 122 1 77 1 24 1 192 1 169 1 206 1 159 1 72 1 197 1 229 1 
115 1 116 1 0 1 64 1 119 1 123 1 181 2 67 1 70 1 6 1 68 1 69 1 7 2 8 1 72 1 11 3 131 1 17 1 189 1 20 1 19 1 143 1 144 1 80 1 196 1 81 1 29 1 31 1 34 1 85 1 86 2 88 2 89 2 38 1 150 1 151 1 40 1 93 1 95 1 160 2 43 1 44 2 161 1 100 1 162 3 168 1 55 1 171 1 221 1 105 1 174 2 175 1 108 1 227 1 226 1 
115 1 0 1 64 1 122 1 123 1 180 1 181 2 67 1 69 1 70 1 6 1 68 1 7 2 8 1 72 1 11 3 131 1 189 1 17 1 19 1 20 1 77 1 143 1 144 1 24 1 192 1 81 1 29 1 31 1 34 3 200 1 85 1 148 1 86 1 88 2 89 2 150 1 151 1 40 1 93 1 206 1 159 1 160 2 43 1 44 2 161 1 100 1 162 3 168 1 54 1 169 1 55 1 171 1 221 1 175 1 174 2 108 1 227 1 226 1 229 1 
115 1 116 1 0 1 64 1 122 1 123 1 180 1 181 2 67 1 69 1 70 1 6 1 68 1 7 2 8 1 72 1 9 1 11 3 131 1 189 1 17 1 19 1 20 1 77 1 143 1 144 1 192 1 196 1 29 1 81 1 31 1 34 3 85 1 148 1 86 1 88 2 89 2 150 1 151 1 40 1 93 1 206 1 159 1 160 2 43 1 44 2 161 1 100 1 162 3 168 1 169 1 55 1 171 1 221 1 104 1 175 1 174 2 108 1 226 1 227 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 119 1 89 2 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 95 1 7 2 206 1 159 1 43 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 80 1 175 1 105 1 174 2 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 119 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 175 1 226 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 175 1 226 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 175 1 226 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 2 119 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 2 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 175 1 226 1 229 1 
160 1 47 1 44 1 31 1 181 1 
160 1 47 1 44 1 181 1 143 1 
208 1 160 1 44 1 31 1 60 1 181 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
113 4 63 1 0 1 177 3 1 1 64 1 119 1 122 1 123 1 181 2 69 1 68 1 6 1 7 2 12 1 131 1 75 1 189 1 17 1 19 1 20 1 135 3 77 1 143 1 190 3 24 1 192 1 80 1 29 1 81 1 82 1 31 1 198 1 197 1 34 2 200 1 85 1 148 2 86 2 88 2 89 2 38 1 150 1 40 1 93 1 95 1 206 1 159 1 43 1 160 2 44 2 161 1 162 3 166 1 168 1 169 1 171 1 56 3 221 1 57 1 175 1 105 1 174 2 226 1 110 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 180 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 119 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 98 2 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 98 2 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 229 1 
34 3 200 2 148 1 122 1 77 2 24 1 192 1 169 2 206 1 159 2 197 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 119 1 38 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 174 3 105 1 175 1 226 1 197 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 98 2 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 148 1 122 1 77 1 24 1 192 1 169 1 206 1 159 1 197 1 229 1 32 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 98 2 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 180 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
34 2 200 1 85 1 148 1 86 2 88 2 64 1 89 3 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 206 1 159 1 43 1 130 1 131 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 80 1 221 1 175 1 174 3 226 1 229 1 
113 3 63 1 0 1 177 2 64 1 1 1 119 1 122 2 123 1 69 1 68 1 6 1 7 2 12 1 14 1 75 1 189 1 17 1 19 1 20 1 135 2 77 2 190 2 24 1 192 1 29 1 81 1 82 1 198 1 197 1 34 3 83 1 200 2 85 1 148 4 86 1 88 2 89 2 150 1 40 1 93 1 153 1 206 1 159 2 160 3 43 1 97 1 163 1 162 2 165 3 166 1 168 1 169 2 216 1 171 1 56 2 218 1 57 2 221 1 175 1 174 2 226 1 110 1 229 1 
34 2 200 1 85 1 148 1 86 1 88 2 64 1 89 3 119 1 122 1 123 1 150 1 93 1 69 1 68 1 6 1 7 2 95 1 206 1 159 1 43 1 130 1 189 1 19 1 20 1 77 1 168 1 24 1 169 1 192 1 171 1 221 1 175 1 174 3 226 1 197 1 229 1 
62 1 113 3 115 1 34 2 84 1 200 1 201 1 177 2 0 1 87 1 148 1 1 1 120 1 122 1 67 1 40 1 42 1 206 1 8 1 160 4 12 1 209 1 75 1 162 2 165 3 17 1 101 1 102 1 135 2 213 1 190 2 24 1 25 1 55 1 56 2 194 1 57 1 29 1 81 1 82 1 224 1 110 1 229 1 228 1 
113 3 34 2 84 1 200 1 177 2 0 1 87 1 148 2 1 1 120 1 3 1 122 1 91 1 40 1 70 1 42 1 206 1 160 4 12 1 209 1 75 1 162 2 165 3 166 1 17 1 135 2 213 1 145 1 51 1 190 2 24 1 56 2 57 1 28 1 29 1 81 1 82 1 110 1 198 1 229 1 228 1 
34 2 200 1 148 1 86 3 88 3 37 1 122 1 123 3 152 3 68 3 7 3 206 1 159 1 43 3 185 1 19 3 77 1 168 3 24 1 192 1 169 1 219 1 221 3 175 3 226 3 229 1 
34 2 200 1 148 1 86 1 88 1 122 1 123 1 152 1 68 1 7 1 206 1 159 1 43 1 185 1 19 1 22 1 77 1 168 1 24 1 192 1 169 1 219 1 221 1 175 1 226 1 229 1 
34 2 200 1 148 1 22 1 122 1 77 1 152 1 24 1 192 1 169 1 206 1 159 1 219 1 229 1 
34 2 200 1 85 1 148 1 86 3 64 1 88 4 89 2 122 1 123 3 180 1 150 1 152 2 93 1 69 1 6 1 68 3 7 4 206 1 159 1 43 3 131 1 185 1 189 1 20 1 19 3 77 1 168 3 24 1 192 1 169 1 170 1 171 1 219 1 221 3 174 2 175 3 226 3 229 1 
34 2 200 1 148 1 86 1 88 1 122 1 123 1 152 1 68 1 7 1 206 1 159 1 43 1 185 1 19 1 77 1 168 1 24 1 192 1 169 1 219 1 221 1 175 1 226 1 229 1 
34 2 200 1 148 1 86 1 88 1 122 1 123 1 181 1 152 1 68 1 7 1 206 1 159 1 160 1 43 1 44 1 130 1 96 1 185 1 19 1 47 1 211 1 77 1 168 1 24 1 192 1 169 1 219 1 221 1 175 1 226 1 229 1 
52 1 114 1 34 1 179 1 121 1 
34 1 133 1 178 1 90 1 
34 1 133 1 5 1 
114 1 34 1 179 1 50 2 
133 1 103 1 
75 1 0 1 12 1 110 1 
62 1 67 1 125 1 55 1 8 1 0 1 110 1 
190 1 113 1 56 1 177 1 57 1 135 1 
190 1 113 1 63 1 56 1 177 1 57 1 135 1 
93 1 7 1 160 1 89 1 174 1 130 1 
7 1 123 1 
160 1 89 1 174 1 130 1 
93 1 94 1 7 2 170 1 89 1 174 1 123 1 
7 1 123 1 
9 1 
104 1 
9 1 
200 1 
200 1 
24 1 
15 1 34 2 18 1 148 1 118 1 48 1 122 1 212 1 213 1 140 1 50 1 206 1 173 1 229 1 230 1 112 1 
15 1 34 2 148 1 118 1 48 1 122 1 213 1 140 1 212 1 50 1 155 1 206 1 173 1 229 1 112 1 
15 1 34 2 188 1 148 1 118 1 89 1 138 1 48 1 122 1 213 1 140 1 212 1 50 1 204 2 206 1 160 3 173 1 130 1 229 1 112 1 
15 1 34 2 148 1 118 1 48 1 122 1 212 1 213 1 140 1 50 1 154 1 206 1 173 1 229 1 112 1 
15 2 34 4 18 1 148 2 118 2 48 2 122 2 212 2 213 2 140 2 50 2 154 1 206 2 173 2 229 2 230 1 112 2 
15 1 34 2 148 1 118 1 22 1 48 1 122 1 213 1 140 1 212 1 50 1 206 1 173 1 229 1 112 1 
15 2 34 4 148 2 118 2 48 2 122 2 212 2 213 2 140 2 50 2 154 1 155 1 206 2 173 2 229 2 112 2 
15 1 34 2 188 1 148 1 118 1 89 2 138 2 48 1 122 1 213 1 140 1 212 1 50 1 204 1 206 1 160 1 173 1 130 1 229 1 112 1 
149 1 
165 2 160 2 136 1 130 1 
165 2 160 2 130 1 4 1 
115 1 34 3 0 1 148 2 118 1 89 1 149 1 122 1 4 1 151 1 67 1 40 1 70 1 155 1 206 1 8 1 160 2 11 2 97 1 15 1 100 1 162 2 165 2 188 1 17 1 76 1 136 1 138 1 48 1 140 1 213 1 212 1 50 1 144 1 54 1 55 1 173 1 81 1 29 1 108 1 227 1 229 1 112 1 
206 1 18 1 118 1 229 1 230 1 
113 4 34 2 63 1 177 3 0 1 148 3 1 1 118 1 89 1 149 1 122 1 4 1 204 1 40 1 206 1 160 3 12 1 97 1 15 1 99 1 75 1 162 2 165 2 166 1 188 1 17 1 135 3 136 1 138 1 48 1 212 1 140 1 213 1 50 1 190 3 56 3 57 1 173 1 81 1 29 1 82 1 110 1 198 1 229 1 112 1 
53 1 193 1 146 1 10 1 107 1 230 1 
34 2 148 1 89 2 122 1 39 1 204 1 205 1 206 1 160 2 10 1 130 1 15 1 213 1 50 1 141 2 142 1 193 1 59 1 30 1 107 1 229 1 
34 2 146 1 148 1 89 1 122 1 181 1 204 1 92 1 206 1 160 2 10 2 44 1 15 1 74 1 164 1 213 1 50 1 141 1 53 1 193 1 170 1 176 1 107 1 225 1 229 1 
225 1 
115 1 34 3 0 1 146 1 148 2 89 2 122 1 181 1 204 2 151 1 92 1 205 1 67 1 70 1 206 1 8 1 160 3 10 2 44 1 11 4 97 1 161 1 15 1 74 1 99 2 100 1 162 2 213 1 141 2 50 1 49 1 144 1 53 1 54 1 55 1 193 1 26 1 30 1 29 1 81 1 108 1 225 1 107 1 227 1 229 1 
53 1 193 1 146 1 10 1 107 1 230 1 
113 5 34 2 63 1 177 4 0 1 146 1 148 3 1 1 89 2 122 1 181 1 204 2 92 1 205 1 206 1 160 3 10 2 44 1 97 1 12 1 161 1 15 1 74 1 99 2 75 1 162 2 166 1 135 4 213 1 141 2 50 1 49 1 190 4 53 1 193 1 56 4 26 1 57 1 81 1 29 1 82 1 225 1 107 1 110 1 198 1 229 1 
15 1 34 2 148 1 146 1 89 2 122 1 213 1 142 1 141 2 50 1 204 1 205 1 53 1 193 1 206 1 160 2 10 1 130 1 107 1 229 1 
113 3 34 2 63 1 177 2 0 1 146 1 148 3 1 1 89 1 122 1 204 1 205 1 206 1 160 1 10 1 97 1 12 1 15 1 99 1 75 1 162 1 166 1 135 2 213 1 141 1 50 1 49 1 190 2 53 1 193 1 56 2 26 1 57 1 81 1 29 1 82 1 225 1 107 1 110 1 198 1 229 1 
74 1 170 1 89 1 10 1 141 1 92 1 
26 1 130 1 
130 1 49 1 
34 2 146 1 148 1 89 1 122 1 181 1 204 1 92 1 206 1 160 2 10 2 44 1 15 1 74 1 213 1 50 1 141 1 53 1 193 1 107 1 225 1 229 1 

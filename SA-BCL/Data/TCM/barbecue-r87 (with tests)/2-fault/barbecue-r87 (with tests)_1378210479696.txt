#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NumberFormatException 147 239 194 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NumberFormatException 147 239 84 5 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NumberFormatException 147 239 84 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 13696 | stmt -> ;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer; | CONDITION | 6311 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 1 63 1 115 1 172 1 159 1 160 1 
85 1 63 1 115 1 159 1 160 1 
235 1 142 1 14 2 
161 1 71 2 33 1 123 1 152 1 166 1 184 1 201 1 9 1 187 1 219 1 80 1 128 1 157 1 115 1 44 3 192 1 225 1 83 1 
161 1 71 1 33 2 152 1 166 1 184 1 201 1 9 1 203 1 187 1 219 1 236 1 128 1 157 1 115 1 44 3 
161 1 71 1 179 1 184 1 201 3 9 2 219 1 128 2 157 1 44 2 
161 1 71 2 195 1 33 1 152 1 166 1 184 1 201 2 9 1 187 1 219 1 236 1 128 2 157 1 115 1 44 4 
219 1 161 1 38 1 184 1 
161 1 71 1 184 1 201 1 9 2 219 1 204 1 128 1 157 1 40 1 44 2 
161 1 71 1 33 1 152 1 166 1 201 1 9 1 187 2 219 1 80 1 238 1 128 1 157 1 115 2 149 1 44 3 192 1 225 1 83 1 160 1 
161 1 71 1 33 1 152 1 166 1 201 1 9 1 187 2 219 1 80 1 238 1 128 1 157 1 115 2 44 3 192 1 225 1 83 1 160 1 
56 1 175 1 161 1 71 1 164 1 184 1 201 1 9 1 187 1 219 1 238 1 128 1 157 1 115 1 44 2 149 1 160 1 
175 1 161 1 71 1 164 1 184 1 201 1 9 1 187 1 219 1 238 1 128 1 157 1 115 1 44 2 149 1 193 1 160 1 
175 1 161 1 71 1 164 1 232 1 233 1 184 1 201 1 9 1 187 1 219 1 129 1 238 1 128 1 157 1 115 1 44 2 160 1 
175 1 161 1 71 1 164 1 232 1 233 1 184 1 201 1 9 1 187 1 219 1 129 1 238 1 128 1 157 1 115 1 149 1 44 2 160 1 
161 1 71 2 179 1 184 1 201 2 9 1 219 1 128 1 157 1 44 3 
161 1 213 1 184 1 201 2 9 1 219 1 128 1 44 3 132 1 27 2 
9 2 219 1 161 1 128 1 42 1 132 1 44 2 27 1 184 1 201 1 
161 1 136 1 184 1 201 1 9 1 219 1 128 1 44 2 132 1 27 1 
9 1 219 1 161 1 128 1 65 1 132 1 44 2 27 1 184 1 201 1 
161 1 33 4 166 1 184 1 201 1 9 1 186 1 188 1 187 1 219 1 220 1 145 1 146 1 128 1 115 1 44 3 132 1 27 1 
9 1 219 1 161 1 128 1 20 1 131 1 132 1 44 2 27 1 184 1 201 1 
221 1 3 1 130 3 
130 1 
22 1 57 1 239 1 210 1 84 1 
22 3 57 1 147 1 239 1 210 3 84 1 
22 3 57 1 194 1 147 1 239 1 210 3 
46 1 22 3 57 1 147 1 239 1 5 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
0 4 1 2 2 4 121 1 122 1 9 2 10 1 127 2 132 1 133 4 16 6 136 2 19 1 18 2 137 1 141 1 21 1 143 2 22 4 25 3 146 1 147 1 26 1 148 2 27 2 28 3 29 2 151 1 33 2 34 2 35 1 154 3 37 1 156 1 39 2 44 4 43 4 159 2 160 1 46 1 47 1 48 1 166 1 50 1 167 3 169 1 54 3 55 5 57 1 177 1 181 1 183 2 58 3 59 1 190 2 66 1 69 1 74 5 72 2 196 1 198 2 199 1 201 2 203 1 207 1 210 4 84 1 213 1 90 14 215 3 92 1 219 1 95 2 222 1 96 1 98 1 100 3 226 3 228 2 229 3 104 1 231 1 107 1 234 1 112 3 236 1 113 3 114 2 238 1 115 2 239 1 241 2 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
12 1 
46 1 22 3 57 1 147 1 239 1 210 3 84 1 
90 1 99 1 141 1 
62 1 90 1 
175 1 16 1 75 1 164 1 232 1 76 1 90 1 215 1 79 1 115 1 173 1 160 1 
175 1 79 1 16 1 115 1 164 1 90 1 160 1 
62 1 90 1 
16 1 115 1 215 1 90 1 174 1 160 1 
230 1 90 1 
150 1 90 1 
62 1 90 1 
150 1 90 1 
150 1 90 1 
155 1 105 1 90 1 197 1 
120 1 90 1 117 1 
133 2 71 1 87 1 4 2 163 1 47 1 88 1 106 1 90 2 201 1 9 1 219 1 62 1 157 1 44 2 242 1 45 1 
111 1 
9 1 71 1 219 1 38 1 87 1 157 1 47 1 88 1 106 1 45 1 242 1 44 2 201 1 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 64 2 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
227 1 71 1 104 1 151 1 47 1 217 1 50 1 201 1 9 1 219 1 157 1 44 2 98 1 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 64 2 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 7 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 143 1 112 1 25 2 113 1 54 1 55 2 
175 1 1 1 2 2 58 1 9 4 61 1 127 1 129 2 190 1 189 1 193 1 133 1 71 2 16 1 74 2 73 1 72 1 75 1 195 1 136 1 196 1 76 1 18 1 198 1 141 3 201 2 143 1 204 1 25 1 148 1 207 1 30 1 151 1 90 3 215 1 34 1 219 1 157 1 95 1 39 1 44 3 98 2 100 1 160 1 226 1 227 1 104 2 229 1 47 1 164 1 232 2 107 1 50 2 167 1 112 1 113 1 238 1 115 1 241 1 54 1 55 2 116 1 173 1 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
227 1 71 2 104 2 151 1 47 1 50 2 201 1 9 1 219 1 157 1 44 3 98 2 
176 1 0 4 1 2 2 4 178 1 182 1 183 2 58 2 9 2 11 2 126 1 127 2 190 2 191 1 133 4 71 1 16 6 72 2 74 4 17 2 136 2 18 2 198 2 202 1 201 1 143 2 203 1 204 1 24 1 25 2 148 2 207 1 31 1 151 1 33 1 215 3 90 4 34 2 152 1 154 3 93 2 218 2 219 1 157 1 39 2 95 2 158 2 223 2 43 4 44 3 98 1 159 2 100 2 160 1 226 2 228 2 104 1 229 2 231 1 48 1 47 1 107 1 166 1 50 1 167 2 53 1 112 2 238 1 113 2 115 2 241 2 54 2 55 4 118 1 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 51 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 64 2 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
227 1 71 2 104 2 151 1 47 1 50 2 201 1 9 1 219 1 157 1 44 3 98 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
0 2 1 1 2 2 183 1 58 1 9 1 11 1 127 1 190 1 133 2 71 1 16 3 72 1 74 2 17 1 136 1 18 1 198 1 201 1 143 1 203 1 25 1 148 1 151 1 33 1 90 2 34 1 152 1 154 3 93 1 218 1 219 1 157 1 39 1 95 1 158 1 223 1 43 2 44 3 98 1 159 1 100 1 226 1 228 1 104 1 229 1 231 1 48 1 47 1 166 1 50 1 167 1 112 1 113 1 115 1 241 1 54 1 55 2 118 1 
227 1 71 1 104 1 151 1 47 1 50 1 93 1 201 1 9 1 219 1 157 1 44 2 98 1 
0 2 1 1 2 2 183 1 58 1 11 1 127 1 190 1 189 1 133 2 16 3 72 1 74 2 17 1 136 1 18 1 198 1 139 1 203 1 143 1 25 2 146 1 148 1 33 1 213 1 90 2 34 1 154 3 93 1 218 1 95 1 39 1 158 1 223 1 159 1 44 1 43 2 100 1 226 1 102 1 228 1 162 1 229 1 231 1 48 1 166 1 167 1 51 1 112 1 113 1 115 1 54 1 241 1 55 2 118 1 
0 2 1 1 2 2 183 1 7 1 58 1 9 1 11 1 127 1 190 1 133 2 71 1 16 3 72 1 74 2 17 1 136 1 18 1 198 1 201 1 143 1 203 1 25 1 148 1 151 1 33 1 90 2 34 1 152 1 154 3 93 1 218 1 219 1 157 1 39 1 95 1 158 1 223 1 43 2 44 3 98 1 159 1 100 1 226 1 228 1 104 1 229 1 231 1 48 1 47 1 166 1 50 1 167 1 112 1 113 1 115 1 241 1 54 1 55 2 118 1 
0 2 1 1 2 2 183 1 7 1 58 1 9 1 11 1 127 1 190 1 132 1 133 2 16 3 72 1 74 2 17 1 136 1 18 1 198 1 201 1 143 1 203 1 146 1 25 1 148 1 27 1 151 1 33 1 213 1 90 2 34 1 154 3 93 1 218 1 219 1 95 1 39 1 158 1 223 1 43 2 44 3 98 1 159 1 100 1 226 1 228 1 104 1 229 1 231 1 47 1 48 1 166 1 50 1 167 1 112 1 113 1 115 1 241 1 54 1 55 2 118 1 
1 1 2 2 151 1 34 1 58 1 9 1 219 1 127 1 157 1 189 1 39 1 190 1 95 1 98 1 44 2 100 1 226 1 133 2 102 1 71 1 227 1 72 1 162 1 74 2 229 1 104 1 47 1 18 1 139 1 167 1 50 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 51 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 2 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 2 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 51 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
0 1 90 1 223 1 43 1 138 1 
0 1 228 1 90 1 43 1 138 1 
15 1 0 1 97 1 90 1 223 1 43 1 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
175 1 0 2 1 1 2 2 183 1 58 1 9 2 127 1 129 1 189 1 190 1 133 2 71 1 16 3 72 1 74 2 75 3 136 1 196 1 76 3 18 1 198 1 139 1 201 1 143 1 79 1 25 2 148 1 207 1 151 1 90 2 215 3 34 1 219 1 157 1 39 1 95 1 223 1 43 2 44 2 98 1 159 1 100 1 160 1 226 1 102 1 227 1 228 1 162 1 229 1 104 1 47 1 164 1 232 4 107 1 167 1 50 1 51 1 112 1 113 1 238 1 115 1 241 1 54 1 55 2 173 3 
1 1 2 3 151 1 34 1 183 1 7 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 183 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 64 2 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 51 1 143 1 112 1 25 1 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 64 2 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 189 1 39 1 98 1 44 2 100 1 226 1 133 3 102 1 71 1 227 1 74 2 72 1 162 1 104 1 229 1 47 1 18 1 139 1 50 1 167 1 201 1 51 1 143 1 112 1 25 2 113 1 54 1 55 2 
1 1 2 3 151 1 34 1 58 1 9 1 219 1 62 1 127 1 157 1 190 1 95 1 39 1 98 1 44 2 100 1 226 1 133 3 71 1 74 2 72 1 104 1 229 1 47 1 18 1 50 1 167 1 201 1 143 1 112 1 25 1 113 1 54 1 55 2 
9 1 71 1 219 1 104 1 157 1 47 1 151 1 98 1 44 2 50 1 201 1 
56 1 175 1 33 1 215 2 90 4 9 2 219 1 125 1 157 1 129 1 224 1 44 2 192 1 225 1 160 1 71 1 16 2 75 2 47 1 164 1 136 1 76 2 232 3 196 1 107 1 198 1 141 3 201 1 80 1 81 1 205 1 238 1 171 1 115 1 241 1 148 1 242 1 173 2 209 1 207 1 83 1 
175 1 215 2 90 4 218 1 9 1 219 1 125 1 11 1 157 1 129 1 131 1 158 1 224 1 44 2 160 1 71 1 16 2 75 2 17 1 47 1 164 1 136 1 76 2 232 3 165 1 107 1 20 1 198 1 108 1 140 1 200 1 141 3 202 1 201 1 81 1 205 1 171 1 115 1 148 1 241 1 242 1 173 2 209 1 207 1 
226 1 71 1 74 1 104 1 177 1 229 1 47 1 151 1 122 1 50 1 167 1 201 1 58 1 9 1 219 1 112 1 169 1 25 1 157 1 113 1 54 1 98 1 44 2 55 1 100 1 
1 1 2 2 177 1 122 1 151 1 34 1 183 1 7 1 58 3 9 1 219 1 127 1 157 1 190 1 95 1 39 1 44 2 98 1 100 3 14 1 133 2 226 3 71 1 72 1 74 4 229 3 104 1 47 1 18 1 167 3 50 1 201 1 143 1 112 3 25 3 169 2 113 3 54 3 55 4 
177 1 122 1 151 1 124 1 58 3 9 1 219 1 157 1 44 2 98 1 100 3 226 3 71 1 74 3 229 3 104 1 47 1 167 3 50 1 201 1 112 3 25 3 169 3 113 3 54 3 55 3 
177 1 122 1 151 1 58 1 9 1 219 1 157 1 65 1 44 2 98 1 100 1 226 1 71 1 74 1 229 1 104 1 47 1 167 1 50 1 201 1 112 1 25 1 169 1 113 1 54 1 55 1 
71 1 104 1 122 1 151 1 47 1 50 1 201 1 9 1 219 1 169 1 157 1 65 1 44 2 98 1 
29 1 0 1 177 1 122 1 151 1 90 1 58 1 9 1 219 1 62 1 157 1 43 1 44 2 98 1 100 1 226 1 71 1 74 1 229 1 104 1 47 1 138 1 110 1 167 1 50 1 201 1 112 1 25 1 169 1 113 1 54 1 55 1 
211 1 214 1 44 1 
237 2 240 1 123 1 44 1 
185 1 211 1 32 1 44 1 
23 1 240 1 123 1 44 1 153 1 
211 1 243 1 
75 1 129 1 76 1 232 1 215 1 173 1 
17 1 202 1 218 1 11 1 168 1 115 1 160 1 
115 1 107 1 207 1 160 1 
79 1 75 1 129 1 76 1 232 1 215 1 173 1 
133 1 143 1 2 1 74 1 62 1 90 1 
74 1 58 1 
133 1 2 1 62 1 90 1 
133 1 143 1 52 1 2 1 74 2 14 1 58 1 
74 1 58 1 
27 1 
132 1 
27 1 
71 1 
71 1 
157 1 
120 1 133 2 134 1 180 1 47 1 212 1 89 1 90 1 201 1 77 1 9 1 219 1 62 1 41 2 44 2 242 1 132 1 208 1 82 1 27 1 
36 1 
180 1 47 1 212 1 89 1 201 1 77 1 9 1 219 1 65 1 44 2 242 1 132 1 208 1 82 1 27 1 
180 2 47 2 212 2 89 2 49 1 201 2 77 2 9 2 219 2 67 1 44 4 242 2 132 2 208 2 82 2 27 2 
120 2 133 1 134 1 180 1 47 1 212 1 89 1 90 3 201 1 77 1 9 1 219 1 62 1 41 1 44 2 242 1 132 1 208 1 82 1 27 1 
180 1 47 1 212 1 89 1 201 1 77 1 9 1 219 1 67 1 44 2 242 1 132 1 208 1 82 1 27 1 
180 2 47 2 212 2 89 2 201 2 77 2 9 2 219 2 38 1 170 1 67 1 44 4 242 2 132 2 208 2 82 2 27 2 
180 1 47 1 212 1 89 1 49 1 201 1 77 1 9 1 219 1 44 2 242 1 132 1 208 1 82 1 27 1 
180 1 47 1 212 1 89 1 201 1 77 1 9 1 219 1 38 1 170 1 44 2 242 1 132 1 208 1 82 1 27 1 
103 1 62 1 90 2 141 2 
70 1 62 1 90 2 141 2 
86 1 180 1 212 1 33 1 89 1 90 2 36 1 154 2 218 1 9 2 219 1 11 1 158 1 41 1 132 1 44 3 133 1 70 1 134 1 16 2 103 1 231 1 17 1 48 1 47 1 136 1 198 1 49 1 166 1 141 2 77 1 201 1 203 1 204 1 146 1 115 1 241 1 148 1 242 1 118 1 208 1 82 1 27 1 
219 1 38 1 47 1 170 1 89 1 
120 1 175 1 180 1 212 1 89 1 215 3 90 3 36 1 9 3 155 1 219 1 129 1 41 1 132 1 44 2 160 1 133 1 70 1 134 1 16 2 103 1 75 3 47 1 136 1 164 1 76 3 232 4 196 1 107 1 198 1 141 2 77 1 201 1 79 1 204 1 238 1 115 1 241 1 148 1 242 1 173 3 207 1 208 1 82 1 27 1 
133 2 120 1 47 1 197 1 90 2 216 1 91 1 8 1 201 1 9 1 219 1 62 1 144 1 94 1 206 2 44 2 242 1 132 1 68 1 27 1 
120 1 0 1 90 2 91 2 8 1 9 1 219 1 94 1 132 1 44 2 43 1 68 1 13 1 14 1 133 1 101 1 47 1 109 1 201 1 142 1 144 1 206 1 242 1 117 1 27 1 
109 1 
120 2 0 1 33 1 90 3 216 1 91 2 6 1 154 4 8 1 218 1 9 2 155 2 219 1 11 1 60 1 94 1 158 1 43 1 159 1 132 1 44 3 68 1 13 1 133 2 101 1 16 2 231 1 17 1 47 1 48 1 136 1 109 1 166 1 201 1 203 1 78 1 204 1 144 1 146 1 115 1 206 2 148 1 242 1 118 1 27 1 
38 1 144 1 94 1 91 1 68 1 8 1 
175 1 120 2 0 1 8 1 9 3 60 1 129 1 132 1 68 1 13 1 133 2 16 2 75 4 136 1 196 1 76 4 201 1 78 1 79 1 204 1 144 1 148 1 206 2 207 1 27 1 215 4 216 1 90 3 91 2 219 1 155 2 94 1 44 2 159 1 43 1 160 1 101 1 47 1 164 1 232 5 107 1 109 1 238 1 115 1 242 1 173 4 
38 1 144 1 94 1 91 1 68 1 8 1 
119 1 120 1 216 1 90 2 91 1 6 1 9 1 219 1 62 1 94 1 132 1 44 2 68 1 133 2 135 1 47 1 197 1 201 1 206 2 242 1 27 1 
120 1 175 1 90 1 216 1 215 2 91 1 8 1 9 3 155 1 219 1 60 1 129 1 94 1 132 1 44 2 68 1 160 1 133 1 16 1 75 2 47 1 136 1 164 1 76 2 232 3 196 1 107 1 109 1 201 1 78 1 79 1 204 1 144 1 238 1 115 1 206 1 148 1 242 1 173 2 207 1 27 1 
133 1 101 1 206 1 91 1 13 1 14 1 
60 1 62 1 
78 1 62 1 
120 1 133 1 101 1 0 1 47 1 90 2 91 2 109 1 8 1 201 1 9 1 219 1 144 1 94 1 206 1 43 1 44 2 242 1 132 1 68 1 13 1 27 1 

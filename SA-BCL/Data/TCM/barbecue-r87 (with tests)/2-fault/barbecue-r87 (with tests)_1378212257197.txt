#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 224 97 250 180 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 6495 | - -> /
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module; | RETURN | 10876 | return null
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 67 1 87 1 160 1 112 1 106 1 
114 1 67 1 160 1 112 1 106 1 
64 2 117 1 246 1 
67 1 26 1 136 1 104 1 59 1 227 1 198 1 211 1 251 1 230 1 50 3 32 1 168 1 78 2 254 1 149 1 186 1 203 1 189 1 
67 1 136 1 104 1 227 1 211 1 50 3 230 2 32 1 168 1 78 1 254 1 149 1 35 1 186 1 203 1 188 1 
50 2 241 1 136 2 32 1 78 1 168 3 104 1 227 2 211 1 203 1 
67 1 136 1 104 1 227 2 211 1 50 4 230 1 32 1 168 2 78 2 254 1 149 1 186 1 35 1 203 1 126 1 
92 1 104 1 211 1 203 1 
136 2 104 1 227 1 211 1 8 1 50 2 32 1 168 1 78 1 202 1 203 1 
67 2 136 1 26 1 104 1 227 1 59 1 198 1 106 1 90 1 230 1 50 3 32 1 168 1 78 1 254 1 111 1 149 1 186 2 203 1 189 1 
67 2 136 1 26 1 104 1 227 1 59 1 198 1 106 1 90 1 230 1 50 3 32 1 168 1 78 1 254 1 149 1 186 2 203 1 189 1 
67 1 158 1 136 1 104 1 3 1 227 1 211 1 106 1 90 1 109 1 50 2 32 1 168 1 78 1 111 1 186 1 203 1 
67 1 194 1 136 1 104 1 3 1 227 1 211 1 106 1 90 1 109 1 50 2 32 1 168 1 78 1 111 1 186 1 203 1 
67 1 136 1 104 1 119 1 3 1 227 1 71 1 211 1 106 1 90 1 109 1 50 2 32 1 168 1 78 1 79 1 186 1 203 1 
67 1 136 1 104 1 119 1 3 1 227 1 71 1 211 1 106 1 90 1 109 1 50 2 32 1 168 1 78 1 79 1 111 1 186 1 203 1 
50 3 241 1 136 1 32 1 78 2 168 2 104 1 227 1 211 1 203 1 
136 1 104 1 227 1 209 1 211 1 45 2 47 1 50 3 168 2 203 1 
45 1 50 2 136 2 168 1 104 1 227 1 209 1 211 1 212 1 203 1 
45 1 182 1 50 2 136 1 168 1 104 1 227 1 209 1 211 1 203 1 
45 1 50 2 136 1 168 1 104 1 14 1 227 1 209 1 211 1 203 1 
67 1 242 1 136 1 104 1 227 1 209 1 211 1 45 1 50 3 230 4 110 1 231 1 168 1 149 1 61 1 150 1 186 1 203 1 
136 1 104 1 227 1 209 1 211 1 213 1 45 1 50 2 168 1 124 1 203 1 
199 3 154 1 197 1 
199 1 
129 2 0 2 134 4 136 5 1 1 137 6 6 3 141 4 9 3 10 1 143 1 144 3 145 3 13 3 147 1 149 1 17 1 18 1 151 2 21 3 155 1 23 1 157 2 159 1 163 1 165 1 167 1 168 4 35 1 36 1 173 2 177 1 179 3 43 14 45 2 46 1 47 1 49 1 50 4 182 2 184 1 185 3 51 2 188 1 190 4 55 2 195 1 60 3 202 1 203 1 204 3 67 2 66 4 68 1 207 3 70 2 209 1 72 2 215 2 76 1 218 3 221 3 223 3 224 1 82 1 83 1 225 1 86 2 88 1 89 2 90 1 91 1 230 2 231 1 94 1 95 1 234 5 96 5 97 1 238 1 241 1 243 3 250 1 106 1 112 2 115 2 116 2 120 1 121 1 259 4 260 2 264 2 267 1 126 1 127 4 
129 2 68 1 66 4 67 2 207 3 0 2 134 4 136 3 1 1 137 6 70 2 209 1 72 2 6 3 215 2 141 4 10 1 143 1 76 1 144 2 13 3 145 2 147 1 218 3 149 1 221 3 223 3 17 1 82 1 224 1 18 1 151 2 21 3 83 1 225 1 157 2 159 1 86 2 88 1 89 2 90 1 91 1 163 1 230 2 231 1 165 1 95 1 167 1 234 5 168 2 96 5 97 1 35 1 238 1 36 1 173 2 177 1 241 1 179 2 243 3 106 1 250 1 43 4 45 1 46 1 47 1 49 1 182 2 50 3 184 1 51 2 185 3 112 2 188 1 190 4 116 2 115 2 195 1 120 1 121 1 259 4 60 3 260 2 264 2 203 1 204 3 127 4 
134 4 1 1 120 1 88 1 250 1 91 1 47 1 10 1 97 1 238 1 224 1 127 4 
129 2 0 2 134 4 135 1 136 3 1 1 137 6 6 2 141 4 10 1 143 1 144 2 145 2 13 2 147 1 149 1 17 1 18 1 151 2 21 2 24 1 157 2 159 1 161 1 162 2 164 1 165 1 32 1 168 2 170 1 35 1 36 1 171 2 173 2 177 1 179 2 39 2 42 2 43 4 46 1 49 1 182 2 50 3 184 1 51 2 185 2 52 1 188 1 54 2 191 2 190 4 60 3 200 2 62 2 203 1 204 3 66 4 67 2 68 1 206 1 207 2 70 2 72 2 215 2 78 1 218 2 219 1 221 4 223 2 224 1 82 1 83 1 225 1 88 1 89 2 90 1 91 1 230 2 232 2 95 1 234 4 96 4 97 1 238 1 240 2 241 1 102 1 103 2 243 2 250 1 106 1 254 1 112 2 256 1 115 2 116 2 120 1 121 1 259 4 260 2 261 1 264 2 125 1 127 4 
131 1 68 1 66 2 67 2 134 4 136 3 1 1 208 2 137 4 209 1 139 1 140 2 141 4 10 1 143 1 147 1 149 1 15 1 17 1 82 1 224 1 18 1 153 4 83 1 225 1 157 2 88 1 229 3 90 1 91 1 29 2 230 3 165 1 231 1 95 1 33 2 168 2 236 2 97 1 35 1 238 1 36 1 175 1 241 1 101 1 38 4 181 4 244 1 106 1 41 2 250 1 43 8 45 1 46 1 47 1 49 1 182 2 50 3 255 1 187 2 112 2 188 2 120 1 121 1 259 2 60 4 203 1 204 4 127 4 
129 2 68 1 67 2 66 4 207 2 0 2 134 4 136 3 1 1 137 6 70 2 209 1 72 2 6 2 215 2 141 4 10 1 143 1 144 2 13 2 145 2 147 1 218 2 149 1 221 4 223 2 17 1 82 1 224 1 18 1 151 2 21 2 83 1 157 2 159 1 88 1 89 2 161 1 90 1 162 2 91 1 230 2 165 1 231 1 95 1 234 4 168 2 96 4 97 1 35 1 238 1 36 1 173 2 177 1 241 1 103 2 179 2 243 2 106 1 42 2 250 1 43 4 45 1 46 1 47 1 49 1 50 4 182 2 184 1 185 2 51 2 112 2 188 1 54 2 190 4 191 2 116 2 115 2 120 1 121 1 259 4 60 3 260 2 264 2 62 2 203 1 204 3 127 4 
129 2 68 1 67 2 66 4 207 2 0 2 134 4 136 3 1 1 137 6 70 2 209 1 72 2 6 2 215 2 141 4 10 1 143 1 144 2 13 2 145 2 147 1 218 2 149 1 221 4 223 2 17 1 82 1 224 1 18 1 151 2 21 2 83 1 225 1 157 2 159 1 88 1 89 2 161 1 90 1 162 2 91 1 164 1 230 2 165 1 231 1 95 1 234 4 168 2 96 4 97 1 35 1 238 1 36 1 173 2 177 1 241 1 103 2 179 2 243 2 106 1 42 2 250 1 43 4 45 1 46 1 47 1 49 1 50 3 182 2 184 1 185 2 51 2 112 2 188 1 54 2 190 4 191 2 116 2 115 2 120 1 121 1 259 4 60 3 260 2 264 2 62 2 203 1 204 3 127 4 
129 2 68 1 66 4 67 2 207 3 0 2 134 4 136 3 1 1 137 6 69 1 70 2 209 1 72 2 6 3 215 2 141 4 10 1 143 1 76 1 144 2 13 3 145 2 147 1 218 3 149 1 221 3 223 3 17 1 82 1 224 1 18 1 151 2 21 3 83 1 157 2 85 1 86 2 88 1 89 2 90 1 91 1 163 1 230 2 231 1 165 1 95 1 234 5 168 2 96 5 97 1 35 1 238 1 36 1 173 2 241 1 179 2 243 3 40 1 106 1 250 1 43 4 45 1 46 1 47 1 49 1 182 2 50 3 184 1 51 2 185 3 112 2 188 1 190 4 116 2 115 2 195 1 120 1 121 1 259 4 60 3 260 2 264 2 203 1 204 3 127 4 
19 1 
129 2 0 2 134 4 136 4 1 1 137 6 6 3 141 4 10 1 143 1 144 2 145 2 13 3 147 1 149 1 17 1 18 1 151 2 21 3 157 2 159 1 163 1 165 1 167 1 168 2 35 1 36 1 173 2 177 1 179 2 40 1 43 4 45 1 46 1 49 1 47 1 50 3 182 2 184 1 185 3 51 2 188 2 190 4 195 1 60 3 202 1 203 1 204 3 67 2 66 4 68 1 207 3 70 2 209 1 72 2 215 2 76 1 218 3 221 3 223 3 224 1 82 1 83 1 225 1 86 2 85 1 88 1 89 2 90 1 91 1 230 3 231 1 95 1 234 5 96 5 97 1 238 1 99 1 241 1 243 3 250 1 106 1 112 2 115 2 116 2 120 1 121 1 259 4 260 2 264 2 127 4 
134 1 1 1 97 1 250 1 127 1 
129 2 68 1 66 4 67 2 207 3 0 2 134 4 136 3 1 1 137 6 70 2 209 1 72 2 6 3 215 2 141 4 143 1 76 1 144 2 13 3 145 2 147 1 218 3 149 1 221 3 223 3 17 1 82 1 224 1 18 1 151 2 21 3 83 1 157 2 159 1 85 1 86 2 88 1 89 2 90 1 91 1 163 1 230 2 231 1 165 1 95 1 167 1 234 5 168 2 96 5 97 1 35 1 238 1 36 1 173 2 177 1 241 1 179 2 243 3 40 1 106 1 250 1 43 4 45 1 46 1 47 1 49 1 182 2 50 3 184 1 51 2 185 3 112 2 188 1 190 4 116 2 115 2 195 1 120 1 121 1 259 4 60 3 260 2 264 2 203 1 204 3 127 4 
129 2 68 1 66 4 67 2 207 3 0 2 134 4 136 3 1 1 137 6 70 2 4 1 209 1 72 2 6 3 215 2 141 4 143 1 76 1 144 2 13 3 145 2 147 1 218 3 149 1 221 3 223 3 17 1 82 1 224 1 18 1 151 2 21 3 83 1 157 2 159 1 85 1 86 2 88 1 89 2 90 1 91 1 163 1 230 2 231 1 165 1 95 1 167 1 234 5 168 2 96 5 97 1 35 1 238 1 36 1 173 2 177 1 241 1 179 2 243 3 40 1 106 1 43 4 45 1 46 1 47 1 49 1 182 2 50 3 184 1 51 2 185 3 112 2 188 1 190 4 116 2 115 2 195 1 120 1 121 1 259 4 60 3 260 2 264 2 203 1 204 3 127 4 
129 2 0 2 132 1 134 4 136 11 1 1 2 1 137 6 6 7 141 4 10 1 143 1 144 10 12 1 145 10 13 7 147 1 149 1 17 1 20 1 18 10 152 1 151 2 21 7 157 2 159 1 161 1 162 2 163 5 165 1 31 1 168 11 169 1 34 1 35 1 36 1 173 2 177 1 179 10 180 1 40 1 42 2 43 7 45 10 46 1 47 1 49 1 50 20 182 2 184 9 185 7 51 2 188 1 54 2 191 2 190 4 192 1 195 5 60 3 62 2 203 10 63 1 204 3 205 1 68 1 67 3 66 6 207 7 70 2 209 9 72 2 75 1 215 2 76 5 218 7 221 9 223 7 82 1 224 1 83 1 85 1 86 2 226 1 88 1 89 2 90 1 91 1 230 2 231 1 95 1 234 9 96 9 97 1 238 1 239 1 99 1 241 1 103 2 243 7 250 1 106 2 108 1 112 2 116 2 115 2 120 1 121 1 259 6 260 2 264 2 127 4 
23 1 196 1 43 1 
174 1 43 1 
220 1 43 1 
67 1 25 1 37 1 119 1 118 1 3 1 137 1 228 1 106 1 43 1 60 1 109 1 
67 1 137 1 258 1 106 1 60 1 43 1 
109 1 67 1 137 1 3 1 228 1 106 1 43 1 
220 1 43 1 
22 1 43 1 
220 1 43 1 
174 1 43 1 
174 1 43 1 
262 1 48 1 181 1 43 1 
153 1 84 1 43 1 
156 1 136 1 57 1 209 1 43 2 252 2 45 1 141 2 50 2 217 1 11 1 168 1 220 1 237 1 187 1 203 1 18 1 
130 1 
45 1 92 1 50 2 156 1 11 1 136 1 168 1 57 1 209 1 237 1 187 1 203 1 18 1 
179 2 136 1 50 3 184 1 144 2 145 2 32 1 168 1 78 2 203 1 113 1 18 1 
129 2 206 1 68 1 66 4 67 2 207 2 0 2 135 1 136 2 137 6 70 2 72 2 6 2 215 2 141 4 144 1 145 1 13 2 147 1 218 2 78 1 219 1 149 1 221 2 223 2 82 1 18 1 151 2 21 2 24 1 157 2 89 2 90 1 230 1 232 2 95 1 32 1 168 1 234 4 96 4 170 1 171 2 173 2 240 2 102 1 179 1 39 2 243 2 106 1 43 4 50 3 182 2 184 1 185 2 51 2 52 1 254 1 112 2 256 1 188 1 54 2 190 4 116 2 115 2 259 4 60 3 261 1 260 2 200 2 264 2 125 1 202 1 203 1 204 3 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 53 2 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
50 2 144 1 184 1 136 1 32 1 179 1 145 1 78 1 168 1 203 1 18 1 
179 2 136 1 50 3 184 1 144 2 145 2 32 1 168 1 78 2 203 1 113 1 18 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 53 2 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
179 1 136 1 50 2 183 1 184 1 144 1 145 1 32 1 168 1 78 1 203 1 113 1 18 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 53 2 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
99 1 129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
128 1 129 1 67 1 207 1 0 1 136 4 3 1 137 2 71 2 72 1 6 1 215 1 141 2 216 1 144 2 13 1 145 2 147 1 218 1 78 2 221 1 223 1 82 1 18 1 151 1 21 1 23 3 157 1 25 2 228 1 90 1 32 1 234 2 168 2 96 2 36 1 173 1 179 2 37 2 243 1 249 1 106 1 42 1 43 3 44 1 109 1 50 3 182 1 184 1 51 1 185 1 113 1 190 2 116 1 115 1 194 1 119 3 118 2 260 1 60 2 264 1 202 1 203 1 126 1 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 113 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 68 1 66 2 67 1 207 1 0 1 136 1 137 3 70 1 72 1 6 1 215 1 141 2 144 1 145 1 13 1 218 1 78 1 149 1 221 1 223 1 18 1 151 1 21 1 157 1 89 1 230 1 232 1 95 1 32 1 168 1 234 2 96 2 171 1 173 1 240 1 179 1 39 1 243 1 43 2 182 1 50 3 184 1 185 1 51 1 254 1 112 1 188 1 54 1 190 2 116 1 115 1 259 2 261 1 260 1 200 1 264 1 203 1 204 3 
179 1 136 1 39 1 50 2 184 1 144 1 145 1 32 1 168 1 78 1 203 1 113 1 18 1 
129 1 68 1 67 1 66 2 207 1 0 1 137 3 70 1 72 1 6 1 215 1 141 2 13 1 218 1 149 1 221 2 223 1 151 1 21 1 157 1 89 1 162 1 230 1 232 1 231 1 95 1 234 2 96 2 171 1 173 1 240 1 103 1 39 1 243 1 42 1 43 2 47 1 182 1 50 1 51 1 185 1 112 1 188 1 54 1 191 1 190 2 115 1 116 1 259 2 261 1 260 1 200 1 264 1 62 1 204 3 
129 1 68 1 66 2 67 1 207 1 0 1 136 1 137 3 70 1 72 1 6 1 215 1 141 2 144 1 145 1 13 1 218 1 78 1 149 1 221 1 223 1 18 1 151 1 21 1 157 1 89 1 230 1 232 1 95 1 32 1 168 1 234 2 96 2 171 1 173 1 240 1 99 1 179 1 39 1 243 1 43 2 182 1 50 3 184 1 185 1 51 1 254 1 112 1 188 1 54 1 190 2 116 1 115 1 259 2 261 1 260 1 200 1 264 1 203 1 204 3 
129 1 68 1 66 2 67 1 207 1 0 1 136 1 137 3 70 1 209 1 72 1 6 1 215 1 141 2 144 1 145 1 13 1 218 1 149 1 221 1 223 1 18 1 151 1 21 1 157 1 89 1 230 1 232 1 231 1 95 1 168 1 234 2 96 2 171 1 173 1 240 1 99 1 179 1 39 1 243 1 43 2 45 1 47 1 50 3 182 1 184 1 51 1 185 1 112 1 188 1 54 1 190 2 116 1 115 1 259 2 261 1 260 1 200 1 264 1 203 1 204 3 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 72 1 42 1 6 1 215 1 141 2 50 2 144 1 184 1 185 1 51 1 13 1 145 1 218 1 78 1 221 2 223 1 18 1 113 1 21 1 191 1 190 2 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 70 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 70 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 70 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 70 1 72 1 42 1 6 1 215 1 141 2 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 113 1 21 1 190 2 191 1 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 70 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
54 1 66 1 28 1 259 1 43 1 
66 1 89 1 259 1 43 1 
54 1 142 1 66 1 148 1 259 1 43 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 66 2 67 1 207 1 0 1 136 2 3 1 137 3 70 1 71 1 72 1 6 1 215 1 141 2 144 1 13 1 145 1 147 1 218 1 78 1 221 2 223 1 82 1 18 1 151 1 21 1 157 1 25 3 228 1 89 1 162 1 90 1 32 1 234 2 168 1 96 2 36 1 173 1 179 1 37 3 103 1 243 1 42 1 106 1 43 2 109 1 50 2 182 1 184 1 185 1 51 1 112 1 113 1 54 1 191 1 190 2 116 1 115 1 119 4 118 3 259 2 260 1 60 3 264 1 62 1 203 1 
99 1 129 1 207 1 0 1 136 1 179 1 70 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 70 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 53 2 221 1 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 53 2 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 103 1 243 1 72 1 42 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 2 223 1 18 1 113 1 21 1 190 3 191 1 116 1 115 1 162 1 264 1 32 1 234 2 168 1 96 2 62 1 203 1 173 1 
129 1 207 1 0 1 136 1 179 1 243 1 72 1 6 1 215 1 141 3 50 2 144 1 184 1 51 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 190 3 116 1 115 1 264 1 32 1 234 2 168 1 96 2 203 1 173 1 
176 1 67 1 37 2 136 2 137 2 3 1 71 1 106 1 43 4 7 1 109 1 50 2 182 1 147 1 146 1 78 1 187 1 82 1 189 1 18 1 151 1 23 3 193 1 25 2 157 1 158 1 56 1 26 1 118 2 119 3 59 1 198 1 60 2 260 1 90 1 230 1 263 1 32 1 168 1 36 1 203 1 
240 1 176 1 67 1 37 2 136 1 137 2 3 1 5 1 71 1 138 1 106 1 43 4 213 1 7 1 253 1 109 1 50 2 182 1 77 1 147 1 146 1 78 1 187 1 82 1 18 1 151 1 23 3 24 1 193 1 25 2 157 1 56 1 118 2 119 3 60 2 260 1 200 1 263 1 232 1 32 1 168 1 124 1 171 1 203 1 
64 1 99 1 129 1 207 3 0 1 136 1 179 1 70 1 243 3 72 1 6 3 215 1 141 2 50 2 76 1 184 1 144 1 51 1 185 3 13 3 145 1 218 3 78 1 221 3 223 3 18 1 21 3 190 2 116 1 115 1 195 1 163 2 264 1 32 1 234 4 168 1 96 4 203 1 173 1 
207 3 136 1 179 1 243 3 6 3 50 2 76 1 184 1 144 1 185 3 13 3 145 1 218 3 78 1 221 3 223 3 18 1 21 3 195 1 163 3 32 1 266 1 234 3 168 1 96 3 203 1 
207 1 136 1 179 1 243 1 6 1 50 2 76 1 184 1 144 1 185 1 13 1 145 1 218 1 78 1 14 1 221 1 223 1 18 1 21 1 195 1 163 1 32 1 234 1 168 1 96 1 203 1 
136 1 179 1 163 1 50 2 76 1 184 1 144 1 145 1 32 1 168 1 78 1 14 1 203 1 18 1 
66 1 207 1 136 1 179 1 243 1 6 1 43 1 50 2 76 1 184 1 144 1 185 1 13 1 145 1 218 1 78 1 220 1 221 1 223 1 18 1 21 1 195 1 86 1 28 1 259 1 163 1 32 1 123 1 234 1 168 1 96 1 203 1 
207 1 136 1 179 1 243 1 6 1 50 2 76 1 184 1 144 1 185 1 13 1 145 1 218 1 78 1 221 1 223 1 18 1 21 1 195 1 163 1 32 1 234 1 168 1 96 1 203 1 
50 1 233 1 80 1 222 1 
73 1 93 1 50 1 257 1 251 1 
50 1 178 1 80 1 
93 1 50 1 245 2 251 1 
80 1 81 1 
67 1 147 1 106 1 82 1 
25 1 37 1 118 1 119 1 71 1 60 1 
25 1 37 1 118 1 119 1 71 1 228 1 60 1 
200 1 67 1 24 1 232 1 265 1 171 1 106 1 
64 1 141 1 190 1 0 1 96 2 243 1 98 1 
96 1 243 1 
141 1 190 1 0 1 96 1 220 1 43 1 
96 1 243 1 
141 1 190 1 220 1 43 1 
209 1 
45 1 
45 1 
78 1 
32 1 
78 1 
100 1 136 1 105 1 245 1 247 1 248 1 30 1 50 2 122 1 168 1 187 1 201 1 16 1 203 1 18 1 
100 1 136 1 105 1 245 1 247 1 248 1 92 1 50 2 122 1 166 1 168 1 201 1 187 1 16 1 203 1 18 1 
100 1 136 1 105 1 245 1 247 1 248 1 50 2 122 1 168 1 14 1 187 1 201 1 16 1 203 1 18 1 
100 2 136 2 105 2 245 2 247 2 248 2 30 1 50 4 122 2 235 1 168 2 201 2 187 2 16 2 203 2 18 2 
153 1 100 1 136 1 105 1 245 1 247 1 248 1 43 1 214 1 141 2 50 2 122 1 168 1 220 1 187 1 201 1 172 2 16 1 203 1 18 1 
58 1 
23 2 220 1 210 1 43 2 
23 2 220 1 27 1 43 2 
240 1 100 1 65 1 68 1 67 1 136 2 137 2 247 1 245 1 105 1 210 1 248 1 43 2 214 1 141 1 182 1 50 3 254 1 149 1 187 1 16 1 18 1 188 1 151 1 23 2 157 1 58 1 27 1 261 1 260 1 200 1 30 1 230 1 232 1 122 1 95 1 168 1 201 1 202 1 171 1 172 1 203 1 204 2 
92 1 166 1 105 1 203 1 18 1 
100 1 67 1 37 3 136 3 137 2 3 1 181 1 71 1 247 1 245 1 105 1 210 1 248 1 106 1 43 3 214 1 141 1 109 1 182 1 50 2 147 1 187 1 16 1 82 1 18 1 151 1 153 1 23 2 25 3 157 1 118 3 119 4 58 1 228 1 27 1 60 3 260 1 90 1 122 1 168 1 201 1 202 1 172 1 203 1 36 1 
153 2 100 1 136 1 105 1 245 1 247 1 248 1 43 3 214 1 141 1 50 2 122 1 168 1 220 1 187 1 201 1 172 1 16 1 203 1 18 1 
100 1 136 1 105 1 245 1 247 1 248 1 50 2 122 1 235 1 168 1 201 1 187 1 16 1 203 1 18 1 
100 2 136 2 105 2 245 2 247 2 248 2 92 1 50 4 122 2 166 1 235 1 168 2 201 2 187 2 16 2 203 2 18 2 
139 1 175 1 92 1 131 1 255 1 229 1 
100 1 131 1 133 1 136 1 38 2 245 1 107 1 43 2 139 1 74 1 141 2 48 1 50 2 220 1 187 1 18 1 153 1 229 1 168 1 33 1 203 1 
153 1 175 1 100 1 131 1 136 1 38 2 245 1 229 1 43 2 139 1 48 1 141 2 50 2 33 1 168 1 255 1 220 1 187 1 203 1 18 1 
100 1 175 1 131 1 67 1 37 2 136 3 38 1 137 1 3 1 181 1 71 1 245 1 41 1 106 1 43 1 139 1 141 1 109 1 182 1 50 2 147 1 255 1 187 1 82 1 18 1 153 1 25 2 157 1 118 2 119 3 228 1 229 1 60 2 90 1 29 1 33 1 168 1 236 1 202 1 203 1 36 1 
64 1 141 1 140 1 38 1 208 1 229 1 
236 1 220 1 
29 1 220 1 
153 1 175 1 100 1 131 1 66 1 136 1 38 1 208 1 245 1 259 1 41 1 229 2 43 2 139 1 141 1 140 1 50 2 168 1 255 1 187 1 203 1 18 1 
64 1 100 1 175 1 131 1 66 1 136 1 38 1 208 1 245 1 246 1 41 1 43 2 139 1 140 1 141 1 50 2 255 1 187 1 18 1 153 1 84 1 229 2 259 1 168 1 203 1 
41 1 
240 1 100 1 175 1 131 1 68 1 66 1 67 1 133 1 136 2 38 2 208 1 137 2 181 2 245 1 41 1 43 3 139 1 140 1 141 2 50 3 182 1 254 1 255 1 149 1 187 1 112 1 18 1 188 1 153 2 157 1 259 1 229 2 261 1 29 1 200 1 230 1 232 1 95 1 33 1 168 1 236 1 202 1 171 1 203 1 204 4 
139 1 175 1 92 1 131 1 255 1 229 1 
131 1 67 1 66 1 136 3 3 1 137 2 208 1 71 1 139 1 141 2 140 1 147 1 82 1 18 1 153 2 157 1 25 4 228 1 229 2 90 1 29 1 168 1 33 1 236 1 36 1 175 1 100 1 37 4 38 2 181 2 245 1 106 1 41 1 43 3 109 1 50 2 182 1 255 1 187 1 112 1 119 5 118 4 259 1 60 4 202 1 203 1 

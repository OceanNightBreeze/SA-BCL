#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 260 24 155 228 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V | OPERATOR | 7642 | * -> %
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 15344 | 3 -> 2
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getHeight()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 42 1 2 1 18 1 257 1 
39 1 221 2 52 1 
31 1 42 1 2 1 18 1 257 1 20 1 
206 1 94 1 107 1 204 1 
94 1 71 1 131 2 171 1 151 1 134 2 176 1 141 1 216 1 165 2 107 1 204 1 
94 1 31 2 42 1 207 1 131 3 171 1 151 1 250 1 211 1 6 1 134 1 99 1 8 1 178 2 122 1 86 1 23 1 141 1 165 1 107 1 
94 1 31 2 42 1 207 1 131 3 171 1 151 1 250 1 211 1 6 1 134 1 99 1 178 2 122 1 86 1 23 1 141 1 165 1 107 1 
26 1 94 1 31 1 42 1 131 2 171 1 151 1 134 1 178 1 8 1 85 1 122 1 141 1 162 1 165 1 107 1 204 1 
94 1 31 1 42 1 131 2 58 1 171 1 151 1 134 1 178 1 8 1 85 1 122 1 141 1 162 1 165 1 107 1 204 1 
94 1 31 1 42 1 131 2 171 1 151 1 225 1 134 1 178 1 85 1 122 1 141 1 162 1 127 1 165 1 107 1 186 1 204 1 
94 1 31 1 42 1 131 2 171 1 151 1 225 1 134 1 178 1 8 1 85 1 122 1 141 1 162 1 127 1 165 1 107 1 186 1 204 1 
94 1 74 1 131 3 171 1 151 1 134 1 141 2 165 2 107 1 204 1 
94 1 131 3 193 1 44 1 151 1 134 1 180 2 141 2 107 1 204 1 
94 1 180 1 131 2 193 1 141 1 53 1 151 1 134 2 107 1 204 1 
94 1 131 2 193 1 151 1 45 1 134 1 180 1 141 1 107 1 204 1 
94 1 31 1 207 1 131 3 193 1 151 1 250 1 211 1 6 1 134 1 99 1 82 1 178 1 180 1 23 1 141 1 107 1 204 1 
94 1 31 1 131 3 207 2 193 1 151 1 249 1 134 1 82 1 178 1 180 1 23 1 141 1 107 1 268 1 204 1 
94 1 128 1 180 1 131 2 193 1 141 1 151 1 134 1 107 1 204 1 
69 1 27 1 94 1 31 1 131 3 207 4 193 1 222 1 151 1 134 1 47 1 82 1 178 1 180 1 23 1 141 1 107 1 204 1 
94 1 131 2 193 1 208 1 151 1 134 1 138 1 180 1 141 1 107 1 204 1 
94 1 74 1 131 2 193 1 151 2 134 2 180 1 141 3 107 1 204 1 
94 1 31 1 131 4 207 1 193 1 151 2 134 1 82 1 117 1 178 1 180 2 23 1 141 2 107 1 204 1 268 1 
230 1 12 1 60 3 
60 1 
0 2 131 3 207 3 4 4 5 4 134 3 7 4 213 4 137 1 141 2 66 2 217 1 68 1 73 1 75 1 74 1 18 2 223 1 81 1 150 1 155 1 153 4 157 1 82 1 23 1 87 2 24 1 25 1 88 1 93 2 94 1 28 1 31 2 32 2 169 2 34 2 35 2 174 1 175 2 36 1 179 1 180 1 181 1 37 1 103 1 243 1 244 1 184 1 189 1 42 1 193 1 43 1 44 1 249 2 45 2 115 4 197 4 118 2 198 1 120 3 122 1 260 1 202 4 264 8 126 1 266 1 203 4 268 1 267 1 
131 4 130 4 4 6 5 3 134 3 133 2 135 2 137 1 141 2 11 4 142 2 144 4 16 2 18 2 17 4 150 1 153 4 155 1 156 2 157 1 23 1 160 2 25 1 24 1 163 2 28 1 167 2 31 2 168 2 32 4 34 4 36 1 180 1 181 1 37 1 184 1 182 2 183 2 187 2 190 2 42 1 191 1 193 1 43 1 44 1 195 1 196 2 45 2 48 2 199 2 50 1 51 3 200 2 202 4 203 3 56 2 207 2 210 1 212 2 63 1 64 1 66 2 217 1 68 1 218 2 70 2 73 1 74 1 81 1 82 1 227 2 83 2 88 1 232 2 94 1 235 2 97 2 101 2 242 1 244 1 105 2 112 2 247 2 249 1 115 4 116 1 122 1 260 1 123 2 126 1 264 14 266 1 267 1 268 1 
56 2 130 4 131 3 207 2 4 6 5 3 133 2 134 3 212 2 135 2 137 1 64 1 141 2 66 2 217 1 11 4 142 2 68 1 144 4 16 2 70 2 73 1 74 1 17 4 18 2 81 1 150 1 155 1 153 4 157 1 156 2 82 1 83 2 227 2 160 2 23 1 24 1 25 1 163 2 88 1 232 2 167 2 94 1 28 1 235 2 31 2 168 2 32 4 97 2 34 4 100 1 174 1 36 1 101 2 180 1 242 1 181 1 37 1 244 1 183 2 182 2 184 1 105 2 187 2 190 2 42 1 112 2 191 1 193 1 247 2 43 1 44 1 195 1 196 2 249 1 45 2 115 4 48 2 199 2 122 1 200 2 123 2 260 1 202 4 126 1 264 4 266 1 203 3 268 1 267 1 
205 1 56 3 207 2 130 5 131 3 4 6 5 3 133 3 134 3 212 3 137 1 66 2 141 2 217 1 11 3 142 2 68 1 144 4 143 1 13 1 16 3 70 2 73 1 74 1 18 2 17 5 81 1 150 1 224 2 155 1 153 4 156 2 157 1 82 1 227 2 160 2 23 1 24 1 25 1 163 2 88 1 232 2 94 1 167 2 28 1 29 1 235 2 31 2 32 4 97 3 34 4 36 1 101 2 180 1 181 1 37 1 244 1 182 2 184 1 105 2 108 1 190 3 42 1 191 1 193 1 247 2 43 1 44 1 196 2 249 1 45 2 115 4 48 3 199 3 201 1 122 1 200 2 123 2 260 1 202 4 264 4 126 1 266 1 203 3 268 1 267 1 
56 3 207 2 130 5 131 4 4 6 5 3 133 3 134 5 212 3 137 1 64 1 66 2 141 4 217 1 11 3 142 2 68 1 144 4 143 1 13 1 16 3 70 2 73 1 74 1 18 2 17 5 81 1 150 1 224 2 155 1 153 4 156 2 157 1 82 1 227 2 160 2 23 1 161 1 24 1 25 1 163 3 88 1 232 2 94 1 167 3 28 1 235 2 31 2 32 4 97 3 34 4 174 1 176 1 36 1 101 2 180 2 181 1 37 1 244 1 182 2 184 1 105 3 108 1 190 3 42 1 191 1 193 1 247 2 43 1 44 1 195 1 196 2 249 1 45 2 115 4 48 3 117 1 199 3 122 1 200 2 123 2 260 1 202 4 264 4 126 1 266 1 203 3 268 1 267 1 
56 3 207 2 130 5 131 3 4 6 5 3 133 3 134 3 212 3 137 1 64 1 66 2 141 2 217 1 11 3 142 2 68 1 144 4 143 1 13 1 16 3 70 2 73 1 74 1 18 2 17 5 81 1 150 1 224 2 155 1 153 4 156 2 157 1 82 1 227 2 160 2 23 1 161 1 24 1 25 1 163 2 88 1 232 2 94 1 167 2 28 1 235 2 31 2 32 4 97 3 34 4 174 1 36 1 101 2 180 1 181 1 37 1 244 1 182 2 184 1 105 2 108 1 190 3 42 1 191 1 193 1 247 2 43 1 44 1 195 1 196 2 249 1 45 2 115 4 48 3 199 3 122 1 200 2 123 2 260 1 202 4 264 4 126 1 266 1 203 3 268 1 267 1 
260 1 25 1 24 1 43 1 44 1 202 4 88 1 184 1 126 1 153 4 155 1 266 1 
24 1 202 1 184 1 153 1 155 1 
56 3 207 2 130 5 131 3 4 6 5 3 133 3 134 3 212 3 137 1 64 1 66 2 141 2 217 1 11 3 142 2 68 1 144 4 143 1 13 1 16 3 70 2 73 1 74 1 18 2 17 5 81 1 150 1 224 2 155 1 153 4 156 2 157 1 82 1 227 2 160 2 23 1 161 1 24 1 25 1 163 2 88 1 232 2 94 1 167 2 28 1 29 1 235 2 31 2 32 4 97 3 34 4 36 1 101 2 180 1 181 1 37 1 244 1 182 2 184 1 105 2 108 1 190 3 42 1 191 1 193 1 247 2 44 1 195 1 196 2 249 1 45 2 115 4 48 3 199 3 201 1 122 1 200 2 123 2 260 1 202 4 264 4 126 1 266 1 203 3 268 1 267 1 
56 3 207 2 130 5 131 3 4 6 5 3 133 3 134 3 212 3 137 1 9 1 64 1 66 2 141 2 217 1 11 3 142 2 68 1 144 4 143 1 13 1 16 3 70 2 73 1 74 1 18 2 17 5 81 1 150 1 224 2 153 4 156 2 157 1 82 1 227 2 160 2 23 1 161 1 24 1 25 1 163 2 88 1 232 2 94 1 167 2 28 1 29 1 235 2 31 2 32 4 97 3 34 4 36 1 101 2 180 1 181 1 37 1 244 1 182 2 184 1 105 2 108 1 190 3 42 1 191 1 193 1 247 2 44 1 195 1 196 2 249 1 45 2 115 4 48 3 199 3 201 1 122 1 200 2 123 2 260 1 202 4 264 4 126 1 266 1 203 3 268 1 267 1 
131 20 130 9 3 1 4 6 5 3 134 11 133 7 135 2 137 1 140 1 141 11 11 9 142 2 13 5 143 5 144 4 16 7 17 9 18 2 148 1 149 1 150 1 153 4 155 1 152 1 157 1 156 2 23 1 160 2 25 1 24 1 163 10 167 10 28 1 29 1 31 3 168 2 32 6 34 6 36 1 180 10 181 1 37 1 183 2 184 1 182 2 187 2 40 1 190 7 42 2 191 9 193 9 43 1 44 1 195 1 196 2 45 2 48 7 199 7 201 1 200 2 202 4 203 3 56 7 207 2 209 1 59 1 212 7 64 1 66 2 217 1 215 1 68 1 70 2 73 10 74 1 81 1 80 1 224 2 82 1 83 2 227 2 228 1 229 1 88 1 232 2 234 1 94 10 235 2 97 7 240 1 101 2 242 1 244 1 105 10 108 5 245 1 112 2 247 2 249 1 115 4 253 1 122 1 260 1 123 2 124 1 262 1 125 1 126 1 264 7 266 1 268 1 267 1 
131 3 130 4 4 6 5 3 134 3 133 2 135 2 10 2 137 1 141 2 11 4 142 2 144 4 15 2 16 2 18 2 17 4 147 1 150 1 153 4 155 1 156 2 157 1 23 1 160 2 25 1 24 1 163 2 164 1 165 1 166 2 28 1 167 2 31 2 168 2 32 4 171 1 34 4 174 1 36 1 181 1 37 1 184 1 182 2 183 2 187 2 190 2 42 1 191 1 192 1 43 1 195 1 196 2 45 2 48 2 199 2 200 2 202 4 54 2 203 3 56 2 207 2 212 2 61 1 64 1 66 2 217 1 68 1 67 1 70 2 73 1 74 1 76 2 77 1 81 1 226 1 227 2 83 2 86 1 88 1 89 1 232 2 94 1 235 2 97 2 100 1 101 2 242 1 244 1 105 2 112 2 247 2 248 1 249 1 115 4 121 1 122 1 260 1 123 2 264 4 126 1 266 1 267 1 268 1 
90 1 
131 3 130 5 4 6 5 3 134 4 133 3 137 1 141 2 11 3 142 2 13 1 143 1 144 4 16 3 17 5 18 2 149 1 150 1 153 4 155 1 157 1 156 2 23 1 160 2 25 1 24 1 161 1 163 2 28 1 167 2 29 1 31 2 32 4 34 4 174 1 176 1 36 1 180 1 181 1 37 1 184 1 182 2 190 3 42 1 191 1 193 1 43 1 44 1 195 1 196 2 45 2 48 3 199 3 200 2 201 1 202 4 203 3 56 3 207 3 212 3 64 1 66 2 217 1 68 1 70 2 73 1 74 1 81 1 224 2 82 1 227 2 88 1 232 2 94 1 235 2 97 3 101 2 244 1 105 2 108 1 247 2 249 2 115 4 122 1 260 1 123 2 126 1 264 4 266 1 267 1 268 1 
1 1 210 1 264 1 
31 1 42 1 4 1 264 1 14 1 203 1 
111 1 31 1 42 1 85 1 4 1 162 1 264 1 
38 1 111 1 31 1 30 1 42 1 41 1 4 1 85 1 162 1 264 1 186 1 203 1 
49 1 264 1 
49 1 264 1 
65 1 264 1 
139 1 264 1 
49 1 264 1 
139 1 264 1 
139 1 264 1 
197 1 102 1 194 1 264 1 
213 1 231 1 264 1 
94 1 73 1 219 1 131 2 169 1 193 1 78 1 98 1 134 1 46 2 115 2 241 1 180 1 49 1 141 1 264 2 188 1 
119 1 
206 1 94 1 73 1 219 1 131 2 169 1 193 1 78 1 98 1 134 1 241 1 180 1 141 1 
94 1 167 2 73 1 191 1 131 3 19 1 171 1 134 1 141 1 163 2 165 2 105 2 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 21 2 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
94 1 167 1 73 1 191 1 131 2 19 1 171 1 134 1 141 1 261 1 163 1 165 1 105 1 
94 1 167 2 73 1 191 1 131 3 19 1 171 1 134 1 141 1 163 2 165 2 105 2 
56 2 207 1 131 3 130 4 4 6 5 3 134 2 133 2 61 1 212 2 137 1 10 2 66 2 141 1 217 1 11 2 67 1 68 1 142 2 144 4 15 2 16 2 70 2 73 1 76 2 77 1 18 2 17 4 147 1 156 2 226 1 227 2 86 1 23 1 160 2 163 1 164 1 89 1 165 1 232 2 166 2 94 1 167 1 235 2 31 2 168 2 32 4 97 2 171 1 34 4 176 1 101 2 181 1 182 2 105 1 190 2 42 1 191 1 192 1 247 2 248 1 249 1 196 2 45 2 115 4 48 2 121 1 199 2 122 1 200 2 123 2 264 4 54 2 203 3 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 21 2 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 21 2 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 65 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 149 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 2 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
56 1 130 2 131 3 58 1 4 2 210 3 134 4 133 1 212 1 66 1 141 2 217 1 11 1 142 1 144 2 16 1 70 1 73 1 17 2 19 1 154 1 225 2 227 1 22 1 85 1 160 1 162 1 163 2 165 2 232 1 28 1 94 1 167 2 235 1 31 1 30 2 236 1 97 1 171 1 176 1 101 1 181 1 183 1 182 1 105 2 186 3 38 2 111 1 190 1 42 1 41 2 191 1 196 1 45 1 115 2 48 1 117 1 199 1 255 1 200 1 122 1 123 1 264 3 203 2 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 183 1 182 1 142 1 105 1 144 3 187 1 16 1 70 1 73 1 190 1 17 2 191 1 19 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
56 1 207 1 131 3 130 2 4 3 5 3 134 1 133 1 212 1 137 1 10 1 66 1 141 1 11 1 68 1 142 1 144 2 15 1 16 1 70 1 73 1 76 1 18 1 17 2 147 1 156 1 227 1 86 1 23 1 160 1 163 1 165 1 232 1 166 1 94 1 167 1 235 1 31 1 168 1 32 2 97 1 171 1 34 2 101 1 182 1 105 1 190 1 191 1 247 1 249 1 196 1 45 1 115 2 48 1 199 1 200 1 123 1 264 2 54 1 
15 1 94 1 167 1 73 1 191 1 131 2 19 1 171 1 134 1 141 1 163 1 165 1 105 1 
56 1 207 1 131 1 130 2 4 3 5 3 133 1 212 1 135 1 137 1 10 1 66 1 11 2 68 1 142 1 144 2 15 1 16 1 70 1 76 1 18 1 17 2 147 1 156 1 82 1 227 1 83 1 23 1 160 1 232 1 166 1 235 1 31 1 168 1 32 2 97 1 34 2 101 1 182 1 183 1 187 1 190 1 112 1 247 1 44 1 196 1 249 1 45 1 115 2 48 1 199 1 200 1 123 1 264 2 54 1 
56 1 207 1 131 3 130 2 4 3 5 3 134 1 133 1 212 1 137 1 10 1 66 1 141 1 11 1 68 1 142 1 144 2 15 1 16 1 70 1 73 1 76 1 18 1 17 2 147 1 149 1 156 1 227 1 86 1 23 1 160 1 163 1 165 1 232 1 166 1 94 1 167 1 235 1 31 1 168 1 32 2 97 1 171 1 34 2 101 1 182 1 105 1 190 1 191 1 247 1 249 1 196 1 45 1 115 2 48 1 199 1 200 1 123 1 264 2 54 1 
56 1 207 1 131 3 130 2 4 3 5 3 134 1 133 1 212 1 137 1 10 1 66 1 141 1 11 1 68 1 142 1 144 2 15 1 16 1 70 1 73 1 76 1 18 1 17 2 147 1 149 1 156 1 82 1 227 1 23 1 160 1 163 1 232 1 166 1 94 1 167 1 235 1 31 1 168 1 32 2 97 1 34 2 101 1 180 1 182 1 105 1 190 1 191 1 193 1 247 1 44 1 249 1 196 1 45 1 115 2 48 1 199 1 200 1 123 1 264 2 54 1 
167 1 94 1 235 1 56 1 131 2 130 2 97 1 171 1 133 1 134 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 105 1 144 2 187 1 16 1 70 1 190 1 73 1 112 1 17 2 191 1 19 1 115 2 48 1 83 1 227 1 199 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 144 3 105 1 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 144 3 105 1 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 144 3 105 1 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 183 1 182 1 142 1 144 2 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 2 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 144 3 105 1 16 1 70 1 73 1 190 1 17 2 191 1 247 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
109 1 168 1 32 1 34 1 264 1 
109 1 156 1 32 1 34 1 264 1 
220 1 254 1 168 1 32 1 34 1 264 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
56 1 131 2 130 2 4 3 133 1 134 2 212 1 135 1 66 1 141 1 217 1 11 2 142 1 144 2 16 1 70 1 73 1 17 2 18 1 19 1 225 1 156 1 83 1 227 1 85 1 160 1 162 1 163 1 165 1 232 1 28 1 94 1 167 1 235 1 31 1 30 3 168 1 32 2 97 1 171 1 34 2 101 1 181 1 183 1 182 1 105 1 186 4 187 1 38 3 111 1 190 1 42 1 41 3 112 1 191 1 247 1 196 1 45 1 115 2 48 1 199 1 200 1 122 1 123 1 264 2 203 3 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 247 1 149 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 247 1 115 3 21 2 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 115 3 21 2 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 135 1 101 1 141 1 11 2 183 1 182 1 142 1 144 3 105 1 187 1 16 1 70 1 73 1 190 1 112 1 17 2 191 1 19 1 115 3 48 1 83 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 235 1 56 1 130 2 131 2 97 1 171 1 134 1 133 1 212 1 101 1 141 1 11 1 182 1 142 1 105 1 144 3 16 1 70 1 73 1 190 1 17 2 191 1 115 3 48 1 227 1 199 1 49 1 200 1 160 1 163 1 165 1 232 1 
167 1 94 1 73 1 131 2 191 1 141 1 171 1 163 1 165 1 134 1 105 1 
26 1 28 1 94 1 30 2 31 1 57 1 207 1 131 2 169 1 33 1 170 1 4 2 171 1 210 3 6 1 211 1 134 2 173 1 99 1 181 1 141 1 66 1 217 1 186 3 38 2 73 1 41 2 42 1 250 1 196 1 45 1 225 1 114 1 85 1 122 1 123 1 162 1 264 4 165 1 233 1 203 2 
166 1 94 1 30 2 31 1 57 1 131 2 169 1 33 1 208 1 170 1 96 1 4 2 171 1 210 3 134 1 173 1 10 1 138 1 214 1 181 1 141 1 66 1 217 1 186 3 38 2 73 1 76 1 41 2 42 1 79 1 196 1 45 1 225 1 114 1 158 1 85 1 123 1 162 1 164 1 264 4 165 1 54 1 233 1 203 2 
94 1 167 1 235 1 56 3 130 4 131 2 97 3 171 1 134 1 133 3 212 3 101 1 141 1 11 3 182 1 142 1 144 2 143 2 13 1 105 1 108 1 16 3 70 1 190 3 73 1 17 4 191 1 221 1 247 1 149 1 115 2 48 3 227 1 199 3 200 1 160 1 163 1 165 1 232 1 
94 1 167 1 56 1 130 1 131 2 32 1 97 1 171 1 34 1 134 1 133 1 212 1 141 1 11 1 143 1 13 1 105 1 108 1 145 1 109 1 16 1 190 1 73 1 17 1 191 1 224 1 48 1 199 1 49 1 163 1 264 1 165 1 
94 1 167 1 56 1 130 1 131 2 97 1 171 1 134 1 133 1 212 1 141 1 11 1 143 1 13 1 105 1 108 1 16 1 190 1 73 1 17 1 191 1 48 1 199 1 163 1 165 1 
94 1 167 1 56 3 130 3 131 2 97 3 171 1 134 1 133 3 212 3 141 1 11 3 143 3 13 1 105 1 108 1 16 3 190 3 73 1 17 3 191 1 251 1 48 3 199 3 163 1 165 1 
94 1 167 1 128 1 56 1 130 1 131 2 97 1 171 1 134 1 133 1 212 1 141 1 11 1 143 1 13 1 105 1 108 1 16 1 190 1 73 1 17 1 191 1 48 1 199 1 163 1 165 1 
94 1 167 1 73 1 128 1 191 1 131 2 171 1 134 1 141 1 163 1 165 1 13 1 143 1 105 1 
62 1 131 1 238 1 92 1 
177 1 131 1 92 1 
71 1 131 1 256 2 172 1 
113 1 71 1 84 1 131 1 172 1 
129 1 92 1 
38 1 30 1 41 1 225 1 186 1 203 1 
38 1 111 1 30 1 41 1 225 1 186 1 203 1 
10 1 31 1 76 1 42 1 132 1 164 1 54 1 
31 1 42 1 181 1 217 1 
115 1 130 2 199 1 221 1 200 1 259 1 144 1 
130 1 199 1 
115 1 130 1 49 1 200 1 264 1 144 1 
130 1 199 1 
115 1 49 1 264 1 144 1 
193 1 
180 1 
180 1 
165 1 
171 1 
165 1 
94 1 73 1 128 1 131 2 95 1 169 1 193 1 134 1 252 1 136 1 180 1 141 1 265 1 185 1 91 1 
94 2 73 2 131 4 95 2 169 2 246 1 193 2 134 2 252 2 136 2 180 2 141 2 104 1 265 2 185 2 91 2 
94 1 73 1 131 2 95 1 169 1 193 1 134 1 115 2 213 1 252 1 136 1 180 1 49 1 258 2 141 1 264 1 265 1 185 1 106 1 91 1 
263 1 
94 1 73 1 131 2 95 1 169 1 193 1 134 1 252 1 136 1 180 1 141 1 104 1 265 1 185 1 91 1 
166 1 94 1 31 1 55 1 95 1 131 3 207 1 169 1 4 2 5 2 210 2 134 2 176 1 136 1 137 1 10 1 180 1 141 1 66 1 104 1 68 1 185 1 106 1 110 1 72 1 73 1 76 1 147 1 193 1 196 1 249 1 45 1 115 1 252 1 82 1 258 1 23 1 123 1 263 1 264 2 265 1 54 1 91 1 
206 1 94 1 73 1 239 1 91 1 
94 1 28 1 30 3 31 1 55 1 95 1 131 2 169 1 4 2 210 2 134 3 176 1 213 1 136 1 180 1 181 1 141 1 66 1 217 1 185 1 106 1 186 4 38 3 110 1 111 1 73 1 41 3 42 1 193 1 196 1 45 1 225 1 115 1 197 1 252 1 85 1 258 1 122 1 123 1 162 1 263 1 264 3 265 1 91 1 203 3 
55 1 49 1 210 2 264 2 
110 1 49 1 210 2 264 2 
94 1 73 1 131 2 95 1 169 1 193 1 134 1 115 1 213 2 252 1 136 1 180 1 49 1 258 1 141 1 264 3 265 1 185 1 106 1 91 1 
94 1 73 1 131 2 95 1 169 1 246 1 193 1 134 1 252 1 136 1 180 1 141 1 265 1 185 1 91 1 
206 1 94 2 73 2 131 4 95 2 169 2 246 1 193 2 239 1 134 2 252 2 136 2 180 2 141 2 265 2 185 2 91 2 
206 1 94 1 73 1 131 2 95 1 169 1 193 1 239 1 134 1 252 1 136 1 180 1 141 1 265 1 185 1 91 1 
189 1 0 1 94 1 73 1 75 1 131 2 169 1 193 1 223 1 134 1 7 2 115 2 213 1 120 1 180 1 49 1 102 1 103 1 141 1 264 2 
49 1 35 1 
49 1 87 1 
189 1 93 1 94 1 73 1 75 1 131 2 32 1 169 1 193 1 34 1 223 1 134 1 7 1 115 1 175 1 213 1 118 1 120 2 180 1 103 1 141 1 264 2 
7 1 115 1 175 1 93 1 120 1 221 1 
0 1 94 1 28 1 30 2 31 1 131 2 169 1 4 1 35 1 134 3 7 1 176 1 213 1 180 1 181 1 103 1 141 1 66 1 217 1 186 3 38 2 189 1 111 1 73 1 41 2 75 1 42 1 193 1 223 1 45 1 225 1 115 1 197 1 118 1 120 1 85 1 122 1 87 1 162 1 264 1 203 2 
94 1 93 1 131 2 169 1 32 1 34 1 134 1 7 1 175 1 213 1 180 1 103 1 141 1 189 1 73 1 75 1 193 1 221 1 223 1 115 1 118 1 120 2 52 1 231 1 264 2 
118 1 
166 1 93 1 0 1 94 1 31 1 131 3 207 1 32 1 169 1 237 1 4 2 34 1 5 4 35 1 134 2 7 2 176 1 175 1 213 2 137 1 10 1 180 1 103 1 141 1 66 1 68 1 189 1 73 1 76 1 75 1 18 1 147 1 193 1 223 1 249 1 45 1 115 2 197 2 82 1 118 1 120 2 23 1 87 1 264 3 54 1 
189 1 206 1 120 1 75 1 103 1 223 1 
93 1 0 1 94 1 28 1 30 4 31 1 131 2 32 1 169 1 4 2 34 1 35 1 134 3 7 2 175 1 176 1 213 2 180 1 181 1 103 1 141 1 66 1 217 1 186 5 38 4 189 1 111 1 73 1 41 4 75 1 42 1 18 1 193 1 223 1 45 1 225 1 115 2 197 2 118 1 120 2 85 1 122 1 87 1 162 1 264 3 203 4 
189 1 206 1 120 1 75 1 103 1 223 1 
94 1 0 1 131 2 169 1 237 1 134 1 7 2 213 1 180 1 103 1 102 1 141 1 73 1 146 1 75 1 193 1 115 2 120 1 159 1 49 1 264 2 

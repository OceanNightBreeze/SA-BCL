#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 65 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 65 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 65 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 139 218 65 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 55 45 106 233 142 187 220 140 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 65 16 138 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 65 16 5 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 65 16 138 171 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.NullPointerException 55 45 106 233 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V ERROR java.lang.NullPointerException 139 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.NullPointerException 139 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.NullPointerException 139 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 139 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V ERROR java.lang.NullPointerException 139 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | ASSIGN | 11672 | = null
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout; | RETURN | 275 | return null
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
215 1 84 1 6 1 164 1 62 1 228 1 
215 1 84 1 6 1 62 1 228 1 
23 2 209 1 210 1 
122 1 203 2 206 1 103 1 152 1 153 1 234 2 74 2 22 2 117 1 222 3 
122 1 203 1 206 1 162 1 103 1 192 1 56 1 153 1 215 1 234 2 14 1 74 4 22 2 113 1 222 2 238 1 
122 1 203 1 206 1 103 1 207 1 192 1 56 1 153 1 111 1 215 1 234 1 92 1 14 1 74 3 22 1 114 1 222 1 238 1 
122 1 203 1 206 1 103 1 69 1 192 2 56 1 153 1 215 1 234 1 14 1 74 3 22 1 113 1 222 1 238 1 
153 1 206 1 103 1 7 1 
122 1 203 2 147 1 206 1 103 1 153 1 170 1 234 1 74 2 22 1 222 1 
122 1 203 1 206 1 84 1 207 1 192 1 56 1 153 1 233 1 111 1 214 1 215 2 234 1 92 1 14 2 74 3 22 1 114 1 222 1 238 1 
122 1 203 1 206 1 84 1 207 1 192 1 56 1 153 1 233 1 111 1 215 2 234 1 92 1 14 2 74 3 22 1 114 1 222 1 238 1 
122 1 203 1 101 1 206 1 84 1 103 1 85 1 183 1 153 1 233 1 215 1 234 1 214 1 14 1 74 2 22 1 222 1 
122 1 203 1 101 1 206 1 84 1 103 1 183 1 153 1 233 1 215 1 234 1 214 1 14 1 74 2 22 1 118 1 222 1 
122 1 203 1 123 1 101 1 206 1 84 1 103 1 183 1 153 1 233 1 215 1 234 1 13 1 14 1 74 2 22 1 198 1 222 1 
122 1 203 1 123 1 101 1 206 1 84 1 103 1 183 1 153 1 233 1 215 1 214 1 234 1 13 1 14 1 74 2 22 1 198 1 222 1 
203 1 122 1 153 1 206 1 234 1 103 1 22 2 74 3 117 1 222 2 
0 2 203 1 206 1 103 1 134 1 153 1 234 1 74 3 222 2 63 1 
203 2 0 1 153 1 206 1 234 1 103 1 74 2 134 1 96 1 222 1 
203 1 0 1 153 1 206 1 234 1 103 1 74 2 134 1 222 1 71 1 
203 1 0 1 153 1 206 1 234 1 103 1 74 2 134 1 143 1 222 1 
39 1 0 1 203 1 206 1 103 1 134 1 168 1 192 4 10 1 72 1 153 1 215 1 234 1 14 1 195 1 74 3 222 1 238 1 
203 1 0 1 153 1 206 1 234 1 103 1 74 2 134 1 175 1 222 1 127 1 
25 1 27 1 166 3 
166 1 
217 1 
83 1 149 1 125 1 87 1 150 1 182 1 89 1 184 1 216 3 35 1 57 4 155 1 36 1 58 1 157 1 17 1 63 1 16 1 65 1 226 1 138 1 139 1 108 1 231 1 169 4 141 1 115 1 177 2 78 1 236 1 145 10 201 1 
83 1 149 1 87 1 150 1 89 1 182 1 184 1 57 4 155 1 35 1 36 1 58 1 63 1 16 1 17 1 65 1 138 1 139 1 108 1 231 1 169 4 115 1 78 1 236 1 201 1 
83 1 149 1 87 1 150 1 89 1 182 1 184 1 57 4 155 1 35 1 36 1 58 1 63 1 16 1 17 1 65 1 138 1 139 1 108 1 231 1 169 4 115 1 78 1 236 1 201 1 
65 1 169 4 184 1 57 4 36 1 138 1 89 1 78 1 63 1 16 1 108 1 231 1 
0 1 1 1 179 2 4 4 53 4 180 2 181 1 126 2 54 3 9 1 184 1 57 4 185 4 187 1 61 2 62 2 131 1 16 1 63 1 65 1 67 1 134 1 69 2 138 1 21 4 71 2 192 3 140 1 74 3 142 1 195 1 76 1 196 1 77 4 199 1 78 1 145 8 79 1 80 2 203 3 82 2 84 1 208 1 89 1 153 1 154 1 215 2 36 1 220 1 95 1 38 1 222 2 37 2 100 4 41 1 106 2 165 1 227 2 108 1 46 4 230 2 231 1 169 4 233 1 110 1 112 1 113 1 117 1 238 1 
0 1 1 1 51 2 124 4 181 1 180 4 182 2 126 4 11 2 184 1 57 4 185 6 58 1 187 1 59 1 62 2 131 1 17 4 16 1 63 1 65 1 19 2 134 1 69 1 135 2 138 1 192 2 71 2 140 1 194 2 74 4 142 1 195 1 76 1 77 3 78 1 145 4 79 1 201 4 146 2 26 4 203 3 205 2 148 2 83 2 84 1 28 2 149 1 150 2 89 1 90 2 153 1 154 1 213 2 215 2 35 2 34 2 94 2 36 1 156 2 219 2 220 1 95 1 223 2 222 2 100 4 161 2 163 2 106 2 165 1 107 2 108 1 46 3 231 1 232 2 169 4 233 1 173 2 47 2 112 1 113 1 115 2 235 2 174 1 117 1 119 2 50 2 238 1 
0 1 1 1 51 2 124 4 181 1 180 4 182 2 126 4 9 1 11 2 184 1 57 4 185 6 58 1 187 1 59 1 62 2 131 1 17 4 16 1 63 1 65 1 19 2 134 1 69 1 135 2 138 1 192 2 71 2 140 1 194 2 74 3 142 1 195 1 76 1 77 3 78 1 145 4 79 1 201 4 146 2 26 4 203 3 205 2 148 2 83 2 84 1 28 2 149 1 150 2 89 1 90 2 153 1 154 1 213 2 215 2 35 2 34 2 94 2 36 1 156 2 219 2 220 1 95 1 223 2 222 2 100 4 161 2 163 2 106 2 43 1 165 1 107 2 108 1 46 3 231 1 232 2 169 4 233 1 173 2 47 2 112 1 113 1 115 2 235 2 174 1 117 1 119 2 50 2 238 1 
65 1 83 1 87 1 138 1 150 1 182 1 89 1 139 1 108 1 231 1 169 4 184 1 35 1 155 1 57 4 115 1 36 1 218 1 78 1 17 1 16 1 63 1 201 1 
122 1 1 1 51 2 124 4 181 1 180 4 182 2 126 4 55 1 11 2 56 1 184 1 57 4 185 6 58 1 187 1 59 1 62 2 131 1 17 4 16 1 65 1 19 2 189 2 69 1 135 2 138 1 192 2 71 2 140 1 194 2 22 1 74 3 142 1 77 3 78 1 145 4 201 4 146 2 26 4 203 3 205 2 148 2 83 2 84 1 28 2 149 1 29 1 150 2 89 1 90 2 153 1 154 1 213 2 215 2 35 2 34 2 94 2 36 1 156 2 219 2 220 1 95 1 223 2 222 2 100 4 161 2 163 2 105 2 106 2 165 1 107 2 108 1 45 2 46 3 231 1 232 2 169 4 233 1 173 2 47 2 112 1 113 1 115 2 235 2 174 1 117 1 119 2 50 2 238 1 
169 1 184 1 57 1 138 1 16 1 
65 1 83 1 149 1 87 1 138 1 150 1 182 1 89 1 139 1 231 1 169 4 184 1 35 1 155 1 57 4 115 1 36 1 58 1 236 1 78 1 17 1 16 1 63 1 201 1 
65 1 83 1 5 1 149 1 87 1 150 1 182 1 89 1 139 1 231 1 169 4 184 1 35 1 155 1 57 4 115 1 36 1 58 1 236 1 78 1 17 1 16 1 63 1 201 1 
83 1 149 1 87 1 150 1 89 1 182 1 184 1 57 4 155 1 35 1 36 1 58 1 63 1 16 1 17 1 65 1 138 1 139 1 108 1 231 1 169 4 171 1 172 1 115 1 78 1 201 1 
109 1 226 1 145 1 
212 1 145 1 
40 1 145 1 
123 1 101 1 84 1 167 1 183 1 215 1 185 1 186 1 197 1 77 1 116 1 145 1 
215 1 84 1 185 1 77 1 151 1 145 1 
101 1 215 1 84 1 197 1 185 1 145 1 183 1 
40 1 145 1 
31 1 145 1 
40 1 145 1 
212 1 145 1 
212 1 145 1 
4 1 8 1 60 1 145 1 
15 1 53 1 145 1 
204 1 0 1 80 1 203 1 40 1 188 1 134 1 153 1 33 2 74 2 130 1 200 1 95 1 97 1 222 1 145 2 100 2 
104 1 
0 1 80 1 203 1 188 1 7 1 134 1 153 1 74 2 130 1 200 1 95 1 97 1 222 1 
203 1 122 1 153 1 47 1 22 1 74 2 219 1 59 1 95 1 222 1 11 1 
122 1 203 1 86 1 11 2 153 1 74 3 22 2 47 2 59 1 219 2 95 1 222 1 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
122 1 203 1 86 1 11 2 153 1 74 3 22 2 47 2 59 1 219 2 95 1 222 1 
122 1 1 1 51 2 124 4 180 4 126 4 182 2 55 1 11 1 56 1 185 6 59 1 62 2 17 2 19 2 189 2 69 1 135 2 192 1 71 2 74 3 22 1 194 2 77 3 145 4 201 4 146 2 203 2 26 4 205 2 148 2 83 2 84 1 28 2 29 1 150 2 90 2 153 1 154 1 215 2 213 2 34 2 35 2 94 2 219 1 95 1 223 2 222 1 100 4 161 2 105 2 106 2 165 1 45 2 46 3 233 1 170 1 47 1 235 2 115 2 119 2 50 2 238 1 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 52 2 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 52 2 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
122 1 203 1 86 1 32 1 11 1 153 1 74 2 22 1 47 1 59 1 219 1 95 1 222 1 
146 1 203 1 122 1 26 3 148 1 51 1 52 2 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 73 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
122 1 123 3 2 1 51 1 124 2 182 1 183 1 12 1 11 2 185 2 186 2 59 1 17 1 19 1 136 1 135 1 71 1 74 3 22 2 194 1 197 1 198 2 77 2 145 3 79 1 201 2 146 1 203 4 26 2 148 1 83 1 84 1 28 1 86 1 150 1 90 1 153 1 213 1 215 1 35 1 94 1 219 2 95 1 223 1 222 2 100 2 101 1 161 1 162 1 226 3 42 1 106 1 165 1 107 1 167 2 233 1 170 1 112 1 47 2 235 1 115 1 116 2 118 1 50 1 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 107 1 232 1 47 1 22 1 74 2 194 1 115 1 201 2 
122 1 1 1 51 1 124 2 180 2 126 2 182 1 11 1 56 1 185 3 59 1 62 1 17 1 19 1 189 1 69 1 135 1 71 1 192 1 74 3 22 1 194 1 145 2 201 2 146 1 203 1 26 2 205 1 148 1 83 1 28 1 29 1 150 1 90 1 153 1 154 1 215 1 213 1 34 1 35 1 94 1 219 1 95 1 222 1 223 1 100 2 161 1 105 1 106 1 45 1 46 3 47 1 235 1 115 1 119 1 50 1 238 1 
122 1 203 1 105 1 86 1 11 1 153 1 74 2 22 1 47 1 59 1 219 1 95 1 222 1 
1 1 51 1 124 2 180 2 126 2 182 1 185 3 62 1 17 2 63 1 19 1 189 1 69 1 135 1 71 1 192 1 74 1 195 1 194 1 145 2 201 2 26 2 146 1 205 1 148 1 83 1 28 1 29 1 150 1 90 1 154 1 215 1 213 1 34 1 35 1 94 1 156 1 223 1 100 2 161 1 163 1 105 1 106 1 107 1 45 1 46 3 232 1 173 1 235 1 115 1 119 1 50 1 238 1 
122 1 1 1 51 1 124 2 180 2 126 2 182 1 11 1 56 1 185 3 59 1 62 1 17 1 19 1 189 1 69 1 135 1 71 1 192 1 73 1 74 3 22 1 194 1 145 2 201 2 146 1 203 1 26 2 205 1 148 1 83 1 28 1 29 1 150 1 90 1 153 1 154 1 215 1 213 1 34 1 35 1 94 1 219 1 95 1 223 1 222 1 100 2 161 1 105 1 106 1 45 1 46 3 47 1 235 1 115 1 119 1 50 1 238 1 
0 1 1 1 51 1 124 2 180 2 126 2 182 1 11 1 185 3 59 1 62 1 63 1 17 1 19 1 189 1 69 1 134 1 135 1 192 1 71 1 73 1 195 1 74 3 194 1 145 2 201 2 146 1 203 1 26 2 205 1 148 1 83 1 28 1 29 1 150 1 90 1 153 1 154 1 215 1 213 1 34 1 35 1 94 1 219 1 95 1 223 1 222 1 100 2 161 1 105 1 106 1 45 1 46 3 47 1 235 1 115 1 119 1 50 1 238 1 
146 1 203 1 122 1 26 2 148 1 51 1 83 1 28 1 124 2 86 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 2 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 26 2 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 2 40 1 161 1 19 1 135 1 107 1 232 1 194 1 47 1 22 1 74 2 173 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
205 1 180 1 137 1 126 1 145 1 
34 1 180 1 137 1 126 1 145 1 
205 1 93 1 180 1 126 1 145 1 99 1 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
122 1 123 4 51 1 124 2 180 2 182 1 126 2 183 1 11 1 185 3 186 3 59 1 62 1 17 2 19 1 135 1 71 1 74 2 22 1 194 1 197 1 198 1 77 3 145 2 79 1 201 2 146 1 203 2 26 2 205 1 148 1 83 1 84 1 28 1 86 1 150 1 90 1 153 1 215 1 213 1 35 1 34 1 94 1 156 1 219 1 95 1 223 1 222 1 100 2 101 1 161 1 163 1 106 1 107 1 165 1 167 3 232 1 233 1 112 1 47 1 173 1 115 1 235 1 116 3 119 1 50 1 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 73 1 47 1 22 1 74 2 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 52 2 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 119 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 52 2 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 201 2 
146 1 26 3 203 1 122 1 148 1 51 1 83 1 124 2 28 1 86 1 150 1 182 1 90 1 11 1 153 1 213 1 35 1 94 1 156 1 219 1 59 1 95 1 223 1 222 1 17 2 100 3 40 1 161 1 19 1 163 1 135 1 107 1 232 1 47 1 22 1 74 2 173 1 194 1 115 1 201 2 
146 1 203 1 122 1 26 3 148 1 51 1 83 1 124 2 28 1 182 1 150 1 90 1 11 1 153 1 213 1 35 1 94 1 219 1 59 1 95 1 223 1 222 1 17 1 100 3 40 1 161 1 19 1 135 1 47 1 22 1 74 2 194 1 115 1 201 2 
123 3 203 2 122 1 80 1 81 1 207 1 84 1 85 1 183 1 153 1 92 1 215 1 186 2 185 2 95 1 222 1 18 1 132 1 101 1 102 1 68 1 226 3 106 1 165 1 167 2 192 1 71 1 233 1 111 1 112 1 22 1 74 2 114 1 235 1 198 1 116 2 77 2 145 4 79 1 50 1 24 1 
123 3 203 1 122 1 80 1 81 1 84 1 127 1 55 1 183 1 153 1 215 1 186 2 185 2 95 1 221 1 222 1 160 1 18 1 132 1 101 1 102 1 68 1 226 3 189 1 191 1 106 1 165 1 167 2 71 1 45 1 22 1 74 2 198 1 235 1 116 2 77 2 175 1 145 4 79 1 50 1 202 1 24 1 
83 1 35 1 155 1 115 1 87 1 150 1 182 1 139 1 17 1 201 1 
83 1 35 1 155 1 115 1 87 1 150 1 182 1 139 1 17 1 201 1 
203 1 122 1 139 1 11 1 153 1 155 1 74 2 22 1 47 1 59 1 219 1 143 1 95 1 222 1 
83 1 35 1 155 1 115 1 87 1 150 1 182 1 139 1 17 1 201 1 
83 1 35 1 155 1 115 1 87 1 150 1 182 1 139 1 17 1 201 1 
83 1 35 1 155 1 115 1 87 1 150 1 182 1 139 1 17 1 201 1 
74 1 176 1 144 1 211 1 152 1 
74 1 158 1 120 1 121 1 
74 1 120 1 224 1 
74 1 176 1 70 2 152 1 
98 1 120 1 
215 1 84 1 165 1 79 1 
123 1 198 1 186 1 116 1 77 1 167 1 
123 1 198 1 197 1 186 1 116 1 77 1 167 1 
215 1 133 1 84 1 189 1 55 1 
26 1 51 1 23 1 150 1 159 1 100 1 201 2 
150 1 201 1 
26 1 40 1 51 1 145 1 100 1 201 1 
150 1 201 1 
26 1 40 1 145 1 100 1 
134 1 
0 1 
0 1 
22 1 
122 1 
22 1 
80 1 203 1 7 1 190 1 30 1 44 1 88 1 70 1 229 1 153 1 74 2 75 1 95 1 48 1 222 1 49 1 
80 1 203 1 190 1 30 1 44 1 70 1 229 1 153 1 74 2 75 1 143 1 95 1 48 1 222 1 49 1 
80 2 203 2 190 2 30 2 44 2 20 1 70 2 229 2 153 2 129 1 74 4 75 2 95 2 48 2 222 2 49 2 
80 1 203 1 190 1 30 1 44 1 70 1 229 1 153 1 129 1 74 2 75 1 95 1 48 1 222 1 49 1 
80 1 203 1 40 1 53 1 190 1 30 1 44 1 70 1 229 1 153 1 74 2 75 1 95 1 48 1 222 1 145 1 49 1 100 2 178 2 237 1 
66 1 
64 1 40 1 226 2 145 2 
40 1 226 2 145 2 225 1 
203 2 80 1 1 1 29 1 30 1 153 1 56 1 129 1 154 1 215 1 185 2 95 1 222 1 100 1 225 1 66 1 64 1 226 2 189 1 190 1 69 1 106 1 44 1 71 1 70 1 192 1 45 1 46 2 229 1 193 1 170 1 74 3 235 1 75 1 48 1 145 2 49 1 178 1 237 1 50 1 238 1 
153 1 7 1 30 1 88 1 95 1 
123 4 203 3 80 1 4 1 53 1 84 1 30 1 183 1 153 1 215 1 186 3 185 2 95 1 222 1 100 1 225 1 66 1 64 1 101 1 226 2 190 1 106 1 165 1 167 3 44 1 71 1 70 1 229 1 233 1 170 1 74 2 112 1 197 1 235 1 198 1 75 1 116 3 77 3 48 1 145 3 49 1 79 1 178 1 237 1 50 1 
80 1 203 1 40 1 53 2 190 1 30 1 44 1 70 1 229 1 153 1 74 2 75 1 95 1 48 1 222 1 145 3 49 1 100 1 178 1 237 1 
80 1 203 1 190 1 30 1 44 1 20 1 70 1 229 1 153 1 74 2 75 1 95 1 48 1 222 1 49 1 
80 2 203 2 7 1 190 2 30 2 88 1 44 2 20 1 70 2 229 2 153 2 74 4 75 2 95 2 48 2 222 2 49 2 
110 1 7 1 208 1 41 1 199 1 54 1 
80 1 203 1 3 1 53 1 54 1 128 1 153 1 91 1 60 1 95 1 222 1 100 2 40 1 190 1 41 1 21 2 70 1 230 1 74 2 199 1 145 2 
203 1 80 1 40 1 53 1 41 1 208 1 190 1 21 2 54 1 70 1 230 1 153 1 110 1 74 2 199 1 60 1 95 1 222 1 145 2 100 2 
123 3 80 1 203 3 179 1 82 1 4 1 53 1 84 1 208 1 54 1 183 1 153 1 215 1 186 2 185 1 95 1 222 1 37 1 100 1 101 1 190 1 41 1 106 1 165 1 167 2 21 1 71 1 70 1 230 1 233 1 110 1 170 1 74 2 112 1 197 1 198 1 116 2 77 2 199 1 145 1 79 1 
23 1 227 1 61 1 21 1 54 1 100 1 
40 1 37 1 
40 1 179 1 
203 1 80 1 82 1 53 1 41 1 208 1 190 1 180 1 227 1 126 1 21 1 54 2 70 1 153 1 110 1 74 2 199 1 61 1 95 1 222 1 145 2 100 1 
80 1 203 1 82 1 53 1 208 1 209 1 180 1 126 1 54 2 153 1 15 1 95 1 61 1 222 1 100 1 190 1 41 1 227 1 21 1 70 1 110 1 74 2 23 1 199 1 145 2 
82 1 
80 1 203 2 1 1 3 1 179 1 82 1 4 2 53 2 208 1 180 1 29 1 126 1 54 2 153 1 56 1 154 1 215 1 185 2 61 1 95 1 62 1 222 1 37 1 100 2 189 1 190 1 41 1 69 1 106 1 227 1 21 2 70 1 192 1 71 1 45 1 46 4 230 1 170 1 110 1 74 3 199 1 145 3 238 1 
110 1 7 1 208 1 41 1 199 1 54 1 
123 5 179 1 4 2 53 2 180 1 126 1 54 2 183 1 185 2 186 4 61 1 62 1 190 1 21 2 70 1 71 1 74 2 198 1 197 1 199 1 77 4 145 3 79 1 203 3 80 1 82 1 84 1 208 1 153 1 215 1 95 1 37 1 222 1 100 2 101 1 41 1 106 1 165 1 167 4 227 1 230 1 233 1 170 1 110 1 112 1 116 4 

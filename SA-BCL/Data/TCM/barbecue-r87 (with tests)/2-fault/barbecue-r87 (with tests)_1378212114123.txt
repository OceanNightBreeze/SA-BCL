#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 97 142 177 31 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 97 142 177 228 113 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 97 142 177 228 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8568 | if (x) -> if (!x)
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | ASSIGN | 8900 | = null
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
125 1 247 1 163 1 153 1 131 1 
234 1 45 1 197 2 
125 1 247 1 163 1 153 1 131 1 207 1 
0 1 59 1 86 1 122 1 
106 1 0 1 167 1 23 2 151 1 137 1 122 1 124 2 71 2 59 1 162 1 195 1 
167 1 168 1 65 1 78 1 23 1 114 1 116 1 7 1 151 1 122 1 124 3 71 1 204 2 59 1 191 1 246 1 163 1 130 1 131 2 195 1 
167 1 168 1 78 1 23 1 114 1 116 1 7 1 151 1 122 1 124 3 71 1 204 2 59 1 191 1 246 1 163 1 130 1 131 2 195 1 
0 1 167 1 23 1 65 1 221 1 151 1 122 1 124 2 71 1 204 1 59 1 62 1 191 1 163 1 74 1 131 1 195 1 
0 1 167 1 23 1 65 1 239 1 151 1 122 1 124 2 71 1 204 1 59 1 62 1 191 1 163 1 74 1 131 1 195 1 
0 1 167 1 23 1 222 1 151 1 26 1 122 1 124 2 71 1 204 1 58 1 59 1 62 1 191 1 163 1 74 1 131 1 195 1 
0 1 167 1 65 1 23 1 222 1 151 1 26 1 122 1 124 2 71 1 204 1 58 1 59 1 62 1 191 1 163 1 74 1 131 1 195 1 
124 3 0 1 167 1 202 1 71 1 23 2 59 1 151 2 122 1 195 1 
123 1 124 3 0 1 166 2 71 1 59 1 102 1 151 2 122 1 195 1 
123 1 124 2 0 1 166 1 71 2 59 1 151 1 152 1 122 1 195 1 
123 1 124 2 0 1 35 1 166 1 71 1 59 1 151 1 122 1 195 1 
0 1 166 1 168 1 114 1 116 1 7 1 151 1 122 1 98 1 123 1 124 3 71 1 204 1 59 1 246 1 130 1 131 1 195 1 
0 1 166 1 7 1 151 1 122 1 98 1 123 1 124 3 71 1 126 1 204 1 59 1 85 1 246 2 131 1 195 1 
123 1 124 2 0 1 166 1 202 1 71 2 59 1 151 3 122 1 195 2 
0 1 166 2 235 1 7 1 151 2 122 1 98 1 123 1 124 4 71 1 204 1 126 1 59 1 246 1 131 1 195 2 
123 1 124 2 0 1 226 1 166 1 71 1 59 1 151 1 122 1 195 1 
147 1 0 1 166 1 236 1 7 1 151 1 184 1 122 1 224 1 98 1 123 1 124 3 71 1 204 1 59 1 246 4 131 1 195 1 
0 1 166 1 90 1 151 1 122 1 123 1 124 2 71 1 59 1 217 1 195 1 
189 1 1 1 80 3 
80 1 
2 2 133 3 132 1 69 1 68 1 7 1 8 1 138 1 140 1 201 4 141 4 142 1 71 3 202 1 203 1 73 1 72 4 15 4 144 1 18 2 19 4 146 1 21 2 208 2 210 1 25 4 151 2 153 2 82 1 157 2 85 2 160 4 216 4 163 1 33 1 89 1 35 2 166 1 36 1 220 2 39 1 98 1 41 1 42 4 44 1 228 1 102 1 103 2 105 2 46 1 177 1 108 2 109 1 180 2 233 1 110 1 117 1 53 1 241 1 122 1 187 1 123 1 124 3 126 1 190 1 191 1 192 8 246 3 131 2 
132 1 97 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
132 1 97 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
3 3 132 1 135 2 6 3 7 1 8 1 138 1 10 2 140 1 13 1 142 1 16 2 19 3 145 2 146 1 148 1 151 2 28 1 153 2 30 3 154 2 159 1 160 6 163 1 164 3 32 2 33 1 165 5 166 1 35 2 40 1 41 1 42 4 44 1 174 3 175 1 46 1 176 2 177 1 47 2 183 2 54 2 55 1 187 1 190 1 60 1 191 1 192 14 196 2 69 1 68 1 201 4 200 2 71 3 202 1 203 1 72 4 208 2 77 2 211 3 82 1 85 1 216 3 88 4 89 1 219 2 220 4 98 1 99 3 101 3 102 1 228 1 104 2 105 4 231 1 232 3 110 1 117 1 238 2 119 1 120 2 122 1 121 5 241 1 243 3 242 2 123 1 124 3 244 1 126 1 246 2 131 2 
132 1 97 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
132 1 97 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
132 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
8 1 41 1 201 4 142 1 44 1 132 1 203 1 72 4 228 1 177 1 97 1 89 1 
201 1 72 1 228 1 177 1 89 1 
97 1 8 1 201 4 41 1 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
97 1 8 1 201 4 41 1 44 1 142 1 31 1 203 1 72 4 102 1 177 1 89 1 
132 1 113 1 97 1 8 1 41 1 201 4 142 1 44 1 203 1 72 4 228 1 102 1 177 1 89 1 
4 1 
132 1 97 1 8 1 41 1 201 4 44 1 142 1 203 1 72 4 228 1 102 1 177 1 89 1 
192 1 94 1 231 1 
150 1 192 1 
205 1 192 1 
67 1 58 1 84 1 62 1 160 1 192 1 230 1 74 1 163 1 194 1 131 1 19 1 
62 1 67 1 160 1 192 1 163 1 74 1 131 1 
205 1 192 1 
128 1 160 1 192 1 163 1 19 1 131 1 
237 1 192 1 
205 1 192 1 
150 1 192 1 
150 1 192 1 
15 1 192 1 92 1 20 1 
111 1 25 1 192 1 
166 1 5 1 117 1 151 1 95 1 122 1 186 1 29 2 123 1 124 2 57 1 42 2 157 1 71 1 205 1 192 2 64 1 
223 1 
123 1 124 2 57 1 166 1 71 1 157 1 117 1 5 1 86 1 151 1 64 1 95 1 122 1 
124 2 154 1 167 1 71 1 23 1 60 1 117 1 238 1 151 1 176 1 122 1 
167 1 23 2 117 1 238 2 151 1 122 1 124 3 154 2 100 1 71 1 60 1 176 2 
3 2 135 2 136 2 7 1 6 2 137 1 139 2 140 1 10 2 200 2 71 2 75 1 16 2 17 1 19 3 208 2 209 1 77 2 78 1 23 1 211 2 81 2 151 1 153 2 213 2 30 2 154 1 158 1 85 1 160 6 216 3 163 1 87 1 32 2 164 2 33 1 88 4 218 2 165 4 219 2 35 2 167 1 220 4 171 1 42 4 101 2 174 2 229 1 104 2 105 4 46 1 176 1 47 2 232 2 49 1 181 1 182 1 183 2 117 1 238 1 240 2 120 2 241 1 122 1 121 4 243 2 242 2 54 2 124 3 60 1 191 1 192 4 246 1 131 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 96 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
167 1 23 2 117 1 238 2 151 1 122 1 124 3 154 2 100 1 71 1 60 1 176 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 27 2 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
167 1 23 1 117 1 238 1 151 1 122 1 124 2 154 1 100 1 71 1 227 1 60 1 176 1 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 27 2 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 129 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 3 165 2 
67 1 135 1 6 1 137 1 140 1 10 1 200 1 71 4 74 1 16 1 19 2 146 1 208 1 77 1 23 2 211 1 212 1 151 2 26 2 30 2 154 2 84 2 160 2 163 1 164 1 32 1 88 2 165 2 219 1 35 1 167 1 42 2 100 1 174 1 104 1 230 2 231 3 176 2 232 1 47 1 48 1 235 1 51 1 117 1 238 2 239 1 122 1 241 1 121 2 243 1 242 1 54 1 124 3 58 3 60 1 61 1 62 1 191 1 245 1 192 3 194 2 131 1 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
3 1 135 1 136 1 7 1 6 1 139 1 10 1 200 1 71 1 16 1 208 1 209 1 77 1 78 1 23 1 211 1 81 1 151 1 153 1 213 1 30 1 154 1 85 1 160 3 216 3 32 1 164 1 33 1 88 2 218 1 165 2 219 1 35 1 167 1 220 2 42 2 101 1 174 1 104 1 105 2 46 1 176 1 47 1 232 1 183 1 117 1 238 1 240 1 120 1 122 1 121 2 243 1 242 1 54 1 124 3 60 1 192 2 246 1 131 1 
167 1 23 1 117 1 136 1 238 1 151 1 122 1 124 2 154 1 100 1 71 1 60 1 176 1 
3 1 135 1 136 1 7 1 6 1 139 1 200 1 10 1 16 1 208 1 209 1 77 1 24 1 211 1 79 1 81 1 153 1 213 1 30 2 85 1 160 3 216 3 32 1 164 1 33 1 88 2 218 1 165 2 219 1 35 1 220 2 96 1 98 1 42 2 101 1 174 1 102 1 104 1 105 2 46 1 47 1 232 1 183 1 240 1 120 1 121 2 243 1 242 1 54 1 124 1 61 1 246 1 192 2 131 1 
3 1 135 1 136 1 7 1 6 1 139 1 10 1 200 1 71 1 16 1 208 1 209 1 77 1 78 1 23 1 211 1 81 1 151 1 153 1 213 1 30 1 154 1 85 1 160 3 216 3 32 1 164 1 33 1 88 2 218 1 165 2 219 1 35 1 167 1 220 2 42 2 101 1 174 1 104 1 105 2 46 1 176 1 47 1 232 1 183 1 117 1 238 1 240 1 120 1 122 1 121 2 243 1 242 1 54 1 124 3 60 1 129 1 192 2 246 1 131 1 
3 1 135 1 136 1 7 1 6 1 139 1 10 1 200 1 71 1 16 1 208 1 209 1 77 1 211 1 81 1 151 1 153 1 213 1 30 1 154 1 85 1 160 3 216 3 32 1 164 1 33 1 88 2 218 1 165 2 219 1 166 1 35 1 220 2 98 1 42 2 101 1 174 1 102 1 104 1 105 2 46 1 176 1 232 1 47 1 183 1 117 1 238 1 240 1 120 1 122 1 121 2 243 1 242 1 54 1 123 1 124 3 60 1 129 1 192 2 246 1 131 1 
219 1 3 1 167 1 135 1 6 1 96 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 24 1 211 1 117 1 238 1 79 1 151 1 121 2 122 1 54 1 243 1 242 1 124 2 30 2 154 1 60 1 61 1 32 1 164 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 183 1 117 1 238 1 79 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
52 1 220 1 192 1 105 1 81 1 
52 1 220 1 192 1 105 1 120 1 
76 1 220 1 192 1 105 1 81 1 199 1 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
3 1 67 1 135 1 6 1 140 1 10 1 200 1 71 2 74 1 16 1 19 3 146 1 208 1 77 1 23 1 24 1 211 1 79 1 81 1 151 1 26 1 153 1 30 2 154 1 84 3 160 3 163 1 32 1 164 1 88 2 165 2 219 1 35 1 167 1 220 2 96 1 42 2 100 1 101 1 174 1 104 1 230 3 105 2 176 1 232 1 47 1 183 1 117 1 238 1 120 1 121 2 122 1 241 1 54 1 243 1 242 1 124 2 58 4 60 1 61 1 62 1 191 1 192 2 194 3 131 1 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 183 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 129 1 32 1 164 1 88 3 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 2 71 1 100 1 101 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 24 1 117 1 238 1 79 1 151 1 122 1 121 2 243 1 242 1 54 1 124 2 30 2 154 1 60 1 61 1 164 1 32 1 88 2 165 2 
219 1 3 1 167 1 135 1 6 1 10 1 42 3 71 1 101 1 205 1 174 1 104 1 16 1 176 1 232 1 77 1 23 1 211 1 117 1 238 1 151 1 121 2 122 1 243 1 242 1 54 1 124 2 30 1 154 1 60 1 32 1 164 1 88 3 165 2 
35 1 168 1 167 1 91 1 221 1 93 1 198 1 225 1 140 1 200 1 71 2 230 2 74 1 231 3 19 2 47 1 146 1 107 1 208 1 23 1 112 1 114 1 116 1 117 1 151 1 26 1 122 1 241 1 124 2 157 1 84 2 58 3 62 1 160 2 191 1 246 1 192 4 163 1 130 1 194 2 131 1 
35 1 167 1 90 1 169 1 91 1 93 1 198 1 139 1 225 1 140 1 200 1 43 1 71 1 230 2 74 1 231 3 19 2 47 1 107 1 208 1 23 1 112 1 182 1 117 1 118 1 240 1 151 1 26 1 122 1 241 1 213 1 124 2 155 1 157 1 84 2 58 3 62 1 160 2 192 4 163 1 217 1 194 2 131 1 218 1 
3 3 167 1 6 3 40 3 71 1 101 3 174 3 176 1 232 3 22 1 23 1 211 3 117 1 238 1 151 1 121 3 122 1 243 3 30 3 244 1 124 2 154 1 159 1 60 1 164 3 165 3 
3 1 167 1 6 1 40 1 226 1 71 1 101 1 174 1 176 1 232 1 23 1 211 1 117 1 238 1 151 1 121 1 122 1 243 1 30 1 244 1 124 2 154 1 159 1 60 1 164 1 165 1 
167 1 23 1 117 1 238 1 151 1 122 1 40 1 124 2 226 1 154 1 71 1 159 1 60 1 176 1 
219 1 3 3 167 1 135 1 197 1 6 3 40 2 10 1 42 2 71 1 101 3 174 3 104 1 16 1 176 1 232 3 77 1 23 1 211 3 183 1 117 1 238 1 151 1 121 4 122 1 54 1 242 1 243 3 30 3 244 1 124 2 154 1 159 1 60 1 129 1 32 1 164 3 88 2 165 4 
3 1 167 1 196 1 220 1 6 1 40 1 71 1 101 1 205 1 174 1 105 1 176 1 232 1 50 1 23 1 211 1 52 1 117 1 238 1 151 1 121 1 122 1 243 1 30 1 244 1 124 2 154 1 159 1 60 1 192 1 164 1 165 1 
167 1 3 1 23 1 211 1 117 1 238 1 6 1 151 1 122 1 121 1 243 1 40 1 124 2 244 1 30 1 154 1 71 1 159 1 101 1 174 1 60 1 176 1 164 1 232 1 165 1 
172 1 124 1 70 1 173 1 162 1 
124 1 83 1 134 1 63 1 
124 1 83 1 34 1 
124 1 173 1 115 2 162 1 
83 1 178 1 
140 1 163 1 241 1 131 1 
84 1 58 1 230 1 26 1 194 1 19 1 
84 1 58 1 67 1 230 1 26 1 194 1 19 1 
56 1 182 1 163 1 240 1 131 1 218 1 213 1 
9 1 10 1 42 1 174 1 197 1 88 1 121 2 
174 1 121 1 
10 1 42 1 205 1 192 1 88 1 121 1 
174 1 121 1 
42 1 205 1 192 1 88 1 
123 1 
166 1 
166 1 
23 1 
167 1 
23 1 
149 1 115 1 117 1 38 1 151 1 122 1 11 1 124 2 12 1 157 1 71 1 156 1 215 1 14 1 86 1 143 1 
149 1 115 1 117 1 151 1 122 1 11 1 124 2 12 1 157 1 71 1 156 1 127 1 215 1 14 1 143 1 
149 1 115 1 117 1 151 1 122 1 11 1 124 2 226 1 12 1 157 1 71 1 156 1 215 1 14 1 143 1 
149 2 115 2 117 2 151 2 122 2 188 1 11 2 124 4 12 2 157 2 71 2 156 2 127 1 215 2 14 2 143 2 
149 1 115 1 25 1 117 1 151 1 122 1 11 1 124 2 12 1 42 2 157 1 71 1 156 1 205 1 215 1 14 1 143 1 192 1 193 1 179 2 
185 1 
205 1 206 1 192 2 231 2 
214 1 205 1 192 2 231 2 
35 1 7 1 137 1 139 1 200 1 11 1 12 1 42 1 71 2 14 1 206 1 143 1 46 1 231 2 47 1 179 1 208 1 209 1 78 1 149 1 115 1 117 1 240 1 151 1 185 1 122 1 213 1 124 3 214 1 156 1 157 1 127 1 215 1 85 1 160 2 161 1 216 2 192 2 246 1 193 1 33 1 131 1 218 1 
149 1 117 1 86 1 38 1 122 1 
35 1 67 1 137 1 140 1 200 1 11 1 12 1 42 1 71 3 14 1 206 1 143 1 15 1 230 3 74 1 231 2 19 3 47 1 179 1 146 1 208 1 149 1 115 1 25 1 117 1 151 1 26 1 185 1 241 1 122 1 124 2 214 1 156 1 157 1 84 3 58 4 215 1 62 1 160 2 191 1 192 3 193 1 163 1 194 3 131 1 
149 1 115 1 25 2 117 1 151 1 122 1 11 1 124 2 12 1 42 1 157 1 71 1 156 1 205 1 215 1 14 1 143 1 192 3 193 1 179 1 
149 1 115 1 117 1 151 1 122 1 188 1 11 1 124 2 12 1 157 1 71 1 156 1 215 1 14 1 143 1 
149 2 115 2 117 2 38 1 151 2 122 2 188 1 11 2 124 4 12 2 157 2 71 2 156 2 215 2 14 2 86 1 143 2 
233 1 133 1 210 1 86 1 144 1 53 1 
2 1 37 1 133 1 66 1 170 1 92 1 12 1 141 2 42 2 71 1 205 1 144 1 115 1 25 1 117 1 151 1 53 1 122 1 124 2 157 1 192 2 
2 1 233 1 210 1 133 1 115 1 25 1 117 1 92 1 53 1 151 1 122 1 124 2 141 2 12 1 42 2 71 1 157 1 205 1 192 2 144 1 
35 1 2 1 133 1 67 1 137 1 140 1 141 1 12 1 42 1 71 3 103 1 15 1 230 2 144 1 74 1 18 1 19 2 146 1 108 1 208 1 233 1 210 1 115 1 25 1 117 1 151 1 53 1 26 1 122 1 241 1 124 2 157 1 84 2 58 3 62 1 160 1 191 1 192 1 163 1 194 2 131 1 
141 1 21 1 42 1 180 1 133 1 197 1 
108 1 205 1 
205 1 103 1 
21 1 180 1 233 1 210 1 133 2 115 1 25 1 117 1 220 1 53 1 151 1 122 1 124 2 141 1 12 1 42 1 71 1 157 1 192 2 144 1 105 1 18 1 
133 2 220 1 197 1 12 1 141 1 42 1 71 1 144 1 105 1 18 1 21 1 233 1 180 1 210 1 234 1 111 1 115 1 25 1 117 1 151 1 53 1 122 1 124 2 157 1 192 2 
18 1 
35 1 2 1 37 1 133 2 220 1 7 1 137 1 139 1 141 2 12 1 42 2 71 2 103 1 15 2 144 1 105 1 46 1 18 1 108 1 21 1 208 1 209 1 180 1 233 1 210 1 78 1 115 1 25 2 117 1 240 1 151 1 53 1 153 1 122 1 213 1 124 3 157 1 85 1 160 2 192 3 216 4 246 1 33 1 131 1 218 1 
233 1 133 1 210 1 86 1 144 1 53 1 
2 1 133 2 67 1 137 1 140 1 12 1 141 2 71 3 144 1 15 2 74 1 18 1 19 4 146 1 208 1 21 1 210 1 25 2 151 1 26 1 153 1 157 1 84 4 160 2 163 1 35 1 220 1 42 2 103 1 230 4 105 1 108 1 233 1 180 1 115 1 117 1 53 1 241 1 122 1 124 2 58 5 62 1 191 1 192 3 194 4 131 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | OPERATOR | 7049 | == -> !=
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 13985 | 2 -> 3
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 156 1 25 1 241 1 110 1 189 1 
212 1 25 1 241 1 110 1 189 1 
140 1 102 1 194 2 
107 3 174 2 123 1 205 1 136 1 57 1 152 1 110 1 183 1 35 1 170 1 131 1 39 1 52 1 85 1 19 1 202 1 104 1 73 1 
107 3 174 1 92 1 205 1 57 1 152 2 110 1 62 1 183 1 35 1 131 1 85 1 39 1 19 1 202 1 104 1 
107 2 174 1 205 2 57 1 183 2 131 1 85 1 171 1 19 1 202 3 
107 4 174 2 205 2 57 1 46 1 152 1 110 1 62 1 183 1 35 1 131 1 85 1 39 1 19 1 202 2 104 1 
174 1 107 2 183 1 205 1 57 1 94 1 131 1 85 1 19 1 202 1 
107 3 174 1 205 1 57 1 138 1 208 1 152 4 110 1 195 1 183 1 35 1 240 1 131 1 85 1 39 1 19 1 202 1 104 1 
107 2 174 1 205 1 57 1 183 1 129 1 131 1 85 1 19 1 202 1 90 1 
166 1 131 1 85 1 19 1 
107 2 174 1 205 1 57 1 59 1 50 1 183 2 131 1 85 1 19 1 202 1 
107 3 174 1 205 1 123 1 57 1 136 1 152 1 110 2 32 1 183 1 35 2 241 1 131 1 170 1 39 1 85 1 52 1 86 1 202 1 104 1 
107 3 174 1 205 1 123 1 57 1 136 1 152 1 110 2 32 1 183 1 35 2 241 1 131 1 170 1 39 1 85 1 52 1 202 1 104 1 
107 2 174 1 205 1 57 1 110 1 233 1 81 1 32 1 183 1 35 1 241 1 131 1 85 1 19 1 86 1 202 1 244 1 
107 2 174 1 108 1 205 1 57 1 110 1 233 1 32 1 183 1 35 1 241 1 131 1 85 1 19 1 86 1 202 1 244 1 
107 2 174 1 158 1 205 1 57 1 110 1 233 1 32 1 183 1 35 1 241 1 131 1 184 1 85 1 19 1 202 1 244 1 228 1 
107 2 174 1 158 1 205 1 57 1 110 1 233 1 32 1 183 1 35 1 241 1 131 1 184 1 85 1 86 1 19 1 202 1 244 1 228 1 
107 3 174 2 205 1 57 1 183 1 131 1 85 1 171 1 19 1 202 2 
107 3 2 2 205 1 112 1 183 1 196 1 131 1 85 1 19 1 202 2 
107 2 183 2 2 1 205 1 131 1 58 1 85 1 19 1 202 1 112 1 
107 2 2 1 205 1 179 1 112 1 183 1 131 1 85 1 19 1 202 1 
160 1 149 1 218 3 
218 1 
139 1 204 1 137 1 223 1 14 1 
0 1 134 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 78 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 14 202 2 23 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 28 1 207 3 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 100 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 164 1 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 125 1 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 134 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 142 4 88 6 202 2 203 2 91 1 92 1 93 4 148 3 24 1 26 2 28 1 209 1 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 134 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 79 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 28 1 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
238 1 
0 1 134 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 2 93 4 148 3 204 1 24 1 26 2 28 1 152 3 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 50 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 176 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 4 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 2 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 4 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 152 2 96 2 97 2 153 2 32 1 31 3 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 4 215 1 45 2 48 4 47 1 46 1 216 2 110 2 165 2 112 1 50 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 176 1 119 1 56 3 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 5 127 2 237 2 241 1 68 3 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 176 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 2 93 4 148 3 204 1 24 1 26 2 152 3 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 176 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 4 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 150 1 26 2 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 176 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 134 1 2 1 3 1 4 4 135 2 5 2 8 2 10 1 137 4 77 1 12 1 14 1 139 4 196 1 197 1 83 2 141 2 88 6 142 4 201 1 202 2 203 2 91 1 92 1 93 4 148 3 204 1 24 1 26 2 28 1 152 2 96 2 97 2 153 2 32 1 31 2 99 4 33 1 39 1 41 1 103 2 105 2 106 1 107 3 215 1 45 2 48 4 47 1 216 2 110 2 165 2 112 1 168 2 114 2 116 1 171 1 53 2 223 1 225 1 119 1 56 2 122 1 124 4 179 2 180 4 62 1 64 1 181 2 234 2 183 3 127 2 237 2 241 1 68 2 131 1 69 2 185 1 70 1 71 2 187 3 189 2 
0 1 3 1 4 4 5 2 135 2 8 2 10 1 137 4 12 1 14 1 139 4 141 2 142 4 143 1 147 1 24 1 148 3 26 2 150 1 152 2 153 2 154 1 31 2 32 1 33 1 39 1 41 1 157 2 43 1 45 2 161 1 47 1 48 4 165 2 168 2 167 2 53 2 171 1 174 1 176 1 56 2 57 1 179 2 180 4 62 1 64 1 63 1 181 2 182 1 183 3 68 2 69 2 185 1 187 3 71 2 189 2 190 2 75 1 77 1 83 2 197 1 88 6 87 1 201 1 202 2 203 2 91 1 93 4 92 1 204 1 210 2 96 2 97 2 99 4 103 2 104 1 105 2 106 1 107 3 215 1 216 2 110 2 113 2 114 2 116 1 223 1 225 1 119 1 122 1 124 4 234 2 237 2 127 2 241 1 131 1 133 1 
6 1 142 1 164 1 
193 1 142 1 
148 1 151 1 110 1 233 1 239 1 241 1 84 1 142 1 88 1 244 1 228 1 72 1 
239 1 241 1 88 1 142 1 110 1 233 1 244 1 
193 1 142 1 
148 1 241 1 88 1 142 1 110 1 188 1 
142 1 144 1 
142 1 145 1 
193 1 142 1 
142 1 145 1 
142 1 145 1 
7 1 38 1 206 1 142 1 
66 1 142 1 54 1 
107 2 174 1 191 1 4 2 57 1 162 1 193 1 11 1 183 1 101 1 198 1 131 1 185 1 142 2 199 2 22 1 202 1 
220 1 
107 2 174 1 191 1 57 1 162 1 11 1 166 1 183 1 101 1 198 1 131 1 185 1 202 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 221 2 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 174 1 1 1 76 1 122 1 56 1 57 1 31 1 183 1 68 1 131 1 185 1 202 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 221 2 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 21 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 103 1 105 1 
4 2 76 1 5 1 135 1 8 1 197 1 84 2 142 3 88 2 202 2 203 1 24 1 148 2 26 1 151 2 96 1 97 1 153 1 32 1 31 2 34 1 103 1 105 1 107 3 108 1 45 1 159 1 48 2 46 1 216 1 164 3 110 1 165 1 50 1 168 1 114 1 53 1 224 1 228 3 174 2 230 1 175 1 122 1 56 2 57 1 124 2 179 1 180 2 233 1 64 1 234 1 183 4 127 1 237 1 239 1 241 1 68 2 131 1 184 2 69 1 185 1 71 1 244 1 72 2 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 3 174 2 76 1 122 1 56 2 57 1 31 2 183 1 68 2 131 1 185 1 202 1 
190 2 75 1 4 4 5 2 135 2 8 2 197 1 83 2 141 2 87 1 142 4 88 6 202 1 143 1 203 2 147 1 93 4 92 1 148 3 26 2 152 1 210 2 96 2 97 2 153 2 154 1 32 1 99 4 31 1 33 1 39 1 157 2 103 2 105 2 104 1 107 3 43 1 215 1 45 2 161 1 48 4 216 2 110 2 165 2 113 2 50 1 167 2 168 2 114 2 53 2 174 1 122 1 56 1 57 1 124 4 179 2 180 4 63 1 64 1 182 1 181 2 234 2 183 2 237 2 127 2 241 1 68 1 131 1 69 2 185 1 133 1 71 2 187 3 189 2 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 221 2 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
174 1 107 2 183 1 31 1 56 1 122 1 57 1 68 1 131 1 185 1 202 1 
107 3 174 2 76 1 122 1 56 2 57 1 31 2 183 1 68 2 131 1 185 1 202 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
190 1 4 2 5 1 135 1 8 1 83 1 141 1 142 2 88 3 202 1 203 1 93 2 92 1 26 1 152 1 210 1 96 1 97 1 153 1 99 2 31 1 33 1 39 1 157 1 103 1 105 1 104 1 107 3 215 1 45 1 161 1 48 2 216 1 110 1 165 1 113 1 167 1 168 1 114 1 53 1 174 1 122 1 56 1 57 1 124 2 179 1 180 2 181 1 234 1 183 1 237 1 127 1 68 1 131 1 69 1 185 1 71 1 187 3 189 1 
107 2 174 1 76 1 122 1 56 1 57 1 31 1 183 1 68 1 131 1 185 1 202 1 157 1 
190 1 4 2 5 1 135 1 8 1 196 1 83 1 141 1 88 3 142 2 20 1 203 1 92 1 93 2 26 1 152 1 210 1 96 1 97 1 153 1 99 2 33 1 214 1 39 1 157 1 103 1 105 1 107 1 215 1 45 1 161 1 48 2 216 1 110 1 165 1 113 1 167 1 168 1 114 1 53 1 175 1 124 2 179 1 180 2 181 1 234 1 65 1 127 1 237 1 69 2 70 1 187 3 186 1 71 1 189 1 
190 1 4 2 5 1 135 1 8 1 83 1 141 1 142 2 88 3 202 1 21 1 203 1 93 2 92 1 26 1 152 1 210 1 96 1 97 1 153 1 99 2 31 1 33 1 39 1 157 1 103 1 105 1 104 1 107 3 215 1 45 1 161 1 48 2 216 1 110 1 165 1 113 1 167 1 168 1 114 1 53 1 174 1 122 1 56 1 57 1 124 2 179 1 180 2 181 1 234 1 183 1 237 1 127 1 68 1 131 1 69 1 185 1 71 1 187 3 189 1 
190 1 2 1 4 2 5 1 135 1 8 1 196 1 83 1 141 1 142 2 88 3 202 1 21 1 203 1 93 2 92 1 26 1 152 1 210 1 96 1 97 1 153 1 99 2 31 1 33 1 39 1 157 1 103 1 105 1 107 3 215 1 45 1 161 1 48 2 216 1 110 1 165 1 113 1 112 1 167 1 168 1 114 1 53 1 122 1 56 1 124 2 179 1 180 2 181 1 234 1 183 1 127 1 237 1 68 1 131 1 69 1 70 1 185 1 71 1 187 3 189 1 
107 2 45 1 4 2 135 1 76 1 5 1 8 1 48 2 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 2 96 1 97 1 234 1 183 1 31 1 237 1 127 1 65 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 2 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 2 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
99 1 93 1 141 1 142 1 61 1 
99 1 93 1 83 1 142 1 61 1 
44 1 99 1 93 1 141 1 142 1 173 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
4 2 135 1 76 1 5 1 8 1 197 1 83 1 141 1 84 3 142 2 88 3 20 1 202 1 203 1 93 2 24 1 148 3 26 1 151 3 96 1 97 1 153 1 99 2 32 1 31 1 214 1 103 1 105 1 107 2 45 1 48 2 216 1 110 1 165 1 168 1 114 1 53 1 228 4 174 1 175 1 122 1 56 1 57 1 124 2 179 1 180 2 233 1 64 1 181 1 234 1 183 2 237 1 127 1 65 1 239 1 241 1 68 1 131 1 184 1 69 2 185 1 71 1 186 1 244 1 72 3 189 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 21 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 221 2 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 181 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 221 2 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 71 1 186 1 103 1 105 1 
107 2 45 1 4 3 76 1 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 20 1 202 1 203 1 174 1 175 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 65 1 237 1 68 1 131 1 214 1 69 2 185 1 186 1 71 1 103 1 105 1 
107 2 45 1 4 3 5 1 135 1 8 1 48 2 193 1 165 1 168 1 114 1 202 1 203 1 174 1 56 1 122 1 26 1 57 1 124 2 180 3 96 1 97 1 234 1 183 1 31 1 127 1 237 1 68 1 131 1 69 1 185 1 71 1 103 1 105 1 
107 2 136 1 216 1 162 1 110 1 164 3 81 1 197 1 17 1 170 1 84 2 52 1 172 1 53 1 88 2 142 4 226 1 202 1 228 3 174 1 148 2 24 1 123 1 57 1 151 2 152 1 179 1 95 1 233 1 98 1 64 1 153 1 29 1 183 2 32 1 241 1 131 1 184 1 185 1 72 2 244 1 
107 2 190 1 109 1 162 1 216 1 110 1 164 3 113 1 167 1 197 1 169 1 17 1 84 2 172 1 53 1 87 1 88 2 142 4 226 1 202 1 90 1 228 3 174 1 148 2 57 1 151 2 179 1 210 1 95 1 233 1 98 1 64 1 29 1 153 1 183 1 128 1 129 1 37 1 241 1 131 1 184 1 185 1 72 2 244 1 
107 2 45 3 4 2 135 1 5 1 8 3 48 4 13 1 194 1 165 3 168 3 114 1 21 1 202 1 203 3 174 1 122 1 56 1 232 1 26 3 57 1 124 4 180 2 96 1 97 1 181 1 234 3 183 1 31 1 127 1 237 3 68 1 131 1 69 3 185 1 243 2 71 1 103 1 105 1 
107 2 45 3 8 3 48 3 13 1 165 3 168 3 202 1 203 3 174 1 122 1 56 1 232 1 26 3 57 1 124 3 234 3 183 1 31 1 237 3 67 1 68 1 131 1 69 3 185 1 243 3 
107 2 45 1 8 1 48 1 13 1 165 1 168 1 202 1 203 1 174 1 122 1 56 1 232 1 26 1 57 1 94 1 124 1 234 1 183 1 31 1 237 1 68 1 131 1 69 1 185 1 243 1 
107 2 174 1 122 1 56 1 57 1 94 1 13 1 183 1 31 1 68 1 131 1 185 1 243 1 202 1 
107 2 45 1 8 1 48 1 13 1 165 1 168 1 202 1 203 1 174 1 122 1 56 1 232 1 26 1 57 1 124 1 234 1 183 1 31 1 237 1 68 1 131 1 69 1 185 1 243 1 
107 2 45 1 8 1 48 1 193 1 13 1 165 1 168 1 51 1 82 1 142 1 202 1 203 1 174 1 93 1 122 1 56 1 232 1 26 1 57 1 124 1 61 1 234 1 99 1 183 1 31 1 237 1 68 1 131 1 69 1 185 1 243 1 
107 1 120 1 130 1 15 1 
118 1 107 1 219 1 192 1 73 1 
107 1 130 1 42 1 
107 1 192 1 18 2 73 1 
9 1 130 1 
197 1 241 1 110 1 64 1 
148 1 151 1 84 1 184 1 72 1 228 1 
167 1 241 1 178 1 87 1 210 1 110 1 113 1 
148 1 239 1 151 1 84 1 184 1 72 1 228 1 
4 1 48 1 193 1 180 1 142 1 71 1 
48 1 165 1 
4 1 193 1 180 1 142 1 
229 1 4 1 48 2 194 1 180 1 71 1 165 1 
48 1 165 1 
2 1 
112 1 
2 1 
174 1 
174 1 
57 1 
107 2 231 1 4 2 162 1 193 1 217 1 163 1 111 1 80 2 16 1 30 1 183 1 115 1 66 1 18 1 131 1 242 1 185 1 142 1 202 1 
89 1 
107 2 231 1 162 1 217 1 163 1 111 1 16 1 183 1 115 1 18 1 131 1 242 1 185 1 227 1 202 1 
107 2 231 1 162 1 217 1 163 1 111 1 16 1 166 1 183 1 155 1 115 1 18 1 131 1 242 1 185 1 202 1 
107 2 231 1 94 1 162 1 217 1 163 1 111 1 16 1 183 1 115 1 18 1 131 1 242 1 185 1 202 1 
107 4 231 2 162 2 217 2 163 2 111 2 16 2 236 1 183 2 115 2 18 2 131 2 242 2 185 2 227 1 202 2 
107 2 231 1 4 1 162 1 193 1 217 1 163 1 111 1 80 1 16 1 30 1 183 1 115 1 66 2 18 1 131 1 242 1 185 1 142 3 202 1 
107 2 231 1 162 1 217 1 163 1 111 1 16 1 236 1 183 1 115 1 18 1 131 1 242 1 185 1 202 1 
107 4 231 2 162 2 217 2 163 2 111 2 16 2 166 1 236 1 183 2 155 1 115 2 18 2 131 2 242 2 185 2 202 2 
235 1 193 1 142 2 164 2 
193 1 142 2 126 1 164 2 
107 3 190 1 215 1 4 1 161 1 216 1 162 1 217 1 163 1 110 1 164 2 111 1 80 1 16 1 113 1 50 1 167 1 115 1 18 1 53 1 88 2 142 2 227 1 202 1 89 1 146 1 231 1 92 1 179 1 152 1 210 1 126 1 153 1 30 1 183 2 235 1 33 1 131 1 242 1 185 1 39 1 187 2 104 1 
166 1 155 1 131 1 185 1 217 1 
107 2 4 1 7 1 216 1 162 1 217 1 163 1 110 1 164 2 111 1 80 1 16 1 50 1 197 1 115 1 18 1 84 3 53 1 88 2 142 3 202 1 89 1 228 4 231 1 148 3 24 1 151 3 179 1 126 1 233 1 64 1 153 1 30 1 183 3 32 1 235 1 239 1 66 1 241 1 131 1 184 1 242 1 185 1 72 3 244 1 
107 2 231 1 4 2 55 1 121 1 206 1 27 2 162 1 193 1 211 1 60 1 183 1 66 1 18 1 131 1 222 1 185 1 142 2 40 1 202 1 
166 1 55 1 121 1 222 1 40 1 211 1 
107 2 4 2 162 1 193 1 18 1 222 1 142 2 202 1 117 1 231 1 55 1 177 1 27 2 206 1 60 1 183 1 213 1 66 1 131 1 185 1 40 1 
107 2 93 1 231 1 4 1 55 2 121 1 27 1 162 1 194 1 211 1 99 1 183 1 140 1 66 1 18 1 131 1 132 1 222 1 185 1 142 2 40 1 200 1 202 1 54 1 74 1 
74 1 
107 3 190 1 215 1 4 2 161 1 7 2 162 1 110 1 49 1 113 1 50 1 167 1 18 1 222 1 53 1 142 3 88 2 200 1 202 1 93 1 231 1 92 1 55 2 121 1 177 1 27 2 152 1 179 1 210 1 211 1 60 1 99 1 183 2 33 1 36 1 66 2 131 1 132 1 185 1 39 1 40 1 187 4 104 1 74 1 189 1 
166 1 55 1 121 1 222 1 40 1 211 1 
4 2 7 2 197 1 18 1 84 4 88 2 142 3 200 1 202 1 93 1 24 1 148 4 151 4 27 2 211 1 32 1 99 1 36 1 40 1 107 2 162 1 110 1 49 1 50 1 53 1 222 1 228 5 231 1 55 2 121 1 179 1 60 1 233 1 64 1 183 3 239 1 241 1 66 2 131 1 184 1 185 1 132 1 244 1 72 4 189 1 74 1 
107 2 4 1 7 1 162 1 110 1 49 1 50 1 197 1 18 1 84 2 222 1 53 1 142 1 88 1 202 1 228 3 231 1 148 2 55 1 24 1 121 1 27 1 151 2 179 1 211 1 60 1 233 1 64 1 183 3 32 1 239 1 36 1 66 1 241 1 131 1 184 1 185 1 40 1 72 2 244 1 74 1 
4 1 55 1 27 1 132 1 194 1 200 1 
36 1 193 1 
193 1 49 1 
107 2 4 1 162 1 18 1 222 1 142 2 200 1 202 1 231 1 93 1 55 2 121 1 27 1 211 1 183 1 99 1 66 1 131 1 185 1 132 1 40 1 74 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 149 143 29 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 9443 | return null
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
241 1 173 1 98 1 66 1 166 1 56 1 
241 1 173 1 98 1 66 1 56 1 
15 1 114 2 243 1 
94 1 96 1 221 1 137 1 98 1 247 1 3 1 174 1 5 1 55 1 6 1 85 1 231 1 146 1 165 3 238 1 184 1 75 1 48 2 
94 1 221 1 96 1 137 1 98 1 247 1 3 2 195 1 5 1 55 1 6 1 146 1 165 3 238 1 93 1 48 1 
221 1 125 1 238 1 5 1 
221 1 137 1 5 1 55 2 6 1 146 1 147 1 165 2 238 1 152 1 48 1 
94 1 241 1 50 1 96 1 221 1 137 1 98 2 78 1 247 2 3 1 174 1 55 1 6 1 85 1 231 1 146 1 165 3 238 1 184 1 48 1 
94 1 241 1 96 1 221 1 137 1 98 2 78 1 247 2 3 1 174 1 55 1 6 1 85 1 231 1 146 1 165 3 238 1 184 1 48 1 
241 1 50 1 210 1 221 1 137 1 98 1 78 1 247 1 193 1 5 1 55 1 6 1 146 1 165 2 92 1 238 1 48 1 
154 1 241 1 50 1 221 1 137 1 98 1 78 1 247 1 193 1 5 1 55 1 6 1 146 1 165 2 92 1 238 1 48 1 
241 1 221 1 127 1 17 1 137 1 98 1 78 1 247 1 193 1 5 1 55 1 82 1 6 1 146 1 165 2 92 1 238 1 48 1 
241 1 50 1 221 1 127 1 17 1 137 1 98 1 78 1 247 1 193 1 5 1 55 1 82 1 6 1 146 1 165 2 92 1 238 1 48 1 
221 1 137 1 5 1 55 1 6 2 120 1 146 1 165 3 238 1 48 2 
221 1 192 1 5 1 55 1 6 2 22 2 146 1 165 3 218 1 238 1 
22 1 221 1 145 1 146 1 192 1 165 2 55 2 238 1 5 1 6 1 
221 1 192 1 5 1 55 1 6 1 22 1 146 1 165 2 238 1 46 1 
22 1 221 1 146 1 117 1 192 1 165 2 55 1 238 1 5 1 6 1 
221 1 96 1 223 1 98 1 247 1 192 1 3 4 194 1 5 1 55 1 6 1 40 1 22 1 146 1 23 1 148 1 165 3 238 1 
103 1 22 1 221 1 214 1 146 1 192 1 165 2 55 1 238 1 5 1 6 1 
221 1 192 1 5 1 55 2 6 3 22 1 120 1 146 2 165 2 238 1 
221 1 96 1 98 1 247 1 192 1 3 1 5 1 55 1 6 2 22 2 146 2 148 1 165 4 44 1 238 1 93 1 
64 1 27 3 100 1 
27 1 
0 1 126 1 2 1 191 2 4 1 192 1 3 3 195 2 67 1 6 2 69 1 129 2 201 2 130 1 204 4 73 1 74 1 135 1 11 1 77 4 78 1 142 4 81 3 143 1 213 2 84 1 22 1 24 1 148 1 25 1 91 1 149 1 218 1 93 1 153 2 97 1 35 4 222 4 96 1 98 2 224 1 226 1 228 2 159 1 161 4 104 1 235 2 107 1 165 3 238 1 111 1 46 2 239 1 169 2 170 1 241 1 53 1 245 1 246 8 249 1 56 2 55 3 177 2 120 1 182 4 59 4 61 4 183 1 256 2 
126 1 0 1 2 1 3 2 4 1 6 2 128 3 130 1 8 1 131 4 133 2 134 2 135 1 11 1 138 2 139 4 143 1 22 1 148 1 24 1 25 1 149 1 151 1 32 2 153 4 35 3 157 2 39 4 158 2 159 1 161 3 42 2 165 4 43 2 46 2 170 1 51 2 55 3 56 2 175 2 177 2 178 2 179 2 181 2 182 4 61 6 183 1 65 1 187 2 189 2 191 4 192 1 195 1 67 1 68 2 204 4 76 2 78 1 84 1 215 2 216 1 218 1 93 1 219 2 96 1 95 2 222 4 97 1 98 2 224 1 101 2 232 2 104 1 234 4 107 1 238 1 110 2 111 1 240 1 112 2 241 1 116 1 245 1 246 14 248 2 250 2 251 2 253 2 252 1 120 1 121 2 122 2 124 1 259 2 
0 1 126 1 187 2 189 2 2 1 191 4 4 1 192 1 3 2 195 1 67 1 68 2 6 2 130 1 131 4 204 4 133 2 134 2 135 1 76 2 11 1 139 4 138 2 78 1 80 1 143 1 84 1 22 1 215 2 216 1 24 1 148 1 25 1 149 1 218 1 32 2 93 1 219 2 153 4 97 1 35 3 222 4 95 2 96 1 98 2 157 2 224 1 39 4 158 2 159 1 161 3 104 1 232 2 234 4 42 2 107 1 165 3 43 2 110 2 238 1 111 1 46 2 240 1 170 1 112 2 241 1 51 2 116 1 245 1 246 4 249 1 248 2 250 2 56 2 55 3 251 2 175 2 253 2 177 2 179 2 178 2 120 1 121 2 181 2 122 2 182 4 124 1 61 6 183 1 259 2 
0 1 126 1 189 3 2 1 191 4 3 2 4 1 192 1 195 1 67 1 68 2 6 2 130 1 131 4 204 4 133 2 134 2 135 1 76 2 11 1 139 3 138 2 78 1 143 1 84 1 22 1 215 2 148 1 24 1 25 1 149 1 218 1 93 1 219 2 153 4 97 1 35 3 222 4 96 1 95 3 98 2 157 3 99 1 224 1 39 5 158 2 159 1 161 3 104 1 105 1 234 5 42 2 236 1 107 1 165 3 237 1 110 3 238 1 111 1 46 2 45 2 240 1 170 1 49 1 241 1 51 3 245 1 246 4 248 2 250 2 56 2 55 3 251 3 175 2 177 2 253 2 178 3 179 3 120 1 121 2 254 1 122 2 182 4 61 6 183 1 259 2 
167 1 
126 1 0 1 2 1 4 1 3 3 6 2 130 1 131 4 133 2 134 2 135 1 11 1 138 2 18 1 139 3 143 1 22 1 24 1 148 1 25 1 149 1 152 1 153 4 35 3 157 3 39 5 158 2 159 1 161 3 42 2 165 3 45 2 46 2 170 1 49 1 51 3 55 4 56 2 175 2 177 2 179 3 178 3 57 1 182 4 61 6 183 1 189 3 191 4 192 1 195 2 67 1 68 2 204 4 76 2 78 1 84 1 215 2 218 1 93 1 219 2 95 3 96 1 222 4 97 1 98 2 224 1 105 1 104 1 234 5 107 1 236 1 237 1 238 1 110 3 111 1 240 1 241 1 116 1 246 4 245 1 248 2 249 1 250 2 251 3 253 2 120 1 121 2 122 2 254 1 124 1 259 2 
126 1 0 1 2 1 189 3 191 4 3 2 4 1 192 1 195 1 67 1 68 2 6 4 130 1 131 4 204 4 133 2 134 3 135 1 76 2 11 1 139 3 18 1 138 3 78 1 143 1 84 1 22 2 215 2 148 1 24 1 25 1 149 1 218 1 152 1 93 1 219 2 153 4 97 1 35 3 222 4 96 1 95 3 98 2 157 3 224 1 39 5 158 2 159 1 161 3 104 1 105 1 234 5 42 2 107 1 165 4 237 1 44 1 110 3 238 1 111 1 46 2 45 2 240 1 170 1 49 1 241 1 51 3 116 1 245 1 246 4 249 1 248 2 250 2 56 2 55 5 251 3 175 2 177 2 253 3 178 3 179 3 120 1 121 2 122 2 182 4 124 1 61 6 183 1 259 2 
0 1 126 1 2 1 189 3 191 4 3 2 4 1 192 1 195 1 67 1 68 2 6 2 130 1 131 4 204 4 133 2 134 2 135 1 76 2 11 1 139 3 18 1 138 2 78 1 143 1 84 1 22 1 215 2 148 1 24 1 25 1 149 1 218 1 93 1 219 2 153 4 97 1 35 3 222 4 96 1 95 3 98 2 157 3 224 1 39 5 158 2 159 1 161 3 104 1 105 1 234 5 42 2 107 1 165 3 237 1 110 3 238 1 111 1 46 2 45 2 240 1 170 1 49 1 241 1 51 3 116 1 245 1 246 4 249 1 248 2 250 2 56 2 55 3 251 3 175 2 177 2 253 2 178 3 179 3 120 1 121 2 122 2 182 4 124 1 61 6 183 1 259 2 
11 1 182 4 24 1 204 4 2 1 107 1 4 1 149 1 224 1 218 1 143 1 170 1 
126 1 0 1 2 1 3 2 4 1 6 2 130 1 131 4 132 2 133 2 134 2 135 1 11 1 138 2 137 1 139 4 143 1 144 2 24 1 25 1 149 1 150 1 32 2 153 4 35 3 36 2 157 2 39 4 158 2 159 1 161 3 42 2 165 3 43 2 46 2 170 1 48 1 52 1 51 2 56 2 55 3 175 2 176 1 177 2 178 2 179 2 181 2 182 4 61 6 183 1 62 1 185 1 187 2 189 2 188 1 191 4 195 1 67 1 68 2 204 4 76 2 209 1 78 1 80 1 84 1 212 2 215 2 216 1 93 1 94 1 219 2 97 1 96 1 95 2 222 4 98 2 224 1 102 2 232 2 104 1 234 4 106 1 107 1 108 1 238 1 110 2 111 1 240 1 112 2 241 1 115 1 116 1 245 1 246 4 249 1 248 2 250 2 251 2 253 2 120 1 121 2 122 2 124 1 259 2 
182 1 204 1 4 1 149 1 143 1 
0 1 126 1 189 3 191 4 3 2 4 1 192 1 195 1 67 1 68 2 6 2 130 1 131 4 204 4 133 2 134 2 135 1 76 2 11 1 139 3 18 1 138 2 78 1 143 1 84 1 22 1 215 2 148 1 24 1 25 1 149 1 218 1 93 1 219 2 153 4 97 1 35 3 222 4 96 1 95 3 98 2 157 3 224 1 39 5 158 2 159 1 161 3 104 1 105 1 234 5 42 2 236 1 107 1 165 3 237 1 110 3 238 1 111 1 46 2 45 2 240 1 170 1 49 1 241 1 51 3 116 1 245 1 246 4 248 2 250 2 56 2 55 3 251 3 175 2 177 2 253 2 178 3 179 3 120 1 121 2 254 1 122 2 182 4 124 1 61 6 183 1 259 2 
0 1 126 1 189 3 191 4 3 2 4 1 192 1 195 1 67 1 68 2 6 2 130 1 131 4 204 4 133 2 134 2 135 1 76 2 11 1 139 3 18 1 138 2 78 1 84 1 22 1 89 1 215 2 148 1 24 1 25 1 149 1 218 1 93 1 219 2 153 4 97 1 35 3 222 4 96 1 95 3 98 2 157 3 224 1 39 5 158 2 159 1 161 3 104 1 105 1 234 5 42 2 236 1 107 1 165 3 237 1 110 3 238 1 111 1 46 2 45 2 240 1 170 1 49 1 241 1 51 3 116 1 245 1 246 4 248 2 250 2 56 2 55 3 251 3 175 2 177 2 253 2 178 3 179 3 120 1 121 2 254 1 122 2 182 4 124 1 61 6 183 1 259 2 
0 1 126 1 2 1 4 1 3 2 6 9 130 1 131 4 133 2 134 9 135 1 11 1 138 9 139 8 20 1 143 1 22 8 24 1 148 1 25 1 149 1 29 1 32 2 153 6 35 3 157 6 39 8 158 2 159 8 161 3 162 1 42 2 165 17 43 2 45 2 46 2 170 1 49 4 51 6 55 10 56 2 175 2 177 2 179 6 178 6 57 1 181 2 182 4 61 6 183 1 187 2 189 6 190 1 191 6 192 8 195 1 67 1 68 2 204 4 208 1 76 2 78 1 79 1 84 1 88 1 215 2 216 1 218 1 93 1 219 2 97 1 95 6 96 1 222 4 98 2 224 1 104 1 105 4 232 2 234 8 236 1 107 1 237 4 238 8 110 6 111 1 240 8 112 2 241 1 113 1 116 1 245 1 246 6 248 2 250 2 251 6 253 9 120 1 121 2 254 1 122 2 124 1 258 1 259 2 
220 1 246 1 151 1 
54 1 246 1 
160 1 246 1 
160 1 246 1 
241 1 13 1 35 1 98 1 246 1 61 1 
241 1 98 1 246 1 205 1 193 1 92 1 61 1 
241 1 35 1 127 1 98 1 140 1 246 1 193 1 196 1 123 1 205 1 92 1 61 1 
246 1 83 1 
160 1 246 1 
54 1 246 1 
54 1 246 1 
59 1 246 1 225 1 198 1 
77 1 246 1 31 1 
12 1 14 1 222 2 246 2 192 1 55 1 6 1 159 1 70 1 160 1 22 1 202 2 233 1 165 2 238 1 30 1 256 1 
242 1 
12 1 192 1 55 1 6 1 159 1 70 1 22 1 233 1 125 1 165 2 238 1 30 1 256 1 
138 2 137 1 55 1 6 1 227 1 159 1 253 2 165 3 238 1 134 2 240 1 48 2 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
138 2 137 1 55 1 6 1 227 1 159 1 253 2 165 3 238 1 134 2 240 1 48 2 
185 1 188 1 189 2 191 4 3 1 195 1 68 2 6 1 131 4 132 2 133 2 134 1 209 1 76 2 138 1 137 1 139 2 78 1 212 2 144 2 215 2 25 1 150 1 152 1 219 2 153 4 94 1 97 1 35 3 96 1 95 2 222 4 36 2 98 2 157 2 39 4 158 2 159 1 102 2 161 3 104 1 232 2 234 4 106 1 42 2 108 1 165 3 238 1 110 2 111 1 46 2 240 1 48 1 52 1 241 1 51 2 115 1 246 4 248 2 55 2 56 2 250 2 251 2 175 2 176 1 177 2 253 1 178 2 179 2 121 2 122 2 61 6 62 1 259 2 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 156 2 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 215 1 259 1 
219 1 95 1 222 3 189 1 156 2 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
138 1 137 1 197 1 55 1 6 1 227 1 159 1 253 1 165 2 238 1 134 1 240 1 48 1 
219 1 95 1 222 3 189 1 156 2 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 57 1 215 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 43 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
127 3 189 1 193 1 196 2 6 2 130 1 131 2 205 1 133 1 134 2 207 1 76 1 138 2 137 1 17 2 139 1 140 2 78 1 215 1 92 1 151 3 152 1 219 1 154 1 97 1 222 2 35 2 95 1 98 1 37 1 157 1 39 2 158 1 227 1 159 1 104 1 234 2 42 1 163 1 165 3 44 1 238 1 110 1 46 1 240 1 48 2 51 1 241 1 244 1 246 3 248 1 55 4 250 1 251 1 175 1 177 1 253 2 179 1 178 1 122 1 181 1 123 2 61 2 259 1 
219 1 222 3 95 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 181 1 215 1 259 1 
189 1 191 2 3 1 195 1 68 1 6 1 131 2 132 1 133 1 134 1 76 1 138 1 137 1 139 1 212 1 144 1 215 1 25 1 219 1 153 2 94 1 96 1 95 1 222 2 36 1 98 1 157 1 39 2 158 1 159 1 102 1 161 3 232 1 234 2 42 1 165 3 238 1 110 1 111 1 46 1 240 1 48 1 51 1 246 2 248 1 55 1 56 1 250 1 251 1 175 1 176 1 177 1 253 1 178 1 179 1 121 1 122 1 61 3 259 1 
36 1 138 1 137 1 55 1 6 1 227 1 159 1 253 1 165 2 238 1 134 1 240 1 48 1 
187 1 189 1 191 2 3 1 195 1 68 1 131 2 132 1 133 1 76 1 139 2 212 1 144 1 215 1 148 1 25 1 218 1 32 1 153 2 219 1 95 1 96 1 222 2 36 1 98 1 157 1 39 2 158 1 102 1 161 3 232 1 234 2 42 1 165 1 43 1 110 1 111 1 46 1 112 1 51 1 246 2 248 1 56 1 250 1 251 1 175 1 176 1 177 1 178 1 179 1 121 1 122 1 181 1 61 3 259 1 
189 1 191 2 3 1 195 1 68 1 6 1 131 2 132 1 133 1 134 1 76 1 138 1 137 1 139 1 212 1 144 1 215 1 25 1 219 1 153 2 94 1 96 1 95 1 222 2 36 1 98 1 157 1 39 2 158 1 159 1 102 1 161 3 232 1 234 2 42 1 165 3 238 1 110 1 111 1 46 1 240 1 48 1 51 1 246 2 248 1 55 1 56 1 250 1 251 1 175 1 176 1 177 1 253 1 178 1 179 1 121 1 57 1 122 1 61 3 259 1 
189 1 191 2 3 1 192 1 195 1 68 1 6 1 131 2 132 1 133 1 134 1 76 1 138 1 139 1 212 1 144 1 22 1 215 1 148 1 25 1 218 1 219 1 153 2 96 1 95 1 222 2 36 1 98 1 157 1 39 2 158 1 159 1 102 1 161 3 232 1 234 2 42 1 165 3 238 1 110 1 111 1 46 1 240 1 51 1 246 2 248 1 55 1 56 1 250 1 251 1 175 1 176 1 177 1 253 1 179 1 178 1 121 1 57 1 122 1 61 3 259 1 
219 1 95 1 222 2 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 131 2 234 2 42 1 165 2 133 1 43 1 110 1 238 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 250 1 55 1 251 1 253 1 179 1 178 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 181 1 215 1 259 1 
219 1 222 3 95 1 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 222 3 95 1 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 222 3 95 1 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
219 1 222 2 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 2 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 259 1 
219 1 222 3 95 1 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 215 1 259 1 
229 1 153 1 232 1 246 1 191 1 
229 1 153 1 246 1 191 1 68 1 
153 1 1 1 232 1 155 1 246 1 191 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
127 4 187 1 189 1 191 2 193 1 196 3 68 1 6 1 130 1 131 2 205 1 133 1 134 1 76 1 138 1 137 1 17 1 139 2 140 3 78 1 215 1 92 1 32 1 219 1 153 2 97 1 35 3 95 1 222 2 98 1 157 1 39 2 158 1 227 1 159 1 232 1 104 1 234 2 42 1 165 2 43 1 110 1 238 1 46 1 240 1 48 1 112 1 51 1 241 1 246 2 248 1 250 1 55 2 56 1 251 1 175 1 177 1 253 1 179 1 178 1 121 1 181 1 122 1 123 3 61 3 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 57 1 215 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 156 2 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 121 1 181 1 215 1 259 1 
219 1 222 3 95 1 187 1 189 1 156 2 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 181 1 215 1 32 1 259 1 
219 1 222 3 95 1 187 1 189 1 157 1 39 2 6 1 158 1 159 1 227 1 160 1 234 2 131 3 42 1 165 2 133 1 43 1 238 1 110 1 134 1 240 1 48 1 112 1 76 1 51 1 137 1 138 1 139 2 248 1 55 1 250 1 251 1 253 1 179 1 178 1 181 1 215 1 32 1 259 1 
219 1 95 1 222 3 189 1 157 1 39 2 6 1 158 1 159 1 160 1 234 2 131 3 42 1 133 1 165 2 238 1 110 1 134 1 240 1 48 1 76 1 51 1 137 1 138 1 139 1 248 1 55 1 250 1 251 1 253 1 179 1 178 1 215 1 259 1 
253 1 137 1 138 1 165 2 55 1 238 1 134 1 6 1 240 1 48 1 159 1 
97 1 127 3 35 2 33 1 98 1 3 1 193 1 196 2 6 1 199 1 159 1 231 1 130 1 104 1 164 1 165 2 238 1 46 1 47 1 48 1 241 1 210 1 137 1 17 1 140 2 78 1 246 4 174 1 55 2 175 1 85 1 177 1 122 1 255 1 123 2 90 1 92 1 61 2 184 1 256 1 151 3 
97 1 127 3 35 2 33 1 98 1 193 1 196 2 38 1 6 1 199 1 159 1 102 1 103 1 200 1 104 1 132 1 164 1 165 2 238 1 46 1 47 1 48 1 241 1 137 1 17 1 140 2 246 4 141 1 55 1 212 1 175 1 144 1 177 1 214 1 122 1 255 1 123 2 90 1 150 1 92 1 61 2 28 1 256 1 151 3 
153 1 95 1 189 1 191 1 157 1 39 1 6 1 159 1 229 1 160 1 105 1 234 1 72 1 165 2 237 1 110 1 238 1 134 1 45 1 240 1 48 1 49 1 51 1 139 1 138 1 137 1 246 1 55 1 251 1 253 1 178 1 179 1 
49 1 51 1 95 1 137 1 138 1 139 1 189 1 157 1 55 1 251 1 39 1 6 1 159 1 253 1 179 1 178 1 105 1 234 1 165 2 237 1 238 1 110 1 134 1 240 1 48 1 
95 3 189 3 157 3 39 3 6 1 159 1 105 1 234 3 165 2 237 1 110 3 238 1 134 1 240 1 171 1 48 1 49 3 51 3 139 3 138 1 137 1 55 1 251 3 253 1 178 3 179 3 
95 1 189 1 157 1 39 1 6 1 159 1 105 1 234 1 165 2 237 1 110 1 238 1 134 1 240 1 48 1 49 1 51 1 139 1 138 1 137 1 117 1 55 1 251 1 253 1 178 1 179 1 
49 1 138 1 137 1 117 1 55 1 6 1 159 1 253 1 165 2 237 1 238 1 134 1 240 1 48 1 
219 1 222 2 95 3 189 3 157 3 39 4 6 1 158 1 159 1 105 1 131 2 234 4 42 1 133 1 165 2 237 1 110 3 238 1 134 1 240 1 48 1 76 1 49 2 51 3 114 1 139 3 138 1 137 1 248 1 250 1 55 1 251 3 253 1 178 3 179 3 121 1 57 1 215 1 259 1 
7 1 41 1 165 1 
230 1 165 1 21 2 75 1 
230 1 165 1 211 1 118 1 75 1 
41 1 58 1 71 1 165 1 
41 1 19 1 
127 1 35 1 17 1 140 1 123 1 196 1 
127 1 35 1 17 1 140 1 205 1 123 1 196 1 
241 1 98 1 212 1 87 1 102 1 132 1 150 1 
241 1 97 1 104 1 98 1 
219 1 222 1 114 1 131 1 234 2 189 1 168 1 
234 1 189 1 
219 1 160 1 222 1 131 1 234 1 246 1 
234 1 189 1 
160 1 222 1 131 1 246 1 
192 1 
22 1 
22 1 
48 1 
137 1 
48 1 
186 1 117 1 192 1 55 1 6 1 119 1 159 1 22 1 180 1 203 1 165 2 238 1 109 1 256 1 63 1 
186 2 192 2 55 2 6 2 119 2 159 2 22 2 180 2 203 2 26 1 165 4 238 2 109 2 256 2 257 1 63 2 
186 1 222 2 77 1 16 1 246 1 192 1 55 1 6 1 119 1 86 2 159 1 160 1 22 1 180 1 203 1 165 2 238 1 109 1 256 1 63 1 
217 1 
160 1 246 2 60 1 151 2 
160 1 246 2 9 1 151 2 
186 1 222 1 96 1 98 1 192 1 3 1 195 1 6 1 159 1 102 1 161 2 203 1 132 1 165 3 9 1 109 1 238 1 111 1 46 1 10 1 16 1 246 2 55 2 212 1 175 1 176 1 119 1 86 1 144 1 177 1 22 1 180 1 122 1 217 1 148 1 25 1 60 1 61 2 256 1 151 2 257 1 63 1 152 1 
180 1 172 1 125 1 238 1 159 1 
186 1 97 1 222 1 127 4 35 3 98 1 192 1 193 1 196 3 6 1 159 1 130 1 104 1 203 1 205 1 165 2 9 1 109 1 238 1 46 1 241 1 77 1 16 1 17 1 140 3 246 3 78 1 55 3 175 1 119 1 86 1 177 1 22 1 180 1 122 1 217 1 59 1 123 3 92 1 60 1 61 2 256 1 151 2 63 1 152 1 
186 1 222 1 77 2 16 1 246 3 192 1 55 1 6 1 119 1 86 1 159 1 160 1 22 1 180 1 203 1 165 2 238 1 109 1 256 1 63 1 
186 1 192 1 55 1 6 1 119 1 159 1 22 1 180 1 203 1 26 1 165 2 238 1 109 1 256 1 63 1 
186 2 172 1 192 2 55 2 6 2 119 2 159 2 22 2 180 2 203 2 125 1 26 1 165 4 238 2 109 2 256 2 63 2 
186 1 172 1 192 1 55 1 6 1 119 1 159 1 22 1 180 1 203 1 125 1 165 2 238 1 109 1 256 1 63 1 
186 1 192 1 55 1 6 1 119 1 159 1 22 1 180 1 203 1 165 2 238 1 109 1 256 1 257 1 63 1 
222 2 77 1 53 1 246 2 192 1 142 2 55 1 81 1 198 1 6 1 226 1 159 1 69 1 160 1 22 1 91 1 165 2 238 1 256 1 169 1 
97 1 222 1 127 3 35 2 98 1 192 1 193 1 196 2 6 1 226 1 159 1 69 1 129 1 130 1 104 1 235 1 205 1 165 2 238 1 46 1 169 1 241 1 77 1 53 1 17 1 140 2 246 1 78 1 142 1 81 1 55 3 213 1 177 1 22 1 59 1 123 2 91 1 92 1 61 1 256 1 152 1 
201 1 222 1 114 1 142 1 81 1 228 1 
160 1 129 1 
160 1 235 1 
153 1 222 1 77 1 53 1 246 2 191 1 192 1 142 1 55 1 81 2 213 1 6 1 226 1 228 1 159 1 69 1 22 1 201 1 91 1 165 2 238 1 256 1 
153 1 222 1 191 1 192 1 6 1 226 1 159 1 228 1 69 1 201 1 165 2 238 1 53 1 77 1 15 1 114 1 246 2 142 1 81 2 55 1 213 1 22 1 91 1 256 1 31 1 
213 1 
153 1 222 2 96 1 98 1 191 1 192 1 3 1 195 1 6 1 226 1 228 1 159 1 69 1 102 1 161 4 129 1 201 1 235 1 132 1 165 3 238 1 111 1 46 1 169 1 136 1 77 2 53 1 246 3 142 2 56 1 81 2 55 2 212 1 213 1 176 1 144 1 177 1 22 1 59 2 148 1 91 1 25 1 61 2 256 1 152 1 
69 1 53 1 91 1 125 1 81 1 226 1 
127 5 191 1 193 1 192 1 196 4 6 1 69 1 129 1 201 1 130 1 205 1 77 2 17 1 140 4 78 1 142 2 81 2 213 1 22 1 91 1 92 1 152 1 153 1 35 4 222 2 97 1 98 1 226 1 159 1 228 1 104 1 235 1 165 2 238 1 46 1 169 1 241 1 53 1 246 3 55 3 56 1 177 1 59 2 123 4 61 2 256 1 
69 1 53 1 91 1 125 1 81 1 226 1 
136 1 222 2 34 1 77 1 53 1 246 2 192 1 142 2 55 1 81 1 198 1 6 1 226 1 159 1 160 1 22 1 165 2 206 1 238 1 256 1 169 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 10 106 179 193 224 131 81 40 172 144 36 4 38 16 103 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.NullPointerException 10 106 179 193 224 131 81 40 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V ERROR java.lang.NullPointerException 10 106 179 193 185 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V ERROR java.lang.NullPointerException 10 106 179 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V ERROR java.lang.NullPointerException 29 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V ERROR java.lang.NullPointerException 10 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List; | RETURN | 32208 | return null
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 197 1 129 1 11 1 184 1 
62 1 235 2 77 1 
114 1 197 1 129 1 11 1 184 1 13 1 
1 1 232 3 52 1 163 2 236 1 151 1 152 2 169 2 205 1 195 2 55 1 
146 1 232 2 11 1 74 1 131 1 112 1 52 1 163 1 236 1 151 1 152 4 169 2 81 1 65 1 195 2 55 1 
236 1 151 1 18 1 52 1 
141 1 198 1 232 1 52 1 163 2 236 1 151 1 152 2 169 1 195 1 55 1 
20 1 231 1 129 1 146 2 232 1 11 2 131 1 110 1 200 1 52 1 163 1 236 1 152 3 169 1 81 1 154 1 82 1 65 1 195 1 55 1 
20 1 231 1 129 1 146 2 232 1 11 2 131 1 110 1 52 1 163 1 236 1 152 3 169 1 81 1 154 1 82 1 65 1 195 1 55 1 
46 1 146 1 129 1 232 1 11 1 88 1 200 1 52 1 163 1 236 1 151 1 152 2 169 1 82 1 195 1 55 1 239 1 
25 1 146 1 129 1 232 1 11 1 88 1 200 1 52 1 163 1 236 1 151 1 152 2 169 1 82 1 195 1 55 1 239 1 
146 1 129 1 232 1 11 1 88 1 75 1 35 1 52 1 163 1 236 1 91 1 151 1 152 2 169 1 82 1 195 1 55 1 239 1 
146 1 129 1 232 1 11 1 88 1 75 1 200 1 35 1 52 1 163 1 236 1 91 1 151 1 152 2 169 1 82 1 195 1 55 1 239 1 
1 1 232 2 52 1 163 1 236 1 151 1 152 3 169 2 195 1 55 1 
232 2 52 1 163 1 236 1 203 1 190 2 219 1 151 1 152 3 195 1 
236 1 203 1 190 1 152 2 151 1 232 1 195 1 61 1 163 2 52 1 
232 1 52 1 163 1 236 1 203 1 190 1 149 1 151 1 152 2 195 1 
178 1 236 1 203 1 190 1 152 2 151 1 232 1 195 1 163 1 52 1 
85 1 146 1 232 1 11 1 131 1 52 1 163 1 5 1 236 1 203 1 190 1 37 1 151 1 152 3 81 4 174 1 195 1 102 1 
180 1 232 1 52 1 163 1 236 1 203 1 79 1 190 1 151 1 152 2 195 1 
20 1 231 1 146 1 232 1 11 1 131 1 110 1 52 1 163 1 236 1 203 1 190 1 151 1 152 3 81 1 154 1 195 1 102 1 
146 1 232 1 74 1 11 1 131 1 52 1 163 1 236 1 203 1 190 1 151 1 152 3 40 1 81 2 195 1 102 1 
0 3 161 1 43 1 
0 1 
1 1 123 1 127 3 126 1 128 2 4 1 129 1 131 1 133 2 137 4 141 1 143 1 10 3 144 1 11 2 147 3 14 1 150 1 149 2 152 4 16 1 153 1 156 4 158 1 22 1 21 2 160 1 23 4 24 2 30 3 29 2 163 5 164 1 36 1 166 4 165 1 167 2 38 1 39 3 40 1 172 1 42 3 175 1 44 3 48 1 179 2 181 3 51 3 185 2 188 1 189 2 190 2 191 1 192 1 193 2 56 3 197 2 203 1 204 1 67 1 207 6 211 14 73 2 74 1 80 1 217 4 219 1 81 2 82 1 83 2 84 1 224 2 227 5 228 5 230 1 232 4 233 1 236 1 90 3 94 1 95 1 238 2 98 3 102 1 240 3 106 2 107 1 242 3 244 3 112 1 246 4 249 2 120 1 122 1 121 1 
1 1 123 1 127 3 126 1 197 2 128 2 129 1 4 1 131 1 133 2 203 1 204 1 137 4 207 6 67 1 211 4 143 1 10 3 144 1 74 1 73 2 11 2 147 2 14 1 217 4 149 2 150 1 219 1 152 3 153 1 16 1 81 2 82 1 156 4 224 2 227 5 228 5 158 1 21 2 22 1 23 4 160 1 24 2 232 2 233 1 29 2 30 3 163 3 164 1 236 1 36 1 167 2 166 4 90 3 165 1 38 1 39 3 40 1 94 1 95 1 238 2 172 1 42 3 175 1 98 2 102 1 44 3 179 2 48 1 106 2 240 3 107 1 181 2 185 2 51 3 244 3 188 1 246 4 189 2 190 1 191 1 249 2 193 2 120 1 121 1 122 1 56 3 
158 1 22 1 188 1 164 1 166 4 150 1 38 1 219 1 16 1 137 4 175 1 122 1 
1 1 123 1 127 4 2 2 197 2 129 1 4 1 131 1 203 1 204 1 137 4 207 4 208 2 71 4 211 8 144 1 74 1 11 2 14 1 78 1 218 2 149 2 150 1 219 1 152 3 153 1 16 1 81 3 82 1 155 4 156 2 224 2 19 2 226 2 158 1 22 1 23 4 232 2 233 1 30 4 163 3 89 4 164 1 236 1 36 1 166 4 165 1 92 1 38 1 170 3 40 2 94 1 95 1 172 1 175 1 102 1 47 1 49 2 48 1 109 1 243 1 188 1 246 2 113 1 248 2 190 1 252 1 120 1 122 1 
1 1 123 1 127 3 197 2 128 2 3 2 129 1 4 1 131 1 133 2 203 1 204 1 137 4 207 6 210 2 211 4 143 1 10 2 144 1 74 1 73 2 11 2 147 2 215 2 217 4 150 1 149 2 152 4 219 1 153 1 16 1 81 2 82 1 221 2 224 2 156 4 227 4 228 4 158 1 22 1 21 2 23 4 24 2 232 2 233 1 29 2 30 3 163 3 236 1 164 1 36 1 90 2 166 4 165 1 38 1 39 2 40 1 94 1 95 1 238 2 172 1 42 4 96 1 175 1 98 2 44 2 102 1 179 2 48 1 106 2 240 2 181 2 107 1 185 2 51 2 187 2 244 2 188 1 246 4 189 2 190 1 191 1 250 2 249 2 193 2 120 1 56 2 122 1 
1 1 123 1 127 3 197 2 128 2 3 2 129 1 4 1 131 1 133 2 203 1 204 1 137 4 207 6 210 2 211 4 143 1 10 2 144 1 74 1 73 2 11 2 147 2 14 1 215 2 217 4 150 1 149 2 152 3 219 1 153 1 16 1 81 2 82 1 221 2 224 2 156 4 227 4 228 4 158 1 22 1 21 2 23 4 24 2 232 2 233 1 29 2 30 3 163 3 236 1 164 1 36 1 90 2 166 4 165 1 38 1 39 2 40 1 94 1 95 1 238 2 172 1 42 4 96 1 175 1 98 2 44 2 102 1 179 2 48 1 106 2 240 2 181 2 107 1 185 2 51 2 187 2 244 2 188 1 246 4 247 1 189 2 190 1 191 1 250 2 249 2 193 2 120 1 56 2 122 1 
1 1 123 1 127 3 126 1 197 2 128 2 129 1 4 1 131 1 133 2 203 1 7 1 204 1 137 4 207 6 67 1 211 4 143 1 10 3 144 1 74 1 73 2 11 2 147 2 148 1 217 4 149 2 150 1 219 1 152 3 153 1 16 1 81 2 82 1 156 4 224 2 227 5 228 5 158 1 21 2 22 1 23 4 160 1 24 2 232 2 233 1 29 2 30 3 163 3 164 1 236 1 36 1 167 2 166 4 90 3 165 1 38 1 39 3 40 1 94 1 95 1 238 2 172 1 42 3 175 1 98 2 102 1 44 3 176 1 179 2 48 1 106 2 240 3 181 2 185 2 51 3 244 3 188 1 246 4 189 2 190 1 249 2 193 2 120 1 122 1 56 3 
123 1 1 1 127 3 3 2 128 2 4 1 129 1 131 1 133 2 137 4 143 1 144 1 10 2 11 2 147 2 14 1 149 2 150 1 152 3 15 1 16 1 153 1 17 2 156 4 158 1 21 2 22 1 23 4 24 2 30 3 29 2 163 3 164 1 36 1 165 1 166 4 38 1 169 1 39 2 40 1 171 2 172 1 42 4 175 1 44 2 48 1 179 2 181 2 51 2 185 2 187 2 188 1 189 2 191 1 193 2 55 1 56 2 196 1 197 2 202 1 204 1 65 1 66 1 207 6 210 2 70 2 211 4 72 2 73 2 74 1 76 1 215 2 216 1 217 4 81 2 82 1 221 2 224 2 227 4 228 4 232 2 233 1 236 1 90 2 94 1 95 1 238 2 96 1 98 2 104 1 240 2 106 2 107 1 244 2 245 2 246 4 247 1 115 1 249 2 250 2 117 1 118 1 120 1 122 1 
234 1 
123 1 1 1 126 1 127 3 128 2 4 1 129 1 131 1 133 2 136 1 137 4 141 1 143 1 10 3 144 1 11 2 147 2 148 1 14 1 150 1 149 2 152 3 16 1 153 1 156 4 158 1 22 1 21 2 160 1 23 4 24 2 30 3 29 2 163 4 164 1 36 1 165 1 166 4 167 2 38 1 39 3 40 2 172 1 42 3 175 1 44 3 176 1 48 1 179 2 181 2 51 3 185 2 188 1 189 2 190 1 191 1 193 2 56 3 197 2 203 1 204 1 67 1 207 6 211 4 73 2 74 1 217 4 219 1 81 3 82 1 224 2 227 5 228 5 232 2 233 1 236 1 90 3 94 1 238 2 95 1 98 2 102 1 240 3 106 2 107 1 244 3 246 4 249 2 120 1 122 1 121 1 
166 1 38 1 16 1 137 1 175 1 
1 1 123 1 127 3 126 1 197 2 128 2 129 1 4 1 131 1 133 2 203 1 204 1 137 4 207 6 67 1 211 4 143 1 10 3 144 1 74 1 73 2 11 2 147 2 148 1 217 4 149 2 150 1 219 1 152 3 153 1 16 1 81 2 82 1 156 4 224 2 227 5 228 5 158 1 21 2 22 1 23 4 160 1 24 2 232 2 233 1 29 2 30 3 163 3 164 1 236 1 36 1 167 2 166 4 90 3 165 1 38 1 39 3 40 1 94 1 95 1 238 2 172 1 42 3 175 1 98 2 102 1 44 3 176 1 179 2 48 1 106 2 240 3 107 1 181 2 185 2 51 3 244 3 188 1 246 4 189 2 190 1 191 1 249 2 193 2 120 1 121 1 56 3 
1 1 123 1 127 3 126 1 197 2 128 2 129 1 4 1 131 1 133 2 203 1 204 1 137 4 207 6 67 1 211 4 143 1 10 3 144 1 74 1 73 2 11 2 147 2 148 1 217 4 149 2 150 1 219 1 152 3 153 1 81 2 82 1 156 4 224 2 227 5 228 5 158 1 21 2 22 1 23 4 160 1 24 2 232 2 233 1 29 2 30 3 163 3 164 1 236 1 36 1 167 2 166 4 90 3 165 1 168 1 38 1 39 3 40 1 94 1 95 1 238 2 172 1 42 3 175 1 98 2 102 1 44 3 176 1 179 2 48 1 106 2 240 3 107 1 181 2 185 2 51 3 244 3 188 1 246 4 189 2 190 1 191 1 249 2 193 2 120 1 121 1 56 3 
1 1 123 1 126 1 127 3 128 2 3 2 4 1 129 1 131 1 132 1 133 2 137 4 143 3 10 3 144 1 11 2 147 4 148 1 150 1 149 2 152 7 16 1 153 1 156 6 158 1 22 1 21 2 160 1 23 4 24 2 30 3 29 2 163 5 164 1 36 1 165 1 166 4 167 2 38 1 39 3 40 1 172 1 42 5 175 1 44 3 176 1 48 1 179 2 181 4 51 3 185 2 187 2 188 1 189 2 190 3 191 1 193 2 56 3 197 2 203 3 204 1 67 1 207 6 210 2 211 6 73 2 74 1 215 2 217 4 219 1 81 2 82 1 221 2 224 2 227 5 228 5 232 4 233 1 236 3 90 3 94 1 238 2 95 1 96 1 98 4 102 1 103 1 105 1 240 3 106 2 107 1 244 3 246 6 249 2 250 2 120 3 122 1 
211 1 230 1 182 1 
211 1 86 1 
211 1 253 1 
211 1 86 1 
211 1 86 1 
211 1 253 1 
127 1 125 1 157 1 211 1 129 1 11 1 88 1 75 1 214 1 222 1 239 1 207 1 
127 1 211 1 129 1 11 1 207 1 6 1 
157 1 211 1 129 1 11 1 88 1 239 1 207 1 
211 1 253 1 
211 1 33 1 
71 1 211 1 26 1 111 1 
211 1 155 1 28 1 
140 2 211 2 23 2 50 1 232 1 87 1 12 1 31 1 163 1 236 1 203 1 190 1 152 2 253 1 120 1 138 1 208 1 
241 1 
50 1 232 1 87 1 31 1 163 1 236 1 203 1 190 1 152 2 18 1 120 1 138 1 208 1 
236 1 152 2 169 1 143 1 181 1 232 1 147 1 120 1 55 1 98 1 163 1 
142 1 143 1 181 2 232 1 147 2 163 1 236 1 152 3 169 2 120 1 55 1 98 2 
127 3 197 2 128 2 129 1 131 1 133 2 202 1 204 1 65 1 66 1 207 6 141 1 70 2 211 4 143 1 72 2 10 2 73 2 11 2 76 1 147 1 216 1 149 2 217 4 15 1 152 3 153 1 81 1 82 1 17 2 156 4 224 2 227 4 228 4 21 2 23 4 232 1 24 2 233 1 29 2 30 3 163 2 236 1 90 2 169 1 39 2 40 1 94 1 238 2 171 2 42 2 98 1 44 2 104 1 179 2 240 2 106 2 181 1 185 2 51 2 187 2 244 2 245 2 246 4 189 2 115 1 249 2 117 1 118 1 120 1 193 2 55 1 56 2 196 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 1 228 1 128 1 23 1 24 1 232 1 163 1 236 1 134 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 215 1 217 1 152 2 249 1 250 1 221 1 120 1 193 1 55 1 56 1 
142 1 143 1 181 2 232 1 147 2 163 1 236 1 152 3 169 2 120 1 55 1 98 2 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 1 197 1 128 1 21 1 23 1 232 1 131 1 30 2 163 1 133 1 236 1 39 1 169 1 40 1 94 1 65 1 42 1 207 2 98 1 44 1 179 1 106 1 240 1 211 2 143 1 10 1 181 1 11 1 147 1 187 1 244 1 246 2 189 1 217 1 149 1 249 1 152 3 81 1 193 1 120 1 55 1 224 1 156 2 
142 1 143 1 181 1 232 1 147 1 163 1 236 1 152 2 169 1 171 1 120 1 55 1 98 1 
197 1 3 1 128 1 131 1 133 1 207 3 70 1 210 1 211 2 72 1 10 1 11 1 73 1 215 1 149 1 217 2 219 1 152 1 81 1 17 1 221 1 224 1 156 2 227 2 228 2 21 1 23 2 24 1 233 1 30 3 29 1 90 1 39 1 40 1 94 1 238 1 171 1 42 2 102 1 44 1 179 1 240 1 106 1 185 1 51 1 187 1 244 1 245 1 246 2 189 1 249 1 250 1 118 1 193 1 56 1 
197 1 128 1 131 1 133 1 65 1 136 1 207 3 70 1 211 2 143 1 72 1 10 1 73 1 11 1 147 1 149 1 217 2 152 3 81 1 17 1 156 2 224 1 227 2 228 2 21 1 23 2 232 1 24 1 233 1 29 1 30 3 163 1 236 1 90 1 169 1 39 1 40 1 94 1 238 1 171 1 42 1 98 1 44 1 179 1 240 1 106 1 181 1 185 1 51 1 187 1 244 1 245 1 246 2 189 1 249 1 118 1 120 1 193 1 55 1 56 1 
197 1 128 1 131 1 133 1 203 1 136 1 207 3 70 1 211 2 143 1 72 1 10 1 73 1 11 1 147 1 149 1 217 2 219 1 152 3 81 1 17 1 156 2 224 1 227 2 228 2 21 1 23 2 24 1 232 1 233 1 29 1 30 3 163 1 236 1 90 1 39 1 40 1 94 1 238 1 171 1 42 1 98 1 102 1 44 1 179 1 240 1 106 1 181 1 185 1 51 1 187 1 244 1 245 1 246 2 189 1 190 1 249 1 118 1 120 1 193 1 56 1 
227 2 228 2 128 1 3 1 23 2 24 1 232 1 29 1 163 1 236 1 90 1 39 1 169 1 238 1 42 2 98 1 44 1 210 1 179 1 142 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 51 1 244 1 215 1 217 2 250 1 152 2 249 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 1 128 1 23 2 232 1 163 1 236 1 169 1 39 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 147 1 185 1 244 1 217 2 152 2 249 1 120 1 193 1 55 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 73 1 147 1 51 1 185 1 244 1 217 3 152 2 249 1 253 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 73 1 147 1 51 1 185 1 244 1 217 3 152 2 249 1 253 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 2 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 185 1 244 1 215 1 217 2 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 73 1 147 1 51 1 185 1 244 1 217 3 152 2 249 1 253 1 120 1 193 1 55 1 56 1 
211 1 159 1 156 1 187 1 246 1 
211 1 21 1 159 1 156 1 246 1 
124 1 211 1 59 1 156 1 187 1 246 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
127 3 125 3 197 1 128 1 3 1 129 1 133 1 204 1 207 3 210 1 211 2 142 1 143 1 10 1 73 1 11 1 147 1 75 4 214 3 215 1 149 1 217 2 152 2 153 1 82 1 221 1 222 3 156 2 224 1 157 1 227 2 228 2 21 1 23 2 24 1 232 1 29 1 88 1 163 2 236 1 90 1 91 1 39 1 169 1 238 1 239 1 42 2 98 1 44 1 48 1 179 1 240 1 106 1 181 1 185 1 51 1 187 1 244 1 246 2 189 1 250 1 249 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 136 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 217 3 152 2 249 1 253 1 193 1 120 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 185 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 1 228 1 128 1 23 1 24 1 232 1 163 1 236 1 134 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 215 1 217 1 152 2 249 1 250 1 221 1 120 1 193 1 55 1 56 1 
227 1 228 1 128 1 23 1 24 1 232 1 163 1 236 1 134 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 215 1 217 1 152 2 249 1 250 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 210 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 215 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 51 1 244 1 217 3 152 2 249 1 253 1 193 1 120 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 51 1 244 1 217 3 152 2 249 1 253 1 193 1 120 1 55 1 56 1 
227 1 179 1 128 1 106 1 240 1 143 1 10 1 23 1 181 1 232 1 147 1 244 1 163 1 236 1 217 1 249 1 152 2 39 1 169 1 120 1 193 1 42 1 55 1 98 1 44 1 
142 1 143 1 181 1 232 1 147 1 163 1 236 1 152 2 169 1 120 1 55 1 98 1 209 1 
227 1 228 1 128 1 23 1 24 1 232 1 163 1 236 1 134 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 51 1 244 1 217 1 152 2 249 1 193 1 120 1 55 1 56 1 
227 1 179 1 128 1 106 1 240 1 143 1 10 1 23 1 181 1 232 1 147 1 244 1 163 1 236 1 217 1 249 1 152 2 39 1 169 1 120 1 193 1 42 1 55 1 98 1 44 1 
227 1 179 1 128 1 106 1 240 1 143 1 10 1 23 1 181 1 232 1 147 1 244 1 163 1 236 1 217 1 249 1 152 2 39 1 169 1 120 1 193 1 42 1 55 1 98 1 44 1 
227 1 228 1 3 1 128 1 23 1 24 1 232 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 51 1 244 1 217 1 152 2 249 1 193 1 120 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 185 1 51 1 244 1 217 3 152 2 249 1 253 1 193 1 120 1 55 1 56 1 
227 1 228 1 3 1 128 1 23 1 24 1 232 1 163 1 236 1 90 1 169 1 39 1 238 1 136 1 42 2 98 1 44 1 179 1 240 1 106 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 217 1 152 2 249 1 193 1 120 1 55 1 56 1 
227 2 228 2 3 1 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 2 98 1 44 1 179 1 240 1 106 1 143 1 181 1 10 1 73 1 147 1 185 1 51 1 244 1 217 3 152 2 249 1 253 1 193 1 120 1 55 1 56 1 
127 2 125 2 128 1 129 1 133 1 201 1 204 1 207 2 141 1 8 1 142 1 211 3 143 1 10 1 73 1 11 1 147 2 75 3 214 2 149 1 217 2 152 3 153 1 82 1 222 2 224 1 157 1 227 2 228 2 230 3 23 2 25 1 24 1 232 2 29 1 88 1 163 4 236 1 90 1 91 2 169 2 39 1 237 1 238 1 239 1 42 1 98 2 44 1 48 1 179 1 106 1 240 1 181 2 51 1 112 1 244 1 189 1 249 1 250 1 251 1 120 1 193 1 55 1 56 1 
227 2 228 2 128 1 23 3 24 1 232 1 29 1 163 1 236 1 90 1 169 1 39 1 238 1 42 1 98 1 44 1 179 1 106 1 142 1 240 1 143 1 10 1 181 1 73 1 147 1 51 1 244 1 217 3 152 2 249 1 250 1 253 1 221 1 120 1 193 1 55 1 56 1 
125 2 127 2 57 1 20 1 231 1 230 3 232 1 129 1 130 1 88 1 163 2 133 1 236 1 91 1 204 1 169 1 206 1 239 1 97 1 207 2 208 1 46 1 48 1 211 4 11 1 75 3 110 1 214 2 189 1 53 1 149 1 152 2 153 1 81 1 154 1 82 1 222 2 120 1 55 1 224 1 225 1 
125 2 127 2 57 1 230 3 232 1 129 1 130 1 88 1 163 1 133 1 236 1 91 1 204 1 169 1 206 1 66 1 239 1 97 1 207 2 208 1 68 1 45 1 70 1 211 4 72 1 180 1 11 1 75 3 214 2 245 1 53 1 189 1 79 1 149 1 152 2 153 1 17 1 220 1 222 2 120 1 54 1 55 1 224 1 225 1 
227 4 126 1 228 4 128 1 23 2 160 1 24 1 232 1 29 1 235 1 163 1 236 1 90 3 39 3 169 1 238 1 136 1 42 3 67 2 98 1 44 3 179 1 106 1 240 3 143 1 10 3 181 1 73 1 147 1 185 1 51 3 244 3 217 2 249 1 152 2 193 1 120 1 55 1 56 3 
227 3 126 1 228 3 160 1 232 1 199 1 163 1 236 1 90 3 39 3 169 1 42 3 67 3 98 1 44 3 240 3 143 1 10 3 181 1 147 1 51 3 244 3 152 2 120 1 55 1 56 3 
227 1 126 1 228 1 160 1 232 1 163 1 236 1 90 1 39 1 169 1 42 1 67 1 98 1 44 1 178 1 240 1 143 1 10 1 181 1 147 1 51 1 244 1 152 2 120 1 55 1 56 1 
178 1 143 1 160 1 181 1 232 1 147 1 163 1 236 1 152 2 169 1 120 1 55 1 67 1 98 1 
126 1 227 1 228 1 240 1 143 1 181 1 160 1 10 1 232 1 147 1 51 1 244 1 163 1 236 1 90 1 152 2 169 1 39 1 120 1 55 1 42 1 98 1 67 1 56 1 44 1 
227 1 126 1 228 1 159 1 160 1 232 1 163 1 236 1 167 1 90 1 39 1 169 1 42 1 67 1 98 1 44 1 211 1 240 1 143 1 145 1 10 1 181 1 147 1 51 1 244 1 246 1 152 2 253 1 120 1 156 1 55 1 56 1 
152 1 41 1 27 1 183 1 
63 1 152 1 205 1 34 1 100 1 
152 1 135 1 27 1 
63 1 152 1 119 2 205 1 
27 1 223 1 
204 1 153 1 129 1 11 1 
91 1 125 1 127 1 222 1 75 1 214 1 
17 1 72 1 129 1 11 1 66 1 162 1 245 1 
91 1 157 1 125 1 127 1 222 1 75 1 214 1 
227 1 211 1 29 1 
227 1 10 1 
217 1 211 1 23 1 253 1 
217 1 227 2 9 1 23 1 10 1 29 1 235 1 
227 1 10 1 
190 1 
203 1 
190 1 
169 1 
169 1 
55 1 
177 1 108 1 232 1 213 1 163 1 236 1 64 1 152 2 116 1 119 1 120 1 194 1 173 1 254 1 208 1 
177 1 108 1 232 1 213 1 163 1 236 1 64 1 152 2 116 1 18 1 119 1 120 1 173 1 101 1 254 1 208 1 
178 1 177 1 108 1 232 1 213 1 163 1 236 1 64 1 152 2 116 1 119 1 120 1 173 1 254 1 208 1 
177 2 108 2 232 2 213 2 32 1 163 2 236 2 64 2 152 4 116 2 119 2 120 2 194 1 173 2 254 2 208 2 
177 1 211 3 23 1 60 1 108 1 232 1 213 1 163 1 236 1 64 1 152 2 116 1 253 1 119 1 155 2 120 1 173 1 99 1 254 1 208 1 
177 1 108 1 232 1 213 1 32 1 163 1 236 1 64 1 152 2 116 1 119 1 120 1 173 1 254 1 208 1 
177 2 108 2 232 2 213 2 32 1 163 2 236 2 64 2 152 4 116 2 18 1 119 2 120 2 173 2 101 1 254 2 208 2 
177 1 211 1 23 2 60 1 108 1 232 1 213 1 163 1 236 1 64 1 152 2 116 1 253 1 119 1 155 1 120 1 173 1 99 2 254 1 208 1 
186 1 
211 2 230 2 212 1 253 1 
69 1 211 2 230 2 253 1 
229 1 230 2 23 1 60 1 232 1 131 1 233 1 30 2 163 2 133 1 236 1 64 1 40 1 94 1 65 1 173 1 99 1 207 2 208 1 177 1 141 1 69 1 70 1 211 2 72 1 212 1 108 1 213 1 11 1 186 1 245 1 189 1 149 1 116 1 152 3 118 1 81 1 17 1 119 1 120 1 194 1 224 1 254 1 
236 1 18 1 120 1 254 1 101 1 
157 1 125 3 127 3 230 2 23 1 60 1 232 1 129 1 88 1 163 3 133 1 236 1 91 1 64 1 204 1 173 1 239 1 99 1 207 2 208 1 177 1 141 1 69 1 48 1 71 1 211 3 212 1 108 1 213 1 11 1 75 4 186 1 214 3 189 1 149 1 116 1 152 2 153 1 82 1 119 1 155 1 222 3 120 1 224 1 254 1 
47 1 170 1 18 1 243 1 78 1 113 1 
58 1 23 2 232 1 26 1 163 1 236 1 89 2 93 1 170 1 139 1 208 1 47 1 211 2 113 1 218 1 116 1 152 2 119 1 253 1 155 1 120 1 
2 1 23 1 232 1 28 1 235 1 163 1 236 1 89 1 62 1 170 2 208 1 47 1 49 1 211 2 243 1 78 1 113 1 246 1 248 1 116 1 152 2 119 1 155 1 120 1 156 1 
49 1 
226 1 2 1 197 1 23 2 232 1 131 1 233 1 30 4 163 2 89 2 236 1 170 2 40 1 94 1 65 1 139 1 207 2 208 1 141 1 70 1 47 1 49 1 211 3 71 2 72 1 11 1 243 1 78 1 245 1 246 1 113 1 248 1 218 1 149 1 116 1 152 3 118 1 81 1 17 1 119 1 155 2 120 1 156 1 224 1 19 1 
47 1 170 1 18 1 243 1 78 1 113 1 
127 4 125 4 197 1 2 1 129 1 204 1 207 2 208 1 141 1 71 2 211 3 11 1 75 5 78 1 214 4 149 1 218 1 152 2 153 1 82 1 155 2 222 4 19 1 224 1 156 1 226 1 157 1 23 2 232 1 88 1 163 3 236 1 89 2 91 1 170 2 239 1 47 1 48 1 49 1 243 1 113 1 246 1 248 1 116 1 119 1 120 1 
47 1 211 2 23 2 26 1 232 1 243 1 78 1 163 1 113 1 89 2 236 1 218 1 152 2 116 1 170 1 253 1 119 1 155 1 120 1 208 1 
157 1 125 2 127 2 226 1 23 1 232 1 129 1 88 1 163 3 89 1 236 1 91 1 204 1 170 1 239 1 207 1 208 1 141 1 47 1 49 1 48 1 211 1 71 1 11 1 75 3 243 1 214 2 78 1 113 1 218 1 149 1 116 1 152 2 153 1 82 1 119 1 155 1 222 2 120 1 224 1 19 1 
89 1 248 1 2 1 170 1 23 1 235 1 
253 1 19 1 
226 1 253 1 
2 1 23 1 232 1 163 1 236 1 89 1 170 2 208 1 47 1 49 1 211 2 243 1 78 1 113 1 246 1 248 1 116 1 152 2 119 1 155 1 120 1 156 1 

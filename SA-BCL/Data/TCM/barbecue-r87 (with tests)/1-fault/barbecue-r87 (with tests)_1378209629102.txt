#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 239 90 3 209 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:outbit(ILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 5396 | / -> <<
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:encode([IILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 1 65 1 178 1 42 1 129 1 
40 2 150 1 75 1 
77 1 163 1 65 1 178 1 42 1 129 1 
257 1 44 1 119 1 132 1 
0 1 257 1 117 1 43 1 44 1 246 2 11 1 122 2 204 1 34 1 112 2 132 1 
133 2 114 1 0 1 191 1 42 1 44 1 246 1 104 1 7 1 122 1 204 1 62 1 205 1 34 1 17 1 178 2 180 1 112 3 132 1 85 1 
133 2 114 1 0 1 42 1 44 1 246 1 104 1 7 1 122 1 204 1 62 1 205 1 34 1 17 1 178 2 180 1 112 3 132 1 85 1 
133 1 240 1 0 1 257 1 191 1 42 1 44 1 246 1 263 1 122 1 204 1 81 1 34 1 178 1 17 1 112 2 132 1 
133 1 240 1 0 1 257 1 191 1 42 1 44 1 246 1 263 1 122 1 204 1 34 1 178 1 17 1 68 1 112 2 132 1 
133 1 240 1 0 1 257 1 42 1 44 1 246 1 145 1 263 1 122 1 204 1 126 1 34 1 178 1 17 1 236 1 112 2 132 1 
133 1 240 1 0 1 257 1 191 1 42 1 44 1 246 1 145 1 263 1 122 1 204 1 126 1 34 1 178 1 17 1 236 1 112 2 132 1 
0 2 257 1 12 1 204 1 122 2 34 1 246 1 44 1 112 3 132 1 
0 2 257 1 135 2 222 1 204 1 64 1 246 1 44 1 112 3 132 1 
0 1 200 1 257 1 135 1 222 1 204 1 246 2 44 1 112 2 132 1 
0 1 257 1 135 1 222 1 204 1 127 1 246 1 44 1 112 2 132 1 
133 1 114 1 0 1 257 1 135 1 222 1 44 1 246 1 7 1 204 1 62 1 205 1 178 1 180 1 182 1 112 3 85 1 132 1 
133 1 0 1 212 1 257 1 135 1 222 1 44 1 246 1 7 1 204 1 178 1 180 2 182 1 112 3 132 1 218 1 
0 1 257 1 135 1 222 1 204 1 69 1 246 1 44 1 112 2 132 1 
133 1 0 1 257 1 135 1 222 1 55 1 44 1 246 1 261 1 174 1 7 1 204 1 108 1 178 1 180 4 182 1 112 3 132 1 
0 1 257 1 135 1 222 1 44 1 246 1 47 1 204 1 112 2 151 1 132 1 
0 3 257 1 12 1 135 1 222 1 204 2 246 2 44 1 112 2 132 1 
133 1 0 2 257 1 212 1 135 2 222 1 225 1 44 1 246 1 7 1 204 2 178 1 180 1 182 1 112 4 132 1 
203 1 193 1 37 3 
37 1 
211 3 0 2 212 1 134 1 135 1 3 1 2 1 140 2 144 1 7 1 76 4 8 8 79 4 80 2 12 1 15 2 17 1 149 1 84 4 218 2 219 2 220 1 221 1 154 4 222 1 226 1 90 1 27 2 32 1 165 2 35 4 95 1 233 1 234 1 38 2 39 4 239 1 169 1 172 1 42 1 245 1 44 1 246 3 247 1 46 1 105 1 248 1 175 1 106 1 50 1 107 4 177 1 178 2 180 3 181 1 112 3 182 1 113 1 115 2 189 2 195 1 199 4 121 4 64 1 67 1 66 2 127 2 129 2 131 1 
210 2 0 2 212 1 134 1 135 1 138 4 137 2 3 1 2 1 72 1 5 2 142 2 143 2 7 1 8 14 10 3 12 1 80 4 13 2 148 1 15 2 17 1 18 2 149 1 84 3 217 2 218 1 220 1 88 2 153 2 155 2 154 4 222 1 224 2 89 4 91 2 90 1 31 1 32 1 36 4 232 1 35 4 95 1 233 1 167 1 237 2 39 3 239 1 241 1 169 1 242 2 243 2 244 2 172 1 42 1 245 1 44 1 246 3 46 1 248 1 175 1 49 2 249 2 106 1 50 1 179 2 178 2 251 2 180 2 112 4 111 2 182 1 113 1 254 1 187 2 186 1 188 2 190 2 118 2 56 4 195 1 59 2 262 2 199 4 120 2 121 6 61 2 124 2 64 1 67 1 127 2 66 4 129 2 131 1 
210 2 0 2 212 1 134 1 135 1 138 4 137 2 3 1 2 1 72 1 73 1 5 2 142 2 143 2 7 1 8 4 12 1 80 4 13 2 15 2 17 1 18 2 149 1 84 3 217 2 218 1 220 1 88 2 153 2 155 2 154 4 222 1 224 2 226 1 89 4 91 2 90 1 31 1 32 1 36 4 35 4 95 1 233 1 237 2 39 3 239 1 241 1 169 1 242 2 243 2 244 2 172 1 42 1 245 1 44 1 246 3 46 1 248 1 175 1 49 2 249 2 50 1 106 1 179 2 178 2 251 2 180 2 112 3 111 2 182 1 113 1 187 2 186 1 188 2 190 2 118 2 56 4 195 1 59 2 199 4 120 2 121 6 61 2 124 2 64 1 67 1 66 4 127 2 129 2 131 1 
210 2 0 2 212 1 134 1 135 1 138 5 137 2 3 1 2 1 72 1 5 2 142 3 7 1 8 4 80 4 12 1 15 2 17 1 149 1 18 3 84 3 217 2 20 1 218 1 220 1 88 3 154 4 222 1 224 2 89 4 91 3 159 1 90 1 25 1 29 2 32 1 36 5 35 4 96 1 95 1 233 1 237 2 39 3 239 1 169 1 242 3 243 2 172 1 42 1 245 1 44 1 246 3 45 1 46 1 248 1 175 1 49 2 106 1 249 3 50 1 109 1 179 2 178 2 180 2 182 1 112 3 111 2 113 1 187 2 188 2 190 3 118 3 56 3 195 1 59 2 199 4 120 2 121 6 61 2 124 2 64 1 67 1 127 2 66 4 129 2 131 1 
210 2 0 4 212 1 134 1 135 2 138 5 137 3 2 1 3 1 72 1 5 2 142 3 7 1 8 4 80 4 12 1 15 2 17 1 149 1 18 3 84 3 217 2 218 1 220 1 88 3 154 4 222 1 224 2 226 1 89 4 225 1 159 1 90 1 91 3 29 2 31 1 32 1 35 4 36 5 96 1 95 1 233 1 237 2 39 3 239 1 241 1 169 1 242 3 41 1 243 2 172 1 42 1 245 1 44 1 246 5 46 1 248 1 175 1 49 2 106 1 249 3 50 1 109 1 179 2 178 2 180 2 182 1 112 4 111 3 113 1 187 2 188 2 117 1 190 3 118 3 56 3 195 1 59 2 199 4 120 2 121 6 61 3 124 2 64 1 67 1 127 2 66 4 129 2 131 1 
210 2 0 2 212 1 134 1 135 1 138 5 137 2 2 1 3 1 72 1 5 2 142 3 7 1 8 4 80 4 12 1 15 2 17 1 149 1 18 3 84 3 217 2 218 1 220 1 88 3 154 4 222 1 224 2 226 1 89 4 159 1 90 1 91 3 29 2 31 1 32 1 35 4 36 5 96 1 95 1 233 1 237 2 39 3 239 1 241 1 169 1 242 3 41 1 243 2 172 1 42 1 245 1 44 1 246 3 46 1 248 1 175 1 49 2 106 1 249 3 50 1 109 1 179 2 178 2 180 2 182 1 112 3 111 2 113 1 187 2 188 2 190 3 118 3 56 3 195 1 59 2 199 4 120 2 121 6 61 2 124 2 64 1 67 1 127 2 66 4 129 2 131 1 
169 1 3 1 90 1 248 1 199 4 175 1 32 1 50 1 64 1 35 4 149 1 239 1 
0 2 134 1 137 2 138 4 2 1 3 1 5 2 143 2 142 2 7 1 8 4 12 1 13 2 15 2 149 1 18 2 17 1 152 1 153 2 154 4 155 2 24 2 26 1 31 1 32 1 164 1 34 1 35 4 36 4 39 3 169 1 172 1 42 1 44 1 46 1 175 1 49 2 50 1 178 2 179 2 180 2 183 1 186 1 187 2 188 2 190 2 192 1 56 4 195 1 57 2 199 4 59 2 201 2 61 2 66 4 67 1 210 2 212 1 72 1 73 1 74 1 80 4 216 2 84 3 217 2 218 1 220 1 88 2 224 2 226 1 89 4 90 1 91 2 94 1 95 1 233 1 237 2 239 1 241 1 242 2 101 2 244 2 243 2 245 1 246 3 104 1 248 1 106 1 249 2 251 2 112 3 111 2 113 1 116 1 118 2 120 2 266 1 122 1 121 6 124 2 268 1 127 2 129 2 131 1 
208 1 
0 2 134 1 135 1 137 2 138 5 3 1 2 1 5 2 142 3 7 1 8 4 12 1 15 2 18 3 149 1 17 1 20 1 154 4 159 1 25 1 29 2 31 1 32 1 161 1 36 5 35 4 39 3 169 1 41 1 172 1 42 1 44 1 46 1 175 1 49 2 50 1 178 2 179 2 180 3 182 1 187 2 188 2 190 3 56 3 195 1 199 4 59 2 61 2 64 1 66 4 67 1 210 2 212 1 72 1 80 4 84 3 217 2 218 2 220 1 88 3 222 1 224 2 89 4 226 1 91 3 90 1 95 1 96 1 233 1 237 2 239 1 241 1 242 3 243 2 245 1 246 4 248 1 249 3 106 1 109 1 111 2 112 3 113 1 117 1 118 3 120 2 121 6 124 2 127 2 131 1 129 2 
199 1 248 1 35 1 3 1 90 1 
210 2 0 2 212 1 134 1 135 1 138 5 137 2 3 1 2 1 72 1 5 2 142 3 7 1 8 4 80 4 12 1 15 2 17 1 18 3 84 3 217 2 20 1 218 1 220 1 88 3 154 4 222 1 224 2 89 4 91 3 159 1 90 1 25 1 29 2 31 1 32 1 35 4 36 5 96 1 95 1 233 1 237 2 39 3 239 1 241 1 169 1 242 3 41 1 243 2 172 1 42 1 245 1 44 1 246 3 46 1 248 1 175 1 49 2 106 1 249 3 50 1 109 1 179 2 178 2 180 2 182 1 112 3 111 2 113 1 187 2 188 2 190 3 118 3 56 3 195 1 59 2 199 4 120 2 121 6 61 2 124 2 64 1 67 1 127 2 66 4 129 2 131 1 
210 2 0 2 212 1 134 1 135 1 138 5 137 2 2 1 72 1 5 2 142 3 7 1 8 4 80 4 12 1 15 2 17 1 18 3 84 3 217 2 20 1 218 1 220 1 88 3 154 4 222 1 224 2 89 4 91 3 159 1 90 1 25 1 29 2 31 1 32 1 35 4 36 5 96 1 95 1 233 1 237 2 39 3 239 1 241 1 169 1 242 3 41 1 243 2 172 1 42 1 245 1 44 1 246 3 46 1 248 1 175 1 49 2 106 1 249 3 50 1 109 1 179 2 178 2 180 2 182 1 112 3 111 2 113 1 187 2 188 2 190 3 118 3 56 3 195 1 59 2 199 4 120 2 121 6 61 2 124 2 64 1 125 1 67 1 127 2 66 4 129 2 131 1 
0 11 134 1 135 10 137 10 138 9 1 1 3 1 2 1 5 2 143 2 142 7 7 1 8 7 12 1 13 2 15 2 17 1 18 7 149 1 19 1 20 1 22 1 153 2 155 2 154 4 159 5 25 1 29 2 31 1 160 1 32 1 161 1 36 9 35 4 166 1 39 3 169 1 170 1 172 1 42 2 173 1 44 10 46 10 175 1 49 2 50 1 178 3 179 2 52 1 180 2 182 1 187 2 186 1 188 2 190 7 56 9 194 1 195 1 59 2 199 4 61 10 64 1 206 1 67 1 66 6 209 1 210 2 212 1 72 9 78 1 80 6 82 1 84 4 217 2 218 1 220 1 88 7 222 9 224 2 89 4 91 7 90 1 229 1 96 5 95 1 233 1 237 2 238 1 239 1 241 1 242 7 244 2 243 2 103 1 245 1 246 11 248 1 249 7 106 1 109 5 251 2 111 10 112 20 252 1 113 1 258 1 118 7 120 2 264 1 121 6 124 2 127 2 131 1 129 2 
8 1 254 1 16 1 
8 1 53 1 
8 1 158 1 
240 1 42 1 263 1 8 1 121 1 93 1 14 1 178 1 84 1 236 1 98 1 100 1 
185 1 8 1 121 1 178 1 42 1 84 1 
240 1 263 1 8 1 121 1 14 1 178 1 42 1 
8 1 158 1 
8 1 99 1 
8 1 158 1 
8 1 53 1 
8 1 53 1 
8 1 230 1 107 1 110 1 
8 1 79 1 48 1 
219 1 0 1 135 1 154 2 222 1 158 1 157 1 228 1 6 2 44 1 246 1 46 1 8 2 202 1 128 1 112 2 87 1 
136 1 
219 1 0 1 135 1 222 1 157 1 228 1 44 1 246 1 119 1 46 1 202 1 128 1 112 2 
0 1 61 1 122 1 137 1 34 1 72 1 246 1 44 1 111 1 112 2 46 1 
0 1 61 2 122 2 23 1 137 2 34 1 72 1 246 1 44 1 111 2 112 3 46 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 23 1 137 2 72 1 44 1 246 1 46 1 122 2 61 2 34 1 112 3 111 2 
210 2 0 1 134 1 137 1 138 4 72 1 74 1 5 2 142 2 7 1 8 4 80 4 216 2 15 2 17 1 18 2 84 3 217 2 218 1 152 1 88 2 154 4 224 2 89 4 24 2 91 2 26 1 164 1 34 1 36 4 94 1 233 1 237 2 39 3 101 2 242 2 244 2 243 2 42 1 44 1 246 2 46 1 104 1 49 2 106 1 249 2 178 2 179 2 180 1 112 3 111 1 183 1 187 2 116 1 188 2 117 1 190 2 192 1 118 2 56 2 57 2 59 2 120 2 201 2 266 1 122 1 61 1 121 6 124 2 268 1 67 1 66 4 127 2 129 2 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 156 2 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 156 2 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 23 1 137 1 72 1 44 1 246 1 141 1 46 1 122 1 61 1 34 1 112 2 111 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 156 2 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 161 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
210 1 0 2 138 2 137 2 72 1 5 1 142 1 8 3 14 1 15 1 18 1 17 1 84 2 217 1 88 1 154 2 23 1 224 1 225 1 89 2 91 1 93 2 34 1 36 2 233 1 236 3 98 2 237 1 100 2 240 1 242 1 243 1 42 1 246 4 44 1 46 1 49 1 249 1 178 1 179 1 251 1 112 3 111 2 255 1 254 3 187 1 117 1 190 1 118 1 56 1 195 1 260 1 59 1 263 1 120 1 265 1 122 2 61 2 123 1 121 2 126 2 67 1 127 1 68 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
210 1 0 1 134 1 137 1 138 2 72 1 74 1 5 1 142 1 7 1 8 2 80 2 216 1 15 1 18 1 217 1 218 1 88 1 154 2 224 1 89 2 24 1 91 1 34 1 36 2 39 3 237 1 101 1 242 1 244 1 243 1 44 1 246 1 46 1 104 1 49 1 106 1 249 1 178 1 179 1 180 1 112 3 111 1 187 1 188 1 190 1 118 1 56 1 57 1 59 1 120 1 201 1 122 1 61 1 121 3 124 1 127 1 66 2 129 1 
0 1 23 1 137 1 72 1 44 1 246 1 46 1 122 1 61 1 216 1 34 1 112 2 111 1 
210 1 134 1 138 2 74 1 5 1 143 1 142 1 7 1 8 2 80 2 13 1 216 1 15 1 18 1 217 1 218 1 153 1 88 1 154 2 155 1 224 1 89 2 24 1 91 1 36 2 39 3 237 1 101 1 242 1 243 1 244 1 49 1 249 1 106 1 178 1 179 1 180 1 251 1 112 1 182 1 187 1 188 1 190 1 118 1 56 2 57 1 59 1 120 1 201 1 121 3 124 1 64 1 127 1 66 2 129 1 
210 1 0 1 134 1 137 1 138 2 72 1 74 1 5 1 142 1 7 1 8 2 80 2 216 1 15 1 18 1 217 1 218 1 88 1 154 2 224 1 89 2 24 1 91 1 161 1 34 1 36 2 237 1 39 3 101 1 242 1 244 1 243 1 44 1 246 1 46 1 104 1 49 1 106 1 249 1 178 1 179 1 180 1 112 3 111 1 187 1 188 1 190 1 118 1 56 1 57 1 59 1 120 1 201 1 122 1 61 1 121 3 124 1 127 1 66 2 129 1 
210 1 0 1 134 1 135 1 137 1 138 2 72 1 74 1 5 1 142 1 7 1 8 2 80 2 216 1 15 1 18 1 217 1 218 1 88 1 222 1 154 2 224 1 89 2 24 1 91 1 161 1 36 2 237 1 39 3 101 1 242 1 244 1 243 1 246 1 44 1 46 1 49 1 106 1 249 1 178 1 179 1 180 1 182 1 112 3 111 1 187 1 188 1 190 1 118 1 56 1 57 1 59 1 120 1 201 1 61 1 121 3 124 1 64 1 66 2 127 1 129 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 143 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 23 1 154 2 224 1 89 2 190 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 154 2 23 1 224 1 89 2 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
256 1 8 1 80 1 244 1 66 1 
256 1 8 1 80 1 188 1 66 1 
8 1 80 1 244 1 97 1 66 1 168 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
210 1 0 1 138 2 137 1 72 1 5 1 142 1 143 1 8 2 80 2 13 1 14 1 15 1 18 1 17 1 84 3 217 1 88 1 153 1 155 1 23 1 154 2 224 1 89 2 91 1 93 3 34 1 36 2 233 1 236 4 98 3 237 1 100 3 240 1 242 1 244 1 243 1 42 1 44 1 246 2 46 1 49 1 249 1 178 1 179 1 251 1 112 2 111 1 187 1 188 1 190 1 118 1 56 2 195 1 59 1 263 1 120 1 122 1 61 1 121 3 124 1 126 1 66 2 67 1 127 1 129 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 161 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 154 3 23 1 156 2 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 124 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 156 2 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
0 1 242 1 138 2 137 1 243 1 72 1 5 1 246 1 44 1 46 1 143 1 142 1 49 1 249 1 13 1 18 1 179 1 251 1 111 1 112 2 187 1 88 1 153 1 155 1 154 3 23 1 224 1 89 3 190 1 158 1 118 1 91 1 56 2 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
0 1 242 1 138 2 243 1 137 1 72 1 5 1 246 1 44 1 46 1 142 1 49 1 249 1 18 1 179 1 111 1 112 2 187 1 88 1 154 3 224 1 89 3 190 1 158 1 118 1 91 1 56 1 59 1 120 1 61 1 122 1 34 1 36 2 237 1 
210 1 240 1 0 1 42 1 246 2 44 1 46 1 8 4 81 1 83 1 15 1 17 1 178 1 180 1 84 2 217 1 112 2 85 1 114 1 219 1 254 3 227 1 195 1 197 1 30 1 263 1 60 1 62 1 93 2 121 2 122 1 205 1 34 1 126 1 233 1 67 1 127 1 98 2 236 3 70 1 100 2 
240 1 210 1 0 1 101 1 42 1 246 1 44 1 47 1 46 1 8 4 51 1 83 1 15 1 178 1 84 2 151 1 112 2 217 1 86 1 219 1 254 3 227 1 24 1 196 1 57 1 197 1 30 1 263 1 201 1 60 1 93 2 121 2 122 1 63 1 34 1 126 1 268 1 233 1 67 1 127 1 98 2 236 3 70 1 100 2 
0 1 242 3 138 3 137 1 171 1 72 1 246 1 44 1 46 1 142 3 249 3 109 1 18 3 112 2 111 1 88 3 190 3 91 3 159 1 118 3 56 3 122 1 61 1 34 1 36 3 96 3 
0 1 242 1 138 1 137 1 72 1 246 1 44 1 46 1 142 1 249 1 109 1 18 1 112 2 111 1 88 1 190 1 91 1 159 1 118 1 56 1 122 1 61 1 34 1 36 1 96 1 69 1 
0 1 137 1 72 1 246 1 44 1 46 1 122 1 61 1 34 1 109 1 96 1 69 1 112 2 111 1 
0 1 40 1 242 3 243 1 138 4 137 1 72 1 5 1 246 1 44 1 46 1 142 3 49 1 249 3 109 1 179 1 18 3 112 2 111 1 187 1 88 3 154 2 224 1 89 2 190 3 91 3 159 1 118 3 56 3 59 1 120 1 161 1 122 1 61 1 124 1 34 1 36 4 96 2 237 1 
0 1 242 1 102 1 138 1 137 1 72 1 246 1 44 1 46 1 142 1 8 1 80 1 249 1 109 1 18 1 112 2 111 1 256 1 88 1 190 1 158 1 91 1 159 1 118 1 56 1 29 1 122 1 61 1 34 1 36 1 96 1 66 1 
0 1 242 1 138 1 137 1 72 1 246 1 44 1 46 1 142 1 249 1 109 1 18 1 112 2 111 1 88 1 190 1 91 1 159 1 118 1 56 1 122 1 61 1 34 1 36 1 96 1 
253 1 11 1 213 1 112 1 58 1 
198 1 71 1 112 1 259 1 
198 1 33 1 112 1 
11 1 112 1 92 2 58 1 
198 1 176 1 
178 1 233 1 67 1 42 1 
93 1 126 1 84 1 98 1 236 1 100 1 
93 1 126 1 14 1 84 1 98 1 236 1 100 1 
201 1 101 1 268 1 4 1 178 1 24 1 42 1 
59 1 40 1 154 1 89 1 36 2 91 1 139 1 
36 1 91 1 
59 1 8 1 154 1 89 1 36 1 158 1 
36 1 91 1 
8 1 154 1 89 1 158 1 
222 1 
135 1 
135 1 
122 1 
34 1 
122 1 
219 1 0 1 44 1 246 1 28 1 119 1 46 1 92 1 9 1 231 1 215 1 147 1 207 1 235 1 112 2 130 1 
219 1 0 1 44 1 246 1 28 1 46 1 92 1 9 1 215 1 147 1 207 1 69 1 235 1 112 2 130 1 
219 2 0 2 223 1 44 2 246 2 28 2 46 2 92 2 9 2 215 2 147 2 269 1 207 2 235 2 112 4 130 2 
219 1 0 1 223 1 44 1 246 1 28 1 46 1 92 1 9 1 215 1 147 1 207 1 235 1 112 2 130 1 
219 1 0 1 154 2 158 1 44 1 246 1 28 1 46 1 92 1 8 1 79 1 9 1 162 1 215 1 147 1 207 1 235 1 112 2 130 1 184 2 
146 1 
8 2 254 2 267 1 158 1 
8 2 254 2 158 1 214 1 
210 1 0 1 134 1 101 1 74 1 214 1 246 2 44 1 46 1 104 1 7 1 8 2 9 1 106 1 146 1 215 1 147 1 15 1 250 1 178 1 180 1 217 1 112 3 184 1 218 1 219 1 254 2 223 1 154 1 117 1 24 1 28 1 57 1 92 1 201 1 121 2 162 1 267 1 127 1 207 1 235 1 39 2 130 1 
9 1 231 1 44 1 119 1 46 1 
210 1 240 1 0 1 42 1 214 1 246 3 44 1 46 1 8 3 79 1 9 1 146 1 107 1 215 1 147 1 14 1 15 1 17 1 178 1 84 3 217 1 112 2 184 1 219 1 254 2 154 1 117 1 28 1 195 1 92 1 263 1 93 3 121 2 162 1 267 1 126 1 233 1 127 1 67 1 207 1 98 3 236 4 235 1 130 1 100 3 
219 1 0 1 154 1 158 1 44 1 246 1 28 1 46 1 92 1 8 3 79 2 9 1 162 1 215 1 147 1 207 1 235 1 112 2 130 1 184 1 
219 1 0 1 44 1 246 1 28 1 46 1 92 1 9 1 215 1 147 1 269 1 207 1 235 1 112 2 130 1 
219 2 0 2 44 2 246 2 28 2 119 1 46 2 92 2 9 2 231 1 215 2 147 2 269 1 207 2 235 2 112 4 130 2 
144 1 211 1 221 1 177 1 181 1 119 1 
0 1 211 1 44 1 246 1 46 1 144 1 8 2 76 2 79 1 215 1 112 2 219 1 21 1 221 1 154 2 189 1 158 1 54 1 92 1 230 1 270 1 
219 1 211 1 0 1 221 1 154 2 189 1 158 1 246 1 44 1 46 1 92 1 144 1 76 2 8 2 79 1 230 1 215 1 177 1 181 1 112 2 
240 1 0 1 211 1 42 1 44 1 246 3 46 1 144 1 76 1 8 1 79 1 107 1 215 1 14 1 15 1 177 1 17 1 178 1 84 2 181 1 112 2 219 1 115 1 221 1 154 1 117 1 189 1 27 1 195 1 92 1 263 1 93 2 121 1 126 1 165 1 233 1 127 1 67 1 98 2 236 3 100 2 
76 1 211 1 40 1 154 1 38 1 140 1 
165 1 158 1 
115 1 158 1 
0 1 211 2 44 1 246 1 140 1 46 1 144 1 8 2 76 1 79 1 80 1 215 1 177 1 181 1 112 2 219 1 221 1 154 1 27 1 92 1 66 1 38 1 
0 1 211 2 40 1 44 1 246 1 140 1 46 1 48 1 144 1 8 2 76 1 79 1 80 1 215 1 177 1 181 1 150 1 112 2 219 1 221 1 154 1 27 1 92 1 66 1 38 1 
27 1 
0 1 211 2 134 1 101 1 74 1 44 1 246 2 140 1 46 1 104 1 144 1 7 1 76 2 8 3 79 2 80 1 106 1 107 2 215 1 15 1 177 1 178 1 180 1 181 1 112 3 218 1 219 1 115 1 21 1 221 1 154 2 117 1 189 1 24 1 27 1 57 1 92 1 201 1 121 2 165 1 66 1 127 1 38 1 39 4 129 1 
144 1 211 1 221 1 177 1 181 1 119 1 
240 1 0 1 211 2 42 1 44 1 246 3 140 1 46 1 144 1 76 2 8 3 79 2 80 1 107 2 215 1 14 1 15 1 177 1 17 1 178 1 84 4 181 1 112 2 219 1 115 1 221 1 154 2 117 1 189 1 27 1 195 1 92 1 263 1 93 4 121 2 126 1 165 1 233 1 66 1 127 1 67 1 98 4 236 5 38 1 129 1 100 4 

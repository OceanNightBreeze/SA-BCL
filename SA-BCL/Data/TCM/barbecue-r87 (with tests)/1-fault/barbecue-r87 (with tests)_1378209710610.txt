#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 65 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ArithmeticException 203 155 92 193 148 141 171 152 164 31 123 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.ArithmeticException 203 154 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.ArithmeticException 203 154 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V ERROR java.lang.ArithmeticException 203 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V ERROR java.lang.ArithmeticException 203 155 92 193 129 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V ERROR java.lang.ArithmeticException 203 154 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V ERROR java.lang.ArithmeticException 203 155 92 193 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V ERROR java.lang.ArithmeticException 203 154 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V ERROR java.lang.ArithmeticException 203 154 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | OPERATOR | 1601 | - -> /
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 1 74 1 72 1 113 1 132 1 124 1 
103 1 74 1 72 1 132 1 124 1 
130 2 115 1 57 1 
72 1 155 1 0 1 17 1 215 1 40 1 1 1 107 3 46 2 230 1 78 1 162 1 92 1 80 1 66 1 133 1 25 1 134 1 87 1 
72 1 0 1 17 1 155 1 215 1 40 1 1 1 30 1 107 3 46 1 162 1 92 2 25 1 134 1 87 1 193 1 
119 1 0 1 17 1 215 1 40 1 1 2 107 2 46 1 162 3 134 2 
72 1 0 1 17 1 155 1 215 1 40 1 1 1 30 1 107 4 46 2 162 2 92 1 25 1 150 1 134 2 87 1 
17 1 0 1 40 1 55 1 
0 1 17 1 215 1 40 1 1 2 107 2 21 1 46 1 162 1 11 1 134 1 
154 1 72 2 155 1 0 1 17 1 215 1 1 1 107 3 46 1 162 1 78 1 230 1 124 1 92 1 80 1 10 1 133 1 25 2 134 1 87 1 
154 1 72 2 155 1 0 1 17 1 215 1 1 1 107 3 46 1 162 1 78 1 230 1 124 1 92 1 80 1 133 1 25 2 134 1 87 1 
154 1 72 1 0 1 17 1 215 1 40 1 1 1 58 1 107 2 46 1 162 1 124 1 110 1 10 1 12 1 25 1 134 1 
154 1 72 1 0 1 17 1 215 1 40 1 1 1 3 1 107 2 46 1 162 1 124 1 110 1 10 1 12 1 25 1 134 1 
154 1 72 1 0 1 17 1 215 1 40 1 1 1 106 1 121 1 107 2 46 1 162 1 124 1 110 1 12 1 84 1 25 1 134 1 
154 1 72 1 0 1 17 1 215 1 40 1 1 1 106 1 121 1 107 2 46 1 162 1 124 1 110 1 10 1 12 1 84 1 25 1 134 1 
119 1 0 1 17 1 215 1 40 1 1 1 107 3 46 2 162 2 134 1 
0 1 17 1 40 1 1 1 107 3 162 2 187 1 67 1 192 2 134 1 
17 1 0 1 64 1 1 2 40 1 67 1 107 2 134 1 192 1 162 1 
0 1 17 1 40 1 1 1 76 1 107 2 162 1 67 1 192 1 134 1 
194 1 17 1 0 1 1 1 40 1 67 1 107 2 134 1 192 1 162 1 
72 1 0 1 17 1 155 1 40 1 1 1 77 1 107 3 186 1 162 1 61 1 92 4 67 1 25 1 56 1 37 1 192 1 134 1 
17 1 0 1 1 1 40 1 81 1 67 1 107 2 176 1 134 1 192 1 162 1 
105 3 159 1 145 1 
105 1 
179 1 119 1 120 1 1 5 182 1 183 2 2 12 5 1 6 2 7 1 8 1 187 1 60 1 62 1 127 1 11 1 67 1 14 3 68 1 192 2 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 141 1 200 2 202 3 203 1 204 2 207 1 206 1 82 2 208 2 148 1 210 4 211 1 212 1 213 1 85 1 214 2 149 1 150 1 152 1 151 3 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 3 92 1 93 2 33 3 96 1 222 1 164 1 37 1 165 1 101 4 102 3 167 1 228 2 169 2 107 4 47 1 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
179 1 119 1 182 1 1 3 2 2 183 2 5 1 6 2 7 1 8 1 187 1 60 1 62 1 127 1 67 1 192 1 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 200 2 141 1 202 3 203 1 204 2 206 1 207 1 82 2 208 2 148 1 210 4 211 1 213 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 2 92 1 93 2 33 2 96 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
101 4 91 1 31 1 198 1 49 1 187 1 96 1 127 1 210 4 222 1 213 1 164 1 
119 1 1 3 2 5 59 1 125 2 187 1 63 1 127 1 67 1 192 1 71 2 193 1 74 1 18 1 17 1 72 1 76 1 19 2 140 1 198 1 141 1 202 2 203 1 204 1 207 1 23 1 210 4 148 1 213 1 212 1 86 1 152 1 153 1 155 1 91 1 31 1 161 4 162 2 92 1 96 1 34 2 98 1 222 1 99 1 164 1 37 1 223 1 101 4 41 2 228 1 44 1 169 2 229 1 107 3 49 1 172 1 171 1 117 1 178 1 233 1 
119 1 180 1 182 1 1 3 183 1 2 2 6 1 5 1 7 1 8 1 187 1 60 1 190 1 127 1 67 1 192 1 135 1 70 1 193 1 74 1 17 1 18 1 72 1 136 1 137 1 76 1 139 1 198 1 200 1 141 1 202 3 203 1 204 2 207 1 82 1 208 1 210 4 148 1 211 1 213 1 212 1 26 1 151 2 152 1 153 1 89 1 155 1 27 1 91 1 216 2 31 1 158 1 217 1 161 3 162 2 93 1 92 1 33 2 96 1 222 1 164 1 37 1 165 1 102 2 101 4 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 112 1 231 1 114 2 52 1 116 2 232 2 178 1 
119 1 180 1 182 1 1 3 183 1 2 2 6 1 5 1 7 1 8 1 187 1 60 1 190 1 127 1 67 1 192 1 135 1 70 1 193 1 74 1 17 1 18 1 72 1 136 1 137 1 76 1 139 1 198 1 200 1 141 1 202 3 203 1 204 2 207 1 82 1 208 1 210 4 148 1 211 1 213 1 212 1 26 1 151 2 152 1 153 1 89 1 155 1 27 1 91 1 216 2 31 1 158 1 217 1 161 3 162 2 93 1 92 1 33 2 96 1 222 1 164 1 37 1 165 1 102 2 101 4 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 112 1 231 1 114 2 52 1 116 2 232 2 178 1 
179 1 119 1 1 3 2 2 183 2 5 1 6 2 7 1 8 1 187 1 127 1 67 1 192 1 70 1 135 2 193 1 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 200 2 141 1 202 3 203 1 204 2 206 1 207 1 208 2 82 2 210 4 148 1 211 1 213 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 2 92 1 93 2 33 2 96 1 163 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
138 1 
179 1 119 1 182 1 1 4 2 2 183 2 5 1 6 2 7 1 8 1 187 1 60 1 62 1 127 1 128 1 11 1 67 1 192 1 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 141 1 200 2 202 3 203 1 204 2 206 1 207 1 82 2 208 2 148 1 210 4 211 1 213 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 2 92 1 93 2 33 2 96 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
119 1 180 1 182 1 1 3 183 1 2 2 6 1 5 1 7 1 8 1 60 1 190 1 127 1 131 1 69 1 135 1 70 1 193 1 17 1 18 1 72 1 74 1 136 1 137 1 76 1 197 1 139 1 198 1 142 1 200 1 141 1 202 3 203 1 204 2 207 1 82 1 208 1 210 4 148 1 211 1 213 1 212 1 26 1 151 2 152 1 87 1 153 1 89 1 155 1 215 1 27 1 91 1 216 2 31 1 158 1 217 1 161 3 162 2 93 1 92 1 33 2 96 1 222 1 164 1 165 1 38 1 102 2 101 4 225 1 228 2 169 2 107 3 46 1 48 1 49 1 171 1 51 1 111 1 112 1 231 1 114 2 52 1 116 2 232 2 178 1 
101 1 198 1 31 1 210 1 164 1 
179 1 119 1 182 1 1 3 2 2 183 2 5 1 6 2 7 1 8 1 187 1 60 1 62 1 127 1 67 1 192 1 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 200 2 141 1 202 3 203 1 204 2 206 1 207 1 208 2 82 2 210 4 148 1 211 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 2 92 1 93 2 33 2 96 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
179 1 119 1 182 1 1 3 2 2 183 2 5 1 6 2 7 1 8 1 187 1 60 1 62 1 127 1 65 1 67 1 192 1 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 200 2 141 1 202 3 203 1 204 2 206 1 207 1 208 2 82 2 210 4 148 1 211 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 158 1 161 3 162 2 92 1 93 2 33 2 96 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 116 3 232 2 178 1 
179 1 119 1 182 1 1 3 2 2 183 2 5 1 6 2 7 1 8 1 123 1 187 1 60 1 127 1 67 1 192 1 70 1 193 1 135 2 74 1 72 1 18 1 17 1 76 1 137 2 139 1 198 1 141 1 200 2 202 3 203 1 204 2 206 1 207 1 82 2 208 2 148 1 210 4 211 1 213 1 212 1 149 1 151 2 152 1 153 1 155 1 27 1 91 1 216 3 31 1 158 1 161 3 162 2 92 1 93 2 33 2 96 1 222 1 164 1 37 1 165 1 101 4 102 2 167 1 228 2 169 2 107 3 48 1 49 1 171 1 51 1 111 1 231 1 114 2 52 1 53 1 116 3 232 2 178 1 
157 1 2 1 68 1 
79 1 2 1 
94 1 2 1 
94 1 2 1 
94 1 2 1 
79 1 2 1 
72 1 181 1 28 1 2 1 4 1 168 1 202 1 220 1 124 1 110 1 12 1 84 1 
72 1 2 1 4 1 54 1 202 1 124 1 
110 1 72 1 28 1 2 1 12 1 202 1 124 1 
79 1 2 1 
2 1 209 1 
196 1 2 1 41 1 
95 1 2 1 185 1 71 1 
18 1 17 1 90 2 1 1 2 2 29 1 43 1 19 1 169 2 107 2 162 1 170 1 79 1 22 1 67 1 191 1 192 1 
109 1 
17 1 18 1 22 1 1 1 29 1 19 1 67 1 107 2 55 1 191 1 192 1 162 1 170 1 
1 1 2 2 183 1 5 1 6 1 7 1 8 1 131 1 69 1 135 1 70 1 193 1 72 1 18 1 17 1 74 1 76 1 137 1 197 1 139 1 142 1 200 1 202 3 203 1 204 2 82 1 208 1 211 1 151 1 87 1 155 1 27 1 215 1 216 2 217 1 158 1 162 1 161 3 92 1 93 1 33 1 165 1 38 1 102 1 225 1 228 2 107 3 169 2 46 1 48 1 51 1 111 1 231 1 52 1 114 2 116 2 232 1 178 1 
102 1 18 1 17 1 27 1 215 1 1 1 197 1 107 2 46 1 162 1 33 1 15 1 151 1 
180 1 183 1 2 2 5 1 6 1 7 1 8 1 187 1 131 1 69 1 193 1 70 1 135 1 74 1 72 1 136 1 76 1 137 1 197 1 139 1 142 1 200 1 202 3 203 1 204 2 208 1 82 1 211 1 26 1 155 1 89 1 216 2 217 1 158 1 161 3 92 1 93 1 37 1 165 1 38 1 225 1 228 2 107 1 169 2 48 1 51 1 111 1 112 1 231 1 52 1 114 2 116 2 232 2 178 1 
1 1 2 2 183 1 5 1 6 1 7 1 8 1 128 1 131 1 69 1 135 1 70 1 193 1 72 1 18 1 17 1 74 1 76 1 137 1 197 1 139 1 142 1 200 1 202 3 203 1 204 2 82 1 208 1 211 1 151 1 87 1 155 1 27 1 215 1 216 2 217 1 158 1 162 1 161 3 92 1 93 1 33 1 165 1 38 1 102 1 225 1 228 2 107 3 169 2 46 1 48 1 51 1 111 1 231 1 52 1 114 2 116 2 232 1 178 1 
1 1 2 2 183 1 5 1 6 1 7 1 8 1 187 1 128 1 131 1 67 1 69 1 192 1 135 1 70 1 193 1 72 1 18 1 17 1 74 1 76 1 137 1 197 1 139 1 142 1 200 1 202 3 203 1 204 2 82 1 208 1 211 1 151 1 155 1 27 1 216 2 217 1 158 1 162 1 161 3 92 1 93 1 33 1 37 1 165 1 38 1 102 1 225 1 228 2 107 3 169 2 48 1 51 1 111 1 231 1 52 1 114 2 116 2 232 1 178 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 107 2 169 2 46 1 48 1 111 1 112 1 82 1 208 1 211 1 52 1 114 2 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 2 107 2 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 2 52 1 211 1 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
184 1 2 1 228 1 217 1 204 1 
184 1 2 1 228 1 5 1 204 1 
2 1 228 1 217 1 175 1 13 1 204 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
118 1 181 3 180 1 1 2 2 2 183 1 4 3 121 1 6 1 5 1 7 1 8 1 124 1 12 1 15 1 135 1 70 1 72 1 18 1 17 1 74 1 136 1 137 1 76 1 139 1 200 1 202 3 203 1 204 2 82 1 208 1 84 3 211 1 212 1 26 1 151 1 154 1 89 1 27 1 215 1 216 2 217 1 158 1 220 3 162 1 93 1 33 1 165 1 102 1 228 2 168 3 107 2 169 2 46 1 48 1 110 1 51 1 111 1 112 1 231 1 52 1 114 2 116 2 232 2 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 128 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 211 1 52 1 114 3 116 2 232 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 227 2 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 227 2 139 1 200 1 169 3 107 2 46 1 48 1 79 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 1 151 1 
102 2 18 1 17 1 27 1 215 1 1 1 107 3 46 2 162 1 33 2 15 1 151 2 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
102 2 33 2 17 1 18 1 215 1 27 1 1 1 107 3 15 1 46 2 151 2 162 1 
1 2 2 2 183 1 5 1 6 1 7 1 8 1 131 1 11 1 69 1 135 1 70 1 193 1 72 1 18 1 17 1 74 1 76 1 137 1 197 1 139 1 142 1 200 1 202 3 203 1 204 2 82 1 208 1 211 1 151 1 87 1 155 1 27 1 215 1 216 2 217 1 158 1 162 1 161 3 92 1 93 1 33 1 165 1 38 1 102 1 225 1 228 2 107 3 169 2 46 1 48 1 51 1 111 1 231 1 52 1 114 2 116 2 232 1 178 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 208 1 82 1 114 3 211 1 52 1 116 2 232 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
89 1 215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 227 2 139 1 200 1 169 3 107 2 46 1 48 1 79 1 51 1 111 1 112 1 208 1 82 1 114 3 211 1 52 1 116 2 232 2 26 1 151 1 
102 1 33 1 17 1 18 1 215 1 27 1 1 1 107 2 46 1 151 1 162 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 227 2 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 1 151 1 
102 1 18 1 17 1 27 1 215 1 1 1 195 1 107 2 46 1 162 1 33 1 15 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 227 2 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 128 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 208 1 82 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
215 1 27 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 165 1 135 1 70 1 102 1 17 1 18 1 137 1 139 1 200 1 107 2 169 3 46 1 48 1 79 1 51 1 111 1 82 1 208 1 211 1 52 1 114 3 116 2 232 2 26 1 151 1 
118 1 181 2 1 4 2 3 183 1 4 2 121 1 6 1 7 1 8 1 124 1 11 1 12 1 15 1 68 3 135 1 70 1 72 1 18 1 17 1 136 1 76 1 137 1 139 1 200 1 202 2 203 1 208 1 82 1 84 2 211 1 212 1 150 1 151 2 154 1 88 1 156 1 27 1 215 1 216 2 158 1 220 2 160 1 162 2 93 1 33 2 221 1 165 1 102 2 168 2 169 2 107 3 46 2 48 1 110 1 111 1 231 1 52 1 114 2 116 2 232 1 
215 1 27 1 180 1 1 1 216 2 183 1 158 1 6 1 7 1 162 1 93 1 33 1 15 1 165 1 135 1 70 1 102 1 17 1 18 1 136 1 137 1 139 1 200 1 169 3 107 2 46 1 48 1 79 1 111 1 208 1 82 1 211 1 52 1 114 3 116 2 232 1 151 1 
118 1 181 2 215 1 1 1 2 4 4 2 121 1 218 1 8 1 220 2 9 1 162 1 124 1 131 1 12 1 68 3 69 1 39 1 17 1 18 1 72 1 73 1 75 1 225 1 76 1 19 1 168 2 142 1 107 2 202 2 203 1 46 1 110 1 146 1 205 1 81 1 231 1 84 2 176 1 
154 1 118 1 181 2 215 1 1 2 2 4 4 2 121 1 58 1 218 1 8 1 220 2 9 1 162 1 124 1 92 1 12 1 133 1 68 3 39 1 17 1 18 1 72 1 73 1 75 1 76 1 19 1 168 2 107 2 202 2 203 1 46 1 230 1 78 1 110 1 80 1 146 1 231 1 84 3 24 1 212 1 
27 1 215 1 1 1 216 4 183 3 158 1 6 3 7 1 162 1 93 3 33 1 128 1 130 1 165 1 70 1 135 3 102 1 18 1 17 1 167 2 137 3 139 1 200 3 169 2 107 2 46 1 48 1 51 1 111 1 206 1 208 3 82 3 114 2 52 1 211 1 116 4 232 3 149 1 151 1 
102 1 17 1 18 1 215 1 27 1 167 1 1 1 183 1 137 1 216 1 200 1 6 1 107 2 46 1 162 1 93 1 33 1 206 1 82 1 208 1 116 1 232 1 149 1 151 1 135 1 
27 1 215 1 1 1 216 3 183 3 6 3 162 1 93 3 33 1 135 3 102 1 18 1 17 1 167 3 137 3 143 1 200 3 107 2 46 1 206 1 208 3 82 3 116 3 232 3 149 1 151 1 
27 1 215 1 1 1 216 1 183 1 6 1 162 1 93 1 33 1 135 1 194 1 102 1 18 1 17 1 167 1 137 1 200 1 107 2 46 1 206 1 208 1 82 1 116 1 232 1 149 1 151 1 
194 1 102 1 18 1 17 1 167 1 27 1 215 1 1 1 107 2 46 1 162 1 33 1 149 1 151 1 
179 1 27 1 215 1 1 1 184 1 2 1 216 1 183 1 6 1 162 1 93 1 33 1 135 1 102 1 18 1 17 1 167 1 137 1 42 1 228 1 200 1 107 2 46 1 204 1 79 1 206 1 208 1 82 1 116 1 232 1 149 1 151 1 
104 1 147 1 107 1 144 1 
104 1 107 1 177 1 
66 1 107 1 100 2 36 1 
66 1 35 1 107 1 219 1 36 1 
104 1 224 1 
50 1 72 1 205 1 225 1 131 1 142 1 124 1 
181 1 4 1 121 1 168 1 84 1 220 1 
118 1 72 1 24 1 124 1 
181 1 28 1 4 1 121 1 168 1 84 1 220 1 
79 1 2 1 139 1 114 1 169 1 116 1 
208 1 116 1 
79 1 2 1 114 1 169 1 
130 1 139 1 208 1 114 1 169 1 116 2 20 1 
208 1 116 1 
192 1 
67 1 
192 1 
46 1 
46 1 
215 1 
18 1 17 1 1 1 19 1 226 1 107 2 45 1 108 1 162 1 188 1 97 1 83 1 174 1 67 1 192 1 
18 1 17 1 1 1 2 3 41 2 19 1 226 1 169 1 201 1 107 2 45 1 108 1 162 1 188 1 79 1 97 1 174 1 67 1 16 1 192 1 
18 1 17 1 1 1 226 1 19 1 199 1 107 2 45 1 108 1 162 1 188 1 97 1 174 1 67 1 192 1 
18 2 17 2 1 2 226 2 19 2 199 1 107 4 122 1 45 2 108 2 162 2 188 2 97 2 174 2 67 2 55 1 192 2 
194 1 18 1 17 1 1 1 19 1 226 1 107 2 45 1 108 1 162 1 188 1 97 1 174 1 67 1 192 1 
18 2 17 2 1 2 226 2 19 2 199 1 107 4 45 2 108 2 162 2 188 2 97 2 83 1 174 2 67 2 192 2 
18 1 17 1 1 1 226 1 19 1 107 2 122 1 45 1 108 1 162 1 188 1 97 1 174 1 67 1 55 1 192 1 
18 1 17 1 1 1 2 1 41 1 19 1 226 1 169 2 201 2 107 2 45 1 108 1 162 1 188 1 79 1 97 1 174 1 67 1 16 1 192 1 
189 1 
79 1 126 1 2 2 68 2 
79 1 166 1 2 2 68 2 
155 1 1 2 2 2 8 1 161 2 162 1 188 1 92 1 189 1 126 1 97 1 131 1 129 1 11 1 67 1 16 1 37 1 68 2 69 1 192 1 193 1 38 1 166 1 17 1 18 1 72 1 225 1 76 1 19 1 226 1 142 1 169 1 201 1 107 3 202 2 203 1 45 1 108 1 231 1 83 1 174 1 178 1 
17 1 18 1 55 1 122 1 45 1 
118 1 154 1 181 3 1 3 2 3 4 3 121 1 8 1 220 3 162 1 124 1 188 1 189 1 126 1 97 1 11 1 12 1 67 1 16 1 68 2 192 1 71 1 166 1 17 1 18 1 72 1 76 1 41 1 226 1 19 1 168 3 169 1 201 1 107 2 202 2 203 1 45 1 108 1 110 1 231 1 84 3 174 1 212 1 
1 1 2 2 59 1 162 1 125 2 63 1 34 1 130 1 67 1 99 1 192 1 223 1 17 1 18 1 196 1 19 1 41 1 228 1 107 2 169 1 204 1 172 1 117 1 233 1 57 1 
99 1 
155 1 1 1 2 3 32 1 59 1 161 4 162 1 125 2 92 1 63 1 34 2 131 1 98 1 99 1 67 1 37 1 69 1 223 1 192 1 71 2 193 1 38 1 74 1 17 1 18 1 72 1 225 1 76 1 41 2 19 1 228 1 142 1 169 2 107 3 202 2 203 1 204 1 172 1 23 1 117 1 178 1 233 1 86 1 
172 1 63 1 55 1 59 1 233 1 125 1 
154 1 118 1 181 4 1 3 2 3 4 4 121 1 59 1 220 4 162 1 125 2 124 1 63 1 34 2 11 1 98 1 12 1 99 1 67 1 223 1 192 1 71 2 74 1 17 1 18 1 72 1 76 1 41 2 19 1 228 1 168 4 169 2 107 2 202 2 203 1 204 1 110 1 172 1 23 1 84 4 117 1 212 1 233 1 86 1 
172 1 63 1 55 1 59 1 233 1 125 1 
1 1 2 2 32 1 59 1 162 1 125 1 63 1 95 1 34 2 98 1 67 1 192 1 17 1 18 1 19 1 41 1 107 2 169 2 79 1 173 1 234 1 
18 1 17 1 1 1 2 2 41 1 19 1 169 2 107 2 59 1 162 1 125 1 79 1 172 1 95 1 63 1 34 2 98 1 67 1 233 1 192 1 
154 1 118 1 181 2 1 3 2 1 4 2 121 1 59 1 220 2 162 1 125 1 124 1 63 1 34 1 11 1 98 1 12 1 99 1 67 1 192 1 71 1 17 1 18 1 72 1 76 1 41 1 19 1 168 2 169 1 107 2 202 1 203 1 110 1 172 1 23 1 84 2 212 1 233 1 86 1 
34 1 130 1 169 1 117 1 223 1 125 1 
79 1 23 1 
79 1 86 1 
18 1 17 1 1 1 2 2 41 1 19 1 228 1 169 1 107 2 59 1 204 1 162 1 125 2 172 1 63 1 34 1 99 1 67 1 117 1 233 1 223 1 192 1 

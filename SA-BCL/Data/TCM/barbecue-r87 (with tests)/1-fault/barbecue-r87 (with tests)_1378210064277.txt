#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 98 195 220 109 94 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 245 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 98 195 220 109 14 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V | ASSIGN | 9412 | = null
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
60 1 160 1 74 1 138 1 117 1 169 1 
60 1 160 1 74 1 138 1 169 1 
209 1 217 2 79 1 
34 1 160 1 192 1 162 1 224 1 72 1 92 1 114 1 227 1 153 1 97 2 46 1 44 1 136 1 16 1 49 1 102 3 219 1 69 1 
160 1 192 1 72 1 224 1 92 1 114 2 166 1 227 1 153 1 97 1 46 1 44 1 16 1 102 3 203 1 69 1 
44 1 46 1 212 1 69 1 
146 1 192 1 36 1 72 1 227 2 97 1 46 1 44 1 16 1 102 2 69 1 
34 1 160 2 192 1 224 1 72 1 92 2 114 1 227 1 214 1 60 1 153 1 97 1 44 1 16 1 136 1 49 1 102 3 175 1 69 1 219 1 
34 1 160 2 192 1 224 1 72 1 92 2 114 1 227 1 214 1 60 1 153 1 97 1 44 1 16 1 136 1 49 1 102 3 69 1 219 1 
160 1 192 1 56 1 72 1 92 1 24 1 227 1 214 1 60 1 97 1 46 1 44 1 15 1 16 1 102 2 175 1 69 1 
160 1 192 1 56 1 72 1 92 1 24 1 227 1 214 1 3 1 60 1 97 1 46 1 44 1 16 1 102 2 175 1 69 1 
210 1 160 1 192 1 56 1 72 1 92 1 24 1 227 1 198 1 214 1 60 1 97 1 46 1 44 1 16 1 102 2 141 1 69 1 
210 1 160 1 192 1 56 1 72 1 92 1 24 1 227 1 198 1 214 1 60 1 97 1 46 1 44 1 16 1 102 2 141 1 175 1 69 1 
97 2 44 1 46 1 16 1 192 2 72 1 112 1 102 3 227 1 69 1 
192 2 194 1 148 2 227 1 46 1 44 1 171 1 16 1 102 3 69 1 
44 1 46 1 16 1 192 1 194 1 201 1 148 1 102 2 227 2 69 1 
44 1 46 1 16 1 192 1 194 1 148 1 102 2 227 1 25 1 69 1 
44 1 46 1 16 1 192 1 194 1 148 1 149 1 102 2 227 1 69 1 
188 1 160 1 192 1 194 1 148 1 224 1 92 1 226 1 114 4 227 1 152 1 46 1 44 1 16 1 157 1 102 3 124 1 69 1 
192 1 194 1 148 1 227 1 46 1 44 1 16 1 102 2 63 1 69 1 88 1 
44 1 46 1 16 2 192 3 194 1 148 1 112 1 102 2 227 2 69 1 
55 1 160 1 192 2 194 1 148 2 224 1 92 1 114 1 227 1 166 1 46 1 44 1 16 2 157 1 102 4 69 1 
84 1 42 1 242 3 
242 1 
189 1 191 2 192 2 194 1 195 1 59 1 60 1 202 1 138 2 203 1 65 4 140 4 9 1 204 3 10 1 67 1 148 1 211 1 76 2 14 1 214 1 77 4 157 1 218 2 18 1 82 1 21 1 85 1 22 1 220 1 159 1 160 2 89 2 224 1 166 1 227 3 25 2 230 4 27 1 98 1 171 1 99 4 102 3 234 8 104 2 235 1 107 2 108 1 35 1 109 1 111 2 178 4 179 1 112 1 116 4 114 2 180 1 118 2 43 1 44 1 47 1 185 4 187 2 52 1 125 4 53 2 
189 1 193 2 192 2 2 2 194 1 131 1 195 1 59 1 197 1 60 1 4 1 199 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 207 2 206 2 205 2 145 4 147 1 148 1 211 1 14 1 214 1 77 3 78 3 156 2 157 1 18 1 82 1 21 1 85 1 87 2 22 1 220 1 86 2 159 1 222 2 160 2 163 4 23 2 224 1 164 2 166 1 165 4 227 3 25 2 170 2 230 4 231 2 27 1 98 1 171 1 99 3 30 2 232 2 173 2 101 2 102 3 234 14 104 4 32 2 108 1 109 1 237 1 177 2 111 4 113 2 112 1 114 2 40 2 180 1 241 2 118 2 182 2 44 1 183 1 121 4 184 2 123 2 52 1 125 4 247 2 127 2 
189 1 193 2 192 2 2 2 194 1 131 1 195 1 59 1 60 1 4 1 6 2 200 2 202 1 203 1 138 2 65 4 140 6 8 1 66 2 9 1 143 2 207 2 206 2 205 2 145 4 148 1 211 1 14 1 214 1 77 3 156 2 157 1 18 1 82 1 21 1 85 1 87 2 22 1 220 1 86 2 159 1 222 2 160 2 163 4 23 2 224 1 164 2 166 1 165 4 227 3 25 2 170 2 230 4 231 2 27 1 98 1 171 1 99 3 30 2 232 2 173 2 101 2 102 3 234 4 104 4 32 2 108 1 109 1 177 2 111 4 112 1 114 2 40 2 180 1 241 2 118 2 182 2 44 1 183 1 121 4 184 2 123 2 52 1 125 4 247 2 127 2 
189 1 193 3 192 2 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 66 2 9 1 143 2 206 2 205 2 207 3 145 5 148 1 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 85 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 165 5 227 3 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 174 1 108 1 109 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 121 3 122 1 52 1 125 4 247 2 127 2 
172 1 
189 1 193 3 192 2 2 2 194 1 195 1 133 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 146 1 148 1 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 85 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 165 5 227 4 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 108 1 109 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 52 1 125 4 247 2 126 1 127 2 
189 1 55 1 193 3 192 3 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 146 1 148 2 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 85 1 86 2 22 1 220 1 159 1 222 3 160 2 163 4 23 3 224 1 166 1 165 5 227 5 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 4 234 4 104 4 32 3 108 1 109 1 111 4 177 3 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 52 1 125 4 247 2 126 1 127 3 
189 1 193 3 192 2 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 148 1 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 85 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 165 5 227 3 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 108 1 109 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 52 1 125 4 247 2 126 1 127 2 
159 1 189 1 108 1 109 1 14 1 230 4 27 1 171 1 52 1 125 4 85 1 22 1 
27 1 109 1 125 1 14 1 230 1 
189 1 193 3 192 2 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 148 1 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 165 5 227 3 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 108 1 109 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 52 1 125 4 247 2 126 1 127 2 
189 1 193 3 192 2 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 148 1 211 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 94 1 165 5 227 3 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 108 1 109 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 52 1 125 4 247 2 126 1 127 2 
189 1 193 3 192 2 2 2 194 1 195 1 196 1 59 1 60 1 4 1 6 2 200 2 202 1 138 2 203 1 65 4 140 6 8 1 66 2 9 1 143 2 206 2 205 2 207 3 145 5 148 1 211 1 14 1 214 1 77 3 156 2 157 1 158 2 18 1 82 1 21 1 85 1 86 2 22 1 220 1 159 1 222 2 160 2 163 4 23 3 224 1 166 1 165 5 227 3 25 2 170 2 230 4 27 1 98 1 171 1 99 3 30 2 173 2 232 3 102 3 234 4 104 4 32 3 108 1 109 1 236 1 111 4 177 2 112 1 114 2 40 3 180 1 118 2 241 3 182 3 120 1 44 1 183 1 121 3 122 1 245 1 52 1 125 4 247 2 127 2 
2 2 131 1 134 1 4 1 6 2 137 2 138 2 139 1 8 1 140 6 9 1 142 1 143 2 145 4 12 1 14 1 153 1 156 2 18 1 19 2 21 1 22 1 159 1 160 2 163 4 23 2 164 2 165 4 166 1 25 2 170 2 27 1 173 2 30 2 32 2 177 2 38 1 40 2 180 1 41 2 182 2 44 1 183 1 184 2 52 1 189 1 192 2 193 2 195 1 59 1 60 1 200 2 61 1 202 1 203 1 65 4 66 2 205 2 206 2 207 2 72 1 211 1 214 1 77 3 82 1 83 2 85 1 86 2 220 1 87 2 221 1 222 2 90 1 224 1 227 3 230 4 97 1 231 2 98 1 99 3 232 2 101 2 233 1 102 3 234 4 103 1 104 4 108 1 109 1 111 4 112 1 114 2 118 2 241 2 121 4 123 2 125 4 247 2 127 2 128 2 
147 1 31 1 234 1 
71 1 234 1 
71 1 234 1 
60 1 160 1 99 1 29 1 234 1 140 1 
56 1 160 1 24 1 240 1 181 1 229 1 60 1 99 1 234 1 140 1 141 1 81 1 
234 1 213 1 
60 1 160 1 56 1 234 1 24 1 140 1 81 1 
238 1 234 1 
71 1 234 1 
238 1 234 1 
238 1 234 1 
135 1 178 1 234 1 96 1 
39 1 234 1 116 1 
190 1 71 1 192 1 37 1 72 1 91 1 227 1 76 1 95 1 215 2 97 1 44 1 48 1 102 2 234 2 65 2 82 1 
246 1 
190 1 192 1 37 1 72 1 212 1 227 1 76 1 95 1 97 1 44 1 48 1 102 2 82 1 
97 2 4 1 222 2 44 1 192 1 177 2 72 1 102 3 227 1 82 1 127 2 70 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 173 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 26 2 97 1 4 1 6 1 200 1 30 1 232 1 173 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 177 1 72 1 58 1 227 1 4 1 97 1 44 1 102 2 82 1 127 1 70 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 26 2 97 1 4 1 6 1 200 1 30 1 232 1 173 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 133 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 82 1 127 1 
55 1 56 1 192 2 193 1 2 1 59 1 3 1 60 1 4 1 6 1 65 2 140 2 141 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 147 3 146 1 210 2 72 1 211 1 214 1 156 1 81 1 82 1 20 1 222 2 160 1 163 2 23 1 24 1 165 2 227 4 25 1 170 1 229 2 97 2 99 2 30 1 232 1 173 1 102 3 234 3 32 1 105 1 177 2 115 1 40 1 180 1 240 2 118 1 241 1 181 2 182 1 44 1 121 1 123 1 51 1 247 1 127 2 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 123 1 82 1 127 1 
97 2 4 1 222 2 44 1 192 1 177 2 72 1 102 3 227 1 82 1 127 2 70 1 
192 1 193 2 2 2 134 1 60 1 4 1 137 2 6 2 61 1 200 2 202 1 203 1 138 2 139 1 140 6 65 4 142 1 66 2 9 1 143 2 205 2 207 2 206 2 12 1 145 4 146 1 72 1 211 1 214 1 153 1 77 3 156 2 19 2 82 1 83 2 86 2 221 1 222 1 160 2 163 4 90 1 23 2 224 1 227 2 165 4 25 2 170 2 97 1 99 3 30 2 173 2 232 2 233 1 102 3 103 1 234 4 104 4 32 2 38 1 111 4 177 1 114 1 40 2 180 1 118 2 241 2 41 2 182 2 44 1 184 2 121 2 247 2 128 2 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 26 2 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
97 1 4 1 222 1 44 1 192 1 177 1 72 1 102 2 227 1 82 1 127 1 
192 1 193 1 2 1 4 1 137 1 6 1 200 1 202 1 203 1 138 1 140 3 65 2 142 1 66 1 9 1 143 1 205 1 207 1 206 1 145 2 72 1 153 1 77 3 156 1 19 1 82 1 83 1 86 1 222 1 160 1 163 2 23 1 224 1 227 1 165 2 25 1 170 1 97 1 30 1 173 1 232 1 102 3 234 2 104 2 32 1 111 2 177 1 114 1 40 1 118 1 241 1 41 1 182 1 44 1 184 1 121 1 247 1 128 1 127 1 
222 1 192 1 177 1 72 1 227 1 4 1 97 1 44 1 137 1 102 2 82 1 127 1 70 1 
193 1 2 1 137 1 6 1 200 1 202 1 138 1 203 1 140 3 65 2 142 1 9 1 66 1 143 1 205 1 206 1 207 1 145 2 77 3 156 1 157 1 19 1 83 1 86 1 87 1 160 1 163 2 23 1 224 1 164 1 165 2 25 1 170 1 231 1 171 1 173 1 232 1 30 1 101 1 102 1 234 2 104 2 32 1 111 2 114 1 40 1 118 1 241 1 41 1 182 1 121 2 184 1 123 1 247 1 128 1 
192 1 193 1 2 1 133 1 4 1 137 1 6 1 200 1 202 1 203 1 138 1 140 3 65 2 142 1 66 1 9 1 143 1 205 1 207 1 206 1 145 2 72 1 153 1 77 3 156 1 19 1 82 1 83 1 86 1 222 1 160 1 163 2 23 1 224 1 227 1 165 2 25 1 170 1 97 1 30 1 173 1 232 1 102 3 234 2 104 2 32 1 111 2 177 1 114 1 40 1 118 1 241 1 41 1 182 1 44 1 184 1 121 1 247 1 128 1 127 1 
192 1 193 1 194 1 2 1 133 1 4 1 137 1 6 1 200 1 202 1 203 1 138 1 140 3 65 2 142 1 66 1 9 1 143 1 205 1 207 1 206 1 145 2 148 1 77 3 156 1 157 1 19 1 82 1 83 1 86 1 222 1 160 1 163 2 23 1 224 1 227 1 165 2 25 1 170 1 171 1 30 1 232 1 173 1 102 3 234 2 104 2 32 1 111 2 177 1 114 1 40 1 118 1 241 1 41 1 182 1 44 1 184 1 121 1 247 1 128 1 127 1 
222 1 193 1 192 1 163 2 23 1 2 1 164 1 227 1 165 2 231 1 97 1 4 1 6 1 30 1 232 1 173 1 101 1 102 2 65 2 32 1 66 1 143 1 207 1 205 1 206 1 70 1 145 2 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 200 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 200 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 200 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 2 23 1 2 1 164 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 173 1 200 1 102 2 32 1 65 2 66 1 143 1 206 1 205 1 207 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 200 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
243 1 184 1 111 1 234 1 104 1 
243 1 111 1 234 1 104 1 86 1 
184 1 176 1 111 1 234 1 104 1 68 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
193 1 56 1 192 1 2 1 59 1 60 1 4 1 6 1 200 1 138 1 140 3 141 4 65 2 66 1 143 1 207 1 205 1 206 1 70 1 145 2 210 1 72 1 211 1 214 1 156 1 81 1 82 1 86 1 87 1 222 1 160 1 163 2 23 1 24 1 164 1 227 2 165 2 25 1 170 1 229 3 231 1 97 1 99 3 30 1 232 1 173 1 101 1 102 2 234 2 104 2 32 1 111 2 177 1 40 1 180 1 240 3 241 1 118 1 181 3 182 1 44 1 184 1 121 2 123 1 247 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 133 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 200 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 26 2 97 1 4 1 6 1 200 1 30 1 232 1 173 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 26 2 231 1 97 1 4 1 6 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 164 1 165 2 227 1 231 1 97 1 4 1 6 1 30 1 232 1 173 1 101 1 102 2 32 1 65 3 66 1 143 1 205 1 207 1 206 1 70 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 2 123 1 82 1 127 1 87 1 
222 1 192 1 193 1 163 3 23 1 2 1 165 2 227 1 97 1 4 1 6 1 30 1 232 1 173 1 102 2 65 3 32 1 66 1 143 1 205 1 207 1 206 1 145 2 71 1 177 1 72 1 40 1 241 1 182 1 44 1 156 1 121 1 82 1 127 1 
56 1 192 1 160 1 24 1 227 2 167 1 59 1 25 1 229 2 170 1 97 1 60 1 136 1 99 2 102 2 234 4 141 3 140 2 34 1 147 3 210 1 239 1 72 1 13 1 114 1 73 1 211 1 75 1 180 1 240 2 76 1 118 1 181 2 151 1 214 1 44 1 15 1 49 1 247 1 82 1 219 1 
56 1 192 1 160 1 57 1 24 1 227 1 167 1 25 1 229 2 170 1 97 1 60 1 99 2 62 1 63 1 102 2 234 4 141 3 140 2 33 1 12 1 147 3 210 1 239 1 72 1 13 1 73 1 211 1 75 1 180 1 240 2 76 1 118 1 41 1 181 2 151 1 44 1 17 1 19 1 82 1 247 1 83 1 128 1 88 1 
222 1 193 3 192 1 163 2 2 1 23 3 133 1 227 1 165 4 196 2 4 1 97 1 6 1 200 1 30 1 173 1 232 3 102 2 65 2 32 3 66 1 143 1 206 1 205 1 207 3 145 4 177 1 72 1 40 3 241 3 182 3 120 1 44 1 156 1 121 3 122 1 217 1 82 1 127 1 
222 1 0 1 193 1 192 1 23 1 227 1 165 1 196 1 4 1 97 1 232 1 102 2 234 1 104 1 32 1 207 1 145 1 71 1 111 1 177 1 72 1 40 1 241 1 182 1 120 1 44 1 243 1 121 1 122 1 158 1 82 1 127 1 
222 1 193 3 192 1 23 3 227 1 165 3 196 3 4 1 97 1 232 3 102 2 32 3 11 1 207 3 145 3 177 1 72 1 40 3 241 3 182 3 120 1 44 1 121 3 122 1 82 1 127 1 
222 1 193 1 192 1 23 1 227 1 165 1 196 1 4 1 97 1 232 1 102 2 32 1 207 1 145 1 177 1 72 1 149 1 40 1 241 1 182 1 120 1 44 1 121 1 122 1 82 1 127 1 
222 1 192 1 177 1 72 1 149 1 227 1 196 1 4 1 97 1 120 1 44 1 102 2 82 1 127 1 
222 1 193 1 192 1 23 1 227 1 165 1 196 1 4 1 97 1 232 1 102 2 32 1 207 1 145 1 177 1 72 1 40 1 241 1 182 1 120 1 44 1 121 1 122 1 82 1 127 1 
5 1 208 1 130 1 102 1 
162 1 223 1 100 1 102 1 244 1 
5 1 1 1 102 1 
162 1 223 1 102 1 119 2 
5 1 225 1 
210 1 99 1 141 1 240 1 229 1 181 1 
210 1 99 1 141 1 81 1 240 1 229 1 181 1 
60 1 160 1 211 1 180 1 
12 1 160 1 60 1 155 1 19 1 83 1 128 1 
154 1 163 1 30 1 217 1 65 1 165 2 32 1 
165 1 32 1 
71 1 163 1 30 1 234 1 65 1 165 1 
165 1 32 1 
71 1 163 1 234 1 65 1 
194 1 
148 1 
148 1 
97 1 
72 1 
97 1 
192 1 110 1 149 1 93 1 227 1 76 1 119 1 44 1 45 1 7 1 50 1 102 2 186 1 64 1 82 1 
192 2 110 2 150 1 93 2 227 2 76 2 228 1 119 2 44 2 45 2 7 2 50 2 102 4 186 2 64 2 82 2 
192 1 110 1 150 1 93 1 227 1 76 1 119 1 44 1 45 1 7 1 50 1 102 2 186 1 64 1 82 1 
71 1 192 1 110 1 116 1 93 1 227 1 76 1 119 1 44 1 45 1 216 2 7 1 50 1 102 2 234 1 186 1 64 1 65 2 82 1 106 1 
132 1 
28 1 71 1 147 2 234 2 
71 1 147 2 161 1 234 2 
192 1 160 1 161 1 224 1 93 1 132 1 227 2 25 1 170 1 28 1 7 1 202 1 102 3 234 2 203 1 64 1 65 1 140 2 142 1 9 1 106 1 146 1 147 2 110 1 150 1 114 1 76 1 119 1 118 1 41 1 77 2 153 1 45 1 44 1 216 1 50 1 186 1 19 1 247 1 82 1 83 1 54 1 128 1 
44 1 80 1 64 1 212 1 82 1 
192 1 56 1 160 1 161 1 93 1 24 1 132 1 227 3 59 1 25 1 229 3 170 1 60 1 28 1 99 3 7 1 102 2 234 3 64 1 65 1 141 4 140 2 106 1 210 1 146 1 147 2 178 1 110 1 116 1 211 1 180 1 240 3 76 1 119 1 118 1 181 3 214 1 45 1 44 1 216 1 50 1 186 1 81 1 247 1 82 1 
192 1 110 1 93 1 212 1 227 1 76 1 119 1 44 1 45 1 7 1 50 1 102 2 186 1 80 1 64 1 82 1 
71 1 192 1 110 1 116 2 93 1 227 1 76 1 119 1 44 1 45 1 216 1 7 1 50 1 102 2 234 3 186 1 64 1 65 1 82 1 106 1 
192 1 110 1 93 1 227 1 76 1 228 1 119 1 44 1 45 1 7 1 50 1 102 2 186 1 64 1 82 1 
192 2 110 2 93 2 212 1 227 2 76 2 228 1 119 2 44 2 45 2 7 2 50 2 102 4 80 1 186 2 64 2 82 2 
71 1 35 1 192 1 116 1 93 1 227 1 76 1 119 1 135 1 44 1 47 1 102 2 185 2 234 2 187 1 65 2 204 1 82 1 67 1 10 1 
192 1 56 1 160 1 89 1 93 1 24 1 227 3 59 1 25 1 229 2 60 1 99 2 102 2 234 1 65 1 141 3 140 1 204 1 10 1 67 1 107 1 210 1 35 1 146 1 178 1 116 1 211 1 180 1 240 2 76 1 119 1 118 1 181 2 214 1 44 1 47 1 218 1 185 1 187 1 81 1 82 1 
191 1 217 1 185 1 65 1 204 1 53 1 
71 1 107 1 
71 1 89 1 
191 1 35 1 192 1 111 1 116 1 93 1 227 1 76 1 119 1 44 1 47 1 218 1 102 2 185 1 234 2 104 1 65 1 204 2 82 1 53 1 67 1 10 1 
35 1 47 1 212 1 204 1 10 1 67 1 
192 1 93 1 227 1 168 1 135 1 102 2 234 2 65 2 204 1 10 1 144 1 71 1 116 1 76 1 119 1 44 1 47 1 185 2 187 1 82 1 129 1 
191 1 192 1 93 1 227 1 102 2 234 2 104 1 65 1 204 2 10 1 67 1 209 1 35 1 111 1 39 1 116 1 76 1 119 1 44 1 47 1 218 1 217 1 185 1 82 1 53 1 
218 1 
191 1 192 1 160 1 89 1 224 1 93 1 227 2 25 1 202 1 102 3 234 3 138 1 203 1 104 1 65 2 140 2 142 1 204 2 9 1 10 1 67 1 107 1 146 1 35 1 111 1 178 2 116 2 114 1 76 1 119 1 118 1 41 1 77 4 153 1 44 1 47 1 218 1 185 2 187 1 19 1 82 1 83 1 53 1 128 1 129 1 
35 1 47 1 212 1 204 1 10 1 67 1 
191 1 192 1 56 1 160 1 89 1 93 1 24 1 227 3 59 1 25 1 229 4 60 1 99 4 102 2 234 3 138 1 104 1 65 2 141 5 140 2 204 2 10 1 67 1 107 1 210 1 35 1 146 1 111 1 178 2 116 2 211 1 180 1 240 4 76 1 119 1 118 1 181 4 214 1 44 1 47 1 218 1 185 2 187 1 81 1 82 1 53 1 

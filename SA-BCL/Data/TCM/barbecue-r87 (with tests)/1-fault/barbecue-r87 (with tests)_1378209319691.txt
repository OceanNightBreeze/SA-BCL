#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 26 195 226 8 93 203 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 26 195 226 8 93 203 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 26 195 226 8 93 203 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 26 195 226 8 93 203 38 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V ERROR java.lang.NullPointerException 105 113 219 41 201 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.NullPointerException 105 113 219 41 201 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.NullPointerException 105 113 219 41 81 138 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.NullPointerException 105 113 219 41 81 64 46 40 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.NullPointerException 105 113 219 41 81 138 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.NullPointerException 105 113 219 41 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V ERROR java.lang.NullPointerException 105 
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List; | RETURN | 32311 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 1 37 1 161 1 152 1 10 1 177 1 
95 1 37 1 152 1 10 1 177 1 
16 2 173 1 66 1 
95 1 80 1 14 1 55 1 210 1 211 1 5 1 174 2 20 1 115 3 29 1 46 1 165 1 64 1 220 1 239 1 120 1 68 1 35 1 
95 1 55 1 210 1 211 1 174 1 20 1 115 3 40 1 29 1 46 2 77 1 165 1 220 1 64 1 239 1 35 1 
224 1 55 1 210 1 165 1 211 1 174 1 115 2 220 1 20 1 35 1 
95 1 143 1 55 1 210 1 4 1 211 1 174 1 163 1 123 1 20 1 115 3 29 1 46 4 165 1 220 1 64 1 239 1 35 1 
9 1 56 1 55 1 210 1 165 1 211 1 174 1 115 2 220 1 20 1 35 1 
55 1 211 1 20 1 207 1 
55 1 210 2 211 1 188 1 174 1 20 1 115 2 101 1 165 1 220 1 35 1 
95 2 80 1 14 1 55 1 210 1 211 1 174 1 5 1 115 3 29 2 46 1 10 1 165 1 64 1 220 1 34 1 239 1 138 1 120 1 35 1 
95 2 80 1 14 1 55 1 210 1 211 1 174 1 5 1 115 3 29 2 46 1 10 1 165 1 64 1 220 1 239 1 138 1 120 1 35 1 
95 1 55 1 210 1 211 1 174 1 20 1 115 2 127 1 29 1 10 1 165 1 12 1 220 1 34 1 159 1 138 1 35 1 
95 1 55 1 210 1 211 1 174 1 20 1 115 2 21 1 127 1 29 1 10 1 165 1 12 1 220 1 34 1 138 1 35 1 
95 1 55 1 210 1 211 1 174 1 20 1 115 2 127 1 29 1 104 1 194 1 10 1 165 1 136 1 12 1 220 1 138 1 35 1 
95 1 55 1 210 1 211 1 174 1 20 1 115 2 127 1 29 1 104 1 194 1 10 1 165 1 136 1 12 1 220 1 34 1 138 1 35 1 
55 1 210 1 211 1 174 2 20 1 115 3 43 1 165 1 220 2 35 1 
200 1 55 1 210 1 211 1 20 1 115 3 133 1 154 2 220 2 35 1 
200 1 55 1 210 2 154 1 211 1 108 1 115 2 220 1 20 1 35 1 
140 1 200 1 55 1 210 1 211 1 20 1 115 2 154 1 220 1 35 1 
200 1 55 1 210 2 211 1 20 1 115 2 43 1 154 1 220 3 35 2 
95 1 1 1 200 1 55 1 210 1 211 1 20 1 115 4 86 1 29 1 46 1 77 1 154 2 220 2 64 1 35 2 
90 1 33 1 49 3 
49 1 
1 1 186 1 187 8 185 1 122 4 74 2 191 1 8 1 129 1 77 1 133 1 78 4 10 1 195 1 137 1 138 1 139 2 140 2 81 2 200 1 17 1 83 1 202 2 150 1 23 1 87 4 26 1 203 1 31 1 154 1 156 3 93 1 95 2 162 4 210 3 98 4 211 1 40 2 99 1 42 2 43 1 44 1 100 1 103 2 212 1 46 3 220 2 110 1 50 4 111 1 53 1 222 2 225 4 171 2 226 1 114 1 59 1 230 4 231 1 176 4 177 2 115 3 180 1 117 2 63 1 237 1 64 1 65 2 119 1 
1 1 71 1 73 1 187 12 185 1 122 1 6 1 191 1 126 1 193 1 8 1 129 1 132 1 135 1 133 1 134 1 78 2 195 1 137 1 140 1 81 1 15 1 200 1 83 1 23 1 24 1 87 4 25 2 26 1 203 1 28 2 27 1 154 1 93 1 95 1 160 1 162 2 210 3 98 4 211 1 41 1 40 1 43 1 212 1 102 1 214 1 46 1 105 1 106 3 164 1 219 1 107 1 220 2 111 1 53 1 54 1 169 2 222 2 226 1 113 1 231 1 177 1 232 1 115 3 180 1 234 1 62 2 117 2 237 1 64 1 
1 1 71 1 185 1 187 2 122 1 191 1 193 1 8 1 129 1 132 1 135 1 133 1 134 1 78 2 195 1 137 1 81 1 140 1 15 1 200 1 83 1 23 1 24 1 87 4 25 2 26 1 28 2 203 1 27 1 154 1 93 1 95 1 160 1 162 2 210 3 98 4 211 1 41 1 40 1 43 1 212 1 102 1 214 1 46 1 105 1 219 1 107 1 220 2 111 1 53 1 54 1 169 2 222 2 226 1 113 1 231 1 177 1 232 1 115 3 180 1 234 1 117 2 237 1 64 1 
70 2 1 1 2 2 71 2 187 4 185 1 122 4 124 3 191 1 193 3 8 1 129 1 131 2 77 1 132 3 133 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 200 1 201 2 83 1 23 1 24 5 87 4 25 2 26 1 27 2 203 1 28 2 31 1 153 1 154 1 93 1 95 2 160 4 36 3 162 6 210 3 98 4 211 1 41 2 40 1 99 1 43 1 100 1 212 1 214 1 46 2 105 3 219 2 220 2 111 1 51 3 221 3 53 1 54 2 222 4 169 2 226 1 227 1 113 2 172 3 229 1 59 1 230 3 231 1 177 2 232 2 115 3 180 1 116 2 117 4 237 1 64 1 240 5 184 2 67 1 
70 2 1 1 2 2 71 2 187 4 185 1 122 4 124 3 190 1 191 1 193 3 8 1 129 1 131 2 77 1 132 3 133 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 15 1 200 1 201 2 83 1 86 1 23 1 26 1 87 4 24 5 25 3 27 2 203 1 28 3 31 1 153 1 154 2 93 1 95 2 160 4 36 3 162 6 210 5 98 4 211 1 41 2 40 1 99 1 43 1 44 1 100 1 102 1 212 1 101 1 214 1 46 2 105 3 219 2 220 4 111 1 51 3 221 3 53 1 54 2 222 4 169 3 226 1 113 2 172 3 59 1 230 3 231 1 177 2 232 2 115 4 180 1 116 2 117 4 237 1 64 1 240 5 184 2 
70 2 1 1 2 2 71 2 187 4 185 1 122 4 124 3 190 1 191 1 193 3 8 1 129 1 131 2 77 1 132 3 133 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 15 1 200 1 201 2 83 1 23 1 26 1 87 4 24 5 25 2 27 2 203 1 28 2 31 1 153 1 154 1 93 1 95 2 160 4 36 3 162 6 210 3 98 4 211 1 41 2 40 1 99 1 43 1 44 1 100 1 102 1 212 1 214 1 46 2 105 3 219 2 220 2 111 1 51 3 221 3 53 1 54 2 222 4 169 2 226 1 113 2 172 3 59 1 230 3 231 1 177 2 232 2 115 3 180 1 116 2 117 4 237 1 64 1 240 5 184 2 
87 4 129 1 203 1 180 1 133 1 98 4 231 1 237 1 137 1 93 1 191 1 23 1 
30 1 
1 1 2 2 122 4 124 3 8 1 129 1 131 2 133 1 132 3 11 2 10 1 137 1 13 1 138 1 140 2 15 1 23 1 25 2 24 5 26 1 28 2 27 2 31 1 153 1 154 1 158 1 36 3 160 4 162 6 40 2 41 2 43 1 44 1 46 3 51 3 53 1 54 2 169 2 172 3 59 1 177 2 180 1 64 1 184 2 70 2 71 2 185 1 187 4 190 1 191 1 193 3 77 1 78 3 195 1 197 3 199 1 81 2 200 1 201 2 83 1 87 4 203 1 93 1 95 2 210 4 98 4 211 1 99 1 101 1 212 1 102 1 100 1 214 1 105 3 220 2 219 2 111 1 221 3 222 4 226 1 113 2 227 1 229 1 231 1 230 3 115 3 232 2 116 2 117 4 237 1 240 5 
71 1 185 1 187 2 122 1 191 1 193 1 8 1 129 1 132 1 135 1 134 1 78 2 195 1 137 1 81 1 140 1 15 1 83 1 23 1 24 1 25 2 87 4 26 1 28 2 203 1 27 1 93 1 95 1 160 1 162 2 210 3 98 4 211 1 41 1 40 1 43 1 212 1 102 1 214 1 46 1 105 1 165 1 219 1 107 1 220 2 111 1 53 1 54 1 169 2 222 2 226 1 113 1 174 1 231 1 177 1 232 1 115 3 180 1 234 1 117 2 237 1 64 1 239 1 
87 1 203 1 98 1 231 1 93 1 
70 2 1 1 2 2 71 2 187 4 185 1 122 4 124 3 190 1 191 1 193 3 8 1 129 1 131 2 77 1 132 3 133 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 15 1 200 1 201 2 83 1 87 4 24 5 25 2 26 1 27 2 203 1 28 2 31 1 153 1 154 1 93 1 95 2 160 4 36 3 162 6 210 3 98 4 211 1 41 2 40 1 99 1 43 1 100 1 102 1 212 1 214 1 46 2 105 3 219 2 220 2 111 1 51 3 221 3 53 1 54 2 222 4 169 2 226 1 227 1 113 2 172 3 229 1 59 1 230 3 231 1 177 2 232 2 115 3 180 1 116 2 117 4 237 1 64 1 240 5 184 2 
70 2 1 1 2 2 71 2 187 4 185 1 122 4 124 3 190 1 191 1 193 3 8 1 129 1 131 2 77 1 132 3 133 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 15 1 200 1 201 2 83 1 87 4 24 5 25 2 26 1 27 2 28 2 31 1 153 1 154 1 93 1 95 2 94 1 160 4 36 3 162 6 210 3 98 4 211 1 41 2 40 1 99 1 43 1 100 1 102 1 212 1 214 1 46 2 105 3 219 2 220 2 111 1 51 3 221 3 53 1 54 2 222 4 169 2 226 1 227 1 113 2 172 3 229 1 59 1 230 3 231 1 177 2 232 2 115 3 180 1 116 2 117 4 237 1 64 1 240 5 184 2 
70 2 1 1 2 2 71 2 187 5 185 1 122 4 124 3 191 1 193 3 8 1 129 1 131 2 77 1 134 1 132 3 133 1 135 1 78 3 10 1 11 2 195 1 13 1 137 1 138 1 197 3 199 1 140 2 81 2 15 1 200 2 201 2 83 1 23 1 26 1 87 4 24 5 25 3 27 2 203 1 28 3 31 1 153 1 154 2 93 1 95 2 160 4 36 3 38 1 162 6 210 4 98 4 211 2 41 2 40 1 99 1 43 1 100 1 102 1 212 2 214 2 46 2 105 3 47 1 107 1 219 2 220 3 111 1 51 3 221 3 53 1 54 2 222 5 169 3 226 1 227 1 113 2 172 3 229 1 59 1 230 3 231 1 177 2 232 2 115 5 180 1 116 2 234 1 117 5 237 1 64 1 240 5 184 2 
145 1 187 1 164 1 
223 1 187 1 
69 1 187 1 
69 1 187 1 
69 1 187 1 
223 1 187 1 
95 1 187 1 162 1 230 1 60 1 127 1 151 1 213 1 181 1 10 1 136 1 12 1 
95 1 162 1 187 1 10 1 230 1 217 1 
95 1 162 1 187 1 181 1 10 1 12 1 127 1 
223 1 187 1 
82 1 187 1 
187 1 176 1 157 1 
225 1 187 1 168 1 198 1 
52 2 97 1 223 1 200 1 187 2 210 1 122 2 211 1 115 2 42 1 212 1 205 1 154 1 218 1 220 1 183 1 109 1 
118 1 
97 1 205 1 200 1 210 1 154 1 211 1 183 1 115 2 220 1 207 1 42 1 109 1 212 1 
70 1 71 1 2 1 187 2 3 1 122 2 124 1 128 1 193 1 130 1 131 1 134 1 132 1 78 3 11 1 197 1 140 1 81 1 201 1 149 1 25 1 24 2 27 1 28 1 95 1 160 2 36 1 210 1 162 3 211 1 40 1 41 1 100 1 212 1 45 1 214 1 46 1 105 1 165 1 220 1 219 1 221 1 51 1 53 1 54 1 222 2 169 1 170 1 113 1 172 1 174 1 177 1 115 3 232 1 116 1 117 2 64 1 239 1 240 2 
169 1 210 1 3 1 211 1 174 1 115 2 212 1 25 1 28 1 214 1 165 1 220 1 79 1 
95 1 160 1 1 1 71 1 187 2 162 2 122 1 40 1 41 1 193 1 46 1 105 1 134 1 133 1 132 1 78 2 219 1 107 1 81 1 53 1 140 1 54 1 222 2 113 1 177 1 115 1 232 1 24 1 27 1 234 1 117 2 64 1 
70 1 71 1 2 1 187 2 3 1 122 2 124 1 128 1 193 1 130 1 131 1 134 1 132 1 78 3 11 1 197 1 140 1 81 1 201 1 149 1 25 1 24 2 27 1 28 1 158 1 95 1 160 2 36 1 210 1 162 3 211 1 40 1 41 1 100 1 212 1 45 1 214 1 46 1 105 1 165 1 220 1 219 1 221 1 51 1 53 1 54 1 222 2 169 1 170 1 113 1 172 1 174 1 177 1 115 3 232 1 116 1 117 2 64 1 239 1 240 2 
70 1 1 1 2 1 71 1 187 2 3 1 122 2 124 1 128 1 193 1 130 1 131 1 134 1 133 1 132 1 78 3 11 1 197 1 81 1 140 1 200 1 201 1 149 1 25 1 24 2 27 1 28 1 154 1 158 1 95 1 36 1 160 2 210 1 162 3 211 1 40 1 41 1 100 1 212 1 45 1 214 1 46 1 105 1 220 1 219 1 221 1 51 1 53 1 54 1 222 2 169 1 170 1 113 1 172 1 177 1 115 3 232 1 116 1 117 2 64 1 240 2 
160 1 169 1 71 1 113 1 210 1 122 1 211 1 174 1 115 2 41 1 212 1 24 1 193 1 25 1 28 1 214 1 234 1 105 1 132 1 165 1 219 1 107 1 220 1 79 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 116 1 240 2 
160 2 71 1 210 1 211 1 122 2 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 219 1 197 1 51 1 169 1 201 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 116 1 240 2 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 219 1 220 1 107 1 79 1 197 1 51 1 169 1 113 1 201 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 116 1 240 2 
222 1 187 1 134 1 117 1 148 1 
27 1 222 1 187 1 117 1 148 1 
204 1 222 1 146 1 187 1 134 1 117 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
95 1 160 1 71 1 162 2 210 2 187 2 122 1 211 1 41 1 212 1 127 1 193 1 213 2 214 1 105 1 132 1 134 1 136 2 194 1 165 1 10 1 12 1 219 1 107 1 220 1 79 1 138 1 140 1 81 1 54 1 169 1 222 2 113 1 83 1 60 2 230 2 174 1 177 1 232 1 115 2 24 1 151 2 25 1 28 1 27 1 31 1 234 1 117 2 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 116 1 240 2 158 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 211 1 122 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 165 1 220 1 219 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 
25 1 28 1 169 1 214 1 210 1 165 1 211 1 174 1 115 2 220 1 212 1 
169 2 210 1 211 1 174 2 115 3 212 1 25 2 28 2 214 1 165 1 220 1 79 1 
95 1 160 1 71 1 162 2 210 2 187 2 122 1 211 1 41 1 40 1 101 1 212 1 193 1 214 1 131 1 46 1 105 1 132 1 134 1 78 2 165 1 219 1 220 1 197 1 51 1 140 1 81 1 53 1 54 1 169 1 222 2 113 1 172 1 174 1 177 1 232 1 115 3 24 1 25 1 28 1 27 1 117 2 64 1 239 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
169 2 210 1 211 1 174 2 115 3 212 1 25 2 28 2 214 1 165 1 220 1 79 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 107 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 116 1 240 2 
36 1 160 1 2 1 71 1 210 1 211 1 122 1 124 1 7 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 116 1 240 1 
169 1 210 1 211 1 174 1 115 2 212 1 25 1 28 1 214 1 76 1 165 1 220 1 79 1 
160 1 71 1 210 1 211 1 122 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 165 1 220 1 219 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 
36 1 160 1 2 1 71 1 210 1 211 1 122 1 124 1 41 1 212 1 193 2 214 1 131 1 132 1 105 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 206 1 116 1 240 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 2 214 1 131 1 132 1 105 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 206 1 116 1 240 2 
160 1 71 1 210 1 211 1 122 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 165 1 220 1 219 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 
160 1 71 1 210 1 211 1 122 1 41 1 212 1 193 1 214 1 131 1 132 1 105 1 165 1 220 1 219 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 
36 1 160 3 70 1 2 1 71 1 210 1 211 1 122 3 124 1 41 1 212 1 193 2 214 1 131 1 105 1 132 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 223 1 169 1 201 1 113 1 172 1 174 1 115 2 24 2 25 1 28 1 206 1 116 1 240 2 158 1 
36 1 160 1 2 1 71 1 210 1 211 1 122 1 124 1 41 1 212 1 193 2 214 1 131 1 132 1 105 1 11 1 165 1 220 1 219 1 197 1 221 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 206 1 116 1 240 1 
71 1 187 2 122 1 127 1 192 1 193 1 131 1 132 1 10 1 194 1 136 1 12 1 79 1 138 1 197 1 81 1 140 1 83 1 86 1 24 1 25 2 151 1 28 2 31 1 155 1 95 1 160 1 210 4 162 1 211 1 41 1 101 1 212 1 213 1 214 1 105 1 164 2 165 1 220 2 48 1 219 1 51 1 54 1 169 2 113 1 172 1 174 2 230 1 60 1 115 3 232 1 179 1 
160 1 71 1 210 1 122 1 211 1 41 1 212 1 193 1 214 1 131 1 105 1 132 1 165 1 220 1 219 1 79 1 197 1 51 1 169 1 113 1 172 1 174 1 115 2 24 1 25 1 28 1 179 1 234 1 
95 1 162 2 210 1 187 4 211 1 75 1 42 1 212 1 127 1 45 1 128 1 213 2 9 1 164 3 136 3 165 1 10 1 194 1 12 1 167 1 220 1 81 1 140 1 142 1 54 1 170 1 56 1 57 1 58 1 175 1 59 1 60 2 230 2 174 1 115 2 232 1 149 1 151 2 31 1 235 1 92 1 236 1 91 1 32 1 
95 1 162 2 210 2 187 4 211 1 5 1 42 1 212 1 127 1 213 2 46 1 164 3 136 3 165 1 10 1 194 1 12 1 220 1 138 1 80 1 14 1 81 1 140 1 142 1 54 1 57 1 83 1 58 1 59 1 60 2 230 2 174 1 232 1 115 2 151 2 31 1 235 1 236 1 91 1 159 1 120 1 
221 1 199 1 51 1 36 1 169 1 210 1 172 1 211 1 174 1 124 1 115 2 212 1 25 1 193 1 24 1 28 1 214 1 132 1 105 1 153 1 165 1 220 1 13 1 197 1 240 1 
36 3 210 1 211 1 124 3 212 1 193 3 214 1 105 3 132 3 165 1 220 1 13 1 197 3 51 3 199 1 221 3 141 1 169 1 172 3 174 1 115 2 24 3 25 1 28 1 153 3 240 3 
36 1 210 1 211 1 124 1 212 1 193 1 214 1 105 1 132 1 165 1 220 1 13 1 197 1 51 1 199 1 221 1 169 1 224 1 172 1 174 1 115 2 24 1 25 1 28 1 153 1 240 1 
169 1 224 1 210 1 211 1 174 1 115 2 212 1 25 1 28 1 214 1 153 1 165 1 220 1 13 1 
160 2 36 3 70 1 2 1 71 1 210 1 122 2 211 1 124 3 41 1 212 1 193 3 214 1 131 1 105 3 132 3 11 1 165 1 219 1 220 1 13 1 197 3 51 3 199 1 221 3 16 1 169 1 201 1 113 1 172 3 174 1 115 2 24 4 25 1 28 1 116 1 153 2 158 1 240 4 
36 1 187 1 210 1 211 1 124 1 212 1 193 1 214 1 105 1 132 1 165 1 220 1 13 1 197 1 51 1 199 1 221 1 223 1 222 1 169 1 228 1 172 1 174 1 148 1 115 2 24 1 25 1 28 1 153 1 117 1 240 1 184 1 
121 1 115 1 238 1 
144 2 115 1 125 1 68 1 
0 1 115 1 125 1 189 1 68 1 
166 1 115 1 238 1 208 1 
89 1 238 1 
95 1 170 1 75 1 149 1 85 1 45 1 10 1 
95 1 31 1 10 1 59 1 
151 1 213 1 194 1 136 1 60 1 230 1 
151 1 213 1 181 1 194 1 136 1 60 1 230 1 
24 1 160 1 223 1 70 1 187 1 122 1 
24 1 105 1 
160 1 223 1 187 1 122 1 
24 2 160 1 16 1 70 1 105 1 122 1 84 1 
24 1 105 1 
154 1 
200 1 
154 1 
174 1 
174 1 
165 1 
209 1 223 1 112 1 200 1 187 3 39 1 210 1 122 1 147 1 211 1 176 2 19 1 115 2 42 1 22 1 212 1 178 1 154 1 220 1 196 1 
209 1 112 1 200 1 39 1 210 1 211 1 115 2 22 1 42 1 212 1 178 1 215 1 154 1 220 1 196 1 
209 2 112 2 200 2 39 2 210 2 18 1 211 2 115 4 22 2 42 2 212 2 178 2 215 1 154 2 220 2 207 1 196 2 
209 1 112 1 200 1 39 1 210 1 18 1 211 1 115 2 22 1 42 1 212 1 178 1 154 1 220 1 207 1 196 1 
209 1 112 1 200 1 39 1 210 1 211 1 115 2 42 1 22 1 212 1 178 1 154 1 220 1 196 1 241 1 
209 1 224 1 112 1 200 1 39 1 210 1 211 1 115 2 42 1 22 1 212 1 178 1 154 1 220 1 196 1 
209 2 112 2 200 2 39 2 210 2 211 2 115 4 22 2 42 2 212 2 178 2 215 1 154 2 220 2 196 2 241 1 
209 1 223 1 112 1 200 1 187 1 39 1 210 1 122 2 147 2 211 1 176 1 19 1 115 2 42 1 22 1 212 1 178 1 154 1 220 1 196 1 
182 1 
96 1 223 1 187 2 164 2 
223 1 216 1 187 2 164 2 
95 1 96 1 209 1 1 1 72 1 162 2 187 2 210 2 39 1 122 1 211 1 40 1 42 1 100 1 212 1 101 1 45 1 128 1 130 1 46 1 216 1 78 2 164 2 220 1 196 1 140 1 53 1 81 1 54 1 170 1 200 1 112 1 147 1 19 1 232 1 115 3 149 1 22 1 178 1 182 1 154 1 64 1 241 1 
209 1 211 1 18 1 207 1 212 1 
95 1 96 1 209 1 162 2 187 3 210 3 39 1 122 1 211 1 42 1 212 1 101 1 127 1 213 3 216 1 164 2 136 4 194 1 10 1 12 1 220 1 196 1 138 1 140 1 81 1 54 1 225 1 200 1 112 1 83 1 147 1 59 1 60 3 230 3 176 1 19 1 232 1 115 2 22 1 151 3 178 1 31 1 181 1 182 1 154 1 
17 1 186 1 114 1 207 1 156 1 110 1 
186 1 210 1 187 2 211 1 122 2 42 1 212 1 220 1 50 2 198 1 223 1 200 1 114 1 176 1 115 2 61 1 202 1 233 1 88 1 154 1 156 1 
223 1 200 1 17 1 187 2 210 1 186 1 122 2 114 1 211 1 176 1 115 2 42 1 202 1 212 1 154 1 220 1 156 1 110 1 198 1 50 2 
95 1 187 1 162 1 186 1 210 3 122 1 211 1 74 1 42 1 212 1 101 1 127 1 213 2 136 3 194 1 10 1 12 1 220 1 110 1 138 1 50 1 139 1 140 1 81 1 225 1 200 1 171 1 17 1 83 1 114 1 59 1 60 2 230 2 176 1 115 2 202 1 151 2 31 1 181 1 154 1 156 1 
16 1 122 1 65 1 156 1 103 1 50 1 
223 1 74 1 
223 1 139 1 
186 1 210 1 187 2 211 1 122 1 42 1 212 1 103 1 220 1 110 1 50 1 222 1 200 1 17 1 171 1 114 1 176 1 115 2 154 1 117 1 156 2 65 1 
171 1 
95 1 1 1 187 3 186 1 210 2 162 2 122 2 211 1 74 1 40 1 42 1 101 1 100 1 103 1 212 1 45 1 128 1 130 1 46 1 78 4 220 1 110 1 50 2 139 1 81 1 53 1 140 1 222 1 170 1 225 2 200 1 171 1 17 1 114 1 176 2 177 1 115 3 149 1 61 1 202 1 117 1 154 1 64 1 65 1 156 2 
186 1 210 1 187 2 211 1 122 1 42 1 212 1 103 1 220 1 110 1 50 1 222 1 16 1 200 1 17 1 171 1 114 1 173 1 176 1 115 2 154 1 117 1 156 2 65 1 157 1 
17 1 186 1 114 1 207 1 156 1 110 1 
95 1 187 3 162 2 186 1 210 3 122 2 211 1 74 1 42 1 103 1 212 1 101 1 127 1 213 4 136 5 194 1 10 1 12 1 220 1 110 1 138 1 50 2 139 1 140 1 81 1 222 1 225 2 200 1 171 1 17 1 83 1 114 1 59 1 60 4 230 4 176 2 177 1 115 2 202 1 151 4 31 1 181 1 117 1 154 1 65 1 156 2 

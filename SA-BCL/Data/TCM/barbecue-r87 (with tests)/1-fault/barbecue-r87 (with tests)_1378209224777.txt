#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 141 224 182 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 7554 | return null
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 143 1 172 1 145 1 249 1 166 1 
2 1 143 1 172 1 145 1 249 1 
38 2 152 1 244 1 
58 1 59 1 140 1 245 1 142 1 192 1 145 1 77 1 221 1 168 3 102 1 196 1 47 1 104 2 29 1 153 1 241 1 202 1 228 1 
140 1 245 1 142 1 192 1 231 1 145 1 77 2 221 1 168 3 196 1 47 1 104 1 29 1 239 1 241 1 228 1 
245 1 140 2 142 2 104 1 47 1 192 1 196 1 49 1 221 3 168 2 
140 2 245 1 142 1 192 1 145 1 77 1 221 2 168 4 196 1 47 1 104 2 29 1 198 1 239 1 241 1 228 1 
47 1 192 1 196 1 226 1 
140 1 245 1 142 2 192 1 221 1 100 1 168 2 196 1 47 1 104 1 242 1 
140 1 245 1 59 1 58 1 142 1 143 1 192 1 145 2 77 1 221 1 208 1 113 1 168 3 102 1 47 1 104 1 29 1 153 1 241 2 228 1 
140 1 245 1 59 1 58 1 142 1 143 1 192 1 145 2 77 1 221 1 208 1 168 3 102 1 47 1 104 1 29 1 153 1 241 2 228 1 
140 1 245 1 142 1 143 1 192 1 145 1 221 1 208 1 113 1 101 1 168 2 196 1 47 1 104 1 118 1 241 1 15 1 
140 1 245 1 142 1 143 1 192 1 145 1 221 1 208 1 113 1 179 1 101 1 168 2 196 1 47 1 104 1 241 1 15 1 
140 1 245 1 142 1 109 1 143 1 192 1 145 1 75 1 221 1 98 1 208 1 101 1 168 2 196 1 47 1 104 1 241 1 15 1 
140 1 245 1 142 1 109 1 143 1 192 1 145 1 75 1 221 1 98 1 208 1 113 1 101 1 168 2 196 1 47 1 104 1 241 1 15 1 
245 1 140 1 142 1 104 2 47 1 192 1 196 1 49 1 221 2 168 3 
191 1 140 1 142 1 47 1 192 1 196 1 221 2 87 2 39 1 168 3 
191 1 140 1 142 2 47 1 192 1 196 1 221 1 87 1 167 1 168 2 
191 1 140 1 142 1 47 1 192 1 196 1 213 1 221 1 87 1 168 2 
191 1 140 1 142 1 47 1 192 1 196 1 221 1 87 1 43 1 168 2 
140 1 191 1 142 1 122 1 192 1 145 1 77 4 221 1 168 3 132 1 196 1 47 1 181 1 29 1 33 1 87 1 241 1 156 1 
140 1 191 1 142 1 192 1 232 1 221 1 168 2 196 1 47 1 154 1 87 1 
46 1 79 1 82 3 
82 1 
141 1 0 1 1 3 142 5 4 2 143 1 6 1 145 2 8 3 7 2 10 1 14 2 156 1 155 2 158 14 160 3 23 1 165 1 168 4 169 3 170 1 171 1 172 2 29 1 31 2 35 1 37 3 39 1 180 1 47 1 183 1 49 1 184 3 187 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 63 2 64 3 197 1 198 1 199 1 73 2 206 2 207 1 77 2 76 2 208 1 80 1 210 1 86 1 85 3 213 2 87 2 214 2 88 2 215 1 90 4 92 3 93 1 218 2 94 5 95 4 96 1 220 1 221 4 222 1 100 1 103 3 224 1 105 1 230 3 108 4 110 1 231 1 233 3 114 3 117 1 237 2 239 1 240 1 123 2 127 1 250 4 128 2 130 2 131 1 252 3 134 4 138 5 
1 3 141 1 0 1 142 3 143 1 4 2 73 2 145 2 6 1 76 2 77 2 207 1 7 2 8 3 208 1 80 1 210 1 14 2 85 3 86 1 213 2 87 1 214 2 88 2 155 2 156 1 215 1 90 4 158 4 93 1 92 2 218 2 95 4 94 5 160 2 96 1 220 1 221 2 23 1 165 1 222 1 169 3 168 3 103 3 172 2 171 1 29 1 224 1 31 2 105 1 35 1 230 3 108 4 231 1 37 2 233 3 39 1 180 1 114 3 47 1 237 2 49 1 117 1 184 3 239 1 187 1 240 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 3 134 4 197 1 199 1 138 5 
141 1 57 1 108 4 95 4 165 1 39 1 80 1 171 1 224 1 86 1 51 1 105 1 
1 4 141 1 0 1 69 1 71 1 142 3 143 1 73 2 74 2 145 2 207 1 77 3 208 1 149 2 209 2 80 1 151 4 86 1 212 2 213 2 87 1 156 1 215 1 90 2 158 8 159 2 19 2 95 4 96 1 220 1 221 2 23 1 165 1 168 3 172 2 171 1 224 1 29 1 105 1 225 1 35 1 108 4 231 2 39 1 42 3 235 1 236 1 47 1 49 1 117 1 239 1 185 2 187 1 240 1 186 4 51 1 54 4 55 1 190 1 57 1 191 1 246 4 60 4 127 1 131 1 251 4 134 2 65 1 255 1 
1 3 141 1 0 1 142 3 143 1 4 2 73 2 145 2 76 2 207 1 77 2 8 2 7 2 208 1 80 1 12 2 14 2 85 2 86 1 213 2 87 1 214 2 89 2 156 1 88 2 215 1 90 4 158 4 92 2 93 1 218 2 94 4 95 4 160 2 96 1 220 1 221 2 23 1 165 1 169 2 168 4 103 2 172 2 171 1 224 1 29 1 31 2 105 1 35 1 230 2 108 4 231 1 37 2 233 2 112 2 39 1 180 1 114 2 47 1 116 2 237 2 49 1 117 1 184 4 239 1 240 1 186 3 51 1 54 4 55 1 189 2 190 1 57 1 191 1 60 6 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 2 197 1 134 4 253 1 67 2 138 4 
1 3 141 1 0 1 3 1 142 3 143 1 4 2 73 2 145 2 76 2 207 1 77 2 8 2 7 2 208 1 80 1 12 2 14 2 85 2 86 1 213 2 87 1 214 2 89 2 156 1 88 2 215 1 90 4 158 4 92 2 93 1 218 2 94 4 95 4 160 2 96 1 220 1 221 2 23 1 165 1 169 2 168 3 103 2 172 2 171 1 224 1 29 1 31 2 105 1 35 1 230 2 108 4 231 1 37 2 233 2 112 2 39 1 180 1 114 2 47 1 116 2 237 2 49 1 117 1 184 4 239 1 187 1 240 1 186 3 51 1 54 4 55 1 189 2 190 1 57 1 191 1 60 6 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 2 197 1 134 4 253 1 67 2 138 4 
1 3 141 1 0 1 142 3 143 1 4 2 73 2 145 2 6 1 76 2 77 2 207 1 7 2 8 3 208 1 80 1 14 2 85 3 86 1 213 2 87 1 214 2 88 2 155 2 156 1 215 1 90 4 158 4 92 2 218 2 94 5 95 4 160 2 96 1 220 1 221 2 23 1 165 1 222 1 169 3 168 3 103 3 172 2 223 1 171 1 29 1 224 1 31 2 105 1 35 1 230 3 108 4 231 1 37 2 233 3 39 1 180 1 114 3 47 1 237 2 49 1 117 1 184 3 239 1 240 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 61 1 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 3 134 4 199 1 201 1 138 5 
0 1 141 1 1 3 3 1 142 3 4 2 143 1 145 2 146 2 147 2 7 2 8 2 12 2 14 2 158 4 160 2 164 1 23 1 165 1 168 3 169 2 172 2 171 1 29 1 173 1 31 2 175 2 35 1 37 2 178 1 180 1 47 1 49 1 184 4 187 1 51 1 186 3 54 4 55 1 189 2 190 1 57 1 60 6 62 1 63 2 197 1 200 1 67 2 73 2 72 1 77 2 207 1 76 2 208 1 80 1 86 1 85 2 213 2 214 2 88 2 89 2 215 1 90 4 216 2 93 1 92 2 218 2 95 4 94 4 96 1 220 1 221 2 97 1 103 2 104 1 224 1 105 1 228 1 107 1 230 2 108 4 231 1 233 2 112 2 234 1 114 2 116 2 237 2 117 1 239 1 240 1 119 1 245 1 123 2 125 2 127 1 250 4 128 2 130 2 131 1 252 2 134 4 253 1 138 4 
177 1 
1 3 141 1 0 1 142 4 143 1 4 2 73 2 145 2 6 1 76 2 77 3 207 1 7 2 8 3 208 1 80 1 210 1 14 2 85 3 86 1 213 2 87 1 214 2 88 2 155 2 156 1 215 1 90 4 158 4 93 1 92 2 218 2 95 4 94 5 160 2 96 1 220 1 221 2 23 1 165 1 222 1 100 1 24 1 169 3 168 3 103 3 172 2 171 1 29 1 224 1 31 2 105 1 35 1 230 3 108 4 231 2 37 2 233 3 39 1 180 1 114 3 47 1 237 2 49 1 117 1 184 3 239 1 187 1 240 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 61 1 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 3 134 4 197 1 199 1 201 1 138 5 
141 1 95 1 108 1 171 1 224 1 
1 3 141 1 0 1 142 3 143 1 4 2 73 2 145 2 6 1 76 2 77 2 207 1 7 2 8 3 208 1 80 1 210 1 14 2 85 3 213 2 87 1 214 2 88 2 155 2 156 1 215 1 90 4 158 4 93 1 92 2 218 2 95 4 94 5 160 2 96 1 220 1 221 2 23 1 165 1 222 1 169 3 168 3 103 3 172 2 171 1 29 1 224 1 31 2 105 1 35 1 230 3 108 4 231 1 37 2 233 3 39 1 180 1 114 3 47 1 237 2 49 1 117 1 184 3 239 1 240 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 61 1 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 3 134 4 197 1 199 1 201 1 138 5 
1 3 141 1 0 1 142 3 143 1 4 2 73 2 145 2 6 1 76 2 77 2 207 1 7 2 8 3 208 1 80 1 210 1 14 2 85 3 213 2 87 1 214 2 88 2 155 2 156 1 215 1 90 4 158 4 93 1 92 2 218 2 95 4 94 5 160 2 96 1 220 1 221 2 23 1 165 1 222 1 169 3 168 3 103 3 172 2 171 1 29 1 31 2 105 1 35 1 230 3 36 1 108 4 231 1 37 2 233 3 39 1 180 1 114 3 47 1 237 2 49 1 117 1 184 3 239 1 240 1 186 3 51 1 54 4 55 1 190 1 57 1 191 1 60 6 61 1 123 2 127 1 128 2 250 4 130 2 63 2 131 1 252 3 134 4 197 1 199 1 201 1 138 5 
141 1 0 1 1 3 142 8 143 1 4 2 6 2 145 2 8 4 7 2 12 2 14 2 156 1 155 2 158 6 160 7 163 1 21 1 23 1 165 1 24 1 168 13 169 4 171 1 172 2 29 1 31 2 35 1 37 7 39 1 180 6 47 6 182 1 49 1 184 6 50 1 186 3 51 1 54 4 55 6 189 2 190 1 191 6 57 1 60 6 61 1 194 1 63 2 197 1 199 2 201 1 67 2 73 2 207 1 77 2 76 2 208 1 80 1 86 1 85 4 213 2 87 6 214 2 88 2 89 2 215 1 90 6 92 7 93 1 218 2 94 6 95 4 96 1 220 1 221 7 222 2 103 4 224 1 105 1 230 4 108 4 231 1 233 4 112 2 114 4 116 2 117 1 237 2 239 1 240 1 123 2 127 1 250 4 128 2 130 2 131 1 252 4 134 6 253 1 256 1 138 6 139 1 
158 1 243 1 10 1 
158 1 91 1 
158 1 53 1 
158 1 91 1 
158 1 91 1 
158 1 53 1 
158 1 60 1 143 1 121 1 145 1 75 1 101 1 211 1 84 1 186 1 15 1 137 1 
158 1 60 1 217 1 143 1 145 1 186 1 
158 1 60 1 143 1 145 1 84 1 15 1 101 1 
158 1 53 1 
158 1 195 1 
229 1 158 1 44 1 151 1 
158 1 246 1 78 1 
158 2 191 1 142 1 221 1 168 2 26 1 27 1 28 1 47 1 115 1 212 1 87 1 53 1 54 2 55 1 106 2 17 1 
133 1 
191 1 142 1 221 1 168 2 26 1 28 1 47 1 115 1 212 1 87 1 55 1 226 1 17 1 
245 1 92 2 142 1 160 2 37 2 221 1 180 1 168 3 47 1 104 2 66 1 55 1 
1 3 142 2 72 1 143 1 4 2 73 2 145 2 146 2 77 1 76 2 147 2 7 2 8 2 208 1 14 2 85 2 213 2 214 2 88 2 216 2 90 4 158 4 92 1 218 2 94 4 160 1 96 1 164 1 221 1 97 1 100 1 169 2 168 3 103 2 104 1 172 2 173 1 29 1 31 2 175 2 107 1 35 1 228 1 230 2 231 1 37 1 178 1 233 2 112 2 180 1 234 1 114 2 47 1 237 2 184 2 186 3 119 1 54 4 55 1 190 1 245 1 60 6 123 2 125 2 62 1 250 4 128 2 63 2 130 2 131 1 252 2 134 4 200 1 138 4 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 89 1 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 148 2 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
245 1 92 2 142 1 160 2 104 2 47 1 37 2 221 1 66 1 55 1 180 1 168 3 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
1 3 142 1 4 1 73 1 145 1 146 1 77 1 76 1 147 1 8 1 7 1 14 1 85 1 213 1 214 1 88 1 216 1 90 2 158 2 92 1 218 1 94 2 160 1 96 1 221 1 169 1 168 3 103 1 104 1 172 1 29 1 31 1 175 1 35 1 228 1 230 1 231 1 37 1 233 1 112 1 180 1 114 1 47 1 237 1 184 1 119 1 54 2 55 1 245 1 60 3 123 1 125 1 250 2 128 1 63 1 130 1 252 1 134 2 138 2 
245 1 92 1 142 1 160 1 104 1 47 1 37 1 221 1 66 1 175 1 55 1 180 1 168 2 
1 3 73 1 4 1 145 1 146 1 77 1 76 1 147 1 7 1 8 1 12 1 14 1 85 1 213 1 214 1 88 1 156 1 89 1 216 1 90 2 158 2 218 1 94 2 96 1 168 1 169 1 103 1 172 1 29 1 31 1 175 1 35 1 230 1 231 1 233 1 112 1 39 1 114 1 116 1 237 1 184 2 119 1 54 2 189 1 60 3 123 1 125 1 250 2 128 1 63 1 130 1 252 1 134 2 67 1 138 2 
1 3 142 1 4 1 73 1 145 1 146 1 77 1 76 1 147 1 7 1 8 1 14 1 85 1 213 1 214 1 88 1 216 1 90 2 158 2 92 1 218 1 94 2 160 1 96 1 221 1 24 1 169 1 168 3 103 1 104 1 172 1 29 1 31 1 175 1 35 1 228 1 230 1 231 1 37 1 233 1 112 1 180 1 114 1 47 1 237 1 184 1 119 1 54 2 55 1 245 1 60 3 123 1 125 1 250 2 128 1 63 1 130 1 252 1 134 2 138 2 
1 3 142 1 4 1 73 1 145 1 146 1 77 1 76 1 147 1 7 1 8 1 14 1 85 1 213 1 87 1 214 1 88 1 156 1 216 1 90 2 158 2 92 1 218 1 94 2 160 1 96 1 221 1 24 1 169 1 168 3 103 1 172 1 29 1 31 1 175 1 35 1 230 1 231 1 37 1 233 1 112 1 39 1 180 1 114 1 47 1 237 1 184 1 119 1 54 2 55 1 191 1 60 3 123 1 125 1 128 1 250 2 63 1 130 1 252 1 134 2 138 2 
230 1 142 1 4 1 37 1 76 1 8 1 7 1 233 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 89 1 54 2 55 1 189 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 2 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 89 1 55 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 123 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 123 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 123 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 2 89 1 55 1 245 1 92 1 218 1 94 2 160 1 123 1 221 1 128 1 250 2 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 123 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
158 1 134 1 112 1 90 1 157 1 
158 1 134 1 88 1 90 1 157 1 
158 1 204 1 134 1 238 1 112 1 90 1 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 2 4 1 73 1 143 1 145 1 75 4 76 1 8 1 7 1 208 1 12 1 211 3 14 1 84 1 85 1 213 1 214 1 89 1 88 1 215 1 15 1 90 2 158 2 92 1 218 1 94 2 160 1 221 1 101 1 169 1 168 2 103 1 104 1 172 1 31 1 230 1 109 1 37 1 233 1 112 1 180 1 114 1 47 1 116 1 237 1 184 2 186 3 54 2 55 1 189 1 190 1 245 1 60 3 121 3 123 1 128 1 250 2 130 1 63 1 131 1 252 1 134 2 66 1 67 1 137 3 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 24 1 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 148 2 180 1 12 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 89 1 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 148 2 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 12 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 89 1 55 1 189 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 148 2 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
245 1 18 1 92 1 142 1 160 1 37 1 221 1 180 1 168 2 47 1 104 1 66 1 55 1 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 148 2 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 24 1 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 1 230 1 4 1 37 1 76 1 7 1 8 1 233 1 180 1 114 1 14 1 47 1 116 1 85 1 184 2 214 1 53 1 54 3 55 1 245 1 92 1 218 1 94 2 123 1 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 138 2 
142 4 4 1 73 1 143 1 145 1 75 3 76 1 7 1 8 1 208 1 10 3 211 2 14 1 84 1 85 1 213 1 214 1 89 1 15 1 215 1 16 1 158 3 92 2 218 1 94 2 160 2 221 2 100 1 101 1 169 1 168 3 103 1 104 2 31 1 230 1 109 2 37 2 111 1 233 1 179 1 180 1 114 1 47 1 237 1 184 1 186 2 54 2 55 1 190 1 245 1 60 2 121 2 126 1 128 1 250 2 63 1 130 1 131 1 252 1 198 1 66 1 254 1 137 2 138 2 
142 1 230 1 4 1 76 1 37 1 7 1 233 1 8 1 180 1 114 1 14 1 47 1 85 1 184 1 214 1 53 1 54 3 89 1 55 1 245 1 92 1 218 1 94 2 160 1 221 1 128 1 250 3 130 1 169 1 168 2 103 1 252 1 104 1 31 1 66 1 67 1 138 2 
245 1 92 1 142 1 160 1 104 1 47 1 37 1 221 1 55 1 180 1 168 2 
142 2 143 1 73 1 109 1 75 3 145 1 77 1 208 1 9 1 10 3 41 1 211 2 13 1 47 1 153 1 237 1 212 1 118 1 213 1 186 2 215 1 15 1 55 1 58 1 59 1 190 1 245 1 158 4 60 2 121 2 221 1 22 1 63 1 101 1 131 1 168 2 102 1 104 1 135 1 137 2 257 1 
142 1 143 1 73 1 109 1 75 3 145 1 146 1 147 1 232 1 178 1 9 1 81 1 10 3 41 1 211 2 13 1 47 1 237 1 212 1 154 1 213 1 186 2 15 1 120 1 216 1 55 1 190 1 245 1 158 4 60 2 121 2 248 1 125 1 221 1 22 1 101 1 63 1 131 1 168 2 104 1 135 1 176 1 137 2 257 1 
142 1 230 3 4 1 6 1 76 1 37 1 7 1 233 3 8 3 38 1 180 1 114 3 14 1 47 1 184 3 85 3 214 1 54 2 55 1 245 1 92 1 218 1 94 4 123 1 160 1 221 1 128 1 250 2 222 1 130 1 24 1 169 3 168 2 103 3 252 3 104 1 31 1 199 2 138 4 
142 1 230 1 6 1 37 1 233 1 8 1 180 1 114 1 47 1 184 1 85 1 55 1 245 1 92 1 94 1 160 1 221 1 222 1 169 1 168 2 103 1 252 1 104 1 199 1 138 1 
142 1 230 1 6 1 37 1 233 1 8 1 180 1 114 1 47 1 184 1 85 1 53 1 155 1 90 1 55 1 157 1 158 1 245 1 92 1 94 1 160 1 221 1 222 1 169 1 168 2 103 1 252 1 104 1 134 1 199 1 203 1 138 1 
142 1 230 3 6 1 37 1 233 3 8 3 180 1 114 3 47 1 184 3 85 3 55 1 245 1 92 1 94 3 160 1 221 1 222 1 169 3 168 2 103 3 252 3 104 1 136 1 199 3 138 3 
142 1 230 1 6 1 37 1 233 1 8 1 43 1 180 1 114 1 47 1 184 1 85 1 55 1 245 1 92 1 94 1 160 1 221 1 222 1 169 1 168 2 103 1 252 1 104 1 199 1 138 1 
245 1 92 1 142 1 160 1 6 1 37 1 221 1 43 1 180 1 168 2 47 1 104 1 199 1 55 1 
124 1 30 1 174 1 168 1 
124 1 34 1 168 1 
99 1 202 1 40 2 168 1 
68 1 99 1 202 1 25 1 168 1 
124 1 144 1 
211 1 109 1 121 1 75 1 186 1 137 1 
20 1 143 1 145 1 125 1 147 1 178 1 216 1 
211 1 109 1 121 1 75 1 84 1 186 1 137 1 
190 1 143 1 145 1 131 1 
158 1 94 1 214 1 53 1 54 1 250 1 
94 1 233 1 
158 1 53 1 54 1 250 1 
94 2 162 1 233 1 38 1 214 1 54 1 250 1 
94 1 233 1 
87 1 
191 1 
87 1 
104 1 
104 1 
245 1 
191 1 142 1 247 1 219 1 161 1 221 1 129 1 11 1 168 2 47 1 48 1 212 1 87 1 188 1 55 1 
191 1 142 1 247 1 219 1 161 1 221 1 43 1 11 1 168 2 47 1 48 1 212 1 87 1 188 1 55 1 
191 2 205 1 142 2 247 2 161 2 219 2 221 2 129 1 11 2 168 4 47 2 48 2 212 2 87 2 188 2 55 2 
158 3 191 1 246 2 142 1 5 1 247 1 219 1 161 1 221 1 150 1 11 1 168 2 47 1 48 1 212 1 87 1 53 1 54 1 188 1 55 1 
191 1 205 1 142 1 247 1 161 1 219 1 221 1 11 1 168 2 47 1 48 1 212 1 87 1 188 1 55 1 
191 2 205 1 142 2 247 2 161 2 219 2 221 2 11 2 168 4 47 2 48 2 212 2 87 2 52 1 188 2 55 2 226 1 
158 1 191 1 246 1 142 1 5 2 247 1 219 1 161 1 221 1 150 1 11 1 168 2 47 1 48 1 212 1 87 1 53 1 54 2 188 1 55 1 
193 1 
158 2 53 1 10 2 56 1 
158 2 32 1 53 1 10 2 
1 2 142 2 5 1 73 1 231 1 145 1 146 1 77 1 147 1 150 1 10 2 11 1 47 1 237 1 48 1 212 1 213 1 87 1 119 1 54 1 156 1 188 1 216 1 55 1 56 1 158 2 191 1 60 2 247 1 219 1 161 1 96 1 125 1 193 1 221 1 100 1 129 1 63 1 168 3 29 1 32 1 35 1 227 1 
47 1 219 1 52 1 55 1 226 1 
142 3 5 1 109 1 143 1 73 1 75 4 145 1 208 1 150 1 151 1 10 2 11 1 211 3 47 1 84 1 237 1 48 1 212 1 213 1 186 3 87 1 54 1 188 1 215 1 15 1 55 1 56 1 190 1 158 3 191 1 246 1 60 2 121 3 247 1 161 1 219 1 193 1 221 1 100 1 63 1 101 1 131 1 168 2 32 1 137 3 
191 1 142 1 247 1 161 1 219 1 221 1 11 1 168 2 47 1 48 1 212 1 87 1 52 1 188 1 55 1 226 1 
71 1 142 1 78 1 38 1 209 1 42 2 152 1 235 1 47 1 236 1 212 1 185 1 87 1 54 1 55 1 90 1 191 1 158 2 159 1 246 1 221 1 251 1 168 2 134 1 255 1 
185 1 
1 4 71 1 142 2 73 1 74 1 231 1 145 1 146 1 77 1 147 1 149 1 209 1 151 2 42 2 45 1 235 1 47 1 236 1 212 1 185 1 213 1 87 1 119 1 54 2 156 1 216 1 90 1 55 1 158 3 191 1 159 1 246 2 19 1 60 2 96 1 125 1 221 1 100 1 251 2 168 3 134 1 172 1 29 1 255 1 35 1 
235 1 71 1 236 1 42 1 255 1 226 1 
142 3 71 1 73 1 143 1 74 1 145 1 75 5 208 1 149 1 209 1 151 2 211 4 84 1 212 1 213 1 87 1 15 1 215 1 90 1 158 3 19 1 159 1 221 1 100 1 101 1 168 2 172 1 109 1 42 2 235 1 236 1 47 1 185 1 186 4 54 2 55 1 191 1 190 1 60 2 246 2 121 4 131 1 251 2 134 1 255 1 137 4 
158 2 191 1 246 1 142 1 71 1 74 1 221 1 251 2 42 1 168 2 44 1 235 1 236 1 47 1 212 1 87 1 53 1 54 2 255 1 55 1 
71 1 142 3 109 1 143 1 73 1 74 1 75 3 145 1 208 1 149 1 151 1 42 1 211 2 235 1 47 1 236 1 84 1 212 1 185 1 213 1 186 2 87 1 54 1 215 1 15 1 55 1 190 1 158 1 191 1 246 1 60 1 19 1 121 2 221 1 100 1 101 1 251 1 131 1 168 2 137 2 255 1 
159 1 38 1 54 1 209 1 251 1 42 1 
19 1 53 1 
149 1 53 1 
158 2 191 1 246 1 159 1 142 1 71 1 221 1 209 1 251 1 42 2 168 2 235 1 236 1 47 1 134 1 212 1 185 1 87 1 54 1 90 1 255 1 55 1 
235 1 71 1 236 1 42 1 255 1 226 1 
70 1 142 1 74 1 42 1 45 1 44 1 235 1 47 1 83 1 236 1 212 1 87 1 54 2 53 1 55 1 191 1 158 2 246 1 221 1 251 2 168 2 

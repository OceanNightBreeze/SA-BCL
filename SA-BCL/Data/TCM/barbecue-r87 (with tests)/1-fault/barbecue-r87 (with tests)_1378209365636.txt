#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 82 148 223 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 7126 | return null
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 1 207 1 96 1 249 1 240 1 115 1 
158 1 207 1 249 1 240 1 115 1 
198 1 194 2 150 1 
53 1 249 1 132 1 113 1 67 1 178 1 43 1 155 1 100 1 209 2 141 1 232 1 60 1 196 1 183 3 182 1 105 1 34 1 35 1 
235 1 53 1 249 1 132 1 67 1 178 1 155 1 100 1 209 1 255 1 60 1 183 3 182 1 105 1 34 2 35 1 
53 1 155 1 39 1 67 1 
53 1 92 1 132 1 67 1 178 1 155 1 100 1 209 1 183 2 182 2 36 1 
53 1 249 2 42 1 132 1 113 1 67 1 115 1 178 1 156 1 100 1 209 1 141 1 232 1 60 2 183 3 182 1 196 1 105 1 34 1 35 1 
53 1 249 2 42 1 132 1 113 1 67 1 115 1 178 1 100 1 209 1 141 1 232 1 60 2 183 3 182 1 196 1 105 1 34 1 35 1 
53 1 249 1 42 1 132 1 68 1 67 1 177 1 115 1 178 1 155 1 156 1 100 1 209 1 60 1 183 2 182 1 197 1 
53 1 249 1 42 1 132 1 67 1 177 1 115 1 151 1 178 1 155 1 156 1 100 1 209 1 60 1 183 2 182 1 197 1 
53 1 6 1 249 1 42 1 132 1 67 1 177 1 222 1 28 1 115 1 178 1 155 1 100 1 209 1 60 1 183 2 182 1 197 1 
53 1 6 1 249 1 42 1 132 1 67 1 177 1 222 1 28 1 115 1 178 1 156 1 155 1 100 1 209 1 60 1 183 2 182 1 197 1 
53 1 155 1 171 1 100 2 209 2 132 1 182 1 183 3 67 1 178 1 
61 2 53 1 67 1 205 1 178 1 155 1 100 2 183 3 182 1 162 1 
61 1 53 1 155 1 100 1 182 2 183 2 162 1 67 1 251 1 178 1 
61 1 53 1 155 1 100 1 211 1 182 1 183 2 162 1 67 1 178 1 
61 1 53 1 155 1 171 1 100 3 182 2 183 2 162 1 67 1 178 2 
61 2 53 1 249 1 67 1 178 2 155 1 100 2 140 1 255 1 122 1 60 1 183 4 182 1 162 1 34 1 35 1 
61 1 53 1 155 1 100 1 118 1 182 1 183 2 162 1 67 1 178 1 
61 1 53 1 249 1 219 1 67 1 201 1 178 1 155 1 100 1 140 1 60 1 183 3 182 1 162 1 124 1 34 4 35 1 126 1 
61 1 53 1 67 1 220 1 178 1 155 1 100 1 183 2 182 1 162 1 247 1 
139 1 47 1 55 3 
55 1 
61 1 2 1 3 1 66 4 200 1 67 1 69 2 135 4 136 4 205 1 13 1 14 1 75 1 140 1 210 1 211 2 78 1 79 1 216 1 144 8 21 1 80 1 146 1 81 2 147 1 148 1 149 2 82 1 221 1 152 4 30 1 227 1 158 2 159 1 231 1 90 3 161 1 91 1 162 1 233 1 34 3 35 1 37 2 165 4 235 2 171 1 93 2 172 4 42 1 44 1 100 2 101 2 243 2 103 4 104 1 183 3 182 3 106 4 51 2 248 1 249 2 115 1 250 2 116 1 57 1 254 2 255 1 256 4 127 1 
2 1 3 1 130 2 9 2 134 2 136 4 13 1 14 1 137 2 140 1 142 2 18 2 20 2 21 1 144 14 145 1 148 1 147 1 24 2 25 2 29 4 30 1 154 4 158 2 160 2 33 1 162 1 34 2 35 1 163 2 37 4 166 2 38 1 171 1 169 2 174 2 172 3 42 1 176 2 181 1 44 1 182 3 183 4 185 4 51 2 190 2 56 2 57 1 59 2 61 1 66 4 199 1 67 1 202 2 205 1 204 2 71 4 75 1 210 1 211 2 78 1 213 2 79 1 216 1 80 1 217 2 82 1 226 2 84 2 87 3 231 1 89 2 91 1 233 1 235 1 93 4 239 2 95 2 100 2 103 4 104 1 106 6 107 1 108 2 109 2 248 1 249 2 115 1 117 1 119 1 255 1 256 3 121 2 125 2 
61 1 2 1 3 1 130 2 9 2 66 4 134 2 67 1 202 2 204 2 136 4 205 1 13 1 14 1 137 2 71 4 75 1 140 1 210 1 211 2 78 1 142 2 18 2 213 2 20 2 79 1 216 1 21 1 144 4 80 1 147 1 148 1 24 2 25 2 82 1 226 2 29 4 30 1 154 4 84 2 227 1 158 2 231 1 160 2 89 2 33 1 91 1 162 1 34 2 233 1 163 2 35 1 37 4 166 2 235 1 236 1 169 2 171 1 172 3 174 2 93 4 95 2 239 2 42 1 176 2 181 1 44 1 100 2 103 4 104 1 183 3 182 3 185 4 106 6 108 2 51 2 109 2 248 1 249 2 190 2 115 1 56 2 57 1 117 1 255 1 119 1 59 2 256 3 121 2 125 2 
61 1 2 1 4 1 3 1 130 2 66 4 134 2 67 1 202 2 136 4 204 2 205 1 13 1 14 1 137 3 71 3 75 1 140 1 210 1 211 2 78 1 142 2 17 1 18 2 213 2 20 3 79 1 216 1 144 4 21 1 80 1 23 1 147 1 148 1 24 3 25 2 82 1 29 5 30 1 154 5 84 2 158 2 230 1 231 1 160 2 33 1 89 2 91 1 162 1 233 1 34 2 35 1 37 4 166 2 235 1 169 3 171 1 173 1 172 3 93 4 239 3 42 1 175 2 176 2 44 1 100 2 46 1 103 4 104 1 183 3 182 3 185 4 106 6 108 2 51 2 109 2 248 1 249 2 190 3 115 1 56 3 57 1 255 1 59 2 256 3 125 3 
1 1 2 1 3 1 129 2 130 2 9 2 132 1 10 1 12 1 134 2 136 4 13 1 14 1 137 2 138 1 142 2 18 2 20 2 144 4 21 1 147 1 148 1 24 2 25 2 26 2 29 4 30 1 154 4 158 2 160 2 33 1 34 2 35 1 163 2 37 4 166 2 171 1 169 2 174 2 172 3 42 1 176 2 181 1 44 1 182 3 183 3 185 4 51 2 50 2 52 1 186 1 190 2 56 2 57 1 59 2 66 4 67 1 202 2 204 2 71 4 75 1 209 1 210 1 211 2 78 1 213 2 79 1 216 1 80 1 82 1 226 2 84 2 227 1 231 1 88 2 89 2 91 1 233 1 235 1 236 1 93 4 239 2 95 2 97 2 98 1 99 1 100 2 103 4 244 1 104 1 246 1 105 1 106 6 108 2 109 2 248 1 249 2 115 1 117 1 119 1 255 1 256 3 121 2 125 2 
61 2 2 1 3 1 130 3 66 4 134 2 67 1 202 3 136 4 204 2 205 1 13 1 14 1 137 3 71 3 75 1 140 1 210 1 211 2 78 1 142 2 17 1 18 2 213 2 20 3 79 1 216 1 144 4 21 1 80 1 23 1 147 1 148 1 24 3 25 2 82 1 29 5 30 1 154 5 84 2 227 1 158 2 231 1 160 2 33 1 89 3 91 1 162 1 233 1 34 2 35 1 37 4 36 1 166 2 235 1 169 3 171 1 172 3 93 4 239 3 42 1 175 2 176 2 44 1 100 4 46 1 103 4 104 1 183 4 182 5 185 4 106 6 108 2 51 2 109 2 187 1 248 1 249 2 190 3 115 1 56 3 57 1 117 1 255 1 59 2 119 1 256 3 122 1 125 3 
61 1 2 1 3 1 130 2 66 4 134 2 67 1 202 2 136 4 204 2 205 1 13 1 14 1 137 3 71 3 75 1 140 1 210 1 211 2 78 1 142 2 17 1 18 2 213 2 20 3 79 1 216 1 144 4 21 1 80 1 23 1 147 1 148 1 24 3 25 2 82 1 29 5 30 1 154 5 84 2 227 1 158 2 231 1 160 2 33 1 89 2 91 1 162 1 233 1 34 2 35 1 37 4 166 2 235 1 169 3 171 1 172 3 93 4 239 3 42 1 175 2 176 2 44 1 100 2 46 1 103 4 104 1 183 3 182 3 185 4 106 6 108 2 51 2 109 2 187 1 248 1 249 2 190 3 115 1 56 3 57 1 117 1 255 1 59 2 119 1 256 3 125 3 
3 1 248 1 147 1 148 1 66 4 82 1 205 1 30 1 14 1 75 1 103 4 78 1 
218 1 
0 1 2 1 3 1 130 2 134 2 136 4 13 1 14 1 137 3 140 1 142 2 17 1 18 2 20 3 21 1 144 4 23 1 148 1 147 1 24 3 25 2 29 5 30 1 154 5 158 2 160 2 33 1 162 1 34 3 35 1 36 1 37 4 166 2 171 1 169 3 172 3 173 1 42 1 175 2 176 2 44 1 46 1 182 4 183 3 185 4 51 2 187 1 190 3 56 3 57 1 59 2 61 1 66 4 67 1 202 2 205 1 204 2 71 3 75 1 210 1 211 2 78 1 213 2 79 1 216 1 80 1 82 1 84 2 227 1 231 1 230 1 89 2 91 1 233 1 235 2 93 4 239 3 100 2 103 4 104 1 106 6 108 2 109 2 248 1 249 2 115 1 117 1 119 1 255 1 256 3 125 3 
248 1 148 1 66 1 103 1 82 1 
61 1 2 1 3 1 130 2 66 4 134 2 67 1 202 2 136 4 204 2 205 1 13 1 14 1 137 3 71 3 140 1 210 1 211 2 78 1 142 2 17 1 18 2 213 2 20 3 79 1 216 1 144 4 21 1 80 1 23 1 148 1 147 1 24 3 25 2 82 1 29 5 30 1 154 5 84 2 158 2 230 1 231 1 160 2 33 1 89 2 91 1 162 1 233 1 34 2 35 1 37 4 166 2 235 1 169 3 171 1 173 1 172 3 93 4 239 3 42 1 175 2 176 2 44 1 100 2 46 1 103 4 104 1 183 3 182 3 185 4 106 6 108 2 51 2 109 2 187 1 248 1 249 2 190 3 115 1 56 3 57 1 117 1 255 1 59 2 119 1 256 3 125 3 
61 1 2 1 3 1 130 2 66 4 134 2 67 1 202 2 136 4 204 2 205 1 13 1 14 1 137 3 71 3 140 1 210 1 211 2 78 1 142 2 17 1 18 2 213 2 20 3 79 1 216 1 144 4 21 1 80 1 23 1 147 1 24 3 25 2 82 1 29 5 30 1 154 5 84 2 228 1 158 2 230 1 231 1 160 2 33 1 89 2 91 1 162 1 233 1 34 2 35 1 37 4 166 2 235 1 169 3 171 1 173 1 172 3 93 4 239 3 42 1 175 2 176 2 44 1 100 2 46 1 103 4 104 1 183 3 182 3 185 4 106 6 108 2 51 2 109 2 187 1 248 1 249 2 190 3 115 1 56 3 57 1 117 1 255 1 59 2 119 1 256 3 125 3 
2 1 3 1 130 6 9 2 134 2 136 4 13 1 14 1 137 3 15 1 140 1 142 2 143 1 17 1 18 2 20 3 21 1 144 6 23 1 148 1 147 1 24 3 25 2 29 5 30 1 154 5 158 2 160 2 33 5 162 5 34 2 35 1 163 2 37 6 166 2 169 3 171 1 173 1 172 3 174 2 42 1 175 2 176 2 181 1 44 1 46 1 182 7 183 11 185 4 51 2 190 3 56 3 57 5 59 2 61 5 66 4 67 5 70 1 202 6 205 1 204 2 71 5 75 1 210 1 211 2 78 1 213 2 215 1 79 1 216 1 80 1 82 1 223 1 226 2 84 2 230 1 231 1 89 6 91 1 233 1 235 1 93 6 239 3 95 2 100 6 103 4 104 1 245 1 106 6 108 2 109 2 248 1 249 2 115 1 117 1 119 1 255 1 256 3 121 2 125 3 
180 1 144 1 145 1 
153 1 144 1 
144 1 225 1 
214 1 144 1 249 1 11 1 177 1 222 1 115 1 85 1 208 1 256 1 106 1 197 1 
167 1 144 1 249 1 256 1 106 1 115 1 
144 1 208 1 249 1 177 1 106 1 115 1 197 1 
144 1 225 1 
168 1 144 1 
144 1 225 1 
153 1 144 1 
153 1 144 1 
31 1 144 1 110 1 135 1 
144 1 224 1 165 1 
61 1 19 1 144 2 188 1 7 1 81 1 133 1 67 1 241 1 225 1 136 2 57 1 100 1 183 2 182 1 162 1 234 2 
192 1 
61 1 19 1 39 1 188 1 81 1 133 1 67 1 241 1 57 1 100 1 183 2 182 1 162 1 
130 2 132 1 67 1 202 2 57 1 45 1 100 1 209 2 33 1 183 3 89 2 182 1 
1 1 129 2 130 1 10 1 132 1 12 1 67 1 134 2 202 1 204 2 136 4 138 1 71 2 137 2 209 1 210 1 211 2 142 2 18 2 213 2 20 2 216 1 144 4 24 2 26 2 25 2 29 4 154 4 84 2 158 2 88 2 160 2 33 1 89 1 91 1 233 1 34 1 35 1 37 4 36 1 235 1 166 2 169 2 93 4 174 2 172 3 239 2 42 1 97 2 176 2 98 1 99 1 100 1 244 1 246 1 183 3 182 2 105 1 106 6 185 4 50 2 108 2 51 2 52 1 186 1 109 2 249 2 190 2 115 1 56 2 57 1 59 2 256 3 125 2 
166 1 169 1 130 1 239 1 95 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 74 2 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
130 2 132 1 67 1 202 2 57 1 45 1 100 1 209 2 33 1 183 3 89 2 182 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 1 137 1 100 1 74 2 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
130 1 132 1 67 1 202 1 57 1 45 1 100 1 209 1 102 1 33 1 183 2 89 1 182 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 1 137 1 100 1 74 2 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 0 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 2 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
2 1 130 2 132 1 11 2 134 1 67 1 202 2 136 2 204 1 71 1 137 1 208 1 209 2 210 1 16 1 211 1 142 1 18 1 214 2 20 1 145 3 144 3 24 1 25 1 222 3 28 2 151 1 83 1 29 2 154 2 84 1 85 2 160 1 33 1 89 2 91 1 36 1 166 1 169 1 239 1 95 1 42 1 176 1 177 1 45 1 100 2 182 4 183 3 49 1 106 2 185 2 108 1 51 1 109 1 249 1 190 1 115 1 56 1 57 1 253 1 256 2 122 1 125 1 197 1 
166 1 169 1 130 1 239 1 95 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 
57 1 100 1 130 1 209 1 132 1 182 1 89 1 183 2 33 1 67 1 202 1 
1 1 129 1 130 1 132 1 67 1 134 1 202 1 204 1 136 2 71 1 137 1 209 1 211 1 142 1 18 1 213 1 20 1 216 1 144 2 24 1 26 1 25 1 29 2 154 2 84 1 158 1 88 1 160 1 33 1 89 1 233 1 34 1 35 1 37 2 235 1 166 1 169 1 93 2 174 1 172 3 239 1 97 1 176 1 100 1 183 3 182 1 105 1 106 3 185 2 50 1 51 1 108 1 109 1 249 1 190 1 56 1 57 1 59 1 125 1 
130 1 132 1 26 1 67 1 202 1 57 1 45 1 100 1 209 1 33 1 183 2 89 1 182 1 
1 1 129 1 9 1 134 1 205 1 136 2 204 1 71 2 137 1 140 1 211 1 142 1 18 1 213 1 20 1 216 1 144 2 24 1 26 1 25 1 226 1 29 2 154 2 84 1 158 1 88 1 160 1 233 1 34 1 35 1 163 1 37 2 235 1 166 1 169 1 172 3 93 2 174 1 239 1 95 1 97 1 176 1 183 1 106 3 185 2 50 1 51 1 108 1 109 1 249 1 190 1 56 1 59 1 121 1 125 1 
0 1 1 1 129 1 130 1 132 1 67 1 134 1 202 1 204 1 136 2 71 1 137 1 209 1 211 1 142 1 18 1 213 1 20 1 216 1 144 2 24 1 26 1 25 1 29 2 154 2 84 1 158 1 88 1 160 1 33 1 89 1 233 1 34 1 35 1 37 2 235 1 166 1 169 1 93 2 174 1 172 3 239 1 97 1 176 1 100 1 183 3 182 1 105 1 106 3 185 2 50 1 108 1 51 1 109 1 249 1 190 1 56 1 57 1 59 1 125 1 
61 1 0 1 1 1 129 1 130 1 67 1 134 1 202 1 205 1 204 1 136 2 71 1 137 1 140 1 211 1 142 1 18 1 213 1 20 1 216 1 144 2 24 1 26 1 25 1 29 2 154 2 84 1 158 1 88 1 160 1 33 1 89 1 162 1 34 1 233 1 35 1 37 2 166 1 235 1 169 1 93 2 174 1 172 3 239 1 97 1 176 1 100 1 182 1 183 3 106 3 185 2 50 1 108 1 51 1 109 1 249 1 190 1 56 1 57 1 59 1 125 1 
166 1 169 1 130 1 95 1 239 1 9 1 132 1 67 1 134 1 176 1 202 1 204 1 136 2 137 1 71 2 100 1 45 1 209 1 182 1 183 2 142 1 185 2 18 1 108 1 20 1 109 1 24 1 190 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 95 1 132 1 134 1 67 1 176 1 202 1 136 2 204 1 71 1 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 2 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
144 1 54 1 93 1 174 1 37 1 
144 1 54 1 93 1 59 1 37 1 
144 1 93 1 174 1 77 1 184 1 37 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
2 1 130 1 9 1 132 1 11 3 67 1 134 1 202 1 204 1 136 2 137 1 71 2 208 1 209 1 210 1 211 1 142 1 18 1 213 1 214 3 20 1 144 2 24 1 25 1 222 4 28 1 226 1 29 2 154 2 84 1 158 1 85 3 160 1 33 1 89 1 91 1 163 1 37 2 166 1 169 1 93 2 174 1 95 1 239 1 42 1 176 1 177 1 45 1 100 1 183 2 182 2 106 3 185 2 108 1 51 1 109 1 249 1 190 1 115 1 56 1 57 1 59 1 256 3 121 1 125 1 197 1 
166 1 0 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 1 137 1 100 1 45 1 74 2 209 1 182 1 183 2 142 1 185 3 18 1 108 1 213 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 74 2 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 95 1 9 1 132 1 134 1 67 1 176 1 202 1 136 3 204 1 71 2 137 1 100 1 45 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 190 1 24 1 225 1 56 1 226 1 29 2 154 2 57 1 160 1 89 1 33 1 121 1 125 1 163 1 
166 1 169 1 130 1 239 1 132 1 67 1 134 1 176 1 202 1 204 1 136 3 71 1 137 1 100 1 209 1 182 1 183 2 142 1 185 3 18 1 108 1 20 1 109 1 24 1 190 1 225 1 56 1 29 2 154 2 57 1 160 1 89 1 33 1 125 1 
62 1 2 1 63 1 237 1 8 1 132 1 42 1 11 2 68 1 67 1 177 1 203 1 100 1 209 1 141 1 210 1 211 1 182 2 183 2 106 2 51 1 214 2 145 3 144 4 22 1 81 1 249 1 25 1 113 1 222 3 115 1 28 1 57 1 84 1 85 2 232 1 256 2 196 1 91 1 34 1 197 1 
62 1 63 1 170 1 129 1 237 1 8 1 132 1 11 2 97 1 67 1 177 1 203 1 72 1 100 1 209 1 210 1 211 1 182 1 183 2 247 1 212 1 106 2 50 1 51 1 214 2 186 1 145 3 144 4 22 1 81 1 249 1 25 1 220 1 222 3 115 1 28 1 57 1 84 1 85 2 88 1 256 2 123 1 91 1 197 1 
166 1 0 1 169 3 130 1 239 3 132 1 134 1 67 1 176 1 202 1 136 2 204 1 137 3 71 3 100 1 46 2 209 1 182 1 183 2 142 1 185 2 17 1 18 1 108 1 213 1 20 3 109 1 23 1 190 3 24 3 56 3 29 4 154 4 57 1 194 1 160 1 33 1 89 1 125 3 
169 1 93 1 130 1 239 1 132 1 175 1 67 1 202 1 137 1 71 1 100 1 46 1 209 1 182 1 183 2 17 1 20 1 144 1 23 1 54 1 190 1 24 1 225 1 56 1 29 1 154 1 252 1 57 1 33 1 89 1 125 1 37 1 
169 3 130 1 239 3 132 1 67 1 202 1 137 3 71 3 100 1 46 3 209 1 182 1 183 2 17 1 20 3 23 1 190 3 24 3 114 1 56 3 29 3 154 3 57 1 33 1 89 1 125 3 
169 1 130 1 239 1 132 1 67 1 202 1 137 1 71 1 100 1 46 1 209 1 182 1 183 2 17 1 20 1 23 1 190 1 24 1 56 1 29 1 154 1 57 1 118 1 33 1 89 1 125 1 
23 1 130 1 132 1 67 1 202 1 57 1 100 1 46 1 209 1 118 1 182 1 33 1 183 2 89 1 
169 1 130 1 239 1 132 1 67 1 202 1 137 1 71 1 100 1 46 1 209 1 182 1 183 2 17 1 20 1 23 1 190 1 24 1 56 1 29 1 154 1 57 1 33 1 89 1 125 1 
86 1 112 1 58 1 183 1 
43 1 111 1 64 1 183 1 27 1 
73 1 86 1 183 1 
43 1 94 2 183 1 27 1 
86 1 191 1 
214 1 85 1 11 1 256 1 222 1 28 1 
214 1 208 1 85 1 11 1 256 1 222 1 28 1 
210 1 249 1 91 1 115 1 
50 1 186 1 129 1 249 1 115 1 88 1 257 1 
29 2 194 1 65 1 190 1 176 1 185 1 136 1 
29 1 190 1 
29 1 144 1 176 1 185 1 225 1 136 1 
29 1 190 1 
144 1 185 1 225 1 136 1 
162 1 
61 1 
61 1 
209 1 
132 1 
209 1 
5 1 94 1 81 1 189 1 40 1 67 1 206 1 57 1 100 1 195 1 118 1 76 1 242 1 183 2 182 1 
5 2 94 2 81 2 189 2 40 2 193 1 67 2 206 2 57 2 100 2 195 2 76 2 242 2 120 1 183 4 182 2 
5 1 94 1 81 1 189 1 40 1 67 1 206 1 57 1 100 1 195 1 76 1 242 1 120 1 183 2 182 1 
144 1 5 1 238 2 94 1 81 1 189 1 40 1 67 1 225 1 136 2 206 1 57 1 157 1 100 1 195 1 76 1 242 1 183 2 182 1 165 1 
229 1 
179 1 144 2 145 2 225 1 
144 2 145 2 32 1 225 1 
235 1 1 1 128 1 129 1 5 1 238 1 172 2 94 1 40 1 97 1 67 1 136 1 206 1 179 1 100 1 76 1 211 1 242 1 182 2 183 3 105 1 106 2 50 1 51 1 216 1 144 2 145 2 189 1 81 1 249 1 25 1 57 1 84 1 157 1 32 1 229 1 195 1 88 1 120 1 233 1 34 1 35 1 36 1 
57 1 39 1 195 1 48 1 67 1 
2 1 5 1 238 1 94 1 40 1 42 1 11 3 67 1 177 1 135 1 136 1 206 1 179 1 100 1 208 1 210 1 76 1 211 1 242 1 182 3 183 2 106 2 51 1 214 3 144 3 145 2 189 1 81 1 249 1 25 1 222 4 28 1 115 1 57 1 84 1 157 1 32 1 229 1 85 3 195 1 256 3 91 1 165 1 36 1 197 1 
39 1 5 1 94 1 81 1 189 1 40 1 67 1 206 1 57 1 100 1 195 1 76 1 242 1 48 1 183 2 182 1 
144 3 5 1 238 1 94 1 81 1 189 1 40 1 67 1 225 1 136 1 206 1 57 1 157 1 100 1 195 1 76 1 242 1 183 2 182 1 165 2 
5 1 94 1 81 1 189 1 40 1 193 1 67 1 206 1 57 1 100 1 195 1 76 1 242 1 183 2 182 1 
39 1 5 2 94 2 81 2 189 2 40 2 193 1 67 2 206 2 57 2 100 2 195 2 76 2 242 2 48 1 183 4 182 2 
144 2 5 1 146 1 94 1 81 1 149 1 200 1 67 1 225 1 136 2 116 1 152 2 31 1 57 1 100 1 159 1 182 1 90 1 183 2 165 1 
2 1 5 1 94 1 42 1 11 2 67 1 200 1 177 1 135 1 136 1 100 1 208 1 101 1 210 1 211 1 183 2 182 3 106 1 51 1 214 2 144 1 81 1 146 1 249 1 149 1 222 3 28 1 115 1 250 1 116 1 152 1 57 1 85 2 254 1 159 1 256 2 90 1 91 1 165 1 36 1 197 1 
152 1 194 1 243 1 90 1 69 1 136 1 
101 1 225 1 
250 1 225 1 
5 1 94 1 93 1 67 1 200 1 69 1 136 1 100 1 243 1 183 2 182 1 144 2 81 1 146 1 116 1 152 1 57 1 159 1 254 1 90 2 37 1 165 1 
39 1 146 1 159 1 90 1 200 1 116 1 
5 1 131 1 94 1 41 1 67 1 136 2 100 1 183 2 182 1 144 2 81 1 146 1 149 1 116 1 225 1 152 2 31 1 57 1 90 1 164 1 165 1 
5 1 94 1 93 1 67 1 200 1 69 1 136 1 100 1 243 1 183 2 182 1 144 2 81 1 146 1 150 1 224 1 116 1 152 1 57 1 194 1 159 1 254 1 90 2 37 1 165 1 
254 1 
235 1 1 1 129 1 5 1 131 1 93 1 172 4 94 1 97 1 67 1 200 1 69 1 135 2 136 2 100 1 101 1 243 1 211 1 183 3 182 2 105 1 106 2 50 1 51 1 216 1 144 3 81 1 146 1 249 1 149 1 250 1 116 1 152 2 57 1 158 1 254 1 159 1 88 1 90 2 34 1 233 1 35 1 36 1 37 1 165 2 
39 1 146 1 159 1 90 1 200 1 116 1 
2 1 5 1 93 1 94 1 42 1 11 4 67 1 200 1 69 1 177 1 135 2 136 2 100 1 208 1 101 1 210 1 243 1 211 1 183 2 182 3 106 2 51 1 214 4 144 3 81 1 146 1 249 1 149 1 222 5 28 1 115 1 250 1 116 1 152 2 57 1 158 1 85 4 254 1 159 1 256 4 90 2 91 1 37 1 165 2 36 1 197 1 

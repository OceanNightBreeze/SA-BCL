#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ArrayIndexOutOfBoundsException 55 166 172 37 116 91 207 209 119 78 198 87 140 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8937 | if (x) -> if (!x)
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Module:Module([I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
216 1 132 1 50 1 72 1 234 1 
230 1 43 1 233 2 
74 1 216 1 132 1 50 1 72 1 234 1 
92 2 161 1 163 1 13 2 167 2 16 3 154 1 211 1 248 1 108 1 200 2 
92 4 161 1 163 1 206 1 37 1 195 1 13 1 167 2 210 1 16 2 154 1 211 1 116 1 170 1 132 1 200 2 
211 1 154 1 163 1 228 1 
92 2 161 1 163 1 144 1 13 2 151 1 167 1 16 1 154 1 211 1 200 1 
94 1 92 3 161 1 163 1 6 1 50 1 206 1 37 1 195 2 147 1 13 1 167 1 16 1 211 1 116 1 29 1 249 1 132 2 60 1 200 1 
94 1 92 3 161 1 163 1 6 1 50 1 206 1 37 1 195 2 147 1 13 1 167 1 16 1 211 1 116 1 29 1 132 2 60 1 200 1 
94 1 92 2 34 1 203 1 161 1 163 1 50 1 98 1 195 1 13 1 167 1 16 1 154 1 211 1 249 1 132 1 200 1 
237 1 94 1 92 2 34 1 161 1 163 1 50 1 98 1 195 1 13 1 167 1 16 1 154 1 211 1 249 1 132 1 200 1 
94 1 92 2 34 1 2 1 161 1 163 1 50 1 98 1 142 1 195 1 13 1 167 1 16 1 40 1 154 1 211 1 132 1 200 1 
94 1 92 2 34 1 2 1 161 1 163 1 50 1 98 1 142 1 195 1 13 1 167 1 16 1 40 1 154 1 211 1 249 1 132 1 200 1 
92 3 161 1 163 1 13 1 167 2 16 2 154 1 211 1 200 1 108 1 
92 3 163 1 227 1 13 1 16 2 84 1 154 1 211 1 184 2 200 1 
92 2 16 1 174 1 184 1 211 1 154 1 163 1 227 1 200 1 13 2 
92 2 163 1 99 1 227 1 13 1 16 1 154 1 211 1 184 1 200 1 
92 2 16 1 184 1 211 1 154 1 110 1 163 1 227 1 200 1 13 1 
92 3 22 1 125 1 163 1 37 1 227 1 195 1 13 1 16 1 154 1 211 1 184 1 215 1 116 4 132 1 187 1 200 1 31 1 
92 2 163 1 79 1 227 1 13 1 16 1 38 1 154 1 211 1 184 1 200 1 
92 3 125 1 163 1 6 1 37 1 227 1 195 1 147 1 13 1 16 1 154 1 211 1 184 1 116 1 29 1 132 1 60 1 200 1 
92 3 125 1 163 1 37 1 227 1 195 1 13 1 210 1 16 1 154 1 211 1 184 1 116 2 132 1 200 1 91 1 
176 1 185 1 186 3 
186 1 
121 3 122 1 3 4 123 1 125 1 9 2 11 1 13 5 16 4 128 1 129 1 130 2 133 3 132 2 136 3 19 3 139 2 24 1 141 3 144 1 149 3 150 3 157 3 158 3 35 6 160 1 36 1 165 1 37 1 166 2 39 2 168 1 41 1 169 1 170 1 172 2 48 1 47 2 49 2 175 1 50 1 177 1 52 1 55 2 56 4 184 2 59 2 62 1 63 1 65 1 190 2 192 1 70 1 72 2 73 1 198 1 201 2 204 1 77 3 78 1 80 1 81 1 207 1 209 1 82 2 210 1 83 5 84 1 211 1 213 1 87 1 91 1 92 4 221 5 94 1 222 3 95 2 99 2 227 1 101 2 105 4 109 3 108 1 238 3 241 2 242 1 244 3 114 1 247 4 116 2 119 1 252 1 253 2 254 4 256 14 
65 1 121 2 3 4 190 2 123 1 125 1 192 1 9 2 72 2 73 1 11 1 13 3 16 2 128 1 130 2 129 1 132 2 198 1 136 3 201 2 139 2 19 3 204 1 77 3 24 1 78 1 141 2 207 1 149 3 209 1 82 2 150 3 210 1 84 1 83 5 213 1 211 1 87 1 157 3 91 1 158 3 94 1 35 6 221 5 92 3 222 2 95 2 160 1 36 1 165 1 99 2 37 1 166 2 227 1 101 2 39 2 168 1 41 1 169 1 105 4 109 3 108 1 172 2 48 1 47 2 238 3 175 1 241 2 50 1 242 1 244 3 177 1 52 1 55 2 114 1 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 63 1 62 1 254 4 256 4 
123 1 192 1 36 1 165 1 177 1 84 1 56 4 213 1 87 1 169 1 198 1 254 4 
123 1 125 1 192 1 71 1 72 2 13 3 16 2 129 1 198 1 132 2 20 2 204 1 78 1 207 1 149 4 209 1 210 1 85 3 84 1 212 4 155 1 213 1 211 1 87 1 214 2 90 2 91 2 94 1 35 4 92 3 160 1 36 1 165 1 99 2 37 1 227 1 100 2 101 4 229 2 168 1 41 1 169 1 105 2 231 4 171 4 108 1 172 2 48 1 175 1 50 1 51 2 242 1 244 4 243 1 245 1 178 1 177 1 52 1 182 2 56 4 184 1 247 2 116 3 250 1 119 1 252 1 61 1 254 4 256 8 
65 1 121 2 3 4 190 2 123 1 125 1 5 2 192 1 9 2 72 2 12 2 11 1 13 3 16 2 128 1 196 2 130 2 129 1 198 1 132 2 136 4 201 2 139 2 204 1 78 1 141 2 207 1 149 3 209 1 150 2 82 2 210 1 153 2 83 4 84 1 211 1 213 1 87 1 157 2 158 2 91 1 94 1 221 4 35 6 92 4 222 2 159 1 95 2 160 1 36 1 165 1 37 1 99 2 166 2 227 1 101 4 39 2 168 1 169 1 105 4 109 2 108 1 172 2 48 1 47 2 238 2 240 2 175 1 50 1 242 1 244 3 177 1 52 1 55 2 115 2 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 254 4 256 4 
65 1 121 2 3 4 190 2 123 1 125 1 5 2 192 1 9 2 72 2 12 2 11 1 13 3 16 2 128 1 196 2 130 2 129 1 198 1 132 2 136 4 201 2 139 2 204 1 78 1 141 2 207 1 149 3 209 1 150 2 82 2 210 1 153 2 83 4 84 1 211 1 213 1 87 1 157 2 158 2 91 1 94 1 221 4 35 6 92 3 222 2 159 1 223 1 95 2 160 1 36 1 165 1 37 1 99 2 166 2 227 1 101 4 39 2 168 1 41 1 169 1 105 4 109 2 108 1 172 2 48 1 47 2 238 2 240 2 175 1 50 1 242 1 244 3 177 1 52 1 55 2 115 2 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 254 4 256 4 
121 2 3 4 190 2 123 1 125 1 192 1 9 2 72 2 13 3 16 2 128 1 130 2 129 1 132 2 198 1 136 3 201 2 137 1 139 2 19 3 204 1 77 3 24 1 78 1 143 1 141 2 207 1 149 3 209 1 82 2 150 3 210 1 83 5 84 1 213 1 211 1 87 1 157 3 158 3 91 1 94 1 35 6 221 5 92 3 222 2 95 2 160 1 36 1 165 1 99 2 37 1 166 2 227 1 101 2 39 2 168 1 169 1 105 4 45 1 109 3 108 1 172 2 48 1 47 2 238 3 175 1 241 2 50 1 242 1 244 3 177 1 52 1 55 2 114 1 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 63 1 62 1 254 4 256 4 
106 1 
0 1 121 2 3 4 123 1 125 1 9 2 11 1 13 4 16 2 128 1 129 1 130 2 132 2 136 3 19 3 139 2 24 1 141 2 143 1 144 1 149 3 150 3 157 3 158 3 35 6 160 1 36 1 165 1 37 1 166 2 39 2 168 1 41 1 169 1 45 1 172 2 47 2 48 1 175 1 50 1 177 1 52 1 55 2 56 4 184 1 59 2 62 1 63 1 65 1 190 2 192 1 72 2 73 1 198 1 201 2 204 1 77 3 78 1 207 1 209 1 82 2 210 1 83 5 84 1 211 1 213 1 87 1 91 2 92 3 221 5 94 1 222 2 95 2 99 2 227 1 101 2 105 4 108 1 109 3 238 3 241 2 242 1 244 3 114 1 247 4 116 3 119 1 253 2 252 1 254 4 256 4 
121 2 3 4 123 1 5 2 9 2 11 1 12 2 13 3 16 2 15 1 128 1 130 2 129 1 132 2 134 1 136 4 139 2 141 2 146 1 149 3 150 2 153 2 157 2 158 2 35 6 32 2 159 1 160 1 161 1 36 1 165 1 37 1 166 2 167 1 39 2 168 1 41 1 169 1 172 2 173 1 48 1 47 2 175 1 50 1 177 1 52 1 180 1 55 2 56 4 57 2 59 2 65 1 190 2 189 2 192 1 72 2 196 2 198 1 75 1 201 2 204 1 78 1 206 1 207 1 209 1 82 2 210 1 83 4 213 1 211 1 87 1 220 1 91 1 92 3 221 4 94 1 222 2 223 1 95 2 99 2 101 4 103 1 105 4 108 1 109 2 236 1 238 2 240 2 242 1 244 3 246 2 112 1 115 2 247 4 116 2 119 1 252 1 253 2 254 4 255 2 256 4 
56 1 213 1 87 1 198 1 254 1 
65 1 121 2 3 4 190 2 125 1 192 1 9 2 72 2 73 1 11 1 13 3 16 2 128 1 130 2 129 1 132 2 198 1 136 3 201 2 139 2 19 3 204 1 77 3 24 1 78 1 143 1 141 2 207 1 149 3 209 1 82 2 150 3 210 1 84 1 83 5 213 1 211 1 87 1 157 3 91 1 158 3 94 1 35 6 221 5 92 3 222 2 95 2 160 1 36 1 165 1 99 2 37 1 166 2 227 1 101 2 39 2 168 1 169 1 105 4 45 1 109 3 108 1 172 2 48 1 47 2 238 3 175 1 241 2 50 1 242 1 244 3 177 1 52 1 55 2 114 1 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 63 1 62 1 254 4 256 4 
65 1 121 2 3 4 190 2 125 1 192 1 9 2 72 2 73 1 11 1 13 3 16 2 128 1 130 2 129 1 132 2 198 1 136 3 201 2 139 2 19 3 204 1 77 3 24 1 78 1 143 1 141 2 207 1 149 3 209 1 82 2 150 3 210 1 84 1 83 5 213 1 211 1 157 3 91 1 158 3 94 1 35 6 221 5 92 3 222 2 95 2 160 1 36 1 165 1 99 2 37 1 166 2 227 1 101 2 39 2 168 1 169 1 105 4 45 1 109 3 108 1 172 2 235 1 48 1 47 2 238 3 175 1 241 2 50 1 242 1 244 3 177 1 52 1 55 2 114 1 56 4 184 1 247 4 116 2 59 2 119 1 252 1 253 2 63 1 62 1 254 4 256 4 
0 1 121 7 3 4 123 1 125 1 5 2 9 2 11 1 12 2 13 8 16 7 128 6 129 6 130 2 132 2 136 6 19 4 139 2 140 1 24 2 143 1 141 7 149 3 150 4 153 2 157 4 158 4 35 6 159 1 160 1 36 1 165 1 37 1 166 2 39 2 168 1 169 1 45 1 172 2 48 1 47 2 175 1 50 1 177 1 52 1 55 2 56 4 184 6 58 1 59 2 62 2 63 2 65 1 190 2 192 1 72 2 196 2 198 1 201 2 204 1 77 4 78 1 207 1 209 1 82 2 210 1 83 6 84 1 211 6 213 1 86 1 87 1 89 1 91 1 93 1 92 13 221 6 94 1 222 7 95 2 99 2 227 6 101 4 104 1 105 6 109 4 108 1 238 4 240 2 241 2 242 1 244 3 114 2 115 2 247 6 116 2 119 1 252 1 253 2 254 4 256 6 
70 1 25 1 256 1 
225 1 256 1 
164 1 256 1 
34 1 35 1 7 1 50 1 98 1 142 1 149 1 132 1 131 1 251 1 107 1 256 1 
35 1 127 1 132 1 50 1 149 1 256 1 
35 1 34 1 131 1 132 1 50 1 98 1 256 1 
164 1 256 1 
68 1 256 1 
164 1 256 1 
225 1 256 1 
225 1 256 1 
69 1 231 1 118 1 256 1 
76 1 171 1 256 1 
92 2 138 1 20 1 164 1 8 2 227 1 13 1 148 1 101 2 16 1 183 1 211 1 184 1 129 1 218 1 197 1 256 2 
44 1 
92 2 138 1 20 1 227 1 228 1 13 1 148 1 16 1 183 1 211 1 184 1 129 1 197 1 
92 3 121 2 222 2 167 2 16 1 161 1 128 1 211 1 129 1 141 2 232 1 13 1 
121 1 189 2 190 2 3 4 9 2 72 2 13 2 15 1 16 1 128 1 196 2 129 1 130 2 132 2 134 1 136 2 75 1 201 2 139 2 204 1 206 1 141 1 146 1 144 1 149 3 82 2 150 2 83 4 211 1 157 2 220 1 91 1 158 2 94 1 32 2 92 3 35 6 221 4 222 1 95 2 161 1 37 1 99 2 166 2 101 4 167 1 39 2 103 1 168 1 105 4 109 2 173 1 172 2 236 1 47 2 238 2 50 1 244 3 246 2 52 1 112 1 180 1 55 2 57 2 247 4 116 1 59 2 252 1 253 2 255 2 256 4 
221 2 92 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 12 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 1 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 117 2 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 161 1 3 3 9 1 166 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 83 2 211 1 59 1 117 2 157 1 253 1 158 1 
92 2 222 1 121 1 161 1 141 1 13 1 167 1 16 1 128 1 211 1 129 1 156 1 232 1 
92 2 221 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 83 2 211 1 59 1 117 2 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 161 1 3 2 9 1 166 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 161 1 3 2 9 1 166 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 0 1 221 2 121 1 222 1 161 1 3 2 9 1 166 1 13 1 101 1 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 19 1 139 1 238 1 77 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 161 1 3 2 9 1 166 1 13 1 101 1 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 19 1 139 1 238 1 77 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
121 2 2 2 3 2 191 1 70 3 7 2 9 1 12 1 13 4 16 2 128 1 129 1 130 1 131 1 132 1 136 1 201 1 139 1 204 1 141 2 142 3 144 1 149 2 150 1 82 1 83 2 211 1 217 1 157 1 30 1 158 1 221 2 94 1 34 1 92 3 35 2 222 2 161 1 98 1 99 1 166 1 101 2 167 2 39 1 170 1 42 1 232 1 109 1 107 2 172 1 237 1 47 1 238 1 50 1 242 1 55 1 59 1 251 2 252 1 253 1 256 3 
221 2 92 2 121 1 222 1 161 1 3 3 164 1 9 1 166 1 12 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 1 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
121 1 189 1 190 1 3 2 9 1 72 1 13 1 16 1 128 1 196 1 129 1 130 1 132 1 136 1 201 1 139 1 206 1 141 1 82 1 150 1 83 2 211 1 157 1 91 1 158 1 32 1 92 3 35 3 221 2 222 1 95 1 161 1 99 1 37 1 166 1 101 2 167 1 39 1 168 1 105 2 109 1 173 1 172 1 47 1 238 1 244 3 246 1 52 1 55 1 57 1 247 2 116 1 59 1 253 1 255 1 256 2 
92 2 222 1 121 1 161 1 141 1 13 1 246 1 167 1 16 1 128 1 211 1 129 1 232 1 
190 1 3 2 189 1 125 1 5 1 9 1 72 1 12 1 196 1 130 1 132 1 136 2 201 1 139 1 82 1 150 1 84 1 83 2 153 1 157 1 91 1 158 1 32 1 35 3 92 1 221 2 95 1 99 1 37 1 166 1 101 2 39 1 168 1 105 2 109 1 173 1 172 1 47 1 238 1 240 1 244 3 52 1 246 1 55 1 115 1 57 1 247 2 116 1 59 1 253 1 255 1 256 2 
0 1 121 1 189 1 190 1 3 2 9 1 72 1 13 1 16 1 128 1 196 1 129 1 130 1 132 1 136 1 201 1 139 1 206 1 141 1 82 1 150 1 83 2 211 1 157 1 91 1 158 1 32 1 92 3 35 3 221 2 222 1 95 1 161 1 99 1 37 1 166 1 101 1 167 1 39 1 168 1 105 2 109 1 173 1 172 1 47 1 238 1 244 3 246 1 52 1 55 1 57 1 247 2 116 1 59 1 253 1 255 1 256 2 
0 1 121 1 189 1 190 1 3 2 125 1 9 1 72 1 13 1 16 1 128 1 196 1 129 1 130 1 132 1 136 1 201 1 139 1 141 1 82 1 150 1 84 1 83 2 211 1 157 1 91 1 158 1 32 1 92 3 35 3 221 2 222 1 95 1 37 1 99 1 227 1 166 1 101 1 39 1 168 1 105 2 109 1 173 1 172 1 47 1 238 1 244 3 246 1 52 1 55 1 57 1 184 1 247 2 116 1 59 1 253 1 255 1 256 2 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 3 164 1 9 1 166 1 12 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 1 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 3 3 161 1 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 3 3 161 1 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 3 3 161 1 68 1 164 1 9 1 166 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 95 1 161 1 3 2 164 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 1 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 95 1 3 3 161 1 68 1 164 1 9 1 166 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
196 1 247 1 23 1 105 1 256 1 
190 1 247 1 23 1 105 1 256 1 
196 1 247 1 226 1 105 1 10 1 256 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 240 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
121 1 2 1 190 1 3 2 5 1 7 3 9 1 72 1 12 1 13 2 16 1 128 1 196 1 129 1 130 1 131 1 132 1 136 2 201 1 139 1 204 1 141 1 142 4 149 3 150 1 82 1 153 1 83 2 211 1 157 1 158 1 221 2 94 1 34 1 92 2 35 3 222 1 95 1 161 1 98 1 99 1 166 1 101 2 167 1 39 1 105 2 232 1 109 1 107 3 172 1 47 1 238 1 240 1 50 1 242 1 55 1 115 1 247 2 59 1 251 3 252 1 253 1 256 2 
92 2 0 1 221 2 121 1 222 1 161 1 3 2 9 1 166 1 13 1 101 1 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 95 1 161 1 3 3 164 1 9 1 166 1 12 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 1 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 83 2 115 1 211 1 59 1 117 2 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 117 2 157 1 253 1 158 1 
221 2 92 2 121 1 222 1 161 1 3 3 5 1 164 1 9 1 166 1 12 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 139 1 238 1 240 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
92 2 221 2 121 1 222 1 161 1 3 3 164 1 9 1 166 1 13 1 101 3 167 1 16 1 39 1 128 1 129 1 109 1 136 1 201 1 47 1 139 1 238 1 141 1 150 1 55 1 83 2 211 1 59 1 157 1 253 1 158 1 
92 3 222 2 121 2 161 1 141 2 13 1 167 2 16 1 128 1 211 1 129 1 232 1 
221 2 92 2 121 1 222 1 161 1 3 2 5 1 9 1 166 1 12 1 13 1 101 2 167 1 16 1 39 1 128 1 129 1 232 1 109 1 136 2 201 1 47 1 19 1 139 1 238 1 240 1 77 1 24 1 141 1 150 1 55 1 153 1 83 2 115 1 211 1 59 1 157 1 253 1 158 1 
92 2 121 1 222 1 167 1 16 1 161 1 128 1 211 1 129 1 141 1 13 1 
32 1 35 2 34 1 92 2 2 1 189 1 161 1 97 1 126 1 7 2 70 3 98 1 99 1 13 1 167 1 38 1 16 1 17 1 129 1 130 1 132 1 107 2 172 1 236 1 202 1 20 1 204 1 205 1 50 1 79 1 142 3 111 1 179 1 149 2 82 1 53 1 181 1 113 1 57 1 211 1 251 2 252 1 255 1 256 4 
35 2 34 1 92 2 94 1 2 1 161 1 97 1 6 1 7 2 70 3 98 1 99 1 13 2 167 1 16 1 17 1 130 1 129 1 132 1 107 2 172 1 202 1 203 1 20 1 204 1 205 1 242 1 50 1 142 3 111 1 147 1 149 2 82 1 113 1 211 1 116 1 29 1 60 1 251 2 252 1 256 4 
0 1 221 3 92 2 222 1 121 1 3 2 161 1 9 1 166 1 13 1 101 1 167 1 16 1 39 1 128 1 129 1 109 2 136 2 201 1 47 1 139 1 19 2 238 2 77 2 24 1 141 1 150 2 55 1 83 3 114 1 211 1 59 1 157 2 253 1 63 1 62 1 158 2 
221 1 92 2 222 1 121 1 161 1 164 1 13 1 167 1 16 1 128 1 129 1 105 1 109 1 136 1 19 1 238 1 241 1 77 1 23 1 24 1 141 1 150 1 83 1 114 1 211 1 247 1 88 1 157 1 63 1 62 1 256 1 158 1 
92 2 221 1 121 1 222 1 161 1 19 1 238 1 77 1 24 1 141 1 13 1 150 1 167 1 16 1 128 1 114 1 83 1 211 1 129 1 157 1 62 1 63 1 109 1 136 1 158 1 
221 3 92 2 67 1 222 1 121 1 161 1 13 1 167 1 16 1 128 1 129 1 109 3 136 3 19 3 238 3 77 3 24 3 141 1 150 3 83 3 114 3 211 1 157 3 63 1 62 1 158 3 
221 1 92 2 222 1 121 1 161 1 13 1 167 1 16 1 128 1 129 1 109 1 136 1 19 1 238 1 110 1 77 1 24 1 141 1 150 1 83 1 114 1 211 1 157 1 63 1 62 1 158 1 
92 2 222 1 121 1 161 1 110 1 141 1 13 1 167 1 16 1 114 1 128 1 211 1 129 1 63 1 
92 1 21 1 28 1 46 1 
92 1 224 1 28 1 
92 1 26 2 248 1 199 1 
92 1 162 1 248 1 193 1 199 1 
124 1 28 1 
2 1 7 1 131 1 251 1 142 1 107 1 149 1 
32 1 236 1 50 1 57 1 132 1 255 1 64 1 
2 1 7 1 251 1 142 1 107 1 149 1 
204 1 132 1 50 1 252 1 
188 1 3 1 55 1 83 2 233 1 101 1 158 1 
83 1 158 1 
3 1 83 1 55 1 164 1 101 1 256 1 
83 1 158 1 
3 1 164 1 101 1 256 1 
227 1 
184 1 
184 1 
167 1 
161 1 
167 1 
33 1 92 2 20 1 4 1 227 1 145 1 13 1 152 1 16 1 211 1 184 1 129 1 18 1 120 1 135 1 
33 1 92 2 20 1 239 1 4 1 164 1 227 1 145 1 13 1 101 2 14 2 16 1 211 1 184 1 129 1 18 1 120 1 135 1 171 1 256 1 
219 1 
70 2 164 1 208 1 256 2 
66 1 70 2 164 1 256 2 
32 1 35 2 66 1 92 3 33 1 189 1 4 1 125 1 70 2 99 1 37 1 227 1 13 2 101 1 14 1 16 1 168 1 130 1 129 1 132 1 18 1 135 1 173 1 172 1 20 1 239 1 244 2 145 1 144 1 208 1 82 1 52 1 152 1 54 1 57 1 184 1 211 1 116 1 219 1 120 1 255 1 256 2 91 1 
102 1 211 1 129 1 120 1 228 1 
35 2 66 1 92 2 33 1 34 1 94 1 2 1 4 1 7 3 70 2 98 1 99 1 227 1 13 3 101 1 14 1 16 1 130 1 129 1 131 1 132 1 231 1 18 1 135 1 171 1 107 3 172 1 20 1 204 1 239 1 242 1 50 1 142 4 145 1 144 1 208 1 149 3 82 1 184 1 211 1 219 1 251 3 252 1 120 1 256 3 
33 1 92 2 20 1 239 1 4 1 164 1 227 1 145 1 13 1 101 1 14 1 16 1 211 1 184 1 129 1 18 1 120 1 135 1 171 2 256 3 
33 1 92 2 1 1 20 1 4 1 145 1 227 1 13 1 16 1 211 1 184 1 129 1 18 1 120 1 135 1 
33 2 92 4 1 1 20 2 4 2 145 2 227 2 228 1 13 2 102 1 16 2 211 2 184 2 129 2 18 2 120 2 135 2 
33 1 92 2 20 1 4 1 110 1 227 1 145 1 13 1 16 1 211 1 184 1 129 1 18 1 120 1 135 1 
33 2 92 4 1 1 20 2 4 2 145 2 227 2 13 2 152 1 16 2 211 2 184 2 129 2 18 2 120 2 135 2 
33 1 92 2 20 1 4 1 145 1 227 1 228 1 13 1 102 1 16 1 211 1 184 1 129 1 18 1 120 1 135 1 
92 2 20 1 164 1 71 1 178 1 245 1 227 1 13 1 101 2 16 1 85 1 182 1 212 2 211 1 184 1 129 1 118 1 250 1 171 1 256 2 
35 1 92 2 34 1 94 1 2 1 7 2 71 1 98 1 99 1 227 1 13 3 101 1 16 1 229 1 129 1 131 1 132 1 231 1 171 1 107 2 172 1 20 1 204 1 242 1 50 1 142 3 245 1 178 1 144 1 149 2 85 1 182 1 212 1 184 1 211 1 214 1 90 1 251 2 250 1 252 1 256 1 
85 1 212 1 51 1 233 1 100 1 101 1 
229 1 164 1 
214 1 164 1 
92 2 71 1 227 1 100 1 13 1 101 1 16 1 129 1 105 1 171 1 20 1 51 1 245 1 178 1 85 2 184 1 211 1 212 1 247 1 90 1 250 1 256 2 
92 2 71 1 227 1 100 1 13 1 101 1 16 1 129 1 230 1 105 1 233 1 171 1 20 1 76 1 51 1 245 1 178 1 85 2 184 1 211 1 212 1 247 1 90 1 250 1 256 2 
90 1 
32 1 92 3 35 2 189 1 96 1 125 1 71 1 72 1 37 1 99 1 227 1 100 1 13 2 101 2 16 1 229 1 168 1 129 1 105 1 132 1 231 2 171 2 173 1 172 1 20 1 51 1 244 4 144 1 245 1 178 1 52 1 85 2 182 1 57 1 212 2 184 1 211 1 247 1 214 1 116 1 90 1 250 1 255 1 256 3 91 1 
85 1 71 1 250 1 245 1 178 1 228 1 
35 2 92 2 34 1 94 1 2 1 7 4 71 1 98 1 72 1 99 1 227 1 100 1 13 3 101 2 16 1 229 1 129 1 131 1 105 1 132 1 231 2 171 2 107 4 172 1 20 1 204 1 51 1 242 1 50 1 142 5 245 1 178 1 144 1 149 4 85 2 182 1 212 2 184 1 211 1 247 1 214 1 90 1 251 4 250 1 252 1 256 3 
85 1 71 1 250 1 245 1 178 1 228 1 
92 2 96 1 71 1 164 1 227 1 194 1 13 1 101 2 16 1 129 1 171 1 20 1 245 1 85 1 182 1 184 1 211 1 27 1 212 2 118 1 256 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 268 227 255 185 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V | OPERATOR | 4719 | - -> *
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
47 1 206 1 2 1 51 1 27 1 155 1 
47 1 206 1 2 1 27 1 155 1 
265 1 208 2 207 1 
0 1 237 2 239 1 225 1 256 2 117 1 119 1 196 2 266 3 168 2 221 1 
0 1 66 1 251 1 237 2 239 1 206 1 240 1 225 1 256 4 119 1 88 1 196 1 121 1 266 2 168 2 62 1 
0 1 66 1 251 1 237 1 112 1 239 1 206 1 240 1 225 1 256 3 119 1 15 1 196 1 35 1 266 1 62 1 168 1 123 1 
0 1 66 1 251 1 237 1 239 1 206 1 240 1 225 1 256 3 258 1 119 1 196 1 121 1 266 1 168 1 62 2 
246 1 119 1 239 1 225 1 
0 1 237 1 239 1 173 1 81 1 225 1 256 2 119 1 196 2 266 1 168 1 
0 1 66 1 251 2 237 1 112 1 206 2 240 1 27 1 225 1 256 3 73 1 119 1 196 1 15 1 35 1 266 1 199 1 62 1 168 1 123 1 
0 1 66 1 251 2 237 1 112 1 206 2 240 1 27 1 225 1 256 3 119 1 196 1 15 1 35 1 266 1 199 1 62 1 168 1 123 1 
0 1 251 1 237 1 239 1 206 1 44 1 27 1 225 1 256 2 73 1 119 1 196 1 266 1 199 1 168 1 52 1 110 1 
0 1 251 1 237 1 239 1 206 1 27 1 225 1 256 2 73 1 119 1 196 1 266 1 199 1 168 1 52 1 110 1 37 1 
0 1 251 1 237 1 252 1 239 1 206 1 27 1 225 1 256 2 119 1 196 1 61 1 266 1 199 1 168 1 52 1 110 1 125 1 
0 1 251 1 237 1 252 1 239 1 206 1 27 1 225 1 256 2 73 1 119 1 196 1 61 1 266 1 199 1 168 1 52 1 110 1 125 1 
0 1 237 1 239 1 225 1 256 3 119 1 196 1 266 2 168 2 221 1 
237 1 239 1 80 2 25 1 225 1 256 3 119 1 196 1 266 2 107 1 
237 1 119 1 80 1 239 1 163 1 196 2 266 1 225 1 107 1 256 2 
237 1 239 1 80 1 225 1 8 1 256 2 119 1 196 1 266 1 107 1 
127 1 237 1 119 1 80 1 239 1 196 1 266 1 225 1 107 1 256 2 
66 1 251 1 237 1 238 1 239 1 80 1 150 1 206 1 189 1 225 1 256 3 119 1 213 1 60 1 196 1 266 1 62 4 107 1 
237 1 119 1 80 1 239 1 229 1 196 1 266 1 225 1 107 1 181 1 256 2 
49 1 32 3 248 1 
32 1 
133 1 8 2 134 1 10 2 136 3 11 3 137 1 138 1 139 1 17 2 143 2 144 2 21 1 23 1 149 2 24 5 25 1 26 1 27 1 153 1 154 3 157 1 155 2 158 3 160 1 30 1 162 1 33 1 40 2 170 2 173 1 42 3 43 1 174 2 175 1 178 1 180 1 48 6 53 14 54 3 191 1 58 3 196 5 199 1 62 2 63 3 64 4 65 2 66 1 206 2 209 1 70 2 69 2 74 2 215 3 217 1 218 1 76 4 77 1 221 1 223 1 80 2 224 2 82 1 83 2 227 1 88 1 231 3 93 4 234 2 238 1 94 3 241 4 243 2 244 3 245 3 103 3 102 1 104 1 107 1 108 4 109 4 113 3 253 1 255 1 256 4 257 1 258 1 261 1 119 1 262 1 120 5 121 1 266 4 268 1 
66 1 206 2 209 1 8 2 69 2 134 1 10 2 136 3 11 3 137 1 74 2 138 1 139 1 215 3 218 1 217 1 17 2 143 2 76 4 77 1 144 2 21 1 221 1 223 1 23 1 80 1 149 2 24 5 224 2 25 1 82 1 26 1 27 1 83 2 155 2 157 1 158 2 160 1 30 1 162 1 227 1 33 1 231 3 234 2 93 4 40 2 170 2 238 1 94 2 241 4 42 2 43 1 243 2 244 3 174 2 245 3 175 1 178 1 180 1 48 6 103 3 104 1 109 4 108 4 107 1 53 4 54 3 113 3 253 1 191 1 255 1 258 1 257 1 256 3 58 3 261 1 119 1 120 5 196 3 121 1 266 2 199 1 62 2 268 1 63 3 65 2 64 4 
25 1 255 1 257 1 134 1 157 1 137 1 180 1 138 1 227 1 76 4 268 1 93 4 
66 1 206 2 3 2 8 2 211 4 134 1 136 4 137 1 138 1 139 1 218 1 217 1 18 4 76 4 77 1 21 1 221 1 23 1 80 1 25 1 82 1 27 1 155 2 157 1 86 2 30 1 227 1 33 1 167 2 92 1 169 1 233 4 93 4 238 1 172 2 241 2 242 2 43 1 243 2 244 4 98 1 97 1 175 1 176 3 180 1 48 4 104 1 50 2 108 2 107 1 53 8 250 1 55 1 253 1 255 1 257 1 256 3 258 2 194 1 261 1 119 1 196 3 121 1 266 2 199 1 268 1 62 3 64 4 202 2 
66 1 205 1 206 2 209 1 8 2 134 1 10 2 136 3 11 2 137 1 74 2 138 1 139 1 215 2 218 1 217 1 17 2 143 2 76 4 77 1 144 2 21 1 221 1 79 2 223 1 80 1 149 2 24 4 224 2 25 1 82 1 26 1 27 1 83 2 155 2 157 1 158 2 159 2 30 1 227 1 33 1 164 2 231 2 234 2 93 4 40 2 170 2 238 1 94 2 42 2 241 4 43 1 243 2 244 3 174 2 245 2 175 1 180 1 103 2 48 6 104 1 105 2 247 2 109 4 107 1 108 4 53 4 54 2 184 2 113 4 253 1 255 1 256 4 257 1 258 1 58 2 261 1 119 1 120 4 196 3 121 1 266 2 199 1 268 1 62 2 63 2 65 2 64 4 
66 1 205 1 206 2 209 1 8 2 134 1 10 2 136 3 11 2 137 1 74 2 138 1 139 1 215 2 218 1 217 1 17 2 143 2 76 4 77 1 144 2 21 1 221 1 79 2 223 1 23 1 80 1 149 2 24 4 224 2 25 1 82 1 26 1 27 1 83 2 155 2 157 1 158 2 159 2 30 1 227 1 33 1 164 2 231 2 234 2 93 4 40 2 170 2 238 1 94 2 42 2 241 4 43 1 243 2 244 3 174 2 245 2 175 1 177 1 180 1 103 2 48 6 104 1 105 2 247 2 109 4 107 1 108 4 53 4 54 2 184 2 113 4 253 1 255 1 256 3 257 1 258 1 58 2 261 1 119 1 120 4 196 3 121 1 266 2 199 1 268 1 62 2 63 2 65 2 64 4 
66 1 206 2 8 2 69 2 134 1 10 2 136 3 11 3 137 1 74 2 138 1 139 1 215 3 218 1 217 1 17 2 143 2 76 4 220 1 77 1 144 2 21 1 221 1 223 1 80 1 149 2 24 5 224 2 25 1 82 1 27 1 83 2 155 2 157 1 158 2 160 1 30 1 162 1 227 1 33 1 231 3 234 2 93 4 40 2 41 1 170 2 238 1 94 2 241 4 42 2 43 1 243 2 244 3 174 2 245 3 175 1 180 1 48 6 103 3 104 1 109 4 108 4 107 1 53 4 54 3 113 3 253 1 191 1 255 1 257 1 256 3 258 1 58 3 260 1 261 1 119 1 120 5 196 3 121 1 266 2 199 1 62 2 268 1 63 3 65 2 64 4 
0 1 128 1 6 2 8 2 134 1 9 2 10 2 136 3 11 2 137 1 138 1 139 1 141 1 17 2 143 2 144 2 21 1 147 1 148 2 23 1 149 2 24 4 26 1 27 1 152 1 155 2 157 1 158 2 159 2 30 1 164 2 33 1 168 1 38 1 40 2 170 2 171 2 42 2 43 1 174 2 175 1 177 1 180 1 48 6 53 4 54 2 184 2 188 1 58 2 196 3 199 1 62 2 63 2 64 4 65 2 204 1 66 1 206 2 205 1 209 1 74 2 215 2 217 1 218 1 76 4 77 1 221 1 79 2 223 1 224 2 82 1 83 2 227 1 231 2 93 4 234 2 235 1 94 2 95 1 240 1 241 4 243 2 244 3 245 2 103 2 104 1 105 2 247 2 108 4 109 4 111 2 113 4 253 1 115 1 255 1 258 1 257 1 256 3 261 1 119 1 120 4 121 1 266 2 268 1 
151 1 
8 2 134 1 10 2 136 3 11 3 137 1 138 1 139 1 17 2 143 2 144 2 21 1 23 1 149 2 24 5 25 1 26 1 27 1 157 1 155 2 158 2 160 1 30 1 162 1 33 1 40 2 170 2 173 1 42 2 43 1 174 2 175 1 178 1 180 1 48 6 53 4 54 3 190 1 191 1 58 3 196 4 199 1 62 3 63 3 64 4 65 2 66 1 206 2 209 1 69 2 74 2 215 3 217 1 218 1 76 4 77 1 220 1 221 1 223 1 80 1 224 2 82 1 83 2 227 1 231 3 93 4 234 2 238 1 94 2 241 4 243 2 244 3 245 3 103 3 104 1 107 1 108 4 109 4 113 3 253 1 255 1 256 3 257 1 258 2 260 1 261 1 119 1 120 5 121 1 266 2 268 1 
137 1 227 1 76 1 255 1 93 1 
66 1 206 2 209 1 8 2 69 2 134 1 10 2 136 3 11 3 137 1 74 2 138 1 139 1 215 3 218 1 217 1 17 2 143 2 76 4 220 1 77 1 144 2 21 1 221 1 223 1 80 1 149 2 24 5 224 2 25 1 82 1 26 1 27 1 83 2 155 2 157 1 158 2 160 1 30 1 162 1 227 1 33 1 231 3 234 2 93 4 40 2 170 2 238 1 94 2 241 4 42 2 43 1 243 2 244 3 174 2 245 3 175 1 178 1 180 1 48 6 103 3 104 1 109 4 108 4 107 1 53 4 54 3 113 3 253 1 191 1 255 1 258 1 256 3 58 3 260 1 261 1 119 1 120 5 196 3 121 1 266 2 199 1 62 2 268 1 63 3 65 2 64 4 
66 1 206 2 209 1 8 2 69 2 134 1 10 2 136 3 11 3 137 1 74 2 138 1 139 1 215 3 218 1 217 1 17 2 143 2 76 4 220 1 77 1 144 2 21 1 221 1 223 1 80 1 149 2 24 5 224 2 25 1 82 1 26 1 27 1 83 2 155 2 157 1 158 2 160 1 30 1 162 1 227 1 33 1 231 3 234 2 93 4 40 2 170 2 238 1 94 2 241 4 42 2 43 1 243 2 244 3 174 2 245 3 175 1 178 1 180 1 48 6 103 3 104 1 109 4 108 4 107 1 53 4 54 3 113 3 253 1 254 1 191 1 258 1 256 3 58 3 260 1 261 1 119 1 120 5 196 3 121 1 266 2 199 1 62 2 268 1 63 3 65 2 64 4 
132 1 8 2 134 1 10 2 136 3 11 7 137 1 138 1 13 1 14 1 139 10 17 2 143 2 144 2 21 1 149 2 24 9 25 1 26 1 27 2 157 1 156 1 155 2 158 10 159 2 160 5 30 1 162 5 164 2 33 1 40 2 170 2 42 10 43 1 45 1 174 2 175 1 180 1 48 6 53 7 54 7 184 2 185 1 190 1 191 5 192 1 58 7 193 1 198 1 196 11 199 1 62 2 63 7 64 4 65 2 66 1 205 1 206 3 209 1 69 2 72 1 71 1 210 1 74 2 215 7 218 1 217 1 76 4 219 1 220 1 77 1 221 1 79 2 223 9 80 10 224 2 82 1 83 2 85 1 87 1 227 1 89 1 231 7 234 2 93 4 236 1 238 1 94 10 241 6 243 2 244 3 245 7 103 7 104 1 105 2 247 2 107 9 108 6 109 4 113 9 253 1 255 1 256 20 257 1 258 1 260 1 261 1 119 10 120 9 121 1 266 11 122 1 268 1 
12 1 133 1 53 1 
22 1 53 1 
78 1 53 1 
183 1 206 1 27 1 96 1 244 1 48 1 228 1 52 1 110 1 53 1 125 1 201 1 
48 1 206 1 27 1 244 1 269 1 53 1 
183 1 48 1 206 1 27 1 52 1 53 1 110 1 
78 1 53 1 
34 1 53 1 
78 1 53 1 
22 1 53 1 
22 1 53 1 
131 1 249 1 233 1 53 1 
68 1 18 1 53 1 
78 1 67 2 80 1 256 2 135 1 195 1 119 1 139 1 196 1 140 1 50 1 266 1 91 1 107 1 53 2 64 2 222 1 
214 1 
80 1 256 2 135 1 246 1 195 1 119 1 139 1 196 1 140 1 50 1 266 1 91 1 107 1 
0 1 158 2 119 1 223 1 179 1 94 2 139 1 196 1 42 2 266 1 168 2 256 3 
0 1 204 1 66 1 128 1 206 2 6 2 8 2 9 2 10 2 136 3 11 2 74 2 139 1 215 2 141 1 218 1 17 2 143 2 77 1 144 2 147 1 148 2 223 1 149 2 24 4 224 2 82 1 27 1 152 1 83 2 155 2 158 1 164 2 168 1 231 2 234 2 38 1 40 2 235 1 170 2 95 1 171 2 94 1 240 1 173 1 241 4 42 1 243 2 244 3 174 2 245 2 103 2 48 6 108 4 109 4 53 4 54 2 111 2 113 2 253 1 188 1 115 1 258 1 256 3 58 2 119 1 120 4 196 2 266 1 199 1 62 1 63 2 64 4 65 2 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 46 2 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 223 1 94 2 42 2 256 3 158 2 179 1 119 1 139 1 196 1 266 1 168 2 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 46 2 103 1 139 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 223 1 94 1 42 1 256 2 158 1 179 1 119 1 139 1 196 1 266 1 168 1 124 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 46 2 103 1 139 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 190 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 105 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 130 1 206 1 133 3 8 1 10 1 11 1 139 1 215 1 17 1 143 1 144 1 21 1 223 1 149 1 24 2 224 1 82 1 27 1 83 1 158 2 159 1 88 1 228 2 168 2 231 1 37 1 40 1 170 1 94 2 173 1 42 2 243 1 96 2 244 2 174 1 245 1 179 1 103 1 48 2 52 1 109 2 110 1 53 3 54 1 183 1 252 2 113 1 253 1 56 1 256 3 58 1 119 1 59 1 120 2 196 4 267 1 266 2 199 1 63 1 125 3 201 2 65 1 64 2 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 215 1 247 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 65 1 64 3 
0 1 158 1 119 1 223 1 94 1 139 1 196 1 42 1 266 1 168 1 256 2 
0 1 66 1 206 1 6 1 8 1 9 1 10 1 136 3 11 1 74 1 139 1 215 1 218 1 17 1 143 1 77 1 144 1 148 1 223 1 149 1 24 2 224 1 83 1 155 1 158 1 164 1 168 1 231 1 234 1 38 1 40 1 170 1 171 1 94 1 240 1 241 2 42 1 243 1 174 1 245 1 103 1 48 3 108 2 109 2 53 2 54 1 111 1 113 1 256 3 258 1 58 1 119 1 120 2 196 1 266 1 62 1 63 1 64 2 65 1 
0 1 223 1 94 1 42 1 256 2 9 1 158 1 179 1 119 1 139 1 196 1 266 1 168 1 
66 1 206 1 6 1 8 1 9 1 10 1 136 3 11 1 74 1 215 1 218 1 17 1 143 1 77 1 144 1 79 1 148 1 149 1 24 2 224 1 25 1 83 1 155 1 159 1 164 1 231 1 234 1 38 1 40 1 170 1 238 1 171 1 241 2 243 1 174 1 245 1 48 3 103 1 105 1 247 1 108 2 109 2 53 2 54 1 111 1 184 1 113 2 258 1 256 1 58 1 120 2 62 1 63 1 64 2 65 1 
0 1 66 1 206 1 6 1 8 1 9 1 10 1 136 3 11 1 74 1 139 1 215 1 218 1 17 1 143 1 77 1 144 1 148 1 223 1 149 1 24 2 224 1 83 1 155 1 158 1 164 1 168 1 231 1 234 1 38 1 40 1 170 1 171 1 94 1 240 1 241 2 42 1 243 1 174 1 245 1 103 1 48 3 108 2 109 2 53 2 54 1 111 1 113 1 190 1 256 3 258 1 58 1 119 1 120 2 196 1 266 1 62 1 63 1 64 2 65 1 
66 1 206 1 6 1 8 1 9 1 10 1 136 3 11 1 74 1 139 1 215 1 218 1 17 1 143 1 77 1 144 1 148 1 223 1 80 1 149 1 24 2 224 1 25 1 83 1 155 1 158 1 164 1 231 1 234 1 38 1 40 1 238 1 170 1 171 1 94 1 241 2 42 1 243 1 174 1 245 1 103 1 48 3 108 2 107 1 109 2 53 2 54 1 111 1 113 1 190 1 258 1 256 3 58 1 119 1 120 2 196 1 266 1 62 1 63 1 64 2 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 144 1 109 2 54 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 63 1 231 1 64 2 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 109 3 144 1 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 234 1 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 109 3 144 1 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 234 1 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 109 3 144 1 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 234 1 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 215 1 247 1 17 1 143 1 109 2 144 1 54 1 78 1 79 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 65 1 64 2 234 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 109 3 144 1 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 234 1 65 1 
164 1 241 1 230 1 108 1 53 1 
74 1 241 1 230 1 108 1 53 1 
203 1 212 1 164 1 241 1 108 1 53 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 206 1 8 1 10 1 11 1 74 1 139 1 215 1 17 1 143 1 144 1 21 1 79 1 223 1 149 1 24 2 224 1 82 1 27 1 83 1 155 1 158 1 159 1 228 3 164 1 168 1 231 1 234 1 40 1 170 1 94 1 241 2 42 1 243 1 96 3 244 3 174 1 245 1 179 1 103 1 48 3 105 1 247 1 52 1 108 2 109 2 53 2 110 1 54 1 183 1 252 1 184 1 113 2 253 1 256 2 58 1 119 1 120 2 196 2 266 1 199 1 63 1 125 4 201 3 64 2 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 190 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 64 3 65 1 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 46 2 179 1 103 1 139 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 234 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 46 2 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 149 1 184 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 179 1 103 1 139 1 105 1 215 1 247 1 17 1 143 1 109 3 144 1 54 1 78 1 79 1 223 1 184 1 149 1 24 2 113 2 224 1 83 1 256 2 158 1 58 1 159 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 65 1 64 3 
0 1 40 1 94 1 42 1 10 1 245 1 11 1 103 1 139 1 215 1 17 1 143 1 144 1 109 3 54 1 78 1 223 1 149 1 24 2 113 1 224 1 83 1 256 2 158 1 58 1 119 1 120 2 196 1 266 1 168 1 231 1 63 1 64 3 65 1 
0 1 1 1 170 1 206 1 44 1 96 2 243 1 5 1 244 2 133 3 8 1 99 1 174 1 48 2 139 1 15 1 50 1 52 1 110 1 53 4 21 1 112 1 252 1 253 1 82 1 27 1 226 1 256 2 84 1 119 1 118 1 228 2 196 2 35 1 266 1 199 1 62 1 168 1 123 1 201 2 125 3 
0 1 1 1 170 1 95 1 171 1 206 1 96 2 243 1 5 1 6 1 244 2 133 3 8 1 99 1 174 1 48 2 139 1 50 1 52 1 181 1 110 1 53 4 146 1 111 1 148 1 252 1 253 1 82 1 27 1 226 1 256 2 84 1 119 1 118 1 31 1 228 2 229 1 196 1 264 1 266 1 168 1 232 1 201 2 125 3 
0 1 40 1 94 1 42 1 208 1 10 1 245 3 11 3 103 3 139 1 215 3 17 1 143 1 109 2 144 1 54 3 223 1 149 1 24 4 224 1 113 3 190 1 191 1 83 1 256 2 58 3 158 1 160 1 162 2 119 1 120 4 196 1 266 1 168 1 231 3 63 3 234 1 65 1 64 2 
0 1 94 1 241 1 42 1 69 1 245 1 11 1 103 1 139 1 215 1 108 1 53 1 54 1 78 1 223 1 24 1 187 1 113 1 191 1 256 2 58 1 158 1 160 1 162 1 119 1 120 1 196 1 266 1 230 1 168 1 231 1 63 1 
0 1 94 1 42 1 245 3 11 3 103 3 139 1 215 3 20 1 54 3 223 1 24 3 113 3 191 1 256 2 58 3 158 1 160 1 162 3 119 1 120 3 196 1 266 1 168 1 231 3 63 3 
127 1 0 1 94 1 42 1 245 1 11 1 103 1 139 1 215 1 54 1 223 1 24 1 113 1 191 1 256 2 58 1 158 1 160 1 162 1 119 1 120 1 196 1 266 1 168 1 231 1 63 1 
127 1 0 1 223 1 94 1 42 1 191 1 256 2 158 1 162 1 119 1 139 1 196 1 266 1 168 1 
0 1 223 1 94 1 24 1 113 1 42 1 191 1 256 2 158 1 58 1 160 1 245 1 11 1 119 1 162 1 103 1 139 1 120 1 196 1 215 1 266 1 168 1 63 1 231 1 54 1 
259 1 129 1 75 1 256 1 
101 1 16 1 116 1 256 1 117 1 
39 1 129 1 256 1 
161 2 116 1 256 1 117 1 
129 1 186 1 
252 1 228 1 96 1 244 1 201 1 125 1 
183 1 252 1 228 1 96 1 244 1 201 1 125 1 
206 1 253 1 82 1 27 1 
111 1 171 1 95 1 206 1 27 1 6 1 28 1 
245 1 149 1 24 2 216 1 208 1 109 1 64 1 
245 1 24 1 
78 1 149 1 24 1 109 1 53 1 64 1 
245 1 24 1 
78 1 109 1 53 1 64 1 
107 1 
80 1 
80 1 
168 1 
0 1 
168 1 
127 1 256 2 161 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 106 1 200 1 126 1 182 1 
145 1 256 4 100 1 161 2 119 2 139 2 197 2 196 2 165 2 50 2 90 2 266 2 106 2 200 2 182 2 126 2 
145 1 256 2 161 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 106 1 200 1 126 1 182 1 
78 1 256 2 161 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 18 1 142 2 106 1 36 1 200 1 53 1 64 2 126 1 182 1 
29 1 
78 1 4 1 133 2 53 2 
78 1 263 1 133 2 53 2 
38 1 66 1 170 1 171 1 173 1 240 1 206 1 4 1 243 1 6 1 133 2 8 1 174 1 136 2 48 2 139 1 50 1 218 1 142 1 106 1 77 1 19 1 53 2 182 1 145 1 111 1 148 1 29 1 256 3 258 1 161 1 119 1 263 1 165 1 196 2 197 1 266 1 90 1 36 1 200 1 62 1 64 1 126 1 
246 1 119 1 139 1 90 1 114 1 
170 1 173 1 206 1 4 1 96 3 243 1 244 3 133 2 8 1 174 1 48 2 139 1 50 1 18 1 142 1 106 1 52 1 53 3 110 1 182 1 21 1 183 1 252 1 253 1 82 1 27 1 29 1 256 2 161 1 119 1 228 3 263 1 165 1 196 3 197 1 266 1 90 1 199 1 36 1 200 1 233 1 201 3 125 4 64 1 126 1 
114 1 256 2 161 1 246 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 106 1 200 1 182 1 126 1 
78 1 256 2 161 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 18 2 142 1 106 1 36 1 200 1 53 3 64 1 126 1 182 1 
256 2 100 1 161 1 119 1 139 1 197 1 196 1 165 1 50 1 90 1 266 1 106 1 200 1 182 1 126 1 
114 1 256 4 100 1 161 2 246 1 119 2 139 2 197 2 196 2 165 2 50 2 90 2 266 2 106 2 200 2 182 2 126 2 
78 1 250 1 55 1 131 1 97 1 211 2 256 2 86 1 161 1 194 1 176 1 119 1 139 1 196 1 197 1 50 1 266 1 18 1 53 2 64 2 
172 1 173 1 206 1 96 2 243 1 244 2 8 1 97 1 211 1 176 1 48 1 139 1 50 1 18 1 52 1 53 1 110 1 21 1 250 1 183 1 252 1 55 1 253 1 82 1 27 1 256 2 86 1 161 1 194 1 119 1 228 2 197 1 196 3 266 1 199 1 167 1 233 1 201 2 125 3 64 1 202 1 
176 1 3 1 242 1 208 1 211 1 64 1 
78 1 202 1 
78 1 167 1 
172 1 242 1 241 1 3 1 97 1 211 1 176 2 139 1 50 1 18 1 108 1 53 2 250 1 55 1 256 2 161 1 194 1 119 1 197 1 196 1 266 1 64 1 
250 1 246 1 176 1 194 1 55 1 97 1 
131 1 7 1 211 2 176 1 139 1 50 1 18 1 53 2 250 1 78 1 55 1 256 2 57 1 161 1 86 1 119 1 166 1 197 1 196 1 266 1 64 2 
68 1 172 1 242 1 241 1 3 1 208 1 97 1 211 1 176 2 139 1 50 1 18 1 108 1 53 2 250 1 55 1 256 2 161 1 194 1 119 1 197 1 196 1 266 1 265 1 64 1 
172 1 
38 1 66 1 171 1 173 1 172 1 240 1 206 1 3 1 241 1 242 1 243 1 6 1 8 1 97 1 211 2 136 4 176 2 48 2 139 1 50 1 218 1 18 2 77 1 108 1 53 3 111 1 250 1 148 1 55 1 155 1 256 3 258 1 86 1 161 1 194 1 119 1 166 1 197 1 196 2 266 1 167 1 62 1 233 2 64 2 202 1 
250 1 246 1 176 1 194 1 55 1 97 1 
206 1 3 1 8 1 211 2 139 1 18 2 21 1 82 1 27 1 155 1 161 1 86 1 228 4 167 1 233 2 173 1 172 1 242 1 241 1 243 1 96 4 244 4 97 1 176 2 48 2 50 1 52 1 108 1 110 1 53 3 250 1 183 1 252 1 55 1 253 1 256 2 194 1 119 1 196 3 197 1 266 1 199 1 125 5 201 4 202 1 64 2 

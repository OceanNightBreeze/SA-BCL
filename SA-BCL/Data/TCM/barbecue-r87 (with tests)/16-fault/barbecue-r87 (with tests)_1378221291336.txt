#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V ERROR java.lang.NullPointerException 218 
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 29 114 210 18 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 114 210 18 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 114 210 18 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 114 210 18 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 114 210 18 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 114 210 157 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 114 210 18 47 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V ERROR net.sourceforge.barbecue.BarcodeException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR net.sourceforge.barbecue.BarcodeException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V ERROR net.sourceforge.barbecue.BarcodeException 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 224 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V FAILED junit.framework.AssertionFailedError 82 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V ERROR java.lang.NullPointerException 148 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V ERROR net.sourceforge.barbecue.BarcodeException 105 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V ERROR java.lang.StringIndexOutOfBoundsException 53 229 82 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V ERROR java.lang.NullPointerException 148 141 216 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V ERROR java.lang.NullPointerException 218 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V | OPERATOR | 5532 | == -> !=
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String; | RETURN | 3239 | return null
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | CONSTANT | 4336 | 2 -> 0
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | OPERATOR | 12215 | % -> +
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V | CONSTANT | 3550 | 0 -> 1
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle; | RETURN | 10112 | return null
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | STATEMENT | 9031 | stmt -> ;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | ASSIGN | 1042 | = null
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4433 | = null
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 26996 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 6628 | 1 -> 0
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String; | ASSIGN | 3387 | = null
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | OPERATOR | 5942 | != -> >=
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 1 177 1 110 1 154 1 28 1 5 1 
14 1 177 1 110 1 28 1 5 1 
144 1 111 2 218 1 
84 1 189 1 169 1 170 2 3 1 147 1 72 1 133 1 177 1 109 1 33 3 63 1 90 1 123 1 21 1 151 1 231 1 204 1 56 1 
189 1 169 1 170 1 72 1 147 1 177 1 109 1 33 3 165 1 123 1 92 1 90 2 151 1 231 1 204 1 56 1 
33 2 189 1 109 1 170 1 169 1 123 1 146 1 231 1 72 1 56 1 
189 1 169 1 170 1 98 1 72 1 109 1 33 2 123 1 231 2 78 1 56 1 
84 1 189 1 169 1 170 1 102 1 147 1 72 1 133 1 177 2 33 3 110 1 63 1 90 1 123 1 21 1 216 1 151 2 231 1 204 1 56 1 
84 1 189 1 169 1 170 1 147 1 72 1 133 1 177 2 33 3 110 1 63 1 90 1 123 1 21 1 216 1 151 2 231 1 204 1 56 1 
187 1 13 1 219 1 189 1 169 1 170 1 102 1 72 1 177 1 109 1 33 2 110 1 123 1 216 1 151 1 231 1 56 1 
187 1 13 1 189 1 169 1 170 1 102 1 62 1 72 1 177 1 109 1 33 2 110 1 123 1 216 1 151 1 231 1 56 1 
187 1 13 1 189 1 41 1 169 1 170 1 171 1 72 1 178 1 177 1 109 1 33 2 110 1 123 1 216 1 151 1 231 1 56 1 
187 1 13 1 189 1 41 1 169 1 170 1 171 1 102 1 72 1 178 1 177 1 109 1 33 2 110 1 123 1 216 1 151 1 231 1 56 1 
33 3 189 1 109 1 170 2 169 2 123 1 202 1 231 1 72 1 56 1 
189 1 169 2 211 1 72 1 7 1 109 1 33 3 123 1 95 2 231 1 
33 2 189 1 109 1 169 1 123 1 211 1 140 1 231 2 95 1 72 1 
188 1 189 1 169 1 211 1 72 1 109 1 33 2 123 1 95 1 231 1 
189 1 169 3 211 1 72 1 109 1 33 2 123 2 202 1 95 1 231 2 
81 1 189 1 169 2 211 1 72 1 147 1 48 1 177 1 109 1 33 4 165 1 123 2 90 1 151 1 95 2 231 1 
33 2 189 1 109 1 169 1 200 1 123 1 211 1 231 1 95 1 72 1 
189 1 43 1 169 1 209 1 101 1 211 1 72 1 147 1 194 1 48 1 177 1 109 1 33 3 123 1 90 4 151 1 95 1 231 1 
33 2 189 1 109 1 169 1 228 1 123 1 211 1 231 1 95 1 11 1 72 1 
51 1 100 3 167 1 
100 1 
206 10 58 1 23 1 169 1 1 2 207 1 210 1 211 1 213 1 4 1 29 1 30 1 6 1 31 4 33 2 7 1 8 1 120 1 34 1 122 1 91 1 38 1 95 1 65 1 96 1 186 1 185 1 39 1 42 1 67 1 127 1 68 1 193 1 156 3 155 1 18 1 71 1 72 1 161 1 199 1 75 4 114 1 231 1 142 1 79 1 
0 1 116 2 118 2 169 2 175 1 177 2 7 1 122 1 179 1 183 4 64 1 14 2 126 1 188 2 190 3 68 1 17 1 69 1 193 1 18 1 72 1 134 2 197 2 137 1 75 4 201 1 202 1 141 2 142 1 79 1 205 2 83 1 206 8 207 1 86 1 24 1 210 1 88 1 211 1 147 1 149 2 31 4 33 3 35 4 92 2 90 3 216 1 93 4 38 1 95 1 97 4 40 1 220 1 223 1 158 1 159 3 106 2 104 1 107 2 48 1 110 1 50 3 227 2 165 1 52 1 166 2 114 1 231 3 234 1 
0 1 169 2 60 2 2 2 173 1 174 2 4 2 176 2 177 2 7 1 120 2 122 1 179 1 180 2 183 6 64 1 66 2 124 2 186 1 14 2 126 1 188 2 127 4 68 1 129 2 192 2 17 1 193 1 18 1 71 2 72 1 20 2 196 2 197 4 73 2 199 2 75 4 202 1 141 2 142 1 79 1 206 4 207 1 23 2 86 1 208 2 145 1 24 1 210 1 88 1 211 1 213 2 147 1 30 2 31 4 149 4 33 4 34 2 215 2 91 2 92 1 90 2 216 1 38 1 95 1 217 2 96 2 97 4 42 4 220 1 45 4 153 2 155 4 158 1 159 3 104 1 161 2 48 1 108 2 162 1 110 1 163 2 50 3 165 1 114 1 231 3 232 2 234 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 68 1 193 1 155 1 18 1 71 1 72 1 161 1 162 1 199 1 75 4 114 1 231 1 203 1 142 1 79 1 
0 1 169 2 60 2 2 2 173 1 175 1 174 2 4 2 176 2 177 2 7 1 120 2 122 1 179 1 180 2 183 6 64 1 66 2 124 2 186 1 14 2 126 1 188 2 127 4 68 1 129 2 192 2 17 1 193 1 18 1 71 2 72 1 20 2 196 2 197 4 73 2 199 2 138 1 75 4 202 1 141 2 142 1 79 1 206 4 207 1 23 2 86 1 208 2 145 1 24 1 210 1 88 1 211 1 213 2 147 1 30 2 31 4 149 4 33 3 34 2 215 2 91 2 92 1 90 2 216 1 38 1 95 1 217 2 96 2 97 4 42 4 220 1 45 4 153 2 155 4 158 1 159 3 104 1 161 2 48 1 108 2 162 1 110 1 163 2 50 3 165 1 114 1 231 3 232 2 234 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 68 1 193 1 155 1 18 1 71 1 72 1 161 1 162 1 199 1 75 4 114 1 231 1 203 1 142 1 79 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 68 1 193 1 155 1 18 1 71 1 72 1 161 1 162 1 199 1 75 4 114 1 231 1 203 1 142 1 79 1 
31 4 7 1 68 1 207 1 193 1 75 4 210 1 18 1 114 1 38 1 142 1 79 1 
89 1 
31 1 75 1 210 1 18 1 142 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 193 1 155 1 18 1 71 1 72 1 161 1 162 1 199 1 75 4 114 1 231 1 203 1 142 1 79 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 193 1 155 1 157 1 71 1 72 1 161 1 162 1 199 1 75 4 114 1 231 1 203 1 142 1 79 1 
23 1 169 1 207 1 173 1 210 1 211 1 213 1 4 1 30 1 6 1 31 4 33 2 7 1 120 1 34 1 122 1 91 1 38 1 95 1 96 1 186 1 39 1 42 1 67 1 127 1 68 1 193 1 130 1 155 1 18 1 71 1 72 1 47 1 161 1 162 1 199 1 75 4 114 1 231 1 142 1 79 1 
0 1 2 2 4 2 121 1 120 2 122 1 124 2 14 2 126 1 127 4 129 2 128 2 15 1 17 1 18 1 20 2 138 1 139 1 141 2 142 1 143 1 23 2 24 1 145 1 25 1 147 1 30 2 149 4 31 4 33 3 34 2 38 1 42 4 153 2 45 4 155 4 46 1 158 1 159 3 161 2 162 1 50 3 163 2 165 1 56 1 169 2 170 1 60 2 173 1 61 1 175 1 174 2 176 2 177 2 179 1 181 1 183 6 180 2 64 1 184 1 66 2 186 1 188 2 68 1 192 2 193 1 71 2 72 1 195 2 196 2 197 4 73 2 199 2 75 4 202 1 204 1 79 1 206 4 85 2 207 1 86 1 208 2 210 1 88 1 213 2 214 2 215 2 90 2 92 1 91 2 216 1 96 2 217 2 97 4 220 1 221 2 104 1 108 2 110 1 230 1 114 1 231 3 232 2 234 1 
206 1 8 1 113 1 
206 1 150 1 
206 1 198 1 
206 1 198 1 
206 1 150 1 
13 1 187 1 206 1 177 1 22 1 41 1 110 1 36 1 182 1 183 1 12 1 159 1 
13 1 187 1 206 1 177 1 22 1 110 1 183 1 
206 1 150 1 
177 1 206 1 110 1 44 1 183 1 159 1 
206 1 222 1 
206 1 198 1 
206 1 35 1 76 1 
206 1 116 1 59 1 74 1 
186 1 33 2 23 1 170 1 169 1 34 1 122 1 231 1 72 1 56 1 96 1 
169 1 170 1 2 1 60 1 174 1 4 1 177 1 120 1 122 1 183 3 64 1 66 1 186 1 124 1 14 1 188 1 127 2 128 1 129 1 192 1 71 1 72 1 195 1 196 1 197 2 73 1 199 1 141 1 204 1 85 1 206 2 23 1 86 1 208 1 25 1 213 1 147 1 214 1 30 1 149 2 33 3 34 1 90 1 92 1 91 1 96 1 217 1 97 2 42 2 221 1 45 2 155 1 161 1 108 1 50 3 163 1 231 1 232 1 56 1 
186 1 169 1 170 1 23 1 160 1 72 1 214 1 33 2 122 1 34 1 231 1 96 1 56 1 
2 1 60 1 174 1 4 1 176 1 177 1 7 1 120 1 183 3 180 1 64 1 66 1 124 1 14 1 188 1 127 2 128 1 129 1 192 1 71 1 20 1 195 1 196 1 197 2 73 1 199 1 141 1 85 1 206 2 86 1 208 1 25 1 213 1 147 1 214 1 30 1 149 2 33 1 215 1 91 1 92 1 90 1 217 1 97 2 42 2 221 1 153 1 45 2 155 2 161 1 48 1 108 1 50 3 163 1 232 1 
169 1 170 1 60 1 2 1 119 1 174 1 4 1 177 1 120 1 122 1 183 3 64 1 66 1 186 1 124 1 14 1 188 1 127 2 128 1 129 1 192 1 71 1 72 1 195 1 196 1 197 2 73 1 199 1 141 1 204 1 85 1 206 2 23 1 86 1 208 1 25 1 213 1 147 1 214 1 30 1 149 2 33 3 34 1 90 1 92 1 91 1 96 1 217 1 97 2 42 2 221 1 45 2 155 1 161 1 108 1 50 3 163 1 231 1 232 1 56 1 
169 1 60 1 2 1 119 1 174 1 4 1 177 1 7 1 120 1 122 1 183 3 64 1 66 1 186 1 124 1 14 1 188 1 127 2 128 1 129 1 192 1 71 1 72 1 195 1 196 1 197 2 73 1 199 1 141 1 85 1 206 2 23 1 86 1 208 1 25 1 211 1 213 1 147 1 214 1 30 1 149 2 33 3 34 1 90 1 92 1 91 1 95 1 96 1 217 1 97 2 42 2 221 1 45 2 155 1 161 1 108 1 48 1 50 3 163 1 231 1 232 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 217 1 96 1 186 1 124 1 97 2 42 2 127 2 129 1 192 1 153 1 45 2 155 2 71 1 72 1 160 1 161 1 20 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 1 71 1 72 1 160 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 174 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 174 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 174 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 174 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 2 42 2 127 2 129 1 192 1 45 2 153 1 155 1 71 1 72 1 160 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 174 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
108 1 206 1 149 1 197 1 94 1 
206 1 149 1 197 1 94 1 66 1 
108 1 32 1 206 1 149 1 197 1 164 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
0 1 169 1 170 1 60 1 2 1 174 1 4 1 176 1 177 1 178 1 120 1 122 1 179 1 180 1 183 3 182 3 12 3 66 1 13 1 187 1 186 1 124 1 14 1 188 1 127 2 129 1 192 1 17 1 71 1 72 1 20 1 196 1 197 2 73 1 199 1 141 1 206 2 22 1 23 1 208 1 213 1 30 1 149 2 33 2 34 1 215 1 36 3 91 1 216 1 217 1 96 1 97 2 41 4 42 2 153 1 45 2 155 2 160 1 159 3 161 1 108 1 110 1 163 1 231 2 232 1 56 1 
23 1 170 1 169 1 60 1 208 1 119 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 99 2 155 1 71 1 72 1 160 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 99 2 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
186 1 122 1 146 1 72 1 160 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 99 2 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
186 1 33 2 23 1 170 1 169 1 34 1 122 1 112 1 231 1 72 1 160 1 56 1 96 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 99 2 155 1 71 1 72 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 119 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 150 1 96 1 217 1 186 1 124 1 97 3 42 2 127 2 129 1 192 1 45 3 155 2 71 1 72 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
186 1 122 1 146 1 72 1 160 1 233 1 
23 1 170 1 169 1 60 1 208 1 213 1 4 1 30 1 33 2 120 1 34 1 122 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 153 1 45 3 155 1 71 1 72 1 160 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
186 1 169 1 170 2 23 2 160 1 72 1 33 3 122 1 34 2 231 1 96 2 56 1 
0 1 169 1 170 1 60 2 2 2 61 1 174 2 4 2 177 2 121 1 120 2 122 1 181 1 183 6 64 1 184 1 66 2 186 1 124 2 14 2 188 2 127 4 128 2 129 2 15 1 192 2 17 1 71 2 72 1 195 2 196 2 197 4 73 2 199 2 139 1 141 2 143 1 204 1 85 2 206 4 23 1 86 1 208 2 25 1 213 2 147 1 214 2 30 2 149 4 33 3 34 1 90 1 92 1 91 2 216 1 96 1 217 2 97 4 42 4 221 2 98 1 45 4 155 2 46 1 159 3 161 2 108 2 110 1 50 3 163 2 230 1 231 2 232 2 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 1 71 1 72 1 160 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
23 1 170 1 169 1 60 1 208 1 174 1 213 1 4 1 176 1 30 1 33 2 120 1 34 1 122 1 215 1 91 1 180 1 150 1 96 1 217 1 124 1 186 1 97 3 42 2 127 2 129 1 192 1 45 3 153 1 99 2 155 2 71 1 72 1 160 1 20 1 161 1 196 1 163 1 73 1 199 1 231 1 56 1 
85 1 115 1 206 4 0 1 170 1 169 1 2 1 177 1 178 1 33 2 8 3 122 1 36 1 182 1 183 1 37 1 11 1 12 1 13 1 187 1 125 1 188 1 41 2 221 1 128 1 17 1 70 1 103 1 159 1 72 1 132 1 195 1 134 1 225 1 110 1 228 1 135 1 77 1 139 1 231 1 141 1 232 1 55 1 56 1 
84 1 115 1 206 4 0 1 170 1 169 1 2 1 177 1 178 1 33 2 8 3 63 1 122 1 36 1 179 1 90 1 182 1 183 1 216 1 12 1 187 1 13 1 125 1 219 1 188 1 41 2 17 1 70 1 159 1 72 1 132 1 133 1 134 1 225 1 110 1 135 1 21 1 231 2 141 1 232 1 56 1 
169 1 170 1 23 1 213 1 4 1 30 1 6 1 33 2 120 1 122 1 34 1 91 1 96 1 186 1 39 1 42 1 67 1 127 1 155 1 71 1 72 1 161 1 199 1 231 1 56 1 
186 1 39 1 67 1 42 1 127 1 23 1 170 1 169 1 155 1 71 1 213 1 72 1 4 1 161 1 30 1 6 1 33 2 120 1 34 1 122 1 199 1 91 1 231 1 56 1 96 1 
186 1 39 1 67 1 42 1 127 1 23 1 170 1 169 1 155 1 71 1 213 1 72 1 4 1 161 1 30 1 6 1 33 2 120 1 34 1 122 1 199 1 91 1 231 1 56 1 96 1 
186 1 39 1 67 1 42 1 127 1 23 1 170 1 169 1 155 1 71 1 213 1 72 1 4 1 161 1 30 1 6 1 33 2 120 1 34 1 122 1 199 1 91 1 231 1 56 1 96 1 
186 1 39 1 33 2 67 1 23 1 170 1 169 1 34 1 122 1 231 1 72 1 56 1 96 1 
186 1 39 1 67 1 42 1 127 1 23 1 170 1 169 1 155 1 71 1 213 1 72 1 4 1 161 1 30 1 6 1 33 2 120 1 34 1 122 1 199 1 91 1 231 1 56 1 96 1 
33 1 87 1 131 1 
33 1 10 2 3 1 27 1 
152 1 33 1 49 1 131 1 
80 1 33 1 3 1 27 1 54 1 
131 1 168 1 
85 1 221 1 195 1 177 1 110 1 9 1 139 1 
178 1 41 1 36 1 182 1 12 1 159 1 
0 1 177 1 110 1 17 1 
178 1 22 1 41 1 36 1 182 1 12 1 159 1 
97 1 206 1 42 1 45 1 73 1 150 1 
30 1 42 1 
97 1 206 1 45 1 150 1 
97 1 57 1 42 2 45 1 30 1 111 1 73 1 
30 1 42 1 
95 1 
211 1 
95 1 
170 1 
170 1 
56 1 
122 1 16 1 146 1 72 1 
134 1 224 1 33 2 169 1 122 1 229 1 16 1 53 1 211 1 212 1 231 1 95 1 72 1 
169 1 16 1 146 1 211 1 212 1 72 1 224 1 134 1 33 2 122 1 229 1 53 1 95 1 231 1 
169 1 16 1 211 1 212 1 72 1 134 1 33 2 122 1 229 1 200 1 53 1 95 1 231 1 
169 2 16 2 211 2 212 2 72 2 224 1 134 2 33 4 226 1 122 2 229 2 53 2 95 2 231 2 
169 1 16 1 211 1 212 1 72 1 134 1 33 2 226 1 122 1 229 1 53 1 95 1 231 1 
82 1 169 1 16 1 211 1 212 1 72 1 134 1 33 2 122 1 229 1 53 1 95 1 231 1 
169 1 16 1 211 1 212 1 72 1 148 1 134 1 33 2 122 1 229 1 53 1 95 1 231 1 
117 1 
206 2 8 2 191 1 150 1 
206 2 8 2 150 1 19 1 
122 1 16 1 146 1 72 1 105 1 
134 1 82 1 33 2 169 1 122 1 229 1 16 1 146 1 53 1 211 1 212 1 231 1 95 1 72 1 
0 1 206 2 169 1 2 1 211 1 212 1 148 1 178 1 177 1 33 2 8 2 122 1 36 1 179 1 182 1 183 1 216 1 95 1 12 1 187 1 13 1 188 1 41 1 98 1 191 1 16 1 19 1 159 1 72 1 134 1 110 1 229 1 53 1 231 3 141 1 232 1 
97 1 206 2 40 1 190 2 118 1 169 1 69 1 211 1 106 1 72 1 134 1 149 1 197 1 33 2 111 1 227 1 35 1 122 1 137 1 52 1 93 1 231 1 95 1 218 1 
227 1 
116 1 169 1 118 1 172 1 177 1 122 1 183 2 64 1 14 1 188 1 190 2 128 1 69 1 72 1 134 1 195 1 197 1 137 1 141 1 205 1 206 3 85 1 86 1 25 1 211 1 147 1 149 1 33 3 35 2 90 1 92 1 93 2 95 1 97 2 40 1 221 1 106 1 107 1 48 1 50 3 227 1 52 1 166 1 231 1 
40 1 190 1 137 1 146 1 69 1 52 1 
0 1 116 1 169 1 118 1 177 1 178 1 122 1 179 1 183 2 182 3 12 3 13 1 187 1 14 1 188 1 190 2 69 1 17 1 72 1 134 1 197 1 137 1 141 1 205 1 206 3 22 1 211 1 149 1 33 2 35 2 36 3 216 1 93 2 95 1 97 2 40 1 41 4 98 1 159 3 106 1 107 1 110 1 227 1 52 1 166 1 231 3 
40 1 190 1 137 1 146 1 69 1 52 1 
206 2 169 1 172 1 26 1 211 1 33 2 122 1 35 1 150 1 93 2 95 1 97 2 40 1 190 1 69 1 72 1 134 1 136 1 74 1 166 1 231 1 
97 2 206 2 40 1 190 1 169 1 69 1 211 1 72 1 134 1 33 2 35 1 122 1 74 1 137 1 52 1 166 1 150 1 93 2 231 1 95 1 
205 1 206 1 0 1 22 1 169 1 211 1 178 1 177 1 33 2 35 1 122 1 36 1 179 1 182 1 183 1 93 1 216 1 95 1 12 1 187 1 13 1 97 1 188 1 40 1 41 2 190 1 98 1 17 1 69 1 159 1 72 1 107 1 134 1 110 1 227 1 137 1 52 1 166 1 231 3 141 1 
97 1 190 1 118 1 111 1 93 1 106 1 
107 1 150 1 
205 1 150 1 
206 2 169 1 118 1 211 1 149 1 33 2 122 1 35 1 93 1 95 1 97 1 40 1 190 2 69 1 72 1 106 1 134 1 197 1 227 1 137 1 52 1 231 1 

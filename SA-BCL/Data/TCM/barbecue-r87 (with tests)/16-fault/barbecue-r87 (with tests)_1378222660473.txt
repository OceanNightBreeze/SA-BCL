#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 225 10 44 159 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 156 76 23 33 155 24 224 87 10 44 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.IllegalArgumentException 156 76 23 33 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.IndexOutOfBoundsException 188 16 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 5 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8370 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | OPERATOR | 6349 | += -> &=
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V | OPERATOR | 11071 | < -> >
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 5473 | if (x) -> if (!x)
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String; | RETURN | 5890 | return null
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 24244 | stmt -> ;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 3330 | 1 -> 2
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V | OPERATOR | 6520 | % -> >>
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 5195 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 19114 | 2 -> 3
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z | CONDITION | 4347 | if (x) -> if (!x)
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 8061 | stmt -> ;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I | OPERATOR | 7553 | * -> -
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V | CONDITION | 11362 | if (x) -> if (!x)
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
32 1 230 1 103 1 173 1 196 1 89 1 
32 1 103 1 173 1 196 1 89 1 
171 1 57 1 167 2 
176 1 53 3 101 1 143 2 2 1 105 1 243 1 215 1 107 1 170 1 152 1 94 1 60 1 218 1 173 1 37 1 175 1 190 1 191 1 
176 1 53 3 101 1 143 1 2 1 243 1 215 1 88 1 170 2 6 1 218 1 173 1 37 1 175 1 190 1 191 1 
101 1 218 1 37 1 12 1 
53 2 101 1 143 1 2 2 243 1 108 1 218 1 37 1 175 1 220 1 191 1 
176 1 53 3 101 1 143 1 2 1 105 1 243 1 196 1 215 2 170 1 114 1 152 1 33 1 94 1 60 1 218 1 173 2 175 1 190 1 191 1 
176 1 53 3 101 1 143 1 2 1 105 1 243 1 196 1 215 2 170 1 152 1 33 1 94 1 60 1 218 1 173 2 175 1 190 1 191 1 
20 1 53 2 126 1 101 1 143 1 2 1 243 1 196 1 215 1 112 1 114 1 33 1 218 1 173 1 37 1 175 1 191 1 
20 1 53 2 101 1 143 1 2 1 243 1 196 1 215 1 181 1 112 1 114 1 33 1 218 1 173 1 37 1 175 1 191 1 
20 1 53 2 101 1 143 1 2 1 243 1 196 1 214 1 215 1 112 1 33 1 117 1 218 1 173 1 37 1 64 1 175 1 191 1 
20 1 53 2 101 1 143 1 2 1 243 1 196 1 214 1 215 1 112 1 114 1 33 1 117 1 218 1 173 1 37 1 64 1 175 1 191 1 
53 3 101 1 143 2 2 1 243 2 218 1 37 1 175 1 97 1 191 1 
53 3 101 1 2 1 243 2 198 2 183 1 218 1 37 1 175 1 237 1 
141 1 53 2 101 1 2 2 243 1 218 1 37 1 175 1 237 1 198 1 
53 2 101 1 2 1 243 1 198 1 90 1 218 1 37 1 175 1 237 1 
53 2 101 1 2 1 243 1 218 1 37 1 175 1 237 1 198 1 121 1 
176 1 53 3 101 1 82 1 2 1 243 1 247 1 215 1 198 1 170 4 113 1 218 1 173 1 37 1 203 1 175 1 237 1 205 1 
53 2 101 1 2 1 243 1 216 1 198 1 218 1 37 1 78 1 175 1 237 1 
53 2 101 1 2 2 243 3 198 1 218 1 37 1 175 2 97 1 237 1 
176 1 53 4 223 1 101 1 2 1 243 2 215 1 198 2 170 1 6 1 218 1 173 1 37 1 203 1 175 2 237 1 
73 3 21 1 41 1 
73 1 
139 1 9 1 128 1 44 1 10 1 
0 2 125 1 127 4 2 3 128 1 4 1 132 1 131 3 6 1 136 3 137 1 140 3 139 4 142 1 8 1 9 4 10 1 149 3 153 3 154 1 155 1 16 2 19 3 157 1 158 1 22 4 23 2 164 2 25 1 24 1 166 3 168 1 169 2 170 2 31 2 33 1 173 2 176 1 44 1 177 1 183 1 47 4 48 1 187 1 188 2 189 3 194 14 53 3 196 1 199 2 198 1 200 1 59 1 203 1 206 2 208 5 210 1 211 2 212 2 213 1 218 1 219 3 79 2 221 2 222 1 224 1 225 1 226 1 227 1 84 3 85 2 87 1 88 1 90 2 89 2 229 1 95 2 97 1 236 2 237 1 238 3 102 1 104 3 242 5 243 2 244 6 246 1 111 1 249 2 115 2 250 2 253 4 120 1 
0 2 194 4 53 3 125 1 127 4 2 3 128 1 196 1 4 1 200 1 131 3 132 1 198 1 199 2 6 1 59 1 137 1 203 1 206 2 140 3 139 4 208 5 210 1 211 2 142 1 8 1 212 2 9 4 10 1 213 1 149 3 154 1 153 3 218 1 155 1 16 2 79 2 219 3 19 3 221 2 222 1 157 1 224 1 225 1 226 1 22 4 23 2 164 2 227 1 166 3 25 1 84 3 24 1 85 2 87 1 168 1 88 1 169 2 89 2 90 2 31 2 170 2 229 1 33 1 173 2 236 2 97 1 237 1 176 1 238 3 102 1 104 3 239 1 242 5 244 6 243 2 246 1 177 1 249 2 183 1 115 2 47 4 250 2 253 4 188 2 189 3 120 1 
0 2 124 1 125 1 127 6 2 11 128 1 129 1 4 1 130 2 132 5 131 9 6 1 135 1 137 1 139 4 140 7 142 1 8 1 9 4 10 1 150 2 149 7 153 7 154 5 15 1 155 1 16 2 18 1 19 7 157 10 159 1 22 4 163 2 23 2 164 2 166 3 25 1 24 1 168 1 29 1 169 2 170 2 31 2 33 1 36 1 172 1 173 3 174 1 176 1 42 1 44 1 177 1 179 1 183 1 47 6 188 2 189 7 192 1 194 7 52 1 53 20 196 2 199 10 198 10 200 1 56 1 59 1 203 1 206 2 208 9 210 1 211 2 212 2 213 1 70 1 218 10 79 2 219 7 221 2 222 1 80 1 224 1 225 1 226 1 227 9 84 7 85 2 87 1 88 1 90 2 89 2 229 1 92 1 231 2 236 2 97 1 237 9 238 7 99 1 104 3 242 9 243 11 244 6 246 5 248 1 110 1 249 2 115 10 250 10 253 4 119 2 120 1 122 2 
0 2 194 4 53 3 125 1 127 4 2 3 128 1 196 1 4 1 200 1 131 3 132 1 198 1 199 2 6 1 59 1 137 1 203 1 206 2 208 5 140 3 139 4 211 2 142 1 212 2 9 4 10 1 213 1 149 3 154 1 153 3 15 1 218 1 155 1 16 2 79 2 219 3 19 3 221 2 222 1 157 1 224 1 225 1 226 1 22 4 23 2 164 2 227 1 166 3 25 1 84 3 24 1 85 2 87 1 168 1 88 1 169 2 89 2 90 2 31 2 170 2 229 1 33 1 173 2 236 2 38 1 97 1 237 1 176 1 238 3 104 3 242 5 244 6 243 2 246 1 44 1 177 1 249 2 183 1 115 2 47 4 250 2 253 4 188 2 189 3 120 1 
194 8 53 3 125 1 127 2 2 3 128 1 196 1 4 1 198 1 200 1 6 1 59 1 203 1 204 2 67 1 207 1 139 4 142 1 9 4 10 1 213 1 71 2 74 4 15 1 218 1 155 1 222 1 157 1 224 1 225 1 161 2 23 2 166 4 25 1 24 1 87 1 168 1 88 2 89 2 90 2 30 4 170 3 91 3 229 1 33 1 232 1 93 1 173 2 97 1 237 1 176 1 98 2 104 4 241 1 43 2 244 4 243 2 44 1 177 1 109 2 183 1 47 2 251 4 185 1 118 1 253 4 50 1 51 2 120 1 
0 2 194 4 53 4 125 1 127 4 2 3 128 1 196 1 4 1 130 2 131 4 199 2 198 1 200 1 6 1 59 1 203 1 206 2 140 2 208 4 139 4 210 1 211 2 142 1 8 1 212 2 9 4 10 1 213 1 149 2 150 2 153 2 218 1 15 1 155 1 16 2 79 2 219 2 19 2 221 2 222 1 157 1 224 1 225 1 22 4 163 2 23 2 164 2 227 1 166 3 84 2 25 1 24 1 85 2 87 1 168 1 88 1 169 2 89 2 90 2 170 2 31 2 229 1 33 1 231 2 173 2 236 2 174 1 97 1 237 1 176 1 238 2 104 3 242 4 244 6 243 2 44 1 177 1 183 1 115 2 47 4 250 2 253 4 188 2 119 2 189 2 120 1 122 2 
0 2 125 1 127 4 2 4 128 1 4 1 132 1 131 3 6 1 137 1 139 4 140 3 142 1 8 1 9 4 10 1 149 3 153 3 154 1 15 1 155 1 16 2 19 3 157 1 22 4 23 2 164 2 25 1 24 1 166 3 168 1 169 2 170 3 31 2 33 1 173 2 176 1 44 1 177 1 183 1 47 4 50 1 188 2 189 3 194 4 53 3 196 1 199 2 198 1 200 1 56 1 59 1 203 1 206 2 208 5 210 1 211 2 212 2 213 1 218 1 219 3 79 2 221 2 222 1 224 1 225 1 226 1 227 1 84 3 85 2 87 1 88 2 90 2 89 2 229 1 97 1 236 2 237 1 238 3 102 1 104 3 242 5 243 2 244 6 246 1 108 1 249 2 115 2 250 2 253 4 120 1 
0 2 194 4 53 4 125 1 127 4 2 5 128 1 196 1 4 1 200 1 131 3 132 1 198 2 199 3 6 1 59 1 203 1 206 2 140 3 139 4 208 5 210 1 211 2 142 1 8 1 212 2 9 4 10 1 213 1 149 3 154 1 153 3 15 1 218 1 155 1 16 2 79 2 219 3 19 3 221 2 222 1 157 1 224 1 223 1 225 1 22 4 23 2 164 2 227 1 166 3 24 1 25 1 84 3 85 2 87 1 168 1 88 1 169 2 89 2 90 2 31 2 170 2 229 1 33 1 173 2 236 2 97 1 237 1 176 1 238 3 102 1 104 3 242 5 244 6 243 4 246 1 44 1 177 1 108 1 249 2 183 1 115 3 47 4 250 3 253 4 50 1 188 2 189 3 120 1 
0 2 194 4 53 3 125 1 127 4 2 3 128 1 196 1 4 1 200 1 131 3 132 1 198 1 199 2 6 1 59 1 203 1 206 2 140 3 139 4 208 5 210 1 211 2 142 1 8 1 212 2 9 4 10 1 213 1 149 3 154 1 153 3 15 1 218 1 155 1 16 2 79 2 219 3 19 3 221 2 222 1 157 1 224 1 225 1 22 4 23 2 164 2 227 1 166 3 25 1 84 3 24 1 85 2 87 1 168 1 88 1 169 2 89 2 90 2 31 2 170 2 229 1 33 1 173 2 236 2 97 1 237 1 176 1 238 3 102 1 104 3 242 5 244 6 243 2 246 1 44 1 177 1 249 2 183 1 115 2 47 4 250 2 253 4 50 1 188 2 189 3 120 1 
139 4 222 1 225 1 25 1 44 1 128 1 9 4 10 1 213 1 183 1 15 1 120 1 
0 2 194 4 53 3 125 1 195 2 127 4 2 3 128 1 196 1 130 2 131 4 199 2 200 1 6 1 59 1 206 2 140 2 208 4 139 4 210 1 211 2 143 1 142 1 8 1 212 2 9 4 10 1 213 1 149 2 150 2 72 2 153 2 76 2 77 2 218 1 15 1 155 1 16 2 79 2 219 2 156 1 19 2 221 2 222 1 157 1 224 1 225 1 22 4 163 2 23 2 164 2 227 1 166 3 84 2 25 1 24 1 85 2 87 1 88 1 90 2 89 2 169 2 170 2 31 2 229 1 33 1 34 1 231 2 234 2 173 2 236 2 174 1 97 1 176 1 238 2 104 3 242 4 244 6 243 2 44 1 177 1 115 2 47 4 250 2 253 4 188 2 119 2 189 2 120 1 191 1 190 1 122 2 
145 1 
0 2 194 4 53 3 125 1 127 4 2 3 128 1 196 1 4 1 130 2 131 4 199 2 198 1 200 1 6 1 59 1 203 1 206 2 140 2 208 4 139 4 210 1 211 2 142 1 8 1 212 2 9 4 10 1 213 1 149 2 150 2 153 2 75 1 218 1 15 1 155 1 16 2 79 2 219 2 19 2 221 2 222 1 157 1 224 1 225 1 22 4 163 2 23 2 164 2 227 1 166 3 84 2 25 1 24 1 85 2 87 1 168 1 88 1 169 2 89 2 90 2 170 2 31 2 229 1 33 1 231 2 173 2 236 2 174 1 97 1 237 1 176 1 238 2 104 3 242 4 244 6 243 2 44 1 177 1 183 1 115 2 47 4 250 2 253 4 50 1 188 2 119 2 189 2 120 1 122 2 
194 1 201 1 48 1 
194 1 100 1 
151 1 194 1 166 1 244 1 173 1 196 1 
194 1 112 1 20 1 244 1 173 1 196 1 39 1 
20 1 194 1 244 1 166 1 196 1 112 1 35 1 233 1 117 1 96 1 173 1 39 1 
194 1 180 1 
194 1 180 1 
193 1 194 1 
194 1 180 1 
194 1 100 1 
194 1 100 1 
194 1 74 1 81 1 138 1 
194 1 61 1 30 1 
53 2 157 1 143 1 2 1 115 1 250 1 227 1 243 1 218 1 199 1 191 1 
157 1 53 3 143 2 2 1 227 1 243 1 199 2 115 2 250 2 218 1 62 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
157 1 53 3 143 2 2 1 227 1 243 1 199 2 115 2 250 2 218 1 62 1 191 1 
194 4 0 2 53 3 125 1 195 2 127 4 2 2 196 1 200 1 199 1 131 2 206 2 140 2 208 4 211 2 143 1 212 2 149 2 72 2 153 2 76 2 77 2 218 1 16 2 79 2 219 2 156 1 19 2 221 2 157 1 22 4 23 2 227 1 164 2 166 3 84 2 85 2 88 1 90 2 89 2 169 2 31 2 170 1 33 1 34 1 234 2 173 2 236 2 176 1 238 2 104 3 242 4 243 1 244 6 177 1 108 1 115 1 47 4 250 1 253 4 188 2 189 2 122 2 190 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 2 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 2 19 1 188 1 119 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 11 2 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 189 1 221 1 191 1 
157 1 53 2 143 1 2 1 227 1 243 1 86 1 199 1 115 1 250 1 218 1 62 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 11 2 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 56 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 2 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 119 1 189 1 221 1 191 1 
194 3 0 1 53 3 125 1 2 4 54 1 196 1 4 1 199 2 131 1 62 1 206 1 208 2 140 1 211 1 143 2 212 1 214 2 149 1 153 1 14 1 218 1 16 1 79 1 219 1 19 1 20 1 157 1 223 1 22 2 23 1 163 1 227 1 164 1 84 1 166 2 85 1 90 1 169 1 229 1 33 1 35 2 233 2 96 2 173 1 236 1 39 1 238 1 242 2 243 2 244 2 45 1 108 1 181 1 112 1 115 2 116 1 117 3 250 2 48 3 253 2 188 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 
194 2 0 1 53 3 195 1 127 2 2 1 200 1 199 1 131 1 206 1 140 1 208 2 211 1 143 1 212 1 149 1 72 1 153 1 76 1 77 1 218 1 16 1 219 1 79 1 19 1 221 1 157 1 22 2 23 1 227 1 164 1 84 1 85 1 88 1 90 1 89 1 169 1 31 1 170 1 34 1 234 1 173 1 236 1 176 1 238 1 104 3 242 2 243 1 244 3 177 1 115 1 47 2 250 1 253 2 188 1 189 1 122 1 190 1 191 1 
53 2 157 1 72 1 143 1 2 1 115 1 250 1 227 1 243 1 218 1 62 1 199 1 191 1 
194 2 0 1 53 1 195 1 127 2 130 1 131 2 200 1 203 1 206 1 208 2 140 1 211 1 212 1 150 1 149 1 72 1 153 1 76 1 77 1 16 1 219 1 79 1 19 1 221 1 22 2 23 1 163 1 164 1 84 1 85 1 88 1 169 1 89 1 90 1 31 1 170 1 34 1 231 1 234 1 173 1 236 1 176 1 238 1 104 3 242 2 244 3 177 1 183 1 47 2 253 2 119 1 188 1 189 1 122 1 
194 2 0 1 53 3 195 1 127 2 2 1 200 1 199 1 131 1 56 1 206 1 140 1 208 2 211 1 143 1 212 1 149 1 72 1 153 1 76 1 77 1 218 1 16 1 79 1 219 1 19 1 221 1 157 1 22 2 23 1 227 1 164 1 84 1 85 1 88 1 90 1 89 1 169 1 31 1 170 1 34 1 234 1 173 1 236 1 176 1 238 1 104 3 242 2 243 1 244 3 177 1 115 1 47 2 250 1 253 2 188 1 189 1 122 1 190 1 191 1 
194 2 0 1 53 3 195 1 127 2 2 1 198 1 199 1 200 1 131 1 56 1 203 1 206 1 140 1 208 2 211 1 212 1 149 1 72 1 153 1 76 1 77 1 218 1 16 1 79 1 219 1 19 1 221 1 157 1 22 2 23 1 227 1 164 1 84 1 85 1 88 1 90 1 89 1 169 1 31 1 170 1 34 1 234 1 173 1 236 1 237 1 176 1 238 1 104 3 242 2 243 1 244 3 177 1 183 1 115 1 47 2 250 1 253 2 188 1 189 1 122 1 
0 1 53 2 157 1 2 1 22 2 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 140 1 208 2 238 1 211 1 143 1 242 2 243 1 212 1 149 1 150 1 153 1 115 1 250 1 218 1 16 1 79 1 253 2 219 1 19 1 188 1 119 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 221 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 221 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 221 1 
0 1 53 2 157 1 2 1 22 2 163 1 227 1 164 1 84 1 130 1 199 1 131 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 2 19 1 188 1 189 1 191 1 221 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 191 1 221 1 
194 1 127 1 47 1 182 1 122 1 
194 1 31 1 127 1 47 1 182 1 
194 1 127 1 47 1 148 1 27 1 122 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 194 2 53 2 125 1 127 2 2 2 196 1 4 1 130 1 199 1 131 2 62 1 206 1 140 1 208 2 211 1 143 1 212 1 214 1 149 1 150 1 153 1 218 1 16 1 79 1 219 1 19 1 221 1 20 1 157 1 22 2 163 1 23 1 227 1 164 1 84 1 166 3 85 1 90 1 89 1 169 1 31 1 229 1 33 1 35 3 231 1 233 3 96 3 173 1 236 1 39 1 238 1 242 2 243 1 244 3 112 1 115 1 47 2 117 4 250 1 253 2 188 1 119 1 189 1 122 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 56 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 221 1 191 1 
0 1 53 2 157 1 2 1 22 1 163 1 227 1 164 1 84 1 130 1 199 1 131 2 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 1 19 1 188 1 119 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 163 1 227 1 164 1 84 1 130 1 199 1 131 2 231 1 62 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 212 1 243 1 180 1 150 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 219 1 253 3 19 1 188 1 119 1 189 1 191 1 
0 1 53 2 157 1 2 1 22 3 227 1 164 1 84 1 199 1 131 1 236 1 206 1 208 2 140 1 238 1 211 1 143 1 242 2 243 1 212 1 180 1 149 1 153 1 115 1 250 1 218 1 16 1 79 1 253 3 219 1 19 1 188 1 189 1 191 1 
20 1 194 4 53 2 157 1 126 1 125 1 2 2 23 1 166 2 26 1 85 1 196 1 4 1 169 1 90 1 133 1 170 1 229 1 33 1 35 2 233 2 94 1 60 1 235 1 96 2 173 1 63 1 40 1 143 1 105 1 244 2 243 1 214 1 109 1 112 1 152 1 117 3 218 1 48 3 186 1 191 1 
123 1 20 1 194 4 53 2 157 1 195 1 125 1 2 1 23 1 166 2 26 1 85 1 196 1 197 1 4 1 90 1 169 1 133 1 35 2 233 2 234 1 235 1 96 2 173 1 63 1 65 1 40 1 143 1 244 2 243 1 214 1 216 1 109 1 112 1 76 1 117 3 77 1 252 1 218 1 48 3 78 1 186 1 156 1 191 1 
194 1 157 1 53 2 127 1 2 1 227 1 84 1 3 1 131 1 132 1 199 1 208 1 140 1 238 1 143 1 242 1 243 1 246 1 180 1 149 1 182 1 249 1 154 1 153 1 115 1 47 1 250 1 218 1 219 1 19 1 189 1 191 1 
0 1 157 1 53 2 2 1 22 2 164 1 227 1 84 3 167 1 131 3 132 1 199 1 56 1 236 1 206 1 208 4 140 3 238 3 211 1 143 1 242 4 212 1 243 1 246 1 149 3 154 2 153 3 115 1 250 1 218 1 16 1 79 1 253 2 219 3 19 3 188 1 189 3 221 1 191 1 
140 1 208 1 53 2 157 1 238 1 143 1 2 1 227 1 242 1 243 1 84 1 246 1 199 1 132 1 131 1 149 1 153 1 154 1 115 1 250 1 218 1 219 1 19 1 189 1 191 1 
157 1 53 2 2 1 227 1 84 3 131 3 132 1 199 1 208 3 140 3 238 3 143 1 242 3 243 1 245 1 246 1 149 3 154 3 153 3 115 1 250 1 218 1 219 3 19 3 189 3 191 1 
157 1 53 2 2 1 227 1 84 1 131 1 132 1 199 1 208 1 140 1 238 1 143 1 242 1 243 1 246 1 149 1 154 1 153 1 115 1 250 1 218 1 219 1 19 1 189 1 121 1 191 1 
157 1 53 2 143 1 2 1 227 1 243 1 132 1 199 1 154 1 115 1 250 1 218 1 121 1 191 1 
217 1 53 1 28 1 69 1 
53 1 66 1 69 1 
53 1 83 2 107 1 178 1 
53 1 202 1 106 1 107 1 178 1 
58 1 69 1 
35 1 233 1 117 1 96 1 166 1 214 1 
35 1 233 1 117 1 96 1 166 1 214 1 39 1 
195 1 196 1 234 1 77 1 173 1 156 1 68 1 
125 1 173 1 196 1 4 1 
208 2 22 1 184 1 167 1 253 1 219 1 188 1 
208 1 219 1 
208 1 194 1 22 1 253 1 180 1 188 1 
208 1 219 1 
194 1 22 1 253 1 180 1 
237 1 
198 1 
198 1 
143 1 
191 1 
143 1 
157 1 53 2 1 1 7 1 160 1 162 1 2 1 243 1 109 1 55 1 198 1 218 1 17 1 237 1 121 1 
157 2 53 4 1 2 7 2 160 2 162 2 2 2 240 1 228 1 243 2 109 2 55 2 198 2 218 2 17 2 237 2 
53 3 157 1 195 1 1 1 160 1 2 2 162 1 23 1 228 1 55 1 88 1 90 1 200 1 198 1 170 1 34 1 234 1 134 1 173 1 203 1 237 1 176 1 209 1 7 1 104 1 146 1 244 1 243 1 147 1 177 1 109 1 108 1 76 1 46 1 77 1 218 1 17 1 49 1 253 1 
157 1 162 1 218 1 5 1 12 1 
194 1 20 1 53 2 157 1 125 1 1 1 160 1 2 3 162 1 23 1 166 2 196 1 4 1 55 1 90 1 198 1 30 1 229 1 33 1 35 2 233 2 134 1 96 2 173 1 237 1 39 1 209 1 7 1 146 1 244 1 243 1 214 1 109 1 108 1 112 1 74 1 46 1 117 3 218 1 17 1 49 1 253 1 
157 1 53 2 1 1 7 1 160 1 162 1 2 1 228 1 243 1 109 1 55 1 198 1 218 1 17 1 237 1 
194 1 209 1 157 1 53 2 1 1 7 1 160 1 162 1 2 1 243 1 109 1 55 1 180 1 198 1 30 1 134 2 218 1 17 1 253 2 237 1 
49 1 
194 1 146 1 48 1 180 1 
194 1 46 1 48 1 180 1 
194 3 209 1 157 1 53 2 1 1 7 1 160 1 162 1 2 1 243 1 109 1 55 1 180 1 198 1 30 2 134 1 218 1 17 1 253 1 237 1 
157 1 53 2 1 1 7 1 160 1 162 1 2 1 240 1 243 1 109 1 55 1 198 1 218 1 17 1 237 1 
157 2 53 4 1 2 7 2 160 2 162 2 2 2 240 1 243 2 109 2 55 2 5 1 198 2 218 2 17 2 237 2 
157 1 53 2 1 1 7 1 160 1 162 1 2 1 243 1 109 1 55 1 5 1 198 1 12 1 218 1 17 1 237 1 
194 1 20 1 53 2 157 1 125 1 2 3 161 1 23 1 166 2 196 1 4 1 90 1 198 1 30 1 91 1 229 1 33 1 35 2 233 2 93 1 96 2 173 1 237 1 39 1 204 1 67 1 98 1 241 1 43 1 244 1 243 1 214 1 109 1 108 1 112 1 74 1 117 3 251 1 218 1 185 1 253 1 
194 2 157 1 53 2 81 1 2 1 241 1 243 1 109 1 180 1 198 1 30 1 91 1 93 1 251 2 185 1 218 1 253 2 237 1 204 1 67 1 
194 2 53 2 157 1 127 1 2 1 167 1 198 1 30 1 91 2 171 1 93 1 61 1 237 1 67 1 241 1 243 1 43 1 109 1 71 1 47 1 251 1 218 1 185 1 253 1 51 1 
43 1 
194 3 53 3 195 1 127 1 2 1 200 1 198 1 203 1 67 1 204 1 71 1 74 2 76 1 77 1 218 1 157 1 161 1 23 1 165 1 88 1 90 1 89 1 30 2 170 1 91 2 34 1 93 1 234 1 173 1 237 1 176 1 98 1 104 4 241 1 244 2 243 1 43 1 177 1 109 1 47 1 251 2 185 1 253 2 51 1 
91 1 93 1 241 1 185 1 67 1 12 1 
194 3 20 1 53 2 157 1 125 1 127 1 2 3 161 1 23 1 166 4 196 1 4 1 89 1 90 1 198 1 30 2 91 2 229 1 33 1 35 4 233 4 93 1 96 4 173 1 237 1 39 1 204 1 67 1 98 1 241 1 43 1 244 2 243 1 214 1 109 1 108 1 71 1 112 1 74 2 47 1 117 5 251 2 218 1 185 1 253 2 51 1 
91 1 93 1 241 1 185 1 67 1 12 1 
194 2 53 2 157 1 2 1 81 1 165 1 198 1 30 1 91 1 93 1 237 1 67 1 204 1 144 1 243 1 109 1 180 1 13 1 251 2 218 1 253 2 
161 1 180 1 
98 1 180 1 
194 2 53 2 157 1 127 1 2 1 198 1 30 1 91 2 93 1 237 1 67 1 241 1 243 1 43 1 109 1 71 1 47 1 251 1 218 1 185 1 253 1 51 1 
91 1 251 1 167 1 253 1 51 1 71 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 72 15 244 97 135 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 63 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 58 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 72 15 244 97 48 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V ERROR java.lang.NullPointerException 55 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 142 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | OPERATOR | 12215 | % -> +
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8235 | if (x) -> if (!x)
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I | OPERATOR | 6744 | * -> +
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4214 | = null
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7563 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | RETURN | 9001 | return null
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | OPERATOR | 6349 | += -> /=
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 6372 | return null
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 14855 | stmt -> ;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String; | RETURN | 3382 | return null
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 22307 | 1 -> 2
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | CONSTANT | 7786 | 3 -> 2
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I | OPERATOR | 3989 | += -> <<=
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
18 1 192 1 148 1 50 1 228 1 161 1 
18 1 192 1 50 1 228 1 161 1 
62 2 52 1 207 1 
46 1 187 1 36 1 221 1 222 2 241 2 101 1 178 1 117 1 92 1 182 1 
163 1 4 1 32 1 46 1 216 1 187 1 189 1 192 1 221 1 222 3 241 1 74 1 101 1 103 4 157 1 178 1 92 1 182 1 
43 1 46 1 20 1 187 1 221 1 222 2 241 1 101 1 178 1 92 1 182 1 
46 1 216 1 68 1 109 1 187 1 189 1 209 1 9 1 192 1 221 1 222 3 241 1 74 1 101 1 103 1 178 1 92 1 182 1 
46 1 216 1 187 1 218 1 189 1 192 1 221 1 222 3 241 1 74 1 101 1 103 2 178 1 29 1 92 1 182 1 
146 1 46 2 187 1 221 1 222 2 241 1 101 2 178 1 92 1 182 3 
46 2 216 1 187 1 189 1 192 1 221 1 222 4 241 2 73 1 74 1 101 1 103 1 178 1 29 1 92 1 182 2 
1 1 221 1 187 1 92 1 
46 1 200 1 23 1 187 1 221 1 222 2 241 1 101 2 178 1 92 1 182 1 
162 1 197 1 46 1 216 1 68 1 109 1 187 1 189 1 209 1 9 1 192 2 221 1 222 3 241 1 74 2 101 1 103 1 178 1 161 1 182 1 
162 1 46 1 216 1 68 1 109 1 187 1 189 1 209 1 9 1 192 2 221 1 222 3 241 1 74 2 101 1 103 1 178 1 161 1 182 1 
162 1 197 1 46 1 21 1 187 1 152 1 7 1 192 1 221 1 222 2 241 1 74 1 101 1 178 1 161 1 92 1 182 1 
162 1 197 1 46 1 83 1 187 1 152 1 7 1 192 1 221 1 222 2 241 1 74 1 101 1 178 1 161 1 92 1 182 1 
162 1 46 1 187 1 112 1 152 1 7 1 192 1 221 1 222 2 241 1 74 1 101 1 212 1 178 1 13 1 161 1 92 1 182 1 
162 1 197 1 46 1 187 1 112 1 152 1 7 1 192 1 221 1 222 2 241 1 74 1 101 1 212 1 178 1 13 1 161 1 92 1 182 1 
146 1 46 1 187 1 221 1 222 3 241 2 101 1 178 1 92 1 182 2 
108 1 46 1 47 2 121 1 187 1 221 1 222 3 101 1 92 1 182 2 
222 2 221 1 101 2 46 1 47 1 121 1 214 1 187 1 182 1 92 1 
77 1 46 1 47 1 121 1 187 1 221 1 222 2 101 1 92 1 182 1 
126 1 177 3 186 1 
177 1 
89 1 48 1 97 1 116 1 172 1 
121 1 70 1 72 1 188 1 125 1 192 2 76 1 132 2 133 2 15 1 77 2 201 2 203 1 140 2 141 2 87 1 26 2 89 4 145 1 29 1 93 2 146 1 30 1 216 1 150 1 97 1 219 2 218 1 220 2 37 1 153 1 221 1 222 3 40 1 102 1 101 3 103 2 42 1 227 4 105 1 106 1 161 1 162 1 229 1 44 1 108 1 232 2 47 1 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 61 2 116 4 182 2 
121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 77 2 135 1 201 2 203 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 3 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 47 1 232 2 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
63 1 121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 3 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 232 2 47 1 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
121 1 70 1 72 1 188 1 192 2 73 1 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 23 1 140 2 141 2 87 1 26 3 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 219 2 218 1 220 2 37 1 153 1 222 4 221 1 40 1 102 1 101 5 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 232 2 47 2 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 3 116 4 61 2 
121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 3 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 47 1 232 2 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
17 1 58 1 108 1 89 4 102 1 48 1 203 1 70 1 97 1 168 1 116 4 172 1 
17 1 108 1 184 1 48 1 203 1 97 1 70 1 168 1 172 1 58 1 89 4 102 1 116 4 
17 1 58 1 108 1 89 4 80 1 102 1 48 1 203 1 130 1 70 1 97 1 168 1 116 4 172 1 
121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 3 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 47 1 232 2 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 23 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 4 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 232 2 47 1 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
215 1 
0 1 185 2 70 1 72 1 188 1 189 1 192 2 76 1 129 1 131 1 132 2 133 2 15 1 17 1 77 2 199 1 201 2 203 1 140 2 206 1 141 2 87 1 26 2 89 4 91 1 29 1 93 2 146 1 30 1 216 1 150 1 97 1 98 2 218 1 219 2 220 2 37 1 39 2 153 1 222 3 221 1 40 1 102 1 101 3 103 2 225 1 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 232 2 48 1 167 2 51 2 168 1 171 1 57 1 172 1 58 1 238 2 241 1 242 1 178 1 179 1 244 1 180 1 245 2 182 2 116 4 61 2 
121 1 70 1 72 1 188 1 192 2 76 1 132 2 133 2 15 1 17 1 77 2 201 2 203 1 140 2 141 2 87 1 26 2 89 4 29 1 93 2 146 1 30 1 216 1 150 1 97 1 218 1 219 2 220 2 37 1 153 1 222 3 221 1 40 1 102 1 101 3 103 2 42 1 227 2 105 1 106 1 161 1 162 1 229 1 44 1 108 1 47 1 232 2 48 1 51 2 234 1 168 1 57 1 172 1 58 1 238 2 244 1 180 1 182 2 116 4 61 2 
104 1 158 1 227 1 
71 1 227 1 
79 1 120 1 111 1 152 1 220 1 7 1 192 1 128 1 227 1 13 1 161 1 61 1 
7 1 192 1 111 1 227 1 161 1 152 1 61 1 
71 1 227 1 
192 1 114 1 227 1 220 1 161 1 61 1 
33 1 227 1 
35 1 227 1 
71 1 227 1 
35 1 227 1 
35 1 227 1 
223 1 113 1 232 1 227 1 
141 1 227 1 99 1 
147 1 47 1 121 1 137 1 69 1 55 1 26 1 211 1 221 1 222 2 101 1 159 1 227 1 106 1 132 1 182 1 
173 1 
1 1 26 1 147 1 222 2 221 1 211 1 101 1 47 1 137 1 121 1 69 1 106 1 182 1 
222 2 221 1 195 1 241 1 101 1 156 1 233 1 178 1 106 1 170 1 182 1 
118 1 183 1 2 1 67 2 217 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 194 2 195 1 101 1 224 1 156 1 196 1 226 1 227 8 12 1 106 1 132 3 107 1 45 1 19 1 230 1 81 1 165 1 233 1 139 3 205 1 169 3 53 1 54 1 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 134 2 45 1 19 1 81 1 165 1 233 1 138 1 205 1 53 1 54 1 169 3 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
233 1 96 1 170 1 193 1 221 1 222 2 241 1 195 1 101 1 156 1 178 1 106 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 134 2 45 1 19 1 81 1 165 1 233 1 138 1 205 1 53 1 54 1 169 3 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 49 1 205 1 53 1 54 1 169 3 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 71 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 49 1 205 1 53 1 54 1 169 3 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 49 1 205 1 53 1 54 1 169 3 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 122 2 71 1 123 1 191 2 10 1 195 1 12 1 132 3 19 1 81 1 138 1 205 1 86 1 213 1 33 1 38 1 221 1 222 2 224 1 101 1 156 1 226 1 106 1 107 1 45 1 233 1 165 1 49 1 169 3 54 1 53 1 170 1 56 1 241 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 122 2 123 1 124 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 45 1 19 1 81 1 165 1 233 1 49 1 205 1 169 2 53 1 54 1 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 45 1 19 1 81 1 165 1 233 1 49 1 205 1 53 1 54 1 169 2 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 120 2 122 2 123 1 188 1 8 1 7 1 191 1 10 1 192 1 195 2 73 1 128 2 13 3 12 1 132 2 16 1 77 1 79 2 19 1 81 1 83 1 205 1 23 1 87 1 144 1 212 2 213 1 93 1 96 1 152 1 220 2 38 1 221 1 222 3 101 4 224 1 156 2 155 1 158 3 42 1 226 1 227 3 106 1 161 1 107 1 162 1 165 1 233 1 111 1 53 1 54 1 169 2 56 1 170 2 175 1 239 1 241 2 178 1 181 1 182 2 61 2 
118 1 67 2 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
233 1 96 1 170 2 221 1 222 3 241 2 195 2 101 1 156 2 178 1 106 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 49 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
233 1 96 1 170 2 221 1 222 3 241 2 195 2 101 1 156 2 178 1 106 1 182 1 
118 2 0 1 183 2 2 2 67 4 185 2 122 4 123 2 188 1 189 1 191 4 10 2 192 2 195 1 129 1 131 1 12 2 14 4 132 4 77 2 19 2 199 1 81 2 138 2 23 1 205 2 206 1 208 4 86 2 144 2 213 2 91 1 93 2 216 1 98 2 218 1 219 3 220 3 37 1 38 2 39 2 153 1 221 1 222 3 224 2 101 2 103 1 156 1 155 2 225 1 42 1 226 2 227 4 228 2 106 1 161 1 107 2 162 1 45 2 164 2 165 2 233 1 49 2 53 2 54 2 169 4 170 1 56 2 171 1 241 1 242 1 243 2 60 2 178 1 179 1 181 2 245 2 182 1 61 6 
118 1 67 2 33 1 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 138 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 33 1 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 185 1 122 2 123 1 189 1 191 2 10 1 192 1 195 1 12 1 14 2 132 2 77 1 19 1 81 1 138 1 205 1 208 2 86 1 144 1 213 1 93 1 216 1 98 1 218 1 219 3 37 1 38 1 39 1 153 1 221 1 222 3 224 1 101 1 103 1 156 1 155 1 226 1 227 2 228 1 106 1 107 1 45 1 164 1 165 1 233 1 49 1 53 1 54 1 169 2 170 1 56 1 241 1 242 1 243 1 60 1 178 1 181 1 245 1 182 1 61 3 
164 1 233 1 96 1 170 1 221 1 222 2 241 1 195 1 101 1 156 1 178 1 106 1 182 1 
118 1 67 2 185 1 122 2 123 1 191 1 10 1 192 1 12 1 14 2 132 2 77 1 19 1 81 1 138 1 205 1 208 2 144 1 213 1 93 1 216 1 219 3 218 1 98 1 37 1 38 1 39 1 153 1 222 1 224 1 155 1 103 1 228 1 227 2 226 1 107 1 108 1 164 1 165 1 234 1 53 1 54 1 169 2 56 1 242 1 243 1 60 1 181 1 61 3 245 1 
118 1 183 1 2 1 67 2 185 1 122 2 123 1 124 1 189 1 191 1 10 1 192 1 195 1 12 1 14 2 132 2 77 1 19 1 81 1 138 1 205 1 208 2 86 1 144 1 213 1 93 1 216 1 98 1 218 1 219 3 37 1 38 1 39 1 153 1 221 1 222 3 101 1 224 1 103 1 156 1 155 1 226 1 227 2 228 1 106 1 107 1 45 1 164 1 165 1 233 1 53 1 54 1 169 2 170 1 56 1 241 1 242 1 243 1 60 1 178 1 181 1 245 1 182 1 61 3 
118 1 183 1 2 1 67 2 185 1 121 1 122 2 123 1 124 1 191 1 10 1 192 1 195 1 12 1 14 2 132 2 77 1 19 1 81 1 138 1 205 1 208 2 86 1 144 1 213 1 93 1 216 1 98 1 218 1 219 3 37 1 38 1 39 1 153 1 221 1 222 3 101 1 224 1 103 1 156 1 155 1 226 1 227 2 228 1 106 1 107 1 108 1 45 1 164 1 47 1 165 1 233 1 234 1 53 1 54 1 169 2 170 1 56 1 242 1 243 1 60 1 181 1 245 1 182 1 61 3 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 224 1 101 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 205 1 54 1 169 3 53 1 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 224 1 101 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 205 1 54 1 169 3 53 1 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 33 1 71 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 224 1 101 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 49 1 138 1 205 1 169 3 53 1 54 1 170 1 56 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 138 1 205 1 53 1 54 1 169 2 56 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 224 1 101 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 205 1 54 1 169 3 53 1 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
41 1 227 1 60 1 14 1 208 1 
41 1 243 1 227 1 14 1 208 1 
240 1 166 1 227 1 60 1 14 1 208 1 
118 1 67 2 33 1 96 1 71 1 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 138 1 49 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 120 3 122 2 123 1 188 1 7 1 191 1 10 1 192 1 195 1 128 3 13 4 12 1 14 2 132 2 77 1 79 3 19 1 81 1 138 1 205 1 208 2 87 1 144 1 212 1 213 1 93 1 96 1 152 1 220 3 38 1 221 1 222 2 101 2 224 1 156 1 155 1 42 1 226 1 227 2 228 1 106 1 161 1 107 1 162 1 165 1 233 1 111 1 53 1 54 1 169 2 170 1 56 1 241 1 243 1 60 1 178 1 181 1 182 1 61 3 
118 1 183 1 2 1 67 2 71 1 122 2 123 1 124 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 45 1 19 1 81 1 165 1 233 1 138 1 205 1 169 3 53 1 54 1 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 96 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 2 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 67 2 33 1 96 1 71 1 122 2 123 1 38 1 191 1 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 3 107 1 19 1 81 1 165 1 233 1 205 1 53 1 54 1 169 3 170 1 56 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 2 1 67 2 122 2 123 1 38 1 191 2 10 1 222 2 221 1 195 1 101 1 224 1 156 1 226 1 12 1 106 1 132 2 107 1 45 1 19 1 81 1 165 1 233 1 49 1 205 1 53 1 54 1 169 2 56 1 170 1 86 1 241 1 213 1 178 1 181 1 182 1 
93 1 65 1 120 2 34 1 68 1 220 2 152 1 188 1 7 1 9 1 222 2 221 1 192 1 101 2 103 1 128 2 155 1 158 3 42 1 13 3 227 4 106 1 161 1 162 1 77 1 79 2 21 1 109 1 85 1 236 1 209 1 87 1 237 1 26 1 144 1 241 1 28 1 212 1 178 1 61 2 182 1 
93 1 64 1 65 1 120 2 34 1 185 1 98 1 220 2 152 1 188 1 7 1 39 1 222 2 221 1 192 1 101 1 75 1 128 2 155 1 158 3 131 1 42 1 13 3 227 4 106 1 161 1 43 1 77 1 79 2 20 1 202 1 204 1 85 1 236 1 237 1 26 1 241 1 144 1 28 1 212 1 178 1 245 1 61 2 182 1 
95 1 67 3 5 3 122 3 123 3 191 3 221 1 222 2 195 1 101 1 224 3 156 1 11 1 226 3 106 1 107 3 81 3 233 1 205 3 84 1 170 1 241 1 213 3 178 1 181 3 182 1 
95 1 67 1 5 1 122 1 123 1 191 1 221 1 222 2 195 1 101 1 224 1 156 1 226 1 106 1 107 1 81 1 233 1 205 1 84 1 170 1 241 1 213 1 178 1 181 1 117 1 182 1 
95 1 233 1 5 1 170 1 221 1 222 2 241 1 195 1 101 1 156 1 178 1 106 1 117 1 182 1 
95 1 67 1 5 1 122 1 123 1 191 1 221 1 222 2 195 1 101 1 224 1 156 1 226 1 106 1 107 1 81 1 233 1 205 1 84 1 170 1 241 1 213 1 178 1 181 1 182 1 
118 1 183 1 95 1 2 1 67 3 5 1 122 3 124 1 123 2 38 1 191 3 10 1 221 1 222 2 195 1 101 1 224 2 156 1 12 1 226 2 106 1 132 2 107 2 45 1 19 1 81 2 165 1 233 1 49 1 205 2 84 1 169 2 54 1 53 1 56 1 170 1 86 1 241 1 213 2 178 1 181 2 182 1 
95 1 31 1 67 1 5 1 71 1 122 1 123 1 191 1 221 1 222 2 195 1 41 1 101 1 224 1 156 1 227 1 226 1 106 1 14 1 107 1 81 1 233 1 205 1 84 1 170 1 208 1 176 1 241 1 213 1 178 1 181 1 182 1 
88 1 78 1 222 1 136 1 36 1 
94 1 222 1 151 1 
66 2 78 1 222 1 36 1 
198 1 222 1 110 1 151 1 
154 1 151 1 
79 1 120 1 128 1 212 1 13 1 220 1 
192 1 42 1 161 1 188 1 
185 1 98 1 25 1 39 1 192 1 131 1 161 1 
79 1 120 1 128 1 212 1 111 1 13 1 220 1 
165 1 71 1 122 1 227 1 132 1 169 1 
81 1 122 1 
71 1 227 1 132 1 169 1 
62 1 81 1 231 1 165 1 122 2 132 1 169 1 
81 1 122 1 
47 1 
121 1 
47 1 
241 1 
241 1 
178 1 
66 1 119 1 149 1 22 1 71 1 141 1 190 1 100 1 26 1 221 1 222 2 90 1 143 1 27 2 101 1 227 1 106 1 132 2 115 1 182 1 
82 1 
66 1 119 1 149 1 22 1 190 1 100 1 26 1 221 1 222 2 90 1 143 1 101 1 106 1 117 1 182 1 
66 2 119 2 149 2 22 2 190 2 210 1 100 2 26 2 221 2 222 4 90 2 143 2 101 2 106 2 160 1 182 2 
1 1 66 1 119 1 149 1 22 1 190 1 100 1 26 1 221 1 222 2 142 1 90 1 143 1 101 1 106 1 182 1 
66 1 119 1 149 1 22 1 71 1 141 2 190 1 100 1 26 1 221 1 222 2 90 1 143 1 27 1 101 1 227 3 106 1 132 1 115 1 182 1 
66 1 119 1 149 1 22 1 190 1 100 1 26 1 221 1 222 2 90 1 143 1 101 1 106 1 160 1 182 1 
66 2 119 2 149 2 22 2 190 2 100 2 26 2 221 2 222 4 142 1 90 2 143 2 101 2 106 2 160 1 182 2 
66 1 119 1 149 1 22 1 190 1 210 1 100 1 26 1 221 1 222 2 90 1 143 1 101 1 106 1 182 1 
3 1 158 2 71 1 227 2 
127 1 158 2 71 1 227 2 
93 1 66 1 3 1 119 1 149 1 216 1 185 1 98 1 219 2 218 1 37 1 189 1 190 1 100 1 39 1 153 1 127 1 222 3 221 1 192 1 101 2 155 1 103 1 158 2 227 2 106 1 132 1 77 1 82 1 22 1 23 1 235 1 210 1 26 1 144 1 143 1 90 1 27 1 242 1 115 1 245 1 61 2 182 1 
1 1 221 1 142 1 149 1 106 1 
93 1 66 1 3 1 119 1 120 3 149 1 220 3 152 1 188 1 190 1 7 1 100 1 127 1 222 2 221 1 192 1 101 3 128 3 155 1 158 2 42 1 13 4 227 3 106 1 132 1 161 1 162 1 77 1 79 3 232 1 82 1 22 1 111 1 23 1 141 1 87 1 26 1 144 1 143 1 90 1 27 1 212 1 115 1 61 2 182 1 
229 1 66 1 201 2 71 1 57 1 141 1 100 1 26 1 221 1 222 2 40 1 223 1 101 1 76 1 227 2 105 1 106 1 132 2 133 1 182 1 
1 1 229 1 40 1 76 1 105 1 57 1 
66 1 71 1 100 1 222 2 221 1 101 1 223 1 76 1 105 1 227 2 106 1 133 1 132 2 201 2 167 1 24 1 57 1 141 1 26 1 59 1 182 1 
62 1 66 1 99 1 6 1 100 1 222 2 221 1 40 1 101 1 76 1 105 1 227 2 106 1 132 1 14 1 229 1 201 1 51 1 52 1 57 2 208 1 141 1 174 1 26 1 182 1 
51 1 
93 1 66 1 216 1 185 1 98 1 219 4 218 1 6 1 37 1 189 1 100 1 39 1 153 1 222 3 221 1 192 1 40 1 101 2 76 1 103 1 227 3 228 1 105 1 106 1 14 1 132 2 133 1 229 1 77 1 201 2 232 2 23 1 167 1 51 1 140 1 208 1 57 2 141 2 174 1 26 1 238 1 242 1 245 1 182 1 61 2 
1 1 229 1 40 1 76 1 105 1 57 1 
66 1 120 4 6 1 188 1 7 1 192 1 76 1 128 4 13 5 133 1 132 2 14 1 77 1 79 4 201 2 140 1 23 1 208 1 141 2 87 1 26 1 212 1 93 1 152 1 220 4 100 1 221 1 222 2 40 1 101 3 42 1 105 1 228 1 227 3 106 1 161 1 162 1 229 1 232 2 51 1 111 1 57 2 174 1 238 1 182 1 61 2 
93 1 66 1 120 2 220 2 152 1 188 1 7 1 100 1 222 2 221 1 192 1 40 1 101 3 128 2 76 1 42 1 227 1 13 3 105 1 106 1 132 1 133 1 161 1 162 1 77 1 229 1 79 2 201 1 232 1 111 1 51 1 23 1 140 1 57 1 141 1 87 1 26 1 238 1 212 1 61 1 182 1 
62 1 174 1 201 1 132 1 6 1 57 1 
238 1 71 1 
140 1 71 1 
229 1 66 1 201 1 51 1 6 1 208 1 57 2 141 1 174 1 100 1 26 1 221 1 222 2 40 1 101 1 76 1 227 2 105 1 106 1 14 1 132 1 182 1 

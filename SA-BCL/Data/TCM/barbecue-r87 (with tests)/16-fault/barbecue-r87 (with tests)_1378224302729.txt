#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 146 
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 146 
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR javax.servlet.ServletException 191 170 147 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 191 170 147 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 30 187 69 158 135 184 157 67 170 147 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 170 147 56 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V ERROR java.lang.NullPointerException 30 187 69 158 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 0 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 84 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V ERROR java.lang.NullPointerException 175 87 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module; | RETURN | 3094 | return null
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | OPERATOR | 6349 | += -> &=
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I | OPERATOR | 4015 | * -> %
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout; | RETURN | 275 | return null
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer; | ASSIGN | 6283 | = null
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | OPERATOR | 12066 | * -> <<
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | CONSTANT | 4669 | 2 -> 3
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V | CONDITION | 5465 | if (x) -> if (!x)
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z | ASSIGN | 8602 | = null
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8714 | if (x) -> if (!x)
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 24570 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color; | RETURN | 6680 | return null
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 9019 | return null
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V | OPERATOR | 7352 | < -> <=
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 13 1 107 1 59 1 28 1 
215 2 41 1 152 1 
118 1 13 1 114 1 107 1 59 1 28 1 
163 2 164 2 58 1 203 1 224 1 228 1 239 1 124 1 98 1 126 1 90 1 
176 4 163 1 164 3 107 1 58 1 29 1 197 1 60 1 93 1 5 1 203 1 224 1 228 1 98 1 126 1 90 1 242 1 73 1 
163 1 164 2 106 1 58 1 138 1 203 1 224 1 228 1 98 1 126 1 90 1 
224 1 228 1 104 1 90 1 
203 1 224 1 132 1 163 1 228 1 164 2 58 1 126 2 98 1 90 1 83 1 
176 1 162 1 119 1 163 1 164 3 107 2 58 1 28 1 29 2 203 1 223 1 224 1 228 1 98 1 126 1 144 1 71 1 242 1 73 1 158 1 
176 1 119 1 163 1 164 3 107 2 58 1 28 1 29 2 203 1 223 1 224 1 228 1 98 1 126 1 144 1 71 1 242 1 73 1 158 1 
162 1 163 1 178 1 164 2 107 1 58 1 82 1 29 1 28 1 201 1 203 1 224 1 228 1 98 1 126 1 90 1 158 1 
162 1 163 1 178 1 164 2 107 1 58 1 82 1 29 1 28 1 203 1 224 1 228 1 156 1 98 1 126 1 90 1 158 1 
78 1 163 1 178 1 164 2 107 1 58 1 82 1 29 1 28 1 203 1 224 1 228 1 98 1 126 1 211 1 90 1 146 1 158 1 
78 1 162 1 163 1 178 1 164 2 107 1 58 1 82 1 29 1 28 1 203 1 224 1 228 1 98 1 126 1 211 1 90 1 146 1 158 1 
203 2 186 1 224 1 163 2 228 1 164 3 58 1 126 1 98 1 90 1 
164 3 180 1 137 1 203 2 224 1 228 1 86 2 98 1 126 1 90 1 
203 1 224 1 86 1 228 1 164 2 194 1 126 2 180 1 98 1 90 1 
94 1 203 1 224 1 86 1 228 1 164 2 126 1 180 1 98 1 90 1 
203 3 186 1 224 1 86 1 228 1 164 2 126 2 180 1 98 2 90 1 
176 1 164 4 179 1 107 1 180 1 29 1 27 1 203 2 224 1 228 1 86 2 98 2 126 1 90 1 242 1 127 1 
176 1 119 1 164 3 107 1 180 1 29 1 203 1 223 1 224 1 228 1 86 1 98 1 126 1 144 1 71 1 242 1 90 1 127 1 
176 2 164 3 107 1 180 1 27 1 29 1 203 1 224 1 155 1 228 1 86 1 98 1 126 1 90 1 242 1 127 1 
85 1 97 3 62 1 
97 1 
191 1 218 3 182 1 3 3 185 1 32 1 137 1 95 1 168 1 170 1 240 1 70 1 72 1 147 1 
191 1 218 3 182 1 3 3 185 1 32 1 137 1 95 1 168 1 170 1 240 1 70 1 72 1 147 1 
118 2 121 1 2 2 3 3 122 2 8 1 11 3 125 4 126 2 127 1 129 4 14 2 15 4 135 1 134 1 137 1 140 1 145 3 21 1 147 1 148 2 26 2 27 1 28 1 32 1 31 4 33 1 35 6 155 1 157 1 158 1 160 14 161 1 43 2 44 2 164 4 165 2 166 2 168 1 169 2 170 1 50 2 171 2 52 2 174 2 173 2 176 2 54 2 57 1 180 1 182 1 184 1 185 1 64 2 66 2 67 1 69 2 188 1 70 1 72 1 191 1 192 1 76 2 79 1 196 2 199 1 200 1 203 1 204 2 206 1 86 1 207 2 208 2 209 1 89 2 218 3 219 4 94 2 95 1 227 1 226 2 96 1 228 1 101 2 105 3 107 2 233 1 234 2 110 4 111 4 240 1 242 1 
118 2 3 3 122 3 8 1 11 3 125 4 126 2 127 1 129 4 15 4 133 1 135 1 137 1 140 1 142 1 21 1 147 1 148 2 26 2 27 1 28 1 31 5 32 1 35 6 155 2 157 1 158 1 161 1 160 4 164 3 165 2 166 2 168 1 169 2 170 1 50 2 171 3 52 3 174 2 176 3 54 3 57 1 180 1 182 1 184 1 185 1 64 3 66 2 67 1 69 2 188 1 70 1 72 1 189 2 191 1 192 1 76 2 79 1 196 2 199 1 200 1 203 1 204 2 86 1 207 2 208 2 89 3 212 1 218 3 219 5 220 1 94 2 95 1 222 1 227 1 96 1 228 1 229 1 101 3 105 3 107 2 232 1 233 1 234 3 110 4 111 3 240 1 242 1 115 1 
36 1 
174 2 176 2 118 2 54 3 57 1 180 1 182 1 3 3 184 1 185 1 64 3 66 2 122 3 67 1 69 2 8 1 11 3 188 1 70 1 125 4 126 2 72 1 127 1 129 4 189 2 192 1 191 1 76 2 15 4 79 1 133 1 196 2 199 1 135 1 200 1 137 1 204 2 203 2 140 1 142 1 86 2 207 2 208 2 89 3 212 1 21 1 147 1 148 2 218 3 26 2 28 1 27 1 32 1 219 5 31 5 94 2 35 6 222 1 95 1 155 1 227 1 228 1 96 1 157 1 158 1 160 4 161 1 101 3 164 4 105 3 107 2 232 1 165 2 233 1 166 2 234 3 110 4 111 3 168 1 169 2 50 2 170 1 171 3 240 1 242 1 52 3 
174 2 176 2 118 2 54 3 57 1 180 1 182 1 3 3 184 1 185 1 64 3 66 2 122 3 67 1 69 2 8 1 11 3 188 1 70 1 125 4 126 2 72 1 127 1 129 4 189 2 192 1 191 1 76 2 15 4 79 1 133 1 196 2 199 1 135 1 200 1 137 1 204 2 203 1 140 1 142 1 86 1 207 2 208 2 89 3 212 1 21 1 147 1 148 2 218 3 26 2 28 1 27 1 32 1 219 5 31 5 94 2 35 6 222 1 95 1 155 1 227 1 228 1 96 1 157 1 158 1 160 4 161 1 101 3 164 3 105 3 107 2 232 1 165 2 233 1 166 2 234 3 110 4 111 3 168 1 169 2 50 2 170 1 171 3 240 1 242 1 52 3 
191 1 218 3 182 1 3 3 185 1 32 1 137 1 95 1 168 1 170 1 240 1 70 1 72 1 147 1 
173 2 174 2 176 2 118 2 54 2 57 1 58 1 2 2 182 1 3 3 184 1 185 1 64 2 122 2 66 2 67 1 187 2 8 1 69 2 11 3 188 1 70 1 125 4 126 2 72 1 129 4 73 1 14 2 191 1 15 4 76 2 79 1 196 2 199 1 135 1 200 1 202 2 204 2 203 1 140 1 207 2 208 2 89 2 21 1 92 1 147 1 148 2 218 3 26 2 30 1 28 1 27 1 31 4 219 4 32 1 33 1 94 2 35 6 95 1 226 2 227 1 155 1 228 1 96 1 157 1 158 1 161 1 160 4 101 2 43 2 163 1 164 3 105 3 107 2 165 2 166 2 234 2 110 4 111 4 168 1 47 2 169 2 50 2 170 1 171 2 240 1 242 1 52 2 
173 2 174 2 176 2 118 2 54 2 57 1 180 1 2 2 182 1 3 3 184 1 185 1 64 2 122 2 66 2 67 1 8 1 69 2 11 3 188 1 70 1 125 4 126 2 72 1 127 1 129 4 192 1 14 2 191 1 15 4 76 2 79 1 196 2 199 1 135 1 137 1 200 1 204 2 203 1 140 1 86 1 207 2 208 2 89 2 21 1 147 1 148 2 218 3 26 2 28 1 27 1 31 4 219 4 32 1 33 1 94 2 35 6 95 1 226 2 227 1 155 1 228 1 96 1 157 1 158 1 161 1 160 4 101 2 43 2 164 3 105 3 107 2 232 1 165 2 233 1 166 2 234 2 110 4 111 4 168 1 238 1 169 2 50 2 170 1 171 2 240 1 242 1 52 2 
170 1 218 1 182 1 3 1 147 1 
174 2 176 2 118 2 54 3 57 1 180 1 182 1 3 3 184 1 185 1 64 3 66 2 122 3 67 1 69 2 8 1 11 3 188 1 125 4 126 2 72 1 127 1 129 4 189 2 192 1 191 1 76 2 15 4 79 1 133 1 196 2 199 1 135 1 200 1 137 1 204 2 203 1 140 1 142 1 86 1 207 2 208 2 89 3 212 1 21 1 147 1 148 2 218 3 26 2 28 1 27 1 32 1 219 5 31 5 94 2 35 6 222 1 95 1 227 1 155 1 228 1 96 1 229 1 157 1 158 1 160 4 161 1 101 3 164 3 105 3 107 2 165 2 233 1 166 2 234 3 110 4 111 3 168 1 169 2 50 2 170 1 171 3 240 1 115 1 242 1 52 3 
174 2 176 2 118 2 54 3 57 1 180 1 182 1 3 3 184 1 185 1 64 3 66 2 122 3 67 1 69 2 8 1 11 3 188 1 125 4 126 2 72 1 127 1 129 4 189 2 192 1 191 1 76 2 15 4 79 1 133 1 196 2 199 1 135 1 200 1 137 1 204 2 203 1 140 1 142 1 86 1 207 2 208 2 89 3 212 1 21 1 148 2 218 3 26 2 28 1 27 1 32 1 219 5 31 5 94 2 35 6 222 1 95 1 38 1 227 1 155 1 228 1 96 1 229 1 157 1 158 1 160 4 161 1 101 3 164 3 105 3 107 2 165 2 233 1 166 2 234 3 110 4 111 3 168 1 169 2 50 2 170 1 171 3 240 1 115 1 242 1 52 3 
118 2 2 2 3 3 122 5 10 1 8 7 11 3 123 1 125 6 126 8 127 1 129 4 14 2 15 6 133 3 135 1 137 1 140 1 142 3 20 1 21 1 147 1 148 2 26 2 27 1 28 1 31 7 32 1 33 1 35 6 155 1 157 1 158 1 161 7 160 6 43 2 164 15 165 2 166 2 168 1 48 1 169 2 170 1 50 2 171 5 52 5 174 2 173 2 176 2 54 5 56 1 57 1 180 7 182 1 184 1 185 1 64 5 66 2 67 1 69 2 188 7 70 1 72 1 189 2 192 1 191 1 76 2 79 7 81 1 196 2 199 1 200 1 203 7 204 2 86 7 207 2 208 2 89 5 213 1 218 3 219 7 220 1 94 2 95 1 222 3 227 7 226 2 228 7 96 1 229 1 101 5 105 3 107 2 233 1 234 5 110 4 111 7 237 1 240 1 115 1 242 1 
160 1 121 1 198 1 
205 1 160 1 
160 1 51 1 
205 1 160 1 
205 1 160 1 
160 1 51 1 
160 1 78 1 131 1 178 1 102 1 105 1 80 1 107 1 82 1 28 1 35 1 42 1 
160 1 105 1 46 1 107 1 28 1 35 1 
160 1 35 1 178 1 107 1 82 1 28 1 42 1 
160 1 51 1 
75 1 160 1 
1 1 160 1 17 1 210 1 
160 1 177 1 193 1 
161 1 164 2 55 1 180 1 136 1 153 1 203 1 221 1 141 1 228 1 86 1 126 1 
49 1 
203 1 161 1 221 1 141 1 86 1 228 1 164 2 55 1 126 1 180 1 136 1 
203 1 161 1 8 1 79 1 227 1 163 1 228 1 188 1 164 2 58 1 126 1 
34 1 203 1 161 1 8 2 79 2 227 2 163 2 228 1 188 1 164 3 58 1 126 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
34 1 203 1 161 1 8 2 79 2 227 2 163 2 228 1 188 1 164 3 58 1 126 1 
174 2 176 1 118 2 54 2 57 1 58 1 64 2 66 2 122 2 187 2 69 2 8 1 188 1 11 3 125 4 126 2 129 4 73 1 76 2 15 4 79 1 196 2 83 1 200 1 202 2 203 1 204 2 207 2 208 2 89 2 21 1 92 1 148 2 26 2 30 1 28 1 219 4 31 4 94 2 35 6 155 1 227 1 228 1 158 1 160 4 161 1 101 2 43 2 163 1 164 3 105 3 107 2 165 2 166 2 234 2 110 4 111 2 47 2 169 2 50 2 171 2 242 1 52 2 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 1 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 236 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
174 1 176 1 118 1 54 1 57 1 58 1 64 1 66 1 122 1 187 1 69 1 8 1 188 1 11 3 125 2 126 1 129 2 73 1 76 1 15 2 79 1 196 1 200 1 202 1 203 1 204 1 207 1 208 1 89 1 92 1 148 1 26 1 219 2 31 2 94 1 35 3 227 1 155 1 228 1 160 2 161 1 101 1 43 1 163 1 164 3 107 1 165 1 166 1 234 1 110 2 111 1 47 1 169 1 50 1 171 1 242 1 52 1 
161 1 79 1 163 1 164 2 58 1 202 1 34 1 203 1 227 1 8 1 188 1 228 1 126 1 
174 1 173 1 176 1 118 1 54 1 57 1 2 1 64 1 66 1 122 1 187 1 69 1 11 3 125 2 127 1 129 2 14 1 76 1 15 2 196 1 200 1 137 1 202 1 204 1 207 1 208 1 89 1 92 1 148 1 26 1 219 2 31 2 94 1 35 3 155 1 226 1 160 2 101 1 43 1 164 1 107 1 165 1 166 1 234 1 110 2 111 2 47 1 169 1 50 1 171 1 242 1 52 1 
174 1 176 1 118 1 54 1 57 1 58 1 64 1 66 1 122 1 187 1 69 1 8 1 188 1 11 3 125 2 126 1 129 2 73 1 76 1 15 2 79 1 196 1 200 1 202 1 203 1 204 1 207 1 208 1 89 1 92 1 148 1 26 1 219 2 31 2 220 1 94 1 35 3 227 1 155 1 228 1 160 2 161 1 101 1 43 1 163 1 164 3 107 1 165 1 166 1 234 1 110 2 111 1 47 1 169 1 50 1 171 1 242 1 52 1 
174 1 176 1 118 1 54 1 57 1 180 1 64 1 66 1 122 1 187 1 69 1 8 1 188 1 11 3 125 2 126 1 127 1 129 2 76 1 15 2 79 1 196 1 137 1 200 1 202 1 203 1 204 1 86 1 207 1 208 1 89 1 92 1 148 1 26 1 219 2 31 2 220 1 94 1 35 3 155 1 227 1 228 1 160 2 161 1 101 1 43 1 164 3 107 1 165 1 166 1 234 1 110 2 111 1 47 1 169 1 50 1 171 1 242 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 3 111 1 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 165 1 166 1 234 1 110 3 111 1 203 1 204 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 165 1 166 1 234 1 110 3 111 1 203 1 204 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 165 1 166 1 234 1 110 3 111 1 203 1 204 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 64 1 34 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 161 1 101 1 79 1 163 1 164 2 196 1 165 1 166 1 234 1 110 2 111 1 203 1 204 1 169 1 51 1 50 1 207 1 171 1 208 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 75 1 161 1 101 1 79 1 163 1 164 2 196 1 165 1 166 1 234 1 110 3 111 1 203 1 204 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
65 1 160 1 15 1 43 1 125 1 
65 1 160 1 15 1 76 1 125 1 
99 1 160 1 15 1 43 1 125 1 139 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 118 1 178 1 54 1 58 1 2 1 64 1 122 1 66 1 69 1 8 1 188 1 125 2 126 2 129 2 14 1 76 1 15 2 78 4 79 1 131 3 80 3 82 1 196 1 199 1 203 1 204 1 207 1 208 1 89 1 211 1 21 1 148 1 26 1 28 1 31 2 219 2 34 1 94 1 35 3 227 1 226 1 228 1 42 1 158 1 160 2 161 1 101 1 43 1 163 1 164 2 102 3 105 3 107 1 165 1 233 1 166 1 234 1 110 2 111 2 169 1 50 1 171 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 220 1 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 75 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 1 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 236 2 111 1 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 14 1 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 236 2 111 2 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
173 1 174 1 148 1 54 1 58 1 2 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 1 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 3 111 1 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 3 111 1 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 236 2 111 1 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
34 1 203 1 161 1 100 1 8 1 79 1 227 1 163 1 228 1 188 1 164 2 58 1 126 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 236 2 111 1 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 220 1 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 75 1 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
174 1 148 1 54 1 58 1 31 2 219 2 64 1 122 1 8 1 227 1 228 1 188 1 126 1 129 3 75 1 14 1 161 1 101 1 79 1 163 1 164 2 165 1 196 1 166 1 234 1 110 3 111 2 204 1 203 1 169 1 51 1 50 1 207 1 208 1 171 1 89 1 52 1 
173 1 174 1 178 1 54 1 179 1 58 1 121 3 64 1 122 1 66 1 68 1 9 1 69 1 8 2 188 1 126 4 129 2 77 1 78 3 79 2 131 2 80 2 82 1 196 1 199 1 83 1 203 2 204 1 207 1 208 1 89 1 211 2 21 1 148 1 26 1 28 1 31 2 219 2 34 1 94 1 35 2 227 2 228 1 156 1 159 1 158 1 161 1 160 3 101 1 163 2 164 3 102 2 105 2 107 1 233 1 166 1 234 1 110 2 111 1 169 1 50 1 171 1 52 1 
173 1 174 1 148 1 54 1 58 1 31 2 219 2 34 1 64 1 122 1 8 1 227 1 226 1 228 1 188 1 126 1 129 2 161 1 101 1 79 1 163 1 164 2 196 1 166 1 234 1 110 2 111 1 203 1 204 1 169 1 50 1 207 1 171 1 208 1 89 1 52 1 
176 1 119 1 178 1 55 1 58 1 25 1 121 3 26 1 28 1 66 1 94 1 223 1 35 2 69 1 228 1 126 2 71 1 158 1 74 1 161 1 160 4 16 1 78 3 131 2 163 1 102 2 164 2 80 2 105 2 107 1 82 1 233 1 235 1 199 1 201 1 203 1 112 1 18 1 144 1 211 1 21 1 
178 1 55 1 58 1 25 1 121 3 26 1 30 1 28 1 94 1 66 1 35 2 187 1 39 1 69 1 228 1 126 1 74 1 161 1 160 4 16 1 78 3 131 2 163 1 103 1 102 2 164 2 106 1 80 2 105 2 107 1 82 1 195 1 233 1 235 1 138 1 203 1 112 1 47 1 18 1 211 1 117 1 21 1 
54 3 58 1 31 3 219 3 64 3 122 3 222 1 227 1 8 1 188 1 228 1 126 1 161 1 101 3 79 1 163 1 164 2 133 3 234 3 111 3 203 1 142 1 171 3 88 1 89 3 52 3 
54 1 58 1 31 1 219 1 64 1 122 1 222 1 227 1 8 1 188 1 228 1 126 1 161 1 101 1 79 1 163 1 164 2 133 1 234 1 111 1 203 1 142 1 239 1 171 1 89 1 52 1 
161 1 79 1 163 1 164 2 133 1 58 1 203 1 222 1 227 1 8 1 188 1 228 1 239 1 126 1 
215 1 174 1 148 1 54 3 58 1 31 4 219 4 220 1 64 3 122 3 222 1 227 1 8 1 188 1 228 1 126 1 129 2 161 1 101 3 79 1 163 1 164 2 133 2 165 1 196 1 166 1 234 3 110 2 111 3 204 1 203 1 169 1 142 1 50 1 207 1 208 1 171 3 89 3 52 3 
54 1 58 1 31 1 219 1 64 1 122 1 222 1 227 1 8 1 188 1 228 1 126 1 161 1 101 1 79 1 163 1 164 2 133 1 234 1 111 1 203 1 142 1 171 1 89 1 52 1 
54 1 58 1 31 1 219 1 65 1 64 1 122 1 222 1 227 1 8 1 188 1 228 1 12 1 125 1 126 1 189 1 75 1 160 1 161 1 15 1 101 1 79 1 163 1 164 2 133 1 234 1 111 1 203 1 142 1 51 1 171 1 89 1 52 1 
7 1 164 1 124 1 116 1 63 1 
6 1 164 1 214 1 167 1 
164 1 172 1 167 1 
164 1 124 1 183 2 63 1 
231 1 167 1 
78 1 131 1 102 1 80 1 105 1 211 1 
107 1 233 1 28 1 21 1 
47 1 24 1 107 1 30 1 28 1 
78 1 131 1 102 1 105 1 80 1 211 1 42 1 
160 1 51 1 50 1 129 1 219 1 110 1 
64 1 219 1 
160 1 51 1 129 1 110 1 
215 1 219 2 110 1 64 1 50 1 128 1 129 1 
64 1 219 1 
86 1 
180 1 
86 1 
163 1 
163 1 
58 1 
130 1 161 1 164 2 55 1 120 1 108 1 183 1 203 1 154 1 113 1 228 1 239 1 126 1 230 1 19 1 
130 2 161 2 164 4 55 2 120 2 217 1 108 2 183 2 4 1 203 2 154 2 113 2 228 2 126 2 230 2 19 2 
130 1 0 1 161 1 164 2 104 1 55 1 120 1 108 1 183 1 203 1 154 1 113 1 228 1 126 1 230 1 19 1 
130 1 161 1 164 2 55 1 120 1 108 1 183 1 4 1 203 1 154 1 113 1 228 1 126 1 230 1 19 1 
130 1 160 3 161 1 23 1 53 1 164 2 193 2 55 1 120 1 108 1 183 1 110 1 203 1 154 1 113 1 228 1 51 1 126 1 230 1 19 1 
130 1 154 1 203 1 161 1 113 1 228 1 164 2 55 1 120 1 126 1 217 1 108 1 230 1 183 1 19 1 
0 1 130 2 161 2 164 4 55 2 120 2 217 1 108 2 183 2 203 2 154 2 113 2 228 2 126 2 230 2 19 2 
130 1 160 1 161 1 23 1 53 2 164 2 193 1 55 1 120 1 108 1 183 1 110 2 203 1 154 1 113 1 228 1 51 1 126 1 230 1 19 1 
22 1 
160 2 51 1 121 2 241 1 
160 2 37 1 51 1 121 2 
22 1 176 1 23 1 53 1 55 1 57 1 120 1 121 2 26 1 183 1 4 1 66 1 94 1 154 1 35 2 187 1 37 1 155 1 69 1 11 2 228 1 126 2 230 1 73 1 130 1 160 2 161 1 164 3 107 1 108 1 84 1 83 1 110 1 200 1 203 1 113 1 47 1 241 1 242 1 19 1 92 1 
0 1 161 1 228 1 104 1 108 1 
53 1 178 1 55 1 120 1 121 2 183 1 66 1 69 1 126 3 130 1 78 4 131 3 17 1 80 3 193 1 82 1 199 1 83 1 203 1 211 1 19 1 21 1 22 1 23 1 26 1 28 1 154 1 94 1 35 2 37 1 228 1 230 1 42 1 158 1 161 1 160 3 164 2 102 3 105 3 107 1 108 1 233 1 110 1 113 1 241 1 
225 1 45 1 104 1 143 1 181 1 91 1 
160 1 161 1 175 1 45 1 164 2 193 1 55 1 150 1 120 1 181 1 183 1 110 1 203 1 225 1 40 1 228 1 87 1 126 1 
215 1 177 1 175 1 216 1 55 1 120 1 181 1 183 1 61 1 225 2 228 1 125 1 126 1 41 1 161 1 160 2 15 1 164 2 45 1 193 1 109 1 110 1 203 1 143 1 91 1 
216 1 
176 1 175 2 118 1 55 1 120 1 57 1 181 1 183 1 61 1 187 1 69 1 11 4 125 1 126 1 73 1 190 1 15 1 17 2 193 2 200 1 203 1 143 1 87 1 91 1 92 1 149 1 216 1 151 1 94 1 35 2 225 2 155 1 228 1 161 1 160 3 45 1 164 3 107 1 109 1 110 2 47 1 242 1 
225 1 45 1 104 1 143 1 181 1 91 1 
175 2 118 1 178 1 55 1 120 1 181 1 183 1 61 1 69 1 125 1 126 3 190 1 15 1 78 5 131 4 17 2 80 4 193 2 82 1 199 1 83 1 203 1 143 1 87 1 211 1 91 1 21 1 216 1 151 1 28 1 94 1 35 2 225 2 228 1 42 1 158 1 161 1 160 3 45 1 164 2 102 4 105 4 107 1 109 1 233 1 110 2 
160 2 161 1 175 2 45 1 164 2 193 1 55 1 120 1 181 1 183 1 110 2 203 1 225 1 228 1 51 1 87 1 143 1 126 1 210 1 91 1 
175 1 178 1 216 1 55 1 120 1 181 1 151 1 183 1 28 1 94 1 35 1 225 1 69 1 228 1 126 3 42 1 158 1 190 1 160 1 161 1 78 3 17 1 131 2 102 2 164 2 45 1 193 1 80 2 105 2 107 1 82 1 233 1 83 1 199 1 110 1 203 1 87 1 143 1 211 1 91 1 21 1 
215 1 175 1 225 1 109 1 110 1 61 1 
51 1 151 1 
51 1 190 1 
175 1 216 1 55 1 120 1 181 1 183 1 61 1 225 2 228 1 125 1 126 1 161 1 160 2 15 1 164 2 45 1 193 1 109 1 110 1 203 1 143 1 91 1 

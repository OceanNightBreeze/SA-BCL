#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 177 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 95 0 63 126 105 155 34 201 217 195 42 109 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.IndexOutOfBoundsException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 95 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V | STATEMENT | 11778 | stmt -> ;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | STATEMENT | 8978 | stmt -> ;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | ASSIGN | 10508 | = null
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 1 230 1 83 1 28 1 139 1 
61 2 47 1 59 1 
78 1 11 1 230 1 83 1 28 1 139 1 
216 2 73 1 219 2 233 2 136 1 206 1 223 2 10 3 169 1 199 1 86 1 
71 1 216 2 73 1 219 4 233 2 206 1 223 1 209 1 10 2 63 1 183 1 169 1 139 1 14 1 126 1 199 1 
73 1 98 1 206 1 199 1 
216 1 73 1 219 2 233 1 206 1 223 2 10 1 169 1 66 1 171 1 199 1 
1 1 71 1 216 1 219 3 87 1 233 1 206 1 188 1 223 1 191 1 63 1 10 1 83 1 169 1 212 1 139 2 29 1 14 1 126 1 199 1 
1 1 71 1 216 1 219 3 87 1 233 1 206 1 223 1 191 1 63 1 10 1 83 1 169 1 212 1 139 2 29 1 14 1 126 1 199 1 
1 1 55 1 216 1 73 1 219 2 233 1 206 1 188 1 106 1 223 1 10 1 83 1 169 1 139 1 213 1 199 1 
1 1 55 1 216 1 73 1 37 1 219 2 233 1 206 1 188 1 223 1 10 1 83 1 169 1 139 1 213 1 199 1 
1 1 55 1 216 1 73 1 58 1 219 2 233 1 206 1 223 1 10 1 210 1 83 1 169 1 139 1 127 1 213 1 199 1 
1 1 55 1 216 1 73 1 58 1 219 2 233 1 206 1 188 1 223 1 10 1 210 1 83 1 169 1 139 1 127 1 213 1 199 1 
216 1 73 1 219 3 233 2 206 1 136 1 223 1 10 2 169 1 199 1 
216 1 73 1 219 3 206 1 223 1 107 1 10 2 167 2 33 1 199 1 
107 1 216 1 167 1 10 1 73 1 219 2 206 1 32 1 223 2 199 1 
216 1 73 1 219 2 206 1 223 1 107 1 10 1 167 1 182 1 199 1 
71 1 216 1 73 1 219 3 87 1 206 1 223 1 107 1 191 1 63 1 10 1 167 1 93 1 212 1 139 1 29 1 126 1 199 1 
71 1 216 1 73 1 219 3 206 1 105 1 223 1 107 1 209 1 10 1 167 1 63 1 93 1 139 1 126 2 199 1 
107 1 216 1 167 1 10 1 73 1 219 2 238 1 206 1 223 1 199 1 
71 1 216 1 73 1 219 3 231 1 206 1 223 1 107 1 8 1 180 1 10 1 167 1 63 1 93 1 125 1 139 1 126 4 199 1 
107 1 173 1 216 1 167 1 10 1 73 1 219 2 67 1 206 1 223 1 199 1 
197 3 157 1 187 1 
197 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 3 194 1 195 1 139 1 143 1 144 1 200 1 201 1 202 3 148 1 20 1 207 1 206 1 92 10 208 1 155 1 93 1 156 1 211 1 94 3 95 1 215 4 159 1 214 1 33 1 101 1 34 1 35 1 217 1 219 4 39 1 103 1 42 1 105 1 222 1 223 5 107 1 45 1 224 1 166 1 108 1 167 2 49 1 52 1 171 1 228 1 113 3 57 1 117 3 120 2 63 1 121 1 183 1 235 1 126 1 70 4 184 1 129 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 148 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 215 4 159 1 214 1 33 1 101 1 35 1 34 1 217 1 219 3 39 1 103 1 42 1 105 1 222 1 223 3 45 1 224 1 107 1 108 1 166 1 167 1 49 1 52 1 228 1 113 2 57 1 117 2 63 1 121 1 235 1 126 1 70 4 184 1 
74 1 20 1 103 1 42 1 222 1 193 1 194 1 195 1 215 4 70 4 33 1 184 1 
186 1 185 1 0 1 130 2 2 1 1 1 131 1 3 1 132 1 133 1 74 1 134 1 4 1 136 1 6 2 77 1 78 1 10 2 193 1 80 1 194 1 83 1 195 1 138 1 139 2 140 1 14 1 15 1 142 1 16 1 143 1 200 1 202 2 201 1 20 1 150 2 91 1 206 1 154 1 92 2 208 1 24 1 209 1 155 1 27 1 214 2 159 2 215 4 99 3 101 2 34 1 217 1 219 3 38 1 39 1 103 1 42 1 164 1 222 1 105 1 223 3 224 1 45 1 165 1 108 1 166 1 225 1 49 1 168 1 169 1 51 2 52 1 228 1 116 1 175 1 113 2 56 1 57 1 117 2 233 1 234 1 178 1 60 1 63 1 122 1 182 1 235 1 236 1 69 3 126 2 70 4 184 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 159 1 215 4 214 1 33 1 101 1 35 1 34 1 217 1 219 3 39 1 103 1 42 1 222 1 105 1 223 3 45 1 224 1 107 1 108 1 166 1 167 1 226 1 52 1 113 2 57 1 117 2 63 1 121 1 235 1 126 1 70 4 184 1 
130 1 185 1 0 1 1 1 3 1 74 1 136 1 6 2 78 1 193 1 10 2 194 1 83 1 82 1 195 1 139 2 140 1 16 1 201 1 146 1 89 1 150 1 20 1 203 1 152 1 205 2 153 1 206 1 92 5 209 1 155 1 93 1 158 2 215 4 99 2 33 1 34 1 217 1 219 3 163 1 102 1 103 1 42 1 222 1 105 2 223 3 107 1 108 1 166 1 225 1 167 1 229 2 174 1 115 2 56 1 232 1 179 1 63 1 182 1 64 1 123 1 69 4 126 3 128 2 70 4 184 1 
185 1 0 1 130 2 1 1 131 1 3 1 132 1 133 1 74 1 134 1 4 1 136 1 6 2 78 1 77 1 10 2 193 1 80 1 194 1 83 1 195 1 138 1 139 2 140 1 142 1 16 1 143 1 200 1 202 2 201 1 20 1 150 2 91 1 206 1 154 1 92 2 208 1 209 1 155 1 27 1 93 1 214 2 159 2 215 4 99 3 33 1 101 2 34 1 217 1 219 4 38 1 39 1 103 1 42 1 164 1 222 1 105 1 223 3 224 1 45 1 107 1 108 1 166 1 225 1 167 1 49 1 51 2 52 1 228 1 116 1 175 1 113 2 57 1 117 2 234 1 178 1 60 1 63 1 182 1 235 1 236 1 69 3 126 2 70 4 184 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 148 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 215 4 159 1 214 1 33 1 101 1 34 1 35 1 217 1 219 3 39 1 103 1 42 1 105 1 222 1 223 4 45 1 224 1 107 1 108 1 166 1 167 1 49 1 52 1 228 1 171 1 113 2 57 1 117 2 63 1 121 1 235 1 126 1 70 4 184 1 
185 1 0 1 130 2 2 1 1 1 131 1 3 1 132 1 133 1 74 1 134 1 4 1 136 1 6 2 78 1 77 1 10 2 193 1 80 1 194 1 83 1 195 1 138 1 139 2 140 1 142 1 16 1 143 1 200 1 202 2 201 1 20 1 150 2 91 1 206 1 154 1 92 2 208 1 209 1 155 1 27 1 93 1 214 2 159 2 215 4 99 3 33 1 101 2 34 1 217 1 219 3 38 1 39 1 103 1 42 1 164 1 222 1 105 1 223 3 224 1 45 1 107 1 108 1 166 1 225 1 167 1 49 1 51 2 52 1 228 1 116 1 175 1 113 2 56 1 57 1 117 2 234 1 178 1 60 1 63 1 182 1 235 1 236 1 69 3 126 2 70 4 184 1 
198 1 
193 1 195 1 42 1 70 1 215 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 148 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 215 4 159 1 214 1 33 1 101 1 35 1 34 1 217 1 219 3 39 1 42 1 105 1 222 1 223 3 45 1 224 1 107 1 108 1 166 1 167 1 49 1 52 1 228 1 113 2 57 1 117 2 63 1 121 1 235 1 126 1 70 4 184 1 
0 1 185 1 3 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 148 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 215 4 159 1 214 1 33 1 101 1 35 1 34 1 217 1 219 3 39 1 105 1 222 1 223 3 45 1 224 1 107 1 108 1 166 1 167 1 49 1 52 1 228 1 113 2 57 1 117 2 177 1 63 1 121 1 235 1 126 1 70 4 184 1 
0 1 185 1 3 1 72 1 74 1 136 1 193 1 10 2 194 1 195 1 139 1 143 1 200 1 202 2 201 1 20 1 206 1 208 1 155 1 93 1 156 1 95 1 215 4 159 1 214 1 33 1 101 1 34 1 35 1 217 1 219 3 39 1 103 1 42 1 105 1 222 1 223 3 45 1 224 1 107 1 108 1 166 1 167 1 109 1 49 1 52 1 228 1 113 2 57 1 117 2 63 1 121 1 235 1 126 1 70 4 184 1 
211 1 13 1 92 1 
161 1 92 1 
181 1 92 1 
161 1 92 1 
161 1 92 1 
181 1 92 1 
55 1 58 1 40 1 41 1 92 1 119 1 12 1 83 1 139 1 227 1 213 1 99 1 
83 1 40 1 139 1 43 1 92 1 99 1 
55 1 83 1 139 1 41 1 92 1 213 1 99 1 
181 1 92 1 
160 1 92 1 
48 1 92 1 104 1 229 1 
81 1 205 1 92 1 
185 1 218 1 88 1 219 2 220 1 206 1 6 2 92 2 221 1 5 1 223 1 107 1 181 1 10 1 167 1 170 2 158 1 
75 1 
185 1 218 1 219 2 220 1 206 1 221 1 5 1 223 1 107 1 10 1 167 1 98 1 158 1 
185 1 113 1 10 1 202 1 117 1 219 2 169 1 233 1 52 1 206 1 223 1 
185 1 113 2 202 2 117 2 219 3 233 2 76 1 206 1 223 1 10 1 169 1 52 1 
186 1 130 2 0 1 185 1 1 1 131 1 4 1 134 1 6 2 77 1 78 1 10 1 83 1 139 2 14 1 15 1 142 1 16 1 143 1 200 1 202 1 150 2 91 1 206 1 154 1 92 2 208 1 24 1 27 1 159 2 214 2 99 3 101 1 219 3 38 1 39 1 105 1 223 2 224 1 45 1 165 1 225 1 168 1 169 1 52 1 51 2 171 1 116 1 113 1 57 1 117 1 233 1 178 1 234 1 60 1 63 1 122 1 182 1 235 1 236 1 126 1 69 3 
185 1 101 1 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
100 2 185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 113 2 202 2 117 2 219 3 233 2 76 1 206 1 223 1 10 1 169 1 52 1 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
186 1 130 2 0 1 185 1 131 1 4 1 134 1 6 2 77 1 78 1 10 1 139 1 14 1 15 1 142 1 16 1 143 1 200 1 202 1 150 2 91 1 206 1 154 1 92 2 208 1 24 1 27 1 159 2 214 2 99 3 101 1 219 3 38 1 39 1 105 1 223 1 224 1 45 1 165 1 225 1 168 1 169 1 52 1 51 2 116 1 113 1 57 1 117 1 233 1 178 1 234 1 60 1 63 1 122 1 182 1 235 1 236 1 126 1 69 3 
185 1 113 1 202 1 117 1 219 2 233 1 76 1 206 1 223 1 10 1 169 1 52 1 15 1 
186 1 0 1 130 2 131 1 132 1 4 1 134 1 6 2 78 1 77 1 80 1 138 1 139 1 15 1 142 1 16 1 143 1 200 1 150 2 91 1 92 2 154 1 208 1 24 1 27 1 93 1 159 2 214 2 99 3 33 1 101 2 219 1 38 1 39 1 164 1 105 1 45 1 224 1 165 1 225 1 168 1 51 2 175 1 116 1 57 1 178 1 234 1 60 1 63 1 122 1 182 1 235 1 236 1 69 3 126 1 
186 1 130 2 0 1 185 1 131 1 4 1 134 1 6 2 77 1 78 1 10 1 192 1 139 1 14 1 15 1 142 1 16 1 143 1 200 1 202 1 150 2 91 1 206 1 154 1 92 2 208 1 24 1 27 1 159 2 214 2 99 3 101 1 219 3 38 1 39 1 105 1 223 1 224 1 45 1 165 1 225 1 168 1 169 1 52 1 51 2 116 1 113 1 57 1 117 1 233 1 178 1 234 1 60 1 63 1 122 1 182 1 235 1 236 1 126 1 69 3 
186 1 130 2 0 1 185 1 131 1 134 1 4 1 6 2 77 1 78 1 10 1 192 1 139 1 15 1 142 1 16 1 143 1 200 1 202 1 150 2 91 1 206 1 154 1 92 2 208 1 24 1 27 1 93 1 159 2 214 2 33 1 99 3 101 1 219 3 38 1 39 1 105 1 223 1 224 1 107 1 45 1 165 1 225 1 167 1 168 1 52 1 51 2 116 1 113 1 57 1 117 1 178 1 234 1 60 1 63 1 122 1 182 1 235 1 236 1 126 1 69 3 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 164 1 6 2 223 1 224 1 45 1 10 1 80 1 169 1 138 1 52 1 51 2 143 1 200 1 116 1 175 1 113 1 57 1 202 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 169 1 138 1 51 3 52 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 2 164 1 223 1 224 1 45 1 10 1 169 1 138 1 51 2 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
77 1 62 1 130 1 150 1 92 1 
62 1 130 1 150 1 38 1 92 1 
137 1 77 1 130 1 150 1 151 1 92 1 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 1 1 55 1 113 1 202 1 117 1 219 2 233 1 41 1 76 1 206 1 223 2 108 1 10 1 83 1 169 1 139 1 52 1 213 1 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 192 1 169 1 52 1 51 3 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
100 2 185 1 101 1 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 169 1 138 1 51 3 52 1 142 1 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
100 2 185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 2 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 80 1 169 1 138 1 51 3 52 1 143 1 200 1 116 1 175 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 52 1 51 3 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 3 223 1 224 1 45 1 10 1 169 1 52 1 51 3 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 114 1 113 1 202 1 117 1 219 2 233 1 76 1 206 1 223 1 10 1 169 1 52 1 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 192 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 101 1 131 1 219 2 134 1 4 1 39 1 6 2 223 1 224 1 45 1 10 1 169 1 52 1 51 2 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 27 1 235 1 236 1 214 2 159 2 
185 1 1 1 219 3 37 1 76 1 223 4 79 1 108 1 10 2 83 1 169 1 139 1 52 1 171 1 113 2 55 1 202 2 117 2 233 2 206 1 183 1 210 1 213 1 
185 1 101 1 131 1 132 1 219 2 134 1 4 1 39 1 76 1 6 3 164 1 223 1 224 1 45 1 10 1 169 1 52 1 51 3 143 1 200 1 116 1 113 1 202 1 57 1 117 1 233 1 234 1 91 1 206 1 154 1 208 1 181 1 27 1 235 1 236 1 214 2 159 2 
185 1 0 1 1 1 219 3 106 1 223 2 225 1 108 1 191 1 10 1 50 1 83 1 169 1 139 2 141 1 14 1 53 1 16 1 55 1 19 1 87 1 233 1 21 1 178 1 206 1 92 4 60 1 63 1 182 1 211 3 212 1 237 1 29 1 69 2 213 1 158 1 126 1 99 2 
186 1 185 1 0 1 219 2 40 2 223 1 10 1 12 2 110 1 168 1 50 1 83 1 196 1 169 1 139 1 227 2 141 1 172 1 53 1 173 1 55 1 19 1 149 1 58 3 233 1 21 1 178 1 206 1 92 4 23 1 119 2 24 1 60 1 122 1 182 1 210 1 124 1 211 3 237 1 97 1 67 1 213 1 158 1 99 2 
101 2 185 1 35 1 131 1 219 2 134 1 4 1 39 2 6 2 223 1 45 2 224 2 192 1 10 1 169 1 51 2 52 1 143 2 200 2 116 1 113 1 57 2 202 1 117 1 233 1 234 1 91 1 206 1 154 1 208 2 27 1 121 1 235 2 156 1 236 1 214 3 159 3 
185 1 101 1 200 1 113 1 35 1 202 1 57 1 117 1 219 2 233 1 39 1 206 1 208 1 223 1 224 1 45 1 10 1 121 1 235 1 156 1 169 1 52 1 159 1 214 1 143 1 
101 1 185 1 35 1 219 2 39 1 223 1 45 1 224 1 10 1 169 1 52 1 143 1 200 1 113 1 57 1 202 1 117 1 233 1 206 1 208 1 121 1 235 1 156 1 95 1 214 1 159 1 
101 3 185 1 35 3 219 2 39 3 223 1 45 3 224 3 10 1 169 1 52 1 143 3 200 3 113 1 147 1 57 3 202 1 117 1 233 1 206 1 208 3 121 1 235 3 156 1 214 3 159 3 
101 1 185 1 35 1 219 2 39 1 223 1 45 1 224 1 10 1 169 1 52 1 143 1 200 1 113 1 57 1 202 1 117 1 233 1 206 1 208 1 121 1 235 1 156 1 238 1 214 1 159 1 
185 1 35 1 113 1 202 1 117 1 219 2 233 1 206 1 223 1 121 1 10 1 169 1 52 1 238 1 
36 1 219 1 85 1 7 1 
219 1 30 1 7 1 
219 1 84 2 31 1 86 1 
18 1 219 1 68 1 31 1 86 1 
176 1 7 1 
210 1 12 1 58 1 40 1 227 1 119 1 
186 1 168 1 83 1 139 1 112 1 23 1 24 1 
210 1 12 1 58 1 40 1 41 1 227 1 119 1 
110 1 83 1 139 1 172 1 
116 1 181 1 51 1 6 1 92 1 159 1 
159 1 143 1 
181 1 51 1 6 1 92 1 
61 1 116 1 51 1 6 1 159 2 143 1 190 1 
159 1 143 1 
167 1 
107 1 
167 1 
233 1 
233 1 
169 1 
185 1 17 1 219 2 90 1 206 1 118 1 223 1 107 1 9 1 26 1 10 1 167 1 96 1 238 1 158 1 
185 2 17 2 219 4 162 1 90 2 135 1 206 2 118 2 223 2 107 2 9 2 26 2 10 2 167 2 96 2 158 2 
185 1 17 1 219 2 162 1 90 1 206 1 118 1 223 1 107 1 9 1 26 1 10 1 167 1 96 1 158 1 
185 1 17 1 145 1 219 2 90 1 205 2 206 1 92 3 6 1 118 1 223 1 25 1 107 1 9 1 26 1 181 1 10 1 167 1 96 1 158 1 
185 1 17 1 219 2 90 1 135 1 206 1 118 1 223 1 107 1 9 1 26 1 10 1 167 1 96 1 158 1 
54 1 185 2 17 2 219 4 90 2 135 1 206 2 118 2 223 2 107 2 9 2 26 2 10 2 167 2 96 2 98 1 158 2 
185 1 17 1 145 1 219 2 90 1 205 1 206 1 92 1 6 2 118 1 223 1 25 2 107 1 9 1 26 1 181 1 10 1 167 1 96 1 158 1 
65 1 
181 1 211 2 204 1 92 2 
181 1 211 2 22 1 92 2 
186 1 185 1 0 1 219 3 162 1 6 1 44 1 105 1 223 2 107 1 165 1 225 1 9 1 167 1 10 1 168 1 139 1 171 1 16 1 17 1 145 1 90 1 178 1 204 1 206 1 22 1 92 2 118 1 24 1 25 1 60 1 26 1 63 1 122 1 182 1 93 1 65 1 211 2 96 1 69 2 158 1 126 1 99 2 
185 1 54 1 9 1 98 1 206 1 
185 1 1 1 219 2 41 1 223 3 107 1 108 1 9 1 167 1 10 1 83 1 139 1 171 1 17 1 55 1 90 1 206 1 118 1 26 1 96 1 158 1 213 1 
54 1 185 1 17 1 219 2 90 1 206 1 118 1 223 1 107 1 9 1 26 1 10 1 167 1 96 1 98 1 158 1 
174 1 130 1 185 1 115 2 89 1 219 2 150 1 203 1 102 1 179 1 205 1 153 1 206 1 6 1 92 2 223 1 107 1 61 1 47 1 10 1 167 1 81 1 82 1 158 1 128 1 
179 1 
186 1 130 1 185 1 0 1 219 3 102 1 6 2 105 1 223 2 78 1 107 1 165 1 225 1 167 1 10 1 168 1 82 1 139 1 171 1 111 1 229 2 16 1 174 1 115 2 146 1 89 1 150 1 203 1 232 1 179 1 205 2 206 1 153 1 92 3 24 1 63 1 122 1 93 1 182 1 64 1 69 4 158 1 126 1 128 2 99 2 
115 1 89 1 82 1 102 1 98 1 153 1 
185 1 1 1 219 2 102 1 41 1 223 3 107 1 108 1 167 1 10 1 82 1 83 1 139 1 171 1 115 1 55 1 89 1 206 1 153 1 158 1 213 1 
185 1 115 1 89 1 219 2 232 1 102 1 205 1 153 1 206 1 104 1 6 2 92 2 223 1 107 1 181 1 10 1 167 1 82 1 158 1 128 2 
185 1 1 1 219 2 102 1 41 1 223 3 107 1 108 1 167 1 10 1 82 1 83 1 139 1 171 1 115 1 55 1 89 1 206 1 153 1 158 1 213 1 
61 1 174 1 115 1 203 1 6 1 128 1 
181 1 146 1 
181 1 64 1 
174 1 130 1 185 1 115 2 89 1 219 2 150 1 203 1 102 1 179 1 205 1 153 1 206 1 6 1 92 2 223 1 107 1 10 1 167 1 82 1 158 1 128 1 
115 1 89 1 82 1 102 1 98 1 153 1 
185 1 219 2 102 1 6 2 104 1 189 1 223 1 107 1 46 1 167 1 10 1 111 1 115 1 232 1 206 1 153 1 205 1 92 2 181 1 158 1 128 2 

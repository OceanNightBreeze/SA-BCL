#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 21 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 21 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 215 21 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 21 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 21 179 80 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 21 179 210 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 21 179 80 147 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 8061 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String; | RETURN | 4244 | return null
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | CONDITION | 5281 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V | OPERATOR | 5532 | == -> !=
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
142 1 234 1 3 1 4 1 120 1 
232 1 81 2 7 1 
142 1 234 1 28 1 3 1 4 1 120 1 
76 2 131 1 38 2 150 1 170 1 57 1 156 1 157 3 199 2 123 2 94 1 
163 1 76 4 131 1 38 2 39 1 150 1 120 1 121 1 156 1 157 2 199 1 201 1 123 2 91 1 94 1 188 1 
156 1 131 1 56 1 94 1 
76 2 131 1 38 1 223 1 150 1 156 1 157 1 199 2 123 1 237 1 94 1 
163 2 141 1 142 1 76 3 128 1 131 1 132 1 50 1 38 1 77 1 39 1 150 1 120 2 156 1 157 1 199 1 123 1 91 1 188 1 34 1 
163 2 141 1 142 1 76 3 128 1 131 1 132 1 38 1 77 1 39 1 150 1 120 2 156 1 157 1 199 1 123 1 91 1 188 1 34 1 
163 1 97 1 142 1 76 2 166 1 131 1 132 1 38 1 50 1 150 1 134 1 120 1 156 1 157 1 199 1 123 1 94 1 
98 1 163 1 97 1 142 1 76 2 131 1 132 1 38 1 50 1 150 1 134 1 120 1 156 1 157 1 199 1 123 1 94 1 
163 1 97 1 142 1 76 2 131 1 132 1 38 1 150 1 134 1 169 1 120 1 156 1 157 1 199 1 213 1 114 1 123 1 94 1 
163 1 97 1 142 1 76 2 131 1 132 1 50 1 38 1 150 1 134 1 169 1 120 1 156 1 157 1 199 1 213 1 114 1 123 1 94 1 
57 1 156 1 76 3 157 2 199 1 131 1 38 2 150 1 123 1 94 1 
76 3 131 1 226 2 227 1 84 1 156 1 157 2 199 1 123 1 94 1 
156 1 76 2 157 1 199 2 131 1 123 1 227 1 226 1 94 1 208 1 
156 1 76 2 157 1 199 1 131 1 224 1 123 1 227 1 226 1 94 1 
106 1 156 1 76 2 157 1 199 1 131 1 123 1 227 1 226 1 94 1 
163 1 76 3 131 1 221 1 39 4 65 1 226 1 227 1 83 1 120 1 211 1 156 1 157 1 199 1 185 1 123 1 94 1 188 1 
176 1 76 2 131 1 226 1 227 1 156 1 157 1 199 1 123 1 94 1 125 1 
163 1 141 1 76 3 128 1 131 1 77 1 39 1 226 1 227 1 120 1 211 1 156 1 157 1 199 1 123 1 188 1 34 1 94 1 
163 1 76 3 131 1 39 2 225 1 226 1 227 1 120 1 211 1 156 1 157 1 199 1 201 1 123 1 94 1 188 1 
25 3 60 1 184 1 
25 1 
177 1 48 1 179 1 53 1 119 1 6 1 58 1 10 1 124 1 64 10 131 1 14 1 67 1 69 1 17 3 198 1 72 1 199 1 18 1 202 1 19 1 73 1 21 1 76 2 206 1 151 1 80 1 84 1 85 1 86 2 87 1 157 1 31 1 160 4 33 1 95 1 218 1 162 1 167 1 37 1 227 1 226 1 41 1 103 1 104 4 233 1 45 1 
21 1 76 2 48 1 206 1 179 1 53 1 151 1 80 1 119 1 84 1 6 1 85 1 87 1 157 1 58 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 167 1 131 1 37 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
21 1 179 1 151 1 80 1 6 1 84 1 104 4 85 1 198 1 19 1 31 1 160 4 
21 1 76 2 52 1 27 1 179 1 151 1 80 1 180 1 182 1 155 1 84 1 6 1 85 1 157 1 31 1 160 4 162 1 220 1 131 1 64 2 227 1 226 1 104 4 105 1 229 1 198 1 199 2 200 1 19 1 235 1 
21 1 76 2 179 1 151 1 53 1 80 1 119 1 155 1 84 1 6 1 85 1 157 1 31 1 160 4 162 1 167 1 37 1 131 1 227 1 226 1 67 1 104 4 196 1 198 1 199 2 233 1 19 1 
21 1 76 2 179 1 151 1 53 1 80 1 119 1 155 1 84 1 6 1 85 1 157 1 31 1 160 4 162 1 167 1 37 1 131 1 227 1 226 1 67 1 104 4 196 1 198 1 199 2 233 1 19 1 
21 1 76 2 48 1 206 1 179 1 53 1 151 1 80 1 84 1 6 1 85 1 157 1 58 1 215 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 167 1 131 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
54 1 
21 1 76 2 48 1 206 1 179 1 53 1 151 1 80 1 119 1 84 1 6 1 85 1 87 1 157 1 58 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 167 1 131 1 37 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
21 1 76 2 179 1 151 1 53 1 150 1 80 1 119 1 155 1 6 1 85 1 157 1 31 1 160 4 162 1 37 1 131 1 167 1 38 1 67 1 104 4 196 1 198 1 199 2 233 1 19 1 
104 1 179 1 151 1 160 1 80 1 
21 1 76 2 48 1 206 1 179 1 53 1 151 1 80 1 119 1 84 1 85 1 87 1 157 1 58 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 167 1 131 1 37 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
21 1 76 2 48 1 206 1 179 1 53 1 151 1 119 1 84 1 210 1 85 1 87 1 157 1 58 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 167 1 131 1 37 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
21 1 76 2 48 1 147 1 206 1 179 1 53 1 151 1 80 1 119 1 84 1 6 1 85 1 157 1 58 1 31 1 160 4 10 1 124 1 33 1 95 1 218 1 162 1 63 1 167 1 131 1 37 1 14 1 227 1 67 1 226 1 103 1 104 4 72 1 198 1 199 1 18 1 233 1 19 1 73 1 45 1 
177 1 64 1 186 1 
24 1 64 1 
64 1 66 1 
24 1 64 1 
24 1 64 1 
107 1 142 1 36 1 64 1 82 1 120 1 
22 1 97 1 142 1 36 1 64 1 134 1 120 1 
97 1 22 1 142 1 36 1 64 1 134 1 169 1 82 1 120 1 88 1 174 1 204 1 
64 1 66 1 
64 1 66 1 
64 1 79 1 
64 1 99 1 78 1 59 1 
64 1 133 1 175 1 
192 1 162 1 76 2 64 2 116 1 131 1 146 1 27 1 66 1 117 2 226 1 227 1 118 1 43 1 157 1 199 1 122 2 
112 1 
162 1 43 1 76 2 157 1 199 1 131 1 116 1 146 1 27 1 56 1 118 1 227 1 226 1 
162 1 76 3 157 1 199 1 167 2 131 1 38 2 233 1 150 1 53 2 67 2 11 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
162 1 76 3 131 1 167 2 38 2 53 2 150 1 67 2 157 1 199 1 233 1 11 1 
1 1 48 2 51 2 53 1 4 2 117 4 120 2 8 1 58 2 9 2 124 2 188 1 190 2 189 4 62 2 13 1 126 4 129 2 130 1 64 4 131 1 132 1 195 2 67 1 70 2 72 2 199 2 18 4 137 2 73 2 203 2 75 1 142 1 76 3 205 1 145 1 149 2 150 1 82 3 207 2 209 1 157 1 214 2 92 1 91 1 93 4 33 2 95 2 218 2 96 2 35 1 161 2 162 1 164 2 165 2 36 6 167 1 222 2 38 1 39 1 224 2 168 2 225 1 40 1 103 4 171 1 109 3 233 1 172 2 173 1 111 2 45 2 237 1 238 1 
76 2 48 1 51 1 149 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 1 33 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
48 1 51 1 53 1 2 1 5 1 117 3 58 1 124 2 11 1 187 1 129 1 131 1 66 1 67 1 70 1 72 1 199 1 18 2 73 1 203 1 76 2 149 1 79 1 150 1 154 1 207 1 157 1 93 3 33 1 95 1 96 1 218 1 162 1 164 1 167 1 38 1 103 2 230 2 233 1 172 1 111 1 110 1 45 1 
48 1 51 1 53 1 4 1 117 2 120 1 58 1 9 1 124 1 188 1 190 1 189 2 62 1 126 2 129 1 64 2 131 1 195 1 67 1 70 1 72 1 199 1 18 2 137 1 73 1 203 1 76 3 145 1 149 1 150 1 207 1 157 1 214 1 92 1 91 1 93 2 33 1 95 1 218 1 96 1 161 1 162 1 164 1 165 1 36 3 167 1 222 1 38 1 224 1 39 1 168 1 225 1 103 2 109 3 233 1 172 1 111 1 45 1 238 1 
162 1 76 2 131 1 167 1 38 1 53 1 150 1 67 1 157 1 199 1 233 1 11 1 190 1 
48 1 51 1 2 1 4 1 5 1 117 2 120 1 58 1 9 1 124 2 188 1 187 1 190 1 189 2 62 1 126 2 129 1 64 2 195 1 70 1 72 1 18 2 137 1 73 1 203 1 76 1 145 1 149 1 154 1 207 1 84 1 211 1 214 1 92 1 93 2 33 1 95 1 96 1 218 1 161 1 165 1 164 1 36 3 222 1 224 1 39 1 168 1 225 1 103 2 109 3 172 1 111 1 110 1 45 1 238 1 
48 1 51 1 53 1 4 1 117 2 120 1 58 1 9 1 124 1 188 1 190 1 189 2 62 1 126 2 129 1 64 2 131 1 195 1 67 1 70 1 72 1 199 1 18 2 137 1 73 1 203 1 20 1 76 3 145 1 149 1 150 1 207 1 157 1 214 1 92 1 91 1 93 2 33 1 95 1 218 1 96 1 161 1 162 1 164 1 165 1 36 3 167 1 222 1 38 1 224 1 39 1 168 1 225 1 103 2 109 3 233 1 172 1 111 1 45 1 238 1 
48 1 51 1 53 1 4 1 117 2 120 1 58 1 9 1 124 1 188 1 190 1 189 2 62 1 126 2 129 1 64 2 131 1 195 1 67 1 70 1 72 1 199 1 18 2 137 1 73 1 203 1 20 1 76 3 145 1 149 1 207 1 84 1 211 1 157 1 214 1 92 1 93 2 33 1 95 1 218 1 96 1 161 1 162 1 164 1 165 1 36 3 167 1 222 1 39 1 224 1 168 1 225 1 226 1 227 1 103 2 109 3 233 1 172 1 111 1 45 1 238 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 207 1 5 1 117 2 157 1 58 1 124 2 93 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 67 1 103 2 72 1 199 1 18 2 233 1 172 1 110 1 111 1 73 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 1 33 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 117 3 207 1 157 1 58 1 93 3 124 1 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 117 3 207 1 157 1 58 1 93 3 124 1 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 117 3 207 1 157 1 58 1 93 3 124 1 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 154 1 117 2 207 1 5 1 157 1 58 1 93 2 124 1 33 1 95 1 11 1 96 1 218 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 117 3 207 1 157 1 58 1 93 3 124 1 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
126 1 212 1 64 1 9 1 189 1 
126 1 212 1 64 1 189 1 161 1 
126 1 23 1 64 1 9 1 183 1 189 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
1 1 48 1 51 1 2 1 53 1 4 1 5 1 117 2 120 1 58 1 9 1 124 2 187 1 11 1 189 2 62 1 126 2 129 1 64 2 131 1 132 1 134 1 195 1 67 1 70 1 72 1 199 2 18 2 73 1 203 1 204 3 22 1 142 1 76 2 149 1 150 1 154 1 82 3 207 1 209 1 155 1 88 3 157 1 93 2 33 1 95 1 218 1 96 1 161 1 162 1 97 1 164 1 165 1 36 3 167 1 38 1 224 1 169 4 103 2 233 1 172 1 174 3 110 1 111 1 114 1 45 1 
20 1 76 2 48 1 51 1 149 1 150 1 53 1 207 1 117 3 157 1 58 1 124 1 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
48 1 51 1 53 1 5 1 117 3 58 1 124 1 11 1 129 1 131 1 66 1 67 1 70 1 72 1 199 1 18 2 73 1 203 1 76 2 149 1 79 1 150 1 154 1 207 1 157 1 93 3 33 1 95 1 96 1 218 1 162 1 164 1 167 1 38 1 103 2 230 2 233 1 172 1 111 1 110 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 230 2 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 154 1 117 3 207 1 5 1 157 1 58 1 93 3 124 2 33 1 187 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 150 1 53 1 207 1 117 3 157 1 58 1 124 1 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
162 1 76 2 157 1 199 1 167 1 131 1 38 1 233 1 150 1 53 1 67 1 
76 2 48 1 51 1 149 1 150 1 53 1 207 1 117 3 157 1 58 1 124 1 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 79 1 149 1 150 1 53 1 207 1 117 3 157 1 58 1 124 1 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 230 2 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
162 1 76 2 131 1 167 1 38 1 53 1 150 1 67 1 102 1 157 1 199 1 233 1 11 1 
76 2 48 1 51 1 149 1 150 1 53 1 207 1 117 3 157 1 58 1 124 1 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 230 2 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 79 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 79 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
20 1 76 2 48 1 51 1 79 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
76 2 48 1 51 1 149 1 2 1 150 1 53 1 207 1 117 3 157 1 58 1 124 2 93 3 33 1 95 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 70 1 72 1 18 2 199 1 233 1 172 1 73 1 111 1 203 1 45 1 
177 3 178 1 48 1 1 1 51 1 53 2 55 1 117 2 120 1 121 1 58 1 124 1 11 1 62 1 129 1 131 1 64 3 132 1 134 1 195 1 67 2 72 1 18 2 199 4 73 1 203 1 204 2 74 1 22 1 142 1 76 3 149 1 150 1 82 2 207 1 209 1 155 1 88 2 157 2 93 2 33 1 95 1 218 1 96 1 162 1 98 1 97 1 164 1 165 1 36 2 167 2 38 2 224 1 169 3 103 2 233 1 172 1 174 2 110 1 111 1 44 1 114 2 45 1 237 1 
76 2 48 1 51 1 149 1 150 1 53 1 154 1 117 3 207 1 157 1 58 1 124 1 93 3 33 1 95 1 11 1 218 1 96 1 162 1 164 1 129 1 167 1 131 1 38 1 66 1 67 1 103 2 72 1 18 2 199 1 233 1 172 1 73 1 110 1 111 1 203 1 45 1 
141 1 76 2 142 1 177 3 144 1 1 1 77 1 27 1 150 1 152 1 82 2 209 1 155 1 120 1 88 2 157 1 34 1 62 1 162 1 97 1 165 1 166 1 128 1 36 2 131 1 64 4 38 1 132 1 39 1 224 1 134 1 169 3 195 1 68 1 228 1 197 1 199 2 174 2 114 1 204 2 138 1 
176 1 76 2 142 1 177 3 143 1 47 1 144 1 1 1 26 1 27 1 150 1 152 1 82 2 209 1 120 1 88 2 157 1 214 1 125 1 62 1 162 1 97 1 165 1 36 2 131 1 64 4 222 1 38 1 224 1 15 1 168 1 134 1 169 3 195 1 68 1 40 1 228 1 197 1 199 1 137 1 174 2 114 1 204 2 138 1 
76 2 48 1 206 1 53 1 150 1 157 1 58 1 124 1 10 1 33 1 95 1 218 1 162 1 131 1 167 1 38 1 14 1 67 1 103 1 72 1 199 1 18 1 233 1 73 1 45 1 
76 2 48 1 206 1 53 1 150 1 157 1 58 1 124 1 10 1 33 1 95 1 218 1 162 1 131 1 167 1 38 1 14 1 67 1 103 1 72 1 199 1 18 1 233 1 73 1 45 1 
76 2 48 1 206 1 53 1 150 1 157 1 58 1 124 1 10 1 33 1 95 1 218 1 162 1 131 1 167 1 38 1 14 1 67 1 103 1 72 1 199 1 18 1 233 1 73 1 45 1 
76 2 48 1 206 1 53 1 150 1 157 1 58 1 124 1 10 1 33 1 95 1 218 1 162 1 131 1 167 1 38 1 14 1 67 1 103 1 72 1 199 1 18 1 233 1 73 1 45 1 
76 2 48 1 206 1 53 1 150 1 157 1 58 1 124 1 10 1 33 1 95 1 218 1 162 1 131 1 167 1 38 1 14 1 67 1 103 1 72 1 199 1 18 1 233 1 73 1 45 1 
162 1 76 2 157 1 199 1 167 1 131 1 38 1 233 1 206 1 150 1 53 1 10 1 67 1 
12 1 76 1 32 1 139 1 
76 1 148 1 139 1 
127 2 76 1 170 1 181 1 
76 1 159 1 115 1 170 1 181 1 
191 1 139 1 
88 1 174 1 114 1 169 1 204 1 82 1 
142 1 194 1 214 1 222 1 137 1 40 1 120 1 
142 1 1 1 209 1 120 1 
22 1 88 1 174 1 114 1 169 1 204 1 82 1 
164 1 18 1 64 1 93 1 66 1 117 1 
18 1 48 1 
64 1 93 1 66 1 117 1 
164 1 18 2 48 1 81 1 93 1 117 1 217 1 
18 1 48 1 
226 1 
227 1 
226 1 
38 1 
38 1 
150 1 
162 1 193 1 76 2 131 1 27 1 135 1 153 1 226 1 227 1 231 1 157 1 199 1 158 1 236 1 140 1 
162 1 193 1 76 2 131 1 27 1 135 1 153 1 226 1 227 1 106 1 231 1 157 1 199 1 236 1 140 1 
162 2 193 2 76 4 131 2 27 2 135 2 153 2 226 2 227 2 231 2 30 1 157 2 199 2 158 1 236 2 140 2 
0 1 46 1 76 3 177 2 49 1 145 1 27 1 153 1 117 1 120 1 211 1 89 1 157 1 90 1 214 1 158 1 92 1 188 1 62 1 162 1 193 1 165 1 36 2 64 2 131 1 222 1 224 1 39 1 168 1 135 1 225 1 227 1 226 1 195 1 16 1 231 1 109 2 199 2 137 1 236 1 237 1 238 1 140 1 
162 1 131 1 153 1 113 1 56 1 
0 1 46 1 22 1 76 2 142 1 177 2 1 1 49 1 78 1 27 1 153 1 117 1 82 3 209 1 155 1 120 1 89 1 88 3 157 1 62 1 162 1 193 1 97 1 165 1 36 2 64 3 131 1 132 1 224 1 134 1 169 4 135 1 227 1 226 1 195 1 16 1 231 1 199 3 174 3 114 1 204 3 175 1 236 1 237 1 140 1 
162 1 193 1 76 2 64 3 131 1 27 1 135 1 153 1 66 1 117 1 226 1 227 1 16 1 231 1 89 1 157 1 199 1 175 2 236 1 140 1 
162 1 193 1 76 2 131 1 27 1 135 1 153 1 226 1 227 1 231 1 30 1 157 1 199 1 236 1 140 1 
162 2 193 2 76 4 131 2 27 2 135 2 153 2 56 1 226 2 227 2 231 2 30 1 157 2 199 2 113 1 236 2 140 2 
162 1 193 1 76 2 131 1 27 1 135 1 153 1 56 1 226 1 227 1 231 1 157 1 199 1 113 1 236 1 140 1 
162 1 193 1 76 2 64 1 131 1 27 1 135 1 153 1 66 1 117 2 226 1 227 1 16 1 231 1 89 2 157 1 199 1 175 1 236 1 140 1 
0 1 
46 1 177 2 64 2 66 1 
177 2 49 1 64 2 66 1 
216 1 66 1 
66 1 61 1 
76 2 52 1 27 1 117 1 29 1 157 1 189 1 162 1 219 1 220 1 126 1 131 1 64 2 227 1 226 1 100 1 105 1 229 1 71 1 199 1 235 2 175 1 
219 1 235 1 81 1 117 1 29 1 100 1 
22 1 76 2 142 1 1 1 52 1 78 1 27 1 117 1 82 2 209 1 155 1 120 1 88 2 157 1 216 1 61 1 162 1 220 1 97 1 36 1 64 1 131 1 132 1 224 1 134 1 169 3 227 1 226 1 195 1 100 1 42 1 105 1 229 1 71 1 199 3 174 2 235 1 114 1 204 2 175 1 237 1 
76 2 52 1 27 1 81 1 117 1 29 1 7 1 157 1 189 1 162 1 219 1 220 1 126 1 131 1 64 2 133 1 227 1 226 1 100 1 105 1 229 1 71 1 199 1 235 2 175 1 
71 1 
76 3 145 1 52 1 78 2 27 1 117 2 4 1 29 1 120 1 211 1 157 1 214 1 216 1 92 1 188 1 61 1 189 1 162 1 219 1 220 1 126 1 36 2 64 3 131 1 222 1 39 1 224 1 168 1 136 1 225 1 227 1 226 1 195 1 100 2 42 1 105 1 229 1 71 1 109 4 199 2 137 1 235 2 175 2 237 1 238 1 
105 1 229 1 220 1 52 1 235 1 56 1 
1 1 52 1 4 1 117 2 120 1 61 1 189 1 126 1 131 1 64 3 132 1 134 1 195 1 71 1 199 3 204 4 22 1 142 1 76 2 27 1 78 2 82 4 29 1 155 1 209 1 88 4 157 1 216 1 162 1 219 1 97 1 220 1 36 2 224 1 169 5 226 1 227 1 100 2 105 1 42 1 229 1 235 2 174 4 114 1 175 2 237 1 
105 1 229 1 220 1 52 1 235 1 56 1 
76 2 52 1 27 1 117 2 157 1 59 1 162 1 131 1 64 2 136 1 66 1 227 1 226 1 101 1 100 2 105 1 42 1 108 1 199 1 235 1 175 1 
162 1 220 1 76 2 64 2 131 1 52 1 27 1 66 1 117 2 226 1 227 1 100 2 42 1 105 1 229 1 157 1 199 1 59 1 235 1 175 1 

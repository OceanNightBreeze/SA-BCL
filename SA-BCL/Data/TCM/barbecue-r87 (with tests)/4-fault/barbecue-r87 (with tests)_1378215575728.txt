#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 7 227 151 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR javax.servlet.ServletException 7 227 151 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 227 151 59 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z | OPERATOR | 8559 | < -> ==
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | RETURN | 11556 | return null
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 9443 | return null
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer; | RETURN | 6364 | return null
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 1 113 1 108 1 184 1 191 1 79 1 
113 1 108 1 184 1 191 1 79 1 
172 1 187 1 128 2 
208 1 139 1 240 1 63 3 102 1 232 1 64 1 37 1 216 1 113 1 8 2 40 1 175 1 106 1 154 1 155 1 42 1 25 1 238 1 
208 2 63 3 102 1 64 1 232 1 216 1 113 1 8 1 152 1 175 1 154 1 155 1 42 1 43 1 25 1 238 1 
251 1 102 1 64 1 238 1 
225 1 63 2 102 1 64 1 8 1 252 1 154 1 155 2 42 1 25 1 238 1 
208 1 184 1 139 1 63 3 232 1 64 1 166 1 37 1 216 2 113 2 114 1 8 1 40 1 175 1 154 1 106 1 155 1 42 1 25 1 238 1 
208 1 184 1 139 1 63 3 232 1 64 1 166 1 37 1 216 2 113 2 8 1 40 1 175 1 154 1 106 1 155 1 42 1 25 1 238 1 
184 1 63 2 102 1 64 1 166 1 216 1 113 1 53 1 105 1 114 1 8 1 115 1 154 1 155 1 42 1 25 1 238 1 
226 1 184 1 63 2 102 1 64 1 166 1 216 1 113 1 53 1 105 1 114 1 8 1 154 1 155 1 42 1 25 1 238 1 
184 1 63 2 102 1 64 1 166 1 84 1 146 1 216 1 113 1 86 1 53 1 105 1 8 1 154 1 155 1 42 1 25 1 238 1 
184 1 63 2 102 1 64 1 166 1 84 1 146 1 216 1 113 1 86 1 114 1 53 1 105 1 8 1 154 1 155 1 42 1 25 1 238 1 
39 1 8 2 63 3 102 1 154 1 155 1 64 1 42 1 25 2 238 1 
63 3 102 1 64 1 118 2 192 1 155 1 203 1 42 1 25 2 238 1 
63 2 235 1 102 1 118 1 155 2 192 1 64 1 42 1 25 1 238 1 
69 1 63 2 102 1 118 1 155 1 192 1 64 1 42 1 25 1 238 1 
63 2 102 1 118 1 155 1 192 1 64 1 42 1 25 1 238 1 136 1 
208 4 63 3 102 1 82 1 64 1 232 1 216 1 5 1 113 1 52 1 18 1 118 1 192 1 155 1 42 1 94 1 25 1 238 1 
63 2 102 1 47 1 64 1 132 1 118 1 192 1 155 1 42 1 25 1 238 1 
39 1 63 2 102 1 118 1 155 2 192 1 64 1 42 2 25 3 238 1 
208 1 63 4 102 1 64 1 232 1 216 1 5 1 113 1 152 1 118 2 192 1 155 1 42 2 25 2 238 1 206 1 
75 1 163 3 194 1 
163 1 
239 1 61 1 227 1 142 1 230 1 111 4 249 1 54 1 7 1 151 1 203 1 204 4 27 1 158 1 
2 2 125 2 3 1 127 4 5 1 7 1 134 2 142 1 144 2 147 2 151 1 148 2 152 1 19 2 155 2 156 1 25 1 26 1 27 1 157 4 158 1 28 4 161 1 164 1 31 2 165 1 166 1 35 6 167 1 169 1 38 2 170 2 173 2 174 1 43 1 177 1 180 2 183 2 184 1 45 2 46 2 186 2 49 1 189 1 54 1 55 3 192 1 56 2 193 1 60 3 61 1 62 4 63 4 197 4 64 1 65 2 67 2 69 2 203 1 71 1 204 4 205 1 73 3 208 2 210 1 74 2 76 1 77 4 80 2 213 1 87 14 89 1 92 2 222 2 224 2 227 1 100 2 229 2 230 1 232 1 233 2 107 1 237 2 239 1 108 2 242 2 110 1 111 4 112 1 113 2 249 1 118 1 254 4 
61 1 63 3 62 4 197 4 125 2 2 2 64 1 65 2 67 2 127 4 5 1 7 1 69 2 203 1 134 2 71 1 204 4 208 2 74 2 76 1 77 4 144 2 142 1 80 2 213 1 16 1 87 4 147 2 148 2 89 1 151 1 152 1 19 2 92 2 155 2 222 2 156 1 25 1 224 2 26 1 157 4 27 1 158 1 28 4 227 1 100 2 164 1 229 2 31 2 34 1 230 1 232 1 166 1 165 1 35 6 233 2 169 1 167 1 170 2 38 2 173 2 174 1 237 2 107 1 43 1 177 1 180 2 239 1 184 1 108 2 242 2 45 2 46 2 110 1 186 2 111 4 49 1 112 1 249 1 113 2 189 1 54 1 55 3 118 1 56 2 192 1 254 4 193 1 60 3 
239 1 61 1 227 1 142 1 230 1 111 4 249 1 54 1 7 1 151 1 203 1 204 4 27 1 158 1 
61 1 62 4 63 4 125 2 197 5 64 1 65 2 127 3 200 2 5 1 69 2 7 1 203 1 134 2 71 1 135 1 204 4 208 2 74 3 76 1 77 4 142 1 80 2 213 1 16 1 87 4 147 2 148 2 151 1 152 1 92 2 155 2 222 2 25 2 156 1 224 3 26 1 27 1 157 5 158 1 28 4 99 1 227 1 100 3 164 1 229 2 31 3 230 1 232 1 166 1 165 1 35 6 233 2 169 1 167 1 170 3 174 1 237 3 107 1 43 1 177 1 179 1 180 3 239 1 184 1 108 2 242 2 45 2 46 2 110 1 186 2 111 4 49 1 112 1 113 2 249 1 189 1 54 1 55 3 118 2 56 3 192 1 254 4 193 1 119 1 60 3 
61 1 62 4 63 3 125 2 197 5 64 1 65 2 127 3 200 2 5 1 69 2 7 1 203 1 134 2 71 1 135 1 204 4 208 2 74 3 76 1 77 4 142 1 80 2 213 1 16 1 87 4 147 2 148 2 151 1 152 1 92 2 155 2 222 2 25 1 156 1 224 3 26 1 27 1 157 5 158 1 28 4 99 1 227 1 100 3 164 1 229 2 31 3 230 1 232 1 166 1 165 1 35 6 233 2 169 1 167 1 170 3 174 1 237 3 107 1 43 1 177 1 179 1 180 3 239 1 184 1 108 2 242 2 45 2 46 2 110 1 186 2 111 4 49 1 112 1 113 2 249 1 189 1 54 1 55 3 118 1 56 3 192 1 254 4 193 1 119 1 60 3 
239 1 61 1 227 1 142 1 230 1 111 4 249 1 54 1 7 1 151 1 203 1 204 4 27 1 158 1 
227 1 151 1 111 1 204 1 158 1 
61 1 62 4 63 3 125 2 197 5 64 1 65 2 127 3 200 2 5 1 69 2 7 1 11 1 203 1 134 2 71 1 135 1 204 4 208 2 74 3 76 1 77 4 142 1 80 2 213 1 87 4 147 2 148 2 151 1 152 1 221 1 92 2 155 2 222 2 25 1 156 1 224 3 26 1 27 1 157 5 158 1 28 4 99 1 227 1 100 3 164 1 229 2 31 3 230 1 232 1 166 1 165 1 35 6 233 2 169 1 167 1 170 3 174 1 237 3 107 1 43 1 177 1 179 1 180 3 239 1 184 1 108 2 242 2 45 2 46 2 110 1 186 2 111 4 49 1 112 1 113 2 249 1 189 1 55 3 118 1 56 3 192 1 254 4 193 1 119 1 60 3 
61 1 62 4 63 3 125 2 197 5 64 1 65 2 127 3 200 2 5 1 69 2 7 1 202 1 11 1 203 1 134 2 71 1 135 1 204 4 208 2 74 3 76 1 77 4 142 1 80 2 213 1 87 4 147 2 148 2 152 1 221 1 92 2 155 2 222 2 25 1 156 1 224 3 26 1 27 1 157 5 158 1 28 4 99 1 227 1 100 3 164 1 229 2 31 3 230 1 232 1 166 1 165 1 35 6 233 2 169 1 167 1 170 3 174 1 237 3 107 1 43 1 177 1 179 1 180 3 239 1 184 1 108 2 242 2 45 2 46 2 110 1 186 2 111 4 49 1 112 1 113 2 249 1 189 1 55 3 118 1 56 3 192 1 254 4 193 1 119 1 60 3 
125 2 2 2 127 8 5 1 7 1 11 1 12 1 134 2 143 1 142 1 144 2 147 2 150 1 151 1 148 2 153 1 152 1 19 2 22 1 155 9 156 8 25 8 26 8 157 8 27 1 158 1 28 6 164 1 31 6 166 1 165 1 35 6 169 1 167 8 170 6 38 2 173 2 174 1 43 1 177 8 179 4 180 6 184 1 185 1 45 2 46 2 186 2 49 8 189 1 54 1 55 3 192 8 56 6 193 1 59 1 60 3 61 1 63 17 62 6 197 8 64 8 66 1 65 2 67 2 200 2 201 1 69 2 203 1 71 1 204 4 208 2 74 6 76 1 77 4 80 2 213 1 87 6 89 1 221 1 92 2 222 2 224 6 99 4 227 1 100 6 229 2 230 1 232 1 233 2 237 6 107 1 239 1 108 2 241 1 242 2 110 1 111 4 112 1 249 1 113 2 118 8 254 4 119 4 
1 1 2 2 125 2 127 4 7 1 8 1 134 2 13 2 140 2 142 1 144 2 16 1 145 1 17 1 147 2 151 1 148 2 149 1 152 1 19 2 154 1 155 2 25 1 156 1 26 1 27 1 157 4 158 1 159 2 28 4 164 1 31 2 34 1 165 1 166 1 35 6 167 1 169 1 38 2 170 2 173 2 175 1 174 1 41 2 43 1 176 1 177 1 180 2 184 1 45 2 46 2 186 2 49 1 189 1 54 1 55 3 190 1 56 2 193 1 60 3 61 1 62 4 63 3 197 4 64 1 65 2 67 2 69 2 71 1 204 4 208 2 74 2 76 1 77 4 80 2 213 1 87 4 219 1 89 1 90 2 91 1 92 2 222 2 224 2 227 1 100 2 229 2 228 1 230 1 232 1 233 2 107 1 237 2 239 1 108 2 242 2 110 1 111 4 112 1 113 2 249 1 117 1 254 4 
109 1 
125 2 127 3 5 1 7 1 11 1 134 2 135 1 142 1 16 1 147 2 151 1 148 2 152 1 155 2 156 1 25 1 26 1 157 5 27 1 158 1 28 4 164 1 31 3 165 1 166 1 35 6 167 1 169 1 170 3 174 1 43 2 177 1 179 1 180 3 184 1 45 2 46 2 186 2 49 1 189 1 54 1 55 3 192 1 56 3 193 1 60 3 61 1 63 3 62 4 197 5 64 1 66 1 65 2 200 2 69 2 203 1 71 1 204 4 208 3 74 3 76 1 77 4 80 2 213 1 87 4 221 1 92 2 222 2 224 3 99 1 227 1 100 3 229 2 230 1 232 1 233 2 107 1 237 3 239 1 108 2 242 2 110 1 111 4 112 1 249 1 113 2 118 1 254 4 119 1 
87 1 210 1 243 1 
113 1 87 1 184 1 55 1 35 1 57 1 
87 1 113 1 88 1 184 1 105 1 53 1 35 1 
184 1 48 1 35 1 113 1 87 1 86 1 53 1 105 1 88 1 70 1 55 1 95 1 
87 1 123 1 
87 1 123 1 
87 1 253 1 
250 1 87 1 
87 1 123 1 
250 1 87 1 
250 1 87 1 
160 1 87 1 36 1 4 1 
87 1 138 1 58 1 
137 1 63 2 123 1 231 2 64 1 49 1 248 1 87 2 118 1 21 1 93 1 192 1 155 1 254 2 25 1 72 1 96 1 
0 1 
248 1 137 1 251 1 63 2 21 1 118 1 155 1 192 1 64 1 49 1 72 1 25 1 96 1 
101 1 63 3 64 1 49 1 167 2 8 2 154 1 155 1 25 1 156 2 177 1 26 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 104 2 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
101 1 63 2 64 1 49 1 167 1 8 1 154 1 155 1 25 1 156 1 177 1 26 1 195 1 
167 1 8 1 63 2 154 1 155 1 64 1 49 1 156 1 25 1 26 1 177 1 
101 1 63 3 64 1 49 1 167 2 8 2 154 1 155 1 25 1 156 2 177 1 26 2 
1 1 62 4 63 3 2 2 125 2 197 4 64 1 65 2 127 2 69 2 8 1 71 1 134 2 13 2 208 1 140 2 74 2 77 4 80 2 145 1 17 1 87 4 219 1 147 2 149 1 148 2 90 2 91 1 154 1 92 2 155 2 222 2 25 1 156 1 26 1 224 2 157 4 159 2 28 4 225 1 100 2 228 1 229 2 31 2 232 1 166 1 35 6 233 2 169 1 167 1 170 2 41 2 175 1 237 2 176 1 43 1 177 1 180 2 184 1 108 2 242 2 45 2 46 2 110 1 186 2 49 1 113 2 189 1 55 3 190 1 117 1 56 2 254 4 60 3 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 67 1 167 1 170 1 38 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 104 2 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
62 2 63 3 2 1 125 1 197 2 64 1 65 1 127 1 69 1 8 1 71 1 134 1 13 1 208 1 140 1 74 1 77 2 80 1 87 2 147 1 148 1 90 1 154 1 92 1 155 1 222 1 25 1 156 1 26 1 224 1 157 2 159 1 28 2 100 1 228 1 229 1 31 1 232 1 35 3 233 1 167 1 170 1 41 1 175 1 237 1 43 1 177 1 180 1 108 1 242 1 45 1 46 1 110 1 186 1 49 1 113 1 56 1 254 2 60 3 
140 1 101 1 63 2 64 1 49 1 167 1 8 1 154 1 155 1 25 1 156 1 177 1 26 1 
62 2 63 1 2 1 125 1 197 2 65 1 127 2 67 1 5 1 69 1 203 1 134 1 71 1 13 1 208 1 140 1 74 1 77 2 144 1 80 1 87 2 147 1 148 1 90 1 19 1 92 1 222 1 224 1 157 2 159 1 28 2 100 1 228 1 229 1 31 1 232 1 35 3 233 1 38 1 170 1 173 1 41 1 237 1 43 1 180 1 108 1 242 1 45 1 46 1 110 1 186 1 113 1 56 1 254 2 60 3 
62 2 63 3 2 1 125 1 197 2 64 1 65 1 66 1 127 1 69 1 8 1 71 1 134 1 13 1 208 1 140 1 74 1 77 2 80 1 87 2 147 1 148 1 90 1 154 1 92 1 155 1 222 1 25 1 156 1 26 1 224 1 157 2 159 1 28 2 100 1 228 1 229 1 31 1 232 1 35 3 233 1 167 1 170 1 41 1 175 1 237 1 43 1 177 1 180 1 108 1 242 1 45 1 46 1 110 1 186 1 49 1 113 1 56 1 254 2 60 3 
62 2 63 3 2 1 125 1 197 2 64 1 65 1 66 1 127 1 5 1 69 1 203 1 71 1 134 1 13 1 208 1 140 1 74 1 77 2 80 1 87 2 147 1 148 1 90 1 92 1 155 1 222 1 25 1 156 1 26 1 224 1 157 2 159 1 28 2 100 1 228 1 229 1 31 1 232 1 35 3 233 1 167 1 170 1 41 1 237 1 43 1 177 1 180 1 108 1 242 1 45 1 46 1 110 1 186 1 49 1 113 1 118 1 56 1 192 1 254 2 60 3 
100 1 63 2 101 1 31 1 197 2 125 1 64 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 2 144 1 80 1 49 1 147 1 148 1 19 1 92 1 154 1 56 1 155 1 222 1 254 2 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 233 1 127 1 67 1 167 1 170 1 38 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 67 1 167 1 170 1 38 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 2 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 2 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
28 1 87 1 62 1 2 1 245 1 
28 1 87 1 62 1 229 1 245 1 
28 1 87 1 130 1 62 1 2 1 198 1 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
62 2 63 2 197 2 2 1 125 1 64 1 65 1 127 2 67 1 69 1 70 3 8 1 134 1 74 1 77 2 144 1 80 1 146 1 87 2 86 4 88 1 147 1 148 1 19 1 92 1 154 1 155 2 222 1 25 1 156 1 26 1 224 1 157 2 95 3 28 2 100 1 229 1 101 1 31 1 166 1 35 3 233 1 167 1 169 1 170 1 38 1 105 1 173 1 174 1 237 1 177 1 180 1 184 1 108 1 242 1 45 1 46 1 48 3 186 1 49 1 113 1 189 1 53 1 55 3 56 1 254 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 66 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 65 1 233 1 104 2 127 1 67 1 167 1 170 1 38 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 233 1 104 2 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 233 1 127 2 67 1 167 1 170 1 38 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 144 1 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 233 1 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 104 2 127 1 167 1 170 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 66 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
100 1 63 2 31 1 123 1 197 2 125 1 64 1 65 1 233 1 127 2 167 1 170 1 8 1 173 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
63 3 197 2 125 1 64 1 127 1 69 1 70 2 8 2 134 1 206 1 207 1 210 3 74 1 15 1 77 2 80 1 146 2 87 3 86 3 88 1 147 1 148 1 19 1 154 1 92 1 155 4 222 1 25 2 156 2 26 2 224 1 157 2 95 2 225 1 226 1 100 1 101 1 31 1 166 1 35 2 233 1 167 2 169 1 170 1 105 1 174 1 237 1 177 1 44 1 180 1 184 1 242 1 45 1 46 1 48 2 186 1 49 1 51 1 113 1 189 1 53 1 55 2 56 1 254 2 
100 1 63 2 101 1 31 1 123 1 197 2 125 1 64 1 233 1 127 1 167 1 170 1 38 1 8 1 237 1 177 1 180 1 74 1 242 1 45 1 77 3 80 1 49 1 147 1 148 1 19 1 154 1 92 1 56 1 155 1 222 1 254 3 156 1 25 1 26 1 224 1 157 2 
29 1 63 2 32 1 122 1 64 1 166 1 35 2 37 1 103 1 169 1 105 1 70 2 69 1 8 1 40 1 106 1 174 1 134 1 208 1 139 1 184 1 210 3 46 1 48 2 186 1 214 1 49 1 83 1 146 1 86 3 113 1 87 4 189 1 53 1 115 1 55 2 154 1 21 1 155 2 25 1 95 2 
29 1 63 2 32 1 122 1 64 1 35 2 103 1 169 1 105 1 70 2 69 1 8 1 132 1 41 1 176 1 134 1 13 1 184 1 210 3 141 1 46 1 47 1 48 2 186 1 214 1 49 1 244 1 83 1 146 1 86 3 113 1 87 4 189 1 53 1 116 1 90 1 55 2 154 1 21 1 155 1 25 1 255 1 159 1 95 2 
99 2 100 3 63 2 31 3 125 1 197 4 64 1 65 1 66 1 233 1 127 3 128 1 167 1 170 3 8 1 237 3 177 1 179 1 180 3 74 3 242 1 45 1 77 2 80 1 49 1 147 1 148 1 92 1 154 1 155 1 56 3 222 1 254 2 25 1 156 1 224 3 119 1 26 1 157 4 
28 1 99 1 100 1 62 1 63 2 31 1 123 1 197 1 64 1 127 1 200 1 167 1 170 1 8 1 237 1 177 1 179 1 180 1 74 1 49 1 246 1 245 1 87 1 154 1 155 1 56 1 25 1 156 1 224 1 119 1 26 1 157 1 
99 3 100 3 63 2 31 3 197 3 64 1 127 3 167 1 170 3 8 1 237 3 177 1 179 1 180 3 74 3 14 1 49 1 154 1 155 1 56 3 25 1 156 1 224 3 119 1 26 1 157 3 
99 1 100 1 63 2 31 1 197 1 64 1 127 1 167 1 170 1 8 1 237 1 177 1 179 1 136 1 180 1 74 1 49 1 154 1 155 1 56 1 25 1 156 1 224 1 119 1 26 1 157 1 
99 1 63 2 64 1 49 1 167 1 8 1 154 1 155 1 25 1 156 1 177 1 26 1 179 1 136 1 
99 1 100 1 63 2 31 1 197 1 64 1 127 1 167 1 170 1 8 1 237 1 177 1 179 1 180 1 74 1 49 1 154 1 155 1 56 1 25 1 156 1 224 1 119 1 26 1 157 1 
162 1 63 1 212 1 223 1 
218 1 240 1 63 1 50 1 178 1 
63 1 121 1 223 1 
240 1 63 1 178 1 199 2 
182 1 223 1 
86 1 70 1 55 1 48 1 146 1 95 1 
169 1 113 1 189 1 184 1 
86 1 88 1 70 1 55 1 48 1 146 1 95 1 
184 1 113 1 90 1 41 1 176 1 23 1 159 1 
74 1 77 1 254 1 222 1 157 2 128 1 196 1 
74 1 157 1 
87 1 77 1 123 1 254 1 222 1 157 1 
74 1 157 1 
87 1 77 1 123 1 254 1 
192 1 
118 1 
118 1 
8 1 
154 1 
8 1 
63 2 78 1 64 1 49 1 215 1 199 1 68 1 6 1 131 1 171 1 220 1 21 1 155 1 25 1 136 1 
63 4 78 2 64 2 49 2 215 2 199 2 188 1 68 2 6 2 131 2 171 2 220 2 21 2 155 2 24 1 25 2 
63 2 78 1 64 1 49 1 215 1 199 1 68 1 6 1 131 1 171 1 220 1 21 1 155 1 24 1 25 1 
138 1 63 2 78 1 123 1 124 2 64 1 49 1 215 1 199 1 87 1 68 1 6 1 131 1 171 1 220 1 236 1 21 1 155 1 254 2 25 1 
98 1 
225 1 98 1 228 1 63 3 124 1 64 1 232 1 35 2 199 1 168 1 6 1 68 1 69 1 171 1 131 1 236 1 133 1 41 1 175 1 43 1 134 1 71 1 13 1 208 1 210 2 78 1 46 1 110 1 186 1 49 1 215 1 87 2 113 1 90 1 20 1 220 1 21 1 155 2 254 1 24 1 25 1 159 1 60 2 
234 1 6 1 251 1 64 1 49 1 
160 1 225 1 98 1 63 2 124 1 64 1 166 1 35 2 199 1 169 1 6 1 68 1 105 1 70 3 69 1 171 1 131 1 236 1 133 1 174 1 134 1 138 1 184 1 210 2 78 1 46 1 48 3 186 1 49 1 215 1 146 1 86 4 87 3 113 1 88 1 189 1 53 1 55 3 20 1 220 1 21 1 155 3 254 1 25 1 95 3 
63 2 78 1 64 1 49 1 215 1 199 1 234 1 68 1 6 1 251 1 131 1 171 1 220 1 21 1 155 1 25 1 
87 2 210 2 123 1 133 1 
87 2 210 2 20 1 123 1 
138 2 63 2 78 1 123 1 124 1 64 1 49 1 215 1 199 1 87 3 68 1 6 1 131 1 171 1 220 1 236 1 21 1 155 1 254 1 25 1 
63 2 78 1 64 1 49 1 215 1 199 1 188 1 68 1 6 1 131 1 171 1 220 1 21 1 155 1 25 1 
63 4 78 2 64 2 49 2 215 2 199 2 234 1 188 1 68 2 6 2 251 1 131 2 171 2 220 2 21 2 155 2 25 2 
209 1 138 1 63 2 211 2 123 1 81 1 64 1 126 1 49 1 4 1 199 1 247 1 87 2 131 1 21 1 155 1 254 2 25 1 256 1 120 1 
160 1 225 1 63 2 33 1 64 1 126 1 166 1 35 1 199 1 169 1 105 1 70 2 69 1 131 1 9 1 174 1 209 1 138 1 184 1 211 1 46 1 48 2 81 1 49 1 146 1 247 1 85 1 87 1 86 3 113 1 88 1 189 1 53 1 55 2 21 1 155 3 254 1 25 1 95 2 120 1 256 1 
209 1 251 1 81 1 120 1 256 1 247 1 
63 2 30 1 123 1 64 1 126 1 199 1 4 1 129 1 131 1 209 1 138 1 211 2 81 1 49 1 217 1 87 2 21 1 155 1 254 2 25 1 256 1 
33 1 123 1 
9 1 123 1 
28 1 209 1 138 1 62 1 63 2 211 1 81 2 64 1 49 1 199 1 247 1 87 2 85 1 131 1 10 1 21 1 155 1 254 1 25 1 97 1 256 1 120 1 
211 1 10 1 81 1 254 1 128 1 97 1 
28 1 63 2 62 1 64 1 199 1 128 1 131 1 10 1 209 1 138 1 211 1 81 2 49 1 187 1 247 1 85 1 87 2 21 1 155 1 254 1 25 1 58 1 120 1 256 1 97 1 
85 1 
225 1 28 1 160 2 228 1 62 1 63 3 33 1 64 1 232 1 126 1 35 2 199 1 69 1 131 1 9 1 10 1 41 1 175 1 43 1 71 1 13 1 209 1 208 1 138 2 108 1 211 2 46 1 110 1 81 2 49 1 247 1 217 1 85 1 87 3 113 1 90 1 21 1 155 2 254 2 25 1 159 1 97 1 60 4 120 1 256 1 
209 1 251 1 81 1 120 1 256 1 247 1 
63 2 62 1 64 1 126 1 199 1 69 1 70 4 131 1 9 1 10 1 209 1 138 2 211 2 81 2 146 1 86 5 87 3 85 1 88 1 21 1 155 3 25 1 95 4 97 1 225 1 160 2 28 1 33 1 166 1 35 2 169 1 105 1 174 1 184 1 108 1 46 1 48 4 49 1 247 1 113 1 53 1 189 1 55 4 254 2 256 1 120 1 

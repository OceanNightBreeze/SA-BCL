#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 144 125 223 48 75 52 250 86 175 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 144 125 223 48 75 52 250 86 175 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 144 125 223 48 75 52 250 86 175 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 144 125 223 48 75 52 250 86 175 159 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 144 125 223 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 80 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 126 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 50 126 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V ERROR java.lang.StringIndexOutOfBoundsException 212 14 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 19114 | 2 -> 3
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z | CONDITION | 11464 | if (x) -> if (!x)
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
239 1 57 1 241 1 9 1 10 1 189 1 
239 1 57 1 241 1 9 1 10 1 
152 1 235 2 199 1 
138 1 183 1 125 1 153 1 185 1 215 1 242 1 144 1 188 1 201 1 173 1 146 1 131 3 116 1 104 1 9 1 206 2 74 1 207 1 
138 1 183 1 125 2 215 1 242 1 188 1 144 1 201 1 146 1 131 3 223 1 104 1 133 1 9 1 206 1 74 1 
146 1 138 1 131 2 104 1 215 1 206 1 172 1 242 1 188 1 201 1 
138 1 183 1 125 4 97 1 215 1 242 1 156 1 188 1 144 1 3 1 201 1 146 1 131 3 104 1 226 1 9 1 206 1 74 1 
138 1 33 1 168 1 215 1 242 1 188 1 201 1 146 1 131 2 104 1 206 1 
104 1 155 1 242 1 201 1 
138 1 215 1 242 1 188 2 201 1 146 1 113 1 131 2 104 1 46 1 206 1 
138 1 126 1 183 1 125 1 153 1 185 1 215 1 242 1 144 1 188 1 201 1 173 1 146 1 131 3 116 1 9 2 150 1 206 1 74 2 10 1 
138 1 126 1 183 1 125 1 153 1 185 1 215 1 242 1 144 1 188 1 201 1 173 1 146 1 131 3 116 1 9 2 206 1 74 2 10 1 
138 1 126 1 165 1 140 1 215 1 216 1 242 1 188 1 201 1 146 1 131 2 104 1 9 1 206 1 150 1 74 1 10 1 
138 1 126 1 165 1 140 1 215 1 242 1 188 1 201 1 146 1 131 2 104 1 249 1 9 1 206 1 150 1 74 1 10 1 
138 1 240 1 126 1 165 1 140 1 215 1 242 1 188 1 201 1 146 1 131 2 104 1 119 1 227 1 9 1 206 1 74 1 10 1 
138 1 240 1 126 1 165 1 140 1 215 1 242 1 188 1 201 1 146 1 131 2 104 1 119 1 227 1 9 1 150 1 206 1 74 1 10 1 
138 1 215 2 242 1 188 1 201 1 146 1 131 3 104 1 206 2 12 1 
215 2 66 2 242 1 188 1 201 1 100 1 146 1 202 1 131 3 104 1 
146 1 131 2 104 1 28 1 215 1 66 1 242 1 188 2 100 1 201 1 
194 1 215 1 66 1 242 1 188 1 201 1 100 1 146 1 131 2 104 1 
215 3 66 1 242 1 188 2 201 1 100 1 146 2 131 2 104 1 12 1 
125 1 215 2 66 2 242 1 188 1 144 1 201 1 100 1 146 2 131 4 247 1 104 1 149 1 133 1 9 1 74 1 
91 3 114 1 229 1 
91 1 
198 1 
124 1 0 1 2 2 125 3 1 2 126 1 128 3 129 4 131 3 5 2 133 1 9 2 10 1 136 1 12 1 14 2 17 3 15 1 19 1 141 2 143 1 144 1 25 2 24 1 147 1 26 3 36 1 37 1 154 2 40 1 42 2 43 1 160 1 47 3 46 1 162 1 163 4 48 1 167 3 50 2 51 2 171 1 53 1 52 1 54 1 175 1 176 5 177 1 180 2 181 1 64 1 66 1 187 1 188 4 69 1 70 1 190 1 75 1 194 2 195 3 80 2 82 3 201 1 202 1 204 1 86 1 208 14 210 1 93 1 94 3 95 2 214 2 215 2 217 2 219 3 220 1 100 1 221 1 223 2 103 4 224 2 106 4 233 3 234 2 236 1 107 3 241 2 110 2 111 4 243 3 245 1 247 1 115 2 117 5 120 6 122 4 250 1 
124 1 60 2 181 1 126 1 125 3 64 1 66 1 129 2 188 3 131 3 69 1 70 1 133 1 8 2 9 2 73 2 190 1 10 1 191 1 75 1 12 1 194 2 195 4 196 2 24 1 143 1 144 1 81 1 201 1 202 1 204 1 205 1 86 1 31 1 208 8 210 1 94 4 215 2 37 1 41 4 100 1 43 1 221 1 102 1 223 2 160 1 103 4 231 3 236 1 237 2 163 4 48 1 109 4 241 2 50 2 111 2 53 1 52 1 245 1 244 1 174 4 246 2 175 1 247 1 120 4 121 2 122 4 59 1 250 1 
124 1 181 1 1 1 125 1 128 2 66 1 188 3 129 2 131 3 69 1 5 1 70 1 9 1 190 1 75 1 136 1 12 1 194 1 14 1 15 1 141 2 25 1 143 1 144 1 82 1 201 1 202 1 26 1 86 1 88 1 208 2 34 1 210 1 212 1 95 1 94 2 214 2 154 1 215 2 37 1 38 1 217 1 40 1 219 1 42 1 100 1 43 1 221 1 223 1 224 1 103 4 106 1 105 1 233 1 47 1 234 1 236 1 163 4 107 1 48 1 238 1 167 1 241 1 49 1 50 1 51 2 110 1 111 2 53 1 52 1 243 1 175 1 247 1 117 1 176 1 120 2 122 1 250 1 
124 1 181 1 1 1 125 1 128 2 66 1 188 3 129 2 131 3 69 1 5 1 70 1 9 1 190 1 75 1 136 1 12 1 194 1 14 1 15 1 141 2 25 1 143 1 144 1 82 1 201 1 202 1 26 1 86 1 88 1 208 2 34 1 210 1 212 1 95 1 94 2 214 2 154 1 215 2 37 1 38 1 217 1 40 1 219 1 42 1 100 1 43 1 221 1 223 1 224 1 103 4 106 1 105 1 233 1 47 1 234 1 236 1 163 4 107 1 48 1 238 1 167 1 241 1 49 1 50 1 51 2 110 1 111 2 53 1 52 1 243 1 175 1 247 1 117 1 176 1 120 2 122 1 250 1 
124 1 180 2 181 1 0 1 126 1 1 2 125 2 128 3 64 1 66 1 129 4 188 3 131 3 69 1 5 2 70 1 133 1 9 2 190 1 10 1 75 1 136 1 12 1 194 2 137 1 14 2 195 3 19 1 141 2 80 2 24 1 25 2 144 1 143 1 82 3 201 1 202 1 204 1 26 3 86 1 208 4 210 1 95 2 94 3 214 2 36 1 154 2 215 2 37 1 217 2 219 3 220 1 42 2 100 1 43 1 221 1 223 1 160 1 224 2 103 4 106 4 234 2 233 3 47 3 236 1 163 4 107 3 48 1 241 2 167 3 50 2 51 2 110 2 111 4 171 1 53 1 52 1 243 3 175 1 115 2 247 1 117 5 120 6 176 5 122 4 250 1 
124 1 180 2 181 1 126 1 1 2 125 2 128 3 64 1 66 2 129 4 188 5 131 4 69 1 5 2 70 1 133 1 9 2 190 1 10 1 75 1 136 1 12 1 194 2 14 2 195 3 19 1 15 1 141 3 80 2 24 1 25 2 144 1 143 1 82 3 201 1 202 1 204 1 26 3 149 1 86 1 208 4 210 1 95 2 94 3 214 3 36 1 154 2 215 4 37 1 217 2 40 1 219 3 42 2 100 1 43 1 221 1 223 1 160 1 224 2 103 4 106 4 234 2 233 3 47 3 46 1 162 1 236 1 163 4 107 3 48 1 241 2 167 3 50 2 51 3 110 2 111 4 171 1 52 1 53 1 243 3 245 1 175 1 115 2 247 1 117 5 120 6 176 5 122 4 250 1 
124 1 180 2 181 1 126 1 1 2 125 2 128 3 64 1 66 1 129 4 188 3 131 3 69 1 5 2 70 1 133 1 9 2 190 1 10 1 75 1 136 1 12 1 194 2 14 2 195 3 19 1 15 1 141 2 80 2 24 1 25 2 144 1 143 1 82 3 201 1 202 1 204 1 26 3 86 1 208 4 210 1 95 2 94 3 214 2 36 1 154 2 215 2 37 1 217 2 40 1 219 3 42 2 100 1 43 1 221 1 223 1 160 1 224 2 103 4 106 4 234 2 233 3 47 3 162 1 236 1 163 4 107 3 48 1 241 2 167 3 50 2 51 2 110 2 111 4 171 1 53 1 52 1 243 3 245 1 175 1 115 2 247 1 117 5 120 6 176 5 122 4 250 1 
124 1 181 1 143 1 175 1 202 1 103 4 69 1 70 1 86 1 190 1 236 1 163 4 
124 1 181 1 1 1 125 1 183 1 128 2 188 3 129 2 131 3 69 1 5 1 70 1 9 1 190 1 75 1 136 1 12 1 194 1 138 1 14 1 141 2 15 1 143 1 144 1 25 1 82 1 201 1 26 1 86 1 206 1 88 1 208 2 34 1 210 1 212 1 95 1 94 2 214 2 154 1 215 2 37 1 38 1 217 1 40 1 219 1 42 1 43 1 221 1 223 1 224 1 103 4 106 1 105 1 233 1 47 1 234 1 236 1 163 4 107 1 48 1 238 1 167 1 49 1 241 1 50 1 51 2 110 1 111 2 53 1 52 1 243 1 175 1 117 1 176 1 120 2 122 1 250 1 
175 1 103 1 86 1 236 1 163 1 
124 1 180 2 181 1 0 1 126 1 1 2 125 2 128 3 64 1 66 1 129 4 188 3 131 3 69 1 5 2 70 1 133 1 9 2 190 1 10 1 75 1 136 1 12 1 194 2 14 2 195 3 19 1 15 1 141 2 80 2 24 1 25 2 144 1 82 3 201 1 202 1 204 1 26 3 86 1 208 4 210 1 95 2 94 3 214 2 36 1 154 2 215 2 37 1 217 2 40 1 219 3 220 1 42 2 100 1 43 1 221 1 223 1 160 1 224 2 103 4 106 4 234 2 233 3 47 3 162 1 236 1 163 4 107 3 48 1 241 2 167 3 50 2 51 2 110 2 111 4 171 1 53 1 52 1 243 3 175 1 115 2 247 1 117 5 120 6 176 5 122 4 250 1 
124 1 180 2 181 1 0 1 126 1 1 2 125 2 128 3 64 1 66 1 129 4 188 3 131 3 69 1 5 2 70 1 133 1 9 2 134 1 190 1 10 1 75 1 136 1 12 1 194 2 14 2 195 3 19 1 15 1 141 2 80 2 24 1 25 2 144 1 82 3 201 1 202 1 204 1 26 3 86 1 208 4 210 1 95 2 94 3 214 2 36 1 154 2 215 2 37 1 217 2 40 1 219 3 220 1 42 2 100 1 43 1 221 1 223 1 160 1 224 2 103 4 106 4 234 2 233 3 47 3 162 1 236 1 163 4 107 3 48 1 241 2 167 3 50 2 51 2 110 2 111 4 171 1 53 1 52 1 243 3 115 2 247 1 117 5 120 6 176 5 122 4 250 1 
124 1 125 2 1 2 126 1 0 1 128 4 129 5 131 5 5 2 133 1 9 2 10 1 136 2 12 1 14 2 141 3 15 1 19 1 143 1 144 1 25 2 24 1 26 3 34 1 36 1 37 1 154 2 38 1 40 1 159 1 42 2 43 1 160 1 47 3 163 4 48 1 49 1 167 3 50 2 51 3 171 1 53 2 52 1 175 1 176 5 180 2 181 1 64 1 66 2 188 4 69 1 70 1 190 1 75 1 193 1 194 2 195 3 80 2 82 3 201 2 202 1 204 1 86 1 88 1 208 5 210 1 212 1 94 3 95 2 214 3 215 3 217 2 219 3 220 1 100 2 221 1 223 1 103 4 224 2 106 4 105 1 233 3 234 2 236 1 107 3 238 1 241 2 110 2 111 5 243 3 247 1 115 2 117 5 120 6 122 4 250 1 
182 1 54 1 208 1 
18 1 208 1 
78 1 208 1 
18 1 208 1 
18 1 208 1 
78 1 208 1 
165 1 195 1 140 1 55 1 83 1 120 1 227 1 27 1 9 1 29 1 10 1 208 1 
195 1 120 1 9 1 22 1 10 1 208 1 
165 1 120 1 140 1 29 1 9 1 10 1 208 1 
78 1 208 1 
178 1 208 1 
90 1 109 1 72 1 208 1 
41 1 77 1 208 1 
78 1 215 1 196 1 66 1 39 1 53 1 188 1 218 1 201 1 100 1 131 2 44 1 203 1 225 1 84 2 122 2 208 2 
101 1 
155 1 215 1 196 1 66 1 53 1 188 1 218 1 201 1 100 1 131 2 44 1 203 1 225 1 
138 1 214 2 141 2 215 1 51 2 200 1 53 1 188 1 201 1 131 3 206 2 136 1 
126 1 1 2 183 1 125 1 128 2 64 1 65 1 129 4 188 2 4 1 131 3 5 2 6 2 9 2 10 1 76 1 136 1 13 2 194 2 138 1 14 2 195 3 141 1 20 2 80 2 24 1 144 1 25 2 82 2 201 1 204 1 26 2 206 1 32 1 208 4 209 1 210 1 94 3 95 2 213 2 214 1 154 2 215 1 217 2 99 1 219 2 42 2 223 1 45 1 224 2 106 4 234 2 46 1 47 2 233 2 107 2 238 2 164 1 241 2 167 2 50 2 51 1 110 2 111 4 53 1 243 2 112 1 115 2 56 2 117 4 118 1 120 6 176 4 122 4 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 166 2 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
1 1 183 1 125 1 128 1 64 1 129 2 188 1 131 3 5 1 6 1 9 1 76 1 136 1 13 1 194 1 138 1 14 1 141 1 20 1 80 1 144 1 25 1 82 1 201 1 26 1 206 1 208 2 210 1 94 3 95 1 213 1 214 1 215 1 154 1 217 1 219 1 42 1 223 1 224 1 106 2 234 1 47 1 233 1 107 1 238 1 241 1 167 1 50 1 51 1 110 1 111 2 53 1 243 1 115 1 56 1 117 2 120 3 176 2 122 2 
138 1 214 1 141 1 215 1 51 1 200 1 53 1 188 1 201 1 131 2 206 1 136 1 13 1 
34 1 1 1 125 1 210 1 212 1 95 1 94 2 128 2 154 1 38 1 217 1 129 2 219 1 42 1 131 1 223 1 224 1 5 1 106 1 105 1 9 1 233 1 234 1 47 1 107 1 238 1 194 1 14 1 167 1 241 1 50 1 110 1 111 2 144 1 25 1 243 1 82 1 202 1 247 1 117 1 26 1 176 1 120 2 122 1 88 1 208 2 
1 1 183 1 125 1 128 1 64 1 187 1 129 2 188 1 131 3 5 1 6 1 9 1 76 1 136 1 13 1 194 1 138 1 14 1 141 1 20 1 80 1 144 1 25 1 82 1 201 1 26 1 206 1 208 2 210 1 94 3 95 1 213 1 214 1 154 1 215 1 217 1 219 1 42 1 223 1 224 1 106 2 234 1 47 1 233 1 107 1 238 1 241 1 167 1 50 1 51 1 110 1 111 2 53 1 243 1 115 1 56 1 117 2 120 3 176 2 122 2 
1 1 125 1 128 1 64 1 66 1 187 1 129 2 188 1 131 3 5 1 6 1 9 1 76 1 136 1 13 1 194 1 14 1 141 1 20 1 80 1 144 1 25 1 82 1 201 1 202 1 26 1 208 2 210 1 94 3 95 1 213 1 214 1 154 1 215 1 217 1 219 1 100 1 42 1 223 1 224 1 106 2 234 1 47 1 233 1 107 1 238 1 241 1 167 1 50 1 51 1 110 1 111 2 53 1 243 1 115 1 247 1 56 1 117 2 120 3 176 2 122 2 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 105 1 106 1 233 1 47 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 26 1 176 1 206 1 122 1 88 1 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
238 1 23 1 111 1 129 1 208 1 
23 1 234 1 111 1 129 1 208 1 
61 1 238 1 211 1 111 1 129 1 208 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
1 1 126 1 128 2 129 2 188 2 131 2 5 1 9 1 10 1 136 1 194 1 138 1 14 1 195 2 140 1 141 1 200 1 24 1 25 1 82 1 201 1 83 2 26 1 27 2 206 1 88 1 208 2 34 1 212 1 95 1 214 1 154 1 215 1 38 1 217 1 219 1 42 1 43 1 224 1 227 2 105 1 106 1 233 1 234 1 47 1 107 1 238 1 165 1 240 1 241 1 167 1 50 1 51 1 110 1 111 2 53 1 243 1 55 2 117 1 120 2 176 1 122 1 
1 1 95 1 214 1 128 1 154 1 215 1 187 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 178 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 166 2 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 166 2 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 166 2 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
138 1 214 1 141 1 215 1 51 1 200 1 53 1 188 1 201 1 131 2 71 1 206 1 136 1 
1 1 95 1 214 1 128 1 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 166 2 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 187 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
34 1 1 1 95 1 214 1 128 2 154 1 215 1 217 1 188 1 219 1 131 2 224 1 5 1 106 3 47 1 233 1 107 1 136 1 78 1 138 1 14 1 167 1 141 1 51 1 110 1 80 1 53 1 243 1 82 1 201 1 115 1 117 2 176 2 26 1 206 1 122 3 
35 1 126 1 212 1 128 1 214 2 215 2 188 4 42 1 43 1 131 3 5 1 227 1 9 1 47 1 46 1 10 1 136 1 194 1 138 1 14 1 195 1 240 1 165 1 140 1 141 2 50 1 51 2 142 1 25 1 24 1 53 1 200 1 55 1 54 2 201 1 83 1 120 1 27 1 149 1 206 2 30 1 208 2 
1 1 212 1 95 1 214 1 128 1 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 
138 1 214 2 141 2 215 1 51 2 200 1 53 1 188 1 201 1 131 3 206 2 136 1 
34 1 1 1 212 1 95 1 214 1 128 2 154 1 215 1 38 1 217 1 188 1 219 1 131 2 224 1 5 1 106 1 105 1 47 1 233 1 107 1 136 1 138 1 14 1 167 1 141 1 51 1 110 1 53 1 200 1 243 1 82 1 201 1 117 1 176 1 26 1 206 1 122 1 88 1 
138 1 131 2 141 1 214 1 215 1 51 1 206 1 188 1 53 1 201 1 136 1 
89 1 33 1 184 1 213 1 215 1 188 1 42 1 131 2 6 1 227 3 9 1 135 1 10 1 192 1 11 1 194 1 138 1 139 1 195 2 165 1 240 1 168 1 140 1 50 1 20 1 196 1 21 1 170 1 53 1 24 1 25 1 55 2 54 3 201 1 112 1 83 2 56 1 204 1 120 2 148 1 27 2 206 1 87 1 208 4 
125 1 153 1 126 1 184 1 185 1 215 1 216 1 188 2 42 1 43 1 131 2 227 3 9 1 135 1 10 1 192 1 11 1 194 1 138 1 139 1 195 2 165 1 240 1 140 1 50 1 196 1 21 1 25 1 53 1 24 1 55 2 54 3 201 1 173 1 83 2 116 1 204 1 120 2 27 2 206 1 208 4 
1 1 95 1 128 3 214 1 36 1 154 1 215 1 217 1 187 1 188 1 219 3 131 2 224 1 5 1 106 2 233 3 47 3 235 1 107 3 136 1 138 1 14 1 167 3 19 1 141 1 51 1 110 1 80 1 171 2 53 1 82 3 243 3 201 1 115 1 117 4 176 4 26 3 206 1 122 2 
128 1 214 1 36 1 215 1 188 1 219 1 131 2 233 1 47 1 107 1 136 1 138 1 167 1 19 1 141 1 51 1 171 1 53 1 82 1 243 1 201 1 117 1 176 1 26 1 206 1 
180 1 186 1 128 1 214 1 36 1 215 1 129 1 188 1 219 1 131 2 233 1 47 1 107 1 136 1 78 1 138 1 167 1 19 1 141 1 23 1 51 1 111 1 171 1 53 1 82 1 243 1 201 1 117 1 176 1 26 1 206 1 208 1 
92 1 128 3 214 1 36 1 215 1 188 1 219 3 131 2 233 3 47 3 107 3 136 1 138 1 167 3 19 1 141 1 51 1 171 3 53 1 82 3 243 3 201 1 117 3 176 3 26 3 206 1 
128 1 214 1 36 1 215 1 188 1 219 1 131 2 233 1 47 1 107 1 136 1 138 1 167 1 19 1 141 1 51 1 172 1 171 1 53 1 82 1 243 1 201 1 117 1 176 1 26 1 206 1 
138 1 214 1 141 1 36 1 215 1 51 1 172 1 171 1 188 1 53 1 201 1 131 2 206 1 136 1 
131 1 68 1 127 1 58 1 
145 1 131 1 127 1 
131 1 96 1 197 2 207 1 
108 1 222 1 131 1 96 1 207 1 
127 1 157 1 
213 1 20 1 112 1 6 1 9 1 10 1 179 1 
240 1 195 1 27 1 227 1 29 1 55 1 83 1 
240 1 195 1 27 1 227 1 55 1 83 1 
204 1 9 1 10 1 24 1 
78 1 115 1 176 1 106 1 122 1 208 1 
176 1 167 1 
78 1 106 1 122 1 208 1 
115 1 132 1 176 2 167 1 106 1 235 1 122 1 
176 1 167 1 
66 1 
100 1 
66 1 
206 1 
206 1 
138 1 
151 1 63 1 215 1 196 1 66 1 53 1 188 1 158 1 130 1 201 1 100 1 131 2 228 1 232 1 161 1 
78 1 151 1 63 1 215 1 196 1 66 1 41 2 98 1 53 1 188 1 158 1 130 1 201 1 100 1 131 2 85 1 232 1 161 1 122 1 208 3 
151 1 79 1 63 1 215 1 196 1 66 1 53 1 188 1 158 1 130 1 201 1 100 1 131 2 232 1 161 1 
151 2 79 1 169 1 63 2 155 1 215 2 196 2 66 2 53 2 188 2 158 2 130 2 201 2 100 2 131 4 232 2 161 2 
78 1 151 1 63 1 215 1 196 1 66 1 41 1 98 2 53 1 188 1 158 1 130 1 201 1 100 1 131 2 85 1 232 1 161 1 122 2 208 1 
7 1 
67 1 78 1 54 2 208 2 
78 1 248 1 54 2 208 2 
151 1 210 1 62 1 125 1 94 2 213 1 63 1 64 1 215 1 66 1 98 1 158 1 188 2 42 1 100 1 130 1 67 1 131 3 223 1 6 1 228 1 7 1 9 1 161 1 232 1 46 1 76 1 194 1 50 1 20 1 196 1 25 1 53 1 144 1 54 2 201 1 247 1 56 1 248 1 120 2 85 1 122 1 208 2 
169 1 155 1 161 1 53 1 201 1 
151 1 126 1 63 1 215 1 66 1 41 1 98 1 158 1 188 3 42 1 100 1 130 1 43 1 67 1 131 2 227 4 7 1 9 1 161 1 232 1 46 1 10 1 194 1 109 1 195 3 240 1 165 1 140 1 50 1 196 1 25 1 24 1 53 1 55 3 54 2 201 1 83 3 204 1 248 1 120 2 85 1 27 3 29 1 122 1 208 3 
151 1 63 1 215 1 196 1 66 1 172 1 53 1 188 1 158 1 130 1 201 1 100 1 131 2 232 1 161 1 
151 2 79 1 63 2 215 2 196 2 66 2 53 2 188 2 158 2 130 2 201 2 100 2 131 4 228 1 232 2 161 2 
151 1 169 1 63 1 155 1 215 1 196 1 66 1 53 1 188 1 158 1 130 1 201 1 100 1 131 2 232 1 161 1 
152 1 215 1 66 1 41 1 188 1 129 1 100 1 131 2 102 1 231 2 73 1 235 1 237 1 77 1 196 1 111 1 53 1 81 1 201 1 244 1 174 1 205 1 121 1 122 1 208 2 
237 1 
60 1 125 1 210 1 94 4 213 1 64 1 215 1 66 1 41 2 129 1 188 2 100 1 131 3 102 1 223 1 6 1 8 1 9 1 46 1 73 1 231 2 237 1 76 1 194 1 109 2 241 1 50 1 20 1 196 1 111 1 53 1 144 1 81 1 201 1 244 1 174 2 246 1 247 1 56 1 120 2 205 1 121 1 122 2 123 1 208 3 
102 1 205 1 155 1 231 1 81 1 244 1 
60 1 126 1 66 1 188 3 129 1 131 2 8 1 9 1 73 1 10 1 194 1 195 4 140 1 196 1 24 1 81 1 201 1 83 4 204 1 205 1 27 4 29 1 208 3 215 1 41 2 100 1 43 1 102 1 227 5 46 1 231 2 237 1 109 2 165 1 240 1 241 1 50 1 111 1 53 1 55 4 244 1 174 2 246 1 120 2 121 1 122 2 
90 1 78 1 215 1 196 1 66 1 41 1 188 1 53 1 81 1 244 1 201 1 100 1 174 2 246 1 102 1 131 2 205 1 231 1 122 2 208 2 
60 1 126 1 215 1 66 1 41 1 188 3 100 1 43 1 131 2 102 1 227 3 8 1 9 1 231 1 46 1 237 1 10 1 194 1 109 1 195 2 240 1 165 1 140 1 50 1 196 1 53 1 24 1 55 2 81 1 201 1 244 1 174 1 83 2 246 1 204 1 120 1 27 2 205 1 29 1 122 1 208 1 
121 1 73 1 231 1 235 1 122 1 174 1 
60 1 78 1 
78 1 8 1 
215 1 196 1 66 1 41 1 111 1 129 1 188 1 53 1 81 1 244 1 201 1 100 1 174 1 102 1 131 2 205 1 121 1 73 1 231 2 122 1 237 1 208 2 
102 1 205 1 155 1 231 1 81 1 244 1 
90 1 215 1 66 1 41 1 188 1 100 1 131 2 102 1 230 1 231 1 78 1 16 1 196 1 53 1 81 1 201 1 174 2 246 1 122 2 123 1 208 2 

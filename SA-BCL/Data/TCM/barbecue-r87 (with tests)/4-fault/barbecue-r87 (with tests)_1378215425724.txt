#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V ERROR java.lang.ArithmeticException (88,175,241) 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 231 10 168 183 110 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 231 10 168 183 95 29 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String; | CONDITION | 6950 | if (x) -> if (!x)
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 24208 | 2 -> 0
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I | OPERATOR | 3441 | += -> /=
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getX()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
8 1 210 1 233 1 196 1 120 1 222 1 
8 1 210 1 233 1 120 1 222 1 
58 1 30 2 160 1 
8 1 11 1 216 1 204 1 56 1 174 1 70 1 153 3 140 1 142 1 141 1 225 1 60 1 180 1 245 1 23 1 247 1 122 2 80 1 
8 1 11 1 12 1 216 2 204 1 135 1 153 3 140 1 142 1 141 1 225 1 180 1 245 1 23 1 122 1 80 1 
140 1 153 2 141 1 142 1 225 1 180 1 232 1 23 1 204 1 122 1 
67 1 8 1 11 1 216 4 13 1 204 1 153 3 140 1 142 1 141 1 225 1 180 1 245 1 6 1 23 1 122 1 109 1 80 1 
66 1 204 1 138 1 153 2 140 1 142 1 141 1 225 1 180 1 23 1 122 1 
140 1 153 2 141 1 142 1 225 1 180 2 23 2 204 3 181 1 122 1 
8 1 11 1 216 1 130 1 204 2 135 1 153 4 140 1 142 1 141 1 225 1 180 2 245 1 23 1 122 2 80 1 
141 1 142 1 225 1 205 1 
204 1 84 1 153 2 140 1 142 1 141 1 243 1 225 1 180 1 23 2 122 1 
8 2 11 2 216 1 233 1 43 1 204 1 56 1 70 1 153 3 140 1 142 1 141 1 180 1 60 1 245 1 119 1 23 1 122 1 247 1 80 1 
8 2 11 2 216 1 233 1 43 1 204 1 56 1 70 1 153 3 140 1 142 1 141 1 180 1 60 1 245 1 23 1 122 1 247 1 80 1 
98 1 8 1 11 1 233 1 43 1 204 1 177 1 153 2 140 1 142 1 141 1 225 1 180 1 23 1 119 1 122 1 108 1 
8 1 11 1 233 1 43 1 204 1 177 1 73 1 153 2 140 1 142 1 141 1 225 1 180 1 23 1 119 1 122 1 108 1 
8 1 11 1 233 1 43 1 204 1 115 1 177 1 153 2 140 1 142 1 141 1 225 1 180 1 23 1 213 1 122 1 108 1 162 1 
8 1 11 1 233 1 43 1 204 1 115 1 177 1 153 2 140 1 142 1 141 1 225 1 180 1 119 1 23 1 213 1 122 1 108 1 162 1 
140 1 153 3 141 1 142 1 225 1 180 1 23 1 204 2 181 1 122 2 
217 2 204 2 234 1 153 3 142 1 141 1 225 1 180 1 143 1 23 1 
153 2 141 1 142 1 217 1 225 1 202 1 180 1 23 2 234 1 204 1 
153 2 141 1 142 1 217 1 225 1 180 1 15 1 23 1 234 1 204 1 
88 1 241 1 175 3 
175 1 
111 1 113 14 117 1 2 3 3 2 4 1 120 2 123 1 126 2 8 2 10 1 127 6 9 2 12 1 14 3 130 1 15 2 132 1 133 3 16 2 135 1 137 2 20 2 21 2 141 1 143 1 23 5 24 4 146 3 148 1 153 4 34 1 39 1 37 4 38 2 40 1 41 2 168 1 42 3 43 1 45 3 46 1 181 1 182 1 48 1 183 1 184 1 49 4 185 1 50 3 51 1 188 1 189 1 52 1 53 4 54 4 193 1 195 3 197 3 61 3 63 1 69 3 201 1 203 2 204 3 75 5 74 4 211 2 80 1 214 1 215 3 216 2 217 2 82 2 83 3 218 1 85 1 86 2 92 3 93 1 226 1 95 1 231 1 230 2 233 1 234 1 237 1 238 2 242 5 243 1 244 3 107 2 246 1 
111 1 188 1 52 1 189 1 113 4 53 4 54 4 117 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 132 1 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 3 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 153 3 92 3 226 1 34 1 95 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 242 5 244 3 46 1 107 2 181 1 48 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
214 1 40 1 189 1 53 4 54 4 117 1 4 1 143 1 34 1 183 1 95 1 148 1 
111 1 188 1 189 1 113 4 53 4 54 4 117 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 3 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 153 3 224 1 92 3 226 1 34 1 95 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 242 5 244 3 46 1 107 2 181 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
111 1 189 1 113 8 53 4 54 4 117 1 4 1 197 4 120 2 63 1 124 1 125 2 8 2 127 4 10 1 201 1 12 1 15 2 204 2 134 4 135 1 19 4 74 2 141 1 143 1 23 3 24 4 80 1 148 1 25 1 214 1 216 2 217 1 28 2 221 1 153 3 155 2 226 1 157 1 158 4 34 1 161 3 95 1 165 1 40 1 166 1 231 1 170 2 169 1 168 1 99 2 233 1 43 1 234 1 173 2 237 1 105 2 244 4 46 1 107 2 181 1 182 1 183 1 184 1 49 2 185 1 51 1 
111 1 189 1 53 4 113 4 54 4 117 1 2 2 59 2 3 2 4 1 195 2 197 3 120 2 61 4 63 1 126 2 199 2 8 2 9 2 69 2 127 6 10 1 201 1 12 1 203 2 14 2 204 2 15 2 132 1 16 2 133 2 135 1 137 2 20 2 75 4 21 2 74 4 141 1 143 1 23 3 24 4 146 2 80 1 148 1 214 1 81 2 26 1 215 2 216 2 82 2 217 1 83 2 85 1 86 2 153 3 92 2 226 1 34 1 95 1 38 2 37 4 40 1 41 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 239 2 176 2 242 4 244 3 46 1 107 2 47 2 181 1 182 1 48 1 183 1 184 1 49 4 185 1 50 2 51 1 
111 1 188 1 52 1 189 1 113 4 53 4 54 4 117 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 132 1 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 4 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 153 3 92 3 226 1 34 1 95 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 235 1 237 1 238 2 242 5 243 1 244 3 46 1 107 2 181 1 48 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
96 1 
111 1 113 4 117 1 3 2 2 2 4 1 120 2 122 1 126 2 8 2 10 1 127 6 9 2 12 1 14 2 15 2 132 1 133 2 16 2 135 1 137 2 20 2 140 1 21 2 141 1 23 3 145 1 24 4 146 2 148 1 26 1 149 2 153 3 154 2 32 2 34 1 35 1 163 1 37 4 38 2 40 1 41 2 168 1 42 2 43 1 44 1 176 2 46 1 181 1 47 2 48 1 182 1 184 1 183 1 185 1 49 4 51 1 50 2 189 1 53 4 54 4 59 2 192 2 195 2 197 3 61 4 63 1 64 1 199 2 69 2 203 2 204 2 207 1 74 4 75 4 78 1 79 1 80 1 214 1 81 2 216 2 215 2 82 2 83 2 85 1 86 2 87 1 90 2 92 2 91 1 226 1 95 1 231 1 233 1 237 1 239 2 238 2 242 4 244 3 245 1 107 2 
111 1 189 1 53 4 113 4 54 4 117 1 2 2 59 2 3 2 4 1 195 2 197 3 120 2 61 4 63 1 126 2 199 2 8 2 9 2 69 2 127 6 10 1 201 1 12 1 203 2 14 2 204 2 15 2 132 1 16 2 133 2 135 1 137 2 20 2 75 4 21 2 74 4 141 1 143 1 23 3 24 4 146 2 80 1 148 1 214 1 81 2 26 1 215 2 216 2 82 2 217 1 83 2 85 1 86 2 153 3 92 2 226 1 34 1 95 1 38 2 37 4 40 1 41 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 239 2 176 2 242 4 244 3 46 1 107 2 47 2 181 1 182 1 48 1 183 1 184 1 49 4 185 1 50 2 51 1 
53 1 54 1 183 1 95 1 148 1 
111 1 188 1 52 1 189 1 113 4 53 4 54 4 117 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 132 1 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 3 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 153 3 92 3 226 1 95 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 242 5 244 3 46 1 107 2 181 1 48 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
110 1 111 1 188 1 52 1 189 1 113 4 53 4 54 4 117 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 132 1 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 3 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 153 3 92 3 226 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 242 5 244 3 46 1 107 2 181 1 48 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
111 1 188 1 189 1 113 4 53 4 54 4 117 1 191 1 3 2 2 3 4 1 195 3 197 3 120 2 61 3 63 1 123 1 126 2 8 2 9 2 127 6 201 1 69 3 10 1 12 1 203 2 14 3 15 2 204 2 132 1 16 2 133 2 135 1 137 2 20 2 21 2 74 4 75 5 141 1 143 1 23 3 24 4 146 3 80 1 148 1 214 1 216 2 215 3 82 2 217 1 83 2 218 1 85 1 86 2 29 1 153 3 92 3 226 1 34 1 95 1 38 2 37 4 40 1 41 2 230 2 231 1 168 1 42 2 233 1 43 1 234 1 237 1 238 2 242 5 244 3 46 1 107 2 181 1 48 1 182 1 183 1 184 1 185 1 49 4 50 3 51 1 
186 1 193 1 113 1 
113 1 62 1 
194 1 113 1 
113 1 62 1 
113 1 62 1 
194 1 113 1 
8 1 127 1 113 1 233 1 150 1 115 1 206 1 18 1 177 1 76 1 197 1 108 1 
8 1 127 1 68 1 113 1 233 1 197 1 
177 1 8 1 127 1 113 1 233 1 206 1 108 1 
194 1 113 1 
113 1 72 1 
19 1 113 1 212 1 71 1 
22 1 113 1 134 1 
187 1 167 1 217 1 113 2 204 1 234 1 173 1 152 1 240 1 178 1 153 2 194 1 141 1 33 2 23 1 24 2 182 1 
164 1 
187 1 167 1 217 1 204 1 234 1 205 1 173 1 240 1 178 1 153 2 141 1 23 1 182 1 
140 1 153 2 141 1 42 1 23 1 83 1 204 1 182 1 122 1 133 1 85 1 
42 2 204 1 83 2 133 2 85 1 153 3 140 1 141 1 144 1 23 1 182 1 122 2 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
42 2 204 1 83 2 133 2 85 1 153 3 140 1 141 1 144 1 23 1 182 1 122 2 
111 1 113 4 192 2 3 2 2 2 195 2 197 3 120 2 122 1 61 2 63 1 64 1 126 2 8 2 9 2 127 6 69 2 12 1 203 2 14 2 204 1 15 2 207 1 133 1 16 2 137 2 20 2 74 4 140 1 21 2 75 4 141 1 78 1 23 2 145 1 24 4 79 1 146 2 80 1 216 1 215 2 82 2 149 2 83 1 85 1 87 1 86 2 90 2 153 3 154 2 91 1 32 2 92 2 226 1 35 1 163 1 38 2 37 4 41 2 42 1 233 1 43 1 239 2 238 2 44 1 242 4 243 1 244 3 245 1 107 2 182 1 185 1 49 4 50 2 
81 1 215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 27 2 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
111 1 113 2 192 1 3 1 2 1 195 1 120 1 122 1 61 1 126 1 8 1 127 3 69 1 9 1 12 1 203 1 14 1 15 1 204 1 207 1 133 1 16 1 137 1 20 1 74 2 140 1 21 1 75 2 141 1 23 1 24 2 146 1 80 1 216 1 215 1 82 1 149 1 83 1 85 1 86 1 90 1 153 3 154 1 32 1 92 1 38 1 37 2 41 1 42 1 239 1 238 1 242 2 244 3 245 1 107 1 182 1 185 1 49 2 50 1 
42 1 204 1 83 1 133 1 85 1 90 1 153 2 140 1 141 1 144 1 23 1 182 1 122 1 
111 1 113 2 192 1 3 1 59 1 2 1 195 1 120 1 61 2 126 1 8 1 199 1 127 3 201 1 69 1 9 1 12 1 203 1 14 1 15 1 207 1 16 1 137 1 20 1 21 1 74 2 75 2 143 1 24 2 146 1 80 1 81 1 216 1 215 1 82 1 149 1 86 1 90 1 153 1 154 1 32 1 92 1 37 2 38 1 41 1 239 1 238 1 176 1 242 2 244 3 107 1 47 1 185 1 49 2 50 1 
111 1 113 2 192 1 3 1 2 1 195 1 120 1 122 1 61 1 126 1 8 1 9 1 127 3 69 1 12 1 203 1 14 1 15 1 204 1 207 1 133 1 16 1 137 1 20 1 74 2 140 1 21 1 75 2 141 1 23 1 24 2 146 1 80 1 216 1 215 1 82 1 149 1 83 1 85 1 86 1 90 1 153 3 154 1 32 1 92 1 38 1 37 2 41 1 42 1 235 1 239 1 238 1 242 2 244 3 245 1 107 1 182 1 185 1 49 2 50 1 
111 1 113 2 192 1 3 1 2 1 195 1 120 1 61 1 126 1 8 1 9 1 69 1 201 1 127 3 12 1 203 1 14 1 204 1 15 1 207 1 133 1 16 1 137 1 20 1 74 2 21 1 75 2 141 1 143 1 23 1 24 2 146 1 80 1 216 1 215 1 217 1 82 1 149 1 83 1 85 1 86 1 90 1 153 3 154 1 32 1 92 1 38 1 37 2 41 1 42 1 234 1 235 1 238 1 239 1 242 2 244 3 107 1 182 1 49 2 185 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 2 1 59 1 3 1 153 2 92 1 195 1 122 1 61 2 38 1 37 2 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 182 1 24 2 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 2 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 2 182 1 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
74 1 113 1 198 1 49 1 239 1 
74 1 113 1 203 1 198 1 49 1 
89 1 74 1 31 1 113 1 49 1 239 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
113 2 115 4 2 1 59 1 3 1 195 1 120 1 197 3 122 1 61 2 63 1 126 1 199 1 8 1 9 1 69 1 127 3 203 1 14 1 204 1 15 1 206 1 133 1 16 1 18 3 137 1 20 1 75 2 74 2 140 1 21 1 141 1 144 1 76 3 23 2 24 2 146 1 81 1 215 1 82 1 83 1 150 3 85 1 86 1 153 2 92 1 226 1 162 1 38 1 37 2 41 1 42 1 233 1 43 1 238 1 239 1 176 1 177 1 242 2 46 1 107 1 47 1 182 1 108 1 49 2 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 235 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 27 2 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 27 2 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 176 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 47 1 24 3 182 1 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 27 2 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
200 1 42 1 204 1 83 1 133 1 85 1 153 2 140 1 141 1 144 1 23 1 182 1 122 1 
215 1 82 1 27 2 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 235 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
215 1 82 1 83 1 85 1 86 1 59 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 2 38 1 37 3 126 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 133 1 16 1 137 1 242 2 75 2 140 1 141 1 23 1 182 1 24 3 146 1 50 1 
113 3 115 3 3 1 2 1 193 3 195 1 121 1 197 2 122 2 61 1 63 1 8 1 199 1 9 1 69 1 127 2 14 1 130 1 204 2 15 1 206 1 16 1 133 2 18 2 137 1 73 1 20 1 75 2 140 1 21 1 141 1 144 1 76 2 23 4 24 2 146 1 215 1 82 1 83 2 150 2 85 1 86 1 223 1 153 3 92 1 226 1 162 2 97 1 38 1 37 2 41 1 171 1 42 2 233 1 43 1 238 1 177 1 242 2 243 1 46 1 107 1 182 1 108 1 50 1 
81 1 215 1 82 1 83 1 85 1 86 1 3 1 2 1 153 2 194 1 92 1 195 1 122 1 61 1 38 1 37 3 199 1 41 1 9 1 69 1 42 1 14 1 204 1 238 1 16 1 133 1 137 1 242 2 75 2 140 1 141 1 144 1 23 1 24 3 182 1 146 1 50 1 
216 1 113 4 150 2 55 1 115 3 56 1 153 2 118 1 193 3 60 1 226 1 197 2 122 1 227 1 63 1 162 1 229 1 98 1 8 1 127 2 128 1 43 1 233 1 204 1 15 1 236 1 173 1 70 1 18 2 177 1 20 1 21 1 140 1 141 1 76 2 46 1 23 2 107 1 182 1 247 1 108 1 
113 4 149 1 150 2 151 1 55 1 115 3 87 1 192 1 153 2 118 1 193 3 154 1 32 1 226 1 197 2 122 1 227 1 63 1 162 1 66 1 229 1 8 1 127 2 128 1 129 1 233 1 102 1 204 1 15 1 236 1 173 1 136 1 18 2 177 1 138 1 20 1 140 1 21 1 141 1 76 2 23 1 107 1 182 1 108 1 
188 2 215 3 82 1 83 1 218 1 85 1 86 1 30 1 3 1 2 3 153 2 92 3 195 3 61 3 122 1 123 1 38 1 37 2 126 1 41 1 9 1 69 3 42 1 14 3 204 1 235 1 238 1 16 1 133 1 137 1 242 4 75 4 140 1 141 1 23 1 24 2 182 1 146 3 50 3 
69 1 188 1 215 1 42 1 14 1 83 1 204 1 218 1 133 1 85 1 2 1 242 1 140 1 153 2 75 1 141 1 92 1 195 1 23 1 182 1 122 1 61 1 146 1 123 1 50 1 
188 1 215 1 113 1 83 1 218 1 85 1 2 1 153 2 194 1 92 1 195 1 198 1 61 1 122 1 123 1 230 1 69 1 42 1 14 1 204 1 133 1 208 1 242 1 74 1 75 1 140 1 141 1 23 1 182 1 49 1 146 1 50 1 
188 3 215 3 114 1 83 1 218 1 85 1 2 3 153 2 92 3 195 3 61 3 122 1 123 1 69 3 42 1 14 3 204 1 133 1 242 3 75 3 140 1 141 1 23 1 182 1 146 3 50 3 
188 1 215 1 83 1 218 1 85 1 2 1 153 2 92 1 195 1 61 1 122 1 123 1 69 1 42 1 232 1 14 1 204 1 133 1 242 1 75 1 140 1 141 1 23 1 182 1 146 1 50 1 
188 1 42 1 232 1 204 1 83 1 218 1 133 1 85 1 153 2 140 1 141 1 23 1 182 1 122 1 
153 1 100 1 172 1 104 1 
153 1 100 1 219 1 
153 1 174 1 116 1 228 2 
36 1 153 1 156 1 174 1 116 1 
100 1 57 1 
18 1 76 1 150 1 115 1 197 1 162 1 
8 1 149 1 233 1 87 1 192 1 106 1 32 1 
18 1 76 1 150 1 115 1 197 1 206 1 162 1 
8 1 226 1 233 1 63 1 
37 1 137 1 242 1 194 1 113 1 24 1 
242 1 92 1 
37 1 194 1 113 1 24 1 
37 1 30 1 137 1 242 2 92 1 5 1 24 1 
242 1 92 1 
217 1 
234 1 
217 1 
122 1 
122 1 
140 1 
0 1 217 1 204 1 234 1 173 1 220 1 153 2 209 1 179 1 141 1 23 1 7 1 182 1 147 1 65 1 
217 1 232 1 204 1 234 1 173 1 220 1 153 2 209 1 179 1 141 1 23 1 7 1 182 1 147 1 65 1 
0 1 217 2 204 2 234 2 173 2 220 2 153 4 209 2 179 2 141 2 94 1 23 2 7 2 182 2 147 2 65 2 
217 1 113 3 204 1 234 1 173 1 220 1 134 2 139 1 153 2 209 1 194 1 179 1 141 1 23 1 159 1 7 1 24 1 182 1 147 1 65 1 
217 1 204 1 234 1 173 1 220 1 153 2 209 1 179 1 141 1 94 1 23 1 7 1 182 1 147 1 65 1 
217 2 204 2 234 2 205 1 173 2 220 2 103 1 153 4 209 2 179 2 141 2 94 1 23 2 7 2 182 2 147 2 65 2 
217 1 113 1 204 1 234 1 173 1 220 1 134 1 139 2 153 2 209 1 194 1 179 1 141 1 23 1 159 1 7 1 24 2 182 1 147 1 65 1 
77 1 
193 2 194 1 112 1 113 2 
193 2 194 1 113 2 1 1 
0 1 111 1 216 1 217 1 112 1 113 2 149 1 220 1 1 1 190 1 192 1 153 3 193 2 154 1 32 1 159 1 7 1 65 1 8 1 127 2 201 1 12 1 15 1 234 1 204 1 173 1 207 1 139 1 20 1 21 1 209 1 141 1 179 1 243 1 244 2 77 1 23 2 107 1 24 1 182 1 185 1 147 1 80 1 
141 1 205 1 182 1 147 1 103 1 
217 1 112 1 113 3 150 3 115 4 220 1 1 1 153 2 193 2 226 1 159 1 7 1 197 3 162 1 63 1 65 1 8 1 127 2 43 1 233 1 15 1 234 1 204 1 206 1 173 1 134 1 19 1 18 3 177 1 139 1 20 1 21 1 209 1 141 1 179 1 243 1 77 1 76 3 46 1 23 3 107 1 24 1 182 1 108 1 147 1 
217 1 204 1 234 1 205 1 173 1 220 1 103 1 153 2 209 1 179 1 141 1 23 1 7 1 182 1 147 1 65 1 
25 1 217 1 113 2 28 1 58 1 30 1 153 2 157 1 158 1 161 2 166 1 169 1 170 1 234 1 204 1 173 1 134 1 105 1 74 1 141 1 22 1 23 1 182 1 24 1 49 1 
105 1 
25 1 111 1 216 1 217 1 113 3 149 1 28 1 192 1 153 3 154 1 32 1 155 1 157 1 158 2 120 1 161 2 125 1 166 1 8 1 201 1 127 2 170 1 169 1 12 1 99 1 234 1 204 1 15 1 173 1 207 1 134 2 17 1 19 2 105 1 74 1 141 1 243 1 244 4 23 2 107 1 24 2 182 1 49 1 185 1 80 1 
25 1 166 1 169 1 157 1 205 1 161 1 
113 3 115 5 197 4 120 1 63 1 125 1 8 1 127 2 204 1 15 1 206 1 134 2 18 4 19 2 74 1 141 1 76 4 23 3 24 2 25 1 217 1 150 4 28 1 153 2 155 1 157 1 226 1 158 2 161 2 162 1 166 1 169 1 170 1 99 1 233 1 43 1 234 1 173 1 177 1 105 1 243 1 46 1 107 1 182 1 108 1 49 1 
125 1 25 1 166 1 169 1 217 1 113 2 204 1 234 1 173 1 134 1 153 2 194 1 141 1 157 1 23 1 212 1 158 2 24 2 182 1 161 1 
25 1 217 1 113 1 150 2 115 3 153 2 155 1 226 1 157 1 158 1 197 2 161 1 162 1 63 1 125 1 166 1 8 1 127 1 169 1 99 1 43 1 233 1 15 1 234 1 204 1 206 1 173 1 134 1 19 1 18 2 105 1 177 1 141 1 243 1 76 2 46 1 23 3 107 1 24 1 182 1 108 1 
30 1 170 1 158 1 24 1 161 1 28 1 
194 1 155 1 
194 1 99 1 
25 1 217 1 113 2 28 1 153 2 157 1 158 1 161 2 166 1 169 1 170 1 234 1 204 1 173 1 134 1 105 1 74 1 141 1 23 1 182 1 24 1 49 1 
25 1 166 1 169 1 157 1 205 1 161 1 
217 1 113 2 153 2 194 1 157 1 158 2 161 1 125 1 166 1 234 1 204 1 101 1 131 1 173 1 134 1 17 1 141 1 23 1 212 1 182 1 24 2 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V | CONDITION | 11984 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 13907 | 1 -> 2
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4542 | = null
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
18 1 131 1 117 1 132 1 157 1 9 1 
18 1 131 1 132 1 157 1 9 1 
30 1 53 2 95 1 
36 1 1 3 232 1 124 1 110 1 23 1 140 2 97 1 126 1 9 1 112 1 144 1 42 1 87 1 45 1 242 1 72 1 135 1 209 1 
36 1 1 3 232 1 110 1 23 1 140 1 126 1 9 1 112 1 183 1 42 1 146 1 72 1 242 1 135 1 209 2 
1 2 230 1 232 3 110 1 23 1 140 1 126 1 42 2 72 1 135 2 
36 1 1 4 232 2 138 1 110 1 23 1 140 2 126 1 9 1 112 1 183 1 42 1 72 1 242 1 135 2 209 1 
42 1 1 2 232 1 56 1 110 1 140 1 23 1 72 1 135 1 126 1 
36 1 1 3 232 1 150 1 22 1 110 1 214 1 125 1 23 1 140 1 126 1 9 1 112 1 42 1 72 1 242 1 135 1 209 4 
130 1 42 1 1 2 232 1 110 1 140 1 23 1 191 1 72 1 135 1 126 1 
198 1 23 1 72 1 126 1 
1 2 232 1 110 1 23 1 140 1 41 1 126 1 204 1 42 2 72 1 135 1 
18 1 36 2 1 3 232 1 124 1 110 1 40 1 23 1 140 1 153 1 97 1 126 1 9 2 112 1 144 1 42 1 45 1 242 1 135 1 209 1 
18 1 36 2 1 3 232 1 124 1 110 1 40 1 23 1 140 1 97 1 126 1 9 2 112 1 144 1 42 1 45 1 242 1 135 1 209 1 
36 1 18 1 1 2 232 1 110 1 40 1 23 1 140 1 153 1 126 1 10 1 9 1 42 1 205 1 72 1 135 1 47 1 
36 1 18 1 1 2 2 1 232 1 110 1 40 1 23 1 140 1 153 1 126 1 9 1 42 1 205 1 72 1 135 1 47 1 
36 1 18 1 1 2 232 1 77 1 110 1 40 1 23 1 140 1 126 1 180 1 9 1 42 1 205 1 72 1 135 1 47 1 208 1 
36 1 18 1 1 2 232 1 77 1 110 1 40 1 23 1 140 1 153 1 126 1 180 1 9 1 42 1 205 1 72 1 135 1 47 1 208 1 
1 3 230 1 232 2 110 1 23 1 140 2 126 1 42 1 72 1 135 1 
1 3 232 2 149 1 23 1 215 1 126 1 42 1 72 1 171 2 135 1 
42 2 1 2 3 1 232 1 215 1 23 1 171 1 72 1 135 1 126 1 
1 2 232 1 23 1 215 1 126 1 42 1 72 1 171 1 135 1 176 1 
32 1 159 3 240 1 
159 1 
68 1 179 1 93 1 103 1 46 1 
1 3 123 2 4 1 179 1 5 1 62 2 126 1 9 2 11 1 128 2 127 2 181 4 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 24 1 80 1 26 1 141 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 212 2 149 1 93 4 151 2 40 1 215 1 152 3 96 2 98 1 99 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 231 14 230 1 109 1 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 239 1 54 2 241 2 171 1 242 1 172 2 173 4 119 2 120 3 176 2 
1 3 123 2 4 1 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 66 1 187 1 67 6 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 104 1 46 4 225 2 229 2 162 3 230 1 231 4 109 1 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 4 1 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 25 1 26 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 212 2 149 1 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 109 1 232 2 234 1 111 1 236 1 51 2 116 1 168 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 4 123 2 179 1 5 1 62 2 126 1 9 2 128 2 127 3 181 4 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 138 1 197 2 78 2 80 1 26 1 203 2 29 1 204 1 84 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 3 92 1 212 2 149 1 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 5 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 4 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 2 242 1 172 3 173 4 119 2 176 2 
1 3 123 2 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 84 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 179 1 5 1 62 2 63 1 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 66 1 187 1 67 6 68 1 189 2 132 2 69 1 134 1 15 2 16 2 190 1 194 1 18 1 75 2 196 4 76 1 139 2 197 2 78 2 140 1 80 1 26 1 203 2 29 1 31 1 84 1 86 1 206 2 146 1 34 2 35 2 147 4 209 2 90 2 211 1 37 1 91 2 92 1 212 2 93 4 151 2 40 1 152 3 96 2 98 1 42 3 44 1 220 2 222 4 158 1 102 1 103 1 161 2 46 4 225 2 229 2 230 1 231 4 162 3 232 2 164 2 110 1 234 1 236 1 51 2 112 1 114 1 115 2 168 1 116 1 238 2 169 4 52 1 239 1 55 1 241 2 242 1 172 2 173 4 119 2 121 1 176 2 
108 1 
1 3 123 2 4 1 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 204 1 84 1 86 1 146 2 34 2 35 2 147 4 209 3 90 2 211 1 91 2 92 1 212 2 149 1 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 4 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 109 1 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 84 1 86 1 146 2 34 2 35 2 147 4 209 3 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 4 123 2 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 134 1 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 84 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
1 3 123 2 4 1 179 1 5 1 62 2 126 1 9 2 127 2 181 4 128 2 183 1 184 2 185 1 67 6 66 1 187 1 68 1 189 2 132 2 15 2 16 2 190 1 18 1 75 2 196 4 197 2 78 2 80 1 26 1 203 2 29 1 86 1 146 1 34 2 35 2 147 4 209 2 90 2 211 1 91 2 92 1 149 1 212 2 93 4 151 2 40 1 215 1 152 3 96 2 98 1 42 3 44 1 222 4 158 1 103 1 161 2 46 4 225 2 229 2 162 3 230 1 231 4 109 1 232 2 234 1 111 1 236 1 51 2 168 1 116 1 238 2 169 4 52 1 239 1 241 2 171 1 242 1 172 2 173 4 119 2 176 2 
231 1 221 1 24 1 
231 1 70 1 
18 1 231 1 94 1 152 1 8 1 180 1 9 1 113 1 205 1 67 1 85 1 47 1 
231 1 70 1 
18 1 231 1 67 1 205 1 94 1 47 1 9 1 
182 1 18 1 231 1 67 1 152 1 9 1 
107 1 231 1 
231 1 167 1 
231 1 70 1 
231 1 167 1 
231 1 167 1 
231 1 178 1 81 1 28 1 
231 1 61 1 155 1 
231 2 1 2 232 1 39 1 233 1 215 1 126 1 185 1 42 1 33 1 70 1 145 1 224 1 171 1 192 1 147 2 106 2 
193 1 
1 2 232 1 39 1 198 1 233 1 215 1 126 1 185 1 42 1 33 1 224 1 171 1 192 1 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 156 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
17 1 177 1 1 2 232 1 91 1 110 1 140 1 126 1 127 1 185 1 42 1 66 1 172 1 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 156 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 13 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
177 1 1 3 2 1 123 1 62 1 8 2 126 1 180 3 9 1 127 2 128 1 185 1 66 1 67 2 14 1 15 1 16 1 73 1 18 1 75 1 196 2 138 1 77 2 197 1 140 2 78 1 24 3 80 1 29 1 203 1 204 1 205 1 85 2 34 1 35 1 147 2 90 1 91 2 212 1 40 1 152 2 96 1 42 4 222 2 100 1 161 1 225 1 47 1 229 1 231 3 232 2 48 1 110 1 50 1 113 2 51 1 238 1 169 2 239 1 241 1 59 1 172 2 119 1 176 1 
177 1 90 1 1 2 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 1 3 232 1 91 2 110 1 140 2 126 1 127 2 185 1 42 1 66 1 172 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 1 3 232 1 91 2 110 1 140 2 126 1 127 2 185 1 42 1 66 1 172 2 
1 3 123 2 62 2 63 1 126 1 9 2 181 4 127 1 128 2 184 2 185 1 66 1 67 6 189 2 132 2 69 1 15 2 16 2 190 1 194 1 18 1 75 2 196 4 76 1 139 2 197 2 140 1 78 2 80 1 203 2 204 1 31 1 206 2 146 1 34 2 147 4 35 2 209 1 90 2 37 1 91 1 212 2 151 2 40 1 152 3 96 2 42 2 220 2 222 4 102 1 161 2 225 2 229 2 231 4 162 3 232 1 164 2 110 1 236 1 112 1 51 2 114 1 115 2 238 2 169 4 239 1 55 1 241 2 242 1 172 1 173 4 119 2 121 1 176 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 156 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
1 3 123 1 62 1 126 1 9 1 181 2 127 1 128 1 184 1 185 1 66 1 67 3 189 1 132 1 15 1 16 1 190 1 75 1 196 2 139 1 197 1 140 1 78 1 203 1 206 1 146 1 34 1 147 2 35 1 209 1 90 1 37 1 91 1 212 1 151 1 96 1 42 1 220 1 222 2 161 1 225 1 229 1 231 2 162 3 232 1 164 1 110 1 236 1 112 1 51 1 115 1 169 2 238 1 241 1 242 1 172 1 173 2 119 1 176 1 
177 1 1 2 232 1 91 1 139 1 110 1 140 1 126 1 127 1 185 1 42 1 66 1 172 1 
1 1 123 1 62 1 9 1 128 1 181 2 184 1 67 3 132 1 189 1 15 1 16 1 190 1 73 1 75 1 196 2 139 1 197 1 78 1 203 1 206 1 146 1 34 1 147 2 35 1 209 1 90 1 37 1 212 1 149 1 151 1 96 2 220 1 222 2 161 1 225 1 229 1 228 1 162 3 231 2 48 1 164 1 166 1 111 1 236 1 51 1 115 1 169 2 238 1 57 1 241 1 242 1 173 2 119 1 176 1 
1 3 123 1 62 1 126 1 9 1 181 2 127 1 128 1 184 1 185 1 13 1 66 1 67 3 189 1 132 1 15 1 16 1 190 1 75 1 196 2 139 1 197 1 140 1 78 1 203 1 206 1 146 1 34 1 147 2 35 1 209 1 90 1 37 1 91 1 212 1 151 1 96 1 42 1 220 1 222 2 161 1 225 1 229 1 231 2 162 3 232 1 164 1 110 1 236 1 112 1 51 1 115 1 238 1 169 2 241 1 242 1 172 1 173 2 119 1 176 1 
1 3 123 1 62 1 126 1 9 1 181 2 127 1 128 1 184 1 185 1 13 1 66 1 67 3 189 1 132 1 15 1 16 1 190 1 75 1 196 2 139 1 197 1 78 1 203 1 206 1 146 1 34 1 147 2 35 1 209 1 90 1 37 1 91 1 149 1 212 1 151 1 215 1 96 1 42 1 220 1 222 2 161 1 225 1 229 1 231 2 162 3 232 1 164 1 111 1 236 1 51 1 115 1 238 1 169 2 241 1 242 1 171 1 172 1 173 2 119 1 176 1 
177 1 1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 75 1 232 1 48 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 241 1 34 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 184 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 184 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 184 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
177 1 90 1 1 2 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 184 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 184 1 66 1 222 2 70 1 15 1 16 1 161 1 225 1 107 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 3 34 1 241 1 172 1 119 1 35 1 147 3 
231 1 189 1 133 1 173 1 181 1 
231 1 133 1 151 1 173 1 181 1 
231 1 189 1 20 1 173 1 142 1 181 1 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 1 2 123 1 62 1 8 3 126 1 180 4 9 1 181 2 127 1 128 1 184 1 185 1 66 1 67 3 189 1 132 1 15 1 16 1 73 1 18 1 75 1 196 2 77 1 197 1 140 1 78 1 80 1 29 1 203 1 205 1 85 3 34 1 35 1 147 2 90 1 91 1 212 1 94 1 151 1 40 1 152 3 96 2 42 2 222 2 161 1 225 1 47 1 229 1 228 1 231 2 232 1 48 1 110 1 166 1 113 3 51 1 238 1 169 2 239 1 57 1 241 1 172 1 173 2 119 1 176 1 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 13 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 156 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 90 1 1 2 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 156 2 15 1 16 1 161 1 225 1 73 1 228 1 232 1 48 1 75 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 34 1 241 1 172 1 119 1 35 1 147 2 
177 1 1 2 90 1 123 1 91 1 62 1 96 2 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 73 1 228 1 75 1 232 1 48 1 196 2 110 1 166 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 57 1 241 1 34 1 172 1 119 1 35 1 147 2 
1 2 90 1 123 1 91 1 62 1 96 1 126 1 127 1 42 1 185 1 66 1 222 2 15 1 16 1 161 1 225 1 232 1 75 1 196 2 110 1 197 1 140 1 78 1 51 1 203 1 238 1 169 2 34 1 241 1 172 1 119 1 35 1 147 2 
42 1 1 2 185 1 232 1 66 1 91 1 110 1 140 1 172 1 126 1 127 1 
0 1 1 2 124 1 212 1 39 1 40 1 217 1 97 1 8 2 152 2 180 3 126 1 10 1 9 1 128 1 42 2 185 1 67 2 101 1 45 1 47 1 229 1 18 1 231 4 232 1 110 1 77 1 140 1 24 3 80 1 79 1 113 2 27 1 29 1 202 1 144 1 205 1 239 1 85 2 209 1 176 1 
0 1 1 2 212 1 39 1 217 1 8 2 152 2 180 3 126 1 9 1 128 1 218 1 154 1 130 1 42 1 185 1 220 1 67 2 101 1 191 1 47 1 229 1 18 1 231 4 232 1 164 1 110 1 77 1 140 1 24 3 80 1 79 1 83 1 113 2 27 1 237 1 115 1 202 1 205 1 239 1 85 2 206 1 121 1 176 1 
1 2 123 1 91 1 96 1 126 1 181 1 127 1 42 1 185 1 66 1 222 1 188 1 133 1 70 1 15 1 231 1 75 1 232 1 196 1 21 1 110 1 49 1 197 1 78 1 199 1 140 1 201 1 241 1 172 1 173 1 119 1 35 1 
90 1 1 2 123 3 91 1 62 1 96 3 126 1 127 1 184 1 13 1 42 1 185 1 66 1 222 4 188 1 15 3 16 1 161 1 225 1 75 3 232 1 196 4 110 1 197 3 78 3 199 1 140 1 51 1 201 2 203 1 238 1 169 2 53 1 34 1 241 3 172 1 119 3 147 2 35 3 
1 2 123 1 91 1 96 1 126 1 127 1 42 1 185 1 66 1 222 1 188 1 15 1 75 1 232 1 196 1 110 1 197 1 78 1 199 1 140 1 201 1 241 1 172 1 119 1 35 1 
1 2 123 3 91 1 96 3 126 1 127 1 42 1 185 1 66 1 222 3 188 1 15 3 75 3 232 1 196 3 110 1 197 3 78 3 199 1 140 1 201 3 143 1 241 3 172 1 119 3 35 3 
1 2 123 1 91 1 96 1 126 1 127 1 42 1 185 1 66 1 222 1 188 1 15 1 75 1 232 1 196 1 110 1 197 1 78 1 199 1 140 1 201 1 56 1 241 1 172 1 119 1 35 1 
1 2 232 1 91 1 110 1 199 1 140 1 126 1 201 1 127 1 42 1 185 1 66 1 56 1 172 1 
137 1 1 1 6 1 136 1 
1 1 6 1 148 1 
1 1 87 1 227 1 129 2 
210 1 1 1 87 1 243 1 227 1 
6 1 71 1 
85 1 77 1 94 1 8 1 152 1 180 1 113 1 
85 1 77 1 8 1 152 1 180 1 113 1 
115 1 18 1 220 1 164 1 118 1 9 1 121 1 
18 1 239 1 80 1 9 1 
169 1 53 1 222 2 197 1 161 1 207 1 147 1 
222 1 197 1 
169 1 231 1 222 1 70 1 161 1 147 1 
222 1 197 1 
169 1 231 1 70 1 147 1 
215 1 
171 1 
171 1 
140 1 
110 1 
140 1 
122 1 19 1 231 1 1 2 232 1 61 1 38 1 39 1 215 1 126 1 185 1 42 1 223 2 70 1 160 1 105 1 171 1 74 1 147 2 175 1 
88 1 
219 1 231 2 70 1 24 2 
231 2 163 1 70 1 24 2 
122 1 1 3 37 1 212 1 38 1 39 1 215 1 126 1 9 1 128 1 219 1 42 2 185 1 220 1 67 2 223 1 160 1 190 1 105 1 74 1 229 1 19 1 162 2 231 2 232 1 164 1 163 1 111 1 24 2 200 1 236 1 115 1 204 1 206 1 146 1 171 1 242 1 88 1 147 1 175 1 89 1 176 1 209 1 
122 1 185 1 170 1 198 1 126 1 
122 1 1 2 61 1 178 1 212 1 38 1 94 1 39 1 215 1 40 1 8 3 152 3 180 4 126 1 9 1 128 1 219 1 42 3 185 1 67 2 223 1 160 1 105 1 47 1 74 1 229 1 19 1 18 1 231 3 232 1 163 1 77 1 24 2 80 1 113 3 29 1 204 1 205 1 239 1 85 3 171 1 88 1 147 1 175 1 176 1 
122 1 19 1 1 2 232 1 38 1 39 1 215 1 126 1 185 1 42 1 56 1 160 1 105 1 171 1 175 1 
19 2 122 2 1 4 232 2 38 2 39 2 215 2 126 2 185 2 42 2 160 2 58 1 105 2 171 2 175 2 89 1 
122 1 19 1 1 2 232 1 38 1 39 1 215 1 126 1 185 1 42 1 160 1 105 1 171 1 175 1 89 1 
122 1 19 1 231 3 1 2 232 1 61 2 38 1 39 1 215 1 126 1 185 1 42 1 223 1 70 1 160 1 105 1 171 1 74 1 147 1 175 1 
19 1 122 1 1 2 232 1 38 1 39 1 215 1 126 1 185 1 42 1 160 1 58 1 105 1 171 1 175 1 
19 2 122 2 1 4 232 2 38 2 39 2 198 1 215 2 126 2 185 2 42 2 170 1 160 2 58 1 105 2 171 2 175 2 
19 1 122 1 1 2 232 1 38 1 39 1 198 1 215 1 126 1 185 1 42 1 170 1 160 1 105 1 171 1 175 1 
60 1 231 2 1 2 232 1 61 1 213 1 39 1 215 1 81 1 126 1 12 1 65 2 42 1 185 1 186 1 70 1 226 1 171 1 174 1 147 2 
60 1 1 2 61 1 178 1 213 1 94 1 39 1 215 1 40 1 216 1 8 2 152 2 180 3 126 1 9 1 12 1 65 1 185 1 42 3 67 1 186 1 226 1 47 1 229 1 18 1 231 1 232 1 195 1 77 1 80 1 82 1 113 2 29 1 204 1 205 1 239 1 85 2 171 1 174 1 147 1 176 1 
53 1 65 1 43 1 226 1 64 1 147 1 
70 1 216 1 
195 1 70 1 
1 2 61 1 213 1 39 1 215 1 64 1 126 1 12 1 181 1 185 1 42 1 43 1 65 1 186 1 226 2 231 2 232 1 82 1 171 1 174 1 173 1 147 1 
231 2 1 2 232 1 61 1 213 1 39 1 215 1 95 1 64 1 82 1 126 1 181 1 12 1 53 1 65 1 43 1 42 1 185 1 186 1 155 1 226 2 171 1 173 1 174 1 147 1 
82 1 
60 1 1 3 37 1 61 2 178 2 213 1 39 1 215 1 216 1 64 1 126 1 9 1 181 1 12 1 43 1 65 2 185 1 42 2 220 1 186 1 67 2 132 1 190 1 226 2 229 1 231 3 162 4 232 1 195 1 164 1 165 1 111 1 82 1 236 1 115 1 204 1 206 1 146 1 171 1 242 1 173 1 174 1 147 2 209 1 176 1 
186 1 213 1 198 1 226 1 174 1 12 1 
60 1 1 2 178 2 61 2 8 4 64 1 126 1 180 5 9 1 12 1 181 1 185 1 65 2 186 1 67 2 132 1 18 1 195 1 77 1 80 1 82 1 29 1 204 1 205 1 85 4 147 2 213 1 39 1 94 1 40 1 215 1 216 1 152 4 42 3 43 1 226 2 47 1 229 1 231 3 232 1 113 4 239 1 171 1 174 1 173 1 176 1 
186 1 213 1 198 1 226 1 174 1 12 1 
60 1 1 2 61 1 213 1 39 1 7 1 215 1 126 1 12 1 185 1 42 1 65 2 70 1 226 1 231 2 232 1 165 1 235 1 81 1 171 1 147 2 

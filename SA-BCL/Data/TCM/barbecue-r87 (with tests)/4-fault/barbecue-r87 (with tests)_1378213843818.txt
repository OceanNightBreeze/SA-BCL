#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 202 141 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 202 106 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 202 141 144 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V ERROR net.sourceforge.barbecue.BarcodeException 29 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | RETURN | 12200 | return null
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | CONDITION | 5209 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
221 1 226 1 91 1 164 1 59 1 191 1 
221 1 226 1 164 1 59 1 191 1 
64 1 224 2 100 1 
199 1 221 1 118 3 119 1 55 2 15 1 32 1 77 1 153 1 232 1 208 1 138 1 129 1 92 1 47 1 79 1 114 1 163 1 27 1 
221 1 118 3 119 1 55 1 97 1 15 1 32 1 138 1 113 1 129 1 47 1 92 2 79 1 114 1 163 1 27 1 
0 1 129 1 15 1 47 1 
118 2 119 1 55 1 15 1 148 1 89 1 129 1 47 1 79 2 114 1 27 1 
199 1 221 2 118 3 119 1 55 1 15 1 32 1 191 1 153 1 77 1 62 1 208 1 112 1 138 2 129 1 92 1 79 1 114 1 163 1 27 1 
199 1 221 2 118 3 119 1 55 1 15 1 32 1 191 1 153 1 77 1 208 1 112 1 138 2 129 1 92 1 79 1 114 1 163 1 27 1 
221 1 118 2 119 1 201 1 55 1 15 1 191 1 108 1 62 1 235 1 138 1 112 1 129 1 47 1 79 1 114 1 27 1 
221 1 118 2 119 1 201 1 55 1 86 1 15 1 191 1 108 1 62 1 138 1 112 1 129 1 47 1 79 1 114 1 27 1 
221 1 118 2 119 1 201 1 55 1 15 1 191 1 231 1 108 1 179 1 138 1 112 1 129 1 47 1 79 1 114 1 94 1 27 1 
221 1 118 2 119 1 201 1 55 1 15 1 191 1 231 1 62 1 108 1 179 1 138 1 112 1 129 1 47 1 79 1 114 1 94 1 27 1 
118 3 119 1 55 2 15 1 129 1 47 1 79 1 12 1 114 1 27 2 
118 3 225 1 15 1 190 2 129 1 47 1 79 1 182 1 114 1 27 2 
7 1 118 2 225 1 129 1 15 1 47 1 79 2 114 1 190 1 27 1 
118 2 225 1 15 1 72 1 190 1 129 1 47 1 79 1 114 1 27 1 
118 2 225 1 129 1 15 1 47 1 79 1 114 1 190 1 116 1 27 1 
221 1 118 3 225 1 120 1 14 1 15 1 32 1 73 1 190 1 177 1 138 1 129 1 47 1 92 4 79 1 114 1 219 1 27 1 
18 1 118 2 225 1 129 1 15 1 47 1 79 1 114 1 190 1 40 1 27 1 
118 2 225 1 15 1 190 1 129 1 47 1 79 2 12 1 114 2 27 3 
220 1 221 1 118 4 225 1 15 1 32 1 190 2 138 1 129 1 113 1 47 1 92 1 79 1 114 2 219 1 27 2 
239 1 6 3 162 1 
6 1 
50 1 134 1 202 1 211 1 139 1 182 1 141 1 38 1 185 4 118 2 67 2 225 1 228 1 15 1 150 1 75 1 190 1 154 1 156 1 193 4 46 1 79 2 80 1 161 1 243 1 244 1 26 1 25 1 198 1 27 1 
170 1 50 1 1 1 134 1 202 1 35 1 139 1 182 1 141 1 185 4 117 1 13 1 118 2 67 2 225 1 15 1 150 1 75 1 190 1 154 1 193 4 234 1 79 2 80 1 161 1 165 1 25 1 49 1 27 1 
50 1 170 1 1 1 134 1 202 1 139 1 182 1 141 1 185 4 13 1 117 1 118 2 225 1 15 1 150 1 75 1 190 1 154 1 193 4 234 1 79 2 80 1 161 1 165 1 25 1 49 1 27 1 
170 1 50 1 104 1 1 1 174 1 203 1 56 3 134 1 202 1 60 2 139 1 214 1 66 1 216 1 182 1 141 1 115 1 185 4 95 1 117 1 13 1 186 1 118 2 67 8 225 1 121 1 70 1 15 1 152 1 150 1 75 1 190 1 154 1 193 4 126 1 17 1 233 1 79 2 80 1 161 1 197 1 166 1 25 1 245 1 27 1 
167 2 103 2 171 2 50 1 170 3 1 3 53 2 5 6 174 1 59 2 65 1 112 1 113 1 10 2 66 3 12 1 182 1 184 4 115 3 183 1 185 4 186 3 13 1 117 3 118 4 67 4 68 2 70 3 15 1 72 2 16 1 75 1 74 1 191 1 190 2 192 2 126 3 193 4 17 5 194 2 20 1 128 2 127 1 195 1 79 4 80 1 196 3 23 1 82 4 197 3 25 1 27 4 28 2 84 4 32 1 202 1 134 1 33 2 210 1 90 4 214 1 139 1 92 2 93 1 141 1 219 1 95 3 221 2 220 1 222 3 41 1 225 1 146 2 147 1 97 1 149 1 150 1 152 3 154 1 229 2 230 2 233 1 234 1 237 1 242 2 161 1 165 1 166 5 245 3 
170 1 50 1 1 1 174 1 134 1 202 1 139 1 214 1 66 1 182 1 141 1 115 1 185 4 95 1 117 1 13 1 186 1 118 2 225 1 70 1 15 1 152 1 150 1 75 1 190 1 154 1 193 4 126 1 17 1 233 1 234 1 79 2 80 1 161 1 23 1 197 1 166 1 165 1 25 1 245 1 27 1 
50 1 202 1 134 1 150 1 193 4 139 1 161 1 80 1 182 1 141 1 185 4 25 1 
4 1 
103 2 1 2 2 1 5 6 109 1 112 1 10 2 113 1 12 1 115 3 117 2 13 1 118 3 15 1 16 1 126 3 17 5 127 1 128 2 23 1 25 1 27 2 28 2 134 1 32 1 33 2 139 1 141 1 41 1 146 2 147 1 149 1 152 3 150 1 154 1 161 1 166 5 165 1 167 2 170 2 50 1 171 2 53 2 174 1 59 2 65 1 66 3 182 1 183 1 184 4 185 4 186 3 67 4 68 2 70 3 72 2 74 1 75 1 190 1 191 1 192 2 193 4 194 2 195 1 79 3 80 1 196 3 82 4 197 3 84 4 202 1 210 1 90 4 214 1 92 3 93 1 95 3 219 1 221 2 222 3 225 1 97 2 230 2 229 2 233 1 234 1 237 1 242 2 245 3 
117 1 13 1 170 1 118 2 50 1 119 1 1 1 55 1 15 1 202 1 134 1 150 1 75 1 154 1 193 4 234 1 139 1 79 2 80 1 161 1 141 1 165 1 185 4 25 1 27 1 49 1 
202 1 150 1 141 1 185 1 193 1 
170 1 50 1 1 1 174 1 134 1 202 1 214 1 66 1 182 1 141 1 115 1 185 4 95 1 117 1 13 1 186 1 118 2 225 1 70 1 15 1 150 1 152 1 75 1 190 1 154 1 193 4 126 1 17 1 233 1 234 1 79 2 161 1 80 1 23 1 197 1 166 1 165 1 25 1 245 1 27 1 
170 1 50 1 1 1 106 1 174 1 134 1 202 1 214 1 66 1 182 1 115 1 185 4 95 1 117 1 13 1 186 1 118 2 225 1 70 1 15 1 150 1 152 1 75 1 190 1 154 1 193 4 126 1 17 1 233 1 234 1 79 2 161 1 80 1 23 1 197 1 166 1 165 1 25 1 245 1 27 1 
170 1 50 1 1 1 174 1 134 1 202 1 139 1 214 1 66 1 182 1 141 1 115 1 185 4 95 1 117 1 13 1 186 1 118 2 225 1 144 1 70 1 15 1 152 1 150 1 75 1 190 1 154 1 193 4 126 1 17 1 233 1 234 1 158 1 79 2 80 1 161 1 197 1 166 1 165 1 25 1 245 1 27 1 
67 1 130 1 35 1 
67 1 173 1 
221 1 67 1 201 1 5 1 240 1 191 1 108 1 
221 1 67 1 223 1 188 1 201 1 30 1 5 1 191 1 108 1 240 1 196 1 94 1 
221 1 67 1 5 1 196 1 191 1 123 1 
67 1 241 1 
67 1 241 1 
67 1 155 1 
67 1 241 1 
67 1 173 1 
67 1 173 1 
169 1 67 1 189 1 122 1 
200 1 67 1 125 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 52 2 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 52 2 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 20 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 170 2 103 1 105 1 1 2 53 1 55 2 5 2 176 1 108 1 65 1 8 1 112 1 66 1 115 1 184 2 186 1 13 1 117 2 118 3 67 3 188 2 119 1 68 1 70 1 15 1 72 1 75 1 191 1 192 1 124 1 126 1 17 2 194 1 79 4 196 2 197 1 27 2 28 1 201 1 132 1 30 2 86 1 31 1 33 1 35 3 89 1 90 2 94 3 95 1 221 1 220 1 223 2 146 1 149 1 152 1 154 1 230 1 229 1 231 2 240 1 242 1 166 2 245 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 176 1 8 1 90 3 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
13 1 117 2 118 3 170 2 1 2 119 1 55 2 15 1 75 1 176 1 79 1 27 1 
102 1 167 2 171 2 170 1 103 2 1 1 53 2 54 1 55 1 5 6 59 2 63 2 110 1 65 1 112 1 180 2 10 2 66 2 115 2 184 4 13 1 117 1 186 2 118 3 67 4 119 1 68 2 70 2 15 1 72 2 75 1 191 1 192 2 126 2 17 4 194 2 79 2 196 3 82 4 197 2 27 1 28 2 84 4 85 2 133 1 32 1 87 2 33 2 34 2 89 1 136 2 210 1 90 4 215 1 92 1 218 1 95 2 221 2 222 3 41 1 146 2 227 1 97 1 149 1 151 1 152 2 230 2 229 2 45 1 242 2 163 1 101 1 166 4 245 2 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 52 2 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
13 1 117 1 118 2 170 1 1 1 119 1 55 1 15 1 75 1 176 1 160 1 79 1 27 1 
117 1 13 1 170 1 118 2 119 1 1 1 55 1 15 1 79 1 75 1 27 1 
167 1 171 1 170 1 103 1 1 1 53 1 54 1 55 1 5 3 59 1 63 1 180 1 10 1 66 1 115 1 184 2 13 1 117 1 186 1 118 3 67 2 119 1 68 1 70 1 15 1 72 1 75 1 192 1 126 1 17 2 194 1 79 1 82 2 197 1 27 1 28 1 84 2 85 1 32 1 87 1 33 1 34 1 136 1 210 1 90 2 92 1 95 1 221 1 222 3 41 1 146 1 97 1 152 1 230 1 229 1 242 1 163 1 166 2 245 1 
13 1 117 1 118 2 170 1 1 1 119 1 55 1 15 1 75 1 176 1 34 1 79 1 27 1 
167 1 171 1 103 1 53 1 54 1 5 3 57 1 59 1 63 1 8 1 180 1 10 1 66 1 182 1 184 2 115 1 186 1 118 1 67 2 68 1 70 1 72 1 192 1 126 1 17 2 194 1 82 2 197 1 28 1 84 2 85 1 32 1 87 1 33 1 34 1 88 1 136 1 210 1 90 2 92 1 219 1 95 1 221 1 222 3 41 1 146 1 97 1 152 1 230 1 229 1 157 1 238 1 242 1 166 2 245 2 
167 1 171 1 170 1 103 1 1 1 53 1 54 1 55 1 5 3 59 1 63 1 180 1 10 1 66 1 115 1 184 2 13 1 117 1 186 1 118 3 67 2 119 1 68 1 70 1 15 1 72 1 75 1 192 1 126 1 17 2 194 1 20 1 79 1 82 2 197 1 27 1 28 1 84 2 85 1 32 1 87 1 33 1 34 1 136 1 210 1 90 2 92 1 95 1 221 1 222 3 41 1 146 1 97 1 152 1 230 1 229 1 242 1 163 1 166 2 245 1 
167 1 171 1 170 1 103 1 1 1 53 1 54 1 5 3 59 1 63 1 180 1 10 1 66 1 182 1 115 1 184 2 13 1 117 1 186 1 118 3 67 2 68 1 70 1 15 1 72 1 75 1 190 1 192 1 126 1 17 2 194 1 20 1 79 1 82 2 197 1 27 1 28 1 84 2 85 1 32 1 87 1 33 1 34 1 136 1 210 1 90 2 92 1 219 1 95 1 221 1 222 3 41 1 225 1 146 1 97 1 152 1 230 1 229 1 242 1 166 2 245 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 2 66 1 115 1 184 2 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 157 1 17 2 194 1 238 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 8 1 90 3 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 8 1 90 2 10 1 66 1 184 2 115 1 95 1 186 1 117 1 13 1 118 2 68 1 119 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
67 1 236 1 84 1 180 1 82 1 
171 1 67 1 236 1 84 1 82 1 
187 1 67 1 84 1 180 1 24 1 82 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 171 1 170 1 103 1 1 1 53 1 55 1 5 3 57 1 176 1 59 1 108 1 8 1 65 1 112 1 180 1 10 1 66 1 115 1 184 2 186 1 13 1 117 1 118 2 67 2 188 3 119 1 68 1 70 1 15 1 72 1 75 1 191 1 192 1 126 1 17 2 194 1 79 2 196 3 82 2 197 1 27 1 28 1 201 1 84 2 30 3 33 1 88 1 90 2 94 4 95 1 221 1 223 3 146 1 149 1 152 1 154 1 229 1 230 1 231 1 157 1 238 1 240 1 242 1 166 2 245 2 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 10 1 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 20 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 52 2 55 1 57 1 33 1 176 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
167 1 28 1 170 1 103 1 1 1 52 2 55 1 57 1 33 1 176 1 88 1 8 1 90 3 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 33 1 90 3 66 1 115 1 184 3 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 194 1 241 1 79 1 197 1 166 2 245 1 27 1 
13 1 117 2 118 3 170 2 1 2 119 1 55 2 15 1 75 1 176 1 79 1 27 1 
167 1 28 1 170 1 103 1 1 1 55 1 57 1 33 1 176 1 88 1 8 1 90 3 10 1 66 1 184 3 115 1 95 1 186 1 117 1 13 1 118 2 119 1 68 1 146 1 70 1 15 1 152 1 75 1 192 1 229 1 126 1 17 2 157 1 194 1 238 1 241 1 79 1 197 1 166 2 245 2 27 1 
102 1 168 1 201 1 83 1 53 1 85 1 30 2 55 1 5 2 87 1 205 1 35 3 207 1 108 1 63 1 65 1 136 1 181 1 37 1 140 1 94 3 40 1 118 2 221 1 188 2 223 2 67 4 119 1 69 1 96 1 42 1 15 1 149 1 72 1 75 1 191 1 230 1 231 1 18 1 79 1 242 1 196 2 26 1 27 1 
199 1 168 1 201 1 83 1 53 1 30 2 55 1 5 2 205 1 35 3 108 1 208 1 65 1 112 1 92 1 94 3 118 2 221 1 188 2 223 2 67 4 119 1 69 1 96 1 42 1 15 1 149 1 72 1 75 1 191 1 77 1 153 1 154 1 230 1 231 1 235 1 242 1 79 2 196 2 26 1 27 1 
167 1 28 1 103 1 170 1 1 1 55 1 174 1 33 1 90 2 214 1 66 2 184 2 115 2 95 2 186 2 13 1 117 1 118 2 68 1 119 1 146 1 70 2 15 1 152 2 75 1 192 1 229 1 126 2 17 3 233 1 194 1 79 1 166 3 197 2 245 2 27 1 
170 1 1 1 55 1 174 3 214 1 66 3 115 3 39 1 95 3 186 3 13 1 117 1 118 2 119 1 70 3 15 1 152 3 75 1 126 3 17 3 233 1 79 1 166 3 197 3 245 3 27 1 
170 1 1 1 55 1 174 1 214 1 66 1 116 1 115 1 95 1 186 1 13 1 117 1 118 2 119 1 70 1 15 1 152 1 75 1 126 1 17 1 233 1 79 1 166 1 197 1 245 1 27 1 
13 1 117 1 118 2 170 1 1 1 119 1 55 1 174 1 15 1 75 1 214 1 79 1 116 1 27 1 
117 1 13 1 186 1 170 1 118 2 119 1 1 1 55 1 70 1 15 1 174 1 152 1 75 1 126 1 233 1 17 1 214 1 66 1 79 1 197 1 115 1 166 1 245 1 27 1 95 1 
170 1 1 1 84 1 55 1 174 1 178 1 214 1 66 1 115 1 95 1 186 1 13 1 117 1 118 2 67 1 119 1 70 1 15 1 152 1 75 1 126 1 17 1 233 1 236 1 128 1 241 1 79 1 82 1 166 1 197 1 245 1 27 1 
118 1 172 1 21 1 204 1 
118 1 145 1 9 1 44 1 232 1 
118 1 204 1 175 1 
19 2 118 1 145 1 232 1 
36 1 204 1 
221 1 65 1 149 1 191 1 
102 1 221 1 85 1 191 1 63 1 136 1 131 1 
188 1 223 1 30 1 240 1 196 1 94 1 231 1 
188 1 223 1 30 1 196 1 94 1 231 1 
17 1 152 1 
17 2 194 1 224 1 90 1 71 1 152 1 184 1 
17 1 194 1 67 1 90 1 241 1 184 1 
17 1 152 1 
67 1 90 1 241 1 184 1 
190 1 
190 1 
225 1 
55 1 
119 1 
55 1 
29 1 53 1 54 1 85 1 5 2 32 1 87 1 58 1 206 1 35 2 63 1 135 1 89 1 136 1 210 1 212 1 90 1 213 1 92 1 217 1 118 3 221 1 222 2 67 2 142 1 41 1 97 1 15 1 43 1 72 1 75 1 230 1 19 1 78 1 242 1 79 2 99 1 22 1 81 1 48 1 163 1 26 1 27 1 
0 1 213 1 15 1 75 1 107 1 
29 1 201 1 53 1 30 3 5 2 58 1 206 1 35 2 108 1 135 1 89 1 65 1 90 1 112 1 213 1 217 1 94 4 118 2 221 1 188 3 223 3 67 3 142 1 189 1 15 1 149 1 43 1 72 1 75 1 191 1 154 1 125 1 230 1 231 1 19 1 78 1 240 1 242 1 79 3 99 1 22 1 196 3 48 1 26 1 27 1 
67 2 241 1 99 1 35 2 
29 1 118 2 142 1 15 1 75 1 135 1 19 1 212 1 213 1 79 1 22 1 217 1 48 1 26 1 27 1 
0 1 29 1 118 2 142 1 15 1 75 1 135 1 19 1 213 1 79 1 22 1 217 1 48 1 26 1 27 1 
67 2 241 1 58 1 35 2 
206 1 
0 1 29 1 118 2 142 1 15 1 75 1 107 1 135 1 19 1 213 1 79 1 22 1 217 1 48 1 26 1 27 1 
29 1 118 2 67 3 142 1 15 1 43 1 75 1 125 2 135 1 19 1 78 1 90 1 213 1 241 1 79 1 22 1 217 1 48 1 26 1 27 1 
29 1 118 2 142 1 15 1 75 1 135 1 19 1 213 1 98 1 79 1 22 1 217 1 48 1 26 1 27 1 
0 1 29 2 118 4 142 2 15 2 75 2 107 1 135 2 19 2 213 2 98 1 79 2 22 2 217 2 48 2 26 2 27 2 
29 1 118 2 142 1 15 1 75 1 135 1 19 1 213 1 79 1 22 1 217 1 48 1 116 1 26 1 27 1 
29 2 118 4 142 2 15 2 75 2 135 2 19 2 212 1 213 2 98 1 79 2 22 2 217 2 48 2 26 2 27 2 
51 1 201 1 53 1 30 2 5 1 61 1 108 1 89 1 111 1 65 1 90 1 211 1 112 1 11 1 94 3 38 1 118 2 221 1 67 1 188 2 223 2 142 1 228 1 189 1 15 1 149 1 72 1 75 1 191 1 154 1 125 1 156 1 231 1 19 1 46 1 159 1 240 1 79 3 196 2 26 1 27 1 
224 1 51 1 90 1 143 1 3 1 156 1 
241 1 61 1 
11 1 241 1 
51 1 84 1 3 1 111 1 211 1 90 1 38 1 118 2 142 1 67 2 143 1 228 1 15 1 75 1 156 2 125 1 19 1 46 1 79 1 82 1 26 1 27 1 
169 1 118 2 67 2 142 1 51 2 228 1 15 1 75 1 125 1 156 1 19 1 90 2 211 1 46 1 159 1 241 1 79 1 38 1 26 1 27 1 
0 1 46 1 211 1 228 1 38 1 156 1 
169 1 51 2 209 1 137 1 90 2 38 1 118 2 142 1 67 2 228 1 15 1 75 1 76 1 156 1 125 1 19 1 159 1 79 1 241 1 26 1 27 1 
200 1 51 1 84 1 3 1 111 1 64 1 211 1 90 1 38 1 118 2 142 1 67 2 224 1 143 1 228 1 15 1 75 1 156 2 125 1 19 1 46 1 79 1 82 1 26 1 27 1 
111 1 
51 2 53 1 54 1 3 1 84 1 85 1 5 2 32 1 87 1 59 1 61 1 89 1 63 1 111 1 136 1 209 1 210 1 90 2 211 1 92 1 11 1 38 1 118 3 221 1 67 3 222 4 142 1 41 1 143 1 228 1 97 1 189 2 15 1 72 1 75 1 125 2 156 2 19 1 46 1 159 1 79 2 82 1 163 1 26 1 27 1 
0 1 46 1 211 1 228 1 38 1 156 1 
51 2 53 1 3 1 5 2 59 1 61 1 108 1 65 1 111 1 112 1 11 1 118 2 188 4 67 3 15 1 189 2 72 1 75 1 191 1 125 2 19 1 79 3 196 4 82 1 26 1 27 1 201 1 84 1 30 4 89 1 211 1 90 2 38 1 94 5 221 1 142 1 223 4 143 1 228 1 149 1 154 1 156 2 231 1 46 1 159 1 240 1 

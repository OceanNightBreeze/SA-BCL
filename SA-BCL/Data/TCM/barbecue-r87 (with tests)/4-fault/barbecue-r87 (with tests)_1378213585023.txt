#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 195 174 175 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 9443 | return null
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4320 | = null
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | CONSTANT | 4588 | 2 -> 3
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 26011 | 3 -> 0
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getHeight()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
72 1 160 1 88 1 43 1 252 1 115 1 
72 1 160 1 43 1 252 1 115 1 
170 1 158 2 135 1 
71 1 222 1 93 1 203 2 247 1 115 1 209 1 1 1 176 1 83 1 84 1 136 3 38 1 64 1 25 1 67 1 151 1 9 1 187 1 
244 1 222 1 93 1 71 1 203 1 115 1 1 2 83 1 84 1 136 3 38 1 64 1 67 1 9 1 259 1 187 1 
84 1 222 1 79 1 83 1 
84 1 93 2 222 1 12 1 136 2 38 1 203 1 123 1 9 1 187 1 83 1 
72 1 71 1 222 1 93 1 203 1 247 1 115 2 209 1 1 1 176 1 34 1 84 1 136 3 38 1 64 2 66 1 67 1 151 1 9 1 187 1 
72 1 71 1 222 1 93 1 203 1 247 1 115 2 209 1 1 1 176 1 84 1 136 3 38 1 64 2 66 1 67 1 151 1 9 1 187 1 
72 1 222 1 93 1 246 1 203 1 115 1 34 1 83 1 84 1 136 2 38 1 64 1 66 1 242 1 9 1 187 1 140 1 
72 1 222 1 93 1 246 1 203 1 115 1 34 1 83 1 84 1 136 2 38 1 64 1 66 1 9 1 46 1 187 1 140 1 
72 1 222 1 93 1 246 1 203 1 53 1 115 1 130 1 132 1 83 1 84 1 136 2 38 1 64 1 66 1 9 1 187 1 140 1 
72 1 222 1 93 1 246 1 203 1 53 1 115 1 34 1 130 1 132 1 83 1 84 1 136 2 38 1 64 1 66 1 9 1 187 1 140 1 
84 1 93 1 222 1 136 3 38 1 203 2 9 1 183 1 187 2 83 1 
222 1 93 1 157 1 171 1 83 1 84 1 136 3 4 2 9 1 187 2 
84 1 93 2 222 1 171 1 136 2 4 1 177 1 9 1 187 1 83 1 
84 1 93 1 222 1 171 1 136 2 4 1 9 1 36 1 187 1 83 1 
84 1 93 2 222 1 171 1 136 2 4 1 9 2 183 1 187 3 83 1 
222 1 93 1 71 1 171 1 115 1 14 1 1 1 60 1 83 1 84 1 136 4 4 2 64 1 9 2 187 2 259 1 
84 1 93 1 222 1 171 1 136 2 4 1 178 1 9 1 187 1 83 1 
221 1 222 1 93 1 71 1 171 1 115 1 14 1 1 4 81 1 212 1 83 1 84 1 136 3 4 1 64 1 165 1 9 1 187 1 
84 1 245 1 93 1 222 1 171 1 136 2 4 1 194 1 9 1 187 1 83 1 
24 1 146 3 99 1 
146 1 
0 1 72 1 71 1 204 1 141 2 207 1 208 1 78 1 1 3 147 1 82 4 2 2 86 1 150 4 4 1 215 1 218 1 153 2 220 1 91 2 222 1 93 3 92 1 224 3 157 1 159 1 161 1 96 1 14 1 162 1 15 4 19 4 20 1 22 2 166 1 230 1 27 1 169 1 171 1 172 4 234 2 113 2 112 8 174 1 236 4 115 2 36 2 179 1 180 1 39 2 241 4 183 1 186 2 187 2 244 2 127 1 248 2 252 2 54 1 190 1 131 4 62 1 133 4 136 3 137 1 256 1 195 1 66 1 259 1 
0 1 141 2 145 2 144 2 1 2 147 1 3 2 4 1 150 6 5 2 153 4 152 2 157 1 159 1 161 1 14 1 162 1 15 4 16 4 17 2 22 4 166 1 27 1 168 2 171 1 172 4 174 1 32 2 33 2 36 2 179 1 37 1 180 1 41 1 183 1 187 2 185 2 49 2 48 2 190 1 59 4 62 1 195 1 65 2 196 2 198 2 66 1 199 3 71 1 72 1 202 2 204 1 74 2 75 1 76 4 207 1 208 1 210 2 86 1 216 2 218 1 90 4 220 1 92 1 93 3 222 1 223 2 95 2 96 1 98 2 100 2 103 1 228 1 104 2 105 2 109 2 110 2 111 2 112 14 235 1 115 2 241 4 125 2 244 1 249 1 252 2 251 2 129 1 131 3 133 3 136 4 137 1 257 2 259 1 
0 1 72 1 71 1 202 2 74 2 204 1 75 1 141 2 76 4 207 1 144 2 145 2 208 1 1 2 210 2 147 1 86 1 150 6 4 1 3 2 215 1 216 2 218 1 152 2 90 4 153 4 220 1 222 1 93 3 92 1 223 2 157 1 159 1 161 1 95 2 96 1 98 2 14 1 162 1 100 2 15 4 17 2 16 4 228 1 22 4 104 2 105 2 166 1 109 2 27 1 168 2 110 2 171 1 111 2 172 4 112 4 174 1 32 2 115 2 33 2 36 2 121 1 37 1 179 1 180 1 41 1 241 4 125 2 183 1 185 2 187 2 48 2 49 2 244 1 251 2 252 2 190 1 59 4 131 3 62 1 133 3 136 3 137 1 65 2 195 1 196 2 66 1 198 2 257 2 259 1 
0 1 72 1 71 1 202 3 74 3 204 1 141 2 75 1 76 3 207 1 145 3 144 3 208 1 1 2 147 1 86 1 150 6 4 1 3 2 216 2 218 1 90 4 153 4 152 3 154 1 220 1 222 1 93 3 92 1 157 1 159 1 161 1 95 2 96 1 98 2 14 1 162 1 15 4 100 2 17 3 16 5 22 4 104 2 166 1 231 1 109 2 27 1 168 3 232 1 110 2 171 1 111 2 172 4 112 4 31 1 174 1 32 2 115 2 36 2 179 1 239 1 180 1 241 4 125 2 183 1 185 2 187 2 49 3 244 1 52 2 251 2 252 2 190 1 59 5 131 3 62 1 133 3 61 1 136 3 137 1 195 1 196 2 66 1 198 2 257 2 259 1 
0 1 72 1 71 1 202 3 74 3 204 1 141 2 75 1 76 3 207 1 144 3 145 3 208 1 1 2 147 1 86 1 150 6 4 2 3 3 215 1 216 2 218 1 90 4 153 4 152 3 154 1 220 1 92 1 222 1 93 5 157 1 12 1 159 1 161 1 95 2 96 1 98 2 14 1 162 1 15 4 100 3 17 3 16 5 22 4 21 1 104 2 166 1 109 2 27 1 168 3 110 2 171 1 111 2 172 4 112 4 174 1 32 2 115 2 36 2 37 1 179 1 239 1 180 1 41 1 241 4 125 3 183 1 185 2 187 4 244 1 49 3 52 2 251 2 252 2 190 1 59 5 131 3 60 1 62 1 133 3 61 1 136 4 137 1 195 1 196 2 66 1 198 2 257 2 259 1 
0 1 72 1 71 1 202 3 74 3 204 1 141 2 75 1 76 3 207 1 144 3 145 3 208 1 1 2 147 1 86 1 150 6 4 1 3 2 215 1 216 2 218 1 90 4 153 4 152 3 154 1 220 1 222 1 93 3 92 1 157 1 159 1 161 1 95 2 96 1 98 2 14 1 162 1 15 4 100 2 17 3 16 5 22 4 21 1 104 2 166 1 109 2 27 1 168 3 110 2 171 1 111 2 172 4 112 4 174 1 32 2 115 2 36 2 37 1 179 1 239 1 180 1 41 1 241 4 125 2 183 1 185 2 187 2 244 1 49 3 52 2 251 2 252 2 190 1 59 5 131 3 62 1 133 3 61 1 136 3 137 1 195 1 196 2 66 1 198 2 257 2 259 1 
157 1 174 1 208 1 190 1 15 4 86 1 179 1 195 1 166 1 241 4 220 1 27 1 
128 1 
0 1 141 2 145 3 144 3 1 3 147 1 3 2 4 1 150 6 152 3 153 4 154 1 12 1 157 1 159 1 161 1 14 1 162 1 15 4 16 5 17 3 21 1 22 4 166 1 27 1 168 3 171 1 172 4 174 1 32 2 36 2 179 1 37 1 180 1 41 1 183 1 187 2 185 2 49 3 52 2 190 1 59 5 61 1 62 1 195 1 196 2 198 2 66 1 71 1 72 1 202 3 204 1 74 3 75 1 76 3 207 1 208 1 86 1 215 1 89 1 216 2 218 1 90 4 220 1 92 1 93 4 222 1 95 2 96 1 98 2 100 2 104 2 109 2 231 1 232 1 110 2 111 2 112 4 115 2 239 1 241 4 125 2 244 2 252 2 251 2 131 3 133 3 136 3 137 1 257 2 259 1 
0 1 141 2 145 2 144 2 1 2 147 1 3 2 150 6 153 4 152 2 11 1 159 1 161 1 162 1 15 4 16 4 17 2 22 4 166 1 27 1 168 2 30 1 172 4 173 1 174 1 32 2 33 2 36 2 179 1 37 1 180 1 38 1 40 2 41 1 183 1 187 2 185 2 49 2 48 2 189 2 190 1 59 4 56 1 62 1 195 1 65 2 196 2 67 1 198 2 66 1 71 1 72 1 202 2 204 1 203 1 74 2 75 1 76 4 207 1 208 1 210 2 86 1 85 1 214 1 215 1 216 2 217 2 218 1 90 4 220 1 92 1 93 3 222 1 223 2 95 2 96 1 98 2 100 2 228 1 104 2 229 2 105 2 106 1 109 2 110 2 111 2 233 1 112 4 114 1 115 2 121 1 120 1 122 2 241 4 125 2 244 1 252 2 251 2 131 3 133 3 136 3 137 1 257 2 259 1 
195 1 174 1 241 1 15 1 220 1 
0 1 72 1 71 1 202 3 74 3 204 1 141 2 75 1 76 3 207 1 145 3 144 3 1 2 147 1 86 1 150 6 4 1 3 2 216 2 218 1 90 4 153 4 152 3 154 1 220 1 222 1 93 3 92 1 157 1 159 1 161 1 95 2 96 1 98 2 14 1 162 1 15 4 100 2 17 3 16 5 22 4 21 1 104 2 166 1 231 1 109 2 27 1 168 3 232 1 110 2 171 1 111 2 172 4 112 4 174 1 32 2 115 2 36 2 37 1 179 1 239 1 180 1 41 1 241 4 125 2 183 1 185 2 187 2 244 1 49 3 52 2 251 2 252 2 190 1 59 5 131 3 62 1 133 3 61 1 136 3 137 1 195 1 196 2 66 1 198 2 257 2 259 1 
0 1 72 1 71 1 202 3 74 3 204 1 141 2 75 1 76 3 207 1 145 3 144 3 1 2 147 1 86 1 150 6 4 1 3 2 216 2 218 1 90 4 153 4 152 3 154 1 220 1 222 1 93 3 92 1 157 1 159 1 161 1 95 2 96 1 98 2 226 1 14 1 162 1 15 4 100 2 17 3 16 5 22 4 21 1 104 2 166 1 231 1 109 2 27 1 168 3 232 1 110 2 171 1 111 2 172 4 112 4 32 2 115 2 36 2 37 1 179 1 239 1 180 1 41 1 241 4 125 2 183 1 185 2 187 2 244 1 49 3 52 2 251 2 252 2 190 1 59 5 131 3 62 1 133 3 61 1 136 3 137 1 195 1 196 2 66 1 198 2 257 2 259 1 
0 1 141 2 145 6 144 6 1 2 147 1 3 9 4 8 150 6 152 6 153 6 154 4 157 1 159 1 161 1 14 1 162 1 15 4 16 8 17 6 22 6 26 1 166 1 167 1 27 1 168 6 171 8 172 4 174 1 32 2 175 1 33 2 36 2 179 1 37 1 180 1 41 1 42 1 183 1 187 9 185 2 49 6 48 2 52 2 190 1 59 8 62 1 61 4 193 1 195 1 65 2 196 2 66 1 198 2 70 1 72 1 71 1 202 6 73 1 204 8 74 6 75 8 76 8 207 1 208 1 210 2 86 1 89 1 216 2 218 1 90 4 220 1 93 10 222 8 92 1 223 2 95 2 96 1 98 2 100 9 228 1 104 2 105 2 108 1 231 1 109 2 232 1 110 2 111 2 112 6 115 2 239 4 241 4 125 9 126 1 244 1 252 2 251 2 131 3 133 3 136 17 137 1 257 2 259 1 
112 1 249 1 45 1 
112 1 238 1 
112 1 143 1 
112 1 238 1 
112 1 238 1 
112 1 143 1 
72 1 246 1 29 1 112 1 115 1 77 1 117 1 130 1 133 1 149 1 150 1 140 1 
72 1 150 1 205 1 112 1 115 1 133 1 
72 1 246 1 150 1 112 1 115 1 117 1 140 1 
112 1 143 1 
112 1 35 1 
243 1 19 1 112 1 68 1 
192 1 112 1 236 1 
28 1 171 1 204 1 172 1 112 1 143 1 35 1 4 1 6 1 187 1 91 1 93 1 222 1 97 1 55 1 58 1 136 2 197 1 
13 1 
28 1 93 1 222 1 171 1 136 2 4 1 204 1 197 1 6 1 79 1 58 1 187 1 91 1 
222 1 93 1 204 1 203 2 75 1 100 2 213 1 136 3 3 2 38 1 125 2 187 1 
72 1 71 1 202 2 204 1 203 1 74 2 141 2 75 1 76 2 207 1 144 2 145 2 1 1 147 1 85 1 214 1 3 1 150 6 217 2 216 2 153 4 90 4 152 2 11 1 222 1 93 2 12 1 161 1 95 2 98 2 100 1 17 2 16 4 22 4 104 2 229 2 106 1 109 2 168 2 110 2 30 1 233 1 111 2 172 4 173 1 112 4 32 2 114 1 115 2 33 2 36 2 120 1 122 2 38 1 40 2 125 1 185 2 187 1 244 1 49 2 189 2 251 2 252 2 56 1 59 4 131 3 133 3 136 3 137 1 196 2 66 1 257 2 67 1 198 2 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 1 143 1 145 1 32 1 144 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 44 2 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
222 1 93 1 204 1 203 2 75 1 100 2 213 1 136 3 3 2 38 1 125 2 187 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
71 1 202 1 204 1 203 1 74 1 141 1 75 1 76 1 144 1 145 1 1 1 147 1 3 1 150 3 217 1 216 1 153 2 90 2 152 1 222 1 93 1 95 1 98 1 100 1 17 1 16 2 22 2 104 1 229 1 109 1 168 1 110 1 233 1 111 1 172 2 112 2 32 1 115 1 33 1 36 1 122 1 38 1 40 1 125 1 185 1 187 1 244 1 49 1 189 1 251 1 252 1 59 2 131 3 136 3 137 1 196 1 257 1 67 1 198 1 
222 1 93 1 204 1 203 1 75 1 100 1 213 1 136 2 3 1 38 1 229 1 125 1 187 1 
71 1 202 1 74 1 141 1 76 2 145 1 144 1 1 1 210 1 147 1 150 3 217 1 216 1 153 2 90 2 152 1 157 1 223 1 95 1 98 1 14 1 16 2 17 1 22 2 104 1 229 1 105 1 109 1 168 1 110 1 233 1 111 1 172 2 112 2 32 1 115 1 33 1 36 1 122 1 40 1 185 1 49 1 244 1 48 1 189 1 252 1 251 1 59 2 131 3 136 1 137 1 65 1 196 1 257 1 198 1 
71 1 202 1 204 1 203 1 74 1 141 1 75 1 76 1 144 1 145 1 1 1 147 1 3 1 150 3 89 1 217 1 216 1 153 2 90 2 152 1 222 1 93 1 95 1 98 1 100 1 17 1 16 2 22 2 104 1 229 1 109 1 168 1 110 1 233 1 111 1 172 2 112 2 32 1 115 1 33 1 36 1 122 1 38 1 40 1 125 1 185 1 187 1 244 1 49 1 189 1 251 1 252 1 59 2 131 3 136 3 137 1 196 1 257 1 67 1 198 1 
71 1 202 1 74 1 204 1 141 1 75 1 76 1 144 1 145 1 1 1 147 1 4 1 3 1 150 3 89 1 217 1 216 1 153 2 90 2 152 1 93 1 222 1 157 1 95 1 98 1 14 1 100 1 17 1 16 2 22 2 104 1 229 1 109 1 168 1 110 1 171 1 233 1 111 1 172 2 112 2 32 1 115 1 33 1 36 1 122 1 40 1 125 1 185 1 187 1 244 1 49 1 189 1 251 1 252 1 59 2 131 3 136 3 137 1 196 1 198 1 257 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 2 76 2 144 1 32 1 145 1 210 1 213 1 38 1 3 1 216 1 152 1 90 2 125 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 17 1 16 2 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 1 143 1 145 1 32 1 144 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 49 1 48 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 145 1 144 1 32 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 185 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 145 1 144 1 32 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 185 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 145 1 144 1 32 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 185 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 2 75 1 76 1 143 1 145 1 32 1 144 1 213 1 38 1 3 1 216 1 152 1 90 2 125 1 187 1 185 1 49 1 48 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 145 1 144 1 32 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 185 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
22 1 112 1 57 1 153 1 33 1 
22 1 112 1 257 1 57 1 153 1 
50 1 22 1 112 1 153 1 33 1 148 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
72 1 202 1 74 1 204 1 203 1 141 1 75 1 76 2 144 1 207 1 145 1 77 3 210 1 149 3 213 1 3 1 150 3 216 1 152 1 153 2 90 2 222 1 93 2 223 1 159 1 161 1 95 1 98 1 100 1 17 1 16 2 22 2 104 1 105 1 109 1 168 1 29 3 110 1 111 1 172 2 112 2 32 1 115 1 117 1 33 1 36 1 38 1 125 1 185 1 187 1 49 1 48 1 246 1 251 1 252 1 59 2 130 4 132 1 133 3 136 2 65 1 196 1 198 1 257 1 66 1 140 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 145 1 144 1 32 1 38 1 3 1 89 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 1 143 1 145 1 32 1 144 1 213 1 38 1 3 1 216 1 44 2 152 1 90 3 125 1 185 1 187 1 49 1 48 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 44 2 152 1 90 3 125 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 2 143 1 145 1 32 1 144 1 210 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 49 1 48 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 105 1 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
93 1 222 1 136 2 38 1 3 1 203 1 204 1 75 1 125 1 100 1 187 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 144 1 32 1 145 1 38 1 3 1 216 1 44 2 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
222 1 93 1 204 1 203 1 75 1 100 1 213 1 136 2 3 1 38 1 125 1 138 1 187 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 1 143 1 144 1 32 1 145 1 38 1 3 1 216 1 44 2 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 145 1 144 1 32 1 38 1 3 1 89 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 75 1 172 3 76 2 143 1 144 1 32 1 145 1 38 1 3 1 216 1 152 1 90 3 125 1 185 1 187 1 49 1 93 1 222 1 223 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 196 1 198 1 109 1 
72 1 202 1 74 1 204 1 203 2 141 1 75 1 206 1 76 1 145 1 207 1 144 1 77 2 149 2 213 1 3 2 150 2 216 1 152 1 90 2 10 1 93 4 222 1 12 1 159 1 161 1 95 1 98 1 100 2 16 2 17 1 104 1 109 1 168 1 29 2 110 1 111 1 172 2 112 3 32 1 115 1 117 1 116 1 36 1 38 1 125 2 46 1 187 2 49 1 246 1 249 3 251 1 59 2 130 3 60 1 132 2 133 2 136 3 255 1 65 1 196 1 198 1 66 1 140 1 
168 1 202 1 110 1 111 1 74 1 203 1 204 1 172 3 75 1 76 1 143 1 145 1 32 1 144 1 213 1 38 1 3 1 216 1 152 1 90 3 125 1 187 1 49 1 48 1 93 1 222 1 98 1 251 1 59 2 100 1 16 2 17 1 136 2 65 1 196 1 198 1 109 1 
72 1 29 2 203 1 204 1 141 1 112 4 207 1 209 1 77 2 115 1 1 1 176 1 237 1 36 1 149 2 150 2 38 1 151 1 7 1 182 1 242 1 8 1 155 1 187 1 91 1 93 2 222 1 246 1 159 1 161 1 95 1 247 1 249 3 130 3 133 2 132 1 164 1 136 2 104 1 66 1 140 1 
72 1 201 1 29 2 203 1 204 1 141 1 112 4 207 1 77 2 115 1 237 1 36 1 122 1 149 2 150 2 38 1 40 1 217 1 7 1 182 1 8 1 155 1 187 1 91 1 245 1 93 1 222 1 246 1 161 1 95 1 250 1 189 1 249 3 130 3 133 2 132 1 164 1 63 1 136 2 194 1 104 1 106 1 139 1 140 1 
168 3 110 1 202 3 111 1 74 3 204 1 203 1 172 2 75 1 76 3 32 1 145 3 144 3 239 1 3 1 38 1 89 1 216 1 90 2 152 3 125 1 154 2 185 1 187 1 49 3 93 1 222 1 158 1 98 1 251 1 59 4 100 1 61 1 16 4 17 3 136 2 196 1 198 1 109 1 
168 1 202 1 74 1 204 1 203 1 75 1 76 1 145 1 144 1 239 1 3 1 38 1 152 1 125 1 154 1 187 1 49 1 93 1 222 1 59 1 100 1 61 1 16 1 17 1 136 2 
168 3 202 3 74 3 204 1 203 1 75 1 76 3 145 3 144 3 239 1 3 1 38 1 152 3 125 1 154 3 187 1 49 3 93 1 222 1 59 3 100 1 134 1 61 1 16 3 17 3 136 2 
168 1 202 1 74 1 204 1 203 1 75 1 76 1 145 1 144 1 178 1 239 1 3 1 38 1 152 1 125 1 154 1 187 1 49 1 93 1 222 1 59 1 100 1 61 1 16 1 17 1 136 2 
93 1 222 1 204 1 203 1 75 1 178 1 100 1 61 1 136 2 3 1 38 1 125 1 154 1 187 1 
168 1 202 1 74 1 204 1 203 1 75 1 112 1 76 1 143 1 145 1 144 1 211 1 239 1 3 1 38 1 153 1 152 1 125 1 154 1 187 1 49 1 93 1 222 1 52 1 57 1 59 1 100 1 61 1 16 1 17 1 136 2 22 1 
101 1 136 1 51 1 47 1 
101 1 136 1 107 1 
136 1 87 1 25 1 69 2 
94 1 136 1 87 1 25 1 227 1 
101 1 119 1 
149 1 29 1 77 1 130 1 132 1 133 1 
122 1 72 1 40 1 240 1 189 1 106 1 115 1 
72 1 161 1 207 1 115 1 
149 1 29 1 77 1 117 1 130 1 132 1 133 1 
172 1 112 1 98 1 143 1 90 1 59 1 
145 1 59 1 
172 1 112 1 143 1 90 1 
158 1 172 1 98 1 145 1 90 1 59 2 118 1 
145 1 59 1 
4 1 
171 1 
4 1 
203 1 
203 1 
38 1 
222 1 93 1 156 1 171 1 204 1 142 1 80 1 163 1 191 1 136 2 254 1 4 1 187 1 219 1 91 1 
222 1 93 1 156 1 171 1 204 1 178 1 80 1 163 1 191 1 136 2 254 1 4 1 187 1 219 1 91 1 
222 2 93 2 156 2 171 2 204 2 142 1 80 2 163 2 191 2 136 4 254 2 4 2 258 1 187 2 219 2 91 2 
222 1 93 1 156 1 171 1 204 1 172 1 112 3 143 1 236 2 225 1 80 1 163 1 191 1 136 2 254 1 4 1 184 1 187 1 219 1 91 1 
222 1 93 1 156 1 171 1 204 1 80 1 163 1 191 1 136 2 254 1 4 1 258 1 187 1 219 1 91 1 
188 1 222 2 93 2 156 2 171 2 204 2 79 1 80 2 163 2 191 2 136 4 254 2 4 2 258 1 187 2 219 2 91 2 
188 1 222 1 93 1 156 1 171 1 204 1 79 1 80 1 163 1 191 1 136 2 254 1 4 1 187 1 219 1 91 1 
222 1 93 1 156 1 171 1 204 1 172 2 112 1 143 1 236 1 225 2 80 1 163 1 191 1 136 2 254 1 4 1 184 1 187 1 219 1 91 1 
200 1 
23 1 112 2 143 1 249 2 
102 1 112 2 143 1 249 2 
200 1 71 1 171 1 233 1 204 1 172 1 141 1 142 1 112 2 115 1 1 1 80 1 147 1 36 1 122 1 181 1 150 2 4 1 40 1 217 1 184 1 219 1 187 1 91 1 244 1 93 2 222 1 156 1 12 1 95 1 189 1 225 1 249 2 14 1 131 2 163 1 191 1 102 1 254 1 136 3 137 1 104 1 23 1 
188 1 222 1 204 1 79 1 80 1 
200 1 72 1 29 3 171 1 204 1 172 1 141 1 112 3 236 1 207 1 77 3 115 1 117 1 80 1 36 1 149 3 150 2 4 1 184 1 219 1 187 1 91 1 93 3 222 1 156 1 12 1 246 1 159 1 161 1 95 1 225 1 249 2 130 4 163 1 133 3 132 1 19 1 191 1 102 1 254 1 136 2 104 1 23 1 66 1 140 1 
169 1 170 1 171 1 204 1 172 1 113 1 112 2 236 1 78 1 82 1 4 1 39 1 153 1 187 1 186 1 91 1 222 1 93 1 224 2 158 1 54 1 136 2 20 1 192 1 22 1 
113 1 
169 1 71 1 171 1 233 1 204 1 172 2 234 1 141 1 113 1 112 3 236 2 115 1 78 1 1 1 147 1 82 2 2 1 36 1 122 1 4 1 150 2 40 1 124 1 39 1 217 1 153 1 186 1 187 1 91 1 244 1 222 1 93 2 12 1 224 2 248 1 189 1 252 1 54 1 14 1 131 4 19 2 136 3 20 1 22 1 137 1 
169 1 224 1 20 1 54 1 79 1 78 1 
169 1 72 1 29 4 171 1 204 1 172 2 234 1 141 1 113 1 112 3 236 2 207 1 77 4 115 1 117 1 78 1 82 2 36 1 2 1 149 4 150 2 4 1 39 1 153 1 186 1 187 1 91 1 222 1 93 3 224 2 12 1 246 1 159 1 161 1 248 1 252 1 54 1 130 5 133 4 132 1 19 2 136 2 20 1 22 1 66 1 140 1 
169 1 224 1 20 1 54 1 79 1 78 1 
93 1 222 1 224 1 171 1 204 1 172 2 234 1 112 2 143 1 236 1 54 1 253 1 82 2 18 1 20 1 136 2 4 1 124 1 68 1 187 1 91 1 
169 1 93 1 222 1 224 1 171 1 204 1 172 2 234 1 112 2 143 1 236 1 54 1 78 1 82 2 20 1 136 2 4 1 68 1 187 1 91 1 
169 1 72 1 29 2 171 1 204 1 172 1 234 1 141 1 113 1 112 1 236 1 207 1 77 2 115 1 117 1 78 1 82 1 36 1 2 1 149 2 150 1 4 1 187 1 91 1 222 1 93 3 224 1 12 1 246 1 159 1 161 1 248 1 54 1 130 3 133 2 132 1 19 1 136 2 20 1 66 1 140 1 
158 1 224 1 172 1 39 1 82 1 186 1 
143 1 2 1 
248 1 143 1 
169 1 171 1 204 1 172 1 113 1 112 2 236 1 78 1 82 1 4 1 39 1 153 1 187 1 186 1 91 1 222 1 93 1 224 2 54 1 136 2 20 1 22 1 

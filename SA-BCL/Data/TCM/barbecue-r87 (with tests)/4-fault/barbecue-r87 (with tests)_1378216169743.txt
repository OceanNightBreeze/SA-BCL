#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 67 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 176 76 4 45 219 68 167 164 35 113 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.IndexOutOfBoundsException 17 156 76 4 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | ASSIGN | 3259 | = null
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 11652 | stmt -> ;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 26978 | stmt -> ;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Module:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 1 51 1 13 1 86 1 196 1 
168 2 221 1 187 1 
172 1 51 1 13 1 86 1 196 1 77 1 
60 1 74 1 146 1 220 1 
79 1 1 1 146 1 55 1 127 1 220 1 223 1 60 1 104 2 140 2 213 2 49 1 
51 2 52 1 79 1 85 1 69 1 4 1 55 1 127 1 72 1 220 1 132 1 60 1 241 1 13 1 104 3 121 1 106 2 140 1 213 1 157 1 
51 2 52 1 79 1 85 1 69 1 4 1 55 1 127 1 72 1 220 1 132 1 60 1 241 1 13 1 104 3 121 1 106 2 140 1 213 1 
51 1 79 1 4 1 146 1 21 1 55 1 127 1 220 1 206 1 60 1 13 1 104 2 106 1 140 1 213 1 157 1 170 1 
51 1 79 1 4 1 146 1 21 1 55 1 127 1 220 1 206 1 60 1 13 1 104 2 106 1 140 1 213 1 157 1 233 1 
51 1 79 1 4 1 146 1 21 1 162 1 55 1 127 1 220 1 101 1 206 1 60 1 152 1 13 1 104 2 106 1 140 1 213 1 
51 1 79 1 4 1 146 1 21 1 162 1 55 1 127 1 220 1 101 1 206 1 60 1 152 1 13 1 104 2 106 1 140 1 213 1 157 1 
79 2 146 1 55 1 127 1 220 1 60 1 104 3 140 1 213 2 141 1 
79 2 19 1 146 1 55 1 220 1 91 1 60 1 59 2 104 3 140 1 
79 1 19 1 59 1 60 1 104 2 146 1 138 1 140 2 55 1 220 1 
79 1 19 1 146 1 55 1 220 1 58 1 60 1 59 1 104 2 140 1 
51 1 79 1 19 1 85 1 69 1 146 1 55 1 72 1 220 1 6 1 132 1 60 1 59 1 241 1 104 3 121 1 106 1 140 1 
51 1 79 1 19 1 85 1 146 1 55 1 220 1 129 1 72 2 6 1 60 1 59 1 104 3 106 1 140 1 246 1 
79 3 19 1 146 1 55 2 220 1 60 1 59 1 104 2 140 2 141 1 
51 1 79 2 19 1 85 1 146 1 55 2 220 1 72 1 56 1 6 1 60 1 59 2 104 4 106 1 140 1 246 1 
79 1 19 1 59 1 60 1 53 1 104 2 146 1 140 1 55 1 220 1 
51 1 79 1 40 1 19 1 85 1 146 1 55 1 200 1 220 1 72 4 6 1 57 1 60 1 59 1 104 3 106 1 140 1 154 1 
79 1 19 1 146 1 55 1 220 1 240 1 60 1 59 1 104 2 140 1 243 1 
63 1 54 1 182 3 
182 1 
184 2 183 2 68 1 4 1 129 1 72 2 130 1 6 1 10 1 131 1 189 2 134 1 13 1 12 1 140 3 76 2 142 1 141 1 78 2 16 2 79 2 19 1 144 1 85 1 87 1 89 1 199 2 22 1 91 1 203 1 24 4 204 1 92 1 151 1 31 1 210 1 35 1 37 2 159 4 218 1 219 1 41 1 220 1 164 1 100 1 165 1 45 1 104 3 167 1 226 1 105 4 228 2 107 1 232 5 172 1 51 2 174 2 114 1 58 1 176 1 59 1 120 1 65 1 246 1 122 1 
0 1 68 1 3 1 4 1 128 1 126 2 129 1 72 2 130 1 6 1 7 1 9 2 131 1 10 1 189 3 135 1 134 4 13 1 137 1 14 1 139 2 140 3 76 2 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 147 1 91 1 201 1 202 1 24 4 205 1 204 1 31 1 209 1 210 1 34 1 35 1 36 2 156 1 215 1 37 2 159 3 218 1 219 1 163 1 220 1 98 1 164 1 43 1 165 1 222 2 103 2 225 1 45 1 104 3 167 1 226 1 47 1 105 4 229 3 230 1 107 1 169 1 109 1 231 1 232 14 50 2 172 1 51 2 235 1 239 1 175 2 58 1 176 1 59 1 118 1 119 2 120 1 242 1 179 1 64 1 245 1 65 4 246 1 122 1 
0 1 68 1 3 1 4 1 126 2 129 1 72 2 130 1 6 1 7 1 131 1 10 1 189 3 135 1 134 4 13 1 137 1 14 1 139 2 140 3 76 2 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 201 1 202 1 24 4 205 1 204 1 31 1 209 1 210 1 34 1 35 1 36 2 156 1 215 1 37 2 159 3 218 1 219 1 163 1 220 1 98 1 164 1 43 1 165 1 222 2 103 2 225 1 45 1 104 3 167 1 226 1 47 1 105 4 107 1 169 1 231 1 232 4 50 2 172 1 51 2 235 1 239 1 175 2 58 1 176 1 59 1 118 1 119 2 120 1 242 1 179 1 64 1 245 1 65 4 246 1 122 1 
0 2 68 1 3 1 4 1 186 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 3 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 107 1 169 2 232 4 50 3 172 1 51 2 173 2 175 2 58 1 176 1 59 1 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 
29 1 
0 2 1 1 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 4 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 107 1 169 2 231 1 232 4 50 3 172 1 51 2 235 1 111 1 173 2 175 2 58 1 176 1 59 1 118 1 120 1 242 1 244 1 64 2 65 4 245 2 246 1 122 1 
0 2 1 1 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 5 141 1 17 1 79 3 193 1 82 3 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 3 103 3 225 2 45 1 104 4 167 1 226 1 105 4 107 1 169 2 231 1 232 4 50 3 172 1 51 2 235 1 111 1 173 2 175 2 56 1 58 1 176 1 59 2 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 
0 2 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 3 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 107 1 169 2 231 1 232 4 50 3 172 1 51 2 235 1 111 1 173 2 175 2 58 1 176 1 59 1 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 
130 1 91 1 164 1 24 4 204 1 10 1 165 1 31 1 210 1 105 4 107 1 35 1 
0 1 68 1 3 1 4 1 127 1 126 2 129 1 72 2 130 1 7 1 131 1 10 1 189 3 135 1 134 4 13 1 137 1 14 1 139 2 140 3 76 2 141 1 17 1 79 2 193 1 82 2 144 1 20 1 85 1 90 1 23 1 201 1 202 1 24 4 205 1 204 1 207 1 31 1 209 1 210 1 34 1 213 1 35 1 36 2 156 1 215 1 37 2 158 1 159 3 218 1 219 1 163 1 220 1 98 1 164 1 43 1 222 2 165 1 103 2 225 1 45 1 104 3 167 1 226 1 47 1 105 4 107 1 169 1 231 1 232 4 50 2 52 1 51 2 172 1 235 1 239 1 112 1 175 2 58 1 176 1 118 1 119 2 120 1 242 1 179 1 64 1 245 1 65 4 246 1 122 1 
105 1 130 1 35 1 164 1 24 1 
0 2 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 3 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 169 2 231 1 232 4 50 3 172 1 51 2 235 1 111 1 173 2 175 2 58 1 176 1 59 1 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 
0 2 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 3 141 1 17 1 79 2 193 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 169 2 231 1 232 4 50 3 172 1 51 2 235 1 111 1 173 2 175 2 58 1 176 1 59 1 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 67 1 
0 2 68 1 3 1 4 1 126 2 72 2 129 1 130 1 6 1 7 2 10 1 131 1 189 3 134 4 13 1 137 2 139 2 76 2 140 3 141 1 17 1 79 2 193 1 81 1 82 2 19 1 144 1 85 1 91 1 202 1 201 1 24 4 205 1 204 1 31 1 209 2 210 1 34 1 155 1 35 1 36 3 156 1 215 1 37 2 159 3 218 1 219 1 97 1 220 1 164 1 98 1 43 1 44 1 165 1 222 2 103 2 225 2 45 1 104 3 167 1 226 1 105 4 107 1 169 2 231 1 232 4 50 3 172 1 51 2 235 1 173 2 175 2 113 1 58 1 176 1 59 1 118 1 120 1 242 1 64 2 65 4 245 2 246 1 122 1 
230 1 232 1 26 1 
247 1 232 1 
194 1 232 1 
51 1 21 1 115 1 25 1 101 1 206 1 189 1 150 1 13 1 212 1 108 1 232 1 
51 1 216 1 189 1 13 1 115 1 232 1 
51 1 189 1 13 1 212 1 21 1 232 1 206 1 
194 1 232 1 
62 1 232 1 
194 1 232 1 
247 1 232 1 
247 1 232 1 
184 1 208 1 232 1 116 1 
197 1 228 1 232 1 
79 1 194 1 183 1 19 1 217 1 237 1 220 1 42 1 99 2 131 1 102 1 59 1 104 2 140 1 214 1 232 2 37 2 
160 1 
79 1 183 1 19 1 217 1 237 1 220 1 42 1 131 1 59 1 104 2 74 1 140 1 214 1 
79 1 82 2 127 1 220 1 98 1 131 1 222 2 103 2 104 3 140 1 213 2 192 1 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
79 1 82 2 127 1 220 1 98 1 131 1 222 2 103 2 104 3 140 1 213 2 192 1 
1 1 0 2 3 2 4 1 125 1 126 2 127 1 72 1 129 1 8 1 7 2 131 1 189 6 134 4 13 1 137 2 76 2 140 2 139 4 17 2 79 1 80 1 193 2 82 1 195 1 20 1 85 1 90 2 23 2 201 2 202 2 205 2 27 1 207 2 209 2 211 1 213 1 34 2 36 4 156 2 215 2 37 4 158 2 159 3 38 1 220 1 98 1 43 2 222 1 103 1 225 2 104 3 226 1 48 1 169 2 110 1 232 4 50 4 51 2 52 1 172 2 236 1 112 2 175 2 115 3 58 2 176 1 119 2 118 2 120 1 242 2 64 2 245 2 65 4 
0 1 127 1 220 1 163 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 192 1 17 1 79 1 194 1 193 1 82 1 239 1 175 1 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 171 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 127 1 220 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 171 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
79 1 82 1 127 1 220 1 98 1 131 1 222 1 103 1 93 1 104 2 140 1 213 1 192 1 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 171 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 62 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 62 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 62 1 242 1 244 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 47 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 2 202 1 201 1 205 1 209 1 62 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
1 1 0 1 3 1 4 1 127 1 5 1 7 1 131 1 189 2 73 1 13 1 137 1 76 1 140 4 139 2 192 1 17 1 79 2 193 1 82 2 83 1 21 1 202 1 201 1 25 2 205 1 206 1 150 2 209 1 152 2 212 1 211 1 34 1 213 2 36 2 156 1 215 1 37 2 218 1 220 1 98 1 101 3 222 2 103 2 225 1 104 3 230 3 169 1 108 2 232 3 50 2 233 1 51 1 239 1 175 1 56 1 58 1 115 2 176 1 118 1 242 1 178 1 64 1 245 1 
0 1 127 1 220 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 192 1 17 1 79 1 194 1 193 1 82 1 239 1 175 1 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 3 1 126 1 127 1 72 1 129 1 7 1 131 1 189 3 134 2 137 1 76 1 140 1 139 2 17 1 79 1 193 1 82 1 20 1 85 1 90 1 23 1 201 1 202 1 205 1 207 1 209 1 213 1 34 1 36 2 156 1 215 1 37 2 158 1 159 3 220 1 98 1 43 1 222 1 103 1 225 1 104 3 226 1 169 1 232 2 50 2 51 1 52 1 172 1 112 1 175 1 58 1 119 1 118 1 120 1 242 1 64 1 245 1 65 2 
79 1 82 1 127 1 112 1 220 1 98 1 131 1 222 1 103 1 104 2 140 1 213 1 192 1 
0 1 3 1 126 1 129 1 72 1 6 1 7 1 189 3 134 2 137 1 14 1 76 1 139 2 17 1 193 1 20 1 85 1 90 1 91 1 23 1 202 1 201 1 205 1 207 1 209 1 34 1 36 2 156 1 37 2 215 1 158 1 159 3 163 1 43 1 225 1 104 1 226 1 47 1 169 1 232 2 50 2 172 1 51 1 239 1 112 1 175 2 58 1 118 1 119 1 120 1 242 1 179 1 64 1 65 2 245 1 
0 1 3 1 126 1 127 1 72 1 129 1 7 1 131 1 189 3 134 2 137 1 76 1 140 1 139 2 17 1 79 1 193 1 82 1 20 1 85 1 90 1 23 1 201 1 202 1 205 1 207 1 209 1 213 1 34 1 36 2 156 1 215 1 37 2 158 1 159 3 220 1 98 1 43 1 222 1 103 1 225 1 104 3 226 1 169 1 232 2 50 2 51 1 52 1 172 1 112 1 175 1 58 1 119 1 118 1 120 1 242 1 244 1 64 1 245 1 65 2 
0 1 3 1 126 1 72 1 129 1 6 1 7 1 131 1 189 3 134 2 137 1 76 1 140 1 139 2 17 1 79 1 193 1 82 1 19 1 20 1 85 1 90 1 91 1 23 1 202 1 201 1 205 1 207 1 209 1 34 1 36 2 156 1 215 1 37 2 158 1 159 3 220 1 98 1 43 1 222 1 103 1 225 1 104 3 226 1 169 1 232 2 50 2 51 1 172 1 112 1 175 1 58 1 59 1 119 1 118 1 120 1 242 1 244 1 64 1 245 1 65 2 
0 1 127 1 220 1 163 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 14 1 47 1 140 1 139 2 169 1 50 2 192 1 17 1 79 1 193 1 82 1 239 1 175 2 201 1 202 1 205 1 209 1 242 1 179 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 2 
0 1 127 1 220 1 163 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 192 1 17 1 79 1 194 1 193 1 82 1 239 1 175 1 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 163 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 2 140 1 169 1 50 2 192 1 17 1 79 1 194 1 193 1 82 1 239 1 175 1 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 2 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 62 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
134 1 119 1 161 1 65 1 232 1 
134 1 161 1 126 1 65 1 232 1 
84 1 134 1 119 1 190 1 65 1 232 1 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 3 1 4 1 126 1 127 1 7 1 131 1 189 2 134 2 13 1 137 1 14 1 76 1 140 2 139 1 192 1 17 1 79 1 193 1 82 1 21 1 201 1 202 1 25 2 205 1 206 1 150 2 209 1 152 1 213 1 34 1 36 2 156 1 215 1 37 1 218 1 220 1 163 1 98 1 101 2 222 1 103 1 225 1 104 2 47 1 108 2 169 1 232 2 50 2 51 1 172 1 239 1 175 2 58 1 115 2 176 1 119 1 118 1 242 1 179 1 64 1 245 1 65 2 
0 1 127 1 220 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 62 1 242 1 244 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
0 1 127 1 7 1 131 1 137 1 14 1 140 1 139 3 192 1 79 1 17 1 193 1 194 1 82 1 201 1 202 1 205 1 209 1 213 1 34 1 36 2 156 1 37 3 215 1 163 1 220 1 98 1 43 1 222 1 103 1 225 1 104 2 47 1 169 1 50 2 239 1 175 2 62 1 242 1 179 1 64 1 245 1 
0 1 127 1 220 1 163 1 98 1 7 1 43 1 131 1 222 1 103 1 225 1 104 2 137 1 139 3 140 1 169 1 50 2 192 1 171 2 17 1 79 1 194 1 193 1 82 1 239 1 175 1 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 163 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 14 1 47 1 139 3 140 1 169 1 50 2 192 1 171 2 17 1 79 1 194 1 193 1 82 1 239 1 175 2 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 163 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 14 1 47 1 139 3 140 1 169 1 50 2 192 1 17 1 79 1 194 1 193 1 82 1 239 1 175 2 202 1 201 1 205 1 209 1 242 1 179 1 64 1 245 1 34 1 213 1 36 2 156 1 215 1 37 3 
0 1 127 1 220 1 98 1 7 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 139 3 169 1 50 2 17 1 79 1 194 1 193 1 82 1 175 1 202 1 201 1 205 1 209 1 242 1 64 1 245 1 213 1 34 1 36 2 156 1 215 1 37 3 
222 1 79 1 103 1 82 1 104 2 140 1 127 1 213 1 220 1 98 1 131 1 
183 1 124 1 3 1 218 1 69 1 4 1 127 1 72 1 220 1 101 3 131 1 132 1 189 2 104 2 13 1 140 2 76 1 230 3 108 2 232 4 170 1 79 1 51 1 143 1 21 1 88 1 25 2 115 2 58 1 206 1 150 2 176 1 241 1 118 1 152 1 121 1 211 1 180 1 213 1 95 1 181 1 
183 1 124 1 3 1 125 1 127 1 220 1 101 3 131 1 189 2 104 2 13 1 75 1 46 1 140 1 76 1 230 3 108 2 232 4 18 1 79 1 51 1 143 1 21 1 88 1 238 1 90 1 23 1 25 2 115 2 58 1 240 1 207 1 206 1 150 2 176 1 118 1 152 1 211 1 180 1 243 1 213 1 95 1 181 1 158 1 
0 3 97 1 127 1 220 1 98 1 7 3 43 1 44 2 131 1 222 1 103 1 225 3 104 2 168 1 137 3 139 2 140 1 169 3 50 4 17 1 79 1 193 1 82 1 175 3 202 1 201 1 205 1 209 3 242 1 244 1 64 3 34 1 245 3 213 1 155 1 36 4 156 1 215 1 37 2 
0 1 161 1 96 1 97 1 127 1 220 1 98 1 7 1 44 1 131 1 222 1 103 1 134 1 225 1 104 2 137 1 140 1 169 1 232 1 50 1 79 1 194 1 82 1 173 1 175 1 209 1 64 1 65 1 245 1 213 1 155 1 36 1 
79 1 0 1 82 1 127 1 97 1 220 1 175 1 98 1 7 1 131 1 44 1 222 1 103 1 209 1 225 1 104 2 137 1 140 1 64 1 213 1 245 1 155 1 169 1 36 1 50 1 
0 3 97 1 127 1 220 1 98 1 7 3 44 3 131 1 222 1 133 1 103 1 225 3 104 2 137 3 140 1 169 3 50 3 79 1 82 1 175 3 209 3 64 3 245 3 213 1 155 1 36 3 
0 1 97 1 127 1 220 1 98 1 7 1 44 1 131 1 222 1 103 1 225 1 104 2 137 1 140 1 169 1 50 1 79 1 82 1 53 1 175 1 209 1 64 1 245 1 213 1 155 1 36 1 
79 1 82 1 53 1 97 1 127 1 220 1 98 1 44 1 131 1 222 1 103 1 104 2 140 1 213 1 
166 1 2 1 104 1 28 1 
166 1 104 1 136 1 
11 2 223 1 104 1 33 1 
223 1 94 1 104 1 33 1 198 1 
166 1 177 1 
150 1 152 1 108 1 25 1 115 1 101 1 
150 1 152 1 212 1 108 1 25 1 115 1 101 1 
51 1 125 1 23 1 207 1 13 1 227 1 158 1 
51 1 176 1 13 1 211 1 
17 1 224 1 168 1 139 1 169 1 36 2 37 1 
169 1 36 1 
17 1 194 1 139 1 36 1 232 1 37 1 
169 1 36 1 
194 1 139 1 232 1 37 1 
19 1 
59 1 
59 1 
213 1 
127 1 
213 1 
79 1 123 1 183 1 185 1 19 1 39 1 53 1 148 1 220 1 131 1 30 1 117 1 59 1 104 2 140 1 
79 2 123 2 183 2 185 2 39 2 19 2 145 1 148 2 220 2 131 2 30 2 117 2 59 2 104 4 140 2 66 1 
79 1 123 1 183 1 185 1 19 1 39 1 148 1 220 1 131 1 30 1 117 1 59 1 104 2 140 1 66 1 
79 1 123 1 194 1 183 1 185 1 19 1 39 1 148 1 220 1 131 1 149 2 30 1 117 1 59 1 104 2 153 1 140 1 228 1 232 1 37 2 
32 1 
194 1 234 1 230 2 232 2 
194 1 61 1 230 2 232 2 
159 2 123 1 183 1 1 1 39 1 185 1 3 1 220 1 129 1 72 1 6 1 131 1 189 2 104 3 226 1 140 2 76 1 15 1 230 2 232 2 79 1 51 1 19 1 234 1 20 1 85 1 90 1 148 1 23 1 58 1 207 1 149 1 30 1 117 1 61 1 59 1 32 1 118 1 120 1 153 1 66 1 37 1 158 1 
117 1 74 1 70 1 220 1 131 1 
123 1 184 1 183 1 1 1 39 1 185 1 3 1 218 1 4 1 220 1 101 4 131 1 189 2 104 2 13 1 140 3 76 1 228 1 230 2 108 3 232 3 79 1 51 1 19 1 234 1 21 1 148 1 25 3 115 3 58 1 206 1 149 1 30 1 150 3 176 1 117 1 61 1 59 1 32 1 118 1 152 1 153 1 212 1 211 1 37 1 
79 1 123 1 194 1 183 1 185 1 19 1 39 1 148 1 220 1 131 1 149 1 30 1 117 1 59 1 104 2 153 1 140 1 228 2 232 3 37 1 
79 1 123 1 183 1 185 1 39 1 19 1 145 1 148 1 220 1 131 1 30 1 117 1 59 1 104 2 140 1 
79 2 123 2 183 2 185 2 39 2 19 2 70 1 145 1 148 2 220 2 131 2 30 2 117 2 59 2 104 4 74 1 140 2 
79 1 123 1 183 1 185 1 39 1 19 1 70 1 148 1 220 1 131 1 30 1 117 1 59 1 104 2 74 1 140 1 
79 1 194 1 183 1 19 1 87 1 174 2 199 1 220 1 22 1 114 1 100 1 116 1 131 1 59 1 104 2 140 1 228 1 142 1 232 2 37 2 
184 1 183 1 1 1 218 1 4 1 220 1 101 3 100 1 131 1 189 1 104 2 13 1 140 3 76 1 228 1 142 1 108 2 232 1 16 1 78 1 79 1 51 1 19 1 87 1 21 1 89 1 174 1 199 1 22 1 114 1 25 2 115 2 58 1 206 1 150 2 176 1 59 1 152 1 212 1 211 1 37 1 
168 1 174 1 199 1 203 1 37 1 92 1 
194 1 78 1 
194 1 16 1 
183 1 220 1 100 1 131 1 134 1 104 2 140 1 228 1 142 1 232 2 79 1 19 1 87 1 89 1 199 2 174 1 114 1 203 1 92 1 59 1 65 1 37 1 
183 1 220 1 221 1 100 1 131 1 134 1 104 2 168 1 140 1 228 1 142 1 232 2 79 1 19 1 197 1 87 1 89 1 199 2 174 1 114 1 203 1 92 1 59 1 65 1 37 1 
89 1 
159 4 1 1 184 2 183 1 220 1 129 1 72 1 6 1 100 1 131 1 188 1 189 2 134 1 104 3 226 1 140 2 76 1 228 2 142 1 232 3 16 1 78 1 172 1 79 1 51 1 19 1 20 1 85 1 87 1 89 1 90 1 174 2 199 2 22 1 23 1 203 1 114 1 58 1 207 1 92 1 59 1 120 1 65 1 37 2 158 1 
74 1 87 1 199 1 142 1 114 1 100 1 
184 2 183 1 1 1 218 1 4 1 220 1 101 5 100 1 131 1 189 2 134 1 104 2 13 1 140 3 76 1 228 2 142 1 108 4 232 3 16 1 78 1 172 1 79 1 51 1 19 1 87 1 21 1 89 1 174 2 199 2 22 1 203 1 114 1 25 4 115 4 58 1 92 1 206 1 150 4 176 1 59 1 152 1 212 1 211 1 65 1 37 2 
74 1 87 1 199 1 142 1 114 1 100 1 
79 1 194 1 183 1 19 1 174 2 199 1 71 1 220 1 22 1 100 1 116 1 131 1 188 1 59 1 104 2 191 1 140 1 228 1 142 1 232 2 37 2 

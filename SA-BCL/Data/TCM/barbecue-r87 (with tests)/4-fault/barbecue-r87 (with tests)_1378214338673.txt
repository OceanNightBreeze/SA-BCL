#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 37 57 210 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 37 57 84 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 37 57 210 76 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 37 57 210 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 37 57 210 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 24 191 37 57 210 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 37 57 210 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.InternalError 164 59 91 211 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.InternalError 164 59 91 211 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V ERROR java.lang.InternalError 164 59 91 211 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.NullPointerException 24 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V ERROR java.lang.NullPointerException 24 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 24 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V ERROR java.lang.NullPointerException 24 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.NullPointerException 24 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | ASSIGN | 11608 | = null
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getFontRenderContext()Ljava.awt.font.FontRenderContext;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z | CONDITION | 6089 | if (x) -> if (!x)
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | CONDITION | 1444 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V | CONDITION | 5465 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
147 1 21 1 232 1 50 1 181 1 80 1 
147 1 21 1 232 1 50 1 80 1 
115 1 18 2 88 1 
199 2 45 2 12 1 113 3 235 1 85 2 202 2 151 1 241 1 242 1 36 1 
184 1 131 1 199 2 132 1 7 1 45 4 113 2 85 1 202 2 147 1 35 1 151 1 241 1 138 1 242 1 36 1 
155 1 107 1 184 1 199 1 132 1 7 1 45 3 113 1 85 1 202 1 146 1 147 1 35 1 151 1 241 1 90 1 242 1 36 1 
184 2 199 1 132 1 7 1 45 3 113 1 85 1 202 1 147 1 63 1 35 1 151 1 241 1 138 1 242 1 36 1 
5 1 199 1 151 1 45 2 241 1 113 1 85 1 202 1 36 1 242 1 
184 4 173 1 199 1 132 1 7 1 45 3 113 1 85 1 202 1 147 1 179 1 35 1 75 1 151 1 241 1 152 1 242 1 36 1 
169 1 199 1 151 1 45 2 241 1 113 1 85 1 202 1 36 1 242 1 15 1 
151 1 241 1 61 1 242 1 
189 1 158 1 199 1 151 1 45 2 241 1 113 1 85 2 202 1 36 1 242 1 
155 1 107 1 184 1 199 1 132 2 7 1 45 3 113 1 85 1 202 1 146 1 147 2 50 1 35 1 151 1 211 1 90 1 68 1 242 1 36 1 
155 1 107 1 184 1 199 1 132 2 7 1 45 3 113 1 85 1 202 1 146 1 147 2 50 1 35 1 151 1 211 1 90 1 242 1 36 1 
215 1 199 1 132 1 45 2 113 1 85 1 202 1 147 1 206 1 50 1 151 1 241 1 211 1 68 1 213 1 242 1 36 1 
215 1 199 1 132 1 45 2 113 1 85 1 202 1 147 1 206 1 50 1 151 1 241 1 211 1 68 1 38 1 242 1 36 1 
215 1 199 1 6 1 132 1 45 2 113 1 85 1 202 1 147 1 206 1 50 1 74 1 151 1 241 1 211 1 242 1 36 1 39 1 
215 1 199 1 6 1 132 1 45 2 113 1 85 1 202 1 147 1 206 1 50 1 74 1 151 1 241 1 211 1 68 1 242 1 36 1 39 1 
199 1 151 1 45 3 241 1 12 1 113 2 85 1 202 2 36 1 242 1 
199 1 45 3 113 2 85 1 27 1 64 1 225 2 151 1 241 1 242 1 
27 1 199 1 225 1 151 1 122 1 45 2 241 1 113 1 85 2 242 1 
199 1 45 2 113 1 85 1 27 1 187 1 225 1 151 1 241 1 242 1 
238 1 58 3 134 1 
58 1 
22 1 180 1 57 1 210 1 236 1 
92 1 126 1 127 1 217 1 4 10 159 1 10 1 14 3 223 1 162 1 49 1 98 1 227 1 166 1 192 1 78 1 79 1 195 1 22 1 233 1 57 1 24 1 114 1 174 1 236 4 180 4 34 1 123 2 210 1 243 1 37 1 
92 1 126 1 127 1 217 1 159 1 10 1 162 1 49 1 98 1 227 1 192 1 78 1 79 1 195 1 22 1 57 1 233 1 24 1 114 1 84 1 236 4 180 4 34 1 37 1 
92 1 126 1 127 1 217 1 159 1 10 1 71 1 162 1 49 1 98 1 227 1 76 1 192 1 78 1 104 1 195 1 22 1 57 1 233 1 24 1 114 1 236 4 180 4 34 1 210 1 37 1 
92 1 126 1 127 1 217 1 159 1 10 1 162 1 49 1 98 1 227 1 192 1 78 1 104 1 79 1 195 1 22 1 57 1 233 1 24 1 114 1 236 4 180 4 34 1 210 1 37 1 
92 1 126 1 127 1 217 1 159 1 10 1 162 1 49 1 98 1 227 1 192 1 78 1 104 1 79 1 195 1 22 1 57 1 233 1 24 1 114 1 236 4 180 4 34 1 210 1 37 1 
92 1 22 1 180 4 57 1 34 1 10 1 114 1 210 1 236 4 37 1 104 1 
125 1 183 1 70 1 184 3 0 2 4 4 130 1 7 1 10 1 12 1 13 1 73 1 72 2 187 2 188 1 135 1 190 1 77 1 138 1 19 1 20 1 22 1 140 2 143 1 85 3 145 2 203 1 202 1 26 1 147 2 148 2 87 1 32 1 34 1 209 2 35 1 89 1 210 1 211 1 37 1 36 1 92 1 91 2 156 1 216 2 45 3 47 1 48 2 161 2 222 1 95 1 50 1 97 2 164 1 51 1 165 1 52 1 101 2 103 1 168 2 104 1 108 1 56 1 109 2 110 2 57 1 59 2 112 2 113 2 114 1 175 1 176 1 236 4 63 2 118 1 180 4 242 1 124 2 
125 1 126 1 127 2 4 4 130 1 7 1 10 1 9 2 11 2 13 1 12 1 16 2 135 1 17 2 138 1 19 1 20 1 21 2 22 1 141 2 142 2 145 2 25 2 147 2 34 1 35 1 153 2 37 1 36 1 40 2 41 2 42 2 156 1 44 4 159 4 45 4 47 1 160 2 48 6 162 1 49 2 50 1 165 1 164 1 55 2 56 1 57 1 59 2 175 1 176 1 178 2 63 1 180 4 66 2 70 1 183 1 184 2 73 1 187 2 72 2 190 1 77 1 194 1 81 2 195 2 198 2 85 3 202 1 86 2 87 1 210 1 211 1 91 2 92 1 217 4 221 2 95 1 97 4 98 2 227 4 226 4 229 1 102 2 101 3 103 1 104 1 105 2 106 2 108 1 111 2 233 2 110 2 112 3 114 1 113 2 236 4 237 2 117 2 118 1 239 2 242 1 245 4 
125 1 126 1 127 2 4 4 130 1 7 1 10 1 9 2 11 2 13 1 12 1 16 2 135 1 17 2 138 1 19 1 20 1 21 2 22 1 141 2 142 2 145 2 25 2 147 2 34 1 35 1 153 2 37 1 36 1 40 2 41 2 42 2 156 1 44 4 159 4 45 3 47 1 160 2 48 6 162 1 49 2 50 1 165 1 164 1 55 2 56 1 57 1 59 2 175 1 176 1 178 2 63 1 180 4 66 2 70 1 183 1 184 2 73 1 187 2 72 2 190 1 77 1 194 1 81 2 195 2 198 2 85 3 202 1 205 1 86 2 87 1 89 1 210 1 211 1 91 2 92 1 217 4 221 2 95 1 97 4 98 2 227 4 226 4 229 1 102 2 101 3 103 1 104 1 105 2 106 2 108 1 111 2 233 2 110 2 112 3 114 1 113 2 236 4 237 2 117 2 118 1 239 2 242 1 245 4 
195 1 92 1 22 1 127 1 217 1 233 1 57 1 24 1 159 1 10 1 114 1 236 4 49 1 180 4 98 1 34 1 191 1 227 1 192 1 210 1 78 1 37 1 104 1 
126 1 127 2 4 4 130 1 7 1 10 1 9 2 11 2 13 1 12 1 16 2 17 2 135 1 138 1 19 1 20 1 21 2 22 1 141 2 142 2 145 2 25 2 147 2 27 1 30 1 34 1 153 2 37 1 40 2 41 2 42 2 44 4 159 4 45 3 47 1 160 2 48 6 162 1 49 2 50 1 165 1 164 1 55 2 57 1 59 2 175 1 178 2 63 1 64 1 180 4 66 2 70 1 184 2 187 2 72 2 190 1 77 1 194 1 81 2 195 2 198 2 85 3 205 1 86 2 87 1 89 1 210 1 211 1 91 2 92 1 217 4 221 2 95 1 97 4 98 2 225 1 227 4 226 4 229 1 102 2 101 3 104 1 105 2 106 2 111 2 233 2 110 2 112 3 114 1 113 2 236 4 237 2 117 2 118 1 239 2 242 1 245 4 
93 1 
92 1 126 1 127 1 217 1 159 1 10 1 162 1 49 1 98 1 227 1 192 1 78 1 104 1 79 1 195 1 22 1 57 1 233 1 24 1 114 1 236 4 180 4 34 1 210 1 37 1 
163 1 4 1 174 1 
214 1 4 1 
215 1 43 1 1 1 4 1 6 1 48 1 147 1 206 1 50 1 67 1 101 1 167 1 
147 1 206 1 215 1 1 1 50 1 4 1 48 1 
214 1 4 1 
147 1 231 1 50 1 4 1 101 1 48 1 
4 1 54 1 
4 1 136 1 
214 1 4 1 
4 1 136 1 
4 1 136 1 
185 1 4 1 8 1 168 1 
207 1 109 1 4 1 
2 1 140 1 157 1 218 1 45 2 113 1 85 1 202 1 87 1 182 1 242 1 36 1 
121 1 
2 1 140 1 157 1 218 1 45 2 113 1 85 1 202 1 87 1 242 1 36 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 227 1 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 186 2 221 1 49 1 97 3 98 1 227 1 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
194 1 41 1 172 1 142 1 45 2 113 1 85 1 202 1 96 1 87 1 242 1 55 1 36 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 186 2 221 1 49 1 97 3 98 1 227 1 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 220 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 9 1 45 2 160 1 221 1 49 1 97 3 98 1 227 2 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
127 1 4 3 129 1 131 1 6 2 72 1 187 1 189 1 190 1 17 1 74 1 194 1 195 1 142 2 85 4 145 1 202 2 25 1 147 1 206 1 208 1 29 1 86 1 87 1 211 1 153 1 36 1 40 1 41 2 91 1 215 1 42 1 43 2 217 2 159 2 45 3 160 1 48 2 221 1 224 1 49 1 96 1 97 2 50 1 98 1 164 1 227 1 226 2 101 2 102 1 55 2 167 2 105 1 106 1 110 1 111 1 233 1 59 1 174 3 113 2 237 1 117 1 118 1 239 1 66 1 67 2 69 1 242 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 227 1 226 3 102 1 55 1 105 1 194 1 106 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
194 1 41 2 142 2 45 3 113 1 85 1 202 2 96 1 87 1 242 1 55 2 36 1 
70 1 184 1 127 2 4 4 130 1 7 1 187 2 189 1 17 2 194 1 21 2 195 2 141 2 198 2 142 1 85 2 202 1 25 2 147 2 87 1 35 1 211 1 153 2 36 1 40 2 41 1 91 2 42 2 217 4 44 4 159 4 45 3 160 2 48 6 221 2 49 2 50 1 97 4 98 2 227 2 226 4 101 3 102 2 55 1 105 2 106 2 111 2 233 2 112 3 175 1 113 1 237 2 178 2 63 1 117 2 118 1 66 2 242 1 245 4 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 1 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 186 2 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
194 1 41 2 142 2 45 3 113 1 85 1 202 2 96 1 87 1 242 1 55 2 36 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
70 1 184 1 127 1 4 2 7 1 187 1 17 1 194 1 21 1 195 1 141 1 198 1 142 1 85 1 202 1 25 1 147 1 87 1 35 1 153 1 36 1 40 1 41 1 91 1 42 1 217 2 44 2 159 2 45 3 160 1 48 3 221 1 49 1 97 2 98 1 227 1 226 2 102 1 55 1 105 1 106 1 111 1 233 1 112 3 175 1 113 1 237 1 178 1 63 1 117 1 66 1 242 1 245 2 
194 1 41 1 142 1 45 2 113 1 85 1 202 1 96 1 86 1 87 1 242 1 55 1 36 1 
70 1 184 1 127 1 4 2 7 1 9 1 11 1 16 1 187 1 17 1 81 1 21 1 195 1 141 1 198 1 25 1 147 1 30 1 153 1 40 1 42 1 91 1 217 2 44 2 159 2 45 1 160 1 48 3 221 1 49 1 97 2 98 1 227 2 226 2 102 1 105 1 106 1 111 1 233 1 112 3 175 1 237 1 178 1 63 1 117 1 64 1 239 1 66 1 245 2 
70 1 184 1 127 1 4 2 7 1 187 1 17 1 194 1 21 1 195 1 141 1 198 1 142 1 85 1 202 1 25 1 147 1 87 1 35 1 153 1 36 1 40 1 41 1 91 1 42 1 217 2 44 2 159 2 45 3 160 1 220 1 48 3 221 1 49 1 97 2 98 1 227 1 226 2 102 1 55 1 105 1 106 1 111 1 233 1 112 3 175 1 113 1 237 1 178 1 63 1 117 1 66 1 242 1 245 2 
70 1 184 1 127 1 4 2 7 1 187 1 17 1 194 1 21 1 195 1 141 1 198 1 142 1 85 1 25 1 147 1 27 1 30 1 87 1 153 1 40 1 41 1 91 1 42 1 217 2 44 2 159 2 45 3 160 1 220 1 48 3 221 1 49 1 97 2 98 1 225 1 227 1 226 2 102 1 55 1 105 1 106 1 111 1 233 1 112 3 113 1 175 1 237 1 178 1 63 1 117 1 64 1 66 1 242 1 245 2 
41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 2 98 1 227 2 226 2 102 1 55 1 194 1 105 1 106 1 81 1 195 1 233 1 111 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 1 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 226 3 227 1 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 226 3 227 1 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 226 3 227 1 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 16 1 49 1 96 1 97 2 98 1 226 2 227 1 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 226 3 227 1 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
141 1 4 1 33 1 44 1 245 1 
178 1 4 1 33 1 44 1 245 1 
141 1 4 1 120 1 44 1 240 1 245 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
127 1 4 2 6 3 11 1 9 1 16 1 72 1 187 1 190 1 17 1 74 1 194 1 81 1 21 1 195 1 141 1 198 1 142 1 85 2 145 1 202 1 25 1 147 1 206 1 29 1 86 1 87 1 211 1 153 1 36 1 40 1 41 1 91 1 215 1 42 1 43 3 217 2 44 2 159 2 45 2 160 1 48 3 221 1 49 1 96 1 50 1 97 2 98 1 164 1 227 2 226 2 102 1 101 3 55 1 167 3 105 1 106 1 110 1 233 1 111 1 59 1 113 1 237 1 178 1 117 1 118 1 239 1 66 1 67 3 242 1 245 2 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 220 1 221 1 49 1 97 3 98 1 227 1 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 186 2 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 1 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 198 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 186 2 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 11 1 9 1 45 2 160 1 221 1 16 1 49 1 96 1 97 3 98 1 226 3 227 2 102 1 55 1 105 1 194 1 106 1 81 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 239 1 66 1 153 1 36 1 242 1 40 1 
214 1 41 1 42 1 127 1 217 2 159 2 45 2 160 1 221 1 49 1 97 3 98 1 227 1 226 3 102 1 55 1 194 1 105 1 106 1 195 1 111 1 233 1 142 1 113 1 85 1 202 1 237 1 117 1 87 1 66 1 153 1 36 1 242 1 40 1 
194 1 41 1 87 1 142 1 45 2 113 1 85 1 202 1 36 1 55 1 242 1 
215 1 91 1 43 2 4 4 219 1 6 2 45 2 48 2 15 1 72 1 187 1 50 1 17 1 190 1 164 1 74 1 100 1 101 2 167 2 169 1 140 1 110 1 234 1 82 1 59 1 113 1 174 3 201 1 85 2 145 1 202 1 25 1 147 1 206 1 28 1 29 1 118 1 87 1 67 2 211 1 36 1 242 1 
215 1 91 1 43 2 4 4 219 1 130 1 6 3 46 1 45 2 48 2 187 1 50 1 17 1 74 1 100 1 101 2 167 2 140 1 23 1 234 1 82 1 113 1 174 3 201 1 85 1 202 1 25 1 147 1 206 1 28 1 116 1 118 1 149 1 87 1 67 2 36 1 242 1 
195 1 49 1 127 1 217 1 233 1 98 1 227 1 24 1 159 1 192 1 78 1 
195 1 49 1 127 1 217 1 233 1 98 1 227 1 24 1 159 1 192 1 78 1 
195 1 49 1 127 1 217 1 233 1 98 1 227 1 24 1 159 1 192 1 78 1 
195 1 49 1 127 1 217 1 233 1 98 1 227 1 24 1 159 1 192 1 78 1 
195 1 49 1 127 1 217 1 233 1 98 1 227 1 24 1 159 1 192 1 78 1 
194 1 41 1 5 1 24 1 142 1 45 2 113 1 85 1 202 1 87 1 78 1 242 1 55 1 36 1 
119 1 45 1 94 1 62 1 
45 1 62 1 154 1 
177 1 45 1 235 1 230 2 
177 1 31 1 45 1 235 1 244 1 
200 1 62 1 
43 1 74 1 6 1 67 1 101 1 167 1 
110 1 145 1 147 1 72 1 50 1 164 1 137 1 
1 1 43 1 74 1 6 1 67 1 101 1 167 1 
147 1 50 1 118 1 130 1 
214 1 97 1 4 1 226 1 159 1 66 1 
195 1 159 1 
214 1 97 1 4 1 226 1 
195 1 97 1 18 1 226 1 159 2 66 1 53 1 
195 1 159 1 
225 1 
27 1 
225 1 
202 1 
202 1 
36 1 
214 1 109 1 170 1 140 1 3 1 4 1 197 1 144 1 83 2 45 2 113 1 85 1 27 1 97 2 87 1 225 1 150 1 228 1 193 1 242 1 
133 1 
140 1 196 1 3 1 197 1 144 1 45 2 113 1 85 1 27 1 87 1 225 1 150 1 228 1 193 1 242 1 
140 1 3 1 197 1 5 1 144 1 45 2 113 1 85 1 27 1 87 1 225 1 150 1 228 1 193 1 242 1 
140 2 196 1 3 2 197 2 144 2 45 4 113 2 85 2 27 2 87 2 225 2 150 2 228 2 99 1 193 2 242 2 
214 1 109 2 170 1 140 1 3 1 4 3 197 1 144 1 83 1 45 2 113 1 85 1 27 1 97 1 87 1 225 1 150 1 228 1 193 1 242 1 
140 1 3 1 197 1 144 1 45 2 113 1 85 1 27 1 87 1 225 1 150 1 228 1 99 1 193 1 242 1 
140 2 3 2 128 1 197 2 144 2 45 4 113 2 61 1 85 2 27 2 87 2 225 2 150 2 228 2 99 1 193 2 242 2 
214 1 4 2 174 2 139 1 
214 1 4 2 174 2 212 1 
70 1 91 1 184 1 3 1 4 2 7 1 133 1 45 3 48 2 187 1 97 1 189 1 17 1 225 1 228 1 193 1 139 1 170 1 140 1 197 1 144 1 112 2 83 1 175 1 113 1 174 2 85 2 25 1 204 1 27 1 147 1 63 1 30 1 87 1 150 1 212 1 242 1 
87 1 128 1 197 1 61 1 242 1 
1 1 3 1 4 3 130 1 6 4 133 1 187 1 72 1 189 1 190 1 17 1 74 1 139 1 193 1 140 1 196 1 197 1 144 1 83 1 85 3 145 1 25 1 147 1 27 1 206 1 87 1 150 1 211 1 212 1 91 1 215 1 43 3 45 2 48 2 50 1 97 1 164 1 225 1 228 1 101 3 167 3 168 1 170 1 109 1 110 1 59 1 174 2 113 1 118 1 67 3 242 1 
140 1 3 1 128 1 197 1 144 1 45 2 113 1 61 1 85 1 27 1 87 1 225 1 150 1 228 1 193 1 242 1 
214 1 109 1 140 1 4 2 8 1 45 2 113 1 85 1 26 1 27 1 97 2 188 1 148 2 87 1 32 1 51 1 225 1 52 1 242 1 124 1 
109 1 171 1 140 1 4 2 44 1 45 2 113 1 85 1 161 1 26 1 27 1 207 1 97 1 188 1 148 1 87 1 32 1 18 1 51 1 225 1 88 1 52 2 242 1 245 1 246 1 
161 1 
70 1 91 1 184 1 0 1 216 1 4 3 44 1 7 1 45 3 48 2 161 1 187 1 97 2 188 1 189 1 225 1 51 1 52 2 168 2 21 1 171 1 109 2 140 1 112 4 113 1 175 1 85 2 26 1 27 1 147 1 63 1 148 2 30 1 87 1 32 1 242 1 245 1 246 1 124 1 
188 1 32 1 51 1 52 1 61 1 26 1 
0 1 1 1 4 3 130 1 6 5 187 1 72 1 188 1 189 1 190 1 74 1 21 1 140 1 85 3 145 1 26 1 147 1 27 1 206 1 148 2 87 1 32 1 209 1 211 1 91 1 215 1 216 1 43 4 44 1 45 2 48 2 161 1 50 1 97 2 164 1 51 1 225 1 52 2 101 4 167 4 168 2 109 2 171 1 110 1 59 1 113 1 118 1 67 4 242 1 124 1 246 1 245 1 
0 1 1 1 4 1 6 3 130 1 187 1 72 1 188 1 189 1 190 1 74 1 140 1 85 3 145 1 26 1 147 1 27 1 206 1 148 1 87 1 32 1 209 1 211 1 91 1 215 1 216 1 43 2 45 2 48 1 161 1 50 1 97 1 51 1 225 1 164 1 52 1 101 2 167 2 168 1 109 1 110 1 59 1 113 1 118 1 67 2 242 1 124 1 
97 1 171 1 148 1 18 1 52 1 246 1 
214 1 216 1 
214 1 0 1 
109 1 171 1 140 1 4 2 44 1 45 2 113 1 85 1 161 1 26 1 27 1 97 1 188 1 148 1 87 1 32 1 51 1 225 1 52 2 242 1 245 1 246 1 
188 1 32 1 51 1 52 1 61 1 26 1 
214 1 4 2 8 1 45 2 97 2 225 1 51 1 52 1 140 1 109 1 60 1 113 1 85 1 27 1 148 2 87 1 32 1 209 1 65 1 242 1 124 1 

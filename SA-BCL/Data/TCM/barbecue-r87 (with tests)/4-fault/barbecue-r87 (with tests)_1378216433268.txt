#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 243 101 148 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 243 101 73 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 243 101 148 128 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V | OPERATOR | 5499 | || -> &&
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z | CONDITION | 8616 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 22334 | stmt -> ;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V | CONDITION | 12606 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
69 1 190 1 114 1 133 1 61 1 209 1 
69 1 190 1 133 1 61 1 209 1 
66 1 210 2 10 1 
166 1 91 1 120 3 37 1 109 1 18 1 126 1 182 1 110 1 197 1 59 1 155 1 133 1 241 1 174 1 203 2 186 1 228 1 244 1 
64 1 166 1 91 1 120 3 109 1 18 1 182 1 225 1 197 1 155 1 133 1 174 1 241 2 203 1 186 1 244 1 
18 1 109 1 182 1 197 1 166 1 155 1 174 1 167 1 203 1 120 2 
142 1 166 1 91 1 120 3 109 1 18 1 182 1 183 1 197 1 155 1 133 1 174 1 241 4 23 1 203 1 186 1 26 1 244 1 
179 1 166 1 120 2 109 1 18 1 182 1 171 1 197 1 155 1 174 1 203 1 
109 1 155 1 52 1 174 1 
166 1 120 2 109 1 18 1 124 1 182 2 197 1 155 1 174 1 203 1 134 1 
166 1 91 1 209 1 120 3 37 1 109 1 18 1 126 1 182 1 110 1 197 1 113 1 154 1 59 1 133 2 241 1 174 1 203 1 186 1 244 2 
166 1 91 1 209 1 120 3 37 1 109 1 18 1 126 1 182 1 110 1 197 1 113 1 59 1 133 2 241 1 174 1 203 1 186 1 244 2 
139 1 166 1 33 1 107 1 209 1 120 2 109 1 18 1 182 1 197 1 113 1 154 1 155 1 133 1 174 1 203 1 244 1 
166 1 33 1 107 1 209 1 120 2 109 1 18 1 182 1 197 1 113 1 154 1 155 1 133 1 174 1 203 1 85 1 244 1 
11 1 231 1 30 1 166 1 33 1 107 1 209 1 120 2 109 1 18 1 182 1 197 1 113 1 155 1 133 1 174 1 203 1 244 1 
11 1 231 1 30 1 166 1 33 1 107 1 209 1 120 2 109 1 18 1 182 1 197 1 113 1 154 1 155 1 133 1 174 1 203 1 244 1 
1 1 166 2 120 3 109 1 18 1 182 1 197 1 155 1 174 1 203 2 
166 2 120 3 94 1 17 2 109 1 18 1 182 1 213 1 155 1 174 1 
18 1 109 1 182 2 213 1 166 1 155 1 174 1 108 1 120 2 17 1 
166 1 120 2 17 1 109 1 18 1 182 1 213 1 151 1 155 1 174 1 
18 2 109 1 182 2 213 1 1 1 166 3 155 1 174 1 120 2 17 1 
64 1 166 2 91 1 120 4 17 2 109 1 18 2 182 1 213 1 198 1 200 1 155 1 133 1 174 1 241 1 244 1 
7 3 130 1 221 1 
7 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
64 1 189 4 1 1 67 1 120 3 193 1 122 2 125 1 70 4 201 1 200 1 133 2 9 1 74 1 135 1 140 2 141 1 15 2 143 1 209 1 17 1 148 1 213 1 151 2 150 1 216 1 21 1 24 2 89 1 29 2 31 2 164 1 162 2 220 1 165 1 166 2 91 1 36 2 93 1 94 1 223 1 39 1 225 1 99 1 101 1 173 1 174 1 41 1 105 1 44 1 106 1 46 1 232 2 50 1 51 2 181 4 234 2 54 2 182 3 113 1 184 1 240 1 241 2 60 2 243 1 
199 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
64 1 189 4 1 1 67 1 120 3 193 1 122 2 125 1 70 2 201 1 200 1 133 2 74 1 135 1 140 2 141 1 15 2 143 1 209 1 17 1 148 1 213 1 150 1 151 2 216 1 21 1 24 2 29 2 31 2 162 2 220 1 166 2 165 1 91 1 36 2 93 1 94 1 223 1 39 1 225 1 99 1 101 1 173 1 174 1 41 1 44 1 106 1 46 1 232 2 50 1 51 2 181 4 234 2 54 2 182 3 113 1 184 1 240 1 241 2 60 2 243 1 
125 1 189 4 148 1 141 1 46 1 101 1 21 1 240 1 243 1 181 4 39 1 
125 1 189 1 148 1 101 1 181 1 
189 4 141 1 181 4 94 1 39 1 125 1 148 1 101 1 21 1 240 1 243 1 
189 4 141 1 181 4 94 1 39 1 125 1 101 1 21 1 73 1 240 1 243 1 
189 4 46 1 141 1 181 4 94 1 39 1 125 1 128 1 148 1 101 1 21 1 240 1 243 1 
230 1 70 1 104 1 
70 1 208 1 
70 1 53 1 
70 1 53 1 
70 1 53 1 
70 1 208 1 
157 1 231 1 140 1 70 1 5 1 16 1 133 1 107 1 33 1 144 1 209 1 54 1 
224 1 140 1 70 1 133 1 209 1 54 1 
70 1 5 1 133 1 107 1 33 1 209 1 54 1 
70 1 208 1 
111 1 70 1 
76 1 70 1 36 1 
70 1 132 1 176 1 234 1 
106 1 45 1 48 1 51 2 166 1 208 1 81 1 120 2 17 1 182 1 213 1 20 1 149 2 70 2 215 1 174 1 60 1 
147 1 
106 1 45 1 48 1 166 1 52 1 120 2 17 1 182 1 213 1 20 1 215 1 174 1 60 1 
182 1 158 1 106 1 197 1 166 1 174 1 203 1 185 1 120 2 136 1 218 1 
65 1 191 1 117 1 120 3 68 2 69 1 194 1 6 2 129 1 196 1 131 1 70 10 197 1 202 1 133 1 203 1 136 1 75 1 204 1 12 1 138 1 13 1 205 2 15 3 206 1 146 1 82 1 151 1 216 1 22 1 156 1 218 1 87 1 88 1 158 1 31 1 163 1 90 2 166 1 91 1 38 1 96 1 97 2 225 1 100 1 226 1 40 1 174 1 41 1 227 2 103 1 178 1 43 3 106 1 51 2 54 3 55 1 57 1 182 1 58 1 112 1 241 1 63 1 185 1 186 1 
158 1 106 1 49 1 166 1 120 2 182 1 112 1 197 1 174 1 203 1 185 1 218 1 136 1 
191 1 65 1 117 1 120 1 68 2 69 1 6 2 129 1 131 1 196 1 70 2 202 1 200 1 133 1 75 1 204 1 12 2 138 1 13 1 205 2 14 1 15 3 206 1 146 1 82 1 151 1 216 1 22 1 156 1 86 1 88 1 31 1 163 1 90 2 91 1 94 1 38 1 96 1 98 1 97 2 225 1 100 1 226 1 40 1 41 1 103 1 42 1 178 1 51 2 54 3 55 1 57 1 112 1 241 1 63 1 
65 1 191 1 117 1 120 3 68 2 69 1 6 2 129 1 196 1 131 1 70 2 197 1 202 1 133 1 203 1 136 1 75 1 204 1 12 1 138 1 13 1 205 2 15 3 206 1 146 1 82 1 151 1 216 1 22 1 156 1 218 1 88 1 158 1 31 1 163 1 90 2 166 1 91 1 222 1 38 1 96 1 97 2 225 1 100 1 40 1 226 1 174 1 41 1 103 1 178 1 106 1 51 2 54 3 55 1 57 1 182 1 112 1 241 1 63 1 185 1 186 1 
65 1 191 1 117 1 120 3 68 2 69 1 6 2 129 1 196 1 131 1 70 2 202 1 200 1 133 1 136 1 75 1 204 1 12 1 138 1 13 1 205 2 15 3 206 1 146 1 82 1 17 1 213 1 151 1 216 1 22 1 156 1 218 1 88 1 158 1 31 1 163 1 90 2 166 1 91 1 222 1 94 1 38 1 96 1 97 2 225 1 100 1 40 1 226 1 174 1 41 1 103 1 178 1 106 1 51 2 54 3 55 1 57 1 182 1 112 1 241 1 63 1 185 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 98 1 97 2 129 1 196 1 131 1 40 1 226 1 197 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 1 138 1 106 1 14 1 49 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 13 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 13 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 13 1 206 1 51 2 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 1 138 1 106 1 13 1 14 1 49 1 206 1 51 2 208 1 82 1 55 1 182 1 22 1 63 1 156 1 185 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 13 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
205 1 70 1 192 1 117 1 68 1 
205 1 70 1 192 1 202 1 68 1 
19 1 205 1 70 1 153 1 117 1 68 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
65 1 191 1 5 1 117 1 120 2 68 2 69 1 6 2 129 1 196 1 131 1 70 2 197 1 202 1 133 1 203 1 136 1 75 1 204 1 11 1 12 2 138 1 13 1 205 2 14 1 140 3 206 1 16 3 144 3 209 1 82 1 151 1 22 1 156 1 86 1 218 1 157 3 88 1 158 1 31 1 220 1 90 2 166 1 33 1 93 1 223 1 96 1 98 1 97 2 40 1 226 1 174 1 103 1 42 1 178 1 231 4 106 1 49 1 51 2 107 1 54 3 55 1 182 2 113 1 63 1 185 1 
158 1 65 1 191 1 90 3 166 1 120 2 222 1 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 1 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 2 106 1 49 1 166 1 120 3 182 1 197 1 174 1 203 2 185 2 218 1 136 2 
0 1 65 2 191 2 117 2 120 3 68 4 69 2 6 4 129 2 196 2 131 2 70 4 197 1 72 1 202 2 133 2 203 1 134 1 136 1 75 2 204 2 12 2 138 2 78 1 13 2 205 4 140 3 79 1 15 3 206 2 146 1 209 1 82 2 211 1 151 2 216 1 22 2 156 2 217 1 218 1 88 2 158 1 31 2 163 2 90 4 166 1 91 1 92 1 93 1 223 1 38 2 96 2 97 4 225 1 100 2 40 2 226 2 174 1 41 1 103 2 178 2 106 1 47 1 51 4 236 1 54 6 55 2 57 2 182 2 112 2 113 1 241 1 63 2 185 1 186 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 1 138 1 13 1 106 1 14 1 49 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 2 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 2 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
137 1 158 1 106 1 49 1 166 1 120 2 182 1 197 1 174 1 203 1 185 1 218 1 136 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 2 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 2 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 2 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 2 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 2 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 3 166 1 120 2 222 1 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 2 138 1 106 1 206 1 51 3 208 1 82 1 55 1 182 1 111 1 22 1 63 1 185 1 156 1 86 1 218 1 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 136 1 204 1 178 1 12 1 138 1 106 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
65 1 191 1 5 1 120 3 6 2 129 1 196 1 131 1 70 3 197 1 198 1 133 1 203 2 134 1 136 2 204 1 75 1 11 2 12 1 138 1 140 2 14 1 206 1 16 2 144 2 209 1 82 1 151 1 22 1 85 1 156 1 218 1 157 2 88 1 158 2 159 1 31 1 220 1 90 2 166 2 33 1 35 1 93 1 223 1 96 1 97 2 226 1 40 1 174 1 103 1 175 1 104 3 178 1 231 3 106 1 49 1 51 2 107 1 54 2 55 1 182 4 238 1 113 1 63 1 185 2 
158 1 65 1 191 1 90 3 166 1 120 2 96 1 6 2 97 2 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 1 138 1 106 1 14 1 49 1 206 1 51 3 208 1 82 1 55 1 182 1 22 1 63 1 185 1 156 1 218 1 
158 2 106 1 49 1 166 1 120 3 182 1 197 1 174 1 203 2 185 2 218 1 136 2 
158 1 65 1 191 1 90 2 166 1 120 2 96 1 6 2 97 2 98 1 129 1 196 1 131 1 226 1 197 1 40 1 174 1 203 1 103 1 42 1 136 1 204 1 178 1 12 2 138 1 106 1 14 1 49 1 206 1 51 2 82 1 55 1 182 1 22 1 63 1 185 1 156 1 86 1 218 1 
157 2 88 1 188 1 161 1 31 1 163 1 4 1 32 1 166 1 33 1 120 2 93 1 223 1 38 1 100 1 171 1 70 4 172 1 197 1 174 1 133 1 203 1 104 3 177 1 75 1 11 1 179 1 231 3 106 1 140 2 207 1 16 2 107 1 144 2 209 1 54 2 211 1 57 1 182 1 212 1 151 1 84 1 60 1 62 1 
157 2 88 1 188 1 161 1 31 1 220 1 32 1 166 1 33 1 120 2 93 1 37 1 223 1 126 1 70 4 197 1 174 1 133 1 203 1 104 3 177 1 75 1 11 1 231 3 106 1 139 1 140 2 207 1 16 2 107 1 144 2 209 1 54 2 182 2 110 1 151 1 59 1 113 1 241 1 60 1 62 1 
158 1 191 3 65 3 166 1 120 2 6 3 97 3 226 3 197 1 8 1 174 1 203 1 103 3 136 1 178 3 12 3 106 1 82 3 182 1 152 1 214 3 239 1 22 3 63 3 185 1 218 1 
158 1 191 1 65 1 166 1 167 1 120 2 6 1 97 1 226 1 197 1 8 1 174 1 203 1 103 1 136 1 178 1 12 1 106 1 82 1 182 1 214 1 239 1 22 1 63 1 185 1 218 1 
158 1 106 1 166 1 167 1 120 2 182 1 214 1 197 1 8 1 174 1 203 1 185 1 218 1 136 1 
158 1 191 1 65 1 166 1 120 2 6 1 97 1 226 1 197 1 8 1 174 1 203 1 103 1 136 1 178 1 12 1 106 1 82 1 182 1 214 1 239 1 22 1 63 1 185 1 218 1 
158 1 191 3 65 3 90 2 166 1 222 1 120 2 96 1 6 4 97 4 129 1 196 1 131 1 40 1 226 3 197 1 8 1 174 1 203 1 103 3 136 1 204 1 178 3 12 3 138 1 106 1 206 1 51 2 210 1 82 3 55 1 182 1 214 2 239 1 22 3 63 3 156 1 185 1 218 1 
158 1 160 1 191 1 65 1 192 1 166 1 120 2 68 1 6 1 97 1 70 1 226 1 197 1 8 1 174 1 203 1 103 1 136 1 178 1 12 1 205 1 106 1 208 1 82 1 83 1 182 1 214 1 239 1 22 1 63 1 185 1 218 1 
56 1 120 1 228 1 229 1 95 1 
233 1 120 1 121 1 
145 2 120 1 228 1 95 1 
123 1 233 1 119 1 120 1 
233 1 34 1 
133 1 93 1 209 1 223 1 
163 1 209 1 235 1 57 1 211 1 100 1 133 1 
11 1 157 1 231 1 140 1 5 1 16 1 144 1 
11 1 157 1 231 1 140 1 16 1 144 1 
97 1 196 1 70 1 90 1 51 1 208 1 
97 1 103 1 
70 1 90 1 51 1 208 1 
27 1 90 1 51 1 210 1 97 2 196 1 103 1 
97 1 103 1 
17 1 
213 1 
17 1 
203 1 
203 1 
197 1 
77 1 106 1 2 1 116 1 3 1 166 1 52 1 118 1 145 1 120 2 237 1 182 1 71 1 174 1 60 1 242 1 
77 1 106 1 28 1 2 1 3 1 51 1 166 1 118 1 208 1 145 1 36 2 80 1 120 2 237 1 182 1 70 3 71 1 174 1 60 1 242 1 
77 1 106 1 2 1 3 1 166 1 118 1 145 1 120 2 237 1 182 1 170 1 71 1 174 1 60 1 242 1 
77 2 106 2 2 2 116 1 3 2 166 2 52 1 118 2 145 2 120 4 237 2 182 2 170 1 71 2 174 2 60 2 242 2 
77 1 106 1 2 1 3 1 166 1 118 1 145 1 120 2 237 1 182 1 168 1 71 1 174 1 60 1 242 1 
77 1 106 1 28 2 2 1 3 1 51 2 166 1 118 1 208 1 145 1 36 1 80 1 120 2 237 1 182 1 70 1 71 1 174 1 60 1 242 1 
127 1 
187 1 70 2 208 1 104 2 
70 2 208 1 180 1 104 2 
88 1 187 1 28 1 2 1 31 1 163 1 3 1 166 1 118 1 91 1 120 3 38 1 127 1 168 1 225 1 100 1 70 2 71 1 174 1 133 1 41 1 134 1 104 2 75 1 77 1 106 1 15 2 51 1 180 1 145 1 146 1 80 1 54 2 237 1 57 1 182 2 151 1 216 1 241 1 242 1 60 1 115 1 186 1 
237 1 106 1 116 1 52 1 174 1 
157 3 88 1 187 1 28 1 2 1 31 1 3 1 220 1 5 1 166 1 118 1 33 1 36 1 93 1 120 2 223 1 127 1 70 3 71 1 174 1 133 1 134 1 104 2 75 1 11 1 231 4 77 1 106 1 140 3 51 1 16 3 107 1 144 3 180 1 145 1 80 1 234 1 209 1 54 2 237 1 182 3 151 1 113 1 242 1 60 1 
77 1 106 1 2 1 3 1 166 1 118 1 167 1 145 1 120 2 237 1 182 1 71 1 174 1 60 1 242 1 
77 2 106 2 2 2 3 2 166 2 118 2 145 2 120 4 237 2 182 2 168 1 170 1 71 2 174 2 60 2 242 2 
50 1 165 1 173 1 52 1 143 1 135 1 
2 1 162 1 166 1 165 1 36 1 120 2 195 1 169 1 70 2 132 1 173 1 174 1 135 1 106 1 51 2 145 1 208 1 182 1 60 1 25 1 24 2 
76 1 205 1 106 1 2 1 219 1 232 1 66 1 50 1 51 1 165 1 166 1 143 1 145 1 36 1 210 1 120 2 68 1 182 1 70 2 173 1 174 1 102 1 60 1 24 1 135 2 
232 1 
29 1 2 1 219 1 31 1 163 1 162 1 166 1 165 1 91 1 36 2 120 3 122 1 38 1 68 1 69 1 225 1 100 1 70 3 173 1 174 1 133 1 102 1 41 1 134 1 135 2 205 1 106 1 232 1 15 4 50 1 51 2 143 1 145 1 146 1 234 2 54 2 57 1 182 2 151 1 216 1 241 1 60 1 25 1 24 2 186 1 
50 1 165 1 173 1 52 1 143 1 135 1 
2 1 5 1 120 2 122 1 68 1 69 1 70 3 133 1 134 1 135 2 11 1 205 1 140 4 143 1 16 4 145 1 144 4 209 1 151 1 24 2 157 4 29 1 31 1 219 1 220 1 162 1 165 1 166 1 33 1 36 2 93 1 223 1 173 1 174 1 102 1 231 5 106 1 232 1 50 1 51 2 107 1 234 2 54 2 182 3 113 1 60 1 
106 1 2 1 162 1 50 1 51 2 165 1 166 1 143 1 208 1 145 1 36 1 120 2 182 1 132 1 70 2 173 1 174 1 60 1 24 2 135 1 
157 2 29 1 2 1 31 1 162 1 220 1 5 1 166 1 165 1 33 1 36 1 120 2 93 1 122 1 223 1 70 1 173 1 174 1 133 1 134 1 135 1 11 1 231 3 106 1 140 2 232 1 50 1 51 1 16 2 143 1 107 1 144 2 145 1 234 1 209 1 54 1 182 3 151 1 113 1 60 1 24 1 
219 1 51 1 102 1 210 1 24 1 135 1 
29 1 208 1 
208 1 122 1 
205 1 106 1 2 1 219 1 232 1 50 1 51 1 165 1 166 1 143 1 145 1 36 1 120 2 68 1 182 1 70 2 173 1 174 1 102 1 60 1 24 1 135 2 

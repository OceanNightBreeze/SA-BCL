#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 88 132 157 38 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 88 132 157 80 229 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 88 132 157 80 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | ASSIGN | 8797 | = null
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String; | CONDITION | 3182 | if (x) -> if (!x)
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 3607 | stmt -> ;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z | CONDITION | 4560 | if (x) -> if (!x)
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 8 1 2 1 208 1 97 1 
240 1 243 2 24 1 
152 1 8 1 206 1 2 1 208 1 97 1 
245 1 191 1 193 1 171 1 
191 1 105 2 193 1 78 1 169 2 17 1 171 1 141 1 159 1 218 1 14 2 99 1 
191 1 39 1 105 1 2 1 193 1 3 1 75 2 78 1 169 1 44 1 17 1 244 1 8 2 32 1 200 1 52 1 22 1 122 1 14 3 99 1 
191 1 39 1 105 1 2 1 193 1 3 1 75 2 78 1 169 1 44 1 17 1 8 2 32 1 200 1 52 1 22 1 122 1 14 3 99 1 
191 1 105 1 2 1 193 1 75 1 78 1 169 1 226 1 17 1 171 1 244 1 8 1 230 1 52 1 219 1 14 2 99 1 
191 1 105 1 2 1 193 1 75 1 78 1 169 1 226 1 17 1 171 1 244 1 8 1 230 1 52 1 121 1 14 2 99 1 
191 1 105 1 2 1 193 1 155 1 75 1 78 1 169 1 226 1 17 1 112 1 171 1 8 1 230 1 52 1 14 2 99 1 222 1 
191 1 105 1 2 1 193 1 155 1 75 1 78 1 169 1 226 1 17 1 112 1 171 1 244 1 8 1 230 1 52 1 14 2 99 1 222 1 
191 1 105 1 193 1 78 2 169 2 17 1 171 1 14 3 99 1 36 1 
191 1 105 1 41 1 193 1 78 2 171 1 176 2 98 1 14 3 99 1 
176 1 191 1 105 2 193 1 78 1 98 1 171 1 14 2 91 1 99 1 
191 1 105 1 193 1 78 1 210 1 171 1 176 1 98 1 14 2 99 1 
191 1 105 2 193 1 78 3 171 1 176 1 98 1 14 2 99 2 36 1 
191 1 105 1 26 1 193 1 3 1 75 1 78 2 156 1 171 1 176 2 8 1 98 1 122 1 14 4 99 2 102 1 
191 1 39 1 105 1 26 1 193 1 3 1 75 1 78 1 171 1 176 1 8 1 32 1 200 1 22 1 122 1 98 1 14 3 99 1 
191 1 105 1 26 1 193 1 3 1 75 1 156 1 78 1 171 1 113 1 176 1 8 1 98 1 122 2 14 3 99 1 
176 1 191 1 105 1 9 1 193 1 78 1 98 1 171 1 14 2 99 1 
191 1 105 1 26 1 193 1 3 1 75 1 78 1 171 1 213 1 176 1 8 1 82 1 98 1 122 4 163 1 14 3 99 1 203 1 
176 1 191 1 105 1 106 1 193 1 78 1 98 1 171 1 14 2 99 1 189 1 
204 1 93 3 34 1 
93 1 
239 1 80 1 71 1 224 4 40 1 57 4 88 1 66 1 11 1 157 1 140 1 132 1 
126 1 2 1 3 1 129 3 132 1 133 3 134 1 8 2 135 1 11 1 136 1 137 1 14 3 140 1 142 5 144 1 147 1 20 2 21 2 150 1 149 4 151 2 26 1 157 1 156 1 158 4 30 1 33 4 161 2 162 1 35 1 164 1 36 1 166 2 167 1 41 1 40 1 168 1 172 1 176 1 177 1 49 2 50 5 52 1 188 1 191 1 56 3 57 4 192 1 197 2 198 1 62 2 66 1 202 3 67 4 69 1 71 1 74 1 207 2 76 2 208 2 78 2 210 2 216 1 215 3 80 1 217 2 83 3 224 4 86 2 87 3 227 2 89 1 92 3 95 3 232 2 233 2 98 1 239 1 103 14 238 2 105 3 241 3 108 2 109 3 111 6 113 1 246 1 116 2 117 2 120 3 122 2 
126 1 191 1 2 1 57 4 192 1 3 1 195 4 132 1 134 1 198 1 61 2 8 2 63 4 135 1 66 1 11 1 12 2 137 1 14 3 67 2 71 1 208 2 76 2 210 2 78 2 140 1 79 2 214 2 216 1 80 1 144 1 145 1 19 2 149 2 83 4 25 4 84 2 153 1 224 4 26 1 225 1 156 1 157 1 89 1 158 4 92 4 30 1 162 1 98 1 164 1 100 2 36 1 37 3 103 8 239 1 105 3 40 1 41 1 107 1 43 1 111 4 113 2 176 1 177 1 52 1 182 1 122 3 183 1 185 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 66 1 11 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 66 1 11 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 66 1 11 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 66 1 11 1 
239 1 71 1 40 1 224 4 41 1 57 4 157 1 140 1 132 1 80 1 66 1 11 1 
60 1 
80 1 224 1 40 1 57 1 157 1 
239 1 80 1 71 1 41 1 224 4 40 1 57 4 88 1 11 1 157 1 140 1 132 1 
239 1 38 1 71 1 41 1 224 4 40 1 57 4 88 1 11 1 157 1 140 1 132 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 229 1 66 1 11 1 
239 1 71 1 40 1 224 4 41 1 57 4 88 1 157 1 140 1 132 1 80 1 66 1 11 1 
103 1 42 1 150 1 
103 1 178 1 
103 1 205 1 236 1 
103 1 2 1 226 1 130 1 111 1 58 1 173 1 8 1 230 1 23 1 83 1 222 1 
103 1 8 1 2 1 230 1 226 1 111 1 173 1 
103 1 205 1 
103 1 8 1 2 1 111 1 83 1 221 1 
103 1 236 1 
103 1 205 1 
103 1 178 1 
103 1 178 1 
103 1 94 1 181 1 25 1 
103 1 63 1 53 1 
0 1 191 1 158 2 160 2 12 1 235 1 98 1 14 2 236 1 103 2 205 1 105 1 78 1 77 1 216 1 176 1 248 1 187 1 
4 1 
0 1 191 1 105 1 77 1 78 1 216 1 176 1 245 1 12 1 98 1 248 1 14 2 187 1 
216 1 191 1 105 1 246 1 116 1 21 1 108 1 169 1 78 1 17 1 14 2 
191 1 105 1 78 1 169 2 108 2 17 1 45 1 216 1 246 1 116 2 21 2 14 3 
127 1 126 1 191 1 56 2 2 1 3 1 129 2 196 2 133 2 134 1 8 2 62 2 13 2 202 2 14 3 67 4 73 1 76 2 208 2 139 1 78 1 210 2 17 1 212 1 216 1 215 2 217 2 142 4 81 1 20 2 21 1 149 4 83 3 151 2 86 2 87 2 27 1 28 2 89 1 227 2 158 4 92 3 159 1 31 2 95 2 233 2 232 2 33 4 161 2 101 2 166 2 238 2 103 4 104 1 105 2 109 2 169 1 108 1 44 1 111 6 174 1 113 1 177 1 47 2 49 2 246 1 116 1 117 2 180 1 50 4 52 1 120 2 122 1 186 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 184 1 
56 1 191 1 129 1 5 1 133 1 62 1 202 2 14 2 205 1 78 1 17 1 216 1 215 1 142 2 21 1 151 1 86 1 87 1 158 3 95 1 232 1 233 1 33 3 161 1 236 1 166 1 238 1 105 1 242 1 169 1 108 1 109 1 170 1 45 1 49 1 246 1 117 1 116 1 50 2 51 1 120 1 184 1 
56 1 191 1 129 1 5 1 133 1 62 1 202 2 14 2 205 1 78 1 17 1 216 1 215 1 142 2 21 1 151 1 86 1 87 1 158 3 95 1 232 1 233 1 33 3 161 1 236 1 166 1 238 1 105 1 242 1 169 1 108 1 109 1 170 1 45 1 49 1 246 1 117 1 116 1 50 2 51 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 48 2 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
191 1 105 1 78 1 169 2 108 2 17 1 45 1 216 1 246 1 116 2 21 2 14 3 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 48 2 246 1 117 1 116 1 50 2 21 1 120 1 
1 1 191 1 105 1 78 1 169 1 108 1 17 1 45 1 216 1 246 1 116 1 21 1 14 2 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 48 2 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 2 236 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 223 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
191 1 56 1 2 1 130 2 129 1 58 2 133 1 7 1 134 1 8 1 62 1 135 1 202 1 14 3 15 1 68 1 76 1 78 2 210 1 17 1 18 1 215 1 216 1 142 2 20 1 21 2 23 2 150 3 83 2 222 3 151 1 86 1 87 1 226 1 158 2 227 1 159 1 95 1 230 1 233 1 232 1 33 2 161 1 102 1 166 1 103 3 105 4 109 1 169 2 108 2 112 2 111 2 173 1 45 1 177 1 49 1 246 1 116 2 117 1 50 2 52 1 121 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 184 1 
126 1 191 1 56 1 3 1 129 1 196 1 133 1 8 1 62 1 13 1 202 1 14 3 67 2 76 1 208 1 210 1 78 1 17 1 216 1 215 1 217 1 142 2 20 1 21 1 149 2 151 1 86 1 87 1 28 1 89 1 227 1 158 2 92 3 31 1 95 1 233 1 232 1 33 2 161 1 101 1 166 1 238 1 103 2 105 1 109 1 169 1 108 1 44 1 111 3 113 1 47 1 49 1 246 1 116 1 117 1 180 1 50 2 120 1 122 1 
191 1 105 1 78 1 169 1 108 1 17 1 45 1 216 1 31 1 246 1 116 1 21 1 14 2 
126 1 56 1 3 1 129 1 196 1 5 1 133 1 8 1 62 1 13 1 202 2 14 1 67 2 208 1 76 1 210 1 215 1 217 1 142 2 20 1 149 2 151 1 86 1 87 1 26 1 28 1 89 1 227 1 158 2 92 3 31 1 95 1 232 1 233 1 33 2 161 1 101 1 166 1 238 1 103 2 41 1 242 1 109 1 170 1 111 3 113 1 47 1 49 1 117 1 180 1 50 2 51 1 120 1 122 1 184 1 
126 1 191 1 56 1 3 1 129 1 196 1 133 1 8 1 62 1 13 1 202 1 14 3 67 2 76 1 208 1 210 1 78 1 17 1 216 1 215 1 217 1 142 2 20 1 21 1 149 2 151 1 223 1 86 1 87 1 28 1 89 1 227 1 158 2 92 3 31 1 95 1 233 1 232 1 33 2 161 1 101 1 166 1 238 1 103 2 105 1 109 1 169 1 108 1 44 1 111 3 113 1 47 1 49 1 246 1 116 1 117 1 180 1 50 2 120 1 122 1 
126 1 191 1 56 1 3 1 129 1 196 1 133 1 8 1 62 1 13 1 202 1 14 3 67 2 76 1 208 1 78 1 210 1 215 1 216 1 217 1 142 2 20 1 21 1 149 2 151 1 223 1 86 1 26 1 87 1 28 1 89 1 227 1 158 2 92 3 31 1 95 1 233 1 232 1 33 2 161 1 98 1 101 1 166 1 238 1 103 2 105 1 41 1 109 1 108 1 111 3 113 1 176 1 47 1 49 1 246 1 116 1 117 1 180 1 50 2 120 1 122 1 
151 1 56 1 191 1 86 1 87 1 129 1 5 1 158 2 133 1 62 1 95 1 233 1 232 1 33 2 161 1 202 2 14 2 166 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 2 133 1 95 1 62 1 233 1 232 1 33 2 161 1 202 1 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 236 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 116 1 117 1 50 2 21 1 120 1 
103 1 46 1 28 1 149 1 67 1 
103 1 217 1 46 1 149 1 67 1 
103 1 65 1 28 1 149 1 59 1 67 1 
56 1 191 1 129 1 5 1 133 1 62 1 202 2 14 2 205 1 78 1 17 1 216 1 215 1 142 2 21 1 151 1 86 1 87 1 158 3 95 1 232 1 233 1 33 3 161 1 236 1 166 1 238 1 105 1 242 1 169 1 108 1 109 1 170 1 45 1 49 1 246 1 117 1 116 1 50 2 51 1 120 1 184 1 
56 1 191 1 2 1 129 1 130 3 58 3 5 1 133 1 134 1 62 1 8 1 135 1 202 2 14 2 67 2 76 1 208 1 78 1 210 1 17 1 215 1 216 1 217 1 142 2 20 1 21 1 23 3 149 2 83 3 222 4 151 1 86 1 87 1 28 1 226 1 227 1 158 2 95 1 230 1 233 1 232 1 33 2 161 1 166 1 238 1 103 2 105 2 242 1 109 1 169 1 108 1 170 1 112 1 111 3 173 1 45 1 177 1 49 1 246 1 116 1 117 1 50 2 51 1 52 1 120 1 184 1 
151 1 191 1 56 1 223 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 236 1 14 2 166 1 238 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 238 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 48 2 246 1 116 1 117 1 50 2 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 48 2 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 5 1 158 3 133 1 95 1 62 1 233 1 232 1 33 3 161 1 202 2 14 2 166 1 205 1 105 1 242 1 109 1 108 1 169 1 78 1 17 1 170 1 215 1 216 1 45 1 142 2 49 1 246 1 116 1 117 1 50 2 51 1 21 1 120 1 184 1 
151 1 191 1 56 1 86 1 87 1 129 1 158 3 133 1 62 1 95 1 233 1 232 1 33 3 161 1 202 1 14 2 166 1 205 1 105 1 109 1 108 1 169 1 78 1 17 1 215 1 216 1 142 2 49 1 246 1 117 1 116 1 50 2 21 1 120 1 
191 1 2 1 130 2 226 1 58 2 227 1 134 1 8 1 32 1 231 1 230 1 199 1 200 1 135 1 64 1 12 1 14 2 103 4 39 1 105 2 76 1 169 1 78 1 210 1 17 1 110 1 111 2 112 1 114 1 216 1 177 1 20 1 52 1 22 1 219 1 122 1 54 1 23 2 150 3 83 2 222 3 
191 1 2 1 130 2 226 1 58 2 29 1 196 1 227 1 134 1 8 1 231 1 230 1 199 1 64 1 13 1 12 1 14 2 237 1 101 1 103 4 105 1 106 1 76 1 169 1 78 1 210 1 17 1 110 1 111 2 112 1 114 1 212 1 216 1 177 1 47 1 20 1 54 1 23 2 220 1 150 3 83 2 190 1 189 1 222 3 
151 1 56 3 191 1 223 1 86 1 87 3 129 3 158 2 133 3 62 1 95 3 233 1 232 1 33 2 161 1 136 1 202 3 14 2 166 1 238 1 167 2 105 1 168 1 243 1 109 3 78 1 169 1 108 1 17 1 215 3 216 1 142 4 49 1 246 1 117 1 116 1 50 4 21 1 120 3 
56 3 191 1 87 3 129 3 133 3 95 3 136 1 202 3 14 2 70 1 167 3 105 1 168 1 109 3 78 1 169 1 108 1 17 1 215 3 216 1 142 3 246 1 116 1 50 3 21 1 120 3 
56 1 191 1 87 1 129 1 133 1 95 1 9 1 136 1 202 1 14 2 167 1 105 1 168 1 109 1 78 1 169 1 108 1 17 1 215 1 216 1 142 1 246 1 116 1 50 1 21 1 120 1 
167 1 191 1 105 1 78 1 169 1 108 1 17 1 216 1 246 1 9 1 116 1 21 1 136 1 14 2 
56 1 191 1 87 1 129 1 133 1 95 1 136 1 202 1 14 2 67 1 103 1 205 1 167 1 105 1 168 1 207 1 109 1 78 1 169 1 108 1 17 1 211 1 215 1 216 1 142 1 46 1 246 1 116 1 50 1 21 1 120 1 149 1 
191 1 167 1 56 1 105 1 168 1 87 1 108 1 169 1 78 1 109 1 129 1 17 1 133 1 216 1 215 1 142 1 95 1 246 1 116 1 50 1 21 1 136 1 120 1 202 1 14 2 
201 1 123 1 14 1 124 1 
218 1 165 1 14 1 115 1 55 1 
72 1 201 1 14 1 
143 2 218 1 14 1 55 1 
201 1 119 1 
130 1 23 1 112 1 58 1 83 1 222 1 
134 1 177 1 8 1 2 1 
130 1 23 1 112 1 58 1 173 1 83 1 222 1 
2 1 196 1 90 1 212 1 8 1 47 1 101 1 
142 1 95 1 138 1 
142 1 95 1 
103 1 205 1 142 1 86 1 33 1 236 1 158 1 
142 1 95 1 
103 1 205 1 33 1 236 1 158 1 
98 1 
176 1 
176 1 
169 1 
17 1 
169 1 
191 1 105 1 128 1 194 1 209 1 78 1 228 1 216 1 143 1 146 1 247 1 10 1 12 1 234 1 14 2 
191 1 105 1 128 1 194 1 209 1 78 1 228 1 216 1 143 1 9 1 247 1 10 1 12 1 234 1 14 2 
191 2 105 2 128 2 194 2 154 1 209 2 78 2 228 2 216 2 143 2 146 1 247 2 10 2 12 2 234 2 14 4 
191 1 105 1 128 1 194 1 209 1 78 1 228 1 6 1 216 1 143 1 245 1 247 1 10 1 12 1 234 1 14 2 
103 1 205 1 191 1 105 1 128 1 194 1 209 1 78 1 158 2 228 1 216 1 143 1 63 1 179 1 247 1 10 1 12 1 234 1 148 2 14 2 
175 1 
103 2 205 1 85 1 150 2 236 1 
103 2 205 1 96 1 150 2 236 1 
126 1 191 1 85 1 128 1 194 1 3 1 131 1 89 1 196 1 158 1 227 1 228 1 92 2 159 1 8 1 96 1 10 1 13 1 234 1 12 1 14 3 101 1 103 2 105 2 76 1 210 1 78 1 209 1 44 1 111 2 175 1 113 1 216 1 143 1 47 1 146 1 179 1 247 1 180 1 20 1 148 1 122 1 150 2 
216 1 245 1 191 1 209 1 6 1 
191 1 85 1 2 1 128 1 194 1 130 3 226 1 58 3 158 1 227 1 228 1 159 1 134 1 8 1 63 1 230 1 96 1 10 1 135 1 234 1 12 1 14 2 103 3 105 3 76 1 210 1 78 1 209 1 111 2 112 1 173 1 175 1 216 1 143 1 177 1 179 1 247 1 20 1 52 1 148 1 23 3 150 2 25 1 83 3 222 4 
191 1 128 1 194 1 158 1 228 1 10 1 234 1 12 1 236 1 14 2 103 1 205 1 105 1 78 1 209 1 216 1 143 1 247 1 179 1 148 1 
191 1 105 1 128 1 194 1 154 1 209 1 78 1 228 1 216 1 143 1 247 1 10 1 12 1 234 1 14 2 
191 2 105 2 128 2 194 2 154 1 209 2 78 2 228 2 6 1 216 2 143 2 245 1 247 2 10 2 12 2 234 2 14 4 
245 1 145 1 153 1 182 1 183 1 37 1 
191 1 195 1 158 1 63 1 12 1 236 1 14 2 37 1 103 2 205 1 105 1 16 1 78 1 216 1 214 1 143 1 145 1 247 1 118 1 181 1 183 1 
191 1 153 1 195 1 158 1 63 1 12 1 236 1 14 2 37 1 103 2 205 1 105 1 78 1 216 1 214 1 143 1 145 1 247 1 182 1 181 1 183 1 
191 1 153 1 2 1 195 1 130 2 226 1 58 2 158 1 159 1 134 1 61 1 8 1 63 1 230 1 135 1 12 1 14 2 100 1 37 1 103 1 105 3 76 1 210 1 78 1 111 1 112 1 173 1 214 1 216 1 143 1 177 1 145 1 19 1 247 1 52 1 23 2 182 1 183 1 25 1 83 2 222 3 
84 1 195 1 243 1 158 1 79 1 37 1 
205 1 61 1 
205 1 100 1 
191 1 153 1 84 1 195 1 158 1 63 1 12 1 14 2 67 1 37 2 103 2 105 1 78 1 79 1 216 1 143 1 145 1 19 1 247 1 182 1 183 1 149 1 
191 1 153 1 84 1 195 1 158 1 63 1 12 1 14 2 67 1 37 2 103 2 105 1 240 1 78 1 243 1 79 1 216 1 143 1 145 1 19 1 247 1 53 1 182 1 183 1 149 1 
19 1 
126 1 191 1 84 1 153 1 3 1 195 2 89 1 196 1 158 2 92 4 159 1 61 1 8 1 63 2 13 1 12 1 14 3 67 1 100 1 101 1 37 2 103 3 105 2 208 1 76 1 78 1 210 1 44 1 111 2 79 1 113 1 214 1 216 1 143 1 47 1 145 1 19 1 247 1 180 1 182 1 122 1 149 1 183 1 25 2 125 1 
245 1 145 1 153 1 182 1 183 1 37 1 
191 1 84 1 153 1 2 1 195 2 130 4 226 1 58 4 158 2 159 1 134 1 61 1 8 1 63 2 230 1 135 1 12 1 14 2 67 1 100 1 37 2 103 3 105 3 208 1 76 1 210 1 78 1 111 2 112 1 173 1 79 1 214 1 216 1 143 1 177 1 145 1 19 1 247 1 52 1 23 4 182 1 149 1 183 1 25 2 83 4 222 5 

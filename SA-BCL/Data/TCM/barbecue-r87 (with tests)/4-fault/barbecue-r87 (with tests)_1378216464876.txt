#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 21 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 229 3 132 225 227 76 105 158 212 178 244 65 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 229 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle; | RETURN | 3104 | return null
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 3906 | 1 -> 2
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 19111 | 1 -> 0
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | ASSIGN | 10508 | = null
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
93 1 245 1 246 1 41 1 34 1 
152 1 45 1 92 2 
93 1 245 1 246 1 41 1 34 1 110 1 
88 1 60 1 143 1 207 1 
116 2 138 2 42 1 43 1 157 2 60 1 143 1 102 1 62 1 75 1 113 1 207 1 
116 1 138 3 154 1 139 1 68 1 157 1 143 1 245 2 246 1 62 1 75 1 223 1 132 1 112 2 225 1 165 1 113 1 13 1 14 1 207 1 
116 1 138 3 154 1 139 1 68 1 157 1 143 1 245 2 246 1 62 1 75 1 223 1 132 1 112 2 225 1 165 1 113 1 13 1 207 1 
116 1 170 1 40 1 138 2 68 1 157 1 60 1 143 1 243 1 245 1 246 1 62 1 75 1 112 1 113 1 207 1 14 1 
116 1 170 1 138 2 68 1 157 1 60 1 143 1 243 1 245 1 246 1 62 1 8 1 75 1 112 1 113 1 207 1 14 1 
116 1 170 1 138 2 68 1 157 1 69 1 60 1 143 1 243 1 245 1 246 1 62 1 75 1 112 1 12 1 113 1 228 1 207 1 
116 1 170 1 138 2 68 1 157 1 69 1 60 1 143 1 243 1 245 1 246 1 62 1 75 1 112 1 12 1 113 1 228 1 14 1 207 1 
116 1 138 3 157 2 60 1 143 1 84 1 62 2 75 1 113 1 207 1 
116 1 56 1 138 3 46 1 60 1 143 1 62 2 163 2 113 1 207 1 
116 2 56 1 163 1 62 1 138 2 77 1 60 1 113 1 143 1 207 1 
116 1 56 1 138 2 60 1 143 1 49 1 62 1 163 1 113 1 207 1 
116 1 56 1 138 3 154 1 96 1 60 1 143 1 245 1 62 1 163 1 223 1 132 1 112 1 225 1 165 1 13 1 113 1 207 1 
116 1 168 1 56 1 138 3 96 1 60 1 143 1 245 1 62 1 163 1 132 1 112 1 225 2 227 1 113 1 207 1 
116 1 56 1 163 1 62 1 138 2 72 1 60 1 113 1 143 1 207 1 
54 1 116 1 234 1 56 1 138 3 96 1 4 1 60 1 143 1 245 1 128 1 62 1 163 1 132 1 112 1 225 4 113 1 207 1 
116 1 39 1 56 1 163 1 62 1 138 2 60 1 113 1 143 1 16 1 207 1 
116 2 56 1 138 2 60 1 143 1 84 1 62 3 163 1 113 2 207 1 
116 1 168 1 56 1 138 4 96 1 60 1 143 1 216 1 245 1 62 2 163 2 132 1 112 1 225 1 113 2 207 1 
219 3 118 1 205 1 
219 1 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 61 1 62 2 178 1 114 1 116 3 184 1 185 1 117 1 189 2 195 1 193 1 198 4 200 1 20 1 129 1 132 1 76 1 138 3 212 1 214 1 143 1 84 1 145 1 222 10 31 1 225 1 147 1 36 1 89 1 227 1 226 3 149 1 229 1 151 1 153 1 96 1 238 2 158 1 97 1 98 2 46 1 242 1 160 1 100 2 245 1 244 1 104 1 105 1 106 1 163 1 51 1 
0 4 168 1 55 1 56 1 57 1 58 1 3 2 5 2 172 1 173 4 62 2 7 1 176 1 9 2 178 1 11 1 181 2 116 3 184 1 68 1 123 1 194 2 195 1 193 1 198 4 19 2 129 1 76 1 132 1 203 3 24 4 136 1 138 3 82 1 214 1 212 1 142 4 143 1 144 2 84 1 85 1 145 1 222 8 31 1 33 4 225 3 37 1 227 2 149 1 230 1 232 4 151 1 233 1 41 2 96 1 237 2 239 4 158 1 46 1 99 2 49 2 48 1 244 1 245 2 246 1 105 1 163 1 248 4 250 2 
167 4 1 2 168 1 55 1 56 1 58 1 2 2 171 2 3 2 109 1 172 1 173 4 62 2 7 1 174 1 176 1 178 1 179 2 11 1 181 4 182 2 115 4 116 3 185 2 184 1 117 2 189 2 68 1 71 2 195 1 193 1 198 4 127 2 200 2 202 2 129 1 76 1 132 1 22 2 78 2 24 3 138 4 26 2 214 1 212 1 142 4 143 1 28 1 84 1 145 1 31 1 222 4 32 1 225 2 89 4 91 2 227 1 37 1 149 1 231 2 232 6 151 1 155 2 41 2 238 2 96 1 239 3 241 2 158 1 97 2 46 1 242 2 100 2 101 2 49 2 103 2 162 2 104 4 244 1 245 2 246 1 105 1 106 2 163 1 247 2 53 2 249 2 250 4 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 2 174 1 178 1 116 4 184 1 185 1 117 1 189 2 195 1 193 1 198 4 200 1 129 1 132 1 76 1 138 3 214 1 212 1 28 1 143 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 2 43 1 158 1 97 1 46 1 242 1 160 1 100 2 245 1 244 1 104 1 105 1 106 1 163 1 51 1 166 1 
191 1 
1 2 2 2 3 2 109 1 7 1 11 1 115 4 116 3 117 2 127 2 126 1 129 1 131 1 132 1 22 2 24 3 138 3 139 1 26 2 142 4 28 1 143 1 29 2 145 1 31 1 32 1 35 2 37 1 149 1 151 1 155 2 41 2 157 1 158 1 161 1 47 1 49 2 162 2 164 1 53 2 167 4 168 1 55 1 58 1 171 2 172 1 173 4 62 2 174 1 63 2 176 1 178 1 179 2 181 4 182 2 184 1 185 2 189 2 190 1 68 1 195 1 193 1 71 2 198 4 200 2 202 2 75 1 76 1 78 2 209 1 210 1 82 1 215 1 212 1 214 1 83 1 84 1 221 1 222 4 225 2 89 4 227 1 91 2 231 2 232 6 235 2 238 2 239 3 241 2 240 2 97 2 242 2 100 2 101 2 103 2 245 2 244 1 104 4 105 1 246 1 106 2 247 2 250 4 249 2 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 3 174 1 178 1 116 5 184 1 185 1 117 1 189 3 195 1 193 1 198 4 200 1 129 1 132 1 76 1 138 4 214 1 212 1 28 1 143 1 216 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 3 43 1 158 1 97 1 46 1 242 1 160 1 100 3 245 1 244 1 104 1 105 1 106 1 163 2 51 1 166 1 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 2 174 1 178 1 116 3 184 1 185 1 117 1 189 2 195 1 193 1 198 4 200 1 129 1 132 1 76 1 138 3 214 1 212 1 28 1 143 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 2 158 1 97 1 46 1 242 1 160 1 100 2 245 1 244 1 104 1 105 1 106 1 163 1 51 1 166 1 
184 1 195 1 193 1 214 1 172 1 46 1 198 4 173 4 244 1 31 1 178 1 149 1 
173 1 244 1 178 1 172 1 198 1 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 2 174 1 178 1 116 3 184 1 185 1 117 1 189 2 195 1 198 4 200 1 129 1 132 1 76 1 138 3 214 1 212 1 28 1 143 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 2 158 1 97 1 46 1 242 1 160 1 100 2 245 1 244 1 104 1 105 1 106 1 163 1 51 1 166 1 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 2 174 1 178 1 116 3 184 1 185 1 117 1 189 2 195 1 198 4 200 1 129 1 132 1 76 1 21 1 138 3 214 1 212 1 28 1 143 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 2 158 1 97 1 46 1 242 1 160 1 100 2 245 1 104 1 105 1 106 1 163 1 51 1 166 1 
167 1 56 1 58 1 2 1 3 1 171 1 172 1 109 1 173 4 62 2 174 1 178 1 65 1 116 3 184 1 185 1 117 1 189 2 124 1 195 1 193 1 198 4 200 1 129 1 132 1 76 1 138 3 214 1 212 1 28 1 143 1 84 1 145 1 31 1 225 1 147 1 89 1 227 1 149 1 229 1 151 1 96 1 238 2 158 1 97 1 46 1 242 1 160 1 100 2 245 1 244 1 104 1 105 1 106 1 163 1 51 1 
167 4 1 2 168 1 55 1 56 1 58 1 2 2 171 2 3 2 109 1 172 1 173 4 62 2 7 1 174 1 176 1 178 1 179 2 11 1 181 4 182 2 115 4 116 3 185 2 184 1 117 2 189 2 68 1 71 2 195 1 193 1 198 4 127 2 200 2 202 2 129 1 76 1 132 1 22 2 78 2 24 3 138 3 26 2 82 1 214 1 212 1 142 4 143 1 28 1 84 1 145 1 31 1 222 4 32 1 225 2 89 4 91 2 227 1 37 1 149 1 231 2 232 6 151 1 155 2 41 2 238 2 96 1 239 3 241 2 158 1 97 2 46 1 161 1 242 2 100 2 101 2 49 2 103 2 162 2 104 4 244 1 245 2 246 1 105 1 106 2 163 1 247 2 53 2 249 2 250 4 
220 1 61 1 222 1 
222 1 74 1 
222 1 81 1 
232 1 183 1 243 1 169 1 245 1 24 1 246 1 222 1 170 1 192 1 52 1 69 1 
232 1 243 1 169 1 245 1 246 1 222 1 170 1 
222 1 81 1 
232 1 245 1 24 1 246 1 222 1 148 1 
222 1 224 1 
222 1 81 1 
222 1 74 1 
222 1 74 1 
199 1 222 1 208 1 33 1 
0 1 222 1 159 1 
116 1 56 1 138 2 66 2 211 1 81 1 142 2 143 1 144 1 125 1 86 1 129 1 222 2 130 1 62 1 163 1 134 1 
50 1 
116 1 56 1 138 2 211 1 143 1 144 1 125 1 86 1 129 1 62 1 163 1 88 1 134 1 
116 1 129 1 189 1 62 1 138 2 75 1 238 1 157 1 109 1 143 1 100 1 
116 1 189 2 138 3 238 2 157 2 109 1 143 1 6 1 100 2 129 1 62 1 75 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
116 1 189 2 138 3 238 2 157 2 109 1 143 1 6 1 100 2 129 1 62 1 75 1 
1 2 167 2 55 1 2 2 171 2 3 2 109 1 62 1 7 1 63 2 179 2 11 1 181 4 182 2 115 4 116 2 185 2 117 2 189 1 190 1 68 1 71 2 126 1 200 2 129 1 202 2 131 1 75 1 132 1 22 2 24 3 209 1 138 3 139 1 210 1 26 2 215 1 83 1 142 4 143 1 29 2 221 1 222 4 225 1 35 2 89 4 37 1 227 1 91 2 231 2 232 6 235 2 238 1 41 2 239 3 157 1 43 1 240 2 241 2 97 2 47 1 242 2 100 1 101 2 49 2 103 2 162 2 245 2 104 4 246 1 106 2 164 1 250 4 249 2 
167 1 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
79 2 167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
79 2 167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
116 1 189 1 138 2 238 1 157 1 109 1 143 1 6 1 100 1 129 1 62 1 75 1 87 1 
79 2 167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 53 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 53 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 53 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 53 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 204 1 53 1 249 1 
167 2 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 53 1 249 1 
1 1 167 1 169 1 55 1 170 1 58 1 2 1 171 1 3 1 109 1 6 1 61 3 62 2 8 1 179 1 11 1 12 2 115 2 116 4 183 2 185 1 186 1 117 1 187 1 189 2 119 1 68 1 192 2 69 3 71 1 73 1 127 1 200 1 202 1 129 1 75 1 24 2 138 3 26 1 142 2 143 1 216 1 222 3 89 2 91 1 231 1 232 2 238 2 43 1 157 2 241 1 97 1 242 1 100 2 101 1 49 1 103 1 243 1 104 2 245 1 246 1 106 1 52 2 249 1 
167 1 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
1 1 167 1 2 1 171 1 3 1 109 1 62 1 7 1 63 1 179 1 181 2 182 1 115 2 116 1 185 1 117 1 189 1 71 1 126 1 200 1 129 1 202 1 75 1 132 1 22 1 138 3 139 1 26 1 142 2 143 1 29 1 222 2 225 1 35 1 89 2 37 1 227 1 91 1 231 1 232 3 235 1 238 1 41 1 239 3 157 1 240 1 241 1 97 1 242 1 100 1 101 1 49 1 103 1 162 1 245 1 104 2 106 1 250 2 249 1 
116 1 189 1 138 2 238 1 157 1 109 1 143 1 6 1 100 1 29 1 129 1 62 1 75 1 
167 2 1 1 2 1 3 1 171 1 7 1 63 1 179 1 181 2 182 1 115 2 185 1 117 1 71 1 126 1 127 1 200 1 202 1 132 1 22 1 78 1 138 1 26 1 142 2 29 1 222 2 225 1 35 1 89 2 37 1 227 1 91 1 231 1 232 3 235 1 155 1 41 1 96 1 239 3 240 1 241 1 97 1 46 1 242 1 49 1 101 1 162 1 103 1 245 1 104 2 106 1 247 1 249 1 250 2 53 1 
1 1 167 1 2 1 171 1 3 1 109 1 62 1 7 1 63 1 179 1 181 2 182 1 115 2 116 1 185 1 117 1 189 1 71 1 126 1 200 1 129 1 202 1 75 1 132 1 22 1 204 1 138 3 139 1 26 1 142 2 143 1 29 1 222 2 225 1 35 1 89 2 37 1 227 1 91 1 231 1 232 3 235 1 238 1 41 1 239 3 157 1 240 1 241 1 97 1 242 1 100 1 101 1 49 1 103 1 162 1 245 1 104 2 106 1 250 2 249 1 
1 1 167 1 56 1 2 1 171 1 3 1 109 1 62 1 7 1 63 1 179 1 181 2 182 1 115 2 116 1 185 1 117 1 189 1 71 1 126 1 200 1 202 1 129 1 132 1 22 1 204 1 138 3 26 1 142 2 143 1 29 1 222 2 225 1 35 1 89 2 227 1 37 1 91 1 231 1 232 3 235 1 96 1 238 1 41 1 239 3 240 1 241 1 97 1 46 1 242 1 100 1 101 1 49 1 103 1 162 1 245 1 104 2 163 1 106 1 250 2 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 109 1 142 2 143 1 6 1 62 1 179 1 89 2 91 1 115 2 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 200 1 104 2 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 1 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 182 1 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 182 1 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 182 1 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 1 78 1 138 2 2 1 171 1 26 1 81 1 142 2 109 1 143 1 6 1 62 1 179 1 89 2 91 1 115 2 182 1 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 182 1 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
162 1 222 1 111 1 181 1 250 1 
222 1 111 1 22 1 181 1 250 1 
162 1 222 1 236 1 67 1 181 1 250 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
1 1 167 2 169 1 55 1 58 1 170 1 2 1 171 1 3 1 109 1 6 1 62 1 179 1 11 1 181 2 12 1 182 1 115 2 116 2 183 3 185 1 117 1 189 1 68 1 192 3 69 4 71 1 127 1 200 1 202 1 129 1 75 1 22 1 78 1 24 3 138 2 26 1 142 2 143 1 222 2 89 2 91 1 231 1 232 3 155 1 238 1 41 1 157 1 241 1 97 1 242 1 100 1 101 1 49 1 103 1 162 1 243 1 104 2 245 1 246 1 106 1 247 1 52 3 53 1 250 2 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 224 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 204 1 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
79 2 167 1 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 182 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
79 2 167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 2 78 1 138 2 2 1 171 1 26 1 81 1 142 3 109 1 143 1 6 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 155 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 127 1 104 2 200 1 202 1 129 1 106 1 75 1 247 1 53 1 249 1 
167 1 138 2 2 1 171 1 26 1 81 1 109 1 142 3 143 1 62 1 179 1 89 2 91 1 115 3 116 1 185 1 117 1 189 1 238 1 157 1 241 1 97 1 71 1 242 1 100 1 101 1 103 1 104 2 200 1 202 1 129 1 106 1 75 1 249 1 
1 1 24 2 55 1 170 1 58 1 138 2 3 1 144 1 143 1 61 3 62 1 222 4 223 1 225 1 11 1 90 1 12 1 13 1 231 1 232 2 183 2 116 2 188 1 40 1 154 1 120 1 192 2 157 1 68 1 15 1 69 3 197 1 17 1 49 1 243 1 245 1 129 1 246 1 75 1 52 2 165 1 
1 1 24 2 55 1 170 1 138 2 3 1 80 1 144 1 143 1 218 1 61 3 221 1 62 1 222 4 63 1 10 1 35 1 11 1 90 1 12 1 231 1 232 2 183 2 116 1 39 1 188 1 235 1 120 1 122 1 192 2 157 1 240 1 15 1 69 3 197 1 16 1 17 1 49 1 243 1 245 1 129 1 246 1 75 1 52 2 
167 3 138 2 2 3 26 1 171 3 142 2 109 1 143 1 62 1 179 1 147 1 89 4 91 1 92 1 182 1 115 2 116 1 185 3 117 3 189 1 238 1 157 1 241 1 97 3 71 1 242 3 160 1 100 1 101 1 103 1 104 4 200 3 202 1 129 1 106 3 75 1 51 2 204 1 249 1 
167 1 138 2 2 1 171 1 109 1 143 1 62 1 147 1 89 1 229 1 116 1 185 1 117 1 189 1 238 1 157 1 97 1 242 1 160 1 100 1 104 1 200 1 129 1 106 1 75 1 51 1 
167 3 138 2 2 3 108 1 171 3 109 1 143 1 62 1 147 1 89 3 116 1 185 3 117 3 189 1 238 1 157 1 97 3 242 3 160 1 100 1 104 3 200 3 129 1 106 3 75 1 51 3 
167 1 138 2 2 1 171 1 109 1 143 1 62 1 147 1 89 1 116 1 185 1 117 1 189 1 238 1 157 1 97 1 72 1 242 1 160 1 100 1 104 1 200 1 129 1 106 1 75 1 51 1 
116 1 189 1 138 2 238 1 157 1 72 1 109 1 143 1 100 1 129 1 62 1 75 1 51 1 147 1 
167 1 138 2 2 1 171 1 109 1 143 1 62 1 147 1 89 1 116 1 185 1 117 1 189 1 238 1 157 1 97 1 242 1 160 1 100 1 104 1 200 1 129 1 106 1 75 1 51 1 
30 1 135 1 138 1 64 1 
38 1 138 1 59 1 42 1 133 1 
18 1 30 1 138 1 
94 2 38 1 138 1 42 1 
30 1 25 1 
183 1 24 1 192 1 52 1 69 1 12 1 
183 1 169 1 24 1 192 1 52 1 69 1 12 1 
245 1 55 1 246 1 11 1 
235 1 95 1 245 1 246 1 221 1 63 1 35 1 
103 1 201 1 2 1 89 2 142 1 92 1 115 1 
2 1 89 1 
103 1 222 1 81 1 89 1 142 1 115 1 
2 1 89 1 
222 1 81 1 142 1 115 1 
56 1 
163 1 
163 1 
157 1 
75 1 
157 1 
116 1 94 1 138 2 121 1 27 1 72 1 141 1 143 1 144 1 129 1 62 1 146 1 175 1 180 1 206 1 
116 2 94 2 138 4 121 2 156 1 27 2 141 2 196 1 143 2 144 2 129 2 62 2 146 2 175 2 180 2 206 2 
116 1 94 1 138 2 121 1 156 1 27 1 141 1 143 1 144 1 129 1 62 1 146 1 175 1 180 1 206 1 
0 1 116 1 94 1 138 2 121 1 27 1 81 1 142 2 141 1 143 1 144 1 129 1 222 1 62 1 146 1 175 1 177 1 180 1 23 2 206 1 
217 1 
61 2 222 2 81 1 44 1 
150 1 61 2 222 2 81 1 
1 1 138 3 137 1 139 1 3 1 27 1 142 1 141 1 144 1 143 1 217 1 61 2 222 2 62 1 7 1 63 1 146 1 175 1 177 1 225 1 35 1 180 1 37 1 227 1 231 1 232 2 150 1 116 2 94 1 235 1 121 1 239 2 156 1 43 1 240 1 44 1 49 1 126 1 245 1 129 1 132 1 23 1 206 1 
129 1 175 1 88 1 70 1 143 1 
0 1 1 1 169 1 24 3 55 1 58 1 170 1 138 2 3 1 27 1 142 1 141 1 144 1 143 1 217 1 61 2 222 3 62 1 33 1 146 1 175 1 177 1 11 1 12 1 180 1 231 1 232 2 150 1 183 3 116 3 94 1 121 1 192 3 43 1 68 1 69 4 44 1 49 1 243 1 245 1 129 1 246 1 52 3 23 1 206 1 
116 1 94 1 138 2 121 1 27 1 70 1 141 1 143 1 144 1 129 1 62 1 146 1 175 1 88 1 180 1 206 1 
0 2 116 1 94 1 138 2 121 1 27 1 81 1 142 1 141 1 143 1 144 1 129 1 222 3 62 1 146 1 175 1 177 1 180 1 23 1 206 1 
116 1 94 1 138 2 121 1 27 1 141 1 196 1 143 1 144 1 129 1 62 1 146 1 175 1 180 1 206 1 
116 2 94 2 138 4 121 2 70 1 27 2 141 2 196 1 143 2 144 2 129 2 62 2 146 2 175 2 88 1 180 2 206 2 
0 1 116 1 233 1 94 1 208 1 138 2 123 1 81 1 142 2 143 1 144 1 48 1 19 1 129 1 222 2 62 1 146 1 203 1 248 2 230 1 
0 1 169 1 24 2 55 1 58 1 170 1 138 2 3 1 5 1 142 1 144 1 143 1 222 1 62 1 33 1 146 1 11 1 12 1 230 1 232 1 183 2 116 3 233 1 94 1 237 1 192 2 43 1 68 1 69 3 123 1 194 1 49 1 48 1 19 1 243 1 245 1 129 1 246 1 52 2 203 1 248 1 
9 1 203 1 142 1 248 1 99 1 92 1 
237 1 81 1 
81 1 5 1 
0 1 138 2 142 1 144 1 143 1 62 1 222 2 146 1 9 1 181 1 230 1 116 1 233 1 94 1 123 1 194 1 99 1 48 1 129 1 203 2 248 1 250 1 
233 1 88 1 203 1 123 1 230 1 48 1 
0 1 107 1 208 1 138 2 140 1 213 1 81 1 142 2 144 1 143 1 62 1 222 2 146 1 230 1 116 1 94 1 123 1 19 1 129 1 203 1 248 2 
0 1 138 2 142 1 144 1 143 1 62 1 222 2 146 1 9 1 181 1 230 1 92 1 116 1 233 1 94 1 123 1 194 1 159 1 45 1 99 1 48 1 129 1 203 2 248 1 250 1 
194 1 
0 2 138 3 139 1 3 1 140 1 5 1 142 2 144 1 143 1 222 3 62 1 7 1 63 1 33 2 146 1 9 1 225 1 35 1 181 1 227 1 37 1 230 1 232 2 116 2 233 1 94 1 235 1 41 1 237 1 239 4 43 1 240 1 123 1 194 1 99 1 48 1 49 1 126 1 19 1 245 1 129 1 132 1 203 2 248 2 250 1 
233 1 88 1 203 1 123 1 230 1 48 1 
0 2 169 1 24 4 55 1 58 1 170 1 138 2 3 1 5 1 142 2 144 1 143 1 222 3 62 1 33 2 146 1 9 1 11 1 181 1 12 1 230 1 232 2 183 4 116 3 233 1 94 1 41 1 237 1 192 4 43 1 68 1 69 5 123 1 194 1 99 1 49 1 48 1 19 1 243 1 245 1 129 1 246 1 52 4 203 2 248 2 250 1 

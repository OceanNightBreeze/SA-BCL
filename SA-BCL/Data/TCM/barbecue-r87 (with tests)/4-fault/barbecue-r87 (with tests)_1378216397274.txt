#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 21 72 131 26 212 173 213 66 10 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 21 72 131 26 212 173 213 66 10 184 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 21 72 131 26 212 173 213 66 10 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 21 72 131 26 212 173 213 66 10 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 177 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 21 72 131 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 162 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 84 177 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V ERROR java.lang.StringIndexOutOfBoundsException 112 232 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V ERROR java.lang.InternalError 155 200 84 177 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.GraphicsMock:getFontRenderContext()Ljava.awt.font.FontRenderContext;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | CONDITION | 1444 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List; | RETURN | 3187 | return null
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List; | STATEMENT | 32132 | stmt -> ;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | OPERATOR | 8572 | + -> -
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 217 1 199 1 133 1 46 1 172 1 
44 1 217 1 199 1 133 1 46 1 
70 2 113 1 229 1 
44 1 75 1 235 1 151 1 101 2 31 3 105 1 68 1 20 1 21 1 140 1 23 1 141 1 72 1 117 1 40 1 91 1 25 1 178 1 
44 1 131 1 180 1 235 1 151 1 101 1 31 3 68 1 20 1 21 1 140 1 23 1 141 1 72 2 117 1 40 1 
141 1 23 1 140 1 235 1 117 1 101 1 151 1 73 1 31 2 68 1 
44 1 98 1 235 1 151 1 101 1 31 3 68 1 20 1 240 1 21 1 140 1 23 1 141 1 72 4 117 1 40 1 56 1 188 1 
218 1 205 1 235 1 151 1 101 1 31 2 68 1 140 1 23 1 141 1 117 1 
235 2 151 1 101 1 31 2 68 1 140 1 23 1 141 3 117 2 74 1 
44 1 235 1 180 1 151 1 101 2 31 4 6 1 68 1 20 1 21 1 140 1 23 1 141 2 72 1 117 2 40 1 
23 1 140 1 118 1 151 1 
235 2 151 1 101 1 31 2 68 1 140 1 23 1 141 1 117 1 92 1 94 1 
44 2 75 1 235 1 151 1 101 1 46 1 31 3 105 1 68 1 20 1 35 1 21 1 23 1 141 1 72 1 117 1 177 1 40 2 91 1 25 1 
44 2 75 1 235 1 151 1 101 1 46 1 31 3 105 1 68 1 20 1 21 1 23 1 141 1 72 1 117 1 177 1 40 2 91 1 25 1 
44 1 1 1 235 1 151 1 101 1 79 1 46 1 31 2 68 1 35 1 242 1 140 1 23 1 141 1 117 1 40 1 177 1 
44 1 1 1 235 1 151 1 101 1 46 1 31 2 68 1 35 1 242 1 140 1 23 1 141 1 157 1 117 1 40 1 177 1 
27 1 44 1 1 1 235 1 151 1 101 1 46 1 31 2 104 1 68 1 242 1 140 1 23 1 141 1 117 1 40 1 177 1 42 1 
27 1 44 1 1 1 235 1 151 1 101 1 46 1 31 2 104 1 68 1 35 1 242 1 140 1 23 1 141 1 117 1 40 1 177 1 42 1 
235 1 151 1 101 2 31 3 68 1 140 1 23 1 141 2 117 1 74 1 
235 1 151 1 31 3 19 1 140 1 23 1 141 2 198 2 38 1 117 1 
38 1 198 1 141 1 23 1 140 1 114 1 235 2 117 1 151 1 31 2 
235 1 151 1 31 2 221 1 140 1 23 1 141 1 198 1 38 1 117 1 
176 3 2 1 50 1 
176 1 
131 1 134 7 3 2 133 2 5 1 6 1 137 1 141 4 10 1 146 8 147 3 151 1 152 3 153 4 17 1 155 1 19 1 21 1 22 1 24 4 26 1 161 7 162 2 28 2 30 4 31 4 32 3 170 7 34 3 173 1 174 4 38 1 177 1 43 11 44 2 179 1 45 1 180 1 46 1 51 1 49 4 54 2 185 4 186 1 57 7 187 1 190 3 60 1 191 2 192 1 64 7 196 11 66 1 71 1 197 4 198 2 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 209 3 84 2 210 2 211 1 86 1 212 1 213 1 89 7 93 14 94 1 95 1 222 7 221 2 102 2 103 7 224 1 110 1 111 4 227 4 115 1 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 5 236 1 238 1 125 1 239 2 126 1 127 4 243 1 130 1 129 6 
131 1 134 7 133 2 5 1 137 1 141 2 10 1 146 8 151 1 152 2 153 4 17 1 155 1 19 1 21 1 22 1 24 4 26 1 161 7 162 2 28 2 30 4 31 3 32 2 34 2 170 7 173 1 174 4 38 1 177 1 43 11 44 2 45 1 179 1 180 1 46 1 49 4 51 1 54 2 185 4 57 7 187 1 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 4 71 1 198 1 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 84 2 209 3 210 2 211 1 212 1 86 1 213 1 89 7 93 4 95 1 222 7 221 2 102 2 103 7 110 1 111 4 227 4 115 1 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 3 236 1 238 1 125 1 239 2 126 1 127 4 129 6 
121 1 60 1 233 1 86 1 10 1 30 4 119 1 236 1 19 1 66 1 125 1 174 4 
131 1 134 7 133 2 5 1 137 1 141 2 10 1 146 8 12 1 151 1 152 2 153 4 17 1 155 1 19 1 21 1 24 4 26 1 161 7 162 2 28 2 30 4 31 3 32 2 34 2 170 7 173 1 174 4 38 1 177 1 43 11 44 2 45 1 179 1 180 1 46 1 49 4 51 1 54 2 185 4 57 7 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 4 71 1 198 1 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 84 2 209 3 210 2 211 1 212 1 86 1 213 1 89 7 93 4 95 1 97 1 222 7 221 2 102 2 103 7 106 1 110 1 111 4 227 4 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 3 236 1 238 1 125 1 239 2 127 4 129 6 
190 4 131 2 60 1 192 1 133 2 66 1 137 1 71 1 197 2 138 1 8 1 141 2 198 1 9 2 72 3 200 2 10 1 142 4 201 2 143 2 202 4 144 2 74 1 14 2 76 1 150 1 77 2 78 2 151 1 17 1 155 1 209 4 84 2 19 1 21 1 211 1 86 1 212 1 24 4 213 1 216 2 93 8 95 1 26 1 164 1 28 2 165 2 30 4 221 2 31 3 168 1 169 1 225 2 173 1 174 4 108 3 38 1 116 4 177 1 119 1 120 1 44 2 121 1 179 1 45 1 233 1 180 1 235 3 46 1 236 1 51 1 49 2 238 1 125 1 187 1 129 4 
190 2 131 1 60 1 191 1 134 1 133 1 64 1 135 1 196 1 66 1 137 1 197 2 198 1 141 2 72 1 10 1 203 1 146 1 74 1 149 1 151 1 153 1 208 1 152 2 17 1 84 1 19 1 21 1 211 1 86 1 212 1 24 1 213 1 89 1 93 2 95 1 26 1 161 1 30 4 222 1 31 3 221 1 166 1 102 1 32 2 103 1 170 2 34 2 173 1 174 4 227 1 112 1 38 1 115 1 228 1 119 1 230 1 120 1 43 1 231 1 232 1 44 1 121 1 233 1 235 3 236 1 124 1 49 2 238 1 125 1 126 1 54 1 127 1 55 1 185 1 57 1 129 2 
131 2 134 7 133 2 5 1 137 1 141 2 10 1 146 8 151 1 152 2 153 4 17 1 155 1 19 1 21 1 22 1 24 4 26 1 161 7 162 2 28 2 30 4 31 3 32 2 34 2 170 7 173 1 174 4 38 1 177 1 43 11 44 2 45 1 179 1 180 1 46 1 49 4 51 1 54 2 185 4 57 7 187 1 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 4 71 1 198 1 72 3 200 2 203 7 74 1 77 2 206 3 78 2 208 4 84 2 209 3 210 2 211 1 86 1 212 1 213 1 89 7 93 4 95 1 94 1 97 1 222 7 221 2 102 2 103 7 106 1 110 1 111 4 227 4 115 1 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 4 236 1 238 1 125 1 239 2 126 1 127 4 128 1 129 6 
86 1 10 1 30 1 66 1 174 1 
131 1 134 7 133 2 5 1 137 1 141 2 10 1 146 8 151 1 152 2 153 4 17 1 155 1 19 1 21 1 22 1 24 4 26 1 161 7 162 2 28 2 30 4 31 3 32 2 34 2 170 7 173 1 174 4 38 1 177 1 43 11 44 2 45 1 179 1 180 1 46 1 49 4 51 1 54 2 185 4 57 7 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 4 71 1 198 1 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 84 2 209 3 210 2 211 1 212 1 86 1 213 1 89 7 93 4 95 1 97 1 222 7 221 2 102 2 103 7 106 1 110 1 111 4 227 4 115 1 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 3 238 1 125 1 239 2 126 1 127 4 129 6 
131 1 134 7 133 2 5 1 137 1 141 2 146 8 151 1 152 2 153 4 17 1 155 1 19 1 21 1 22 1 24 4 26 1 161 7 162 2 28 2 30 4 31 3 32 2 34 2 170 7 173 1 174 4 38 1 177 1 43 11 44 2 45 1 179 1 180 1 46 1 49 4 51 1 54 2 185 4 57 7 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 4 71 1 198 1 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 84 2 209 3 210 2 211 1 212 1 86 1 213 1 89 7 93 4 95 1 97 1 222 7 221 2 102 2 103 7 106 1 110 1 111 4 227 4 115 1 119 1 228 4 120 1 230 4 231 1 232 4 121 1 233 1 235 3 238 1 125 1 239 2 241 1 126 1 127 4 129 6 
131 1 134 7 133 2 135 1 5 1 137 1 141 3 10 1 146 8 149 1 151 2 152 3 153 4 17 1 155 1 19 1 21 1 24 4 26 1 161 7 162 2 28 2 30 4 31 5 32 3 166 1 34 3 170 8 173 1 174 4 38 2 177 1 43 11 44 2 179 1 45 1 180 1 46 1 49 5 51 1 184 1 54 2 55 1 185 4 57 7 190 3 60 1 191 2 192 1 64 7 196 11 66 1 197 5 71 1 198 2 72 2 200 2 203 7 74 1 77 2 206 3 78 2 208 4 209 3 84 2 210 2 211 2 86 1 212 1 213 1 89 7 93 5 95 1 97 1 222 7 221 2 102 2 103 7 106 1 109 1 110 1 111 4 227 4 112 1 115 1 119 1 228 4 120 1 230 4 231 2 232 4 121 1 233 1 235 4 236 1 124 1 238 1 125 1 239 2 126 1 127 4 129 6 
190 2 131 1 60 1 191 1 134 1 133 1 64 1 135 1 196 1 68 1 66 1 197 2 141 2 72 1 10 1 203 1 146 1 74 1 149 1 151 1 153 1 208 1 152 2 17 1 84 1 20 1 21 1 211 1 86 1 212 1 24 1 213 1 89 1 93 2 95 1 26 1 161 1 101 1 30 4 222 1 31 3 221 1 166 1 102 1 32 2 103 1 170 2 34 2 173 1 174 4 227 1 112 1 115 1 228 1 119 1 230 1 120 1 43 1 231 1 232 1 44 1 121 1 233 1 235 3 236 1 124 1 49 2 238 1 125 1 126 1 54 1 127 1 55 1 185 1 57 1 129 2 
85 1 
190 2 131 1 60 1 191 1 134 1 133 1 64 1 135 1 196 1 66 1 137 1 197 2 198 1 141 2 72 1 10 1 203 1 146 1 74 1 149 1 151 1 153 1 208 1 152 2 17 1 84 1 19 1 21 1 211 1 86 1 212 1 24 1 213 1 89 1 93 2 95 1 26 1 161 1 30 4 222 1 31 3 221 1 166 1 102 1 32 2 103 1 170 2 34 2 173 1 174 4 227 1 112 1 38 1 115 1 228 1 119 1 230 1 120 1 43 1 231 1 232 1 44 1 121 1 233 1 235 3 236 1 124 1 49 2 238 1 125 1 126 1 54 1 127 1 55 1 185 1 57 1 129 2 
59 1 224 1 93 1 
167 1 93 1 
167 1 93 1 
44 1 122 1 46 1 93 1 209 1 129 1 
44 1 1 1 46 1 104 1 195 1 209 1 226 1 242 1 11 1 145 1 93 1 129 1 
181 1 93 1 
44 1 242 1 1 1 46 1 93 1 195 1 129 1 
87 1 93 1 
167 1 93 1 
87 1 93 1 
87 1 93 1 
116 1 99 1 93 1 53 1 
202 1 93 1 244 1 
235 1 220 2 151 1 31 2 123 1 167 1 237 1 171 1 36 1 107 1 211 1 141 1 198 1 38 1 24 2 143 1 93 2 
96 1 
235 1 151 1 31 2 123 1 237 1 36 1 107 1 211 1 141 1 198 1 38 1 118 1 143 1 
141 1 211 1 235 1 101 1 151 1 152 1 31 2 32 1 231 1 34 1 68 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 2 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 151 1 152 1 153 1 208 1 18 2 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
235 1 151 1 101 1 31 2 152 1 32 1 34 1 68 1 139 1 211 1 141 1 41 1 231 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 151 1 152 1 153 1 208 1 18 2 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 2 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
134 2 101 1 64 2 31 2 222 2 32 1 167 1 103 2 196 4 34 1 170 4 68 1 111 2 227 2 141 1 228 2 230 2 203 2 146 5 43 4 231 1 149 2 232 2 235 1 181 1 151 1 152 1 153 2 208 2 127 2 211 1 185 2 24 3 89 2 57 2 162 1 161 2 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 2 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
134 2 101 1 64 2 31 2 222 2 32 1 167 1 103 2 196 4 34 1 170 4 68 1 111 2 227 2 141 1 228 2 230 2 203 2 146 5 43 4 231 1 149 2 232 2 235 1 181 1 151 1 152 1 153 2 208 2 127 2 211 1 185 2 24 3 89 2 57 2 162 1 161 2 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 2 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 149 1 232 1 235 1 181 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 128 1 24 3 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 2 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 149 1 232 1 235 1 181 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
27 1 191 1 1 1 101 2 221 1 31 3 102 1 32 2 224 2 104 1 6 1 170 1 226 1 34 2 68 1 139 1 112 1 141 2 177 1 228 1 11 1 145 1 231 1 232 1 44 1 15 1 45 1 235 4 151 1 152 2 46 1 48 1 209 1 182 1 84 1 238 1 242 1 211 1 93 2 94 1 161 1 129 1 
235 1 151 1 101 1 135 1 31 2 152 1 32 1 170 1 34 1 68 1 139 1 112 1 211 1 141 1 228 1 231 1 161 1 232 1 
235 1 151 1 101 2 31 3 152 2 32 2 34 2 68 1 139 1 211 1 141 1 231 1 
131 1 190 3 191 2 192 1 133 2 134 2 64 2 196 4 68 1 71 1 197 4 141 1 72 1 203 2 146 4 151 1 152 1 153 2 208 2 209 3 84 2 20 1 21 1 211 1 24 4 89 2 93 4 94 1 162 2 161 2 101 1 31 3 221 2 222 2 32 1 102 2 103 2 34 1 170 2 111 2 227 2 177 1 228 2 230 2 120 1 231 1 43 4 232 2 44 2 45 1 235 2 46 1 124 2 49 4 54 2 127 2 185 2 57 2 129 6 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 1 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 18 2 127 1 211 1 185 1 24 1 158 1 89 1 57 1 161 1 
131 1 190 3 191 1 133 1 134 2 64 2 196 4 68 1 71 1 197 2 141 1 72 1 203 2 146 4 151 1 152 1 153 2 208 2 84 1 20 1 21 1 211 1 24 2 89 2 93 2 162 1 161 2 101 1 221 1 31 3 222 2 32 1 102 1 103 2 34 1 170 2 111 2 227 2 228 2 120 1 230 2 231 1 43 4 232 2 44 1 235 1 124 1 49 2 54 1 127 2 185 2 57 2 129 3 
235 1 151 1 101 1 31 2 152 1 32 1 34 1 68 1 37 1 139 1 211 1 141 1 231 1 
131 1 190 2 191 1 134 1 133 1 222 1 64 1 135 1 31 1 221 1 166 1 102 1 103 1 196 1 170 2 137 1 197 2 227 1 112 1 72 1 228 1 203 1 230 1 120 1 146 1 43 1 149 1 232 1 44 1 153 1 208 1 124 1 49 2 84 1 19 1 21 1 54 1 127 1 185 1 24 1 89 1 57 1 93 2 161 1 129 2 
131 1 190 3 191 1 133 1 134 2 64 2 196 4 68 1 71 1 197 2 141 1 72 1 203 2 146 4 151 1 152 1 153 2 208 2 84 1 20 1 21 1 211 1 24 2 89 2 93 2 162 1 161 2 101 1 221 1 31 3 222 2 32 1 102 1 103 2 34 1 170 2 111 2 227 2 228 2 230 2 120 1 231 1 43 4 232 2 44 1 235 1 124 1 49 2 54 1 127 2 185 2 128 1 57 2 129 3 
131 1 190 3 191 1 133 1 134 2 64 2 196 4 137 1 71 1 197 2 141 1 198 1 72 1 203 2 146 4 151 1 152 1 153 2 208 2 84 1 19 1 21 1 211 1 24 2 89 2 93 2 162 1 161 2 31 3 221 1 222 2 32 1 102 1 103 2 34 1 170 2 111 2 227 2 38 1 228 2 230 2 120 1 231 1 43 4 232 2 44 1 235 1 124 1 49 2 54 1 127 2 185 2 128 1 57 2 129 3 
134 1 101 1 222 1 64 1 31 2 135 1 166 1 32 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 203 1 230 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 153 1 152 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 1 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 181 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 181 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 2 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 1 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 232 1 235 1 151 1 208 1 152 1 153 1 127 1 211 1 185 1 24 1 89 1 57 1 162 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 181 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 2 89 1 57 1 162 1 161 1 
197 1 156 1 124 1 93 1 49 1 
197 1 54 1 156 1 93 1 49 1 
197 1 132 1 80 1 124 1 93 1 49 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
1 1 191 1 133 1 134 1 64 1 135 1 196 1 68 1 197 2 139 1 141 1 11 2 203 1 145 2 146 1 149 1 151 1 153 1 152 1 208 1 84 1 209 2 211 1 24 1 89 1 93 2 161 1 27 1 101 1 222 1 31 2 221 1 166 1 32 1 102 1 103 1 104 2 34 1 226 2 170 2 227 1 112 1 177 1 228 1 230 1 43 1 231 1 232 1 44 1 45 1 235 2 46 1 124 1 49 2 238 1 54 1 242 1 127 1 185 1 57 1 129 2 
134 2 101 1 64 2 31 2 222 2 32 1 167 1 103 2 196 4 34 1 170 2 68 1 111 2 227 2 141 1 228 2 230 2 203 2 146 5 43 4 231 1 232 2 235 1 181 1 151 1 152 1 153 2 208 2 127 2 211 1 185 2 128 1 24 3 89 2 57 2 162 1 161 2 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 158 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 1 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 232 1 235 1 151 1 152 1 153 1 208 1 18 2 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 18 2 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 1 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
134 1 101 1 64 1 31 2 222 1 32 1 167 1 103 1 196 2 34 1 170 1 68 1 111 1 227 1 141 1 228 1 230 1 203 1 146 3 43 2 231 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 3 89 1 57 1 161 1 
235 1 151 1 101 2 31 3 152 2 32 2 34 2 68 1 139 1 211 1 141 1 231 1 
134 1 101 1 64 1 31 2 135 1 222 1 32 1 166 1 103 1 196 1 34 1 170 2 68 1 139 1 227 1 141 1 112 1 228 1 230 1 203 1 146 1 43 1 231 1 149 1 232 1 235 1 151 1 152 1 153 1 208 1 127 1 211 1 185 1 24 1 89 1 57 1 161 1 
27 1 1 1 191 1 192 1 100 1 101 1 31 2 221 1 102 1 33 1 224 3 104 3 226 2 68 1 141 1 175 1 143 1 11 2 145 2 44 1 45 1 16 1 235 1 151 1 46 1 82 1 47 1 83 1 209 2 52 1 84 1 242 1 211 1 215 1 93 4 129 2 58 1 
27 1 62 1 28 1 218 1 191 1 1 1 100 1 101 1 31 2 221 1 102 1 33 1 224 3 104 2 226 2 68 1 141 1 175 1 200 1 177 1 143 1 11 2 145 2 44 1 77 1 205 1 45 1 235 2 78 1 151 1 46 1 83 1 155 1 209 2 52 1 84 1 238 1 242 1 211 1 93 4 129 2 58 1 
134 4 101 1 222 4 64 4 31 2 32 1 103 4 5 1 196 6 170 4 34 1 68 1 70 1 111 2 110 1 227 2 141 1 228 2 230 2 203 4 146 4 43 6 231 1 232 2 235 1 206 2 151 1 208 2 153 2 152 1 127 2 211 1 185 2 24 2 128 1 89 4 57 4 162 1 161 4 
163 1 134 1 101 1 222 1 64 1 31 2 32 1 167 1 103 1 5 1 196 1 170 1 34 1 68 1 197 1 110 1 141 1 203 1 43 1 231 1 235 1 206 1 151 1 152 1 49 1 210 1 156 1 211 1 89 1 93 1 57 1 161 1 
134 3 101 1 222 3 64 3 31 2 32 1 103 3 5 1 196 3 170 3 34 1 68 1 110 1 141 1 203 3 43 3 231 1 235 1 206 3 151 1 152 1 239 1 211 1 89 3 57 3 161 3 
134 1 101 1 222 1 64 1 31 2 32 1 103 1 5 1 196 1 170 1 34 1 68 1 110 1 141 1 73 1 203 1 43 1 231 1 235 1 206 1 151 1 152 1 211 1 89 1 57 1 161 1 
235 1 206 1 151 1 101 1 31 2 152 1 32 1 34 1 68 1 110 1 211 1 141 1 73 1 231 1 
235 1 206 1 134 1 101 1 151 1 152 1 31 2 64 1 222 1 32 1 103 1 5 1 196 1 34 1 170 1 68 1 110 1 141 1 211 1 89 1 203 1 57 1 231 1 43 1 161 1 
69 1 39 1 31 1 193 1 
61 1 31 1 81 1 65 1 178 1 
39 1 31 1 160 1 
61 1 159 2 31 1 178 1 
39 1 214 1 
27 1 11 1 145 1 104 1 195 1 226 1 209 1 
44 1 45 1 192 1 46 1 
44 1 28 1 77 1 78 1 46 1 155 1 67 1 
27 1 11 1 145 1 104 1 226 1 209 1 
0 1 134 1 196 1 
134 1 196 1 
111 1 24 1 167 1 146 1 93 1 196 1 
134 1 196 1 
24 1 167 1 146 1 93 1 
38 1 
198 1 
198 1 
101 1 
68 1 
101 1 
189 1 219 1 235 1 29 1 151 1 207 1 31 2 154 1 223 1 194 1 211 1 141 1 159 1 88 1 143 1 
219 1 234 1 235 1 29 1 151 1 207 1 136 2 31 2 154 1 167 1 223 1 194 1 211 1 141 1 24 2 159 1 88 1 143 1 202 1 93 1 
4 1 
167 1 224 2 93 2 183 1 
63 1 167 1 224 2 93 2 
190 2 131 1 219 1 191 1 63 1 29 1 136 1 221 1 31 3 102 1 4 1 223 1 224 2 194 1 71 1 141 1 72 1 143 1 120 1 13 1 44 1 234 1 235 2 207 1 151 1 154 1 84 1 20 1 183 1 21 1 211 1 24 1 88 1 159 1 93 2 94 1 129 2 
211 1 204 1 118 1 151 1 194 1 
189 1 1 1 63 1 191 1 192 1 136 1 4 1 195 1 194 1 141 1 200 1 143 1 11 3 202 1 145 3 77 1 151 1 207 1 78 1 154 1 155 1 84 1 209 3 211 1 24 1 159 1 88 1 93 3 94 1 27 1 219 1 28 1 29 1 31 2 221 1 102 1 224 2 223 1 104 4 226 3 116 1 177 1 44 1 45 1 234 1 235 3 46 1 238 1 183 1 242 1 129 2 
219 1 204 1 235 1 29 1 151 1 207 1 31 2 154 1 223 1 194 1 211 1 141 1 118 1 159 1 88 1 143 1 
219 1 234 1 235 1 29 1 151 1 207 1 136 1 31 2 154 1 167 1 223 1 194 1 211 1 141 1 24 1 159 1 88 1 143 1 202 2 93 3 
219 1 235 1 29 1 151 1 207 1 31 2 154 1 223 1 194 1 211 1 141 1 159 1 88 1 143 1 90 1 
204 1 219 2 235 2 29 2 151 2 207 2 31 4 154 2 223 2 194 2 211 2 141 2 118 1 159 2 88 2 143 2 90 1 
219 1 235 1 29 1 151 1 207 1 31 2 154 1 223 1 194 1 211 1 141 1 159 1 88 1 73 1 143 1 
189 1 219 2 235 2 29 2 151 2 207 2 31 4 154 2 223 2 194 2 211 2 141 2 159 2 88 2 143 2 90 1 
14 1 150 1 76 1 99 1 235 1 151 1 207 1 31 2 167 1 169 1 108 1 138 1 211 1 141 1 24 2 159 1 142 2 143 1 202 1 93 2 
1 1 192 1 195 1 138 1 141 1 200 1 201 1 142 1 143 1 144 1 11 2 202 1 145 2 150 1 76 1 14 1 77 1 151 1 207 1 78 1 155 1 84 1 209 2 211 1 24 1 159 1 216 1 93 1 94 1 27 1 28 1 165 1 31 2 221 1 169 1 104 3 226 2 108 1 116 1 177 1 44 1 45 1 235 3 46 1 238 1 242 1 129 1 
108 1 70 1 9 1 24 1 142 1 225 1 
144 1 167 1 
201 1 167 1 
150 1 76 1 235 1 151 1 207 1 31 2 169 1 49 1 225 1 108 2 197 1 138 1 211 1 141 1 9 1 24 1 159 1 142 1 143 1 202 1 216 1 93 2 
108 1 76 1 150 1 138 1 118 1 169 1 
99 1 165 1 31 2 167 1 108 1 7 1 138 1 141 1 142 2 143 1 202 1 148 1 76 1 14 1 235 1 207 1 151 1 211 1 24 2 159 1 93 2 
31 2 169 1 225 1 108 2 138 1 197 1 70 1 141 1 9 1 113 1 142 1 143 1 202 1 76 1 150 1 235 1 207 1 151 1 49 1 211 1 24 1 159 1 216 1 93 2 244 1 
216 1 
190 4 131 1 133 1 31 3 221 1 169 1 225 1 108 2 71 1 197 1 138 1 141 1 9 1 72 1 116 2 142 2 201 1 143 1 202 2 144 1 120 1 14 1 76 1 150 1 44 1 235 2 207 1 151 1 49 1 84 1 20 1 21 1 211 1 24 2 159 1 216 1 93 3 94 1 129 2 
108 1 76 1 150 1 138 1 118 1 169 1 
1 1 192 1 133 1 195 1 138 1 197 1 141 1 9 1 200 1 201 1 142 2 143 1 144 1 11 4 202 2 145 4 150 1 76 1 14 1 77 1 151 1 207 1 78 1 155 1 84 1 209 4 211 1 24 2 159 1 216 1 93 3 94 1 27 1 28 1 165 1 31 2 221 1 169 1 104 5 225 1 226 4 108 2 116 2 177 1 44 1 45 1 235 3 46 1 49 1 238 1 242 1 129 2 

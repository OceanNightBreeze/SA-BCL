#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module; | RETURN | 5532 | return null
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7029 | if (x) -> if (!x)
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | CONDITION | 1261 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
218 1 72 1 77 1 210 1 124 1 
156 1 244 1 237 2 
218 1 72 1 173 1 77 1 210 1 124 1 
150 1 217 1 115 3 229 1 56 2 72 1 134 1 62 1 76 1 89 1 98 1 205 1 159 1 50 1 209 1 213 1 15 2 
229 1 115 2 217 1 98 1 65 1 209 1 50 1 89 1 213 1 15 1 
150 1 217 1 115 3 229 1 163 1 56 4 72 1 138 1 89 1 98 1 205 1 159 1 50 1 209 1 92 1 33 1 213 1 15 1 
229 1 115 2 217 1 98 1 71 1 20 1 209 1 50 1 89 1 213 1 15 1 
98 1 21 1 89 1 213 1 
16 1 217 1 115 2 229 1 94 1 89 1 98 1 50 1 209 2 213 1 15 1 
150 1 217 1 115 3 229 1 130 1 151 1 35 1 154 1 56 1 18 1 72 2 89 1 98 1 205 2 159 1 50 1 209 1 210 1 78 1 15 1 
150 1 217 1 115 3 229 1 130 1 151 1 35 1 154 1 56 1 18 1 72 2 89 1 98 1 205 2 159 1 50 1 209 1 210 1 15 1 
217 1 115 2 229 1 151 1 72 1 89 1 98 1 205 1 50 1 209 1 210 1 149 1 213 1 15 1 34 1 214 1 78 1 
217 1 115 2 229 1 151 1 83 1 72 1 89 1 98 1 205 1 50 1 209 1 210 1 213 1 15 1 34 1 214 1 78 1 
217 1 115 2 229 1 151 1 107 1 19 1 72 1 89 1 90 1 98 1 205 1 50 1 209 1 210 1 213 1 15 1 34 1 214 1 
217 1 115 2 229 1 151 1 107 1 19 1 72 1 89 1 90 1 98 1 205 1 50 1 209 1 210 1 213 1 78 1 15 1 34 1 214 1 
217 2 115 3 229 1 219 1 89 1 98 1 50 1 209 1 213 1 15 2 
217 2 115 3 229 1 46 1 89 1 98 1 209 1 144 2 213 1 179 1 
229 1 115 2 217 1 98 1 37 1 209 2 144 1 46 1 89 1 213 1 
229 1 115 2 217 1 98 1 209 1 144 1 46 1 168 1 89 1 213 1 
229 2 115 2 217 3 98 1 219 1 209 2 144 1 46 1 89 1 213 1 
217 2 115 4 229 2 56 1 72 1 44 1 46 1 89 1 76 1 98 1 205 1 159 1 67 1 209 1 144 2 213 1 
217 1 115 3 229 1 130 1 35 1 154 1 56 1 18 1 72 1 46 1 89 1 98 1 205 1 159 1 67 1 209 1 144 1 213 1 
55 1 185 1 9 3 
9 1 
115 3 0 2 6 2 119 1 7 4 8 3 123 2 125 1 126 1 129 2 134 1 136 1 137 2 139 2 23 3 24 2 25 1 29 4 144 1 147 4 148 1 152 1 151 1 155 2 157 1 39 4 40 1 41 4 43 2 46 1 45 1 47 1 158 1 159 1 53 2 56 2 57 14 59 1 60 1 168 2 171 4 64 1 67 1 175 2 176 1 177 1 178 2 179 1 70 1 72 2 75 1 76 1 187 1 188 2 77 2 192 2 193 3 194 2 79 1 195 2 85 1 199 1 87 4 88 2 203 2 91 1 209 3 208 2 210 1 215 2 217 2 93 2 219 1 220 1 222 4 224 2 98 1 100 1 103 2 228 1 105 6 231 1 232 2 233 2 234 2 108 1 241 2 111 2 113 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 2 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 3 57 4 232 2 59 1 233 2 60 1 234 2 168 2 236 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 4 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 96 1 155 2 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 236 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 91 1 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 40 1 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 4 0 2 70 1 72 2 6 3 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 16 1 195 3 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 3 29 4 25 1 209 5 144 2 210 1 147 4 148 1 215 2 217 4 151 1 152 1 93 2 219 1 155 2 39 4 220 1 157 1 43 2 41 4 44 1 222 4 224 2 46 1 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 236 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 236 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 59 1 233 2 60 1 234 2 168 2 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
198 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 16 1 195 2 134 2 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 91 1 24 2 29 4 25 1 209 4 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 40 1 39 4 220 1 157 1 43 2 41 4 222 4 224 2 46 1 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 3 57 4 232 2 59 1 233 2 60 1 234 2 168 2 236 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 119 1 6 2 7 4 122 1 123 2 125 1 126 1 10 1 128 2 129 2 15 1 134 1 133 2 136 1 137 2 139 2 23 3 24 2 25 1 29 4 27 2 147 4 32 1 148 1 150 1 152 1 151 1 155 2 157 1 39 4 41 4 43 2 47 1 158 1 159 1 50 1 53 2 56 2 57 4 164 2 59 1 60 1 168 2 170 1 171 4 64 1 175 2 176 1 178 2 69 1 70 1 72 2 180 1 75 1 76 1 188 2 191 1 77 2 192 2 193 3 194 2 79 1 195 2 82 1 197 1 85 1 87 4 88 2 203 2 209 3 210 1 215 2 217 2 93 2 219 1 96 1 220 1 222 4 224 2 98 1 100 1 103 2 228 1 105 6 232 2 233 2 234 2 236 1 240 1 108 1 241 2 111 2 113 1 112 2 
100 1 119 1 222 1 60 1 87 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 91 1 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 40 1 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 100 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 233 2 60 1 234 2 168 2 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
115 3 0 2 70 1 72 2 6 2 119 1 7 4 123 2 75 1 125 1 76 1 126 1 188 2 192 2 77 2 129 2 193 3 194 2 79 1 195 2 134 1 85 1 136 1 87 4 137 2 88 2 139 2 203 2 23 3 91 1 24 2 29 4 25 1 209 3 144 1 210 1 147 4 148 1 215 2 217 2 151 1 152 1 93 2 219 1 155 2 40 1 39 4 220 1 157 1 43 2 41 4 222 4 46 1 224 2 47 1 98 1 158 1 159 1 103 2 228 1 53 2 105 6 56 2 57 4 232 2 233 2 60 1 234 2 168 2 239 1 171 4 64 1 108 1 241 2 67 1 175 2 176 1 178 2 111 2 113 1 179 1 
57 1 121 1 187 1 
57 1 235 1 
23 1 105 1 72 1 57 1 167 1 210 1 
105 1 57 1 72 1 223 1 210 1 214 1 34 1 
105 1 72 1 57 1 223 1 90 1 23 1 141 1 189 1 52 1 210 1 34 1 214 1 
57 1 235 1 
22 1 57 1 
57 1 58 1 
57 1 235 1 
57 1 58 1 
57 1 58 1 
131 1 57 1 212 1 114 1 
66 1 57 1 118 1 
217 1 115 2 17 1 57 2 221 2 7 2 235 1 200 1 46 1 184 1 126 1 98 1 99 1 26 1 209 1 144 1 68 1 
81 1 
217 1 115 2 17 1 21 1 200 1 46 1 184 1 126 1 98 1 26 1 209 1 144 1 68 1 
217 1 115 3 195 2 2 1 6 2 126 1 98 1 24 2 50 1 209 1 113 1 15 2 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 86 2 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
217 1 115 2 195 1 36 1 2 1 6 1 126 1 98 1 24 1 50 1 209 1 113 1 15 1 
115 2 217 1 93 1 0 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 86 2 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 106 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 3 70 1 0 1 2 1 4 1 72 1 6 2 7 2 123 1 187 3 126 1 188 1 189 2 192 1 129 1 12 1 15 2 16 1 195 2 83 1 137 1 88 1 90 3 139 1 203 1 23 2 141 2 24 2 28 1 209 4 147 2 210 1 214 1 34 1 217 2 151 1 93 1 155 1 39 2 43 1 41 2 44 1 224 1 47 1 98 1 48 1 50 1 102 1 52 2 103 1 228 1 53 1 105 2 107 2 57 3 232 1 233 1 234 1 168 1 241 1 175 1 178 1 113 1 
115 2 217 1 93 1 0 1 2 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 241 1 209 1 175 1 178 1 147 2 113 1 
217 1 115 3 195 2 2 1 6 2 126 1 98 1 24 2 50 1 209 1 113 1 15 2 
115 3 69 1 0 2 72 2 6 1 122 1 180 1 7 4 123 2 126 1 188 2 10 1 191 1 128 2 77 2 192 2 193 3 129 2 194 2 15 1 16 1 82 1 195 1 197 1 133 2 134 1 137 2 88 2 203 2 139 2 23 3 24 1 27 2 25 1 29 4 209 2 32 1 210 1 147 4 215 2 150 1 217 1 151 1 93 2 155 2 39 4 41 4 43 2 224 2 47 1 98 1 159 1 50 1 103 2 228 1 53 2 105 6 56 1 164 2 57 4 232 2 233 2 234 2 168 2 170 1 240 1 171 4 64 1 241 2 175 2 178 2 111 2 112 2 113 1 
115 2 217 1 93 1 0 1 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 86 2 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 126 1 98 1 195 1 24 1 6 1 209 1 50 1 113 1 15 1 
115 3 0 1 72 1 6 1 7 2 123 1 126 1 188 1 128 1 77 1 192 1 193 3 129 1 194 1 15 1 195 1 133 1 134 1 137 1 88 1 203 1 139 1 24 1 27 1 25 1 29 2 209 1 147 2 215 1 150 1 217 1 93 1 155 1 39 2 41 2 43 1 224 1 98 1 159 1 50 1 103 1 53 1 105 3 56 1 164 1 57 2 232 1 233 1 234 1 168 1 170 1 171 2 64 1 241 1 175 1 178 1 111 1 112 1 113 1 
217 1 115 2 195 1 2 1 164 1 6 1 126 1 98 1 24 1 50 1 209 1 113 1 15 1 
115 1 116 1 0 2 72 1 7 2 123 1 188 1 128 1 77 1 192 1 193 3 129 1 194 1 132 1 133 1 134 1 137 1 88 1 203 1 139 1 27 1 25 1 29 2 28 1 30 1 207 1 147 2 215 1 93 1 155 1 39 2 41 2 43 1 224 1 159 1 103 1 53 1 105 3 56 1 164 1 57 2 232 1 233 1 234 1 168 1 170 1 171 2 64 1 67 1 241 1 175 1 178 1 111 1 112 1 179 1 
115 3 0 1 72 1 6 1 7 2 123 1 126 1 188 1 128 1 77 1 192 1 193 3 129 1 194 1 15 1 195 1 133 1 134 1 137 1 88 1 203 1 139 1 24 1 27 1 25 1 29 2 209 1 147 2 215 1 150 1 217 1 93 1 155 1 39 2 41 2 43 1 224 1 98 1 159 1 50 1 103 1 53 1 105 3 106 1 56 1 164 1 57 2 232 1 233 1 234 1 168 1 170 1 171 2 64 1 241 1 175 1 178 1 111 1 112 1 113 1 
115 3 0 1 72 1 6 1 7 2 123 1 126 1 188 1 128 1 77 1 192 1 193 3 129 1 194 1 195 1 133 1 134 1 137 1 88 1 203 1 139 1 24 1 27 1 29 2 25 1 209 1 144 1 147 2 215 1 217 1 93 1 155 1 39 2 41 2 43 1 46 1 224 1 98 1 159 1 103 1 53 1 105 3 106 1 56 1 164 1 57 2 232 1 233 1 234 1 168 1 170 1 171 2 64 1 67 1 241 1 175 1 178 1 111 1 112 1 113 1 179 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 6 1 39 2 43 1 7 2 41 2 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 132 1 232 1 234 1 137 1 88 1 203 1 139 1 24 1 28 1 30 1 241 1 207 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 2 1 155 1 39 2 6 1 43 1 41 2 7 2 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 207 1 241 1 175 1 209 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
54 1 171 1 57 1 29 1 215 1 
54 1 171 1 57 1 29 1 111 1 
162 1 171 1 57 1 29 1 110 1 215 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 116 1 70 1 0 2 2 1 72 1 6 1 7 2 123 1 126 1 188 1 189 3 192 1 77 1 129 1 194 1 15 1 195 1 132 1 137 1 88 1 90 4 203 1 139 1 23 3 141 3 24 1 28 1 29 2 30 1 207 1 209 2 147 2 210 1 215 1 214 1 34 1 217 1 151 1 93 1 155 1 39 2 43 1 41 2 223 1 224 1 47 1 98 1 50 1 52 3 103 1 228 1 53 1 105 3 107 1 57 2 232 1 233 1 234 1 168 1 171 2 241 1 175 1 178 1 111 1 113 1 
115 2 217 1 93 1 0 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 106 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 194 1 15 1 53 1 195 1 132 1 232 1 86 2 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 132 1 232 1 86 2 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 116 1 93 1 0 2 2 1 155 1 39 3 6 1 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 132 1 232 1 235 1 234 1 137 1 88 1 139 1 203 1 24 1 28 1 30 1 207 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 93 1 0 1 155 1 6 1 39 3 43 1 41 2 7 3 123 1 126 1 98 1 188 1 50 1 192 1 129 1 15 1 53 1 195 1 232 1 235 1 234 1 137 1 88 1 203 1 139 1 24 1 241 1 209 1 175 1 178 1 147 2 113 1 
115 2 217 1 151 1 35 1 70 1 154 1 1 1 72 1 74 1 224 1 47 1 187 3 126 1 98 1 189 2 50 1 52 2 103 1 15 1 130 1 228 1 105 2 56 1 18 1 107 1 84 1 57 4 233 1 200 1 168 1 61 1 90 3 23 2 141 2 143 1 209 2 210 1 149 1 34 1 214 1 216 1 
115 2 217 1 1 1 71 1 72 1 74 1 224 1 47 1 187 3 126 1 98 1 189 2 128 1 50 1 52 2 103 1 15 1 228 1 105 2 230 1 107 1 84 1 57 4 133 1 165 1 20 1 233 1 166 1 200 1 168 1 61 1 90 3 23 2 141 2 27 1 143 1 109 1 209 1 32 1 210 1 112 1 214 1 34 1 216 1 
217 1 115 2 0 1 117 1 6 1 43 1 41 1 123 1 126 1 98 1 50 1 11 1 104 1 15 1 195 1 54 1 57 1 232 1 235 1 137 1 88 1 203 1 204 1 238 1 171 1 24 1 29 1 241 1 209 1 147 1 178 1 113 1 
217 1 115 2 93 1 0 3 155 1 117 2 39 2 6 1 7 2 43 3 41 4 123 3 126 1 98 1 188 1 50 1 192 1 129 1 194 1 104 1 15 1 53 1 195 1 106 1 232 3 234 1 137 3 237 1 88 3 139 1 203 3 238 1 24 1 241 3 175 1 209 1 147 4 178 3 113 1 
217 1 115 2 0 3 117 3 6 1 43 3 41 3 123 3 126 1 98 1 50 1 104 1 15 1 195 1 232 3 137 3 201 1 88 3 203 3 238 1 24 1 241 3 209 1 147 3 178 3 113 1 
217 1 115 2 0 1 117 1 6 1 43 1 41 1 123 1 126 1 98 1 50 1 104 1 15 1 195 1 232 1 137 1 88 1 203 1 238 1 65 1 24 1 241 1 209 1 147 1 178 1 113 1 
217 1 115 2 195 1 117 1 6 1 126 1 98 1 65 1 24 1 209 1 50 1 113 1 104 1 15 1 
217 1 115 2 0 1 117 1 6 1 43 1 41 1 123 1 126 1 98 1 50 1 104 1 15 1 195 1 232 1 137 1 88 1 203 1 238 1 24 1 241 1 209 1 147 1 178 1 113 1 
115 1 3 1 174 1 242 1 
115 1 172 1 49 1 120 1 62 1 
115 1 190 1 174 1 
115 1 49 1 51 2 62 1 
174 1 227 1 
23 1 141 1 107 1 189 1 52 1 90 1 
23 1 141 1 107 1 189 1 223 1 52 1 90 1 
228 1 72 1 210 1 47 1 
72 1 133 1 27 1 101 1 210 1 32 1 112 1 
53 1 5 1 39 1 7 1 41 2 137 1 237 1 
41 1 137 1 
53 1 57 1 39 1 7 1 41 1 235 1 
41 1 137 1 
57 1 39 1 7 1 235 1 
46 1 
144 1 
144 1 
15 1 
50 1 
15 1 
217 1 115 2 153 1 73 1 42 1 181 1 200 1 63 1 169 1 126 1 98 1 65 1 209 1 51 1 14 1 
217 2 115 4 153 2 73 2 38 1 42 2 181 2 200 2 225 1 63 2 169 2 126 2 98 2 209 2 51 2 14 2 
217 1 115 2 153 1 95 2 57 1 73 1 118 1 7 2 42 1 181 1 235 1 200 1 63 1 169 1 126 1 98 1 209 1 243 1 51 1 14 1 
206 1 
57 2 235 1 13 1 187 2 
57 2 182 1 235 1 187 2 
115 3 217 1 150 1 153 1 95 1 73 1 72 1 38 1 7 1 42 1 182 1 181 1 224 1 187 2 126 1 98 1 128 1 159 1 51 1 103 1 193 2 14 1 13 1 16 1 105 2 56 1 57 2 133 1 134 1 233 1 200 1 168 1 63 1 169 1 170 1 64 1 27 1 25 1 206 1 209 2 243 1 145 1 112 1 
126 1 98 1 97 1 21 1 169 1 
115 2 70 1 72 1 73 1 118 1 7 1 181 1 182 1 187 2 126 1 189 3 13 1 14 1 16 1 131 1 200 1 90 4 23 3 141 3 206 1 209 3 210 1 214 1 34 1 217 1 151 1 153 1 95 1 42 1 224 1 223 1 47 1 98 1 51 1 52 3 103 1 228 1 105 2 107 1 57 3 233 1 168 1 63 1 169 1 243 1 
217 1 115 2 153 1 73 1 38 1 42 1 181 1 200 1 63 1 169 1 126 1 98 1 209 1 51 1 14 1 
217 1 115 2 153 1 73 1 97 1 42 1 21 1 181 1 200 1 63 1 169 1 126 1 98 1 209 1 51 1 14 1 
217 1 115 2 153 1 95 1 57 3 73 1 118 2 7 1 42 1 181 1 235 1 200 1 63 1 169 1 126 1 98 1 209 1 243 1 51 1 14 1 
217 1 115 2 153 1 73 1 42 1 181 1 200 1 225 1 63 1 169 1 126 1 98 1 209 1 51 1 14 1 
217 2 115 4 153 2 73 2 97 1 42 2 21 1 181 2 200 2 225 1 63 2 169 2 126 2 98 2 209 2 51 2 14 2 
217 1 115 2 153 1 57 2 118 1 135 1 7 2 235 1 200 1 183 1 202 1 126 1 140 1 98 1 127 1 160 2 209 1 51 1 211 1 212 1 
115 2 217 1 151 1 153 1 70 1 72 1 118 1 7 1 223 1 183 1 47 1 126 1 98 1 127 1 189 2 160 1 51 1 52 2 228 1 131 1 16 1 80 1 105 1 107 1 57 1 196 1 135 1 233 1 200 1 168 1 202 1 90 3 23 2 140 1 141 2 142 1 209 3 210 1 211 1 34 1 214 1 
140 1 135 1 21 1 183 1 211 1 202 1 
115 2 217 1 153 1 118 1 7 2 183 1 126 1 98 1 127 1 226 1 160 2 51 1 161 1 57 2 200 1 235 1 140 1 209 1 146 1 211 1 212 1 
217 1 115 2 153 1 57 2 118 1 135 1 7 1 200 1 183 2 202 1 186 1 126 1 140 1 98 1 171 1 142 1 29 1 160 1 209 1 51 1 31 1 211 1 
142 1 
115 3 217 1 150 1 153 1 72 1 118 2 7 2 183 2 186 1 126 1 98 1 127 1 128 1 159 1 160 2 51 1 193 2 131 1 80 1 105 1 56 1 57 3 133 1 134 1 196 1 135 1 233 1 200 1 168 1 202 1 170 1 140 1 171 1 142 1 64 1 27 1 29 1 25 1 209 1 146 1 31 1 211 1 112 1 
140 1 135 1 21 1 183 1 211 1 202 1 
115 2 70 1 72 1 118 2 7 2 183 2 186 1 126 1 127 1 189 2 80 1 16 1 131 1 196 1 135 1 200 1 202 1 90 3 140 1 23 2 141 2 142 1 29 1 209 3 31 1 210 1 211 1 214 1 34 1 217 1 151 1 153 1 223 1 47 1 98 1 160 2 51 1 52 2 228 1 105 1 107 1 57 3 233 1 168 1 171 1 
7 1 160 1 31 1 183 1 237 1 186 1 
196 1 235 1 
80 1 235 1 
217 1 115 2 153 1 57 2 118 1 135 1 7 1 200 1 183 2 202 1 186 1 126 1 140 1 98 1 171 1 142 1 29 1 160 1 209 1 51 1 31 1 211 1 

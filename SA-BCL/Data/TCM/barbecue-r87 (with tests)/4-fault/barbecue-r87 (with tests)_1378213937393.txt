#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 114 116 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 116 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 116 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 116 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 116 205 106 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 116 205 198 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 116 205 106 130 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V ERROR java.lang.NullPointerException 157 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 28268 | stmt -> ;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 7191 | = null
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V | OPERATOR | 5532 | == -> !=
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | CONDITION | 5209 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getHeight()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 1 96 1 42 1 92 1 190 1 178 1 
94 1 42 1 92 1 190 1 178 1 
80 1 199 2 86 1 
40 1 72 1 124 1 232 1 211 2 42 1 27 1 156 1 76 1 217 1 141 1 93 1 223 1 228 1 115 1 84 1 167 3 36 1 67 1 
40 1 124 1 232 1 211 1 42 1 27 1 76 2 217 1 141 1 107 1 223 1 228 1 115 1 84 1 167 3 238 1 
40 1 155 1 115 1 217 1 
40 1 232 1 136 1 211 1 217 1 79 1 141 2 228 1 115 1 84 1 167 2 
154 1 124 2 232 1 211 1 42 2 27 1 156 1 76 1 178 1 217 1 141 1 93 1 223 1 181 1 228 1 115 1 84 1 167 3 36 1 67 1 
124 2 232 1 211 1 42 2 27 1 156 1 76 1 178 1 217 1 141 1 93 1 223 1 181 1 228 1 115 1 84 1 167 3 36 1 67 1 
69 1 40 1 154 1 124 1 232 1 211 1 42 1 178 1 217 1 141 1 181 1 228 1 115 1 84 1 167 2 117 1 195 1 
69 1 40 1 154 1 124 1 232 1 211 1 42 1 178 1 217 1 6 1 141 1 181 1 228 1 115 1 84 1 167 2 117 1 
69 1 40 1 124 1 232 1 211 1 42 1 178 1 177 1 217 1 141 1 181 1 228 1 115 1 84 1 229 1 35 1 167 2 117 1 
69 1 154 1 40 1 124 1 232 1 211 1 42 1 178 1 177 1 217 1 141 1 181 1 228 1 115 1 84 1 229 1 35 1 167 2 117 1 
40 1 232 2 211 2 217 1 141 1 228 1 115 1 84 1 167 3 65 1 
40 1 232 2 8 1 170 2 84 1 115 1 167 3 217 1 141 1 78 1 
40 1 232 1 8 1 170 1 84 1 115 1 85 1 167 2 217 1 141 2 
40 1 232 1 13 1 8 1 170 1 84 1 115 1 167 2 217 1 141 1 
40 1 232 3 8 1 170 1 84 2 115 1 65 1 167 2 217 1 141 2 
40 1 124 1 232 2 42 1 170 2 27 1 76 1 217 1 141 1 180 1 8 1 115 1 84 2 167 4 37 1 238 1 
40 1 89 1 232 1 8 1 170 1 84 1 115 1 167 2 217 1 141 1 
40 1 124 1 232 1 12 1 42 1 170 1 27 1 75 1 76 4 217 1 141 1 180 1 8 1 207 1 115 1 84 1 167 3 51 1 
40 1 226 1 232 1 8 1 170 1 164 1 84 1 115 1 167 2 217 1 141 1 
188 1 49 3 151 1 
49 1 
118 1 26 1 122 1 91 1 4 1 129 4 56 1 61 1 8 1 32 1 34 1 167 2 166 1 168 1 197 1 232 1 170 1 105 1 106 1 141 2 78 1 142 2 205 1 82 1 206 1 184 4 183 1 115 1 236 1 116 1 
118 1 23 1 26 1 122 1 91 1 127 1 129 4 30 1 159 1 61 1 8 1 134 1 167 2 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 2 78 1 142 2 205 1 19 1 206 1 184 4 115 1 116 1 
118 1 23 1 26 1 122 1 91 1 127 1 129 4 30 1 159 1 61 1 8 1 167 2 197 1 232 1 170 1 15 1 173 1 105 1 106 1 141 2 78 1 205 1 19 1 206 1 184 4 115 1 116 1 
26 1 122 1 91 1 127 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 135 3 197 1 232 1 15 1 170 1 173 1 174 2 105 1 106 1 200 1 141 1 78 1 233 1 17 1 142 8 81 1 234 1 205 1 145 1 147 1 206 1 48 1 184 4 114 1 115 1 116 1 210 1 152 1 52 1 
23 1 26 1 122 1 91 1 127 1 214 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 210 1 52 1 
23 1 26 1 122 1 91 1 127 1 214 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 210 1 52 1 
122 1 26 1 91 1 106 1 105 1 129 4 78 1 205 1 61 1 206 1 184 4 116 1 
54 1 
23 1 26 1 122 1 91 1 127 1 214 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 210 1 52 1 
118 1 23 1 26 1 122 1 211 1 91 1 127 1 129 4 159 1 30 1 61 1 228 1 167 2 197 1 232 1 15 1 173 1 105 1 106 1 141 2 205 1 19 1 206 1 184 4 115 1 116 1 
205 1 122 1 184 1 106 1 129 1 
23 1 26 1 122 1 127 1 214 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 52 1 210 1 
23 1 26 1 122 1 127 1 214 1 129 4 194 1 29 1 30 1 158 1 61 1 8 1 133 1 33 1 64 1 167 2 197 1 232 1 198 1 15 1 170 1 173 1 105 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 52 1 210 1 
23 1 26 1 122 1 91 1 127 1 129 4 130 1 194 1 29 1 30 1 158 1 61 1 8 1 133 1 64 1 33 1 167 2 71 1 197 1 232 1 15 1 170 1 173 1 105 1 106 1 141 1 78 1 233 1 81 1 234 1 205 1 145 1 19 1 147 1 206 1 48 1 184 4 115 1 116 1 210 1 52 1 
142 1 165 1 134 1 
142 1 88 1 
142 1 131 1 
69 1 101 1 42 1 2 1 126 1 16 1 178 1 177 1 142 1 108 1 162 1 117 1 
142 1 2 1 42 1 16 1 178 1 77 1 
142 1 108 1 69 1 42 1 16 1 178 1 117 1 
142 1 131 1 
142 1 70 1 
142 1 131 1 
142 1 88 1 
142 1 88 1 
142 1 109 1 139 1 43 1 
22 1 142 1 144 1 
197 1 232 1 186 1 170 1 5 2 131 1 192 2 141 1 142 2 7 1 60 1 8 1 115 1 185 1 167 2 168 1 50 1 
103 1 
197 1 232 1 155 1 186 1 170 1 141 1 7 1 60 1 8 1 115 1 167 2 168 1 50 1 
197 1 232 1 211 2 102 1 127 1 15 2 173 2 141 1 30 2 228 1 115 1 167 3 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
30 1 197 1 232 1 211 1 15 1 127 1 228 1 173 1 115 1 167 2 141 1 
197 1 232 1 211 2 102 1 127 1 15 2 173 2 141 1 30 2 228 1 115 1 167 3 
120 2 123 1 121 2 125 2 187 1 2 3 3 1 127 1 189 4 190 2 58 1 57 2 192 4 59 2 62 1 133 2 64 2 9 3 68 2 197 1 137 2 13 2 15 1 16 6 76 1 141 2 79 1 142 4 203 4 81 2 143 1 145 2 20 1 147 4 149 2 209 2 150 2 21 2 210 2 211 1 212 2 27 1 215 2 216 1 218 2 29 2 158 2 223 1 30 1 224 1 163 2 228 1 99 2 167 3 38 1 230 1 39 1 41 2 232 1 42 2 172 1 173 1 175 2 178 1 179 4 107 1 233 4 181 1 110 2 112 1 182 2 48 2 115 1 52 2 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 1 64 1 167 2 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 14 2 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 14 2 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
197 1 232 1 211 1 102 1 127 1 15 1 173 1 45 1 141 1 30 1 228 1 115 1 167 2 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 14 2 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
120 1 125 1 211 1 213 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 70 1 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 2 64 1 167 2 70 1 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
118 1 120 1 121 1 125 1 2 2 126 2 127 1 55 1 6 1 192 2 57 1 133 1 134 3 64 1 69 1 197 1 137 1 138 1 13 1 15 2 16 2 79 1 141 4 142 3 81 1 145 1 83 1 147 2 149 1 209 1 210 1 25 1 211 2 212 1 215 1 218 1 29 1 158 1 30 2 224 1 162 2 228 1 167 3 35 2 37 1 38 1 101 2 41 1 232 2 42 1 102 1 173 2 178 1 176 1 177 3 179 2 233 2 108 1 110 1 181 1 48 1 115 1 117 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 228 1 133 1 64 1 167 2 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 121 1 125 1 187 1 127 1 189 2 190 1 57 1 192 2 59 1 133 1 64 1 9 3 68 1 197 1 137 1 13 1 15 1 16 3 76 1 141 1 142 2 203 2 81 1 145 1 147 2 149 1 209 1 150 1 21 1 210 1 211 1 212 1 27 1 215 1 218 1 29 1 158 1 223 1 30 1 163 1 228 1 99 1 167 3 39 1 41 1 232 1 42 1 172 1 173 1 175 1 179 2 107 1 233 2 110 1 182 1 48 1 115 1 52 1 
197 1 232 1 211 1 102 1 127 1 15 1 173 1 141 1 30 1 182 1 228 1 115 1 167 2 
120 1 121 1 125 1 187 1 190 1 189 2 57 1 192 2 59 1 133 2 64 1 9 3 68 1 137 1 138 1 13 1 16 3 76 1 78 1 142 2 203 2 81 1 145 1 147 2 209 1 149 1 150 1 21 1 210 1 153 1 212 1 27 1 215 1 218 1 29 1 158 1 161 1 163 1 99 1 167 1 39 1 41 1 42 1 172 1 175 1 179 2 107 1 233 2 180 1 110 1 182 1 47 1 48 1 237 1 52 1 
120 1 121 1 125 1 187 1 127 1 189 2 190 1 57 1 192 2 59 1 133 1 64 1 9 3 68 1 197 1 137 1 13 1 15 1 16 3 76 1 141 1 142 2 203 2 81 1 145 1 147 2 149 1 209 1 150 1 21 1 210 1 211 1 212 1 213 1 27 1 215 1 218 1 29 1 158 1 223 1 30 1 163 1 228 1 99 1 167 3 39 1 41 1 232 1 42 1 172 1 173 1 175 1 179 2 107 1 233 2 110 1 182 1 48 1 115 1 52 1 
120 1 121 1 125 1 187 1 127 1 189 2 190 1 57 1 192 2 59 1 8 1 133 1 64 1 9 3 68 1 197 1 137 1 13 1 15 1 16 3 76 1 141 1 78 1 142 2 203 2 81 1 145 1 147 2 149 1 209 1 150 1 21 1 210 1 212 1 213 1 27 1 215 1 218 1 29 1 158 1 30 1 163 1 99 1 167 3 39 1 41 1 232 1 42 1 172 1 170 1 173 1 175 1 179 2 107 1 233 2 180 1 110 1 182 1 48 1 115 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 57 1 192 2 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 197 1 41 1 137 1 232 1 138 1 15 1 102 1 173 1 179 2 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 52 1 210 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 1 64 1 167 2 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 2 57 1 29 1 158 1 30 1 161 1 228 1 133 1 64 1 167 2 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 2 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 209 1 115 1 237 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 228 1 133 1 64 1 167 2 70 1 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
142 1 203 1 59 1 0 1 189 1 
142 1 203 1 0 1 189 1 21 1 
142 1 203 1 59 1 11 1 189 1 201 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
118 1 120 1 121 1 125 1 2 3 126 3 127 1 189 2 190 1 57 1 192 2 59 1 133 2 64 1 69 1 197 1 137 1 138 1 13 1 15 1 16 3 141 2 142 2 81 1 203 2 145 1 147 2 149 1 209 1 21 1 210 1 153 1 211 1 212 1 215 1 218 1 29 1 158 1 30 1 224 1 161 1 162 3 228 1 167 2 35 1 38 1 101 3 41 1 232 1 42 1 102 1 173 1 175 1 178 1 177 4 179 2 233 2 108 1 110 1 181 1 47 1 48 1 115 1 237 1 117 1 52 1 
120 1 125 1 211 1 213 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 70 1 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 1 64 1 167 2 41 1 197 1 232 1 137 1 138 1 14 2 15 1 102 1 173 1 175 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 153 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 41 1 197 1 232 1 137 1 138 1 14 2 15 1 102 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
153 1 120 1 125 1 211 1 127 1 215 1 131 1 192 3 57 1 29 1 158 1 30 1 161 1 228 1 133 2 64 1 167 2 41 1 197 1 232 1 137 1 138 1 15 1 102 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 47 1 147 2 48 1 149 1 115 1 237 1 209 1 210 1 52 1 
120 1 125 1 211 1 127 1 215 1 131 1 57 1 192 3 29 1 158 1 30 1 228 1 133 1 64 1 167 2 197 1 41 1 232 1 137 1 15 1 173 1 179 3 141 1 233 2 81 1 110 1 145 1 147 2 48 1 149 1 115 1 209 1 52 1 210 1 
118 1 121 1 211 1 126 2 2 2 212 1 156 1 128 1 218 1 191 1 93 1 224 1 31 1 162 2 228 1 134 3 167 2 35 1 195 1 36 1 168 1 67 1 38 1 69 1 101 2 197 1 73 1 232 1 42 1 13 1 171 1 16 2 44 1 76 1 177 3 178 1 141 2 142 4 181 1 115 1 117 1 
121 1 211 1 126 2 2 2 212 1 128 1 218 1 191 1 219 1 58 1 160 1 224 1 226 1 31 1 163 1 162 2 97 1 228 1 164 1 134 3 99 1 167 2 35 1 168 1 68 1 38 1 69 1 101 2 197 1 73 1 232 1 42 1 13 1 171 1 16 2 44 1 177 3 178 1 141 1 142 4 111 1 115 1 150 1 117 1 
197 1 232 1 211 1 15 1 127 1 173 1 141 1 194 1 29 1 233 1 81 1 30 1 158 1 234 1 145 1 228 1 147 1 48 1 115 1 133 1 33 1 64 1 167 2 52 1 210 1 
197 1 232 1 211 1 15 1 127 1 173 1 141 1 194 1 29 1 233 1 81 1 30 1 158 1 234 1 145 1 228 1 147 1 48 1 115 1 133 1 33 1 64 1 167 2 52 1 210 1 
197 1 232 1 211 1 15 1 127 1 173 1 141 1 194 1 29 1 233 1 81 1 30 1 158 1 234 1 145 1 228 1 147 1 48 1 115 1 133 1 33 1 64 1 167 2 52 1 210 1 
194 1 30 1 234 1 197 1 232 1 211 1 15 1 127 1 228 1 173 1 115 1 167 2 141 1 
197 1 232 1 211 1 15 1 127 1 173 1 141 1 194 1 29 1 233 1 81 1 30 1 158 1 234 1 145 1 228 1 147 1 48 1 115 1 133 1 33 1 64 1 167 2 52 1 210 1 
211 1 127 1 194 1 29 1 158 1 30 1 228 1 133 1 64 1 33 1 167 2 197 1 232 1 15 1 173 1 141 1 233 1 81 1 234 1 145 1 147 1 48 1 115 1 210 1 52 1 
119 1 169 1 53 1 167 1 
72 1 95 1 98 1 28 1 167 1 
119 1 24 1 167 1 
72 1 225 2 98 1 167 1 
100 1 119 1 
101 1 162 1 126 1 2 1 177 1 35 1 
38 1 224 1 42 1 178 1 
108 1 101 1 162 1 126 1 2 1 177 1 35 1 
74 1 42 1 178 1 58 1 163 1 150 1 99 1 
120 1 90 1 199 1 179 1 192 1 233 2 210 1 
233 1 210 1 
233 1 120 1 142 1 179 1 131 1 192 1 
233 1 210 1 
142 1 179 1 131 1 192 1 
8 1 
170 1 
170 1 
211 1 
228 1 
211 1 
89 1 197 1 232 1 140 1 141 1 46 1 221 1 18 1 225 1 146 1 115 1 87 1 167 2 168 1 196 1 
197 2 232 2 140 2 141 2 46 2 221 2 18 2 225 2 113 1 146 2 115 2 87 2 167 4 168 2 10 1 196 2 
197 1 232 1 140 1 141 1 46 1 221 1 18 1 225 1 113 1 146 1 115 1 87 1 167 2 168 1 196 1 
197 1 232 1 155 1 140 1 141 1 46 1 221 1 18 1 225 1 146 1 227 1 115 1 87 1 167 2 168 1 196 1 
197 1 232 1 104 2 202 1 140 1 131 1 192 2 141 1 46 1 142 1 221 1 144 1 18 1 225 1 146 1 115 1 87 1 167 2 168 1 196 1 
193 1 
142 2 132 1 134 2 131 1 
142 2 231 1 134 2 131 1 
121 1 187 1 212 1 27 1 218 1 192 1 193 1 221 1 223 1 225 1 163 1 132 1 134 2 99 1 167 3 9 2 168 1 196 1 68 1 39 1 231 1 197 1 232 1 13 1 42 1 172 1 16 2 104 1 76 1 202 1 140 1 141 2 79 1 46 1 107 1 142 2 204 1 18 1 113 1 146 1 115 1 150 1 87 1 
197 1 155 1 227 1 115 1 87 1 
118 1 121 1 126 3 2 3 212 1 218 1 192 1 193 1 221 1 224 1 225 1 162 3 132 1 134 2 35 1 167 2 168 1 196 1 38 1 69 1 101 3 231 1 197 1 232 1 43 1 13 1 42 1 16 2 104 1 177 4 178 1 202 1 140 1 141 3 79 1 46 1 142 3 108 1 144 1 18 1 181 1 146 1 115 1 87 1 117 1 
197 1 232 1 104 1 202 1 140 1 131 1 192 1 141 1 46 1 142 3 221 1 144 2 18 1 225 1 146 1 115 1 87 1 167 2 168 1 196 1 
197 1 232 1 140 1 141 1 46 1 221 1 18 1 225 1 146 1 115 1 87 1 167 2 168 1 10 1 196 1 
197 2 232 2 155 1 140 2 141 2 46 2 221 2 18 2 225 2 227 1 146 2 115 2 87 2 167 4 168 2 10 1 196 2 
82 1 155 1 4 1 183 1 32 1 56 1 
157 1 4 1 32 1 56 1 
197 1 232 1 139 1 4 1 56 1 131 1 192 2 141 1 142 2 144 1 18 1 82 1 225 1 235 2 32 1 183 1 208 1 115 1 167 2 168 1 
118 1 1 1 121 1 126 2 2 2 4 1 56 1 192 1 224 1 225 1 162 2 32 1 66 1 35 1 167 2 168 1 38 1 69 1 101 2 197 1 232 1 43 1 13 1 42 1 16 1 177 3 178 1 141 3 79 1 142 1 108 1 144 1 18 1 181 1 82 1 148 1 235 1 183 1 208 1 115 1 117 1 
222 1 4 1 199 1 235 1 192 1 220 1 
1 1 131 1 
148 1 131 1 
197 1 232 1 4 2 189 1 56 1 192 1 220 1 141 1 142 2 203 1 144 1 222 1 18 1 82 1 225 1 235 1 32 1 183 1 115 1 66 1 167 2 168 1 
22 1 4 2 189 1 56 1 220 1 192 1 222 1 225 1 32 1 167 2 66 1 168 1 197 1 232 1 199 1 141 1 80 1 142 2 203 1 144 1 18 1 82 1 183 1 235 1 115 1 
66 1 
1 1 121 1 187 1 4 2 27 1 189 1 190 1 56 1 220 1 192 2 222 1 223 1 225 1 163 1 32 1 63 1 99 1 66 1 167 3 9 4 168 1 68 1 39 1 197 1 232 1 43 2 42 1 13 1 172 1 16 2 76 1 79 1 141 2 107 1 142 3 203 1 144 2 18 1 82 1 148 1 235 2 183 1 208 1 115 1 150 1 
82 1 155 1 4 1 183 1 32 1 56 1 
118 1 1 1 121 1 126 4 2 4 4 2 189 1 190 1 56 1 220 1 192 2 222 1 224 1 225 1 162 4 32 1 66 1 35 1 167 2 168 1 38 1 69 1 101 4 197 1 232 1 43 2 13 1 42 1 16 2 177 5 178 1 141 3 79 1 142 3 108 1 203 1 144 2 18 1 181 1 82 1 148 1 235 2 183 1 208 1 115 1 117 1 

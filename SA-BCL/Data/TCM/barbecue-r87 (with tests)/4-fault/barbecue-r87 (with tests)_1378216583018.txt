#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V ERROR java.lang.ArithmeticException (126,133,207) 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 170 124 41 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 170 124 52 40 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 170 124 52 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | STATEMENT | 20522 | stmt -> ;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I | OPERATOR | 3441 | += -> /=
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String; | CONDITION | 5832 | if (x) -> if (!x)
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 180 1 24 1 30 1 3 1 63 1 
101 1 180 1 24 1 3 1 63 1 
132 2 136 1 172 1 
158 1 147 1 168 3 173 1 3 1 175 1 77 1 149 1 35 1 189 1 22 1 95 1 50 1 23 1 142 2 214 1 57 1 236 1 117 1 
158 1 147 1 168 3 42 1 173 1 3 1 175 2 149 1 35 1 189 1 22 1 49 1 23 1 50 1 142 1 117 1 
147 1 158 1 60 1 149 1 
158 1 147 1 168 2 149 1 189 1 22 1 23 2 142 1 157 1 12 1 117 1 
194 1 147 1 168 3 173 1 3 2 175 1 77 1 108 1 149 1 35 2 189 1 22 1 180 1 50 1 23 1 142 1 214 1 57 1 236 1 117 1 
194 1 147 1 168 3 173 1 3 2 175 1 77 1 149 1 35 2 189 1 22 1 180 1 50 1 23 1 142 1 214 1 57 1 236 1 117 1 
194 1 158 1 147 1 13 1 168 2 198 1 3 1 149 1 108 1 35 1 189 1 22 1 179 1 180 1 23 1 142 1 117 1 
194 1 158 1 147 1 168 2 198 1 3 1 149 1 108 1 35 1 189 1 22 1 179 1 180 1 23 1 142 1 96 1 117 1 
194 1 158 1 147 1 168 2 14 1 198 1 3 1 149 1 35 1 189 1 22 1 179 1 180 1 23 1 142 1 68 1 58 1 117 1 
194 1 158 1 147 1 168 2 14 1 198 1 3 1 108 1 149 1 35 1 189 1 22 1 179 1 180 1 23 1 142 1 68 1 58 1 117 1 
147 1 158 1 22 1 189 2 168 3 23 1 142 2 176 1 117 1 149 1 
158 1 147 1 168 3 149 1 189 2 22 1 36 1 23 1 82 1 97 2 
147 1 158 1 22 1 189 1 168 2 23 2 36 1 97 1 116 1 149 1 
158 1 147 1 168 2 75 1 149 1 189 1 22 1 36 1 23 1 97 1 
158 1 147 1 168 2 176 1 149 1 189 3 22 2 36 1 23 2 97 1 
158 1 147 1 168 4 42 1 43 1 3 1 175 1 48 1 149 1 35 1 189 2 22 2 36 1 23 1 50 1 97 2 
147 1 158 1 22 1 189 1 168 2 23 1 36 1 67 1 97 1 149 1 
158 1 147 1 168 3 43 1 90 1 224 1 3 1 175 4 21 1 149 1 35 1 189 1 22 1 36 1 23 1 50 1 38 1 97 1 
147 1 158 1 22 1 189 1 168 2 15 1 23 1 36 1 102 1 97 1 149 1 
207 1 126 1 133 3 
133 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 
104 1 
131 1 222 1 170 1 124 1 52 1 99 1 
169 1 170 1 124 1 1 1 129 1 66 1 131 4 9 2 37 1 153 1 151 1 69 1 99 4 107 1 227 1 228 1 78 1 52 1 82 1 234 1 119 1 
131 1 170 1 124 1 52 1 99 1 
41 1 131 1 170 1 124 1 99 1 
131 1 222 1 170 1 124 1 52 1 99 1 40 1 
131 1 222 1 170 1 124 1 52 1 99 1 
9 1 143 1 234 1 
9 1 34 1 
166 1 14 1 171 1 198 1 3 1 174 1 139 1 179 1 180 1 9 1 31 1 134 1 
166 1 179 1 180 1 9 1 198 1 3 1 139 1 
9 1 34 1 
166 1 180 1 9 1 114 1 174 1 3 1 
141 1 9 1 
122 1 9 1 
9 1 34 1 
122 1 9 1 
122 1 9 1 
178 1 167 1 9 1 146 1 
9 1 61 1 10 1 
86 2 168 2 123 2 88 1 201 1 34 1 204 1 149 1 189 1 23 1 9 2 25 1 142 1 209 1 216 1 100 1 117 1 
2 1 
189 1 168 2 23 1 25 1 88 1 209 1 142 1 60 1 216 1 201 1 117 1 149 1 100 1 
70 2 189 1 168 3 23 1 72 2 142 2 191 2 216 1 6 1 186 1 117 1 149 1 
168 2 121 1 125 3 123 3 127 1 6 1 8 1 65 1 9 8 181 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 141 1 189 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 94 1 151 1 152 1 216 1 220 2 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
70 1 189 1 168 2 23 1 72 1 142 1 191 1 216 1 6 1 117 1 149 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 106 2 110 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
70 1 168 2 72 1 186 1 6 1 149 1 189 1 23 1 142 1 191 1 216 1 164 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 106 2 110 1 141 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 141 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 141 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 189 1 23 1 112 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 76 1 110 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
166 2 168 3 123 2 171 2 3 1 174 2 6 1 177 1 8 1 179 1 65 1 180 1 9 3 68 2 69 1 134 2 12 1 70 2 14 3 72 2 16 1 73 1 138 1 139 1 75 1 187 1 186 1 189 2 23 4 142 2 26 2 80 1 191 2 144 1 145 1 83 1 31 2 84 1 193 1 194 1 196 1 198 1 92 1 149 1 203 1 96 1 152 1 213 1 151 1 216 1 159 2 221 1 161 1 45 1 48 1 111 1 232 2 163 1 55 1 54 1 53 1 234 3 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 45 1 186 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
70 2 168 3 72 2 186 1 6 1 149 1 189 1 23 1 142 2 191 2 216 1 117 1 
166 6 168 3 123 4 59 1 173 1 174 3 3 2 175 1 5 1 6 1 130 1 8 2 65 2 180 1 9 4 69 2 12 1 182 2 70 1 72 1 16 2 73 2 183 1 138 2 184 2 75 2 19 1 185 1 187 1 189 1 23 2 190 1 142 1 26 4 81 1 191 1 144 2 145 2 192 2 83 2 193 2 85 4 194 1 196 2 32 2 92 2 202 1 149 1 203 2 213 1 152 2 151 2 216 1 98 1 101 2 221 2 159 4 44 3 223 1 225 2 161 2 105 4 46 2 110 2 229 1 49 1 50 1 232 4 55 2 53 2 54 2 233 2 117 1 118 2 
196 1 168 2 123 3 93 1 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 45 1 186 1 110 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 106 2 110 1 232 2 54 1 55 1 117 1 118 1 
166 3 168 3 123 2 173 1 3 1 175 1 6 1 8 1 65 1 9 2 69 1 182 1 70 1 72 1 16 1 73 1 138 1 184 1 75 1 189 1 23 1 190 1 142 1 26 2 191 1 144 1 145 1 192 1 83 1 193 1 85 2 196 1 32 1 92 1 149 1 203 1 152 1 151 1 216 1 98 1 101 1 221 1 159 2 44 3 223 1 225 1 161 1 105 2 46 1 110 1 49 1 50 1 232 2 53 1 54 1 55 1 233 1 117 1 118 1 
70 1 168 2 72 1 186 1 6 1 149 1 189 1 23 1 142 1 191 1 216 1 233 1 117 1 
166 3 168 1 123 2 127 1 175 1 3 1 8 1 65 1 9 2 69 2 182 1 71 1 16 1 73 1 138 1 184 1 75 1 76 1 190 1 26 2 82 1 145 1 144 1 192 1 83 1 193 1 85 2 196 1 32 1 92 1 93 1 203 1 151 1 152 1 98 1 101 1 159 2 221 1 44 3 43 1 223 1 225 1 105 2 161 1 45 1 46 1 110 1 49 1 50 1 232 2 53 1 54 1 55 1 233 1 118 1 
166 3 168 3 123 2 173 1 3 1 175 1 6 1 8 1 65 1 9 2 69 1 182 1 70 1 72 1 16 1 73 1 138 1 184 1 75 1 189 1 23 1 190 1 142 1 26 2 191 1 144 1 145 1 192 1 83 1 193 1 85 2 196 1 32 1 92 1 149 1 203 1 152 1 151 1 216 1 98 1 101 1 221 1 159 2 44 3 223 1 225 1 161 1 105 2 46 1 110 1 49 1 50 1 112 1 232 2 55 1 53 1 54 1 233 1 117 1 118 1 
166 3 168 3 123 2 3 1 175 1 6 1 8 1 65 1 9 2 69 1 182 1 70 1 72 1 16 1 73 1 138 1 184 1 75 1 189 1 23 1 190 1 26 2 82 1 191 1 144 1 145 1 192 1 83 1 193 1 85 2 196 1 32 1 92 1 149 1 203 1 36 1 152 1 151 1 216 1 97 1 98 1 101 1 221 1 159 2 43 1 44 3 223 1 225 1 161 1 105 2 46 1 110 1 49 1 50 1 112 1 232 2 55 1 53 1 54 1 233 1 118 1 
196 1 168 2 123 2 127 1 93 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 221 1 159 2 71 1 72 1 16 1 73 1 138 1 161 1 45 1 76 1 186 1 189 1 23 1 142 1 26 2 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 93 1 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 45 1 186 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 110 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 110 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 110 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 2 93 1 34 1 6 1 203 1 149 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 45 1 186 1 110 1 189 1 23 1 26 2 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 110 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
9 1 39 1 105 1 192 1 85 1 
182 1 9 1 39 1 105 1 85 1 
9 1 56 1 105 1 192 1 20 1 85 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
166 3 168 2 171 3 123 2 127 1 3 1 174 3 6 1 8 1 65 1 179 1 180 1 9 2 68 1 69 2 134 3 182 1 70 1 14 4 71 1 72 1 16 1 73 1 138 1 139 1 75 1 187 1 76 1 186 1 189 1 23 2 142 1 26 2 191 1 144 1 145 1 192 1 31 3 83 1 193 1 85 2 194 1 196 1 198 1 92 1 93 1 149 1 203 1 152 1 213 1 151 1 216 1 101 1 221 1 159 2 161 1 105 2 45 1 110 1 163 1 232 2 55 1 54 1 53 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 110 1 189 1 23 1 112 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
168 2 123 3 127 1 6 1 8 1 65 1 69 2 70 1 71 1 72 1 16 1 73 1 138 1 186 1 76 1 189 1 141 1 23 1 142 1 26 3 191 1 145 1 144 1 83 1 196 1 93 1 34 1 203 1 149 1 151 1 152 1 216 1 221 1 159 2 161 1 45 1 110 1 232 2 54 1 55 1 117 1 118 1 
196 1 168 2 123 3 93 1 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 106 2 45 1 186 1 110 1 141 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 127 1 93 1 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 106 2 45 1 76 1 186 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 127 1 93 1 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 2 70 1 159 2 71 1 221 1 72 1 16 1 73 1 161 1 138 1 45 1 76 1 186 1 189 1 23 1 26 3 142 1 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
196 1 168 2 123 3 34 1 6 1 149 1 203 1 8 1 65 1 152 1 151 1 216 1 69 1 70 1 159 2 221 1 72 1 16 1 73 1 161 1 138 1 189 1 23 1 142 1 26 3 232 2 191 1 144 1 55 1 54 1 145 1 83 1 118 1 117 1 
166 2 120 1 194 1 0 1 168 2 171 2 87 1 198 1 92 1 175 1 174 2 3 1 149 1 179 1 180 1 9 4 209 1 213 1 68 1 214 1 216 1 134 2 13 1 14 3 75 1 77 1 187 1 188 1 109 1 79 1 189 1 23 2 142 1 163 1 53 1 57 1 31 2 193 1 234 3 236 1 117 1 
166 2 120 1 0 1 32 1 168 2 171 2 87 1 198 1 92 1 174 2 3 1 199 1 4 1 149 1 205 1 179 1 180 1 9 4 209 1 213 1 68 1 216 1 11 1 134 2 14 3 15 1 102 1 225 1 184 1 75 1 46 1 187 1 188 1 109 1 79 1 189 1 23 1 142 1 81 1 53 1 31 2 193 1 234 3 117 1 
168 2 1 3 6 1 7 1 149 1 8 3 65 3 37 1 151 3 152 3 216 1 69 3 70 1 159 3 72 1 16 3 138 3 189 1 23 1 142 1 232 3 191 1 54 3 83 3 119 1 117 1 
168 2 1 1 6 1 149 1 8 1 65 1 37 1 67 1 151 1 152 1 216 1 69 1 70 1 159 1 72 1 16 1 138 1 189 1 23 1 142 1 232 1 191 1 54 1 83 1 119 1 117 1 
70 1 168 2 72 1 1 1 6 1 149 1 189 1 23 1 37 1 67 1 142 1 191 1 216 1 117 1 
168 2 1 1 34 1 6 1 149 1 64 1 8 1 65 1 9 1 37 1 151 1 152 1 39 1 216 1 69 1 70 1 159 1 72 1 16 1 105 1 138 1 189 1 23 1 162 1 142 1 232 1 191 1 54 1 83 1 85 1 119 1 117 1 
196 1 168 2 123 2 1 2 6 1 203 1 149 1 8 3 65 3 132 1 37 1 151 3 152 3 216 1 69 3 70 1 221 1 159 4 72 1 16 3 73 1 161 1 138 3 110 1 189 1 112 1 23 1 26 2 142 1 232 4 191 1 144 1 55 1 145 1 54 3 83 3 118 1 119 1 117 1 
70 1 168 2 159 1 72 1 1 1 16 1 138 1 6 1 149 1 8 1 189 1 65 1 23 1 37 1 142 1 152 1 151 1 232 1 191 1 216 1 54 1 69 1 83 1 117 1 119 1 
95 1 168 1 27 1 218 1 74 1 
168 1 103 1 165 1 128 1 
168 1 103 1 215 1 
95 1 168 1 218 1 219 2 
150 1 103 1 
14 1 171 1 68 1 174 1 31 1 134 1 
180 1 213 1 3 1 187 1 
14 1 171 1 68 1 174 1 31 1 139 1 134 1 
3 1 225 1 200 1 184 1 46 1 180 1 81 1 
132 1 123 1 26 1 232 2 144 1 83 1 226 1 
232 1 83 1 
9 1 123 1 26 1 232 1 144 1 34 1 
232 1 83 1 
9 1 123 1 26 1 34 1 
36 1 
97 1 
97 1 
142 1 
117 1 
142 1 
168 2 33 1 197 1 148 1 149 1 140 1 189 1 23 1 67 1 209 1 115 1 29 1 216 1 217 1 219 1 
168 4 33 2 197 2 148 2 18 1 149 2 140 2 189 2 23 2 209 2 115 2 29 2 216 2 217 2 155 1 219 2 
168 2 33 1 197 1 60 1 148 1 149 1 140 1 189 1 230 1 23 1 209 1 115 1 29 1 216 1 217 1 219 1 
168 2 33 1 197 1 123 2 148 1 34 1 149 1 140 1 189 1 23 1 9 1 210 2 209 1 10 1 115 1 154 1 29 1 216 1 217 1 219 1 
235 1 
9 2 62 1 234 2 34 1 
206 1 9 2 234 2 34 1 
166 2 32 1 168 3 197 1 33 1 123 1 173 1 148 1 92 1 175 1 3 1 62 1 149 1 206 1 9 2 210 1 209 1 154 1 216 1 217 1 219 1 98 1 156 1 12 1 44 2 223 1 225 1 18 1 184 1 75 1 46 1 140 1 189 1 49 1 23 2 50 1 190 1 115 1 53 1 29 1 193 1 235 1 234 2 
230 1 60 1 115 1 216 1 149 1 
166 2 194 1 167 1 168 2 197 1 33 1 123 1 171 3 198 1 148 1 92 1 174 3 3 1 62 1 149 1 206 1 179 1 180 1 9 3 210 1 209 1 10 1 68 1 213 1 154 1 216 1 217 1 134 3 219 1 12 1 14 4 139 1 75 1 187 1 140 1 189 1 23 3 163 1 115 1 53 1 29 1 31 3 193 1 235 1 234 2 
168 2 33 1 197 1 148 1 18 1 149 1 140 1 189 1 23 1 209 1 115 1 29 1 216 1 217 1 219 1 
168 2 33 1 197 1 123 1 148 1 34 1 149 1 140 1 189 1 23 1 9 3 210 1 209 1 10 2 115 1 154 1 29 1 216 1 217 1 219 1 
168 2 33 1 197 1 148 1 149 1 140 1 189 1 23 1 209 1 115 1 29 1 216 1 217 1 155 1 219 1 
168 4 33 2 197 2 60 1 148 2 149 2 140 2 189 2 230 1 23 2 209 2 115 2 29 2 216 2 217 2 155 1 219 2 
208 1 211 1 60 1 91 1 137 1 135 1 
168 2 123 2 91 1 34 1 149 1 9 2 209 1 211 1 10 1 216 1 219 1 135 1 160 1 17 1 140 1 189 1 23 1 113 1 51 2 231 1 146 1 
168 2 123 2 91 1 137 1 34 1 149 1 140 1 189 1 23 1 51 2 9 2 208 1 211 1 209 1 10 1 231 1 216 1 219 1 135 1 146 1 
166 1 194 1 167 1 168 2 123 1 171 2 198 1 91 1 92 1 174 2 3 1 149 1 179 1 180 1 9 1 208 1 209 1 211 1 10 1 68 1 212 1 213 1 216 1 134 2 219 1 135 1 12 1 14 3 137 1 139 1 75 1 47 1 187 1 140 1 189 1 23 3 51 1 28 1 231 1 163 1 31 2 
195 1 132 1 51 1 123 1 211 1 89 1 
212 1 34 1 
28 1 34 1 
195 1 168 2 123 1 89 1 91 1 149 1 208 1 9 2 209 1 211 2 10 1 216 1 219 1 135 1 137 1 105 1 47 1 140 1 189 1 23 1 51 1 85 1 
195 1 168 2 123 1 61 1 89 1 91 1 172 1 149 1 208 1 9 2 132 1 209 1 211 2 10 1 216 1 219 1 135 1 137 1 105 1 47 1 140 1 189 1 23 1 51 1 85 1 
47 1 
195 1 166 2 32 1 167 2 168 3 123 2 89 1 91 1 173 1 92 1 175 1 3 1 149 1 9 3 208 1 209 1 211 2 10 2 212 1 216 1 219 1 135 1 98 1 12 1 101 1 44 4 223 1 160 1 137 1 225 1 105 1 184 1 75 1 46 1 47 1 140 1 189 1 49 1 23 2 50 1 51 2 190 1 28 1 231 1 85 1 
208 1 211 1 60 1 91 1 137 1 135 1 
195 1 166 2 194 1 167 2 168 2 123 2 171 4 89 1 198 1 91 1 92 1 174 4 3 1 149 1 179 1 180 1 9 3 208 1 209 1 211 2 10 2 68 1 212 1 213 1 216 1 134 4 219 1 135 1 12 1 101 1 14 5 137 1 105 1 139 1 75 1 47 1 187 1 140 1 189 1 23 3 51 2 28 1 231 1 163 1 31 4 85 1 

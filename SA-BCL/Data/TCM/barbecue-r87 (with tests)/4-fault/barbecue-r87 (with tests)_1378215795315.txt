#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 161 139 89 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | CONSTANT | 4669 | 2 -> 3
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5041 | return null
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8937 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
177 1 178 1 102 1 69 1 249 1 106 1 
178 1 102 1 69 1 249 1 106 1 
187 1 56 2 183 1 
99 1 0 1 220 1 4 1 21 1 105 1 106 1 209 1 211 1 36 1 224 1 188 2 67 1 192 1 242 1 115 1 41 1 42 3 15 1 
99 1 0 1 4 1 21 1 223 1 106 1 211 1 36 1 224 1 188 1 192 1 115 2 213 1 41 1 42 3 15 1 
144 1 0 1 4 1 15 1 
99 1 0 1 43 1 4 1 21 1 149 1 36 1 188 1 41 2 42 2 15 1 
99 1 178 1 220 1 4 1 21 1 105 1 106 2 209 1 211 1 36 1 224 2 188 1 189 1 192 1 242 1 115 1 116 1 41 1 42 3 15 1 
99 1 178 1 220 1 4 1 21 1 105 1 106 2 209 1 211 1 36 1 224 2 188 1 192 1 242 1 115 1 116 1 41 1 42 3 15 1 
99 1 141 1 0 1 178 1 60 1 4 1 21 1 106 1 36 1 224 1 131 1 188 1 189 1 116 1 41 1 42 2 15 1 
99 1 141 1 0 1 178 1 60 1 4 1 21 1 106 1 36 1 224 1 188 1 189 1 230 1 116 1 41 1 42 2 15 1 
142 1 99 1 141 1 16 1 0 1 178 1 60 1 44 1 4 1 21 1 106 1 36 1 224 1 188 1 116 1 41 1 42 2 15 1 
142 1 99 1 141 1 16 1 0 1 178 1 60 1 44 1 4 1 21 1 106 1 36 1 224 1 188 1 189 1 116 1 41 1 42 2 15 1 
99 2 246 1 0 1 4 1 21 1 36 1 188 2 41 1 42 3 15 1 
99 2 0 1 4 1 21 1 25 1 238 1 243 2 41 1 42 3 15 1 
175 1 99 1 0 1 243 1 21 1 4 1 41 2 42 2 238 1 15 1 
99 1 0 1 4 1 21 1 238 1 190 1 243 1 41 1 42 2 15 1 
99 1 0 1 243 1 11 1 21 1 4 1 41 1 42 2 238 1 15 1 
99 1 73 1 0 1 206 1 4 1 21 1 93 1 106 1 184 1 238 1 224 1 225 1 192 1 243 1 115 4 41 1 42 3 15 1 
99 1 0 1 4 1 21 1 237 1 238 1 47 1 243 1 41 1 42 2 15 1 
99 3 246 1 0 1 4 1 21 2 238 1 243 1 41 2 42 2 15 1 
159 1 99 2 0 1 4 1 21 2 106 1 184 1 238 1 224 1 192 1 243 2 115 1 213 1 41 1 42 4 15 1 
128 1 219 1 86 3 
86 1 
57 2 205 1 58 1 123 1 61 2 208 4 125 1 63 4 210 1 64 2 9 4 133 1 213 1 139 1 214 1 15 1 143 1 76 2 19 4 20 1 223 2 80 2 26 1 25 1 150 1 28 1 85 1 155 3 156 4 231 1 158 2 162 2 161 1 32 4 88 1 234 8 235 1 90 4 165 2 92 1 238 1 167 4 168 1 243 1 245 1 41 3 42 3 99 2 100 2 246 1 178 1 180 1 181 1 45 1 249 2 182 1 106 2 185 1 184 1 186 1 110 4 50 1 190 2 192 1 114 1 115 3 197 1 116 1 55 2 
205 1 58 1 118 2 120 1 123 1 61 4 3 1 62 1 207 2 208 4 125 1 63 6 7 2 129 1 9 4 66 1 10 2 133 1 68 2 136 2 213 1 139 1 216 2 14 2 15 1 71 2 143 1 19 3 146 2 78 2 147 1 222 2 20 1 223 1 148 4 23 2 82 2 26 1 25 1 150 1 83 3 28 1 152 2 85 1 30 2 227 2 228 1 229 2 158 4 161 1 88 1 234 14 90 4 34 2 92 1 238 1 166 4 96 4 168 1 243 1 170 2 173 2 245 1 41 3 42 4 99 2 246 1 178 1 179 1 103 2 181 1 248 2 249 2 182 1 106 2 185 1 184 1 46 4 186 1 110 3 50 1 51 2 113 2 190 2 192 1 194 2 253 2 52 2 115 2 116 1 55 2 
205 1 58 1 118 2 121 1 123 1 61 4 3 1 62 1 207 2 208 4 125 1 63 6 7 2 9 4 10 2 133 1 68 2 136 2 213 1 139 1 216 2 14 2 15 1 71 2 143 1 19 3 146 2 78 2 147 1 222 2 20 1 223 1 148 4 82 2 26 1 25 1 150 1 28 1 152 2 85 1 30 2 227 2 229 2 158 4 161 1 88 1 234 4 90 4 34 2 92 1 238 1 166 4 96 4 168 1 243 1 170 2 173 2 245 1 41 3 42 3 99 2 246 1 178 1 179 1 103 2 181 1 248 2 249 2 182 1 106 2 185 1 184 1 46 4 186 1 110 3 50 1 51 2 113 2 190 2 192 1 194 2 253 2 52 2 115 2 197 1 116 1 55 2 
203 2 204 1 205 1 58 1 118 3 2 1 123 1 61 4 126 1 207 2 208 4 125 1 63 6 7 3 8 1 9 4 10 2 133 1 68 2 213 1 138 3 139 1 216 2 15 1 71 2 143 1 19 3 146 3 78 2 147 1 222 2 20 1 223 1 148 5 82 2 26 1 25 1 150 1 28 1 152 2 85 1 227 2 229 3 158 4 161 1 88 1 234 4 90 2 34 3 92 1 238 1 166 3 96 5 168 1 243 1 170 2 173 2 174 1 245 1 41 3 42 3 176 1 99 2 246 1 178 1 181 1 249 2 106 2 182 1 184 1 185 1 46 4 108 1 186 1 110 3 50 1 51 2 113 2 190 2 192 1 253 2 115 2 196 3 52 2 116 1 55 2 
203 2 204 1 205 1 58 1 118 3 123 1 61 4 62 1 207 2 208 4 125 1 63 6 7 3 8 1 9 4 10 2 133 1 68 3 213 1 138 3 139 1 216 3 15 1 71 2 143 1 19 3 146 3 78 2 147 1 222 2 223 1 20 1 148 5 82 2 26 1 25 1 150 1 149 1 28 1 152 2 85 1 227 2 229 3 158 4 159 1 161 1 88 1 234 4 90 2 34 3 92 1 238 1 166 3 96 5 241 1 168 1 243 2 170 2 173 2 245 1 41 5 42 4 176 1 99 4 246 1 178 1 179 1 181 1 249 2 106 2 182 1 184 1 185 1 46 4 108 1 186 1 110 3 50 1 51 2 113 2 190 2 192 1 253 2 115 2 196 3 52 3 197 1 116 1 55 2 
203 2 204 1 205 1 58 1 118 3 123 1 61 4 62 1 207 2 208 4 125 1 63 6 7 3 8 1 9 4 10 2 133 1 68 2 213 1 138 3 139 1 216 2 15 1 71 2 143 1 19 3 146 3 78 2 147 1 222 2 223 1 20 1 148 5 82 2 26 1 25 1 150 1 28 1 152 2 85 1 227 2 229 3 158 4 161 1 88 1 234 4 90 2 34 3 92 1 238 1 166 3 96 5 241 1 168 1 243 1 170 2 173 2 245 1 41 3 42 3 176 1 99 2 246 1 178 1 179 1 181 1 249 2 106 2 182 1 184 1 185 1 46 4 108 1 186 1 110 3 50 1 51 2 113 2 190 2 192 1 253 2 115 2 196 3 52 2 197 1 116 1 55 2 
143 1 186 1 161 1 28 1 9 4 88 1 58 1 181 1 20 1 208 4 139 1 25 1 
81 1 
118 3 2 1 123 1 125 1 126 1 7 3 8 1 9 4 10 2 133 1 139 1 138 3 15 1 143 1 146 3 19 3 147 1 20 1 148 5 25 1 26 1 150 1 149 1 28 1 152 2 158 4 161 1 34 3 166 3 168 1 170 2 173 2 41 4 42 3 176 1 178 1 179 1 181 1 182 1 185 1 184 1 46 4 186 1 50 1 51 2 190 2 192 1 52 2 196 3 197 1 55 2 203 2 204 1 205 1 58 1 61 4 62 1 208 4 207 2 63 6 68 2 213 1 216 2 71 2 78 2 223 2 222 2 82 2 85 1 227 2 229 3 88 1 234 4 236 1 90 2 92 1 238 1 96 5 241 1 243 1 245 1 99 2 246 1 106 2 249 2 108 1 110 3 113 2 115 3 253 2 116 1 
161 1 9 1 88 1 208 1 139 1 
203 2 204 1 205 1 58 1 118 3 2 1 123 1 61 4 62 1 126 1 207 2 208 4 125 1 63 6 7 3 8 1 9 4 10 2 133 1 68 2 213 1 138 3 139 1 216 2 15 1 71 2 143 1 19 3 146 3 78 2 147 1 222 2 223 1 148 5 82 2 26 1 25 1 150 1 28 1 152 2 85 1 227 2 229 3 158 4 161 1 88 1 234 4 90 2 34 3 92 1 238 1 166 3 96 5 241 1 168 1 243 1 170 2 173 2 245 1 41 3 42 3 176 1 99 2 246 1 178 1 179 1 181 1 249 2 106 2 182 1 184 1 185 1 46 4 108 1 186 1 110 3 50 1 51 2 113 2 190 2 192 1 253 2 115 2 196 3 52 2 116 1 55 2 
203 2 204 1 205 1 58 1 118 3 2 1 123 1 61 4 62 1 126 1 207 2 208 4 125 1 63 6 7 3 8 1 9 4 10 2 133 1 68 2 213 1 138 3 216 2 15 1 71 2 143 1 19 3 146 3 78 2 147 1 222 2 223 1 148 5 82 2 26 1 25 1 150 1 28 1 152 2 85 1 227 2 229 3 158 4 161 1 163 1 88 1 234 4 90 2 34 3 92 1 238 1 166 3 96 5 241 1 168 1 243 1 170 2 173 2 245 1 41 3 42 3 176 1 99 2 246 1 178 1 179 1 181 1 249 2 106 2 182 1 184 1 185 1 46 4 108 1 186 1 110 3 50 1 51 2 113 2 190 2 192 1 253 2 115 2 196 3 52 2 116 1 55 2 
118 3 2 1 123 1 3 1 126 1 125 1 7 3 8 1 9 4 132 1 10 2 133 1 136 2 139 1 138 3 15 3 14 2 143 1 146 3 19 3 147 3 20 1 148 5 25 1 26 1 150 1 28 1 152 2 30 2 158 6 161 1 34 3 166 5 168 1 170 2 173 2 41 5 42 7 176 1 178 1 179 1 181 1 182 3 185 1 184 1 46 4 186 1 50 1 51 2 190 2 192 1 194 2 52 4 196 3 55 2 200 1 203 2 204 1 205 1 58 1 61 6 62 1 208 4 207 2 63 6 68 4 213 1 216 4 71 2 78 2 223 1 222 2 82 2 85 1 227 2 229 3 88 1 89 1 234 6 90 4 92 1 238 3 96 5 243 3 245 1 99 4 246 1 103 2 248 2 106 2 249 2 108 1 110 3 112 1 113 2 115 2 253 2 116 1 
118 2 121 1 123 1 3 1 124 1 125 1 7 2 9 4 10 2 133 1 136 2 139 1 15 1 14 2 143 1 146 2 19 3 147 1 20 1 148 4 26 1 150 1 28 1 152 2 30 2 29 2 158 4 161 1 34 2 166 4 36 1 168 1 38 2 170 2 172 1 173 2 41 3 42 3 178 1 179 1 181 1 182 1 185 1 46 4 186 1 50 1 188 1 51 2 190 2 192 1 194 2 195 1 52 2 197 1 53 1 55 2 205 1 58 1 61 4 62 1 208 4 207 2 63 6 211 1 68 2 213 1 216 2 71 2 218 1 75 2 74 1 78 2 79 2 223 1 222 2 82 2 84 1 85 1 227 2 229 2 88 1 234 4 90 4 92 1 96 4 244 1 245 1 99 2 246 1 247 1 248 2 103 2 104 2 249 2 106 2 110 3 113 2 250 1 115 2 253 2 116 1 
160 1 234 1 228 1 
95 1 234 1 
95 1 234 1 
48 1 19 1 178 1 234 1 63 1 106 1 
141 1 19 1 59 1 178 1 234 1 60 1 44 1 63 1 106 1 130 1 191 1 39 1 
234 1 254 1 
141 1 191 1 234 1 178 1 60 1 63 1 106 1 
135 1 234 1 
95 1 234 1 
135 1 234 1 
135 1 234 1 
32 1 234 1 97 1 40 1 
167 1 234 1 127 1 
99 1 100 1 33 1 234 2 119 1 90 2 182 1 35 1 24 1 95 1 36 1 109 2 188 1 240 1 41 1 42 2 15 1 
151 1 
100 1 99 1 36 1 144 1 188 1 33 1 119 1 41 1 24 1 35 1 42 2 182 1 15 1 
99 1 147 1 182 1 36 1 188 2 193 1 68 2 52 2 41 1 42 3 216 2 15 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 196 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 3 188 1 51 1 113 1 152 1 52 1 253 1 229 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 15 1 176 1 99 1 217 2 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
99 1 147 1 6 1 182 1 36 1 188 1 193 1 68 1 52 1 41 1 42 2 216 1 15 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 15 1 176 1 99 1 217 2 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 3 34 1 207 1 7 1 166 2 95 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 3 34 1 207 1 7 1 166 2 95 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 1 236 1 34 1 207 1 7 1 166 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
118 1 90 1 34 1 207 1 7 1 166 1 36 1 96 2 10 1 68 1 173 1 138 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 196 1 52 1 253 1 229 1 
59 2 118 1 60 1 207 1 63 2 7 1 130 2 10 1 68 2 137 1 216 2 15 1 141 1 16 2 71 1 146 1 19 2 78 1 147 1 221 1 222 1 148 2 26 1 149 1 152 1 227 1 30 1 228 3 229 1 230 1 159 1 164 1 234 3 90 2 34 1 166 1 36 1 96 2 168 1 173 1 39 2 245 1 41 4 42 3 99 2 178 1 44 3 106 1 182 1 46 2 188 2 51 1 113 1 190 1 191 1 252 1 193 1 52 2 253 1 116 1 55 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 3 188 1 51 1 113 1 152 1 30 1 193 1 229 1 52 1 253 1 
99 1 147 1 182 1 36 1 188 2 193 1 68 2 52 2 41 1 42 3 216 2 15 1 
118 2 123 1 61 4 124 1 207 2 63 6 7 2 211 1 10 2 68 1 216 1 15 1 71 2 218 1 74 1 75 2 19 3 146 2 79 2 147 1 78 2 223 1 222 2 148 4 82 2 26 1 149 1 84 1 152 2 29 2 227 2 229 2 158 4 234 4 90 4 34 2 92 1 166 2 36 1 96 4 38 2 172 1 170 2 173 2 244 1 245 1 41 2 42 3 99 1 247 1 178 1 248 2 104 2 106 2 182 1 249 2 46 4 110 3 188 1 51 2 113 2 190 2 250 1 192 1 195 1 115 1 52 1 253 2 116 1 53 1 55 2 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 217 2 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 123 1 61 2 124 1 207 1 63 3 7 1 211 1 10 1 68 1 216 1 15 1 71 1 75 1 146 1 79 1 147 1 78 1 223 1 222 1 148 2 82 1 152 1 29 1 227 1 229 1 158 2 234 2 90 2 34 1 92 1 166 1 36 1 96 2 38 1 170 1 173 1 41 1 42 3 99 1 248 1 104 1 106 1 182 1 249 1 46 2 110 3 188 1 51 1 190 1 113 1 192 1 115 1 52 1 253 1 55 1 
99 1 79 1 147 1 182 1 36 1 188 1 193 1 68 1 52 1 41 1 42 2 216 1 15 1 
118 1 123 1 61 2 124 1 207 1 63 3 7 1 10 1 136 1 14 1 71 1 75 1 146 1 78 1 79 1 223 1 222 1 148 2 82 1 25 1 152 1 29 1 227 1 30 1 229 1 158 2 234 2 90 2 34 1 92 1 166 2 96 2 38 1 170 1 173 1 42 1 248 1 103 1 104 1 249 1 106 1 184 1 46 2 110 3 51 1 190 1 113 1 192 1 194 1 115 1 253 1 55 1 
118 1 123 1 61 2 124 1 207 1 63 3 7 1 211 1 10 1 68 1 216 1 15 1 71 1 75 1 146 1 79 1 147 1 78 1 223 1 222 1 148 2 82 1 152 1 29 1 227 1 229 1 158 2 234 2 90 1 236 1 34 1 92 1 166 1 36 1 96 2 38 1 170 1 173 1 41 1 42 3 99 1 248 1 104 1 106 1 182 1 249 1 46 2 110 3 188 1 51 1 190 1 113 1 192 1 115 1 52 1 253 1 55 1 
118 1 123 1 61 2 124 1 207 1 63 3 7 1 10 1 68 1 216 1 15 1 71 1 75 1 146 1 79 1 147 1 78 1 223 1 222 1 148 2 82 1 25 1 152 1 29 1 227 1 229 1 158 2 234 2 90 1 236 1 34 1 92 1 238 1 166 1 96 2 38 1 243 1 170 1 173 1 41 1 42 3 99 1 248 1 104 1 106 1 182 1 249 1 184 1 46 2 110 3 51 1 113 1 190 1 192 1 115 1 52 1 253 1 55 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 3 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 82 1 46 3 188 1 51 1 113 1 152 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 82 1 46 3 188 1 51 1 113 1 152 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 82 1 46 3 188 1 51 1 113 1 152 1 229 1 52 1 253 1 254 1 
118 1 90 2 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 82 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 253 1 52 1 
118 1 90 2 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 82 1 46 3 188 1 51 1 113 1 152 1 229 1 52 1 253 1 254 1 
234 1 61 1 248 1 54 1 158 1 
234 1 61 1 170 1 54 1 158 1 
134 1 234 1 61 1 248 1 232 1 158 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 138 1 41 1 216 1 42 2 14 1 15 1 176 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 196 1 229 1 52 1 253 1 
59 3 118 1 60 1 61 2 207 1 63 3 7 1 130 3 10 1 68 1 136 1 216 1 14 1 15 1 141 1 16 1 71 1 146 1 19 3 78 1 147 1 222 1 148 2 82 1 26 1 152 1 30 1 227 1 229 1 158 2 234 2 90 2 34 1 166 2 36 1 96 2 168 1 170 1 173 1 39 3 245 1 41 2 42 2 99 1 178 1 44 4 103 1 248 1 106 1 182 1 249 1 46 2 188 1 51 1 113 1 190 1 191 1 193 1 194 1 52 1 253 1 116 1 55 1 
118 1 90 1 236 1 34 1 207 1 7 1 166 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 52 1 253 1 229 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 15 1 99 1 217 2 146 1 78 1 147 1 222 1 148 2 82 1 182 1 46 3 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 2 34 1 207 1 7 1 166 2 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 217 2 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 2 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 2 95 1 36 1 96 2 10 1 68 1 136 1 173 1 41 1 216 1 42 2 14 1 15 1 99 1 146 1 78 1 147 1 103 1 222 1 148 2 182 1 46 3 188 1 51 1 113 1 152 1 30 1 193 1 194 1 229 1 52 1 253 1 
118 1 90 3 34 1 207 1 7 1 166 1 95 1 36 1 96 2 10 1 68 1 173 1 41 1 216 1 42 2 15 1 99 1 146 1 78 1 147 1 222 1 148 2 182 1 46 3 188 1 51 1 113 1 152 1 52 1 253 1 229 1 
99 1 36 1 188 1 68 1 147 1 52 1 41 1 216 1 42 2 182 1 15 1 
59 2 234 4 60 1 122 1 63 2 209 1 36 1 131 1 130 2 168 1 37 1 242 1 169 1 12 1 39 2 245 1 41 2 42 2 15 1 141 1 100 1 99 1 71 1 16 1 19 2 220 1 178 1 44 3 105 1 182 1 106 1 26 1 107 1 188 1 190 1 227 1 228 3 115 1 198 1 116 1 55 1 
59 2 234 4 60 1 122 1 237 1 63 2 36 1 130 2 38 1 37 1 169 1 171 1 12 1 39 2 245 1 41 1 215 1 42 2 15 1 141 1 100 1 99 1 16 1 71 1 18 1 74 1 75 1 19 2 178 1 44 3 104 1 182 1 106 1 26 1 107 1 47 1 188 1 190 1 29 1 227 1 154 1 228 3 198 1 55 1 
203 1 204 1 118 1 234 1 61 1 34 1 7 1 166 1 8 1 95 1 36 1 96 1 68 1 138 1 41 1 42 2 216 1 15 1 176 1 99 1 146 1 147 1 148 1 182 1 108 1 188 1 229 1 196 1 52 1 54 1 201 1 158 1 
204 1 118 2 90 1 236 1 34 2 207 1 7 2 166 2 8 1 36 1 96 3 10 1 68 1 173 1 138 2 41 1 42 2 216 1 15 1 176 1 99 1 146 2 78 1 147 1 222 1 148 3 182 1 46 2 108 1 51 1 188 1 113 1 152 1 253 1 229 2 196 2 52 1 
99 1 176 1 204 1 146 1 118 1 147 1 34 1 148 1 182 1 7 1 8 1 108 1 166 1 36 1 96 1 188 1 68 1 52 1 196 1 229 1 138 1 41 1 216 1 42 2 15 1 
204 1 118 3 34 3 94 1 7 3 166 3 8 1 36 1 96 3 68 1 138 3 41 1 42 2 216 1 15 1 176 3 99 1 146 3 147 1 148 3 182 1 108 3 188 1 229 3 196 3 52 1 
204 1 118 1 34 1 7 1 166 1 8 1 36 1 96 1 68 1 11 1 138 1 41 1 42 2 216 1 15 1 176 1 99 1 146 1 147 1 148 1 182 1 108 1 188 1 229 1 196 1 52 1 
99 1 147 1 182 1 8 1 108 1 36 1 188 1 68 1 11 1 52 1 41 1 42 2 216 1 15 1 
72 1 98 1 157 1 42 1 
212 1 157 1 42 1 
111 1 67 1 91 2 42 1 
117 1 111 1 67 1 13 1 42 1 
157 1 199 1 
16 1 130 1 59 1 19 1 44 1 39 1 
16 1 130 1 191 1 59 1 19 1 44 1 39 1 
74 1 75 1 29 1 178 1 104 1 140 1 106 1 
178 1 245 1 106 1 26 1 
46 1 96 2 113 1 118 1 226 1 90 1 56 1 
96 1 118 1 
46 1 95 1 96 1 113 1 234 1 90 1 
96 1 118 1 
46 1 95 1 234 1 90 1 
238 1 
243 1 
243 1 
188 1 
36 1 
188 1 
202 1 99 1 100 1 1 1 182 1 238 1 27 1 239 1 153 1 243 1 11 1 41 1 42 2 31 1 15 1 
202 2 99 2 100 2 1 2 101 1 182 2 238 2 27 2 65 1 239 2 153 2 243 2 41 2 42 4 31 2 15 2 
202 1 99 1 100 1 234 1 1 1 90 2 5 1 182 1 238 1 27 1 95 1 167 1 239 1 153 1 243 1 70 2 41 1 42 2 31 1 15 1 
145 1 
95 1 77 1 234 2 228 2 
95 1 233 1 234 2 228 2 
202 1 233 1 234 2 1 1 123 1 90 1 124 1 92 1 5 1 63 2 238 1 65 1 239 1 38 1 243 1 70 1 41 2 42 3 15 1 100 1 99 1 71 1 145 1 75 1 77 1 22 1 223 1 104 1 182 1 106 1 27 1 184 1 149 1 110 2 190 1 29 1 227 1 192 1 153 1 228 2 115 1 55 1 31 1 
202 1 144 1 87 1 182 1 15 1 
202 1 233 1 32 1 59 3 234 3 1 1 60 1 90 1 5 1 63 2 238 1 167 1 130 3 239 1 168 1 243 1 39 3 245 1 70 1 41 3 42 2 15 1 100 1 99 1 141 1 71 1 16 1 145 1 19 3 77 1 178 1 44 4 182 1 106 1 26 1 27 1 149 1 190 1 191 1 227 1 153 1 228 2 116 1 55 1 31 1 
202 1 99 1 100 1 1 1 182 1 238 1 27 1 65 1 239 1 153 1 243 1 41 1 42 2 31 1 15 1 
202 1 99 1 100 1 234 3 1 1 90 1 5 1 182 1 238 1 27 1 95 1 167 2 239 1 153 1 243 1 70 1 41 1 42 2 31 1 15 1 
202 1 99 1 100 1 1 1 101 1 182 1 238 1 27 1 239 1 153 1 243 1 41 1 42 2 31 1 15 1 
202 2 99 2 100 2 144 1 1 2 101 1 182 2 238 2 27 2 239 2 153 2 243 2 87 1 41 2 42 4 31 2 15 2 
202 1 99 1 100 1 144 1 1 1 182 1 238 1 27 1 239 1 153 1 243 1 87 1 41 1 42 2 31 1 15 1 
99 1 100 1 234 2 180 1 90 2 80 1 182 1 238 1 95 1 167 1 97 1 114 1 155 1 243 1 156 2 214 1 41 1 231 1 42 2 15 1 
162 1 32 1 59 2 234 1 60 1 90 1 165 1 63 1 238 1 167 1 64 1 130 2 168 1 243 1 39 2 214 1 245 1 41 3 42 2 15 1 100 1 99 1 141 1 16 1 19 2 178 1 44 3 180 1 80 1 182 1 106 1 26 1 149 1 190 1 191 1 155 1 114 1 156 1 116 1 231 1 55 1 
57 1 76 1 155 1 90 1 156 1 56 1 
95 1 162 1 
95 1 64 1 
99 1 100 1 57 1 76 1 234 2 180 1 90 1 61 1 165 1 182 1 238 1 167 1 114 1 155 2 243 1 156 1 214 1 41 1 231 1 42 2 158 1 15 1 
57 1 234 2 61 1 90 1 165 1 127 1 238 1 167 1 243 1 214 1 41 1 42 2 15 1 100 1 99 1 76 1 180 1 182 1 187 1 155 2 114 1 156 1 231 1 56 1 158 1 
165 1 
162 1 57 1 32 2 234 3 123 1 61 1 90 2 124 1 165 1 92 1 63 2 238 1 167 2 64 1 38 1 243 1 214 1 41 2 42 3 15 1 100 1 99 1 17 1 75 1 76 1 180 1 223 1 104 1 80 1 249 1 182 1 106 1 184 1 149 1 110 4 190 1 29 1 192 1 155 2 114 1 156 2 115 1 231 1 55 1 158 1 
144 1 155 1 180 1 114 1 214 1 231 1 
162 1 57 1 32 2 59 4 234 3 60 1 61 1 90 2 165 1 63 2 238 1 167 2 64 1 130 4 168 1 243 1 39 4 214 1 245 1 41 3 42 2 15 1 100 1 99 1 141 1 16 1 76 1 19 4 178 1 44 5 180 1 80 1 249 1 182 1 106 1 26 1 149 1 190 1 191 1 155 2 114 1 156 2 116 1 231 1 55 1 158 1 
144 1 155 1 180 1 114 1 214 1 231 1 
234 2 90 2 238 1 95 1 167 1 97 1 243 1 41 1 42 2 15 1 100 1 99 1 17 1 180 1 80 1 182 1 49 1 251 1 155 1 156 2 231 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 141 114 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V ERROR java.lang.NullPointerException 141 114 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 11 177 134 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 11 177 219 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 11 177 134 224 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I | OPERATOR | 3989 | += -> <<=
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z | CONDITION | 8616 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module; | RETURN | 10876 | return null
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4490 | = null
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
86 1 67 1 100 1 225 1 126 1 169 1 
67 1 100 1 225 1 126 1 169 1 
166 1 160 1 58 2 
187 1 106 1 167 1 62 1 192 1 169 1 6 1 180 1 7 1 221 3 116 1 98 1 53 1 12 1 173 1 25 1 174 2 148 1 233 1 
187 1 62 2 72 1 192 1 169 1 6 1 221 3 116 1 98 1 53 1 12 1 25 1 173 1 174 1 233 1 85 1 
116 1 200 1 53 1 233 1 
187 1 192 1 6 1 221 2 116 1 53 1 25 2 174 1 55 1 161 1 233 1 
187 1 106 1 167 1 62 1 126 1 192 1 169 2 6 1 180 1 221 3 7 1 116 1 98 1 53 1 10 1 13 1 12 2 173 1 25 1 174 1 
187 1 106 1 167 1 62 1 126 1 192 1 169 2 6 1 180 1 221 3 7 1 116 1 98 1 53 1 13 1 12 2 173 1 25 1 174 1 
59 1 187 1 126 1 192 1 169 1 6 1 221 2 116 1 145 1 53 1 10 1 12 1 13 1 25 1 119 1 174 1 233 1 
59 1 187 1 126 1 192 1 204 1 169 1 6 1 221 2 116 1 53 1 10 1 12 1 13 1 25 1 119 1 174 1 233 1 
59 1 187 1 105 1 126 1 192 1 169 1 6 1 221 2 116 1 53 1 12 1 13 1 172 1 25 1 119 1 174 1 227 1 233 1 
59 1 187 1 105 1 126 1 192 1 169 1 6 1 221 2 116 1 53 1 10 1 12 1 13 1 172 1 25 1 119 1 174 1 227 1 233 1 
187 1 116 1 53 1 101 1 25 1 174 2 192 2 6 1 233 1 221 3 
116 1 190 2 53 1 25 1 14 1 192 2 4 1 6 1 233 1 221 3 
116 1 190 1 53 1 150 1 25 2 14 1 192 1 6 1 233 1 221 2 
88 1 116 1 190 1 53 1 25 1 14 1 192 1 6 1 233 1 221 2 
116 1 190 1 53 1 25 1 14 1 75 1 192 1 6 1 233 1 221 2 
175 1 190 1 125 1 62 4 44 1 192 1 169 1 95 1 6 1 221 3 116 1 53 1 12 1 14 1 25 1 173 1 213 1 233 1 
190 1 192 1 194 1 6 1 221 2 116 1 53 1 181 1 14 1 25 1 233 1 
116 1 190 1 53 1 101 1 25 2 14 1 192 3 6 2 233 1 221 2 
190 2 62 1 192 2 169 1 6 2 221 4 143 1 116 1 53 1 12 1 14 1 25 1 173 1 213 1 233 1 85 1 
222 1 149 1 80 3 
80 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 31 1 191 3 176 1 177 1 4 1 141 1 114 1 127 1 11 1 39 3 133 1 41 1 
209 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 11 1 39 3 41 1 
134 1 123 1 218 1 31 1 191 3 176 1 177 1 4 1 141 1 114 1 127 1 11 1 39 3 133 1 41 1 
134 1 127 1 123 1 11 1 218 1 191 3 176 1 177 1 39 3 41 1 
134 1 123 1 11 1 218 1 191 3 176 1 4 1 177 1 39 3 41 1 
134 1 123 1 11 1 218 1 191 3 176 1 4 1 177 1 39 3 41 1 
123 1 11 1 218 1 219 1 191 3 176 1 4 1 177 1 39 3 41 1 
134 1 123 1 218 1 191 3 176 1 177 1 4 1 127 1 224 1 11 1 39 3 41 1 
51 1 89 1 76 1 
89 1 3 1 
89 1 91 1 
59 1 122 1 89 1 109 1 126 1 169 1 170 1 52 1 119 1 159 1 227 1 120 1 
89 1 52 1 107 1 126 1 159 1 169 1 
59 1 89 1 52 1 109 1 126 1 119 1 169 1 
89 1 91 1 
89 1 73 1 
89 1 91 1 
89 1 3 1 
89 1 3 1 
89 1 18 1 19 1 15 1 
89 1 20 1 96 1 
60 1 89 2 190 1 91 1 151 1 47 1 192 1 23 2 221 2 117 1 53 1 208 2 77 1 158 1 14 1 25 1 42 1 
79 1 
60 1 200 1 190 1 151 1 192 1 221 2 117 1 53 1 77 1 158 1 14 1 25 1 42 1 
187 1 139 2 74 2 192 1 221 3 118 1 53 1 25 1 174 2 229 2 214 1 42 1 
2 1 1 1 65 2 66 1 9 1 131 1 184 1 187 1 70 1 71 3 138 1 139 1 74 1 193 1 192 1 196 1 78 1 25 1 197 1 28 1 84 1 89 8 91 1 32 1 202 2 94 1 36 1 97 1 99 1 157 2 208 3 38 1 162 2 163 3 214 1 215 1 42 1 43 1 217 1 46 1 221 2 118 1 53 1 54 1 174 1 229 1 121 1 
187 1 139 2 74 2 192 1 221 3 118 1 53 1 25 1 174 2 229 2 214 1 42 1 
2 2 1 2 62 1 126 1 179 2 65 2 66 2 9 2 182 1 13 1 183 1 131 2 184 2 69 1 187 1 135 2 136 1 188 4 71 4 22 1 72 1 139 1 74 1 138 2 192 1 195 2 196 2 78 2 25 2 197 2 26 1 27 1 82 4 83 1 84 2 29 2 199 2 87 2 88 2 89 4 32 2 202 4 34 1 203 1 154 1 36 2 97 2 98 1 207 1 99 2 156 2 208 4 159 3 161 1 38 2 162 4 102 2 40 1 214 1 165 2 42 1 103 2 110 1 169 2 221 3 52 6 53 1 54 2 225 2 173 1 174 1 226 3 229 1 121 2 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 187 1 70 1 71 3 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 56 2 229 1 84 1 121 1 
187 1 53 1 25 1 74 1 139 1 174 1 192 1 229 1 214 1 221 2 42 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 56 2 229 1 84 1 121 1 
187 1 139 1 74 1 192 1 221 2 118 1 53 1 25 1 174 1 229 1 16 1 214 1 42 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 56 2 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 231 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 43 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
59 1 122 2 1 1 2 1 126 1 65 1 8 1 9 1 13 1 130 1 131 1 184 1 69 1 187 1 70 1 71 2 139 2 74 2 138 1 192 2 142 1 143 1 76 3 196 1 78 1 25 4 197 1 146 1 83 1 84 1 29 1 87 1 88 1 89 3 32 1 202 2 204 1 36 1 97 1 99 1 208 2 159 2 161 1 162 2 38 1 214 1 165 1 42 1 105 2 109 1 48 1 169 1 170 2 221 3 52 2 54 1 118 1 53 1 119 1 174 2 227 3 229 2 120 2 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 187 1 70 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
2 1 1 1 62 1 179 1 65 1 66 1 9 1 183 1 131 1 184 1 187 1 135 1 188 2 71 2 72 1 139 1 74 1 138 1 192 1 195 1 196 1 78 1 25 1 197 1 82 2 84 1 29 1 199 1 88 1 87 1 89 2 32 1 202 2 154 1 36 1 97 1 98 1 99 1 156 1 208 2 38 1 162 2 102 1 40 1 214 1 165 1 42 1 103 1 169 1 221 3 52 3 53 1 54 1 225 1 173 1 174 1 226 3 229 1 121 1 
187 1 139 1 74 1 192 1 179 1 221 2 118 1 53 1 25 1 174 1 229 1 214 1 42 1 
2 1 1 1 62 1 4 1 179 1 65 2 66 1 9 1 183 1 131 1 184 1 135 1 70 1 188 2 71 2 72 1 138 1 193 1 195 1 196 1 78 1 197 1 82 2 84 1 29 1 199 1 88 1 87 1 89 2 32 1 202 2 154 1 36 1 97 1 99 1 156 1 208 2 213 1 38 1 162 2 102 1 165 1 40 1 215 1 43 1 103 1 46 1 169 1 221 1 52 3 54 1 225 1 173 1 226 3 121 1 
2 1 1 1 62 1 179 1 65 1 66 1 9 1 183 1 131 1 184 1 187 1 135 1 188 2 71 2 72 1 139 1 74 1 138 1 192 1 195 1 196 1 78 1 25 1 197 1 82 2 84 1 29 1 199 1 88 1 87 1 89 2 32 1 202 2 154 1 36 1 97 1 98 1 99 1 156 1 208 2 38 1 162 2 102 1 40 1 214 1 165 1 42 1 103 1 169 1 221 3 52 3 53 1 54 1 225 1 173 1 174 1 226 3 229 1 231 1 121 1 
2 1 1 1 62 1 4 1 179 1 65 1 66 1 9 1 183 1 14 1 131 1 184 1 135 1 188 2 71 2 190 1 72 1 139 1 74 1 138 1 192 1 195 1 196 1 78 1 25 1 197 1 82 2 84 1 29 1 199 1 87 1 88 1 89 2 32 1 202 2 154 1 36 1 97 1 99 1 156 1 208 2 213 1 38 1 162 2 102 1 214 1 40 1 165 1 42 1 103 1 169 1 221 3 52 3 54 1 53 1 225 1 173 1 226 3 229 1 231 1 121 1 
1 1 2 1 32 1 202 2 36 1 97 1 65 2 99 1 9 1 208 2 131 1 184 1 38 1 162 2 214 1 42 1 215 1 43 1 187 1 70 1 71 2 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 187 1 70 1 71 3 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 2 131 1 184 1 162 2 38 1 214 1 42 1 215 1 187 1 70 1 71 2 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
89 1 188 1 195 1 82 1 24 1 
89 1 135 1 188 1 82 1 
89 1 0 1 188 1 195 1 82 1 49 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
59 1 122 3 1 1 2 1 126 1 65 2 66 1 9 1 13 1 131 1 184 1 69 1 187 1 70 1 135 1 188 2 71 2 139 1 74 1 138 1 192 1 193 1 142 1 195 1 196 1 78 1 25 2 197 1 82 2 83 1 84 1 29 1 87 1 88 1 89 2 32 1 202 2 36 1 97 1 99 1 208 2 159 3 38 1 162 2 214 1 165 1 42 1 215 1 43 1 105 1 109 1 46 1 169 1 170 3 221 2 52 3 54 1 118 1 53 1 225 1 119 1 174 1 227 4 229 1 120 3 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 231 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 66 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 187 1 70 1 71 3 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 56 2 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 56 2 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 2 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 215 1 43 1 187 1 70 1 71 3 46 1 74 1 139 1 138 1 192 1 193 1 221 2 54 1 53 1 118 1 196 1 78 1 25 1 197 1 174 1 229 1 84 1 121 1 
91 1 1 1 2 1 32 1 202 2 36 1 65 1 97 1 99 1 9 1 208 3 131 1 184 1 162 2 38 1 214 1 42 1 187 1 71 3 74 1 139 1 138 1 192 1 221 2 54 1 53 1 196 1 78 1 25 1 174 1 197 1 229 1 84 1 121 1 
59 1 122 2 87 1 88 1 89 4 62 1 126 1 206 1 180 1 7 1 13 1 159 2 186 1 17 1 165 1 69 1 42 1 187 1 106 1 105 1 167 1 21 1 192 1 169 1 111 1 170 2 142 1 221 2 117 1 76 3 145 1 52 2 53 1 119 1 25 2 174 1 227 3 228 1 83 1 120 2 29 1 
59 1 199 1 122 2 87 1 88 1 89 4 126 1 206 1 156 1 181 1 129 1 37 1 182 1 159 2 186 1 102 1 17 1 69 1 165 1 42 1 103 1 187 1 105 1 21 1 192 1 50 1 194 1 169 1 111 1 170 2 221 2 117 1 76 3 144 1 52 2 53 1 119 1 25 1 174 1 227 3 228 1 83 1 120 2 29 1 
124 1 2 1 1 3 32 1 202 4 36 3 97 3 65 3 66 1 99 1 9 1 208 2 131 1 184 1 38 1 162 4 214 1 42 1 187 1 71 2 168 2 138 3 139 1 74 1 192 1 221 2 54 1 53 1 196 3 78 3 171 1 25 1 197 3 174 1 229 1 84 1 231 1 58 1 121 3 
124 1 1 3 202 3 36 3 97 3 65 3 162 3 214 1 42 1 187 1 168 3 138 3 139 1 74 1 192 1 221 2 53 1 196 3 78 3 171 1 25 1 197 3 174 1 229 1 232 1 121 3 
124 1 1 1 202 1 36 1 97 1 65 1 162 1 214 1 42 1 187 1 168 1 138 1 139 1 74 1 75 1 192 1 221 2 53 1 196 1 78 1 171 1 25 1 197 1 174 1 229 1 121 1 
187 1 124 1 168 1 139 1 74 1 75 1 192 1 221 2 53 1 25 1 174 1 229 1 214 1 42 1 
89 1 124 1 91 1 1 1 64 1 202 1 155 1 36 1 97 1 65 1 162 1 214 1 42 1 187 1 188 1 168 1 138 1 139 1 74 1 192 1 24 1 221 2 53 1 196 1 78 1 171 1 25 1 197 1 174 1 82 1 229 1 121 1 
187 1 124 1 168 1 1 1 74 1 139 1 138 1 202 1 192 1 36 1 221 2 65 1 97 1 53 1 196 1 171 1 78 1 25 1 174 1 197 1 162 1 229 1 214 1 121 1 42 1 
108 1 212 1 57 1 221 1 
81 1 68 1 185 1 148 1 221 1 
189 1 212 1 221 1 
137 2 68 1 148 1 221 1 
212 1 112 1 
122 1 105 1 159 1 227 1 120 1 170 1 
126 1 83 1 169 1 69 1 
122 1 105 1 109 1 159 1 227 1 120 1 170 1 
103 1 126 1 169 1 140 1 156 1 182 1 102 1 
216 1 71 1 208 1 197 1 184 1 162 2 58 1 
197 1 162 1 
89 1 71 1 91 1 208 1 162 1 184 1 
197 1 162 1 
89 1 71 1 91 1 208 1 
14 1 
190 1 
190 1 
174 1 
187 1 
174 1 
90 1 137 1 33 1 75 1 192 1 205 1 220 1 221 2 117 1 128 1 53 1 210 1 211 1 25 1 42 1 
90 2 137 2 33 2 45 1 192 2 35 1 205 2 220 2 221 4 117 2 128 2 53 2 210 2 211 2 25 2 42 2 
90 1 137 1 33 1 192 1 35 1 205 1 220 1 221 2 117 1 128 1 53 1 210 1 211 1 25 1 42 1 
200 1 90 1 137 1 33 1 192 1 178 1 205 1 220 1 221 2 117 1 128 1 53 1 210 1 211 1 25 1 42 1 
89 1 90 1 91 1 137 1 33 1 192 1 96 1 205 1 220 1 115 1 221 2 117 1 128 1 53 1 208 2 210 1 211 1 25 1 132 2 42 1 
152 1 
223 1 89 2 76 2 91 1 
89 2 76 2 91 1 198 1 
199 1 88 1 61 1 87 1 89 2 90 1 62 1 33 1 152 1 154 1 35 1 205 1 128 1 98 1 156 1 208 1 211 1 210 1 183 1 161 1 132 1 102 1 165 1 40 1 42 1 103 1 137 1 72 1 192 1 169 1 220 1 115 1 221 3 223 1 117 1 76 2 52 2 53 1 25 2 173 1 226 2 198 1 29 1 
200 1 53 1 205 1 178 1 42 1 
59 1 122 3 88 1 87 1 89 3 90 1 33 1 126 1 152 1 96 1 205 1 128 1 208 1 211 1 210 1 13 1 159 3 161 1 132 1 165 1 69 1 42 1 105 1 19 1 137 1 109 1 192 1 169 1 170 3 142 1 220 1 115 1 221 2 223 1 117 1 76 2 52 2 53 1 25 3 119 1 227 4 83 1 120 3 198 1 29 1 
89 3 90 1 91 1 137 1 33 1 192 1 96 2 205 1 220 1 115 1 221 2 117 1 128 1 53 1 208 1 210 1 211 1 25 1 132 1 42 1 
90 1 137 1 33 1 45 1 192 1 205 1 220 1 221 2 117 1 128 1 53 1 210 1 211 1 25 1 42 1 
200 1 90 2 137 2 33 2 45 1 192 2 178 1 205 2 220 2 221 4 117 2 128 2 53 2 210 2 211 2 25 2 42 2 
200 1 30 1 31 1 141 1 230 1 133 1 
89 2 30 1 91 1 31 1 63 1 92 2 153 1 96 1 128 1 208 2 42 1 104 1 18 1 137 1 192 1 113 1 221 2 117 1 53 1 25 1 230 1 
18 1 89 2 30 1 91 1 137 1 31 1 92 2 153 1 192 1 96 1 141 1 221 2 117 1 128 1 53 1 208 2 25 1 230 1 133 1 42 1 
59 1 122 2 88 1 87 1 89 1 201 1 30 1 31 1 126 1 92 1 153 1 5 1 96 1 128 1 208 1 13 1 159 2 161 1 164 1 133 1 69 1 42 1 105 1 19 1 137 1 109 1 192 1 141 1 169 1 170 2 142 1 221 2 117 1 52 1 53 1 25 3 119 1 227 3 83 1 120 2 230 1 
208 1 92 1 93 1 147 1 230 1 58 1 
201 1 91 1 
91 1 5 1 
89 2 30 1 31 1 92 1 93 1 96 1 128 1 208 1 133 1 164 1 42 1 188 1 137 1 192 1 141 1 221 2 117 1 53 1 25 1 82 1 147 1 230 2 
89 2 30 1 31 1 92 1 93 1 96 1 128 1 208 1 160 1 133 1 164 1 42 1 188 1 20 1 137 1 192 1 141 1 221 2 117 1 53 1 25 1 82 1 147 1 230 2 58 1 
164 1 
199 1 87 1 88 1 89 3 201 1 30 1 31 1 62 1 92 2 93 1 153 1 5 1 154 1 96 2 128 1 98 1 156 1 208 2 183 1 161 1 102 1 164 1 133 1 40 1 42 1 103 1 104 1 188 1 19 2 137 1 72 1 192 1 141 1 169 1 221 3 117 1 52 2 53 1 225 1 25 2 173 1 226 4 82 1 147 1 230 2 
200 1 30 1 31 1 141 1 230 1 133 1 
59 1 122 4 88 1 87 1 89 3 201 1 30 1 31 1 126 1 92 2 93 1 153 1 5 1 96 2 128 1 208 2 13 1 159 4 161 1 164 1 133 1 69 1 42 1 105 1 188 1 19 2 137 1 109 1 192 1 141 1 169 1 170 4 142 1 221 2 117 1 52 2 53 1 225 1 25 3 119 1 82 1 227 5 83 1 147 1 120 4 230 2 

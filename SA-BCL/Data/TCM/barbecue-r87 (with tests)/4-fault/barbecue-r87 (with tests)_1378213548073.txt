#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 213 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 213 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 213 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 213 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 86 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.ArithmeticException 194 2 124 230 70 165 189 174 209 232 14 144 236 213 109 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V ERROR java.lang.ArithmeticException 194 2 124 230 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V ERROR java.lang.ArithmeticException 194 2 124 230 10 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V ERROR java.lang.ArithmeticException 194 2 124 230 10 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V ERROR java.lang.ArithmeticException 194 2 124 230 10 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.ArithmeticException 194 2 124 230 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V ERROR java.lang.ArithmeticException 194 2 124 230 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V ERROR java.lang.ArithmeticException 194 2 124 230 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.ArithmeticException 194 214 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.ArithmeticException 194 214 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | STATEMENT | 5003 | stmt -> ;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 25276 | stmt -> ;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V | OPERATOR | 2161 | += -> /=
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z | CONDITION | 6089 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 43 1 67 1 204 1 231 1 
44 2 1 1 159 1 
115 1 43 1 67 1 204 1 231 1 151 1 
222 2 241 2 175 3 212 2 56 1 57 2 201 1 140 1 74 1 255 1 239 1 
222 2 43 1 241 4 224 1 175 2 165 1 212 2 97 1 217 1 57 1 201 1 74 1 189 1 142 1 255 1 239 1 
168 1 201 1 74 1 255 1 
222 1 18 1 241 2 175 1 212 1 57 2 201 1 74 1 23 1 239 1 255 1 
222 1 123 1 43 2 241 3 175 1 165 1 212 1 97 1 66 1 231 1 180 1 247 1 54 1 57 1 201 1 74 1 189 1 142 2 239 1 30 1 
222 1 123 1 43 2 241 3 175 1 165 1 212 1 97 1 66 1 231 1 180 1 54 1 57 1 201 1 74 1 189 1 142 2 239 1 30 1 
222 1 43 1 241 2 175 1 78 1 212 1 66 1 197 1 231 1 247 1 102 1 57 1 201 1 74 1 142 1 255 1 239 1 
94 1 222 1 43 1 241 2 175 1 78 1 212 1 66 1 231 1 247 1 102 1 57 1 201 1 74 1 142 1 255 1 239 1 
222 1 43 1 241 2 175 1 78 1 212 1 66 1 231 1 102 1 90 1 57 1 28 1 201 1 13 1 74 1 142 1 255 1 239 1 
222 1 43 1 241 2 175 1 78 1 212 1 66 1 231 1 247 1 102 1 90 1 57 1 28 1 201 1 13 1 74 1 142 1 255 1 239 1 
222 1 241 3 175 2 56 1 212 2 57 1 201 1 74 1 239 1 255 1 
222 1 241 3 175 2 166 1 57 1 201 1 118 1 74 1 220 2 255 1 
222 1 241 2 175 1 57 2 166 1 201 1 74 1 50 1 220 1 255 1 
222 1 241 2 175 1 57 1 166 1 201 1 74 1 220 1 68 1 255 1 
123 1 222 1 43 1 161 1 241 3 175 1 165 1 166 1 180 1 54 1 57 1 201 1 74 1 189 1 220 1 142 1 255 1 30 1 
222 1 43 1 161 1 174 1 224 1 241 3 175 1 165 1 166 1 57 1 201 1 74 1 220 1 189 2 142 1 255 1 
222 1 241 2 210 1 175 1 57 1 166 1 201 1 74 1 220 1 255 1 
222 1 43 1 161 1 241 3 175 1 165 1 33 1 166 1 101 1 155 1 57 1 201 1 117 1 74 1 220 1 189 4 142 1 255 1 
222 1 241 2 175 1 196 1 166 1 57 1 201 1 74 1 120 1 220 1 255 1 
183 1 111 1 89 3 
89 1 
124 1 0 2 193 2 194 2 63 1 2 1 128 1 129 1 3 1 5 1 4 3 134 1 68 1 200 2 138 2 139 1 70 1 71 1 201 1 202 2 204 1 75 1 14 1 141 2 207 1 143 1 209 1 144 1 77 2 212 2 146 2 213 1 214 1 149 1 22 2 83 2 150 2 23 1 215 1 152 1 154 1 26 1 217 1 27 12 160 1 93 4 225 1 165 1 229 3 97 1 230 1 32 4 99 2 232 1 235 3 236 1 106 3 38 2 171 1 239 1 42 1 43 1 174 1 241 4 175 3 113 1 177 1 244 1 47 1 179 1 52 1 181 1 182 1 56 1 57 5 186 1 188 1 58 1 254 1 121 1 189 1 61 2 122 2 
124 1 0 2 193 2 194 2 63 1 2 1 128 1 129 1 3 1 5 1 134 1 68 1 200 2 138 2 139 1 70 1 201 1 202 2 204 1 75 1 14 1 207 1 143 1 144 1 209 1 77 2 212 1 146 2 213 1 214 1 22 2 83 2 150 2 152 1 154 1 26 1 27 2 160 1 93 4 225 1 165 1 229 2 97 1 230 1 32 4 99 2 232 1 235 2 236 1 106 2 38 2 171 1 239 1 42 1 43 1 174 1 241 3 175 2 113 1 177 1 244 1 47 1 179 1 52 1 181 1 182 1 56 1 57 3 186 1 188 1 254 1 121 1 189 1 61 2 122 2 
181 1 225 1 236 1 63 1 129 1 213 1 128 1 32 4 5 1 134 1 93 4 
63 1 128 1 129 1 66 1 3 1 5 1 132 2 6 2 134 1 68 2 200 2 70 2 201 1 12 1 203 2 205 1 14 1 207 2 208 1 76 1 144 1 209 1 143 1 212 1 213 1 81 1 82 1 84 1 88 1 26 1 27 4 29 1 93 4 224 1 225 1 227 2 165 1 96 1 97 1 32 4 231 1 232 1 234 2 167 1 236 1 170 2 171 1 107 1 108 1 40 2 239 1 240 2 174 2 43 2 241 3 175 2 179 1 181 1 56 1 116 2 57 3 189 3 61 2 
124 2 0 2 194 2 193 4 63 1 2 2 128 1 129 1 66 1 3 1 5 1 7 2 134 1 68 2 200 6 138 2 10 2 139 4 70 2 201 1 202 2 203 3 204 2 75 2 14 1 15 1 207 4 208 1 144 1 209 1 143 1 77 4 212 1 146 2 213 1 22 2 83 2 150 4 152 2 87 2 88 1 26 1 27 4 160 1 93 4 221 2 224 1 225 1 165 1 96 1 229 2 97 1 230 2 32 4 231 1 99 4 232 1 100 2 235 2 106 2 236 1 38 4 171 1 107 1 239 1 42 2 174 1 43 2 241 4 175 2 112 2 113 2 177 1 244 2 47 2 179 1 181 1 182 2 250 2 251 2 56 1 57 3 188 2 254 1 189 2 122 2 61 3 
124 2 0 2 194 2 193 4 63 1 2 2 128 1 129 1 66 1 3 1 5 1 7 2 134 1 68 2 200 6 138 2 10 2 139 4 70 2 201 1 202 2 203 3 204 2 75 2 14 1 15 1 207 4 208 1 144 1 209 1 143 1 77 4 212 1 146 2 213 1 22 2 82 1 83 2 150 4 152 2 87 2 88 1 26 1 27 4 160 1 93 4 221 2 224 1 225 1 165 1 96 1 229 2 97 1 230 2 32 4 231 1 99 4 232 1 100 2 235 2 106 2 236 1 38 4 171 1 107 1 239 1 42 2 174 1 43 2 241 3 175 2 112 2 113 2 178 1 177 1 244 2 47 2 179 1 181 1 182 2 250 2 251 2 56 1 57 3 188 2 254 1 189 2 122 2 61 3 
124 2 0 3 193 4 194 3 195 1 63 1 2 2 128 1 129 1 66 1 3 1 5 1 134 1 68 2 200 6 138 3 10 2 139 4 70 2 11 1 201 1 202 3 203 3 204 2 75 2 14 1 207 4 208 1 143 1 144 1 209 1 77 5 212 1 146 3 213 1 214 1 22 3 83 3 150 3 152 2 154 1 88 1 26 1 27 4 93 4 221 2 224 1 225 1 165 1 96 1 229 2 97 1 230 2 32 4 231 1 99 4 232 1 235 2 236 1 106 2 38 5 171 1 107 1 173 1 239 1 42 2 43 2 174 1 241 3 175 2 113 2 177 1 244 2 47 2 179 1 52 1 181 1 182 2 56 1 57 3 188 2 121 2 189 2 61 3 122 3 
137 1 
124 1 0 2 193 2 194 2 63 1 2 1 128 1 129 1 3 1 5 1 134 1 68 1 200 2 138 2 139 1 70 1 72 1 201 1 202 2 204 1 75 1 14 1 207 1 143 1 144 1 209 1 77 2 212 1 146 2 213 1 214 1 22 2 83 2 150 2 23 1 152 1 154 1 26 1 27 2 160 1 93 4 225 1 165 1 229 2 97 1 230 1 32 4 99 2 232 1 235 2 236 1 106 2 38 2 171 1 239 1 42 1 43 1 174 1 241 3 175 2 113 1 177 1 244 1 47 1 179 1 52 1 181 1 182 1 56 1 57 4 186 1 188 1 254 1 121 1 189 1 61 2 122 2 
236 1 63 1 213 1 32 1 93 1 
124 1 0 2 193 2 194 2 63 1 2 1 129 1 3 1 5 1 134 1 68 1 200 2 138 2 139 1 70 1 201 1 202 2 204 1 75 1 14 1 207 1 143 1 144 1 209 1 77 2 212 1 146 2 213 1 214 1 22 2 83 2 150 2 152 1 154 1 26 1 27 2 160 1 93 4 225 1 165 1 229 2 97 1 230 1 32 4 99 2 232 1 235 2 236 1 106 2 38 2 171 1 239 1 42 1 43 1 174 1 241 3 175 2 113 1 177 1 244 1 47 1 179 1 52 1 181 1 182 1 56 1 57 3 186 1 188 1 254 1 121 1 189 1 61 2 122 2 
124 1 0 2 193 2 194 2 63 1 2 1 129 1 3 1 5 1 134 1 68 1 200 2 138 2 139 1 70 1 201 1 202 2 204 1 75 1 14 1 207 1 143 1 144 1 209 1 77 2 212 1 146 2 214 1 22 2 83 2 150 2 152 1 154 1 86 1 26 1 27 2 160 1 93 4 225 1 165 1 229 2 97 1 230 1 32 4 99 2 232 1 235 2 236 1 106 2 38 2 171 1 239 1 42 1 43 1 174 1 241 3 175 2 113 1 177 1 244 1 47 1 179 1 52 1 181 1 182 1 56 1 57 3 186 1 188 1 254 1 121 1 189 1 61 2 122 2 
124 2 0 4 2 2 129 1 128 1 3 1 5 1 7 2 134 1 138 4 139 4 10 2 11 1 14 1 15 1 144 1 143 1 146 4 22 4 150 6 24 1 152 2 154 2 26 1 27 6 160 1 165 1 32 4 171 6 38 6 173 1 42 2 174 1 43 2 175 7 176 1 177 6 47 2 49 1 179 1 181 1 52 2 182 2 56 1 57 8 188 2 189 2 61 3 194 4 193 6 63 1 66 1 68 2 200 6 70 2 72 1 201 6 202 4 204 2 203 3 75 2 207 4 208 1 209 1 77 6 212 6 213 1 214 2 83 4 87 2 88 1 92 1 93 4 221 2 224 1 225 1 229 7 96 1 97 1 230 2 231 1 99 6 232 1 100 2 235 7 106 7 236 1 107 1 239 6 241 13 109 1 112 2 113 2 244 2 248 1 250 2 251 2 254 1 121 2 122 4 
124 2 0 2 194 2 193 4 63 1 2 2 128 1 129 1 66 1 3 1 5 1 7 2 134 1 68 2 200 6 138 2 10 2 139 4 70 2 201 1 202 2 203 3 204 2 75 2 14 1 15 1 207 4 208 1 144 1 209 1 143 1 77 4 146 2 213 1 22 2 82 1 83 2 150 4 152 2 87 2 88 1 26 1 27 4 160 1 220 1 93 4 221 2 161 1 224 1 225 1 165 1 96 1 229 2 230 2 32 4 166 1 231 1 99 4 232 1 100 2 235 2 106 2 236 1 38 4 171 1 107 1 42 2 174 1 43 2 241 3 175 2 112 2 113 2 178 1 177 1 244 2 47 2 179 1 181 1 182 2 250 2 251 2 56 1 57 3 188 2 118 1 254 1 189 2 122 2 61 3 
27 1 71 1 135 1 
27 1 219 1 
27 1 219 1 
200 1 43 1 27 1 203 1 231 1 21 1 
16 1 43 1 78 1 231 1 200 1 102 1 9 1 184 1 90 1 27 1 203 1 59 1 
105 1 27 1 
16 1 200 1 43 1 102 1 78 1 27 1 231 1 
145 1 27 1 
27 1 219 1 
145 1 27 1 
145 1 27 1 
233 1 223 1 27 1 40 1 
252 1 27 1 6 1 
206 2 207 2 241 2 175 1 79 1 64 1 166 1 153 1 170 1 27 2 57 1 171 1 201 1 187 1 219 1 220 1 41 1 
198 1 
153 1 241 2 168 1 175 1 170 1 57 1 79 1 64 1 187 1 166 1 201 1 171 1 220 1 
235 2 241 3 163 1 175 1 106 2 229 2 212 2 57 1 201 1 171 1 177 1 239 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 3 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 243 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
163 1 241 2 226 1 175 1 212 1 229 1 177 1 235 1 106 1 57 1 171 1 201 1 239 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 243 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 72 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 7 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 57 1 219 1 122 1 
124 1 0 1 194 1 2 1 66 1 133 1 68 1 200 2 9 2 138 1 139 2 70 1 71 3 73 1 201 1 202 1 203 2 75 1 16 1 207 2 208 1 77 2 78 1 212 2 146 1 22 1 83 1 150 1 23 1 152 1 26 1 90 3 217 1 27 3 28 2 94 1 221 1 163 1 229 2 230 1 231 1 102 1 235 2 169 1 106 2 38 2 171 1 107 1 239 1 42 1 43 1 241 3 175 2 112 1 113 1 177 1 244 1 51 1 182 1 184 2 57 4 188 1 59 2 122 1 
124 1 0 1 163 1 194 1 229 1 2 1 230 1 100 1 235 1 138 1 139 1 106 1 38 1 201 1 171 1 202 1 239 1 42 1 207 1 241 2 175 1 77 1 212 1 112 1 177 1 244 1 22 1 83 1 150 1 57 1 
163 1 241 3 175 1 212 2 229 2 177 1 235 2 106 2 57 1 171 1 201 1 239 1 
124 2 125 1 0 2 193 4 194 2 2 2 66 1 8 1 68 2 200 6 138 2 10 2 139 4 70 2 201 1 202 2 203 3 204 2 75 2 207 4 208 1 19 2 143 1 77 4 212 1 147 2 146 2 22 2 83 2 150 2 23 1 152 2 216 2 87 2 157 1 27 4 221 2 165 1 96 1 229 1 97 1 230 2 231 1 98 1 99 4 235 1 104 2 106 1 37 1 171 1 38 4 107 1 172 1 239 1 42 2 43 2 174 1 241 3 110 1 242 2 175 1 113 2 177 1 47 2 244 2 48 1 182 2 55 1 57 2 188 2 119 1 189 1 122 2 61 3 
221 1 124 1 0 1 163 1 194 1 229 1 2 1 230 1 100 1 235 1 138 1 10 1 139 3 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 112 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 250 1 57 1 219 1 122 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 243 2 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
235 1 241 2 175 1 106 1 229 1 212 1 57 1 201 1 171 1 177 1 239 1 
124 1 125 1 0 1 193 2 194 1 2 1 68 1 200 3 138 1 10 1 139 2 70 1 201 1 202 1 204 1 75 1 207 2 19 1 143 1 77 2 212 1 147 1 146 1 22 1 83 1 150 1 152 1 216 1 87 1 27 2 221 1 165 1 96 1 229 1 97 1 230 1 99 2 235 1 104 1 106 1 171 1 38 2 239 1 42 1 43 1 174 1 241 3 242 1 175 1 113 1 177 1 47 1 244 1 182 1 57 1 188 1 189 1 122 1 61 3 
19 1 163 1 241 2 175 1 212 1 229 1 177 1 235 1 106 1 57 1 171 1 201 1 239 1 
124 1 125 1 0 1 193 2 194 1 2 1 7 1 68 1 200 3 138 1 10 1 139 2 70 1 202 1 204 1 75 1 207 2 19 1 143 1 77 2 147 1 146 1 22 1 83 1 150 2 152 1 216 1 87 1 27 2 221 1 161 1 165 1 96 1 230 1 99 2 100 1 104 1 38 2 42 1 174 1 43 1 241 1 242 1 112 1 113 1 47 1 244 1 182 1 250 1 251 1 188 1 118 1 189 1 61 3 122 1 
124 1 125 1 0 1 193 2 194 1 2 1 68 1 200 3 138 1 10 1 139 2 70 1 72 1 201 1 202 1 204 1 75 1 207 2 19 1 143 1 77 2 212 1 147 1 146 1 22 1 83 1 150 1 152 1 216 1 87 1 27 2 221 1 165 1 96 1 229 1 97 1 230 1 99 2 235 1 104 1 106 1 171 1 38 2 239 1 42 1 43 1 174 1 241 3 242 1 175 1 113 1 177 1 47 1 244 1 182 1 57 1 188 1 189 1 122 1 61 3 
124 1 125 1 0 1 193 2 194 1 2 1 68 1 200 3 138 1 10 1 139 2 70 1 72 1 201 1 202 1 204 1 75 1 207 2 19 1 143 1 77 2 147 1 146 1 22 1 83 1 150 1 152 1 216 1 87 1 27 2 220 1 221 1 161 1 165 1 96 1 229 1 166 1 230 1 99 2 235 1 104 1 106 1 171 1 38 2 42 1 43 1 174 1 241 3 242 1 175 1 113 1 177 1 47 1 244 1 182 1 57 1 188 1 118 1 189 1 122 1 61 3 
221 1 124 1 163 1 0 1 194 1 229 1 2 1 230 1 7 1 100 1 138 1 235 1 139 2 106 1 201 1 171 1 38 2 202 1 75 1 239 1 42 1 207 2 241 2 175 1 77 2 112 1 212 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 250 1 251 1 57 1 122 1 
221 1 124 1 0 1 163 1 194 1 229 1 2 1 230 1 100 1 235 1 138 1 139 3 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 112 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 250 1 57 1 219 1 122 1 
124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 2 10 1 106 1 38 1 201 1 171 1 202 1 75 1 239 1 42 1 207 2 241 2 175 1 77 1 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 122 1 
124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 2 10 1 106 1 38 1 201 1 171 1 202 1 75 1 239 1 42 1 207 2 241 2 175 1 77 1 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 3 10 1 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
124 1 0 1 163 1 194 1 229 1 2 1 230 1 100 1 235 1 138 1 139 1 10 1 106 1 38 1 201 1 171 1 202 1 75 1 239 1 42 1 207 1 241 2 175 1 77 1 212 1 112 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 250 1 57 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 3 10 1 105 1 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
103 1 87 1 193 1 27 1 99 1 
103 1 193 1 27 1 47 1 99 1 
87 1 193 1 80 1 27 1 99 1 60 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
124 1 0 1 194 1 193 2 2 1 66 1 7 1 68 1 200 3 138 1 9 3 10 1 139 2 70 1 201 1 202 1 204 1 203 3 75 1 16 1 207 2 208 1 77 2 78 1 212 1 146 1 22 1 83 1 150 2 152 1 87 1 26 1 90 4 27 2 28 1 221 1 163 1 229 1 230 1 231 1 99 2 100 1 102 1 235 1 106 1 171 1 38 2 107 1 239 1 42 1 43 1 241 2 175 1 112 1 113 1 177 1 47 1 244 1 182 1 184 3 250 1 251 1 57 2 188 1 59 3 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 10 1 139 3 105 1 106 1 72 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
124 1 0 1 194 1 2 1 7 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 2 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 177 1 244 1 182 1 250 1 251 1 57 1 122 1 
124 1 0 1 194 1 2 1 138 1 10 1 139 3 201 1 202 1 75 1 207 3 77 2 212 1 146 1 22 1 83 1 150 1 152 1 219 1 221 1 163 1 229 1 230 1 100 1 235 1 106 1 105 1 171 1 38 2 239 1 42 1 241 2 175 1 112 1 243 2 177 1 244 1 182 1 250 1 57 1 122 1 
124 1 0 1 163 1 194 1 229 1 2 1 230 1 100 1 235 1 138 1 139 1 106 1 38 1 201 1 171 1 202 1 75 1 239 1 42 1 207 1 241 2 175 1 77 1 243 2 212 1 112 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 250 1 57 1 122 1 
221 1 124 1 0 1 163 1 194 1 229 1 2 1 230 1 7 1 100 1 235 1 138 1 139 3 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 112 1 146 1 177 1 244 1 22 1 83 1 150 2 152 1 182 1 250 1 251 1 57 1 219 1 122 1 
221 1 124 1 0 1 194 1 229 1 2 1 230 1 235 1 138 1 139 3 106 1 38 2 201 1 171 1 202 1 75 1 239 1 42 1 207 3 241 2 175 1 77 2 212 1 146 1 177 1 244 1 22 1 83 1 150 1 152 1 182 1 57 1 219 1 122 1 
123 1 190 1 130 1 66 1 131 1 197 1 231 1 68 1 200 2 9 2 102 1 70 1 170 1 71 3 201 1 171 1 203 2 107 1 239 1 39 1 43 1 208 1 241 2 175 1 78 1 212 1 113 1 180 1 249 1 184 2 54 1 26 1 90 3 57 2 27 4 28 1 188 1 59 2 189 1 30 1 256 1 
190 1 228 1 196 1 130 1 131 1 231 1 68 1 200 2 9 2 102 1 35 1 104 1 70 1 170 1 71 3 201 1 171 1 203 2 107 1 238 1 239 1 39 1 43 1 208 1 241 2 242 1 175 1 78 1 212 1 147 1 113 1 249 1 216 1 184 2 156 1 90 3 57 1 27 4 28 1 188 1 119 1 120 1 59 2 256 1 
124 1 0 2 194 2 229 1 2 1 230 1 138 2 235 1 139 1 106 1 72 1 38 2 171 1 201 1 202 2 75 1 239 1 42 1 207 1 241 2 175 1 77 2 212 1 146 2 214 1 177 1 244 1 22 2 83 2 150 2 152 1 52 1 182 1 154 1 57 1 122 2 
52 1 138 1 0 1 154 1 194 1 77 1 38 1 214 1 202 1 22 1 83 1 150 1 
0 3 194 3 229 1 138 3 235 1 106 1 38 3 171 1 201 1 202 3 239 1 241 2 175 1 77 3 212 1 146 3 214 3 177 1 22 3 83 3 150 3 52 1 154 1 158 1 57 1 122 3 
52 1 138 1 0 1 154 1 194 1 77 1 38 1 214 1 202 1 22 1 83 1 150 1 
241 2 210 1 175 1 212 1 229 1 214 1 177 1 52 1 235 1 106 1 57 1 171 1 201 1 239 1 
241 2 0 1 194 1 175 1 77 1 229 1 212 1 146 1 177 1 214 1 22 1 83 1 150 1 52 1 235 1 138 1 154 1 106 1 57 1 201 1 171 1 38 1 202 1 239 1 122 1 
162 1 241 1 36 1 91 1 
241 1 53 1 46 1 140 1 246 1 
241 1 185 1 36 1 
241 1 53 1 69 2 140 1 
36 1 245 1 
9 1 184 1 90 1 28 1 203 1 59 1 
16 1 9 1 184 1 90 1 28 1 203 1 59 1 
43 1 208 1 107 1 231 1 
43 1 242 1 164 1 147 1 231 1 104 1 119 1 
221 1 207 1 0 1 44 1 139 1 38 2 148 1 
0 1 38 1 
221 1 207 1 139 1 27 1 38 1 219 1 
0 1 38 1 
207 1 139 1 27 1 219 1 
166 1 
220 1 
220 1 
212 1 
239 1 
212 1 
17 1 241 2 126 1 210 1 175 1 127 1 85 1 34 1 69 1 25 1 170 1 57 1 171 1 201 1 253 1 
62 1 17 2 31 1 241 4 126 2 127 2 175 2 85 2 34 2 69 2 25 2 170 2 57 2 171 2 201 2 253 2 
62 1 17 1 241 2 126 1 175 1 127 1 85 1 34 1 69 1 25 1 170 1 57 1 171 1 201 1 253 1 
207 2 17 1 95 2 241 2 126 1 175 1 127 1 6 1 85 1 34 1 69 1 25 1 170 1 27 1 218 1 57 1 171 1 201 1 253 1 219 1 
199 1 
45 1 27 2 71 2 219 1 
191 1 27 2 71 2 219 1 
62 1 191 1 125 1 95 1 126 1 127 1 165 1 96 1 97 1 199 1 68 1 200 2 34 1 104 1 69 1 70 1 170 1 71 2 201 1 171 1 207 1 17 1 174 1 43 1 241 3 242 1 45 1 143 1 175 1 20 1 147 1 113 1 23 1 85 1 216 1 25 1 218 1 27 2 57 2 253 1 188 1 189 1 61 2 
34 1 168 1 201 1 171 1 136 1 
191 1 95 1 126 1 127 1 66 1 231 1 6 1 199 1 68 1 200 2 34 1 9 3 102 1 69 1 70 1 170 1 71 2 201 1 171 1 203 3 107 1 40 1 16 1 207 1 17 1 43 1 208 1 241 2 45 1 175 1 78 1 113 1 23 1 85 1 184 3 25 1 26 1 90 4 218 1 27 3 57 3 28 1 253 1 188 1 59 3 
17 1 241 2 126 1 127 1 175 1 136 1 85 1 34 1 168 1 69 1 25 1 170 1 57 1 171 1 201 1 253 1 
207 1 17 1 95 1 241 2 126 1 175 1 127 1 6 2 85 1 34 1 69 1 25 1 170 1 27 3 218 1 57 1 171 1 201 1 253 1 219 1 
17 1 31 1 241 2 126 1 127 1 175 1 85 1 34 1 69 1 25 1 170 1 57 1 171 1 201 1 253 1 
17 2 31 1 241 4 126 2 127 2 175 2 136 1 85 2 34 2 168 1 69 2 25 2 170 2 57 2 171 2 201 2 253 2 
240 1 207 2 241 2 227 2 175 1 81 1 6 1 84 1 85 1 233 1 167 1 69 1 170 1 27 2 57 1 171 1 201 1 108 1 219 1 205 1 
227 1 66 1 132 1 231 1 6 1 68 1 200 1 234 1 9 2 102 1 167 1 69 1 70 1 170 1 201 1 171 1 203 2 108 1 107 1 205 1 40 1 16 1 240 1 207 1 43 1 208 1 241 2 175 1 78 1 81 1 84 1 23 1 85 1 184 2 26 1 116 1 90 3 27 1 57 3 28 1 59 2 
207 1 44 1 211 1 227 1 114 1 167 1 
132 1 219 1 
116 1 219 1 
193 1 227 1 99 1 6 1 234 1 167 2 69 1 170 1 201 1 171 1 108 1 205 1 207 1 241 2 175 1 211 1 114 1 81 1 84 1 85 1 57 1 27 2 
167 1 168 1 81 1 108 1 84 1 205 1 
192 1 227 2 65 1 6 1 233 1 167 1 69 1 170 1 237 1 201 1 171 1 108 1 240 1 207 2 241 2 175 1 84 1 85 1 57 1 27 2 219 1 
193 1 227 1 99 1 6 1 234 1 167 2 69 1 170 1 201 1 171 1 108 1 205 1 207 1 241 2 44 1 175 1 211 1 114 1 81 1 84 1 85 1 252 1 57 1 27 2 159 1 
234 1 
125 1 193 1 227 2 165 1 96 1 97 1 65 1 132 1 99 1 6 2 68 1 200 2 234 1 167 2 104 1 69 1 70 1 170 1 201 1 171 1 204 1 108 1 205 1 40 2 240 1 207 2 174 1 43 1 241 3 242 1 211 1 175 1 143 1 147 1 114 1 81 1 84 1 23 1 85 1 216 1 116 1 27 3 57 2 189 1 61 4 
167 1 168 1 81 1 108 1 84 1 205 1 
193 1 227 2 66 1 132 1 231 1 99 1 6 2 68 1 200 2 234 1 9 4 102 1 167 2 69 1 70 1 170 1 201 1 171 1 204 1 203 4 108 1 107 1 205 1 40 2 16 1 240 1 207 2 43 1 208 1 241 2 211 1 175 1 78 1 114 1 81 1 84 1 23 1 85 1 184 4 26 1 116 1 90 5 27 3 57 3 28 1 59 4 

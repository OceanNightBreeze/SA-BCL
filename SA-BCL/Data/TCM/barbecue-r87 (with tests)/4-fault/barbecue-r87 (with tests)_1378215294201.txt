#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 219 232 134 80 1 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 165 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 219 232 134 80 236 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V ERROR java.lang.NullPointerException 241 226 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String; | RETURN | 7074 | return null
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | RETURN | 3349 | return null
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 10332 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module; | STATEMENT | 4004 | stmt -> ;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
30 1 88 1 143 1 150 1 152 1 124 1 
30 1 88 1 143 1 150 1 152 1 
233 2 216 1 171 1 
111 1 58 1 137 1 206 1 26 1 103 1 119 1 29 1 46 1 67 2 247 2 
70 1 111 1 38 1 58 1 154 1 137 1 26 1 103 1 119 1 131 4 143 1 46 1 106 1 148 1 49 1 67 3 76 1 247 1 
111 1 58 1 137 1 26 1 103 1 119 1 44 1 46 1 145 1 67 2 247 1 
111 1 37 1 38 1 58 1 137 1 130 1 26 1 103 1 131 1 119 1 210 1 143 1 132 1 46 1 49 1 76 1 67 3 247 1 
111 1 38 1 58 1 221 1 137 1 63 1 26 1 103 1 119 1 131 2 143 1 46 1 49 1 67 3 76 1 247 1 
111 1 26 1 57 1 46 1 
111 1 138 1 103 1 26 1 119 2 58 1 191 1 46 1 67 2 137 1 247 1 
111 1 37 1 38 2 39 1 58 1 152 1 83 1 137 1 130 1 103 1 131 1 119 1 210 1 143 2 132 1 46 1 49 1 76 1 67 3 247 1 
111 1 37 1 38 2 58 1 152 1 83 1 137 1 130 1 103 1 131 1 119 1 210 1 143 2 132 1 46 1 49 1 76 1 67 3 247 1 
111 1 93 1 38 1 55 1 39 1 58 1 152 1 83 1 137 1 26 1 103 1 119 1 143 1 46 1 67 2 230 1 247 1 
111 1 93 1 38 1 39 1 58 1 152 1 83 1 137 1 26 1 103 1 158 1 119 1 143 1 46 1 67 2 230 1 247 1 
111 1 93 1 38 1 2 1 58 1 152 1 83 1 137 1 42 1 26 1 103 1 119 1 143 1 46 1 147 1 67 2 230 1 247 1 
111 1 93 1 38 1 2 1 39 1 58 1 152 1 83 1 137 1 42 1 26 1 103 1 119 1 143 1 46 1 147 1 67 2 230 1 247 1 
81 1 111 1 103 1 26 1 119 1 58 2 46 1 67 3 137 1 247 2 
111 1 58 2 220 2 137 1 26 1 119 1 46 1 244 1 246 1 67 3 
111 1 26 1 119 2 58 1 244 1 220 1 46 1 47 1 67 2 137 1 
111 1 94 1 26 1 119 1 58 1 244 1 220 1 46 1 67 2 137 1 
81 1 111 1 26 1 119 2 58 3 244 1 220 1 46 1 67 2 137 2 
111 1 178 1 38 1 58 2 220 2 137 2 26 1 63 1 119 1 131 1 143 1 46 1 244 1 48 1 67 4 76 1 
9 1 74 1 142 3 
142 1 
207 1 184 1 236 1 205 1 80 1 
0 3 175 3 125 2 177 14 71 2 4 4 180 1 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 14 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 134 1 82 3 16 1 197 2 19 4 20 3 83 1 205 1 24 3 207 4 139 1 86 4 27 3 143 2 90 1 211 1 91 6 212 2 94 2 217 1 97 2 219 1 96 3 150 2 151 2 152 1 221 1 220 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 2 113 3 61 2 116 2 117 1 63 1 240 4 119 3 64 1 242 3 243 5 122 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
0 3 175 3 1 1 125 2 177 4 71 2 4 4 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 139 1 86 4 27 3 143 2 90 1 91 6 212 2 94 2 217 1 97 2 96 3 219 1 150 2 152 1 221 1 220 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 56 2 237 3 58 2 113 3 61 2 116 2 117 1 63 1 240 4 64 1 119 3 242 3 243 5 122 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
0 3 175 3 125 2 177 4 71 2 4 4 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 139 1 86 4 27 3 143 2 90 1 91 6 212 2 213 1 94 2 217 1 97 2 219 1 96 3 150 2 152 1 221 1 220 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 2 113 3 61 2 165 1 116 2 63 1 240 4 64 1 119 3 242 3 243 5 122 1 121 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
0 2 125 2 3 1 4 4 6 1 5 2 131 2 10 1 133 1 13 1 15 1 134 1 17 1 19 4 20 2 22 2 139 1 140 2 27 2 28 2 143 2 149 2 150 2 152 1 153 2 40 1 43 1 157 2 45 3 159 2 46 1 49 1 51 1 162 4 53 2 56 2 58 2 60 1 61 2 164 1 63 1 166 2 66 2 67 3 172 1 68 2 173 2 174 1 175 2 177 4 71 2 182 2 184 4 188 1 76 1 195 2 196 1 80 1 81 1 82 2 197 2 200 1 203 1 83 1 205 1 207 4 86 4 90 1 91 6 212 2 215 1 94 2 217 1 219 1 96 4 97 2 221 1 99 1 103 1 105 1 227 2 108 1 231 1 232 1 234 2 112 2 236 1 237 2 114 2 113 2 115 2 238 1 116 2 240 4 119 3 243 4 242 3 122 1 121 1 245 2 247 1 
0 3 175 3 125 2 177 4 71 2 179 1 4 4 128 1 182 2 5 2 184 4 131 2 10 1 133 1 13 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 139 1 86 4 27 3 143 2 90 1 91 6 212 2 94 2 217 1 97 2 96 3 219 1 150 2 152 1 220 1 221 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 2 113 3 61 2 116 2 63 1 240 4 64 1 119 3 242 3 243 5 121 1 122 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
177 8 4 4 181 2 182 2 184 4 73 1 10 1 131 2 133 1 13 1 76 1 196 1 78 4 80 1 81 1 17 1 134 1 199 1 19 2 83 1 136 2 205 1 23 1 207 4 139 1 143 2 144 1 90 1 91 4 34 2 214 2 94 2 35 1 217 1 219 1 150 2 152 1 220 1 221 1 99 1 156 4 45 4 105 1 46 1 108 1 48 1 109 2 232 1 51 1 236 1 58 2 62 2 63 1 240 2 65 1 119 3 242 4 167 1 121 1 122 1 123 4 170 3 169 2 244 1 246 1 67 3 174 1 
175 2 0 2 125 2 177 4 71 2 4 4 182 2 5 2 6 1 184 4 10 1 131 2 188 1 133 1 13 1 195 2 76 1 196 1 80 1 81 1 17 1 82 2 134 1 197 2 20 2 19 4 83 1 203 1 205 1 207 4 139 1 86 4 27 2 143 2 90 1 91 6 212 2 94 2 217 1 97 2 96 4 219 1 150 2 152 1 220 1 221 1 153 2 40 1 99 1 157 2 45 3 105 1 227 2 159 2 46 1 108 1 48 1 232 1 162 4 51 1 112 2 234 2 236 1 56 2 237 2 58 2 115 2 113 2 114 2 61 2 116 2 63 1 166 2 240 4 119 3 242 3 243 4 121 1 122 1 66 2 244 1 245 2 246 1 67 3 174 1 173 2 68 2 
0 3 175 3 125 2 177 4 71 2 4 4 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 194 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 138 1 139 1 86 4 27 3 143 2 90 1 91 6 212 2 94 2 217 1 97 2 219 1 96 3 150 2 152 1 221 1 220 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 2 113 3 61 2 116 2 117 1 63 1 240 4 64 1 119 4 242 3 243 5 121 1 122 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
0 3 175 3 125 2 177 4 178 1 71 2 4 4 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 76 1 195 3 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 138 1 139 1 86 4 27 3 143 2 90 1 91 6 212 3 94 2 217 1 97 2 219 1 96 3 150 2 152 1 221 1 220 2 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 3 113 3 61 2 116 2 117 1 63 1 240 4 64 1 119 5 242 3 243 5 121 1 122 1 66 2 244 1 246 1 67 4 174 1 173 3 68 3 
0 3 175 3 125 2 177 4 71 2 4 4 128 1 182 2 5 2 6 1 184 4 131 2 10 1 188 1 133 1 13 1 76 1 195 2 196 1 79 2 80 1 81 1 17 1 82 3 134 1 197 2 19 4 20 3 83 1 205 1 207 4 139 1 86 4 27 3 143 2 90 1 91 6 212 2 94 2 217 1 97 2 96 3 219 1 150 2 152 1 221 1 220 1 153 2 40 1 223 1 99 1 157 2 45 3 105 1 46 1 48 1 108 1 232 1 162 5 51 1 112 2 234 2 236 1 56 2 237 3 58 2 113 3 61 2 116 2 117 1 63 1 240 4 64 1 119 3 242 3 243 5 121 1 122 1 66 2 244 1 246 1 67 3 174 1 173 3 68 2 
236 1 99 1 205 1 207 4 139 1 184 4 105 1 121 1 122 1 246 1 90 1 80 1 
225 1 
175 2 0 2 125 2 177 4 71 2 4 4 182 2 5 2 6 1 184 4 10 1 131 2 188 1 133 1 13 1 195 2 76 1 196 1 80 1 81 1 17 1 82 2 134 1 197 2 20 2 19 4 83 1 203 1 205 1 207 4 139 1 86 4 27 2 143 2 90 1 91 6 212 2 94 2 217 1 97 2 96 4 219 1 150 2 152 1 220 1 221 1 153 2 40 1 99 1 157 2 45 3 105 1 227 2 159 2 46 1 108 1 48 1 232 1 162 4 51 1 112 2 234 2 236 1 56 2 237 2 58 2 115 2 113 2 114 2 61 2 116 2 63 1 166 2 240 4 119 3 242 3 243 4 121 1 122 1 66 2 244 1 245 2 246 1 67 3 174 1 173 2 68 2 
177 1 87 1 180 1 
102 1 177 1 
93 1 177 1 2 1 152 1 21 1 187 1 104 1 242 1 143 1 190 1 91 1 230 1 
93 1 177 1 143 1 190 1 152 1 91 1 230 1 
102 1 177 1 
239 1 177 1 242 1 143 1 152 1 91 1 
177 1 100 1 
177 1 120 1 
102 1 177 1 
177 1 120 1 
177 1 120 1 
177 1 168 1 11 1 123 1 
177 1 75 1 78 1 
51 1 36 1 58 1 220 1 241 1 119 1 226 1 46 1 169 1 244 1 192 1 33 1 193 1 67 2 
31 1 
51 1 36 1 57 1 58 1 220 1 119 1 46 1 169 1 244 1 192 1 33 1 193 1 67 2 
51 1 103 1 119 1 58 1 46 1 40 1 212 1 195 1 67 2 68 1 247 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 8 2 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
51 1 58 1 40 1 103 1 141 1 119 1 46 1 229 1 67 2 195 1 212 1 247 1 68 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 8 2 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 194 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 177 3 125 1 178 1 71 1 2 3 4 2 180 3 182 1 5 1 186 1 187 2 190 1 195 2 196 1 82 1 21 2 20 1 83 1 84 1 138 1 86 2 27 1 209 1 143 1 32 1 91 2 212 2 93 1 94 1 96 1 97 1 152 1 153 1 40 1 103 1 42 2 158 1 157 1 104 2 227 1 46 1 229 1 230 1 108 1 162 2 51 1 112 1 56 1 237 1 58 2 113 1 61 1 116 1 119 4 243 2 242 2 66 1 67 3 247 2 68 2 174 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 56 1 237 1 58 1 20 1 113 1 114 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
51 1 58 1 40 1 103 1 119 1 46 1 229 1 67 3 195 2 212 2 247 2 68 2 
175 2 0 2 177 4 125 2 71 2 3 1 4 4 182 2 5 2 131 1 76 1 195 1 196 1 15 1 17 1 82 2 197 2 200 1 19 4 20 2 83 1 22 2 138 1 86 4 140 2 27 2 28 2 143 2 91 6 149 2 212 1 215 1 94 2 217 1 96 2 97 2 150 2 152 1 221 1 153 2 40 1 103 1 43 1 157 2 45 3 159 2 46 1 49 1 231 1 51 1 162 4 234 2 112 2 53 2 56 2 58 1 237 2 113 2 60 1 61 2 238 1 164 1 116 2 240 4 119 2 242 3 243 4 66 2 172 1 67 3 174 1 247 1 68 1 173 2 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 8 2 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 177 2 125 1 71 1 4 2 182 1 5 1 131 1 76 1 195 1 17 1 82 1 197 1 19 2 20 1 22 1 86 2 140 1 27 1 28 1 143 1 91 3 149 1 212 1 94 1 217 1 96 1 97 1 150 1 221 1 153 1 40 1 103 1 157 1 45 3 159 1 46 1 49 1 51 1 162 2 234 1 112 1 53 1 56 1 58 1 237 1 113 1 61 1 164 1 116 1 240 2 119 1 243 2 66 1 67 3 247 1 68 1 173 1 
51 1 58 1 40 1 22 1 103 1 119 1 46 1 229 1 67 2 195 1 212 1 247 1 68 1 
0 1 175 1 125 1 177 2 71 1 4 2 182 1 5 1 131 1 76 1 17 1 82 1 197 1 20 1 19 2 22 1 86 2 140 1 27 1 28 1 143 1 91 3 149 1 94 1 217 1 96 2 97 1 150 1 221 1 153 1 157 1 45 3 159 1 227 1 48 1 162 2 234 1 112 1 53 1 56 1 237 1 114 1 113 1 115 1 61 1 164 1 116 1 240 2 166 1 243 2 66 1 246 1 245 1 67 1 173 1 
175 1 0 1 177 2 125 1 71 1 4 2 182 1 5 1 131 1 76 1 195 1 194 1 17 1 82 1 197 1 19 2 20 1 22 1 86 2 140 1 27 1 28 1 143 1 91 3 149 1 212 1 94 1 217 1 96 1 97 1 150 1 221 1 153 1 40 1 103 1 157 1 45 3 159 1 46 1 49 1 51 1 162 2 234 1 112 1 53 1 56 1 58 1 237 1 113 1 61 1 164 1 116 1 240 2 119 1 243 2 66 1 67 3 247 1 68 1 173 1 
175 1 0 1 177 2 125 1 71 1 4 2 182 1 5 1 131 1 76 1 195 1 194 1 17 1 82 1 197 1 19 2 20 1 22 1 86 2 140 1 27 1 28 1 143 1 91 3 149 1 212 1 94 1 217 1 96 1 97 1 150 1 221 1 220 1 153 1 40 1 157 1 45 3 159 1 46 1 48 1 51 1 162 2 234 1 112 1 53 1 56 1 58 1 237 1 113 1 61 1 164 1 116 1 240 2 119 1 243 2 244 1 66 1 246 1 67 3 68 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 2 153 1 40 1 103 1 157 1 227 1 46 1 229 1 195 1 82 1 51 1 162 2 112 1 56 1 58 1 237 1 20 1 115 1 113 1 114 1 61 1 116 1 86 2 166 1 119 1 27 1 243 2 245 1 212 1 67 2 173 1 68 1 247 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 56 1 237 1 58 1 20 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 97 1 96 1 4 2 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 114 1 61 1 116 1 86 2 166 1 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
177 1 240 1 159 1 19 1 107 1 
177 1 234 1 240 1 19 1 107 1 
177 1 240 1 202 1 159 1 19 1 161 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 177 2 125 1 71 1 2 4 4 2 182 1 5 1 187 3 190 1 195 1 196 1 82 1 197 1 19 2 21 3 20 1 83 1 86 2 27 1 143 1 91 3 212 1 93 1 94 1 96 2 97 1 150 1 152 1 153 1 40 1 103 1 42 1 157 1 104 3 227 1 159 1 46 1 229 1 108 1 230 1 51 1 162 2 234 1 112 1 56 1 58 1 237 1 115 1 113 1 114 1 61 1 116 1 240 2 166 1 119 2 243 2 242 3 66 1 245 1 67 2 173 1 247 1 68 1 174 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 194 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 8 2 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 8 2 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
175 1 0 1 125 1 71 1 96 1 97 1 4 3 153 1 40 1 102 1 103 1 157 1 46 1 195 1 162 2 51 1 82 1 112 1 56 1 58 1 237 1 20 1 113 1 61 1 116 1 86 3 119 1 27 1 243 2 212 1 67 2 68 1 247 1 173 1 
51 1 58 1 40 1 103 1 119 1 46 1 229 1 67 3 195 2 212 2 247 2 68 2 
175 1 0 1 125 1 71 1 96 2 97 1 4 3 153 1 40 1 102 1 103 1 157 1 227 1 46 1 229 1 195 1 162 2 51 1 82 1 112 1 197 1 56 1 237 1 58 1 20 1 115 1 113 1 114 1 61 1 116 1 86 3 166 1 119 1 27 1 243 2 245 1 212 1 67 2 68 1 247 1 173 1 
93 1 215 1 177 4 94 1 2 3 126 1 218 1 152 1 180 3 182 1 5 1 101 1 103 1 42 1 185 1 187 2 224 1 44 1 104 2 46 1 12 1 77 1 230 1 196 1 51 1 53 1 54 1 58 1 21 2 118 1 140 1 119 1 28 1 242 2 143 1 169 1 66 1 145 1 89 1 91 2 149 1 67 2 247 1 174 1 
93 1 177 4 94 1 37 1 2 3 218 1 152 1 180 3 182 1 5 1 130 1 101 1 103 1 42 1 131 1 187 2 224 1 104 2 132 1 46 1 77 1 230 1 108 1 196 1 51 1 54 1 55 1 58 1 21 2 83 1 119 2 210 1 242 2 143 1 66 1 169 1 89 1 91 2 67 2 247 1 174 1 
0 3 175 3 125 1 71 1 97 1 96 3 4 2 153 1 40 1 128 2 223 1 103 1 157 1 46 1 194 1 195 1 233 1 162 4 82 3 51 1 112 1 197 1 56 1 237 3 58 1 20 3 113 3 61 1 116 1 86 2 119 1 64 1 27 3 243 4 67 2 212 1 173 3 247 1 68 1 
0 1 175 1 96 1 40 1 128 1 223 1 103 1 46 1 195 1 162 1 82 1 51 1 237 1 58 1 20 1 113 1 119 1 64 1 27 1 243 1 67 2 212 1 173 1 247 1 68 1 
0 3 175 3 96 3 40 1 128 3 223 1 103 1 46 1 195 1 50 1 162 3 82 3 51 1 237 3 58 1 20 3 113 3 119 1 64 1 27 3 243 3 67 2 212 1 173 3 247 1 68 1 
0 1 175 1 96 1 40 1 128 1 223 1 103 1 46 1 195 1 162 1 82 1 51 1 237 1 58 1 20 1 113 1 206 1 119 1 64 1 27 1 243 1 67 2 212 1 173 1 247 1 68 1 
51 1 58 1 40 1 223 1 128 1 206 1 103 1 119 1 46 1 67 2 195 1 212 1 247 1 68 1 
0 1 175 1 92 1 177 1 96 1 40 1 128 1 223 1 102 1 103 1 46 1 107 1 195 1 79 1 162 1 82 1 51 1 237 1 58 1 19 1 20 1 113 1 240 1 119 1 64 1 27 1 243 1 67 2 212 1 173 1 247 1 68 1 
85 1 176 1 204 1 67 1 
176 1 67 1 110 1 
29 1 201 2 67 1 127 1 
7 1 72 1 29 1 67 1 127 1 
176 1 163 1 
215 1 53 1 235 1 152 1 140 1 28 1 143 1 
42 1 187 1 2 1 104 1 242 1 21 1 
143 1 152 1 196 1 174 1 
42 1 187 1 2 1 104 1 242 1 190 1 21 1 
162 1 102 1 177 1 86 1 71 1 4 1 
162 1 237 1 
102 1 177 1 86 1 4 1 
233 1 162 2 86 1 71 1 4 1 237 1 160 1 
162 1 237 1 
220 1 
244 1 
220 1 
247 1 
247 1 
103 1 
69 2 51 1 177 1 135 1 95 1 4 2 58 1 220 1 98 1 183 1 41 1 102 1 25 1 119 1 189 1 46 1 169 1 244 1 67 2 78 1 
222 1 
51 1 135 1 95 1 58 1 59 1 220 1 98 1 183 1 41 1 119 1 189 1 46 1 169 1 244 1 67 2 
69 1 51 1 177 3 135 1 95 1 4 1 58 1 220 1 98 1 183 1 41 1 102 1 25 1 119 1 189 1 46 1 169 1 244 1 67 2 78 2 
183 1 51 1 41 1 135 1 208 1 119 1 95 1 189 1 58 1 244 1 169 1 220 1 46 1 98 1 67 2 
51 2 135 2 95 2 57 1 58 2 220 2 98 2 155 1 183 2 41 2 208 1 119 2 189 2 46 2 169 2 244 2 67 4 
51 1 135 1 95 1 58 1 220 1 98 1 206 1 183 1 41 1 119 1 189 1 46 1 169 1 244 1 67 2 
51 2 135 2 95 2 58 2 59 1 220 2 98 2 183 2 41 2 208 1 119 2 189 2 46 2 169 2 244 2 67 4 
51 1 135 1 95 1 57 1 58 1 220 1 98 1 155 1 183 1 41 1 119 1 189 1 46 1 169 1 244 1 67 2 
102 1 52 1 177 2 180 2 
102 1 177 2 18 1 180 2 
69 1 177 2 94 1 217 1 95 1 4 1 220 1 221 1 98 1 180 2 222 1 182 1 5 1 183 1 41 1 131 1 45 2 189 1 46 1 76 1 48 1 17 1 51 1 52 1 53 1 135 1 198 1 18 1 58 1 59 1 164 1 138 1 25 1 140 1 119 2 28 1 143 1 66 1 244 1 169 1 91 2 149 1 67 3 
51 1 41 1 57 1 46 1 155 1 
69 1 93 1 177 3 94 1 2 4 95 1 4 1 220 1 152 1 98 1 180 2 222 1 182 1 5 1 183 1 41 1 42 1 187 3 104 3 189 1 190 1 46 1 108 1 230 1 196 1 78 1 51 1 52 1 135 1 18 1 58 1 21 3 83 1 138 1 25 1 119 3 242 3 143 1 123 1 66 1 244 1 169 1 91 2 67 2 174 1 
51 1 177 2 35 1 199 1 4 2 58 1 220 1 62 1 23 1 156 2 102 1 119 1 65 1 168 1 170 1 46 1 169 1 244 1 67 2 78 1 
214 1 177 2 35 1 216 1 4 1 220 1 181 1 156 1 75 1 46 1 78 1 233 1 51 1 199 1 58 1 19 1 136 1 23 1 240 1 65 1 119 1 244 1 169 1 170 2 67 2 
181 1 
214 1 177 3 94 1 35 1 217 1 4 2 150 1 220 1 221 1 181 1 182 1 129 1 156 2 131 1 45 4 46 1 76 1 48 1 109 1 78 2 17 1 51 1 53 1 199 1 58 1 19 1 136 1 62 1 23 1 164 1 138 1 140 1 240 1 65 1 119 2 28 1 143 1 123 2 244 1 169 1 170 2 91 2 149 1 67 3 34 1 
35 1 65 1 199 1 57 1 170 1 23 1 
177 3 2 5 4 2 181 1 182 1 187 4 190 1 78 2 196 1 199 1 21 4 19 1 83 1 136 1 23 1 138 1 143 1 91 2 34 1 93 1 214 1 94 1 35 1 150 1 152 1 220 1 156 2 42 1 104 4 46 1 109 1 230 1 108 1 51 1 58 1 62 1 240 1 119 3 65 1 242 4 170 2 169 1 244 1 123 2 67 2 174 1 
35 1 65 1 199 1 57 1 170 1 23 1 
177 2 35 1 4 2 220 1 129 1 156 2 102 1 46 1 228 1 78 1 51 1 58 1 62 1 65 1 119 1 168 1 244 1 169 1 170 1 146 1 67 2 
93 1 177 1 94 1 35 1 2 3 4 1 220 1 152 1 181 1 182 1 156 1 42 1 187 2 104 2 190 1 46 1 108 1 230 1 109 1 196 1 78 1 51 1 199 1 58 1 21 2 83 1 62 1 23 1 138 1 65 1 119 3 242 2 143 1 123 1 244 1 169 1 170 1 91 1 67 2 34 1 174 1 
233 1 156 1 214 1 4 1 170 1 136 1 
102 1 109 1 
102 1 34 1 
214 1 51 1 177 2 35 1 199 1 4 1 58 1 19 1 220 1 136 1 181 1 23 1 156 1 240 1 119 1 65 1 170 2 46 1 169 1 244 1 67 2 78 1 

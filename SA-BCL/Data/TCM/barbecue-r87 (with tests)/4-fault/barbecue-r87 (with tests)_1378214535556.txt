#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V ERROR java.lang.NullPointerException 109 
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V ERROR java.lang.NullPointerException 109 
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V ERROR java.lang.NullPointerException 109 
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V ERROR java.lang.NullPointerException 109 
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 12 74 219 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 22310 | 2 -> 1
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V | ASSIGN | 13273 | = null
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5041 | return null
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z | CONDITION | 6089 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
90 1 171 1 179 1 153 1 163 1 22 1 
171 1 179 1 153 1 163 1 22 1 
89 1 4 2 107 1 
72 2 152 1 27 1 127 2 111 1 197 1 223 1 80 1 96 1 97 1 23 1 
72 1 152 1 127 3 7 4 111 1 145 1 197 1 223 1 80 1 96 1 23 1 134 1 182 1 250 1 103 1 161 1 163 1 55 1 
72 1 169 1 152 1 127 2 111 1 197 1 223 1 80 1 96 1 23 1 133 1 
80 2 223 2 197 1 72 1 96 1 152 1 23 1 127 2 77 1 111 3 
72 2 152 1 189 1 126 1 127 4 7 1 111 2 197 1 223 2 80 1 96 1 23 1 134 1 250 1 163 1 55 1 
197 1 96 1 152 1 5 1 
72 1 152 1 127 2 155 1 111 1 197 1 223 1 80 2 96 1 23 1 139 1 
72 1 152 1 236 1 186 1 127 3 7 1 109 1 111 1 112 1 223 1 80 1 96 1 210 1 23 1 134 1 250 1 163 1 55 1 
72 1 152 1 236 1 186 1 127 3 7 1 76 1 111 1 22 1 112 1 223 1 80 1 96 1 210 1 23 1 134 1 250 2 163 2 55 1 
80 1 223 1 197 1 42 1 72 1 96 1 152 1 23 1 127 2 109 1 26 1 111 1 
80 1 223 1 197 1 42 1 72 1 96 1 152 1 23 1 127 2 109 1 26 1 111 1 
72 1 42 1 152 1 127 2 48 1 76 1 111 1 22 1 247 1 197 1 223 1 80 1 96 1 23 1 176 1 250 1 163 1 26 1 
247 1 80 1 223 1 197 1 42 1 72 1 96 1 152 1 23 1 127 2 109 1 26 1 111 1 
80 1 223 1 197 1 72 2 96 1 152 1 23 1 127 3 77 1 111 2 
152 1 127 3 47 2 111 2 197 1 223 1 80 1 96 1 198 1 99 1 
80 2 223 1 197 1 96 1 152 1 99 1 127 2 68 1 47 1 111 1 
80 1 223 1 197 1 96 1 152 1 99 1 127 2 47 1 196 1 111 1 
152 1 236 1 186 1 127 3 7 1 47 1 111 1 112 1 197 1 223 1 80 1 146 1 96 1 210 1 99 1 250 1 163 1 55 1 
152 1 126 1 127 3 29 1 7 2 47 1 111 1 197 1 223 1 80 1 146 1 96 1 99 1 250 1 163 1 55 1 
193 1 87 1 20 3 
20 1 
12 1 16 1 18 1 36 1 74 1 
123 2 122 1 126 1 127 3 7 2 128 2 9 1 11 1 12 1 132 1 134 1 137 3 136 1 138 3 16 4 18 1 142 2 22 1 23 1 147 1 148 2 151 1 152 1 28 1 153 2 29 1 31 1 32 1 35 1 36 4 159 1 158 1 37 1 163 2 39 3 165 2 170 6 50 3 52 2 177 3 178 1 181 1 180 3 54 2 55 1 57 2 194 1 196 2 62 3 63 2 199 2 67 2 201 5 72 1 71 1 202 1 203 3 73 1 74 1 208 2 77 1 75 3 76 1 79 2 80 3 82 2 213 2 83 1 214 1 218 1 91 1 94 2 222 1 95 1 227 3 228 3 229 14 230 2 231 4 105 2 237 1 239 3 243 2 108 4 111 2 245 1 113 1 117 4 118 1 119 5 120 1 254 4 
123 2 122 1 126 1 127 3 7 2 128 2 194 1 9 1 196 2 62 3 63 2 12 1 132 1 67 2 199 2 134 1 135 1 136 1 137 3 138 3 201 5 71 1 72 1 202 1 16 4 73 1 18 1 142 2 208 2 76 1 75 3 77 1 22 1 80 3 23 1 147 1 82 2 213 2 148 2 214 1 151 1 152 1 28 1 218 1 153 2 91 1 29 1 32 1 94 2 31 1 222 1 95 1 228 3 227 3 229 4 35 1 230 2 36 4 231 4 159 1 158 1 37 1 163 2 39 3 165 2 105 2 237 1 170 6 239 3 243 2 108 4 50 3 111 2 117 4 52 2 118 1 177 3 178 1 119 5 180 3 181 1 120 1 54 2 254 4 55 1 57 2 
122 1 123 4 126 1 127 7 7 2 128 2 9 1 12 1 132 1 134 1 137 3 136 1 138 3 16 4 18 1 142 2 22 1 23 3 147 1 148 2 150 2 151 1 152 3 28 1 153 2 29 1 31 1 32 1 35 1 36 4 159 1 158 1 37 1 163 2 162 2 39 3 165 2 170 6 46 2 50 3 175 2 52 2 177 3 178 1 181 1 180 3 54 2 55 1 57 2 194 1 196 2 62 3 61 1 64 1 63 2 199 2 67 2 201 5 72 3 71 1 202 1 73 1 74 1 206 2 208 2 77 1 75 3 76 1 80 5 82 4 213 2 214 1 84 1 85 2 218 1 91 3 219 1 221 1 94 2 222 3 95 1 227 5 228 3 229 6 230 2 231 4 105 2 239 3 243 4 108 6 110 1 111 4 117 6 118 1 119 5 120 1 254 4 
123 2 122 1 126 1 127 3 7 2 128 2 9 1 196 2 62 2 63 2 64 1 12 1 67 2 134 1 199 2 136 1 137 2 138 2 201 4 72 1 71 1 16 4 18 1 142 2 74 1 206 2 208 2 76 1 75 3 77 1 22 1 80 3 23 1 82 2 147 1 213 2 148 2 214 1 84 1 85 2 150 2 151 1 217 1 152 1 218 1 91 1 153 2 29 1 32 1 31 1 222 1 95 1 228 2 227 4 229 4 35 1 36 4 230 2 231 4 159 1 158 1 37 1 162 2 163 2 39 3 235 1 165 2 105 2 239 2 170 6 243 2 46 2 108 4 50 2 111 2 175 2 117 4 52 2 118 1 177 2 178 1 180 2 119 4 120 1 181 1 54 2 254 4 55 1 57 2 
123 3 122 1 126 1 189 1 127 4 7 2 128 2 9 1 196 2 62 3 63 2 64 1 12 1 132 1 67 2 199 2 134 1 136 1 137 3 138 3 201 5 71 1 72 2 202 1 16 4 73 1 18 1 142 2 74 1 208 2 76 1 75 3 77 1 22 1 80 5 23 1 147 1 82 3 213 2 148 2 214 1 151 1 217 1 152 1 218 1 153 2 91 1 29 1 32 1 94 2 31 1 155 1 222 1 95 1 228 3 227 3 229 4 35 1 230 2 36 4 231 4 158 1 159 1 37 1 163 2 39 3 165 2 105 2 237 1 170 6 239 3 243 3 108 4 50 3 111 4 117 4 52 2 118 1 177 3 178 1 119 5 180 3 120 1 181 1 54 2 254 4 55 1 57 2 
123 2 122 1 126 1 127 3 7 2 128 2 9 1 196 2 62 3 63 2 64 1 12 1 132 1 67 2 199 2 134 1 136 1 137 3 138 3 201 5 71 1 72 1 202 1 16 4 73 1 18 1 142 2 74 1 208 2 76 1 75 3 77 1 22 1 80 3 23 1 147 1 82 2 213 2 148 2 214 1 151 1 217 1 152 1 218 1 153 2 91 1 29 1 32 1 94 2 31 1 222 1 95 1 228 3 227 3 229 4 35 1 230 2 36 4 231 4 159 1 158 1 37 1 163 2 39 3 165 2 105 2 237 1 170 6 239 3 243 2 108 4 50 3 111 2 117 4 52 2 118 1 177 3 178 1 119 5 180 3 120 1 181 1 54 2 254 4 55 1 57 2 
64 1 71 1 12 1 147 1 16 4 178 1 18 1 181 1 36 4 74 1 31 1 
123 2 122 1 2 1 126 1 127 3 7 2 128 2 194 1 9 1 196 2 62 3 63 2 64 1 12 1 132 1 67 2 199 2 134 1 136 1 137 3 138 3 201 5 71 1 72 1 202 1 16 4 73 1 18 1 142 2 74 1 208 2 76 1 75 3 77 1 22 1 80 3 23 1 147 1 82 2 213 2 148 2 214 1 151 1 152 1 28 1 218 1 153 2 91 1 29 1 32 1 94 2 31 1 222 1 95 1 228 3 227 3 229 4 35 1 230 2 36 4 231 4 159 1 158 1 37 1 163 2 39 3 165 2 105 2 170 6 239 3 243 2 108 4 50 3 111 2 117 4 52 2 177 3 178 1 119 5 180 3 181 1 54 2 254 4 55 1 57 2 
122 1 126 1 127 3 7 3 9 1 59 2 196 2 64 1 130 1 12 1 134 1 199 2 136 1 200 1 71 1 72 1 16 4 18 1 205 1 74 1 19 2 143 2 76 1 75 2 77 1 22 1 80 3 23 1 147 1 214 1 151 1 217 1 152 1 218 1 91 1 220 2 29 2 32 1 93 2 31 1 95 1 229 4 35 1 36 4 159 1 158 1 37 1 160 2 163 2 164 1 39 2 168 1 170 2 45 2 244 2 111 2 246 1 53 1 178 1 181 1 254 2 56 1 55 1 
123 2 122 1 126 1 127 4 7 2 128 2 9 1 196 2 62 2 63 2 64 1 12 1 67 2 134 1 199 2 136 1 137 2 138 2 201 4 72 1 71 1 16 4 18 1 142 2 74 1 206 2 208 2 76 1 75 3 77 1 22 1 80 3 23 1 82 2 147 1 213 2 148 2 214 1 84 1 85 2 150 2 151 1 152 1 218 1 91 1 153 2 29 1 32 1 31 1 222 1 95 1 228 2 227 4 229 4 35 1 36 4 230 2 231 4 159 1 158 1 37 1 162 2 163 2 39 3 165 2 105 2 239 2 170 6 243 2 46 2 108 4 50 2 111 2 175 2 117 4 52 2 118 1 177 2 178 1 180 2 119 4 120 1 181 1 54 2 254 4 55 1 57 2 
122 1 123 2 126 1 127 3 7 3 128 2 9 1 12 1 132 1 134 1 137 3 136 1 138 3 16 4 18 1 142 2 22 1 23 1 147 1 148 2 151 1 152 1 28 1 153 2 29 2 155 1 31 1 32 1 35 1 36 4 158 1 159 1 37 1 163 2 39 3 165 2 170 6 49 1 50 3 52 2 177 3 178 1 181 1 180 3 54 2 55 1 57 2 194 1 196 2 62 3 64 1 63 2 199 2 67 2 201 5 72 1 71 1 202 1 73 1 74 1 208 2 77 1 75 3 76 1 80 4 82 2 213 2 214 1 217 1 218 1 91 1 94 2 222 1 95 1 227 3 228 3 229 4 230 2 231 4 105 2 237 1 239 3 243 2 108 4 111 2 117 4 118 1 120 1 119 5 254 4 
123 2 122 1 126 1 127 3 7 2 128 2 9 1 196 2 62 2 63 2 64 1 12 1 198 1 67 2 199 2 136 1 137 2 138 2 201 4 71 1 16 4 18 1 142 2 74 1 206 2 208 2 76 1 75 3 77 1 22 1 80 3 146 1 147 1 82 2 213 2 148 2 214 1 84 1 85 2 150 2 151 1 217 1 152 1 218 1 153 2 91 1 29 1 32 1 31 1 222 1 95 1 228 2 227 4 99 1 229 4 35 1 230 2 36 4 231 4 159 1 158 1 37 1 162 2 163 2 39 3 235 1 165 2 105 2 239 2 170 6 243 2 46 2 47 1 108 4 50 2 111 2 175 2 117 4 52 2 118 1 177 2 178 1 180 2 119 4 120 1 181 1 54 2 254 4 55 1 57 2 
253 1 
70 1 229 1 245 1 
114 1 229 1 
225 1 229 1 
225 1 229 1 
121 1 247 1 42 1 211 1 17 1 170 1 229 1 192 1 163 1 26 1 39 1 22 1 
42 1 170 1 229 1 192 1 163 1 26 1 22 1 
170 1 229 1 101 1 163 1 39 1 22 1 
114 1 229 1 
114 1 229 1 
106 1 229 1 
225 1 229 1 
229 1 25 1 19 1 
141 1 229 1 212 1 143 1 
1 2 72 1 152 1 188 1 91 1 127 2 45 1 111 1 114 1 80 1 65 1 115 1 23 1 229 2 102 1 104 1 254 2 
21 1 
65 1 80 1 115 1 72 1 152 1 23 1 5 1 91 1 127 2 45 1 102 1 104 1 111 1 
80 1 72 1 123 1 152 1 23 1 82 1 91 1 127 2 243 1 111 1 222 1 
0 1 123 1 127 3 7 1 128 1 196 1 62 1 63 1 66 1 199 1 134 1 67 1 137 1 69 1 138 1 14 1 201 2 72 1 142 1 208 1 75 3 80 1 23 1 82 1 213 1 214 1 148 1 150 1 152 1 91 1 153 1 30 1 29 1 222 1 95 1 227 1 228 1 229 2 230 1 231 2 163 1 165 1 105 1 170 3 239 1 241 1 243 1 108 2 50 1 111 1 117 2 52 1 177 1 180 1 119 2 54 1 55 1 254 2 57 1 
72 1 152 1 123 1 3 1 91 1 127 2 243 1 222 1 111 1 80 1 23 1 82 1 69 1 
0 1 127 1 7 1 128 1 196 1 62 1 63 1 66 1 198 1 199 1 67 1 137 1 69 1 138 1 14 1 201 2 142 1 206 1 208 1 75 3 146 1 213 1 148 1 214 1 150 1 85 1 153 1 30 1 29 1 95 1 227 2 228 1 229 2 230 1 231 2 163 1 162 1 165 1 105 1 239 1 170 3 241 1 46 1 108 2 50 1 175 1 117 2 52 1 177 1 119 2 180 1 54 1 55 1 254 2 57 1 
0 1 123 1 127 3 7 1 128 1 196 1 62 1 63 1 66 1 67 1 199 1 134 1 137 1 69 1 138 1 14 1 201 2 72 1 142 1 208 1 75 3 80 1 23 1 82 1 213 1 214 1 148 1 150 1 152 1 91 1 153 1 30 1 29 1 222 1 95 1 227 1 228 1 229 2 230 1 231 2 163 1 165 1 105 1 170 3 239 1 241 1 243 1 108 2 49 1 50 1 111 1 117 2 52 1 177 1 180 1 119 2 54 1 55 1 254 2 57 1 
0 1 123 1 127 3 7 1 128 1 196 1 62 1 63 1 66 1 198 1 67 1 199 1 137 1 69 1 138 1 14 1 201 2 142 1 208 1 75 3 80 1 146 1 82 1 213 1 214 1 148 1 150 1 152 1 91 1 153 1 30 1 29 1 222 1 95 1 227 1 228 1 229 2 99 1 230 1 231 2 163 1 165 1 105 1 170 3 239 1 241 1 243 1 108 2 47 1 49 1 50 1 111 1 117 2 52 1 177 1 180 1 119 2 54 1 55 1 254 2 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 228 1 227 2 67 1 137 1 231 2 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 50 1 111 1 80 1 175 1 23 1 52 1 177 1 82 1 148 1 180 1 119 2 54 1 85 1 254 2 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 46 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 2 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 2 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
117 1 229 1 100 1 150 1 108 1 
165 1 117 1 229 1 100 1 108 1 
117 1 229 1 150 1 108 1 38 1 33 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
121 3 123 1 3 1 192 1 127 2 128 1 196 1 62 1 63 1 67 1 199 1 136 1 137 1 138 1 201 2 72 1 17 3 142 1 206 1 208 1 76 1 22 1 80 2 23 1 82 1 211 3 213 1 148 1 85 1 150 1 26 1 152 1 218 1 91 1 153 1 32 1 222 1 228 1 227 2 229 2 230 1 231 2 163 1 162 1 39 3 165 1 42 1 105 1 170 3 239 1 243 1 46 1 108 2 50 1 111 1 247 4 175 1 117 2 52 1 177 1 176 1 180 1 119 2 54 1 254 2 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 49 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
124 2 123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
124 2 123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
124 2 123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
72 1 152 1 123 1 3 1 91 1 127 2 243 1 222 1 111 1 80 1 131 1 23 1 82 1 
124 2 123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 49 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 201 2 72 1 105 1 239 1 142 1 243 1 208 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
121 2 123 2 3 1 189 1 192 1 127 3 8 1 128 1 195 1 196 1 62 1 63 1 67 1 199 1 137 1 136 1 138 1 201 2 72 2 17 2 142 1 76 1 22 1 80 4 23 1 82 2 211 2 213 1 148 1 26 1 152 1 218 1 91 1 92 1 32 1 155 1 222 1 227 1 228 1 229 3 230 1 231 2 233 1 163 1 39 2 42 1 105 1 170 2 239 1 243 2 46 1 50 1 245 3 111 2 174 1 247 3 52 1 176 2 177 1 119 2 180 1 54 1 254 2 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 46 1 50 1 111 1 114 1 80 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
72 2 152 1 123 2 3 1 91 1 127 3 243 2 222 1 111 1 80 1 23 1 82 2 
0 1 123 1 127 3 7 1 128 2 196 2 62 2 63 2 66 2 67 2 199 2 134 1 136 1 137 2 69 2 138 2 14 2 201 4 72 1 142 2 208 2 76 1 75 3 78 1 209 1 22 1 80 2 23 1 82 1 213 2 214 1 148 2 150 2 216 1 152 1 91 1 153 2 30 2 29 1 32 1 155 1 222 1 95 1 224 1 226 1 227 2 228 2 229 4 157 1 230 2 231 4 163 2 39 3 165 2 41 1 105 2 170 6 239 2 240 1 241 2 243 1 108 4 50 2 111 1 117 4 52 2 177 2 180 2 119 4 54 2 55 1 254 4 185 1 57 2 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 1 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
124 2 123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
72 2 152 1 123 2 3 1 91 1 127 3 243 2 222 1 111 1 80 1 23 1 82 2 
123 1 152 1 3 1 91 1 127 2 128 1 222 1 62 1 63 1 227 2 228 1 67 1 137 1 231 3 138 1 162 1 201 2 72 1 105 1 239 1 142 1 243 1 206 1 46 1 208 1 50 1 111 1 114 1 80 1 175 1 23 1 52 1 82 1 177 1 148 1 119 2 180 1 54 1 85 1 254 3 57 1 
121 2 88 1 152 1 125 1 91 1 127 2 30 1 32 1 196 1 156 1 66 1 229 4 133 1 199 1 230 1 136 1 163 1 14 1 39 2 15 1 166 1 41 1 169 1 42 1 72 1 140 1 17 2 170 2 242 1 241 1 45 1 111 1 245 3 22 1 247 3 80 1 116 1 23 1 211 2 176 1 213 1 86 1 26 1 184 1 
121 2 88 1 186 1 152 1 218 1 91 1 127 2 7 1 32 1 196 1 229 4 199 1 230 1 136 1 163 1 39 2 166 1 72 1 42 1 236 1 140 1 17 2 170 2 172 1 45 1 76 1 111 1 245 3 22 1 112 1 247 3 80 2 210 1 116 1 23 1 211 2 176 1 213 1 86 1 26 1 184 1 
72 1 123 1 152 1 202 1 239 1 73 1 91 1 127 2 243 1 111 1 222 1 50 1 62 1 80 1 227 1 228 1 23 1 132 1 82 1 177 1 180 1 119 1 137 1 138 1 201 1 
152 1 123 1 4 1 91 1 127 2 128 1 222 1 62 3 63 1 228 3 227 3 132 2 67 1 137 3 231 2 138 3 201 4 72 1 105 1 202 1 239 3 73 1 142 1 243 1 208 1 49 1 50 3 111 1 80 1 52 1 23 1 177 3 82 1 148 1 119 4 180 3 54 1 254 2 57 1 
152 1 123 1 91 1 127 2 222 1 62 3 228 3 227 3 132 3 137 3 138 3 201 3 72 1 202 1 239 3 73 1 243 1 50 3 111 1 80 1 23 1 177 3 82 1 215 1 119 3 180 3 
152 1 123 1 91 1 127 2 222 1 62 1 228 1 227 1 97 1 132 1 137 1 138 1 201 1 72 1 202 1 239 1 73 1 243 1 50 1 111 1 80 1 23 1 177 1 82 1 119 1 180 1 
72 1 152 1 123 1 202 1 91 1 127 2 243 1 222 1 111 1 80 1 97 1 132 1 23 1 82 1 
152 1 123 1 190 1 91 1 127 2 94 1 222 1 62 1 228 1 227 1 132 1 229 1 100 1 137 1 138 1 201 1 72 1 202 1 239 1 73 1 243 1 108 1 50 1 111 1 114 1 80 1 117 1 23 1 177 1 82 1 119 1 180 1 
248 1 127 1 44 1 
27 1 58 2 127 1 154 1 
43 1 127 1 44 1 10 1 
27 1 127 1 149 1 207 1 154 1 
249 1 44 1 
41 1 66 1 241 1 30 1 163 1 234 1 22 1 
136 1 32 1 163 1 22 1 
121 1 247 1 176 1 211 1 17 1 39 1 
121 1 247 1 176 1 211 1 17 1 192 1 39 1 
114 1 229 1 119 1 142 1 231 1 254 1 
119 1 137 1 
114 1 229 1 231 1 254 1 
98 1 4 1 119 2 142 1 137 1 231 1 254 1 
119 1 137 1 
47 1 
99 1 
47 1 
72 1 
72 1 
23 1 
40 1 152 1 91 1 6 1 127 2 45 1 19 2 144 1 47 1 111 1 51 1 129 1 114 1 80 1 34 1 229 3 99 1 232 1 251 1 254 1 
40 1 167 1 152 1 91 1 6 1 127 2 45 1 144 1 47 1 111 1 51 1 129 1 80 1 99 1 251 1 
40 2 167 1 152 2 5 1 91 2 6 2 127 4 45 2 144 2 47 2 111 2 60 1 51 2 129 2 80 2 99 2 251 2 
40 1 152 1 91 1 6 1 127 2 45 1 19 1 144 1 47 1 111 1 51 1 129 1 114 1 80 1 34 2 229 1 99 1 232 1 251 1 254 2 
81 1 
40 1 152 1 204 1 91 1 6 1 127 2 45 1 144 1 47 1 111 1 51 1 129 1 80 1 99 1 251 1 
40 1 152 1 5 1 91 1 6 1 127 2 45 1 144 1 47 1 111 1 51 1 60 1 129 1 80 1 99 1 251 1 
40 1 152 1 91 1 6 1 127 2 45 1 144 1 47 1 111 1 51 1 129 1 80 1 97 1 99 1 251 1 
40 2 167 1 152 2 204 1 91 2 6 2 127 4 45 2 144 2 47 2 111 2 51 2 129 2 80 2 99 2 251 2 
114 1 229 2 24 1 245 2 
114 1 229 2 173 1 245 2 
0 1 152 1 6 1 91 1 127 3 30 1 29 1 7 1 196 1 155 1 129 1 95 1 66 1 34 1 13 1 229 2 99 1 199 1 230 1 232 1 163 1 14 1 40 1 170 2 204 1 241 1 173 1 45 1 47 1 144 1 75 2 111 1 245 2 51 1 80 2 146 1 81 1 213 1 24 1 214 1 251 1 254 1 55 1 
152 1 5 1 91 1 144 1 60 1 
121 3 152 1 218 1 6 1 91 1 192 1 127 2 32 1 196 1 155 1 129 1 34 1 229 3 99 1 199 1 230 1 136 1 232 1 163 1 39 3 40 1 42 1 17 3 170 2 173 1 45 1 19 1 143 1 47 1 144 1 76 1 111 1 245 2 51 1 22 1 247 4 80 3 81 1 211 3 176 1 213 1 24 1 251 1 26 1 254 1 
152 1 4 1 91 1 191 1 127 2 220 1 99 1 229 2 160 1 164 1 168 1 107 1 205 1 45 1 47 1 108 1 19 1 111 1 246 1 80 1 117 1 53 2 25 1 252 1 254 1 
160 1 
0 1 152 1 187 1 191 1 153 1 91 1 127 3 30 1 220 2 29 1 7 1 155 1 93 1 59 1 196 1 95 1 66 1 229 3 99 1 199 1 160 1 163 1 164 1 14 1 168 1 170 2 241 1 205 1 45 1 108 1 19 2 143 2 47 1 75 4 244 1 111 1 246 1 80 2 146 1 117 1 53 2 214 1 252 1 254 2 55 1 
168 1 5 1 53 1 205 1 164 1 246 1 
121 4 152 1 218 1 191 1 153 1 91 1 192 1 127 2 220 2 32 1 93 1 196 1 155 1 59 1 229 3 99 1 199 1 136 1 160 1 163 1 164 1 39 4 168 1 42 1 17 4 170 2 205 1 45 1 108 1 19 2 143 2 47 1 76 1 244 1 111 1 246 1 22 1 247 5 80 3 117 1 211 4 176 1 53 2 252 1 26 1 254 2 
168 1 152 1 141 1 91 1 205 1 127 2 220 2 45 1 19 1 47 1 93 1 111 1 246 1 114 1 80 1 229 2 53 1 99 1 254 2 164 1 
168 1 5 1 53 1 205 1 164 1 246 1 
152 1 187 1 91 1 127 2 220 2 93 1 99 1 229 2 168 1 141 1 238 1 45 1 47 1 19 1 111 1 246 1 80 1 114 1 53 1 183 1 254 2 
121 2 152 1 218 1 91 1 192 1 127 2 220 1 32 1 93 1 196 1 155 1 59 1 229 1 99 1 199 1 136 1 160 1 163 1 164 1 39 2 168 1 42 1 17 2 170 1 205 1 45 1 19 1 143 1 47 1 76 1 244 1 111 1 246 1 22 1 247 3 80 3 211 2 176 1 53 1 26 1 254 1 
4 1 53 1 191 1 220 1 252 1 254 1 
114 1 59 1 
114 1 244 1 
152 1 91 1 191 1 127 2 220 1 99 1 229 2 160 1 164 1 168 1 205 1 45 1 47 1 108 1 19 1 111 1 246 1 80 1 117 1 53 2 252 1 254 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 175 14 219 23 151 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 94 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 175 14 219 23 1 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V | CONDITION | 11984 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font; | RETURN | 2707 | return null
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream; | RETURN | 11510 | return null
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 96 1 118 1 21 1 12 1 140 1 
152 1 96 1 118 1 21 1 12 1 
171 2 216 1 193 1 
197 1 205 1 58 1 210 1 92 1 167 1 4 1 5 1 48 1 7 1 51 1 83 3 12 1 177 1 15 1 196 1 53 2 220 1 36 1 
205 1 58 2 144 1 210 1 167 1 4 1 48 1 7 1 30 1 83 3 12 1 15 1 196 1 53 1 36 1 220 1 
38 1 7 1 210 1 15 1 
18 1 210 1 167 1 48 1 79 1 7 1 83 2 15 1 196 1 53 1 36 2 
197 1 205 2 58 1 210 1 2 1 92 1 167 1 4 1 152 1 48 1 200 1 51 1 83 3 12 2 177 1 15 1 196 1 53 1 220 1 36 1 
197 1 205 2 58 1 210 1 2 1 92 1 167 1 4 1 152 1 48 1 51 1 83 3 12 2 177 1 15 1 196 1 53 1 220 1 36 1 
205 1 210 1 2 1 167 1 152 1 48 1 7 1 50 1 200 1 83 2 9 1 12 1 217 1 15 1 196 1 53 1 36 1 
205 1 210 1 2 1 167 1 152 1 48 1 49 1 7 1 50 1 200 1 83 2 9 1 12 1 15 1 196 1 53 1 36 1 
205 1 0 1 210 1 2 1 167 1 152 1 48 1 153 1 7 1 50 1 83 2 9 1 12 1 15 1 196 1 53 1 141 1 36 1 
205 1 0 1 210 1 2 1 167 1 152 1 48 1 153 1 7 1 200 1 50 1 83 2 9 1 12 1 15 1 196 1 53 1 141 1 36 1 
39 1 210 1 167 1 48 1 7 1 83 3 15 1 196 2 53 2 36 1 
20 1 210 1 167 1 7 1 83 3 15 1 33 2 196 2 218 1 36 1 
7 1 207 1 83 2 210 1 33 1 15 1 218 1 167 1 196 1 36 2 
199 1 210 1 167 1 7 1 83 2 15 1 33 1 196 1 218 1 36 1 
7 1 83 2 210 1 33 1 15 1 113 1 218 1 167 1 196 1 36 1 
37 1 56 1 205 1 58 4 210 1 93 1 211 1 167 1 169 1 7 1 83 3 12 1 15 1 33 1 196 1 218 1 36 1 220 1 
210 1 167 1 150 1 7 1 83 2 123 1 15 1 33 1 196 1 218 1 36 1 
39 1 210 1 167 2 7 1 83 2 15 1 33 1 196 3 218 1 36 2 
226 1 205 1 58 1 144 1 210 1 93 1 167 2 7 1 83 4 12 1 15 1 33 2 196 2 218 1 36 1 220 1 
69 3 195 1 65 1 
69 1 
70 1 126 4 127 1 1 1 199 2 2 1 75 3 133 1 135 4 80 2 83 3 8 1 12 2 139 1 14 1 143 1 89 2 20 1 144 1 90 1 22 4 147 1 23 1 148 1 210 1 91 4 93 1 152 1 28 2 95 2 97 1 29 8 30 1 154 1 214 4 98 4 155 2 33 1 34 4 218 1 36 3 219 1 220 1 159 1 160 1 39 1 42 4 164 2 107 1 166 2 109 2 168 1 112 1 174 2 175 1 179 1 227 1 117 1 55 1 118 2 58 2 183 4 234 1 191 2 239 1 196 2 240 1 
127 1 1 1 72 2 198 2 199 2 2 1 3 3 132 2 133 1 135 4 80 4 83 3 137 2 10 2 8 1 138 2 11 1 12 2 139 1 14 1 142 2 143 1 17 2 20 1 144 1 208 2 22 3 147 1 210 1 23 1 148 1 93 1 26 1 152 1 27 2 97 1 29 14 30 1 214 4 31 2 98 4 33 1 218 1 35 4 36 3 219 1 220 1 39 1 40 1 104 2 103 2 105 2 42 3 163 2 107 1 166 2 46 1 168 1 223 2 111 1 172 2 173 4 175 1 176 2 179 1 180 2 224 2 227 1 57 2 117 1 55 1 118 2 58 2 59 2 62 4 228 2 183 6 231 1 119 4 184 2 233 2 66 2 186 2 234 1 120 2 67 2 236 1 122 2 191 4 239 1 194 2 124 1 196 2 
127 1 1 1 72 2 198 2 199 2 2 1 132 2 133 1 135 4 80 4 83 3 137 2 10 2 8 1 138 2 11 1 12 2 139 1 14 1 142 2 143 1 17 2 20 1 144 1 208 2 22 3 147 1 210 1 23 1 148 1 93 1 26 1 152 1 27 2 97 1 30 1 29 4 214 4 31 2 98 4 33 1 218 1 35 4 36 3 219 1 220 1 39 1 104 2 103 2 105 2 42 3 163 2 107 1 166 2 46 1 168 1 223 2 172 2 173 4 175 1 176 2 179 1 180 2 224 2 227 1 57 2 117 1 55 1 118 2 58 2 59 2 62 4 228 2 183 6 119 4 184 2 233 2 66 2 234 1 120 2 67 2 122 2 191 4 239 1 194 2 124 1 196 2 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 78 1 80 4 83 3 10 2 8 1 138 2 12 2 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 3 219 1 39 1 104 2 103 2 42 3 107 1 166 2 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 57 3 117 1 55 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 239 1 194 2 196 2 
127 1 1 1 72 2 198 2 199 2 2 1 132 2 133 1 4 1 135 4 80 4 81 2 83 3 137 2 10 2 8 1 138 2 11 1 12 2 139 1 14 1 142 2 143 1 17 2 144 1 208 2 22 3 147 1 210 1 23 1 148 1 149 2 26 1 152 1 27 2 97 1 30 1 29 4 214 4 31 2 98 4 35 4 36 3 219 1 220 1 39 1 102 1 104 2 103 2 105 2 42 3 163 2 107 1 222 1 166 2 46 1 168 1 223 2 48 1 172 2 173 4 175 1 176 2 179 1 180 2 53 1 224 2 227 1 57 2 117 1 55 1 58 2 118 2 59 2 62 4 228 2 183 6 119 4 184 2 187 2 233 2 66 2 234 1 120 2 189 2 67 2 122 2 191 4 239 1 194 2 124 1 196 2 125 2 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 79 1 80 4 83 4 10 2 8 1 138 2 12 2 11 1 14 1 139 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 2 218 1 35 4 220 1 36 5 219 1 39 1 104 2 103 2 162 1 42 3 107 1 166 2 168 1 223 3 172 3 173 3 175 1 176 3 178 1 179 1 180 3 224 2 226 1 227 1 55 1 57 3 117 1 118 2 58 2 59 2 62 5 228 3 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 239 1 194 2 124 1 196 3 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 80 4 83 3 10 2 8 1 138 2 12 2 11 1 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 3 219 1 39 1 104 2 103 2 162 1 42 3 107 1 166 2 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 55 1 57 3 117 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 239 1 194 2 124 1 196 2 
143 1 97 1 20 1 1 1 214 4 98 4 8 1 239 1 148 1 23 1 168 1 133 1 
1 1 214 1 98 1 8 1 23 1 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 80 4 83 3 10 2 8 1 138 2 12 2 11 1 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 3 219 1 39 1 104 2 103 2 162 1 42 3 107 1 166 2 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 57 3 117 1 55 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 194 2 124 1 196 2 
127 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 80 4 83 3 10 2 8 1 138 2 12 2 11 1 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 151 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 3 219 1 39 1 104 2 103 2 162 1 42 3 107 1 166 2 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 57 3 117 1 55 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 194 2 124 1 196 2 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 80 4 83 3 10 2 8 1 138 2 12 2 11 1 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 148 1 23 1 210 1 93 1 94 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 3 219 1 39 1 104 2 103 2 42 3 107 1 166 2 170 1 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 55 1 57 3 117 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 1 66 2 233 3 234 1 120 2 188 1 122 2 191 4 239 1 194 2 124 1 196 2 
225 1 
127 1 1 1 72 3 198 2 199 2 2 1 133 1 132 3 135 4 79 1 80 4 83 3 10 2 8 1 138 2 12 2 11 1 139 1 14 1 84 2 142 3 143 1 17 2 20 1 144 1 146 1 22 3 208 3 147 1 23 1 148 1 210 1 93 1 26 1 152 1 97 1 29 4 30 1 214 4 31 2 98 4 33 1 218 1 35 4 220 1 36 4 219 1 39 1 104 2 103 2 162 1 42 3 107 1 166 2 168 1 223 3 172 2 173 3 175 1 176 3 178 1 179 1 180 2 224 2 227 1 55 1 57 3 117 1 118 2 58 2 59 2 62 5 228 2 183 6 119 5 232 2 66 2 233 3 234 1 120 2 188 1 122 2 191 4 239 1 194 2 124 1 196 2 
116 1 29 1 40 1 
29 1 237 1 
29 1 213 1 
145 1 183 1 42 1 64 1 152 1 153 1 29 1 50 1 9 1 12 1 157 1 85 1 
152 1 29 1 50 1 145 1 183 1 9 1 12 1 
29 1 213 1 
101 1 152 1 29 1 183 1 42 1 12 1 
29 1 238 1 
29 1 213 1 
29 1 237 1 
29 1 237 1 
126 1 29 1 130 1 47 1 
29 1 156 1 34 1 
182 2 117 1 210 1 28 1 134 1 135 2 29 2 213 1 83 2 13 1 99 1 32 1 33 1 196 1 218 1 204 1 36 1 
74 1 
38 1 117 1 210 1 28 1 134 1 83 2 13 1 99 1 32 1 33 1 196 1 218 1 36 1 
48 1 117 1 77 1 172 2 228 2 83 3 210 1 180 2 53 2 196 1 26 1 36 1 
72 2 198 2 199 2 2 1 132 2 4 1 79 1 135 4 80 4 81 2 83 3 10 2 138 2 12 2 142 2 17 2 22 3 208 2 147 1 210 1 149 2 26 1 152 1 27 2 29 4 30 1 31 2 35 4 220 1 36 2 102 1 104 2 103 2 42 3 222 1 166 2 223 2 48 1 172 1 173 2 176 2 179 1 180 1 53 1 224 2 227 1 117 1 57 2 58 1 118 2 59 2 228 1 62 4 183 6 119 4 187 2 233 2 66 2 234 1 120 2 189 2 122 2 191 4 194 2 196 1 125 2 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 63 2 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 3 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 63 2 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
117 1 228 1 210 1 24 1 26 1 77 1 48 1 172 1 83 2 180 1 196 1 53 1 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 63 2 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 3 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 232 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 3 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
0 2 72 1 73 1 199 1 2 1 131 1 132 1 77 1 135 2 79 1 83 3 9 1 10 1 138 1 12 1 139 1 85 2 142 1 17 1 19 1 208 1 210 1 26 1 152 1 153 3 29 3 31 1 157 2 35 2 36 4 40 3 104 1 42 2 163 1 166 1 223 1 48 1 49 1 172 2 50 1 173 1 176 1 180 2 179 1 53 2 224 1 226 1 117 1 57 1 59 1 62 2 228 2 229 1 183 2 119 2 64 2 184 1 233 1 66 1 234 1 120 1 122 1 194 1 196 2 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
117 1 228 2 210 1 26 1 77 1 48 1 172 2 83 3 180 2 196 1 53 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
48 1 117 1 172 1 228 1 83 2 210 1 180 1 53 1 196 1 26 1 36 1 
72 1 198 1 199 1 132 1 4 1 135 2 80 2 81 1 83 3 10 1 138 1 12 1 142 1 17 1 22 3 208 1 147 1 210 1 149 1 26 1 27 1 29 2 30 1 31 1 35 2 220 1 36 1 102 1 104 1 103 1 166 1 223 1 48 1 172 1 173 1 176 1 180 1 53 1 224 1 227 1 117 1 57 1 58 1 118 1 59 1 228 1 62 2 183 3 119 2 187 1 233 1 66 1 120 1 189 1 122 1 191 2 194 1 196 1 125 1 
117 1 228 1 210 1 26 1 77 1 48 1 172 1 83 2 180 1 196 1 53 1 125 1 36 1 
72 1 198 1 199 1 132 1 135 2 80 2 81 1 83 1 10 1 137 1 12 1 138 1 142 1 17 1 20 1 22 3 208 1 147 1 149 1 93 1 27 1 30 1 29 2 31 1 35 2 220 1 102 1 103 1 104 1 105 1 163 1 166 1 223 1 173 2 176 1 224 1 227 1 57 1 118 1 58 1 59 1 62 2 183 3 119 2 184 1 187 1 66 1 233 1 120 1 189 1 67 1 122 1 191 2 194 1 125 1 
72 1 198 1 199 1 132 1 4 1 135 2 80 2 81 1 83 3 10 1 138 1 12 1 142 1 17 1 22 3 208 1 147 1 210 1 149 1 26 1 27 1 29 2 30 1 31 1 35 2 220 1 36 1 102 1 104 1 103 1 166 1 223 1 48 1 172 1 173 1 176 1 180 1 53 1 224 1 227 1 117 1 57 1 58 1 118 1 59 1 228 1 62 2 183 3 119 2 232 1 187 1 233 1 66 1 120 1 189 1 122 1 191 2 194 1 196 1 125 1 
72 1 198 1 199 1 132 1 135 2 80 2 81 1 83 3 10 1 138 1 12 1 142 1 17 1 20 1 22 3 208 1 147 1 210 1 149 1 93 1 26 1 27 1 29 2 30 1 31 1 33 1 218 1 35 2 220 1 36 1 102 1 104 1 103 1 166 1 223 1 172 1 173 1 176 1 180 1 224 1 227 1 117 1 57 1 58 1 118 1 59 1 228 1 62 2 183 3 119 2 232 1 187 1 233 1 66 1 120 1 189 1 122 1 191 2 194 1 196 1 125 1 
104 1 105 1 72 1 163 1 223 1 132 1 48 1 77 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 57 1 117 1 59 1 228 1 62 2 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 3 172 1 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 72 1 198 1 132 1 223 1 48 1 172 1 135 3 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 72 1 198 1 132 1 223 1 48 1 172 1 135 3 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 72 1 198 1 132 1 223 1 48 1 172 1 135 3 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
104 1 105 1 72 1 163 1 198 1 132 1 223 1 48 1 77 1 135 2 172 1 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 213 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 198 1 132 1 223 1 48 1 172 1 135 3 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 213 1 238 1 31 1 122 1 194 1 196 1 35 3 36 1 
27 1 221 1 29 1 80 1 191 1 
221 1 29 1 80 1 103 1 191 1 
87 1 27 1 29 1 80 1 61 1 191 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
0 1 72 1 198 1 199 1 2 1 132 1 77 1 135 2 80 2 83 2 137 1 9 1 10 1 138 1 12 1 139 1 85 3 142 1 17 1 145 1 208 1 210 1 26 1 27 1 152 1 153 4 29 2 31 1 157 3 35 2 36 2 104 1 103 1 105 1 163 1 42 3 166 1 223 1 48 1 172 1 50 1 173 2 176 1 180 1 179 1 53 1 224 1 57 1 117 1 118 1 59 1 228 1 62 2 183 3 119 2 64 3 184 1 233 1 66 1 234 1 120 1 67 1 122 1 191 2 194 1 196 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 232 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 63 2 119 2 210 1 184 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 132 1 223 1 48 1 77 1 135 2 172 1 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 63 2 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 105 1 72 1 163 1 223 1 132 1 48 1 77 1 172 1 135 2 173 2 83 2 176 1 137 1 10 1 138 1 180 1 53 1 224 1 142 1 57 1 117 1 59 1 228 1 62 2 208 1 119 2 210 1 184 1 233 1 66 1 26 1 67 1 31 1 122 1 194 1 196 1 35 2 36 1 
104 1 72 1 132 1 223 1 48 1 172 1 135 2 173 1 83 2 176 1 10 1 138 1 180 1 53 1 224 1 142 1 117 1 57 1 59 1 62 2 228 1 208 1 119 2 210 1 233 1 66 1 26 1 31 1 122 1 194 1 196 1 35 2 36 1 
197 1 40 3 0 1 42 2 199 1 2 1 166 1 48 1 50 1 51 1 82 1 83 2 9 1 177 1 12 1 139 1 179 1 53 1 85 2 16 1 181 1 54 1 17 1 117 1 58 1 60 1 183 2 64 2 210 1 92 1 234 1 120 1 28 1 152 1 153 3 190 1 29 4 217 1 157 2 196 1 36 2 
40 3 0 1 42 2 199 1 222 1 166 1 48 1 50 1 81 1 82 1 83 2 9 1 12 1 179 1 53 1 114 1 115 1 85 2 16 1 181 1 54 1 117 1 17 1 60 1 183 2 64 2 210 1 185 1 149 1 150 1 187 1 234 1 120 1 28 1 152 1 189 1 153 3 190 1 29 4 235 1 123 1 157 2 196 1 36 1 
104 1 72 3 198 1 132 3 223 3 171 1 48 1 135 2 172 1 173 3 83 2 176 3 10 1 138 1 178 1 180 1 53 1 224 1 142 3 57 3 117 1 59 1 62 4 228 1 146 2 208 3 119 4 210 1 232 1 66 1 233 3 26 1 188 1 31 1 122 1 194 1 196 1 35 2 36 1 
221 1 72 1 106 1 132 1 223 1 48 1 172 1 80 1 173 1 83 2 176 1 178 1 180 1 84 1 53 1 142 1 57 1 117 1 62 1 228 1 146 1 208 1 119 1 210 1 233 1 26 1 188 1 29 1 213 1 191 1 196 1 36 1 
72 3 44 1 132 3 223 3 48 1 172 1 173 3 83 2 176 3 178 1 180 1 53 1 142 3 57 3 117 1 62 3 228 1 146 3 208 3 119 3 210 1 233 3 26 1 188 1 196 1 36 1 
72 1 132 1 223 1 48 1 172 1 173 1 83 2 176 1 178 1 180 1 113 1 53 1 142 1 57 1 117 1 62 1 228 1 146 1 208 1 119 1 210 1 233 1 26 1 188 1 196 1 36 1 
117 1 228 1 146 1 210 1 26 1 188 1 48 1 172 1 83 2 180 1 113 1 196 1 53 1 36 1 
72 1 132 1 223 1 48 1 172 1 173 1 83 2 176 1 178 1 180 1 53 1 142 1 57 1 117 1 62 1 228 1 146 1 208 1 119 1 210 1 233 1 26 1 188 1 196 1 36 1 
110 1 83 1 68 1 25 1 
5 1 83 1 192 1 165 1 45 1 
201 1 83 1 68 1 
5 1 83 1 209 2 165 1 
230 1 68 1 
153 1 0 1 145 1 42 1 64 1 157 1 85 1 
153 1 0 1 42 1 64 1 157 1 85 1 
152 1 12 1 179 1 234 1 
152 1 189 1 81 1 121 1 12 1 222 1 187 1 
86 1 171 1 135 1 62 2 138 1 35 1 142 1 
62 1 142 1 
135 1 29 1 213 1 62 1 138 1 35 1 
62 1 142 1 
135 1 29 1 213 1 35 1 
218 1 
33 1 
33 1 
53 1 
48 1 
53 1 
117 1 129 1 210 1 209 1 43 1 108 1 28 1 212 1 136 1 83 2 215 1 52 1 196 1 158 1 36 1 
117 1 129 1 210 1 209 1 43 1 108 1 76 1 28 1 29 1 135 2 212 1 213 1 136 1 83 2 34 1 52 1 196 1 203 2 158 1 36 1 
71 1 
206 1 29 2 40 2 213 1 
128 1 29 2 40 2 213 1 
102 1 128 1 40 2 71 1 129 1 199 1 43 1 108 1 166 1 76 1 4 1 135 1 79 1 81 1 136 1 83 3 202 1 12 1 52 1 203 1 227 1 17 1 117 1 58 1 206 1 183 2 22 2 147 1 209 1 210 1 149 1 187 1 120 1 28 1 189 1 29 2 212 1 30 1 215 1 196 1 36 2 158 1 220 1 
38 1 117 1 129 1 210 1 100 1 
126 1 0 1 128 1 40 2 71 1 42 3 129 1 199 1 43 1 108 1 2 1 166 1 76 1 135 1 79 1 50 1 136 1 83 2 9 1 12 1 139 1 179 1 52 1 85 3 203 1 17 1 117 1 206 1 145 1 183 2 64 3 209 1 210 1 234 1 120 1 28 1 152 1 153 4 29 3 212 1 157 3 34 1 196 1 36 3 158 1 
117 1 129 1 210 1 209 1 43 1 108 1 28 1 212 1 136 1 83 2 52 1 113 1 196 1 158 1 36 1 
88 1 117 2 129 2 210 2 209 2 43 2 108 2 28 2 212 2 136 2 83 4 215 1 52 2 196 2 158 2 36 2 
38 1 117 1 129 1 210 1 209 1 43 1 108 1 28 1 212 1 136 1 83 2 52 1 100 1 196 1 158 1 36 1 
117 1 129 1 210 1 209 1 43 1 108 1 76 1 28 1 29 3 135 1 212 1 213 1 136 1 83 2 34 2 52 1 196 1 203 1 158 1 36 1 
88 1 117 1 129 1 210 1 209 1 43 1 108 1 28 1 212 1 136 1 83 2 52 1 196 1 158 1 36 1 
38 1 88 1 117 2 129 2 210 2 209 2 43 2 108 2 28 2 212 2 136 2 83 4 100 1 52 2 196 2 158 2 36 2 
159 1 117 1 89 1 90 1 130 1 210 1 209 1 91 2 75 1 28 1 135 2 29 2 112 1 212 1 213 1 83 2 34 1 196 1 36 1 240 1 
159 1 126 1 0 1 42 2 164 1 199 1 2 1 166 1 75 1 135 1 112 1 79 1 50 1 83 2 9 1 12 1 139 1 179 1 85 2 117 1 89 1 145 1 90 1 183 1 64 2 209 1 210 1 91 1 234 1 28 1 152 1 95 1 153 3 29 1 212 1 155 1 157 2 34 1 196 1 240 1 36 3 
171 1 135 1 174 1 91 1 109 1 75 1 
213 1 164 1 
213 1 155 1 
159 1 117 1 90 1 210 1 209 1 91 1 109 1 75 2 28 1 95 1 135 1 29 2 112 1 212 1 80 1 174 1 83 2 191 1 34 1 196 1 36 1 240 1 
159 1 38 1 112 1 90 1 75 1 240 1 
41 1 161 1 130 1 75 1 6 1 112 1 135 2 83 2 117 1 89 1 90 1 209 1 210 1 91 2 28 1 212 1 29 2 213 1 34 1 196 1 36 1 
159 1 109 1 75 2 171 1 112 1 135 1 80 1 174 1 83 2 117 1 90 1 209 1 210 1 91 1 28 1 95 1 212 1 29 2 191 1 193 1 156 1 34 1 196 1 240 1 36 1 
95 1 
159 1 126 2 102 1 164 1 199 1 166 1 109 1 75 2 4 1 6 1 79 1 135 2 112 1 80 1 81 1 174 1 83 3 12 1 227 1 117 1 89 1 118 1 58 1 90 1 183 2 22 4 147 1 209 1 210 1 149 1 91 2 187 1 28 1 189 1 95 1 29 3 212 1 30 1 191 1 155 1 34 2 196 1 240 1 36 2 220 1 
159 1 38 1 112 1 90 1 75 1 240 1 
159 1 126 2 0 1 42 4 164 1 199 1 2 1 166 1 109 1 75 2 135 2 112 1 79 1 80 1 50 1 174 1 83 2 9 1 12 1 139 1 179 1 85 4 117 1 89 1 118 1 145 1 90 1 183 2 64 4 209 1 210 1 91 2 234 1 28 1 152 1 95 1 153 5 29 3 212 1 191 1 155 1 157 4 34 2 196 1 240 1 36 3 

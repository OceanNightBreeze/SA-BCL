#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 49 170 180 24 106 72 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V FAILED junit.framework.ComparisonFailure 82 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V FAILED junit.framework.AssertionFailedError 129 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:setResolution(I)V | OPERATOR | 8561 | > -> !=
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | CONDITION | 4966 | if (x) -> if (!x)
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V | STATEMENT | 11989 | stmt -> ;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V | OPERATOR | 6349 | += -> &=
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 23 1 229 1 165 1 4 1 
201 1 31 2 196 1 
188 1 23 1 216 1 229 1 165 1 4 1 
98 1 46 1 215 1 128 1 
161 1 138 1 94 1 128 1 96 1 98 1 168 2 227 2 215 1 114 1 27 1 156 2 
37 1 136 1 161 1 122 2 211 1 126 1 236 1 224 1 83 1 127 1 4 1 98 1 168 1 227 1 25 1 215 1 114 1 27 1 229 2 156 3 
37 1 136 1 161 1 122 2 211 1 126 1 236 1 224 1 83 1 127 1 4 1 98 1 168 1 227 1 215 1 114 1 27 1 229 2 156 3 
37 1 161 1 122 1 77 1 128 1 4 1 98 1 168 1 227 1 25 1 215 1 114 1 27 1 115 1 229 1 34 1 156 2 
37 1 161 1 122 1 77 1 128 1 4 1 98 1 168 1 227 1 25 1 215 1 114 1 27 1 229 1 32 1 34 1 156 2 
37 1 161 1 122 1 140 1 77 1 233 1 128 1 4 1 98 1 168 1 227 1 44 1 215 1 114 1 27 1 229 1 34 1 156 2 
37 1 161 1 122 1 140 1 77 1 233 1 128 1 4 1 98 1 168 1 227 1 44 1 25 1 215 1 114 1 27 1 229 1 34 1 156 2 
161 1 128 1 98 1 168 2 227 1 59 1 215 1 114 1 27 2 156 3 
161 1 128 1 98 1 227 1 200 1 215 1 27 2 104 1 35 2 156 3 
98 1 227 2 200 1 161 1 215 1 27 1 35 1 156 2 128 1 157 1 
161 1 128 1 98 1 227 1 200 1 215 1 27 1 48 1 35 1 156 2 
136 1 161 1 122 1 105 1 211 1 126 1 128 1 224 1 83 1 127 1 98 1 227 1 200 1 215 1 27 1 229 1 35 1 156 3 
161 1 122 1 105 1 211 2 126 1 128 1 246 1 98 1 227 1 200 1 215 1 27 1 229 1 35 1 156 3 36 1 
161 2 128 1 98 1 227 2 59 1 200 1 215 1 27 3 35 1 156 2 
161 2 122 1 105 1 107 1 211 1 126 1 128 1 98 1 246 1 227 1 200 1 215 1 27 2 229 1 35 2 156 4 
98 1 227 1 200 1 161 1 215 1 139 1 27 1 35 1 156 2 128 1 
90 1 161 1 122 1 105 1 211 4 126 1 128 1 5 1 98 1 227 1 200 1 215 1 27 1 229 1 220 1 35 1 156 3 230 1 
98 1 227 1 207 1 200 1 179 1 161 1 215 1 27 1 35 1 156 2 128 1 
239 1 81 1 145 3 
145 1 
2 1 143 2 144 1 3 4 4 1 147 1 148 4 149 1 7 4 154 1 10 2 155 14 156 3 12 2 158 1 14 6 162 2 163 3 15 3 16 1 164 1 20 1 167 3 166 2 168 1 169 3 24 1 27 2 170 1 172 2 173 3 36 1 38 2 37 1 178 4 180 1 41 1 45 4 48 2 185 1 49 1 51 1 188 2 191 1 53 1 55 3 56 3 197 3 59 1 61 2 199 1 62 3 63 5 69 1 68 1 204 2 72 1 75 2 208 3 209 1 210 1 211 2 80 2 84 4 215 1 217 1 218 1 91 2 92 1 93 2 223 3 95 2 227 3 100 2 229 2 106 1 109 3 236 1 112 1 114 1 116 2 242 1 244 1 126 1 246 1 248 2 250 5 131 2 132 2 133 1 
206 1 141 1 79 1 211 2 84 4 86 1 3 4 7 1 214 2 149 1 215 1 217 1 218 1 154 1 155 5 156 3 14 2 92 1 222 1 16 1 20 1 21 2 168 1 227 3 24 1 102 1 27 2 170 1 29 2 229 1 33 1 36 1 231 2 178 1 180 1 106 1 43 1 236 1 45 2 114 1 48 1 49 1 241 1 188 1 187 1 191 1 242 1 53 1 56 4 244 1 126 1 246 1 247 1 59 1 60 1 248 1 199 1 249 1 133 1 72 1 73 2 
135 2 209 1 80 2 211 2 143 2 84 4 4 1 3 4 147 1 148 4 149 1 7 4 215 1 8 1 150 2 88 1 217 1 218 1 154 1 155 4 156 4 12 2 91 2 14 6 92 1 163 3 162 2 15 2 16 1 20 1 223 2 93 2 95 2 167 2 166 2 168 1 169 2 227 3 24 1 100 2 27 2 170 1 172 2 103 1 173 2 229 2 36 1 37 1 178 4 41 1 180 1 106 1 109 4 236 1 45 4 114 1 48 2 49 1 116 2 117 2 51 1 188 2 191 1 242 1 53 1 55 2 56 3 244 1 126 1 246 1 197 2 59 1 61 2 248 2 62 2 199 1 250 4 63 4 64 2 131 2 132 2 204 2 71 2 133 1 205 2 72 1 75 2 
209 1 2 1 80 2 211 2 143 2 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 217 1 10 2 154 1 155 4 156 3 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 17 1 16 1 20 1 223 3 93 2 95 2 166 2 167 3 96 1 168 1 169 3 227 4 24 1 100 2 27 2 170 1 103 1 172 2 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 109 3 236 1 45 4 114 1 185 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 125 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 63 5 250 5 131 2 132 2 204 2 133 1 72 1 75 2 
135 2 143 2 3 4 4 1 147 1 148 4 7 4 149 1 8 1 150 2 154 1 155 4 156 3 12 2 14 6 162 2 163 3 15 2 16 1 18 1 20 1 166 2 167 2 168 1 24 1 169 2 170 1 27 2 172 2 173 2 174 1 36 1 37 1 178 4 39 1 180 1 41 1 42 2 183 1 45 4 48 2 49 1 51 1 188 2 191 1 193 1 53 1 194 2 56 3 55 2 58 1 197 2 59 1 61 2 199 1 62 2 202 1 63 4 64 2 65 2 71 2 204 2 72 1 205 2 75 2 209 1 211 2 80 2 84 4 213 1 215 1 88 1 218 1 217 1 219 1 91 2 92 1 93 2 223 2 95 2 227 3 100 2 103 1 229 2 106 1 108 1 109 4 236 1 114 1 116 2 117 2 119 1 242 1 124 2 244 1 126 1 246 1 248 2 130 2 250 4 131 2 132 2 251 1 133 1 
50 1 
209 1 2 1 80 2 211 2 143 2 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 217 1 10 2 154 1 155 4 156 4 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 16 1 20 1 223 3 93 3 95 2 166 2 167 3 96 1 168 2 169 3 227 5 24 1 100 3 27 4 170 1 103 1 172 3 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 107 1 109 3 236 1 45 4 114 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 125 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 202 1 63 5 250 5 131 2 132 2 204 2 133 1 72 1 75 2 
209 1 2 1 80 2 211 2 143 2 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 217 1 10 2 154 1 155 4 156 3 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 16 1 20 1 223 3 93 2 95 2 166 2 167 3 168 1 169 3 227 3 24 1 100 2 27 2 170 1 103 1 172 2 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 109 3 236 1 45 4 114 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 125 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 202 1 63 5 250 5 131 2 132 2 204 2 133 1 72 1 75 2 
92 1 242 1 199 1 53 1 217 1 244 1 106 1 154 1 72 1 84 4 3 4 
135 2 209 1 80 2 211 2 143 2 84 4 4 1 3 4 147 1 148 4 149 1 7 4 215 1 8 1 150 2 88 1 217 1 218 1 154 1 155 4 156 3 12 2 91 2 14 6 92 1 163 3 162 2 15 2 16 1 20 1 223 2 93 2 95 2 167 2 166 2 169 2 227 3 24 1 100 2 27 2 170 1 103 1 172 2 173 2 229 2 35 1 104 1 36 1 37 1 178 4 41 1 180 1 105 1 106 1 109 4 183 1 45 4 48 2 49 1 116 2 117 2 51 1 188 2 191 1 242 1 53 1 55 2 56 3 244 1 126 1 246 1 197 2 59 1 61 2 248 2 62 2 199 1 200 1 202 1 250 4 63 4 131 2 64 2 132 2 204 2 71 2 133 1 205 2 72 1 75 2 
106 1 154 1 72 1 84 1 3 1 
209 1 2 1 80 2 211 2 143 2 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 10 2 154 1 155 4 156 3 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 16 1 20 1 223 3 93 2 95 2 166 2 167 3 168 1 169 3 227 3 24 1 100 2 27 2 170 1 103 1 172 2 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 109 3 236 1 45 4 114 1 185 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 125 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 250 5 63 5 131 2 132 2 204 2 133 1 72 1 75 2 
209 1 2 1 80 2 211 2 143 2 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 10 2 154 1 155 4 156 3 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 16 1 20 1 223 3 93 2 95 2 166 2 167 3 168 1 169 3 227 3 24 1 100 2 27 2 170 1 103 1 172 2 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 109 3 236 1 235 1 45 4 114 1 185 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 125 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 250 5 63 5 131 2 132 2 204 2 133 1 75 2 
209 1 2 1 80 2 211 2 143 2 82 1 144 1 84 4 4 1 3 4 147 1 148 4 7 4 149 1 215 1 88 1 218 1 217 1 153 1 10 2 154 1 155 4 156 3 12 2 158 1 91 2 14 6 92 1 163 3 162 2 15 3 16 1 20 1 223 3 93 2 95 2 166 2 167 3 168 1 169 3 227 3 24 1 100 2 27 2 170 1 103 1 172 2 229 2 173 3 36 1 37 1 178 4 41 1 180 1 106 1 109 3 236 1 45 4 114 1 185 1 48 2 49 1 116 2 51 1 188 2 191 1 242 1 53 1 56 3 244 1 55 3 126 1 246 1 197 3 59 1 61 2 248 2 62 3 199 1 63 5 250 5 131 2 132 2 204 2 133 1 72 1 75 2 
210 1 234 1 155 1 
99 1 155 1 
155 1 237 1 
155 1 237 1 
155 1 237 1 
99 1 155 1 
14 1 190 1 163 1 137 1 77 1 212 1 4 1 44 1 67 1 229 1 34 1 155 1 
14 1 163 1 30 1 229 1 155 1 4 1 
14 1 77 1 229 1 155 1 34 1 212 1 4 1 
99 1 155 1 
155 1 57 1 
243 1 214 1 155 1 
70 1 155 1 21 1 225 1 
142 1 20 1 123 1 110 1 111 2 182 1 168 1 227 1 99 1 45 2 215 1 114 1 27 1 240 1 155 2 156 2 73 1 
26 1 
168 1 182 1 227 1 46 1 215 1 114 1 27 1 123 1 20 1 142 1 110 1 156 2 73 1 
168 1 227 1 100 1 215 1 114 1 27 1 172 1 20 1 93 1 156 2 51 1 
177 1 20 1 93 2 168 2 227 1 100 2 215 1 114 1 27 1 172 2 51 1 156 3 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
211 1 80 1 143 1 148 2 7 2 215 1 218 1 155 2 156 3 12 1 14 3 91 1 162 1 15 1 20 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 100 1 27 1 172 1 229 1 173 1 36 1 178 2 42 1 108 1 109 1 236 1 45 2 114 1 48 1 116 1 51 1 188 1 191 1 194 1 124 1 55 1 56 3 126 1 197 1 248 1 61 1 130 1 62 1 63 2 250 2 64 1 131 1 65 1 132 1 204 1 75 1 
177 1 20 1 93 1 168 1 227 1 100 1 215 1 114 1 65 1 27 1 172 1 51 1 156 2 
135 1 80 1 211 1 143 1 148 2 7 2 150 1 218 1 155 2 156 1 12 1 14 3 91 1 162 1 15 1 223 1 166 1 167 1 95 1 169 1 229 1 173 1 104 1 36 1 178 2 42 1 105 1 108 1 109 2 45 2 48 1 116 1 117 1 188 1 191 1 194 1 124 1 56 3 55 1 126 1 197 1 248 1 61 1 130 1 62 1 63 2 250 2 131 1 64 1 65 1 132 1 71 1 204 1 205 1 75 1 
211 1 80 1 143 1 148 2 7 2 215 1 218 1 155 2 156 3 12 1 14 3 91 1 162 1 15 1 17 1 20 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 100 1 27 1 172 1 229 1 173 1 36 1 178 2 42 1 108 1 109 1 236 1 45 2 114 1 48 1 116 1 51 1 188 1 191 1 194 1 124 1 55 1 56 3 126 1 197 1 248 1 61 1 130 1 62 1 63 2 250 2 64 1 131 1 65 1 132 1 204 1 75 1 
211 1 80 1 143 1 148 2 7 2 215 1 218 1 155 2 156 3 12 1 14 3 91 1 162 1 15 1 17 1 20 1 93 1 223 1 95 1 166 1 167 1 227 1 169 1 100 1 27 1 172 1 173 1 229 1 104 1 35 1 36 1 178 2 42 1 105 1 108 1 109 1 45 2 48 1 116 1 51 1 188 1 191 1 194 1 124 1 55 1 56 3 126 1 197 1 61 1 248 1 130 1 200 1 62 1 63 2 250 2 64 1 131 1 65 1 132 1 204 1 75 1 
135 1 177 1 143 1 109 2 45 2 148 2 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 197 1 169 1 227 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
177 1 143 1 109 1 45 3 148 3 215 1 114 1 150 1 116 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
177 1 143 1 109 1 45 2 148 2 215 1 114 1 150 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
7 1 178 1 64 1 155 1 195 1 
7 1 178 1 132 1 155 1 195 1 
87 1 7 1 178 1 64 1 155 1 85 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 137 3 140 1 77 1 80 1 143 1 212 1 4 1 147 1 148 2 7 2 215 1 150 1 155 2 156 2 12 1 14 3 91 1 162 1 163 3 15 1 16 1 20 1 93 1 223 1 95 1 166 1 167 1 168 1 169 1 227 2 100 1 27 1 172 1 173 1 229 1 34 1 37 1 178 2 177 1 41 1 109 2 44 4 45 2 114 1 48 1 116 1 117 1 51 1 188 1 190 3 55 1 197 1 61 1 248 1 62 1 250 2 63 2 64 1 131 1 132 1 67 3 204 1 71 1 205 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 17 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
177 1 78 2 143 1 109 1 45 3 148 3 215 1 114 1 150 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 78 2 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
177 1 20 1 93 2 168 2 227 1 100 2 215 1 114 1 27 1 172 2 51 1 156 3 
211 1 80 2 143 2 213 1 4 1 147 1 148 4 7 4 215 1 218 1 219 1 155 4 156 3 12 2 14 6 91 2 163 3 162 2 15 2 18 1 20 1 93 1 223 2 95 2 166 2 167 2 96 1 168 1 227 2 169 2 100 1 27 1 172 1 229 2 173 2 174 1 36 1 37 1 39 1 178 4 41 1 42 2 108 1 109 2 236 1 45 4 114 1 48 2 116 2 51 1 188 2 119 1 191 1 193 1 194 2 124 2 55 2 56 3 126 1 58 1 197 2 248 2 61 2 130 2 62 2 63 4 250 4 64 2 131 2 65 2 132 2 251 1 204 2 75 2 
177 1 143 1 109 1 45 3 148 3 215 1 114 1 150 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
135 1 177 1 78 2 143 1 109 2 45 3 148 3 215 1 114 1 150 1 116 1 117 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 71 1 205 1 75 1 
143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
78 2 143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
177 1 20 1 93 1 168 1 227 1 100 1 215 1 114 1 27 1 172 1 9 1 51 1 156 2 
78 2 143 1 109 1 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 17 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
135 1 143 1 109 2 45 3 148 3 215 1 114 1 116 1 156 2 51 1 12 1 91 1 162 1 15 1 20 1 55 1 93 1 223 1 95 1 166 1 167 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 75 1 
137 2 210 3 140 2 77 1 80 1 143 1 212 1 146 1 4 1 147 1 148 2 215 1 150 1 155 3 156 3 12 1 91 1 14 2 160 1 163 2 15 1 16 1 19 1 20 1 93 2 223 1 95 1 167 1 166 1 96 1 168 2 227 4 169 1 100 2 27 2 172 2 173 1 229 1 32 1 34 1 37 1 177 1 41 1 107 1 109 1 44 3 45 2 114 1 48 1 116 1 51 1 190 2 121 1 55 1 197 1 61 1 248 1 62 1 250 2 63 2 131 1 67 2 204 1 75 1 
177 1 143 1 109 1 45 3 148 3 215 1 114 1 150 1 116 1 156 2 51 1 12 1 91 1 15 1 20 1 55 1 93 1 223 1 95 1 167 1 166 1 168 1 227 1 169 1 197 1 99 1 61 1 100 1 62 1 250 2 63 2 27 1 172 1 173 1 204 1 205 1 75 1 
37 1 136 1 41 1 137 2 210 3 140 1 77 1 211 1 80 1 83 1 4 1 147 1 44 3 215 1 113 1 114 1 115 1 48 1 186 1 11 1 155 4 156 2 14 2 159 1 190 2 163 2 16 1 20 1 127 1 224 1 226 1 168 1 227 2 198 1 248 1 131 1 67 2 27 1 229 1 34 1 73 1 
0 1 207 1 39 1 179 1 41 1 42 1 137 2 210 3 140 1 77 1 80 1 4 1 147 1 44 3 215 1 113 1 114 1 48 1 186 1 11 1 155 4 156 2 13 1 14 2 159 1 120 1 190 2 163 2 194 1 124 1 20 1 226 1 168 1 227 1 198 1 248 1 130 1 131 1 67 2 27 1 229 1 203 1 34 1 73 1 
2 1 109 1 144 1 215 1 114 1 51 1 156 2 158 1 15 1 20 1 223 1 55 1 93 1 167 1 168 1 227 1 197 1 169 1 100 1 62 1 250 1 63 1 27 1 172 1 173 1 
2 1 143 1 109 3 144 1 45 2 148 2 215 1 114 1 116 1 51 1 156 2 12 1 158 2 91 1 162 1 15 3 17 1 20 1 223 3 55 3 93 1 95 1 166 1 167 3 168 1 227 1 197 3 169 3 61 1 100 1 62 3 250 4 63 4 27 1 172 1 31 1 173 3 204 1 75 1 
178 1 2 1 109 1 144 1 7 1 215 1 114 1 10 1 155 1 51 1 156 2 158 1 15 1 20 1 223 1 55 1 93 1 195 1 167 1 168 1 227 1 197 1 169 1 99 1 100 1 62 1 250 1 63 1 66 1 27 1 172 1 173 1 
2 1 109 3 144 1 215 1 114 1 51 1 156 2 158 3 15 3 20 1 223 3 55 3 93 1 167 3 168 1 227 1 197 3 169 3 100 1 62 3 250 3 63 3 27 1 172 1 173 3 74 1 
2 1 139 1 109 1 144 1 215 1 114 1 51 1 156 2 158 1 15 1 20 1 223 1 55 1 93 1 167 1 168 1 227 1 197 1 169 1 100 1 62 1 250 1 63 1 27 1 172 1 173 1 
2 1 139 1 20 1 93 1 168 1 227 1 100 1 215 1 114 1 27 1 172 1 51 1 156 2 158 1 
40 1 175 1 156 1 
138 1 28 1 152 2 156 1 
40 1 47 1 171 1 156 1 
232 1 138 1 28 1 151 1 156 1 
189 1 40 1 
44 1 190 1 163 1 137 1 140 1 67 1 
192 1 39 1 42 1 194 1 4 1 130 1 229 1 
44 1 190 1 163 1 137 1 140 1 67 1 212 1 
147 1 41 1 229 1 4 1 
99 1 45 1 148 1 63 1 155 1 95 1 
63 1 167 1 
99 1 45 1 148 1 155 1 
1 1 45 1 148 1 63 2 31 1 95 1 167 1 
63 1 167 1 
35 1 
200 1 
35 1 
168 1 
168 1 
114 1 
221 1 76 1 139 1 20 1 245 1 238 1 227 1 184 1 6 1 200 1 215 1 27 1 35 1 156 2 73 1 
221 2 76 2 20 2 181 1 245 2 238 2 227 2 184 2 6 2 228 1 200 2 215 2 27 2 35 2 156 4 73 2 
221 1 76 1 20 1 245 1 238 1 227 1 99 1 45 1 184 1 6 1 214 2 200 1 101 1 215 1 27 1 89 1 155 3 35 1 156 2 73 1 
221 1 76 1 20 1 245 1 238 1 227 1 184 1 6 1 228 1 200 1 215 1 27 1 35 1 156 2 73 1 
221 2 76 2 20 2 245 2 129 1 238 2 227 2 184 2 6 2 228 1 200 2 215 2 27 2 35 2 156 4 73 2 
221 1 76 1 20 1 181 1 245 1 238 1 227 1 184 1 6 1 200 1 215 1 27 1 35 1 156 2 73 1 
221 1 76 1 20 1 245 1 238 1 227 1 99 1 45 2 184 1 6 1 214 1 200 1 101 1 215 1 27 1 89 2 155 1 35 1 156 2 73 1 
118 1 
99 1 210 2 155 2 134 1 
99 1 210 2 155 2 52 1 
76 1 42 1 210 2 105 1 80 1 211 1 108 1 181 1 238 1 45 1 6 1 184 1 215 1 48 1 218 1 89 1 155 2 156 3 52 1 118 1 221 1 14 2 191 1 194 1 124 1 20 1 54 1 56 2 126 1 245 1 96 1 227 2 248 1 130 1 200 1 101 1 131 1 27 1 229 1 35 1 134 1 73 1 36 1 
129 1 46 1 215 1 76 1 20 1 
37 1 41 1 76 1 137 3 140 1 210 2 77 1 80 1 212 1 4 1 147 1 44 4 238 1 45 1 6 1 184 1 214 1 215 1 48 1 89 1 155 3 156 2 52 1 118 1 221 1 14 2 190 3 163 3 16 1 20 1 21 1 245 1 96 1 227 3 248 1 200 1 101 1 131 1 67 3 27 1 229 1 35 1 34 1 134 1 73 1 
221 1 76 1 20 1 245 1 238 1 129 1 227 1 184 1 6 1 46 1 200 1 215 1 27 1 35 1 156 2 73 1 
231 2 178 1 79 1 43 1 86 1 45 1 7 1 214 1 215 1 241 1 155 2 156 2 187 1 243 1 222 1 20 1 227 1 200 1 249 1 201 1 27 1 29 1 31 1 35 1 73 1 
86 1 
231 2 206 1 176 1 178 1 42 1 105 1 79 1 211 1 108 1 43 1 86 1 45 2 7 1 214 2 215 1 48 1 218 1 241 1 155 3 156 3 188 1 187 1 14 2 191 1 222 1 194 1 124 1 20 1 56 4 126 1 21 2 96 1 227 2 247 1 248 1 130 1 200 1 249 1 27 1 29 2 229 1 33 1 35 1 73 1 36 1 
187 1 231 1 46 1 249 1 241 1 79 1 
206 1 137 4 140 1 77 1 79 1 212 1 4 1 86 1 147 1 214 2 7 1 215 1 155 3 156 2 14 2 163 4 222 1 16 1 20 1 21 2 96 1 227 3 27 1 29 2 229 1 33 1 34 1 35 1 37 1 231 2 178 1 41 1 43 1 44 5 45 2 48 1 241 1 187 1 188 1 190 4 247 1 248 1 200 1 249 1 67 4 73 1 
187 1 231 1 20 1 79 1 227 1 99 1 45 2 247 1 214 1 200 1 249 1 215 1 27 1 29 2 70 1 241 1 155 2 35 1 156 2 73 1 
231 1 37 1 206 1 41 1 137 2 140 1 77 1 79 1 212 1 86 1 4 1 147 1 44 3 45 1 214 1 215 1 48 1 241 1 155 1 156 2 187 1 14 1 190 2 163 2 16 1 20 1 21 1 96 1 227 3 247 1 248 1 200 1 249 1 67 2 27 1 29 1 229 1 33 1 35 1 34 1 73 1 
231 1 45 1 222 1 29 1 31 1 43 1 
99 1 206 1 
99 1 33 1 
231 2 178 1 79 1 43 1 86 1 45 1 7 1 214 1 215 1 241 1 155 2 156 2 187 1 222 1 20 1 227 1 200 1 249 1 27 1 29 1 35 1 73 1 
187 1 231 1 46 1 249 1 241 1 79 1 
231 1 176 1 79 1 45 2 214 1 215 1 241 1 155 2 156 2 20 1 22 1 97 1 227 1 247 1 99 1 200 1 27 1 29 2 70 1 35 1 73 1 

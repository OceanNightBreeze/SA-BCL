#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V | ASSIGN | 3451 | = null
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 22307 | 1 -> 2
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4542 | = null
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
105 1 148 1 208 1 115 1 69 1 198 1 
148 1 208 1 115 1 69 1 198 1 
2 1 182 1 103 2 
159 2 117 3 204 1 77 1 233 1 164 1 106 1 192 1 13 1 28 1 48 1 149 1 150 1 210 1 197 1 109 1 85 1 198 1 33 1 
159 1 117 3 233 1 106 2 48 1 13 1 149 1 150 1 210 1 197 1 109 1 85 1 198 1 128 1 213 1 33 1 
48 1 149 1 137 1 33 1 
155 1 159 1 6 1 117 2 233 1 48 1 149 1 150 1 210 1 109 2 33 1 
159 1 23 1 117 3 204 1 233 1 77 1 164 1 106 1 13 1 48 1 28 1 208 1 150 1 193 1 210 1 197 2 109 1 85 1 198 2 33 1 
159 1 23 1 117 3 204 1 233 1 77 1 164 1 106 1 13 1 48 1 28 1 208 1 150 1 210 1 197 2 109 1 85 1 198 2 33 1 
159 1 23 1 117 2 233 1 191 1 48 1 208 1 149 1 150 1 193 1 14 1 96 1 210 1 197 1 109 1 198 1 33 1 
159 1 23 1 117 2 233 1 48 1 208 1 149 1 150 1 193 1 14 1 96 1 210 1 197 1 109 1 242 1 198 1 33 1 
72 1 159 1 23 1 117 2 233 1 206 1 48 1 208 1 149 1 150 1 14 1 96 1 210 1 197 1 109 1 70 1 198 1 33 1 
72 1 159 1 23 1 117 2 233 1 206 1 48 1 208 1 149 1 150 1 193 1 14 1 96 1 210 1 197 1 109 1 70 1 198 1 33 1 
159 2 117 3 38 1 233 1 48 1 149 1 150 2 210 1 109 1 33 1 
117 3 40 2 172 1 48 1 149 1 150 2 210 1 109 1 240 1 33 1 
48 1 149 1 150 1 144 1 117 2 210 1 109 2 172 1 40 1 33 1 
117 2 40 1 172 1 95 1 48 1 149 1 150 1 210 1 109 1 33 1 
117 2 38 1 40 1 172 1 48 1 149 1 150 3 210 2 109 2 33 1 
117 4 39 1 40 2 172 1 106 1 48 1 13 1 149 1 150 2 223 1 210 2 197 1 109 1 198 1 33 1 213 1 
48 1 149 1 150 1 117 2 210 1 109 1 172 1 40 1 184 1 33 1 
130 1 117 3 218 1 40 1 172 1 27 1 106 4 29 1 48 1 13 1 149 1 150 1 223 1 210 1 197 1 109 1 198 1 33 1 
117 2 90 1 40 1 172 1 43 1 48 1 149 1 150 1 210 1 109 1 33 1 
80 1 227 1 67 3 
67 1 
1 1 3 2 133 4 8 1 9 4 11 1 13 1 136 1 16 1 17 1 19 1 139 2 21 2 24 2 23 1 25 1 26 2 148 2 150 2 151 4 32 1 152 1 158 4 36 2 38 1 40 1 162 1 47 2 48 1 49 4 50 2 167 1 52 1 53 1 55 2 58 2 172 1 61 2 175 2 64 4 176 3 66 1 68 2 73 1 180 2 75 2 186 6 187 1 188 1 82 3 81 2 83 1 196 1 198 2 201 1 89 2 205 1 95 2 207 2 208 1 212 14 213 1 214 1 100 2 102 2 219 2 220 1 106 3 107 2 223 1 224 1 109 3 226 4 113 2 228 1 229 2 231 1 117 3 232 3 118 2 120 2 122 4 124 2 127 1 240 1 128 2 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 214 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 4 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 152 1 212 4 213 1 214 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 56 1 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 214 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 165 1 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 236 1 68 2 240 1 127 1 128 1 243 2 
1 1 3 2 4 2 131 1 133 4 8 1 9 4 10 1 11 1 13 1 136 1 16 1 17 1 19 1 139 2 21 2 141 1 24 2 23 1 25 1 26 2 146 2 148 2 150 2 30 2 151 4 32 1 152 1 154 1 158 4 159 1 35 2 36 2 38 1 162 1 47 2 48 1 49 4 50 2 52 1 53 1 55 2 56 1 58 2 173 1 61 2 175 2 64 4 176 3 66 1 68 2 73 1 180 2 75 2 186 6 188 1 190 1 81 2 83 1 196 1 84 1 85 1 86 1 198 2 199 1 201 1 89 2 205 1 95 2 207 2 208 1 212 4 213 1 214 1 100 2 215 2 102 2 220 1 106 2 107 2 109 3 111 1 226 4 113 2 228 1 229 2 117 3 232 3 233 1 118 2 120 2 122 4 124 2 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 24 2 89 3 201 1 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 4 151 4 32 1 152 1 212 4 213 1 214 1 155 1 158 4 100 2 36 2 38 1 102 2 162 1 40 2 39 1 220 1 47 2 106 2 48 1 107 2 49 4 50 3 223 1 109 5 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 4 232 3 58 2 172 1 118 3 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 152 1 212 4 213 1 214 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 214 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 68 2 240 1 127 1 128 1 243 2 
78 1 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 152 1 212 4 213 1 214 1 155 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 3 165 1 48 1 107 2 49 4 50 2 223 1 109 4 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 236 1 68 2 240 1 127 1 128 2 243 2 
11 1 228 1 49 1 83 1 9 1 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 165 1 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 236 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 74 1 75 2 180 2 8 1 9 4 186 6 188 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 158 4 100 2 36 2 38 1 102 2 162 1 40 1 220 1 47 2 106 2 165 1 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 236 1 68 2 240 1 127 1 128 1 243 2 
1 1 73 1 3 2 133 4 75 2 180 2 8 1 9 4 186 6 188 1 11 1 13 1 81 2 136 1 83 1 196 1 16 1 17 1 198 2 139 2 19 1 21 2 23 1 89 2 201 1 24 2 25 1 205 1 26 2 95 2 207 2 208 1 148 2 150 2 151 4 32 1 212 4 213 1 214 1 158 4 100 2 36 2 217 1 38 1 102 2 162 1 40 1 220 1 47 2 106 2 165 1 48 1 107 2 49 4 50 2 223 1 109 3 52 1 226 4 53 1 113 2 55 2 229 2 228 1 117 3 232 3 58 2 172 1 118 2 61 2 120 2 64 4 175 2 122 4 124 2 176 3 66 1 236 1 68 2 240 1 127 1 128 1 243 2 
119 1 231 1 212 1 
143 1 212 1 
230 1 212 1 
72 1 88 1 232 1 186 1 208 1 14 1 96 1 241 1 239 1 198 1 212 1 138 1 
208 1 232 1 94 1 186 1 198 1 212 1 
208 1 96 1 14 1 239 1 186 1 212 1 198 1 
230 1 212 1 
101 1 212 1 
230 1 212 1 
143 1 212 1 
143 1 212 1 
87 1 116 1 123 1 212 1 
0 1 42 1 212 1 
112 1 20 1 230 1 34 2 201 1 161 1 117 2 40 1 172 1 46 1 48 1 135 1 150 1 235 1 151 2 109 1 212 2 
104 1 
112 1 46 1 20 1 48 1 235 1 150 1 135 1 201 1 117 2 109 1 172 1 40 1 137 1 
1 1 159 2 201 1 89 2 117 3 233 1 118 2 48 1 150 1 50 2 51 1 109 1 
1 1 73 1 4 2 3 2 131 1 133 4 180 2 75 2 8 1 10 1 186 6 188 1 190 1 13 1 81 2 84 1 85 1 86 1 199 1 198 2 139 2 141 1 21 2 23 1 201 1 89 1 24 2 26 2 146 2 95 2 207 2 208 1 148 2 150 1 30 2 151 4 212 4 154 1 155 1 158 4 215 2 100 2 159 1 35 2 36 2 102 2 106 1 47 2 48 1 107 2 50 1 109 2 111 1 226 4 53 1 113 2 55 2 229 2 117 3 232 3 233 1 58 2 173 1 118 1 61 2 120 2 175 2 64 4 122 4 124 2 176 3 68 2 128 1 243 2 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 209 2 151 3 68 1 243 1 
1 1 159 2 201 1 89 2 117 3 233 1 118 2 48 1 150 1 50 2 51 1 109 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 107 1 81 1 50 1 109 1 139 1 55 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 209 2 151 3 68 1 243 1 
1 1 99 1 159 1 201 1 89 1 117 2 233 1 118 1 48 1 150 1 50 1 51 1 109 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 209 2 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 81 1 107 1 50 1 108 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 2 48 1 107 1 81 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 72 3 3 1 180 1 75 1 183 1 8 1 186 2 81 1 14 1 196 1 198 1 139 1 138 2 140 1 88 2 21 1 22 1 23 1 201 1 89 2 24 1 26 1 95 1 208 1 150 2 151 2 96 1 212 3 155 1 158 2 159 2 36 1 102 1 39 1 47 1 48 1 107 1 50 2 51 1 109 4 53 1 114 1 113 1 55 1 231 3 117 3 232 2 58 1 233 1 118 2 61 1 120 1 64 2 175 1 122 2 124 1 68 1 238 1 241 2 242 1 70 2 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 59 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 73 1 4 1 3 1 131 1 133 2 180 1 75 1 186 3 188 1 13 1 81 1 85 1 198 1 139 1 21 1 201 1 89 1 24 1 26 1 146 1 95 1 207 1 148 1 150 1 30 1 151 2 212 2 158 2 215 1 100 1 159 1 35 1 36 1 102 1 106 1 47 1 48 1 107 1 50 1 109 1 226 2 113 1 55 1 229 1 117 3 233 1 58 1 118 1 61 1 120 1 175 1 64 2 122 2 124 1 176 3 68 1 128 1 243 1 
1 1 159 1 35 1 201 1 89 1 117 2 233 1 118 1 48 1 150 1 50 1 51 1 109 1 
73 1 4 1 3 1 131 1 133 2 180 1 75 1 186 3 185 1 188 1 13 1 81 1 198 1 139 1 21 1 22 1 24 1 93 1 26 1 146 1 95 1 207 1 148 1 30 1 151 2 212 2 158 2 215 1 100 1 35 1 36 1 102 1 47 2 106 1 107 1 223 1 226 2 113 1 55 1 229 1 117 1 58 1 59 1 61 1 120 1 234 1 175 1 64 2 122 2 176 3 124 1 68 1 240 1 128 1 243 1 
1 1 73 1 4 1 3 1 131 1 133 2 180 1 75 1 186 3 188 1 13 1 81 1 85 1 198 1 139 1 21 1 201 1 89 1 24 1 26 1 146 1 95 1 207 1 148 1 150 1 30 1 151 2 212 2 158 2 215 1 100 1 159 1 35 1 36 1 102 1 106 1 47 1 48 1 107 1 50 1 108 1 109 1 226 2 113 1 55 1 229 1 117 3 233 1 58 1 118 1 61 1 120 1 175 1 64 2 122 2 124 1 176 3 68 1 128 1 243 1 
1 1 73 1 4 1 3 1 131 1 133 2 180 1 75 1 186 3 188 1 13 1 81 1 198 1 139 1 21 1 201 1 89 1 24 1 26 1 146 1 95 1 207 1 148 1 150 1 30 1 151 2 212 2 158 2 215 1 100 1 35 1 36 1 102 1 40 1 106 1 47 1 48 1 107 1 50 1 223 1 108 1 109 1 226 2 113 1 55 1 229 1 117 3 58 1 172 1 118 1 61 1 120 1 175 1 64 2 122 2 124 1 176 3 68 1 240 1 128 1 243 1 
1 1 158 2 3 1 159 1 75 1 180 1 36 1 102 1 185 1 47 2 48 1 107 1 81 1 50 1 51 1 109 1 139 1 55 1 21 1 22 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 234 1 175 1 64 2 122 2 150 1 124 1 151 2 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 2 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 2 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
132 1 100 1 133 1 212 1 226 1 
132 1 207 1 133 1 212 1 226 1 
100 1 133 1 110 1 41 1 212 1 226 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 72 4 3 1 133 2 75 1 180 1 8 1 185 1 186 3 81 1 14 1 196 1 198 1 139 1 138 3 21 1 88 3 22 1 23 1 201 1 89 1 24 1 93 1 26 1 95 1 207 1 208 1 148 1 150 1 96 1 151 2 212 2 158 2 100 1 159 1 36 1 102 1 47 2 48 1 107 1 50 1 51 1 109 2 226 2 53 1 113 1 55 1 229 1 117 2 232 3 58 1 233 1 59 1 118 1 61 1 120 1 234 1 175 1 64 2 122 2 124 1 68 1 239 1 241 3 70 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 108 1 109 1 139 1 55 1 229 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 229 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 209 2 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 209 2 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 185 1 47 2 48 1 81 1 107 1 50 1 51 1 109 1 139 1 55 1 21 1 22 1 230 1 89 1 201 1 117 2 58 1 233 1 93 1 59 1 118 1 61 1 120 1 64 2 175 1 234 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 158 3 3 1 159 1 180 1 75 1 36 1 102 1 47 1 48 1 107 1 81 1 50 1 109 1 139 1 55 1 21 1 230 1 89 1 201 1 117 2 58 1 233 1 118 1 61 1 120 1 64 2 175 1 122 2 150 1 124 1 151 3 68 1 243 1 
1 1 48 1 159 1 150 1 89 1 201 1 50 1 117 2 109 1 233 1 118 1 
72 3 159 1 77 1 8 1 164 1 186 2 44 1 46 1 191 1 106 1 48 1 14 1 196 1 15 1 109 2 225 1 198 1 138 2 53 1 113 1 88 2 57 1 24 1 201 1 23 1 117 2 231 3 232 2 204 1 233 1 26 1 95 1 28 1 208 1 150 1 96 1 241 2 70 1 97 1 212 4 129 1 
72 3 4 1 215 1 159 1 160 1 8 1 186 2 43 1 45 1 44 1 46 1 48 1 194 1 14 1 84 1 15 1 109 1 225 1 200 1 198 1 138 2 53 1 113 1 88 2 57 1 201 1 24 1 90 1 117 2 231 3 232 2 233 1 26 1 146 1 95 1 208 1 150 1 30 1 96 1 241 2 70 1 97 1 212 4 129 1 
1 1 158 2 3 3 159 1 180 1 75 3 36 1 102 1 103 1 47 3 48 1 81 3 107 3 50 1 108 1 109 1 139 3 54 2 55 3 229 1 21 3 201 1 89 1 117 2 58 3 233 1 118 1 61 1 120 1 175 1 64 4 121 1 122 4 150 1 124 1 151 2 68 1 153 1 243 1 
1 1 3 1 132 1 133 1 159 1 75 1 47 1 48 1 81 1 107 1 50 1 109 1 226 1 139 1 54 1 55 1 21 1 230 1 201 1 89 1 117 2 171 1 58 1 233 1 118 1 147 1 64 1 121 1 122 1 150 1 153 1 212 1 
1 1 54 1 55 1 3 1 21 1 159 1 89 1 201 1 75 1 117 2 233 1 58 1 118 1 47 1 48 1 121 1 64 1 122 1 150 1 107 1 81 1 50 1 109 1 153 1 139 1 
1 1 3 3 159 1 75 3 37 1 47 3 48 1 81 3 107 3 50 1 109 1 139 3 54 3 55 3 21 3 201 1 89 1 117 2 58 3 233 1 118 1 64 3 121 1 122 3 150 1 153 1 
1 1 54 1 55 1 3 1 21 1 159 1 89 1 201 1 75 1 117 2 233 1 58 1 118 1 184 1 47 1 48 1 121 1 64 1 122 1 150 1 107 1 81 1 50 1 109 1 153 1 139 1 
54 1 1 1 159 1 201 1 89 1 117 2 233 1 118 1 184 1 48 1 150 1 50 1 109 1 153 1 
117 1 7 1 170 1 203 1 
202 1 117 1 7 1 
192 1 117 1 91 1 60 2 
192 1 117 1 125 1 31 1 91 1 
12 1 7 1 
72 1 88 1 232 1 241 1 70 1 138 1 
72 1 88 1 232 1 239 1 241 1 70 1 138 1 
189 1 146 1 215 1 208 1 30 1 84 1 198 1 
53 1 208 1 8 1 198 1 
158 1 64 2 81 1 151 1 65 1 68 1 103 1 
64 1 81 1 
158 1 64 1 230 1 151 1 68 1 212 1 
64 1 81 1 
158 1 230 1 151 1 212 1 
172 1 
40 1 
40 1 
159 1 
233 1 
159 1 
76 1 201 1 117 2 181 1 40 1 172 1 163 1 46 1 174 1 48 1 62 1 150 1 222 1 237 1 109 1 
76 1 201 1 117 2 181 1 40 1 172 1 163 1 184 1 46 1 174 1 48 1 62 1 150 1 222 1 109 1 
142 1 76 2 201 2 117 4 181 2 40 2 172 2 163 2 46 2 174 2 48 2 62 2 222 2 150 2 237 1 109 2 
157 1 168 2 230 1 76 1 201 1 117 2 181 1 40 1 172 1 163 1 42 1 46 1 174 1 48 1 62 1 150 1 222 1 151 2 109 1 212 1 
126 1 
179 1 230 1 231 2 212 2 
230 1 231 2 178 1 212 2 
155 1 157 1 73 1 179 1 4 1 131 1 215 1 76 1 181 1 40 1 163 1 186 2 188 1 46 1 106 1 48 1 13 1 222 1 223 1 109 2 198 1 113 1 168 1 24 1 201 1 117 3 231 2 92 1 172 1 26 1 146 1 95 1 174 1 62 1 150 1 30 1 176 2 151 1 237 1 126 1 178 1 212 2 128 1 
48 1 134 1 201 1 163 1 137 1 
72 4 155 1 157 1 179 1 76 1 181 1 40 1 8 1 163 1 42 1 186 2 46 1 48 1 222 1 14 1 196 1 109 3 198 1 138 3 53 1 87 1 113 1 168 1 88 3 24 1 201 1 23 1 117 2 231 2 232 3 172 1 26 1 95 1 174 1 62 1 208 1 150 1 151 1 96 1 239 1 126 1 241 3 70 1 178 1 212 3 
157 1 168 1 230 1 76 1 201 1 117 2 181 1 40 1 172 1 163 1 42 2 46 1 174 1 48 1 62 1 150 1 222 1 151 1 109 1 212 3 
142 1 76 1 201 1 117 2 181 1 40 1 172 1 163 1 46 1 174 1 48 1 62 1 222 1 150 1 109 1 
142 1 76 2 201 2 117 4 181 2 40 2 172 2 163 2 46 2 174 2 48 2 62 2 134 1 222 2 150 2 109 2 137 1 
76 1 201 1 117 2 181 1 40 1 172 1 163 1 46 1 174 1 48 1 62 1 222 1 134 1 150 1 109 1 137 1 
156 2 169 1 216 1 230 1 201 1 117 2 40 1 172 1 145 1 42 1 46 1 63 1 48 1 123 1 221 1 150 1 151 2 109 1 212 2 18 1 
72 3 155 1 156 1 5 1 216 1 40 1 79 1 8 1 42 1 186 1 46 1 48 1 221 1 14 1 196 1 109 3 18 1 198 1 138 2 53 1 87 1 88 2 169 1 201 1 23 1 117 2 232 2 172 1 145 1 26 1 95 1 63 1 208 1 150 1 151 1 96 1 177 1 239 1 241 2 70 1 212 1 
156 1 63 1 166 1 151 1 103 1 71 1 
230 1 79 1 
5 1 230 1 
156 1 133 1 169 1 216 1 201 1 117 2 40 1 172 1 145 1 42 1 46 1 63 2 48 1 166 1 221 1 150 1 151 1 177 1 109 1 212 2 226 1 71 1 
0 1 156 1 133 1 169 1 216 1 201 1 117 2 182 1 40 1 172 1 145 1 42 1 103 1 46 1 63 2 48 1 166 1 221 1 150 1 151 1 177 1 109 1 212 2 226 1 71 1 
177 1 
155 1 156 2 73 1 4 1 131 1 215 1 5 1 133 1 216 1 40 1 79 1 42 2 186 2 188 1 46 1 106 1 48 1 13 1 166 1 221 1 223 1 109 2 226 1 18 1 198 1 87 2 169 1 201 1 117 3 172 1 145 1 26 1 146 1 95 1 63 2 148 1 150 1 30 1 176 4 151 2 177 1 211 1 71 1 212 3 128 1 
63 1 169 1 221 1 216 1 145 1 137 1 
72 5 5 1 133 1 79 1 8 1 186 2 14 1 196 1 198 1 18 1 138 4 87 2 88 4 23 1 201 1 145 1 26 1 95 1 208 1 148 1 150 1 96 1 151 2 212 3 155 1 156 2 216 1 40 1 42 2 46 1 48 1 166 1 221 1 109 3 226 1 53 1 169 1 117 2 232 4 172 1 63 2 177 1 241 4 239 1 70 1 71 1 
63 1 169 1 221 1 216 1 145 1 137 1 
98 1 156 2 40 1 42 1 46 1 48 1 195 1 109 1 18 1 169 1 201 1 230 1 117 2 172 1 145 1 63 1 150 1 123 1 151 2 211 1 212 2 

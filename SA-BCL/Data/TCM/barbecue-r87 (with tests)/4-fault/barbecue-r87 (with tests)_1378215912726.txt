#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module; | RETURN | 3094 | return null
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4542 | = null
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module; | RETURN | 37292 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer; | ASSIGN | 6283 | = null
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 208 1 153 1 159 1 78 1 
183 1 43 2 236 1 
176 1 208 1 153 1 15 1 159 1 78 1 
60 2 44 1 140 1 178 1 79 2 199 2 169 1 128 1 148 3 37 1 10 2 
60 1 140 1 33 1 78 1 178 1 79 4 199 2 211 1 128 1 185 1 148 2 37 1 55 1 10 2 132 1 207 1 
128 1 29 1 140 1 178 1 
60 2 77 1 140 1 178 1 79 2 199 1 128 1 20 1 148 1 37 1 10 1 
60 1 27 1 208 1 76 1 140 1 164 1 122 1 78 2 79 3 90 1 199 1 211 1 128 1 185 2 148 1 37 1 55 1 10 1 24 1 207 1 
60 1 27 1 208 1 76 1 140 1 164 1 78 2 79 3 90 1 199 1 211 1 128 1 185 2 148 1 37 1 55 1 10 1 24 1 207 1 
60 1 208 1 140 1 31 1 122 1 78 1 178 1 79 2 199 1 181 1 128 1 185 1 52 1 148 1 37 1 10 1 24 1 
60 1 208 1 140 1 31 1 122 1 78 1 178 1 79 2 199 1 181 1 128 1 185 1 148 1 37 1 10 1 220 1 24 1 
60 1 152 1 208 1 226 1 140 1 31 1 78 1 178 1 79 2 199 1 181 1 128 1 185 1 148 1 37 1 10 1 24 1 194 1 
60 1 152 1 208 1 226 1 140 1 31 1 122 1 78 1 178 1 79 2 199 1 181 1 128 1 185 1 148 1 37 1 10 1 24 1 194 1 
60 1 140 1 178 1 79 3 199 1 169 1 128 1 148 2 37 1 10 2 
60 1 72 1 13 2 140 1 178 1 79 3 199 1 128 1 148 2 103 1 
60 2 128 1 72 1 13 1 148 1 140 1 79 2 178 1 199 1 36 1 
60 1 72 1 13 1 140 1 178 1 79 2 199 1 128 1 81 1 148 1 
60 1 128 1 72 1 13 1 214 1 148 1 140 1 79 2 178 1 199 1 
60 1 28 1 72 1 13 1 140 1 78 1 178 1 79 3 157 1 199 1 211 4 128 1 184 1 185 1 148 1 22 1 55 1 134 1 
60 1 128 1 82 1 72 1 13 1 148 1 140 1 89 1 79 2 178 1 199 1 
60 1 27 1 72 1 13 1 76 1 164 1 140 1 78 1 178 1 79 3 90 1 157 1 199 1 211 1 128 1 185 1 148 1 55 1 
60 1 72 1 13 1 140 1 78 1 178 1 79 3 157 1 199 1 211 2 170 1 128 1 185 1 148 1 55 1 132 1 
95 1 51 1 70 3 
70 1 
60 2 177 1 0 1 120 3 121 1 63 2 64 2 123 4 179 4 66 3 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 73 2 13 2 137 1 75 2 142 2 17 1 198 2 79 4 78 2 18 6 19 1 80 4 81 2 148 2 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 32 1 34 1 157 1 92 1 211 2 213 1 96 2 98 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 14 223 2 229 2 110 1 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 55 1 174 4 58 1 116 1 175 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 55 1 174 4 58 1 116 1 175 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 55 1 174 4 58 1 116 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 3 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 2 172 3 54 1 53 4 55 1 174 4 58 1 116 1 175 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 4 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 55 1 174 4 58 1 116 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 109 1 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 55 1 174 4 58 1 116 1 175 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 136 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 57 1 55 1 174 4 58 1 116 1 238 3 118 1 
16 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 136 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 3 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 2 172 3 54 1 53 4 57 1 55 1 174 4 58 1 116 1 175 1 238 3 118 1 
0 1 119 1 120 3 123 4 126 1 128 1 129 1 133 4 10 1 132 1 135 2 12 1 137 1 17 1 142 2 18 6 19 1 146 2 148 1 149 2 24 1 25 2 26 1 151 2 154 1 34 1 35 2 159 2 37 1 162 1 161 2 40 2 45 1 167 1 170 1 49 1 172 3 53 4 54 1 55 1 58 1 174 4 175 1 60 2 177 1 64 2 63 2 179 4 68 2 180 1 182 3 189 1 188 1 190 2 191 1 192 2 196 1 195 2 73 2 75 2 197 1 78 2 79 3 198 2 80 4 81 2 205 1 84 1 207 1 206 1 85 2 208 1 87 1 210 2 211 2 213 1 96 2 97 1 100 1 219 2 102 2 222 4 223 2 224 1 227 1 109 1 229 2 231 2 232 2 111 2 233 1 116 1 238 3 118 1 241 2 
182 1 0 1 172 1 100 1 45 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 136 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 57 1 55 1 174 4 58 1 116 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 8 1 188 1 189 1 132 1 133 4 192 2 195 2 196 1 136 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 161 2 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 57 1 55 1 174 4 58 1 116 1 238 3 118 1 
60 2 177 1 0 1 120 3 63 2 64 2 123 4 179 4 68 2 128 1 126 1 182 3 188 1 189 1 132 1 133 4 192 2 195 2 196 1 136 1 135 2 72 1 12 1 13 1 73 2 137 1 75 2 142 2 17 1 198 2 79 3 78 2 18 6 19 1 80 4 81 2 148 1 149 2 205 1 24 1 25 2 84 1 206 1 151 2 85 2 208 1 154 1 87 1 34 1 157 1 211 2 213 1 96 2 159 2 219 2 100 1 161 2 162 1 102 2 103 1 40 2 222 4 223 2 229 2 231 2 45 1 232 2 111 2 49 1 233 1 170 1 172 3 54 1 53 4 57 1 55 1 174 4 58 1 116 1 238 3 117 1 118 1 
121 1 203 1 222 1 
91 1 222 1 
104 1 222 1 
104 1 222 1 
104 1 222 1 
91 1 222 1 
208 1 120 1 74 1 226 1 1 1 31 1 78 1 166 1 18 1 181 1 242 1 222 1 
208 1 120 1 186 1 78 1 18 1 222 1 
208 1 74 1 31 1 78 1 18 1 222 1 181 1 
91 1 222 1 
115 1 222 1 
2 1 143 1 222 1 
42 1 187 1 193 1 222 1 
60 1 72 1 106 2 13 1 79 2 179 2 168 1 91 1 128 1 21 1 99 1 148 1 9 1 71 1 240 1 118 1 222 2 
160 1 
60 1 72 1 29 1 13 1 79 2 168 1 128 1 21 1 148 1 9 1 71 1 240 1 118 1 
60 1 177 2 79 3 34 2 212 1 126 1 128 1 148 1 37 1 10 2 118 1 196 2 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 177 1 63 1 64 1 123 2 179 2 68 1 126 1 128 1 190 1 133 2 10 1 192 1 196 1 195 1 135 1 73 1 75 1 142 1 78 1 79 3 198 1 18 3 80 2 81 1 146 1 148 1 149 1 205 1 25 1 26 1 207 1 85 1 151 1 87 1 35 1 34 1 210 1 211 1 96 1 159 1 37 1 219 1 102 1 161 1 222 2 40 1 223 1 229 1 231 1 232 1 111 1 170 1 53 2 55 1 174 2 238 3 241 1 118 1 
60 1 177 1 35 1 79 2 34 1 212 1 126 1 128 1 148 1 37 1 10 1 118 1 196 1 
61 1 64 1 63 1 123 2 179 2 68 1 125 1 190 1 133 2 192 1 195 1 135 1 73 1 75 1 142 1 79 1 78 1 198 1 18 3 145 1 80 2 81 1 146 1 149 1 205 1 25 1 26 1 85 1 151 1 87 1 35 1 210 1 157 1 211 1 96 1 159 1 216 1 218 1 219 1 161 2 102 1 103 1 222 2 40 1 223 1 229 1 231 1 232 1 111 1 170 1 53 2 55 1 174 2 238 3 241 1 
60 1 177 1 63 1 64 1 123 2 179 2 68 1 126 1 128 1 190 1 133 2 10 1 192 1 196 1 195 1 135 1 73 1 75 1 142 1 78 1 79 3 198 1 18 3 80 2 81 1 146 1 148 1 149 1 205 1 25 1 26 1 207 1 85 1 151 1 87 1 35 1 34 1 210 1 211 1 96 1 159 1 37 1 219 1 102 1 161 1 222 2 40 1 223 1 229 1 231 1 232 1 111 1 170 1 112 1 53 2 55 1 174 2 238 3 241 1 118 1 
60 1 177 1 63 1 64 1 123 2 179 2 68 1 126 1 128 1 190 1 133 2 192 1 196 1 195 1 135 1 72 1 13 1 73 1 75 1 142 1 78 1 79 3 198 1 18 3 80 2 81 1 146 1 148 1 149 1 205 1 25 1 26 1 151 1 85 1 87 1 35 1 34 1 210 1 157 1 211 1 96 1 159 1 219 1 102 1 161 1 103 1 222 2 40 1 223 1 229 1 231 1 232 1 111 1 170 1 112 1 53 2 55 1 174 2 238 3 241 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 2 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 40 1 196 1 195 1 135 1 223 1 229 1 142 1 198 1 79 2 232 1 145 1 111 1 80 2 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 125 1 128 1 126 1 212 1 96 1 37 1 218 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 2 68 1 91 1 125 1 128 1 126 1 212 1 96 1 37 1 219 1 218 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 2 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
75 1 53 1 133 1 38 1 222 1 
53 1 231 1 133 1 38 1 222 1 
225 1 75 1 53 1 237 1 133 1 222 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 2 61 1 177 1 120 3 1 3 63 1 64 1 123 2 179 2 68 1 125 1 181 1 126 1 128 1 188 1 133 2 10 1 192 1 196 1 195 1 135 1 73 1 74 1 75 1 142 1 198 1 78 1 79 2 18 3 145 1 80 2 81 1 148 1 149 1 24 1 25 1 151 1 152 1 85 1 208 1 154 1 31 1 34 1 212 1 96 1 159 1 216 1 37 1 218 1 219 1 102 1 161 2 40 1 222 2 223 1 226 4 229 1 231 1 166 3 232 1 111 1 53 2 58 1 174 2 118 1 242 3 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 112 1 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 158 2 128 1 126 1 212 1 96 1 37 1 218 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 125 1 158 2 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 128 1 126 1 212 1 177 2 37 1 148 1 34 2 79 3 10 2 118 1 196 2 
60 2 119 1 177 1 120 3 63 2 64 2 123 4 179 4 68 2 180 1 126 1 128 1 129 1 188 1 190 2 133 4 10 1 191 1 192 2 196 1 195 2 135 2 73 2 75 2 197 1 142 2 78 2 79 3 198 2 18 6 80 4 81 2 20 1 146 2 148 1 149 2 205 1 24 1 25 2 26 1 207 1 85 2 151 2 208 1 154 1 87 1 35 2 34 1 210 2 211 1 96 2 97 1 159 2 37 1 219 2 102 2 161 2 222 4 40 2 224 1 223 2 227 1 229 2 231 2 167 1 232 2 111 2 170 1 53 4 55 1 174 4 238 3 241 2 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 37 1 218 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 61 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 125 1 158 2 128 1 126 1 212 1 96 1 216 1 37 1 218 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 158 2 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 177 1 79 2 34 1 212 1 126 1 128 1 148 1 37 1 10 1 150 1 118 1 196 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 158 2 128 1 126 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 112 1 148 1 149 1 174 2 25 1 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 68 1 91 1 128 1 126 1 96 1 216 1 37 1 219 1 10 1 161 2 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 4 177 2 120 2 121 2 1 2 63 1 64 1 123 2 179 2 67 1 125 1 181 1 126 1 128 1 188 1 10 2 192 1 196 2 195 1 135 1 73 1 142 1 78 1 79 3 198 1 18 2 80 2 81 1 20 1 148 2 149 1 23 1 24 1 25 1 152 2 85 1 151 1 208 1 154 1 31 1 33 1 34 2 212 1 96 1 37 1 219 1 220 1 102 1 161 1 163 1 222 2 40 1 223 1 107 1 226 3 229 1 166 2 232 1 111 1 58 1 174 2 242 2 118 1 
60 1 151 1 85 1 177 1 63 1 64 1 123 2 34 1 179 3 91 1 125 1 128 1 126 1 212 1 96 1 37 1 219 1 10 1 161 1 196 1 195 1 40 1 135 1 223 1 229 1 142 1 79 2 198 1 232 1 145 1 111 1 80 3 148 1 149 1 174 2 25 1 118 1 
60 1 128 1 126 1 177 1 37 1 148 1 34 1 79 2 10 1 118 1 196 1 
27 1 60 2 152 1 208 1 62 1 154 1 120 2 121 3 1 2 3 1 31 1 90 1 211 1 181 1 94 1 128 1 37 1 188 1 71 1 10 1 192 1 102 1 222 4 73 1 76 1 226 3 138 1 164 1 79 2 78 1 166 2 18 2 81 1 52 1 148 1 204 1 58 1 24 1 242 2 118 1 243 1 
60 1 152 1 208 1 62 1 154 1 120 2 121 3 1 2 3 1 31 1 89 1 210 1 181 1 94 1 128 1 37 1 188 1 101 1 190 1 71 1 10 1 102 1 192 1 39 1 222 4 73 1 226 3 138 1 227 1 79 2 78 1 166 2 18 2 50 1 81 1 82 1 146 1 148 1 204 1 239 1 241 1 242 2 118 1 243 1 
60 1 151 1 177 1 63 1 123 1 34 1 126 1 128 1 69 1 37 1 10 1 161 1 221 1 40 1 196 1 135 1 223 1 14 1 229 1 79 2 111 1 148 1 149 1 174 1 118 1 
60 1 85 1 151 3 177 1 64 1 63 3 123 4 34 1 179 2 68 1 126 1 128 1 69 1 96 1 37 1 219 1 10 1 161 3 221 1 195 1 40 3 196 1 135 3 223 3 43 1 14 2 229 3 142 1 198 1 79 2 232 1 80 2 111 3 112 1 148 1 149 3 174 4 25 1 118 1 
60 1 151 1 177 1 63 1 123 1 34 1 91 1 6 1 126 1 128 1 69 1 37 1 131 1 133 1 10 1 38 1 161 1 221 1 222 1 40 1 196 1 135 1 223 1 14 1 229 1 79 2 111 1 53 1 148 1 149 1 115 1 174 1 118 1 
60 1 151 3 209 1 177 1 63 3 123 3 34 1 126 1 128 1 69 1 37 1 10 1 161 3 221 1 40 3 196 1 135 3 223 3 14 3 229 3 79 2 111 3 148 1 149 3 174 3 118 1 
60 1 151 1 177 1 63 1 123 1 34 1 126 1 128 1 69 1 214 1 37 1 10 1 161 1 221 1 40 1 196 1 135 1 223 1 14 1 229 1 79 2 111 1 148 1 149 1 174 1 118 1 
60 1 14 1 177 1 79 2 34 1 126 1 128 1 69 1 214 1 148 1 37 1 10 1 118 1 196 1 
235 1 130 1 79 1 
7 2 44 1 215 1 79 1 
235 1 65 1 79 1 200 1 
44 1 215 1 114 1 79 1 201 1 
171 1 235 1 
152 1 120 1 1 1 226 1 166 1 242 1 
208 1 227 1 78 1 210 1 46 1 146 1 190 1 
152 1 74 1 120 1 1 1 226 1 166 1 242 1 
208 1 154 1 188 1 78 1 
142 1 179 1 174 1 91 1 80 1 222 1 
229 1 174 1 
179 1 91 1 80 1 222 1 
43 1 229 1 228 1 142 1 179 1 174 2 80 1 
229 1 174 1 
13 1 
72 1 
13 1 
10 1 
10 1 
37 1 
60 1 41 1 72 1 13 1 79 2 48 1 128 1 127 1 113 1 214 1 202 1 148 1 217 1 71 1 118 1 
60 2 41 2 72 2 13 2 141 1 79 4 48 2 128 2 127 2 113 2 202 2 148 2 217 2 71 2 11 1 118 2 
60 1 41 1 72 1 13 1 2 2 79 2 179 1 48 1 91 1 5 1 128 1 127 1 113 1 202 1 148 1 217 1 83 1 71 1 118 1 222 3 
60 1 41 1 72 1 13 1 79 2 48 1 128 1 127 1 113 1 202 1 148 1 217 1 71 1 11 1 118 1 
60 2 41 2 72 2 29 1 13 2 79 4 48 2 234 1 128 2 127 2 113 2 202 2 148 2 217 2 71 2 11 1 118 2 
60 1 41 1 72 1 13 1 141 1 79 2 48 1 128 1 127 1 113 1 202 1 148 1 217 1 71 1 118 1 
60 1 41 1 72 1 13 1 2 1 79 2 179 2 48 1 91 1 5 1 128 1 127 1 113 1 202 1 148 1 217 1 83 2 71 1 118 1 222 1 
124 1 
121 2 4 1 91 1 222 2 
121 2 165 1 91 1 222 2 
60 2 121 2 87 1 210 1 124 1 179 1 4 1 157 1 5 1 211 1 127 1 128 1 217 1 190 1 71 1 192 1 102 1 222 2 41 1 72 1 73 1 13 1 139 1 165 1 141 1 79 3 78 1 18 2 48 1 170 1 81 1 113 1 20 1 146 1 202 1 148 1 55 1 83 1 205 1 238 2 26 1 241 1 118 1 
128 1 234 1 29 1 202 1 118 1 
60 3 152 1 208 1 154 1 120 3 121 2 2 1 1 3 31 1 124 1 179 1 4 1 5 1 181 1 127 1 128 1 217 1 188 1 71 1 193 1 192 1 102 1 222 3 41 1 72 1 73 1 13 1 74 1 226 4 165 1 79 2 78 1 166 3 18 2 48 1 81 1 113 1 20 1 202 1 148 1 83 1 58 1 24 1 242 3 118 1 
60 1 41 1 72 1 29 1 13 1 79 2 48 1 234 1 128 1 127 1 113 1 202 1 148 1 217 1 71 1 118 1 
60 1 86 1 155 1 2 1 179 1 156 2 93 1 128 1 183 1 71 1 133 1 105 1 222 2 72 1 13 1 43 1 108 1 79 2 143 1 144 1 147 1 148 1 53 1 56 1 118 1 
144 1 
60 2 86 1 155 1 2 2 87 1 210 1 179 2 156 2 157 1 211 1 93 1 128 1 159 1 190 1 133 1 71 1 193 2 102 1 222 3 105 1 72 1 13 1 108 1 230 1 79 3 78 1 144 1 47 1 18 2 170 1 81 1 20 1 146 1 147 1 173 1 53 1 148 1 56 2 55 1 205 1 59 1 238 4 26 1 241 1 118 1 
29 1 155 1 147 1 156 1 93 1 105 1 
60 3 120 4 1 4 2 2 179 2 181 1 128 1 188 1 71 1 133 1 193 2 72 1 13 1 74 1 78 1 79 2 144 1 18 2 81 1 20 1 147 1 148 1 24 1 152 1 208 1 86 1 154 1 155 1 31 1 156 2 93 1 159 1 102 1 105 1 222 3 226 5 108 1 230 1 166 4 47 1 53 1 56 2 58 1 59 1 118 1 242 4 
60 1 72 1 13 1 155 1 2 1 79 2 179 2 156 1 91 1 93 1 128 1 147 1 187 1 148 1 56 2 71 1 59 1 118 1 222 2 105 1 
60 3 152 1 208 1 154 1 120 2 155 1 2 1 1 2 31 1 179 1 156 1 93 1 181 1 128 1 188 1 71 1 193 1 102 1 222 1 105 1 72 1 13 1 74 1 226 3 230 1 79 2 78 1 166 2 144 1 18 1 47 1 81 1 20 1 147 1 148 1 56 1 58 1 59 1 24 1 242 2 118 1 
43 1 86 1 108 1 56 1 179 1 156 1 
230 1 91 1 
47 1 91 1 
60 1 86 1 155 1 2 1 179 1 156 2 93 1 128 1 71 1 133 1 105 1 222 2 72 1 13 1 108 1 79 2 144 1 147 1 148 1 53 1 56 1 118 1 
29 1 155 1 147 1 156 1 93 1 105 1 
60 1 155 1 30 1 2 1 88 1 179 2 156 1 91 1 128 1 187 1 71 1 222 2 72 1 13 1 79 2 147 1 173 1 148 1 56 2 59 1 118 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 133 130 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 133 140 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 133 130 43 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | CONDITION | 5281 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I | CONDITION | 3573 | if (x) -> if (!x)
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String; | RETURN | 4244 | return null
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | ASSIGN | 4320 | = null
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
102 1 118 1 1 1 196 1 150 1 159 1 
118 1 1 1 196 1 150 1 159 1 
77 2 249 1 203 1 
217 1 46 1 175 1 19 2 149 1 195 1 22 1 208 1 40 1 41 2 169 1 
118 1 217 1 46 1 173 1 87 4 19 1 33 1 146 1 149 1 22 1 208 1 40 1 41 3 184 1 187 1 247 1 169 1 250 1 
14 1 149 1 217 1 46 1 22 1 208 1 41 2 40 1 161 1 19 1 169 1 
118 1 217 1 46 1 173 1 73 1 87 1 19 1 79 1 162 1 149 1 22 1 208 1 40 1 41 3 112 1 247 1 169 1 250 1 
118 1 217 1 46 1 173 1 87 2 19 1 149 1 22 1 208 1 40 1 41 3 156 1 247 1 169 1 231 1 250 1 
217 1 46 1 132 1 40 1 
83 1 217 1 46 1 19 1 149 1 22 2 208 1 40 1 41 2 155 1 169 1 
118 2 1 1 46 1 173 1 73 1 48 1 87 1 19 1 79 1 162 1 149 1 129 1 22 1 208 1 40 1 41 3 112 1 247 2 169 1 250 1 
118 2 1 1 46 1 173 1 73 1 87 1 19 1 79 1 162 1 149 1 129 1 22 1 208 1 40 1 41 3 112 1 247 2 169 1 250 1 
118 1 1 1 217 1 46 1 48 1 19 1 60 1 149 1 129 1 22 1 208 1 40 1 41 2 99 1 247 1 169 1 202 1 
118 1 1 1 217 1 46 1 48 1 190 1 19 1 60 1 149 1 129 1 22 1 208 1 40 1 41 2 99 1 247 1 169 1 
118 1 1 1 217 1 46 1 84 1 205 1 19 1 60 1 149 1 194 1 129 1 22 1 208 1 40 1 41 2 99 1 247 1 169 1 
118 1 1 1 217 1 46 1 84 1 205 1 48 1 19 1 60 1 149 1 194 1 129 1 22 1 208 1 40 1 41 2 99 1 247 1 169 1 
217 1 46 1 126 1 19 2 149 1 22 1 208 1 40 1 41 3 169 2 
217 1 46 1 49 2 176 1 149 1 22 1 243 1 40 1 41 3 169 2 
149 1 217 1 46 1 22 2 131 1 49 1 41 2 40 1 176 1 169 1 
217 1 46 1 49 1 89 1 176 1 149 1 22 1 40 1 41 2 169 1 
217 1 46 1 49 1 176 1 126 1 149 2 22 2 40 1 41 2 169 3 
118 1 120 1 217 1 46 1 173 1 87 1 49 2 176 1 20 1 149 2 22 1 40 1 41 4 247 1 169 2 231 1 
64 1 152 3 135 1 
152 1 
225 1 
56 2 117 1 58 1 121 1 128 1 11 1 130 1 133 1 136 1 137 1 69 1 71 4 144 1 206 1 22 3 23 1 151 1 212 1 213 4 83 1 158 1 218 1 31 1 32 1 90 1 163 1 37 1 39 1 98 3 41 2 169 1 172 10 45 1 46 1 106 1 107 1 51 1 49 1 176 1 236 1 239 1 109 1 53 1 240 1 243 1 185 1 244 1 114 1 54 1 
158 1 218 1 58 1 32 1 128 1 62 1 223 1 11 1 39 1 130 1 65 1 41 2 133 1 169 1 172 2 103 1 71 4 46 1 49 1 17 1 176 1 180 1 22 2 110 1 242 1 243 1 244 1 185 1 213 4 215 1 
158 1 218 1 31 1 58 1 32 1 163 1 128 1 11 1 39 1 130 1 37 1 133 1 41 2 169 1 137 1 71 4 15 1 46 1 106 1 107 1 49 1 176 1 22 2 243 1 244 1 185 1 213 4 
158 1 218 1 31 1 58 1 32 1 163 1 128 1 11 1 39 1 130 1 37 1 133 1 41 2 169 1 137 1 71 4 15 1 46 1 106 1 107 1 49 1 176 1 22 2 243 1 244 1 185 1 213 4 
117 1 158 1 218 1 58 1 121 1 32 1 90 1 163 1 128 1 11 1 39 1 130 1 41 2 133 1 136 1 137 1 169 1 69 1 45 1 71 4 46 1 106 1 107 1 144 1 49 1 176 1 236 1 239 1 109 1 53 1 22 2 23 1 240 1 243 1 244 1 185 1 212 1 213 4 248 1 
118 2 117 5 1 1 120 1 58 1 5 2 121 3 7 1 123 1 125 1 126 1 192 2 128 1 9 1 129 1 11 1 130 1 133 1 136 3 67 2 200 1 137 2 68 1 69 1 70 3 71 4 74 2 144 1 18 3 80 1 23 3 22 4 26 2 156 1 157 2 212 3 213 4 158 1 83 1 218 1 31 1 159 2 85 2 87 2 88 2 89 2 219 4 90 3 32 1 163 2 165 4 221 1 222 2 38 2 37 1 39 1 97 4 41 3 42 6 100 1 169 3 231 1 230 1 171 2 172 4 45 3 46 1 173 1 106 2 107 1 51 1 49 1 236 3 176 1 52 1 109 3 239 1 53 5 183 2 241 2 240 3 111 2 243 1 185 1 244 1 186 2 116 4 115 1 
117 1 158 1 218 1 31 1 58 1 121 1 32 1 90 1 163 1 128 1 11 1 39 1 130 1 37 1 41 2 133 1 136 1 137 1 169 1 69 1 45 1 71 4 46 1 106 1 107 1 144 1 49 1 51 1 176 1 236 1 53 1 239 1 109 1 22 2 23 1 240 1 243 1 244 1 185 1 212 1 213 4 
158 1 71 4 58 1 32 1 11 1 130 1 39 1 133 1 243 1 185 1 244 1 213 4 
158 1 218 1 31 1 58 1 32 1 163 1 128 1 11 1 39 1 130 1 37 1 133 1 41 2 169 1 137 1 71 4 15 1 46 1 106 1 107 1 19 1 22 2 208 1 244 1 185 1 213 4 
71 1 39 1 130 1 133 1 213 1 
117 1 218 1 31 1 58 1 121 1 32 1 90 1 163 1 128 1 11 1 39 1 130 1 37 1 41 2 133 1 136 1 137 1 169 1 69 1 45 1 71 4 46 1 106 1 107 1 144 1 49 1 51 1 176 1 236 1 53 1 239 1 109 1 22 2 23 1 240 1 243 1 244 1 185 1 212 1 213 4 
117 1 218 1 31 1 58 1 121 1 32 1 90 1 163 1 128 1 11 1 39 1 37 1 41 2 133 1 136 1 137 1 169 1 69 1 45 1 71 4 46 1 140 1 106 1 107 1 144 1 49 1 51 1 176 1 236 1 53 1 239 1 109 1 22 2 23 1 240 1 243 1 244 1 185 1 212 1 213 4 
117 1 158 1 218 1 31 1 58 1 121 1 90 1 32 1 163 1 128 1 11 1 39 1 130 1 37 1 41 2 133 1 136 1 137 1 169 1 43 1 69 1 45 1 71 4 46 1 106 1 107 1 144 1 49 1 176 1 236 1 237 1 53 1 239 1 109 1 22 2 23 1 240 1 243 1 185 1 244 1 212 1 213 4 
172 1 153 1 114 1 
172 1 193 1 
172 1 145 1 
118 1 172 1 1 1 188 1 18 1 60 1 194 1 181 1 10 1 24 1 99 1 42 1 
118 1 172 1 1 1 18 1 42 1 76 1 
172 1 118 1 60 1 1 1 10 1 42 1 99 1 
172 1 145 1 
172 1 124 1 
172 1 145 1 
172 1 193 1 
172 1 193 1 
172 1 72 1 197 1 154 1 
172 1 36 1 75 1 
172 1 218 1 46 1 160 1 49 1 17 1 124 1 176 1 145 1 91 1 127 1 164 1 22 1 209 1 198 1 41 2 169 1 116 1 
2 1 
218 1 46 1 160 1 49 1 17 1 176 1 91 1 164 1 22 1 209 1 132 1 41 2 169 1 
218 1 46 1 106 2 107 1 19 2 163 2 22 1 208 1 41 3 169 1 137 2 232 1 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
218 1 46 1 106 2 107 1 19 2 163 2 22 1 208 1 41 3 169 1 137 2 232 1 
118 2 117 4 1 1 6 1 121 2 5 2 7 1 189 2 191 1 192 2 63 1 129 1 136 2 67 2 137 1 138 1 68 1 70 3 74 2 18 3 19 1 148 1 22 2 23 2 81 2 208 1 210 1 156 1 26 2 212 2 83 1 218 1 85 2 159 2 87 1 88 2 219 4 89 2 90 2 220 2 163 1 165 4 92 1 222 2 38 2 97 4 41 3 42 6 100 1 169 1 228 1 229 2 101 2 171 2 172 4 45 2 46 1 173 1 106 1 107 1 236 2 178 2 238 1 109 2 53 4 183 2 240 2 241 2 111 2 186 2 113 1 115 1 250 1 116 4 
117 2 29 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 211 2 212 1 116 3 
218 1 46 1 22 1 106 1 208 1 107 1 41 2 137 1 19 1 169 1 163 1 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 212 1 116 3 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 211 2 212 1 116 3 
218 1 30 1 46 1 106 1 107 1 19 1 163 1 22 1 208 1 41 2 169 1 137 1 232 1 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 211 2 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 122 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 216 1 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 118 1 1 1 3 1 5 1 121 1 188 2 190 1 192 1 60 1 128 1 194 3 129 1 10 1 136 1 67 1 137 2 68 1 205 2 74 1 18 2 20 1 19 2 23 1 22 4 208 1 24 2 26 1 212 1 83 1 218 1 88 1 89 1 90 1 163 2 165 2 222 1 38 1 41 3 99 1 42 2 100 1 169 2 171 1 232 1 44 1 172 3 45 1 46 1 105 1 106 2 107 1 236 1 108 1 181 2 53 2 109 1 183 1 182 1 240 1 241 1 111 1 114 3 116 2 
117 2 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 212 1 116 3 
118 1 117 2 121 1 5 1 7 1 189 1 192 1 136 1 67 1 137 1 138 1 70 3 74 1 19 1 22 1 23 1 81 1 208 1 156 1 26 1 212 1 218 1 85 1 159 1 87 1 88 1 89 1 219 2 90 1 220 1 163 1 165 2 222 1 38 1 97 2 41 3 42 3 169 1 229 1 101 1 171 1 172 2 45 1 46 1 173 1 106 1 107 1 236 1 178 1 109 1 53 2 183 1 240 1 241 1 111 1 186 1 115 1 250 1 116 2 
218 1 46 1 106 1 107 1 220 1 19 1 163 1 22 1 208 1 41 2 169 1 137 1 232 1 
118 1 117 2 120 1 3 1 121 1 5 1 7 1 189 1 192 1 136 2 67 1 138 1 70 3 74 1 207 1 23 1 81 1 26 1 156 1 212 1 29 1 216 1 159 1 85 1 87 1 88 1 89 1 219 2 90 1 220 1 165 2 222 1 38 1 97 2 41 1 42 3 229 1 170 1 101 1 171 1 172 2 45 1 173 1 236 1 178 1 53 2 109 1 183 1 241 1 240 1 111 1 243 1 186 1 115 1 116 2 
118 1 117 2 121 1 5 1 122 1 7 1 189 1 192 1 136 1 67 1 137 1 138 1 70 3 74 1 19 1 22 1 23 1 81 1 208 1 156 1 26 1 212 1 218 1 85 1 159 1 87 1 88 1 89 1 219 2 90 1 220 1 163 1 165 2 222 1 38 1 97 2 41 3 42 3 169 1 229 1 101 1 171 1 172 2 45 1 46 1 173 1 106 1 107 1 236 1 178 1 109 1 53 2 183 1 240 1 241 1 111 1 186 1 115 1 250 1 116 2 
118 1 117 2 120 1 5 1 121 1 122 1 7 1 189 1 192 1 136 1 67 1 137 1 138 1 70 3 74 1 22 1 23 1 81 1 156 1 26 1 212 1 218 1 85 1 159 1 87 1 88 1 219 2 89 1 90 1 220 1 163 1 165 2 222 1 38 1 97 2 41 3 42 3 169 1 229 1 101 1 171 1 172 2 45 1 46 1 173 1 106 1 107 1 49 1 176 1 236 1 178 1 109 1 53 2 183 1 240 1 241 1 111 1 243 1 186 1 115 1 116 2 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 2 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 19 1 207 1 109 1 53 2 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 212 1 116 2 
117 2 29 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 212 1 116 3 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 2 222 1 38 1 41 2 136 1 137 1 169 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 241 1 208 1 111 1 26 1 186 1 212 1 116 2 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
172 1 97 1 245 1 219 1 229 1 
172 1 85 1 97 1 245 1 219 1 
172 1 86 1 97 1 219 1 229 1 34 1 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 118 1 1 1 3 1 5 1 121 1 188 3 192 1 128 1 60 1 194 4 129 1 10 1 136 2 67 1 137 1 68 1 205 1 74 1 18 3 19 1 207 1 22 2 23 1 208 1 24 3 26 1 212 1 29 1 216 1 218 1 85 1 159 1 88 1 90 1 219 2 89 1 163 1 165 2 222 1 38 1 97 2 41 2 99 1 42 3 100 1 169 1 170 1 229 1 171 1 232 1 172 2 45 1 46 1 106 1 107 1 236 1 181 3 109 1 53 2 183 1 240 1 241 1 111 1 186 1 116 2 
117 2 218 1 5 1 121 1 122 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 212 1 116 3 
117 2 29 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 186 1 211 2 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 211 2 212 1 116 3 
117 2 29 1 216 1 218 1 3 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 2 137 1 169 1 170 1 171 1 232 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 207 1 53 2 109 1 183 1 23 1 22 1 240 1 208 1 241 1 111 1 26 1 212 1 116 3 
117 2 218 1 5 1 121 1 88 1 90 1 163 1 165 3 222 1 38 1 41 2 136 1 137 1 169 1 171 1 45 1 46 1 106 1 107 1 236 1 145 1 19 1 53 2 109 1 183 1 22 1 23 1 240 1 208 1 241 1 111 1 26 1 212 1 116 3 
118 1 1 1 218 1 57 1 87 1 188 2 89 1 192 1 59 1 162 1 128 1 60 1 194 3 129 1 167 1 41 2 42 2 99 1 100 1 67 1 169 1 202 1 172 4 68 1 46 1 73 1 234 1 205 1 74 1 235 1 18 2 17 1 19 1 79 1 181 2 22 2 24 2 208 1 112 1 114 3 214 1 
118 1 1 1 218 1 57 1 188 2 189 1 89 1 161 1 192 1 59 1 60 1 194 3 63 1 224 1 167 1 41 2 42 2 99 1 100 1 67 1 169 1 101 1 172 4 68 1 139 1 14 1 46 1 234 1 205 1 74 1 235 1 18 2 17 1 19 1 78 1 178 1 181 2 22 1 81 1 24 2 208 1 82 1 114 3 214 1 
117 4 218 1 5 1 121 3 122 1 88 1 90 3 163 1 165 2 222 1 38 1 41 2 136 3 169 1 137 1 171 1 69 1 45 3 46 1 106 1 107 1 144 2 236 3 19 1 77 1 53 4 109 3 239 1 183 1 22 1 23 3 241 1 240 3 208 1 111 1 26 1 186 1 212 3 116 2 
117 3 218 1 121 3 90 3 163 1 41 2 136 3 66 1 169 1 137 1 69 1 45 3 46 1 106 1 107 1 144 3 236 3 19 1 53 3 109 3 239 1 22 1 23 3 240 3 208 1 212 3 
117 1 218 1 121 1 90 1 163 1 41 2 136 1 169 1 137 1 69 1 45 1 46 1 106 1 107 1 175 1 144 1 236 1 19 1 53 1 109 1 239 1 22 1 23 1 240 1 208 1 212 1 
69 1 218 1 46 1 106 1 107 1 175 1 144 1 19 1 163 1 22 1 208 1 41 2 169 1 137 1 
117 1 218 1 121 1 219 1 90 1 163 1 97 1 41 2 136 1 169 1 137 1 172 1 69 1 45 1 46 1 106 1 107 1 144 1 236 1 145 1 19 1 53 1 109 1 239 1 22 1 23 1 240 1 208 1 245 1 27 1 157 1 212 1 
117 1 218 1 121 1 90 1 163 1 41 2 136 1 169 1 137 1 69 1 45 1 46 1 106 1 107 1 144 1 236 1 19 1 53 1 109 1 239 1 22 1 23 1 240 1 208 1 212 1 
166 1 8 1 41 1 177 1 
47 1 195 1 41 1 12 1 13 1 
93 1 166 1 41 1 
233 2 47 1 195 1 41 1 
0 1 166 1 
181 1 194 1 205 1 24 1 188 1 18 1 
68 1 118 1 1 1 100 1 
181 1 194 1 205 1 10 1 24 1 188 1 18 1 
35 1 118 1 1 1 63 1 81 1 189 1 101 1 
179 1 53 2 23 1 77 1 116 1 165 1 171 1 
53 1 23 1 
172 1 53 1 145 1 116 1 165 1 171 1 
53 1 23 1 
172 1 145 1 116 1 165 1 
176 1 
49 1 
49 1 
19 1 
208 1 
19 1 
218 1 233 1 46 1 4 1 142 1 175 1 16 1 17 1 22 1 226 1 41 2 246 1 28 1 169 1 227 1 
218 2 233 2 46 2 4 2 142 2 16 2 17 2 22 2 226 2 41 4 246 2 168 1 28 2 169 2 201 1 227 2 
218 1 233 1 46 1 4 1 142 1 16 1 17 1 22 1 226 1 41 2 246 1 168 1 28 1 169 1 227 1 
218 1 233 1 46 1 4 1 142 1 16 1 17 1 22 1 96 1 226 1 132 1 41 2 246 1 28 1 169 1 227 1 
172 1 119 1 218 1 233 1 46 1 4 1 142 1 16 1 17 1 145 1 36 1 22 1 226 1 41 2 246 1 28 1 169 1 227 1 116 2 55 2 
94 1 
172 2 199 1 145 1 114 2 
172 2 141 1 145 1 114 2 
118 1 83 1 119 1 218 1 4 1 87 1 7 1 189 1 89 1 192 1 61 1 94 1 226 1 41 3 42 2 168 1 67 1 199 1 169 1 138 1 227 1 101 1 172 2 70 2 233 1 46 1 173 1 141 1 142 1 74 1 16 1 17 1 178 1 22 2 81 1 246 1 156 1 28 1 114 2 116 1 55 1 115 1 250 1 
218 1 46 1 96 1 132 1 227 1 
118 1 83 1 1 1 119 1 218 1 4 1 188 3 89 1 192 1 128 1 60 1 36 1 194 4 94 1 129 1 10 1 226 1 41 2 42 2 99 1 100 1 67 1 199 1 169 1 227 1 68 1 172 3 233 1 46 1 205 1 141 1 142 1 74 1 16 1 18 3 17 1 181 3 22 3 24 3 154 1 246 1 28 1 114 2 116 1 55 1 
172 3 119 1 218 1 233 1 46 1 4 1 142 1 16 1 17 1 145 1 36 2 22 1 226 1 41 2 246 1 28 1 169 1 227 1 116 1 55 1 
218 1 233 1 46 1 4 1 142 1 16 1 17 1 22 1 226 1 41 2 246 1 28 1 169 1 201 1 227 1 
218 2 233 2 46 2 4 2 142 2 16 2 17 2 22 2 96 1 226 2 132 1 41 4 246 2 28 2 169 2 201 1 227 2 
180 1 103 1 62 1 65 1 110 1 132 1 
218 1 62 1 36 1 226 1 134 1 41 2 169 1 172 2 103 1 204 1 233 1 46 1 104 2 72 1 143 1 17 1 145 1 22 1 110 1 25 1 116 2 
172 2 204 1 103 1 218 1 233 1 72 1 104 2 46 1 17 1 145 1 180 1 36 1 62 1 22 1 110 1 65 1 226 1 41 2 169 1 116 2 
118 1 83 1 1 1 218 1 188 2 89 1 128 1 60 1 36 1 194 3 62 1 129 1 10 1 95 1 226 1 65 1 41 2 42 1 99 1 100 1 169 1 172 1 68 1 204 1 103 1 233 1 104 1 46 1 205 1 174 1 74 1 18 2 17 1 180 1 181 2 21 1 22 3 24 2 110 1 154 1 116 1 
147 1 103 1 104 1 50 1 77 1 116 1 
21 1 145 1 
174 1 145 1 
172 2 103 2 218 1 233 1 104 1 46 1 50 1 219 1 17 1 147 1 180 1 36 1 62 1 22 1 95 1 97 1 110 1 65 1 226 1 41 2 169 1 116 1 
218 1 219 1 62 1 36 1 95 1 226 1 65 1 97 1 41 2 169 1 172 2 103 2 233 1 46 1 104 1 75 1 50 1 17 1 77 1 180 1 147 1 22 1 110 1 116 1 249 1 
95 1 
118 1 83 1 218 1 159 1 87 1 7 1 189 1 219 1 89 1 36 2 62 1 95 1 97 1 226 1 65 1 134 1 41 3 42 2 169 1 138 1 101 1 172 3 204 1 103 2 70 4 233 1 104 2 46 1 173 1 174 1 74 1 50 1 17 1 178 1 147 1 180 1 21 1 22 2 81 1 110 1 154 2 156 1 116 2 250 1 115 1 
180 1 103 1 62 1 65 1 110 1 132 1 
118 1 83 1 1 1 218 1 159 1 188 4 219 1 89 1 128 1 60 1 36 2 194 5 62 1 129 1 10 1 95 1 97 1 226 1 65 1 41 2 42 2 99 1 100 1 169 1 172 3 68 1 204 1 103 2 233 1 104 2 46 1 205 1 174 1 74 1 50 1 18 4 17 1 147 1 180 1 181 4 21 1 22 3 24 4 110 1 154 2 116 2 

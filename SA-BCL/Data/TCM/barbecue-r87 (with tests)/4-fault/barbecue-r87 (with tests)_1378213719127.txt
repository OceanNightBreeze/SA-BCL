#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V ERROR java.lang.StringIndexOutOfBoundsException 50 59 229 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7029 | if (x) -> if (!x)
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension; | RETURN | 10319 | return null
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V | OPERATOR | 3533 | == -> <
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 26011 | 3 -> 1
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
117 1 171 1 212 1 153 1 221 1 
21 1 42 1 150 2 
10 1 117 1 171 1 212 1 153 1 221 1 
232 1 4 1 40 1 203 1 139 1 187 2 43 1 76 1 222 1 165 1 194 2 
232 1 23 1 4 1 40 1 203 1 139 2 187 1 43 1 222 1 194 2 197 1 
179 1 232 1 55 1 94 1 40 1 203 1 153 2 139 1 187 1 43 1 15 1 65 2 222 1 205 1 66 1 83 1 171 1 194 3 240 1 196 1 
179 1 232 1 55 1 94 1 40 1 203 1 153 2 139 1 187 1 43 1 15 1 65 2 222 1 205 1 66 1 83 1 171 1 194 3 240 1 
232 1 74 1 4 1 40 1 203 1 153 1 139 1 152 1 187 1 43 1 65 1 222 1 205 1 171 1 194 2 228 1 196 1 
232 1 201 1 4 1 40 1 203 1 153 1 139 1 152 1 187 1 43 1 65 1 222 1 205 1 171 1 194 2 228 1 196 1 
232 1 4 1 40 1 203 1 153 1 139 1 152 1 187 1 43 1 65 1 222 1 205 1 156 1 171 1 194 2 193 1 133 1 228 1 
232 1 4 1 40 1 203 1 153 1 139 1 152 1 187 1 43 1 65 1 222 1 205 1 156 1 171 1 194 2 193 1 133 1 228 1 196 1 
232 1 40 2 4 1 194 3 203 1 139 1 43 1 187 2 222 1 223 1 
232 1 40 2 4 1 194 3 203 1 139 1 131 1 61 2 43 1 63 1 
232 1 40 1 4 1 31 1 194 2 203 1 139 2 131 1 61 1 43 1 
105 1 232 1 40 1 4 1 194 2 203 1 139 1 131 1 61 1 43 1 
232 1 7 1 40 1 4 1 194 2 203 1 139 1 131 1 61 1 43 1 
232 1 38 1 4 1 40 1 94 1 203 1 153 1 61 1 139 1 43 1 65 1 206 1 66 1 70 1 194 3 131 1 
232 1 39 1 4 1 40 1 203 1 61 1 139 1 43 1 123 1 194 2 131 1 
232 1 40 3 4 1 194 2 203 1 139 2 131 1 61 1 43 2 223 1 
232 1 38 1 4 1 40 2 94 1 203 1 153 1 61 2 139 1 43 2 65 1 66 1 158 1 30 1 194 4 131 1 
179 1 232 1 38 1 55 1 94 1 4 1 40 1 203 1 153 1 61 1 139 1 43 1 15 1 65 1 66 1 194 3 131 1 240 1 
232 1 38 1 4 1 40 1 94 1 203 1 153 1 61 1 139 1 43 1 65 1 190 1 66 2 30 1 194 3 131 1 
12 1 225 1 184 3 
184 1 
101 1 
54 1 180 14 56 2 0 2 2 2 119 2 60 1 61 1 62 1 63 1 190 1 124 4 125 2 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 132 1 135 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 14 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 219 1 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 99 1 157 1 159 3 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 163 2 38 1 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 114 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 61 1 62 1 63 1 190 2 125 2 124 4 66 3 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 157 1 30 1 227 1 161 1 162 1 34 1 230 1 231 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 4 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 157 1 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 60 1 61 1 62 1 63 1 190 2 125 2 124 4 66 3 6 2 192 2 68 1 194 3 71 3 131 1 9 2 197 1 198 1 136 3 73 2 199 1 138 2 203 1 139 4 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 99 1 157 1 30 1 227 1 161 1 162 1 34 1 230 1 231 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 3 2 2 119 2 61 2 62 1 63 1 190 1 125 3 124 4 66 2 6 2 192 2 68 1 194 4 71 3 131 1 9 2 197 1 198 1 136 3 73 2 199 1 138 2 203 1 139 5 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 158 1 157 1 30 1 227 1 161 1 162 1 34 1 230 1 231 1 35 4 103 2 105 2 163 2 38 1 233 4 107 3 109 4 40 4 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 157 1 30 1 227 1 161 1 162 1 34 1 230 1 231 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 157 1 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 209 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 157 1 30 1 227 1 161 1 162 1 34 1 230 1 231 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
0 2 119 2 2 2 124 4 125 2 6 2 129 2 9 2 136 3 138 2 139 3 140 2 142 2 141 1 144 4 145 2 17 2 19 2 146 2 20 2 22 4 151 6 153 2 154 2 24 1 25 1 155 2 26 1 157 1 28 1 30 1 161 1 162 1 34 1 35 4 163 2 40 2 44 1 46 2 164 1 47 1 169 4 171 1 174 1 177 1 54 1 180 4 56 2 57 2 62 1 187 1 190 1 66 2 192 2 68 1 194 3 71 3 195 1 198 1 73 2 199 1 200 1 202 1 203 1 204 1 78 2 205 1 80 1 83 1 81 1 82 2 209 1 211 2 216 4 94 1 93 1 220 2 221 2 222 1 223 1 97 2 224 1 227 1 230 1 103 2 231 1 105 2 233 4 107 2 108 1 109 4 234 1 110 2 111 1 236 2 238 1 
124 1 169 1 227 1 204 1 230 1 
54 1 180 4 56 2 0 2 2 2 119 2 60 1 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 211 2 20 2 216 4 22 4 93 1 94 1 151 6 153 2 154 2 220 2 221 2 26 1 223 1 155 2 99 1 157 1 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 60 1 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 142 2 79 1 78 2 205 1 145 2 80 1 144 4 17 2 82 2 211 2 20 2 216 4 22 4 93 1 94 1 151 6 153 2 154 2 220 2 221 2 26 1 223 1 155 2 99 1 157 1 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 174 1 177 1 
54 1 180 4 56 2 0 2 2 2 119 2 60 1 61 1 62 1 63 1 190 1 125 2 124 4 66 2 6 2 192 2 68 1 194 3 71 3 131 1 9 2 198 1 136 3 73 2 199 1 138 2 203 1 139 3 140 2 204 1 142 2 78 2 205 1 145 2 80 1 144 4 17 2 82 2 81 1 211 2 20 2 216 4 22 4 151 6 93 1 94 1 153 2 154 2 220 2 221 2 26 1 223 1 155 2 99 1 157 1 30 1 227 1 161 1 162 1 34 1 230 1 35 4 103 2 105 2 38 1 163 2 233 4 107 2 109 4 40 2 234 1 110 2 164 1 46 2 47 1 111 1 236 2 169 4 171 1 238 1 172 1 174 1 177 1 
180 1 102 1 114 1 
180 1 77 1 
180 1 33 1 
180 1 33 1 
180 1 33 1 
180 1 77 1 
180 1 106 1 151 1 152 1 153 1 191 1 171 1 8 1 193 1 71 1 228 1 53 1 
180 1 171 1 151 1 71 1 153 1 120 1 
180 1 171 1 151 1 153 1 152 1 228 1 53 1 
180 1 77 1 
180 1 88 1 
180 1 210 1 189 1 
104 1 180 1 45 1 149 1 
180 2 233 2 40 1 13 1 203 1 61 1 139 1 75 1 77 1 98 1 147 1 160 2 194 2 213 1 131 1 52 1 174 1 
90 1 
165 1 147 1 40 1 213 1 194 2 203 1 13 1 139 1 131 1 61 1 52 1 174 1 75 1 
125 1 80 1 0 1 107 1 40 1 194 2 203 1 139 1 187 1 174 1 222 1 
180 2 0 1 56 1 57 1 2 1 119 1 187 1 190 1 66 1 125 1 6 1 192 1 129 1 194 3 9 1 136 3 73 1 138 1 203 1 139 1 140 1 142 1 78 1 144 2 80 1 145 1 17 1 146 1 19 1 83 1 82 1 211 1 20 1 216 2 22 2 94 1 151 3 153 1 154 1 220 1 221 1 222 1 97 1 155 1 157 1 103 1 35 2 105 1 163 1 233 2 107 1 40 1 109 2 44 1 110 1 164 1 46 1 236 1 174 1 
0 1 57 1 107 1 40 1 95 1 203 1 139 1 187 1 222 1 80 1 125 1 194 2 174 1 
180 2 56 1 57 1 119 1 2 1 185 1 63 1 190 1 66 1 6 1 192 1 129 1 194 1 9 1 134 1 136 3 73 1 138 2 140 1 142 1 78 1 144 2 145 1 17 1 146 1 19 1 82 1 211 1 20 1 216 2 22 2 151 3 94 1 153 1 154 1 220 1 221 1 97 1 155 1 27 1 157 1 103 1 35 2 37 1 105 1 163 1 38 1 233 2 109 2 44 1 110 1 164 1 46 1 236 1 173 1 
180 2 56 1 0 1 57 1 2 1 119 1 187 1 190 1 66 1 125 1 6 1 192 1 129 1 130 1 194 3 9 1 136 3 73 1 138 1 203 1 139 1 140 1 142 1 78 1 144 2 80 1 145 1 17 1 146 1 19 1 83 1 82 1 211 1 20 1 216 2 22 2 94 1 151 3 153 1 154 1 220 1 221 1 222 1 97 1 155 1 157 1 103 1 35 2 105 1 163 1 233 2 107 1 40 1 109 2 44 1 110 1 164 1 46 1 236 1 174 1 
180 2 56 1 0 1 57 1 2 1 119 1 61 1 63 1 190 1 66 1 125 1 6 1 192 1 129 1 130 1 194 3 131 1 9 1 136 3 73 1 138 1 203 1 139 1 140 1 142 1 78 1 144 2 80 1 145 1 17 1 146 1 19 1 82 1 211 1 20 1 216 2 22 2 94 1 151 3 153 1 154 1 220 1 221 1 97 1 155 1 157 1 103 1 35 2 105 1 38 1 163 1 233 2 107 1 40 1 109 2 44 1 110 1 164 1 46 1 236 1 174 1 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 2 107 1 40 1 138 2 109 2 203 1 139 1 140 1 110 1 142 1 46 1 80 1 145 1 17 1 82 1 211 1 20 1 173 1 174 1 22 2 
56 1 0 1 2 1 119 1 95 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 236 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 236 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 236 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 220 1 187 1 222 1 125 1 6 1 27 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 2 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 17 1 236 1 82 1 211 1 20 1 174 1 22 2 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 236 1 82 1 211 1 20 1 174 1 22 3 
144 1 180 1 51 1 216 1 78 1 
144 1 180 1 51 1 216 1 103 1 
144 1 180 1 181 1 215 1 216 1 78 1 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
180 2 56 1 0 1 2 1 119 1 185 1 187 1 125 1 191 3 6 1 192 1 8 3 194 2 193 4 71 3 9 1 133 1 134 1 73 1 138 2 203 1 139 2 140 1 142 1 78 1 205 1 144 2 80 1 145 1 17 1 82 1 211 1 20 1 216 2 22 2 151 3 95 1 153 1 152 1 154 1 220 1 221 1 222 1 155 1 27 1 161 1 228 1 35 2 103 1 37 1 105 1 163 1 233 2 107 1 106 3 40 1 109 2 234 1 110 1 46 1 47 1 236 1 171 1 173 1 53 1 174 1 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 130 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 168 2 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 17 1 82 1 168 2 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 82 1 211 1 20 1 174 1 22 3 
125 2 80 1 0 2 107 2 40 1 194 3 203 1 95 1 139 1 187 2 174 1 222 1 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
125 2 80 1 0 2 107 2 40 1 194 3 203 1 95 1 139 1 187 2 174 1 222 1 
180 4 56 2 0 1 57 2 2 2 119 2 187 1 190 1 66 1 125 1 6 2 192 2 129 2 194 3 71 3 9 2 195 1 197 1 136 3 73 2 200 1 202 1 138 2 203 1 139 2 140 2 141 1 142 2 78 2 205 1 144 4 80 1 145 2 17 2 146 2 19 2 83 1 82 2 211 2 20 2 216 4 22 4 94 1 151 6 153 2 24 1 154 2 220 2 221 2 25 1 222 1 97 2 155 2 224 1 28 1 157 1 103 2 35 4 105 2 163 2 233 4 108 1 107 1 40 1 109 4 234 1 44 1 110 2 164 1 46 2 47 1 236 2 171 1 174 1 
56 1 0 1 2 1 119 1 95 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 95 1 185 1 220 1 187 1 222 1 125 1 27 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 236 1 17 1 82 1 168 2 211 1 20 1 173 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 168 2 211 1 20 1 174 1 22 3 
137 1 0 1 107 1 40 1 95 1 203 1 139 1 187 1 222 1 80 1 125 1 194 2 174 1 
56 1 0 1 2 1 119 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 168 2 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 130 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
56 1 0 1 2 1 119 1 185 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 35 2 73 1 233 3 107 1 109 2 40 1 138 2 203 1 139 1 140 1 110 1 142 1 46 1 77 1 80 1 145 1 236 1 17 1 82 1 211 1 20 1 174 1 22 3 
180 3 56 1 0 2 2 1 119 1 187 2 125 2 191 2 6 1 192 1 8 2 194 3 193 3 71 2 9 1 133 2 134 1 197 1 73 1 11 1 201 1 138 1 203 1 139 4 140 1 143 1 142 1 205 1 145 1 80 1 17 1 82 1 211 1 20 1 22 2 91 1 151 2 95 1 153 1 152 1 154 1 220 1 222 1 155 1 158 1 161 1 228 1 35 2 105 1 163 1 233 2 107 2 106 2 109 2 40 2 234 1 110 1 46 1 47 1 171 1 114 3 53 1 174 1 178 1 
56 1 0 1 2 1 119 1 95 1 220 1 187 1 222 1 125 1 6 1 192 1 194 2 9 1 134 1 35 2 73 1 37 1 233 3 107 1 109 2 40 1 138 1 203 1 139 1 140 1 110 1 142 1 46 1 77 1 145 1 80 1 17 1 82 1 211 1 20 1 174 1 22 3 
180 4 3 1 151 2 152 1 153 1 154 1 187 1 122 1 123 1 222 1 97 1 155 1 191 2 126 1 67 1 28 1 129 1 8 2 69 1 193 3 194 2 71 2 32 1 228 1 133 1 105 1 163 1 39 1 106 2 40 1 203 1 234 1 139 1 75 1 47 1 16 1 207 1 146 1 19 1 49 1 171 1 86 1 114 3 174 1 
179 1 180 4 55 1 3 1 151 2 152 1 153 1 154 1 187 1 122 1 222 1 155 1 66 1 191 2 67 1 8 2 69 1 193 3 194 2 71 2 161 1 228 1 133 1 105 1 74 1 163 1 106 2 40 1 203 1 234 1 139 2 15 1 75 1 47 1 16 1 205 1 171 1 86 1 114 3 240 1 174 1 
56 1 0 1 119 1 1 1 2 3 220 1 187 1 222 1 125 1 6 1 192 1 130 1 194 2 9 1 35 4 73 1 233 2 107 1 109 4 138 3 40 1 203 1 139 1 140 1 110 3 142 3 46 3 145 1 80 1 236 1 17 3 18 2 82 3 211 3 20 3 116 1 174 1 22 2 150 1 
0 1 107 1 2 1 1 1 40 1 138 1 109 1 203 1 139 1 187 1 110 1 46 1 142 1 222 1 125 1 80 1 18 1 17 1 82 1 211 1 194 2 20 1 116 1 174 1 35 1 
180 1 0 1 1 1 2 1 187 1 64 1 222 1 125 1 194 2 35 1 107 1 109 1 138 1 40 1 203 1 139 1 110 1 142 1 46 1 77 1 144 1 80 1 17 1 18 1 82 1 211 1 51 1 20 1 214 1 216 1 116 1 174 1 
0 1 1 1 2 3 186 1 187 1 222 1 125 1 194 2 35 3 107 1 109 3 138 3 40 1 203 1 139 1 110 3 142 3 46 3 80 1 17 3 18 3 82 3 211 3 20 3 116 1 174 1 
0 1 1 1 2 1 187 1 222 1 125 1 7 1 194 2 35 1 107 1 109 1 138 1 40 1 203 1 139 1 110 1 142 1 46 1 80 1 17 1 18 1 82 1 211 1 20 1 116 1 174 1 
0 1 107 1 40 1 203 1 139 1 187 1 222 1 80 1 125 1 18 1 7 1 194 2 116 1 174 1 
84 1 29 1 194 1 235 1 
84 1 58 1 194 1 
92 2 194 1 183 1 76 1 
182 1 194 1 183 1 76 1 241 1 
84 1 112 1 
153 1 97 1 146 1 127 1 171 1 28 1 129 1 
191 1 106 1 8 1 193 1 71 1 133 1 
191 1 106 1 8 1 193 1 71 1 133 1 53 1 
171 1 234 1 153 1 47 1 
180 1 233 1 109 1 9 1 22 1 77 1 
17 1 109 1 
180 1 233 1 22 1 77 1 
17 1 167 1 233 1 109 2 9 1 22 1 150 1 
17 1 109 1 
61 1 
131 1 
61 1 
187 1 
187 1 
222 1 
40 1 203 1 59 1 61 1 139 1 188 1 75 1 237 1 48 1 100 1 113 1 50 1 194 2 131 1 174 1 
180 3 233 1 40 1 203 1 59 1 61 1 139 1 75 1 77 1 237 1 48 1 100 1 210 2 87 1 113 1 50 1 194 2 131 1 89 1 174 1 
118 1 40 1 203 1 59 1 61 1 139 1 75 1 237 1 48 1 100 1 113 1 50 1 194 2 131 1 174 1 
118 1 40 2 203 2 59 2 61 2 139 2 75 2 165 1 237 2 48 2 100 2 113 2 50 2 194 4 131 2 174 2 229 1 
40 1 203 1 59 1 61 1 139 1 75 1 237 1 48 1 100 1 7 1 113 1 50 1 194 2 131 1 174 1 
118 1 40 2 203 2 59 2 61 2 139 2 188 1 75 2 237 2 48 2 100 2 113 2 50 2 194 4 131 2 174 2 
180 1 233 2 40 1 203 1 59 1 61 1 139 1 75 1 77 1 237 1 48 1 100 1 210 1 87 2 113 1 50 1 194 2 131 1 89 1 174 1 
226 1 
180 2 218 1 114 2 77 1 
180 2 114 2 115 1 77 1 
180 2 218 1 151 2 94 1 59 1 61 1 153 1 154 1 121 1 188 1 97 1 190 1 155 1 66 1 100 1 157 1 129 1 226 1 194 3 131 1 197 1 136 2 105 1 163 1 38 1 233 1 40 1 203 1 139 2 44 1 164 1 75 1 146 1 19 1 48 1 237 1 87 1 50 1 113 1 114 2 89 1 115 1 174 1 
165 1 48 1 100 1 50 1 40 1 59 1 194 2 203 1 139 1 131 1 61 1 174 1 75 1 229 1 
180 3 218 1 151 2 59 1 61 1 152 1 153 1 154 1 155 1 191 3 100 1 226 1 8 3 193 4 194 2 71 3 131 1 161 1 133 1 228 1 197 1 104 1 105 1 163 1 233 1 106 3 40 1 234 1 203 1 139 3 75 1 47 1 205 1 48 1 237 1 210 1 171 1 87 1 50 1 113 1 114 2 89 1 115 1 53 1 174 1 
40 1 203 1 59 1 61 1 139 1 75 1 165 1 237 1 48 1 100 1 113 1 50 1 194 2 131 1 174 1 229 1 
180 2 61 1 189 1 96 1 194 2 131 1 72 1 36 1 233 1 40 1 203 1 41 1 139 1 75 1 144 1 208 2 166 1 85 1 210 1 239 1 21 1 217 1 216 1 174 1 150 1 
96 1 
180 3 94 1 151 2 5 1 61 1 153 1 221 1 97 1 96 1 190 1 155 1 66 1 128 1 157 1 129 1 194 3 131 1 197 1 72 1 36 1 136 4 104 2 105 1 38 1 233 2 40 1 203 1 41 1 139 2 44 1 164 1 75 1 144 1 208 2 166 1 146 1 19 1 170 1 85 1 210 2 239 2 216 1 217 1 174 1 176 1 
165 1 208 1 166 1 41 1 217 1 72 1 
180 3 5 1 61 1 191 4 128 1 8 4 194 2 193 5 131 1 71 4 133 1 197 1 72 1 203 1 139 3 75 1 205 1 144 1 208 2 85 1 210 2 217 1 216 1 151 2 153 1 152 1 221 1 155 1 96 1 161 1 228 1 36 1 104 2 105 1 233 2 106 4 40 1 234 1 41 1 47 1 166 1 171 1 239 2 174 1 53 1 176 1 
180 2 233 2 40 1 41 1 203 1 139 1 61 1 75 1 77 1 166 1 208 1 210 1 239 2 194 2 131 1 217 1 174 1 149 1 176 1 72 1 
180 1 151 1 5 1 61 1 152 1 153 1 96 1 155 1 191 2 128 1 8 2 193 3 194 2 71 2 131 1 161 1 133 1 228 1 197 1 72 1 104 1 105 1 233 1 106 2 40 1 203 1 41 1 234 1 139 3 75 1 47 1 205 1 208 1 166 1 210 1 171 1 239 1 217 1 53 1 174 1 176 1 
208 1 85 1 233 1 239 1 150 1 36 1 
5 1 77 1 
128 1 77 1 
180 2 61 1 96 1 194 2 131 1 72 1 36 1 233 1 40 1 203 1 41 1 139 1 75 1 144 1 208 2 166 1 85 1 210 1 239 1 217 1 216 1 174 1 
165 1 208 1 166 1 41 1 217 1 72 1 
180 2 61 1 194 2 131 1 72 1 233 2 40 1 203 1 139 1 75 1 77 1 208 1 170 1 210 1 148 1 239 2 217 1 174 1 175 1 149 1 176 1 

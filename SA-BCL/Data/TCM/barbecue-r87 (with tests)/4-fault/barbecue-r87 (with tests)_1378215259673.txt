#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 36 192 16 187 181 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 131 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 36 192 16 187 20 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V | ASSIGN | 9412 | = null
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | STATEMENT | 11921 | stmt -> ;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V | STATEMENT | 11008 | stmt -> ;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 87 1 225 1 119 1 145 1 102 1 
1 1 87 1 119 1 145 1 102 1 
19 1 224 1 27 2 
96 1 97 1 137 1 59 1 223 1 174 1 238 1 79 3 162 1 68 1 150 1 87 1 14 1 217 1 37 1 15 1 219 1 204 2 135 1 
96 1 137 1 97 2 59 1 223 1 79 3 126 1 68 1 117 1 150 1 87 1 14 1 217 1 219 1 204 1 135 1 
96 1 137 1 14 3 223 1 219 2 79 2 232 1 135 2 204 1 68 1 
96 1 137 1 97 1 59 1 223 1 79 4 67 1 126 1 68 1 150 1 87 1 14 2 217 1 219 1 204 2 135 2 
96 1 137 1 14 1 223 1 219 1 79 2 226 1 135 1 204 1 68 1 
96 1 137 1 97 4 59 1 223 1 79 3 194 1 49 1 212 1 68 1 150 1 87 1 14 1 217 1 219 1 74 1 204 1 135 1 
96 1 137 1 223 1 79 2 175 1 68 1 14 1 219 1 200 1 204 1 135 1 
58 1 96 1 137 1 223 1 
96 1 137 1 14 1 223 1 219 2 78 1 79 2 231 1 135 1 204 1 68 1 
96 1 97 1 98 1 59 1 223 1 238 1 174 1 79 3 162 1 145 1 68 1 85 1 150 2 87 2 14 1 217 1 219 1 37 1 204 1 135 1 
96 1 97 1 59 1 223 1 238 1 174 1 79 3 162 1 145 1 68 1 85 1 150 2 87 2 14 1 217 1 219 1 37 1 204 1 135 1 
96 1 95 1 137 1 98 1 223 1 79 2 145 1 147 1 68 1 85 1 150 1 87 1 14 1 219 1 75 1 204 1 135 1 
96 1 95 1 137 1 157 1 98 1 223 1 79 2 145 1 68 1 85 1 150 1 87 1 14 1 219 1 75 1 204 1 135 1 
96 1 95 1 137 1 223 1 79 2 240 1 145 1 68 1 166 1 85 1 150 1 87 1 14 1 129 1 219 1 75 1 204 1 135 1 
96 1 95 1 137 1 98 1 223 1 79 2 240 1 145 1 68 1 166 1 85 1 150 1 87 1 14 1 129 1 219 1 75 1 204 1 135 1 
96 1 137 1 14 2 223 1 219 1 79 3 232 1 135 1 204 2 68 1 
96 1 137 1 223 1 21 1 79 3 14 2 219 1 23 1 94 2 135 1 
96 1 137 1 14 1 223 1 219 2 161 1 23 1 79 2 135 1 94 1 
51 1 96 1 137 1 14 1 223 1 219 1 23 1 79 2 135 1 94 1 
138 3 77 1 172 1 
138 1 
187 1 86 1 20 1 144 1 195 1 
187 1 189 2 0 1 3 1 192 1 123 2 61 2 64 2 125 3 6 2 193 2 126 1 65 1 195 1 11 1 70 4 13 5 14 2 73 1 16 1 201 1 130 1 202 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 215 3 87 2 86 4 218 1 217 1 219 3 90 1 92 4 23 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 165 1 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 237 2 107 2 110 1 111 2 176 2 177 1 113 1 178 2 50 2 115 1 51 2 179 3 117 1 180 14 118 1 182 1 244 2 119 2 57 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 3 64 2 6 2 193 2 126 1 65 1 195 1 70 4 13 5 14 2 16 1 201 1 130 1 202 1 17 1 18 2 203 2 136 4 142 1 21 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 90 1 92 4 23 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 107 2 237 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 181 1 118 1 182 1 244 2 119 2 57 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 3 64 2 6 2 193 2 126 1 128 1 65 1 195 1 70 4 13 5 14 2 16 1 130 1 202 1 131 1 132 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 90 1 92 4 23 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 237 2 107 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 118 1 182 1 244 2 119 2 57 2 
116 1 
0 1 2 2 3 1 123 2 124 2 125 2 7 1 6 2 126 1 12 1 14 2 13 4 16 1 130 1 17 1 132 1 134 2 18 2 136 4 139 2 20 1 141 1 22 2 144 4 145 1 151 1 152 1 154 2 29 4 158 2 32 3 33 2 163 2 36 1 167 2 42 3 44 1 43 1 46 2 176 2 177 1 178 2 50 2 51 2 179 2 180 4 182 1 57 2 187 1 59 1 192 1 61 2 64 2 193 2 65 1 195 1 68 1 70 4 71 2 199 2 202 1 203 2 204 1 76 1 206 1 79 3 207 2 81 4 209 2 211 1 84 1 82 2 85 1 87 2 86 4 217 1 218 1 89 2 220 1 219 3 92 4 97 2 223 1 222 1 100 2 103 6 232 1 234 4 233 2 107 2 109 1 110 1 111 2 115 1 117 1 118 1 244 2 119 2 121 2 246 1 
187 1 0 1 3 1 192 1 123 2 61 2 64 2 125 3 6 2 193 2 126 1 67 1 65 1 195 1 70 4 13 5 14 3 16 1 201 1 130 1 202 1 132 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 78 1 79 4 22 3 207 3 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 5 90 1 92 4 23 1 28 1 154 2 29 3 94 2 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 237 2 107 3 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 118 1 182 1 244 2 119 2 57 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 3 64 2 6 2 193 2 126 1 65 1 195 1 70 4 13 5 14 2 16 1 201 1 130 1 202 1 132 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 90 1 92 4 23 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 107 2 237 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 118 1 182 1 244 2 119 2 57 2 
187 1 20 1 21 1 144 4 195 1 115 1 211 1 86 4 118 1 130 1 132 1 44 1 
187 1 0 1 3 1 192 1 123 2 61 2 125 3 64 2 6 2 193 2 126 1 65 1 195 1 70 4 13 5 14 2 16 1 130 1 132 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 90 1 92 4 23 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 107 2 237 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 118 1 244 2 119 2 120 1 57 2 
188 2 187 1 0 1 3 1 192 1 60 2 64 2 126 1 65 1 195 1 196 1 70 2 197 1 14 2 198 2 16 1 130 1 132 1 17 1 140 1 20 1 21 1 79 3 143 3 208 1 144 4 81 4 145 1 211 1 84 1 85 1 86 4 87 2 218 1 217 1 219 3 92 2 23 1 26 1 28 1 94 1 97 2 223 1 160 2 32 4 103 4 36 1 168 4 232 1 42 4 43 1 44 1 110 1 115 1 241 4 51 2 117 1 180 8 52 2 118 1 183 1 119 2 54 4 55 1 56 2 122 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 2 64 2 6 2 7 1 193 2 126 1 65 1 195 1 70 4 13 4 14 2 16 1 199 2 130 1 202 1 132 1 17 1 134 2 18 2 203 2 136 4 139 2 20 1 21 1 22 2 79 3 207 2 144 4 209 2 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 23 1 92 4 28 1 29 4 154 2 94 1 97 2 158 2 223 1 32 3 33 2 100 2 163 2 103 6 36 1 167 2 232 1 42 3 43 1 44 1 234 4 46 2 107 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 2 117 1 180 4 118 1 182 1 244 2 119 2 57 2 121 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 3 64 2 6 2 193 2 126 1 65 1 195 1 70 4 13 5 14 2 16 1 201 1 130 1 202 1 132 1 17 1 18 2 203 2 136 4 20 1 142 1 21 1 78 1 79 3 22 2 207 2 144 4 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 4 90 1 92 4 23 1 93 1 28 1 154 2 29 3 94 1 97 2 158 2 223 1 32 3 100 2 163 2 103 6 36 1 167 2 230 1 232 1 42 3 43 1 44 1 234 4 46 2 237 2 107 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 3 117 1 180 4 118 1 182 1 244 2 119 2 57 2 
187 1 0 1 3 1 192 1 123 2 61 2 125 2 64 2 6 2 7 1 193 2 126 1 65 1 195 1 70 4 13 4 14 2 16 1 199 2 130 1 202 1 132 1 17 1 134 2 18 2 203 2 136 4 139 2 20 1 21 1 22 2 79 3 207 2 144 4 209 2 81 4 145 1 211 1 82 2 84 1 85 1 86 4 87 2 218 1 217 1 219 3 23 1 92 4 28 1 29 4 154 2 94 1 97 2 158 2 223 1 32 3 33 2 100 2 163 2 103 6 36 1 167 2 232 1 42 3 43 1 44 1 234 4 46 2 107 2 110 1 111 2 176 2 177 1 178 2 50 2 115 1 51 2 179 2 117 1 180 4 118 1 182 1 244 2 119 2 57 2 121 2 
180 1 227 1 165 1 
45 1 180 1 
95 1 236 1 156 1 239 1 145 1 69 1 180 1 87 1 103 1 129 1 75 1 42 1 
95 1 69 1 180 1 103 1 87 1 145 1 75 1 
45 1 180 1 
180 1 103 1 87 1 72 1 145 1 42 1 
180 1 53 1 
180 1 91 1 
45 1 180 1 
180 1 91 1 
180 1 91 1 
180 1 168 1 106 1 245 1 
241 1 190 1 180 1 
45 1 0 1 223 1 108 1 79 2 81 2 229 2 228 1 180 2 14 1 88 1 198 1 219 1 23 1 40 1 186 1 94 1 
210 1 
58 1 0 1 14 1 88 1 223 1 198 1 219 1 23 1 79 2 40 1 186 1 94 1 228 1 
0 1 14 1 223 1 107 1 219 1 207 1 22 1 79 2 177 1 204 1 68 1 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 154 1 29 1 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 35 2 68 1 13 2 14 1 167 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
47 1 0 1 223 1 107 1 79 2 22 1 207 1 177 1 68 1 14 1 219 1 173 1 204 1 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 35 2 68 1 13 2 14 1 167 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 2 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 2 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 2 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 2 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 93 1 154 1 29 2 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 2 
0 1 191 1 123 1 64 1 125 1 6 1 193 1 67 1 68 1 69 1 13 2 14 2 129 3 75 1 203 1 18 1 204 2 136 2 78 1 79 3 22 2 207 2 81 2 145 1 82 1 85 1 87 1 218 1 219 4 153 1 154 1 29 1 95 1 157 1 156 2 158 1 223 1 33 1 100 1 163 1 165 3 103 2 167 1 169 1 38 1 173 1 42 2 43 1 234 2 236 2 46 1 107 2 239 2 110 1 240 2 111 1 176 1 177 1 178 1 50 1 51 1 179 1 180 3 244 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 173 1 134 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 154 1 29 1 
0 1 223 1 107 2 79 3 22 2 207 2 177 1 68 1 14 1 219 1 173 1 204 2 
0 1 2 2 59 1 3 1 61 2 123 2 124 2 64 2 125 2 6 2 193 2 68 1 12 1 71 2 70 4 14 1 13 4 203 2 18 2 204 1 136 4 76 1 139 2 141 1 206 1 78 1 79 3 22 1 207 1 81 4 145 1 84 1 82 2 85 1 151 1 87 2 217 1 89 2 220 1 219 2 92 4 152 1 154 2 29 2 97 1 222 1 223 1 158 2 32 3 100 2 163 2 103 6 167 2 42 3 43 1 233 2 234 4 46 2 107 1 109 1 110 1 111 2 176 2 177 1 178 2 50 2 51 2 117 1 179 2 180 4 244 2 119 2 57 2 246 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 35 2 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 223 1 107 2 79 3 22 2 207 2 177 1 68 1 14 1 219 1 173 1 204 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 2 1 59 1 3 1 61 1 123 1 124 1 64 1 125 1 6 1 193 1 68 1 12 1 71 1 70 2 14 1 13 2 203 1 18 1 204 1 136 2 139 1 79 3 22 1 207 1 81 2 84 1 82 1 87 1 217 1 89 1 219 1 92 2 154 1 29 1 97 1 223 1 158 1 32 3 100 1 163 1 103 3 167 1 233 1 234 2 46 1 107 1 111 1 176 1 177 1 178 1 50 1 51 1 117 1 179 1 180 2 244 1 119 1 57 1 
0 1 223 1 107 1 124 1 79 2 22 1 207 1 177 1 68 1 14 1 219 1 173 1 204 1 
2 1 3 1 61 1 123 1 124 1 125 1 64 1 6 1 193 1 12 1 71 1 70 2 13 2 199 1 134 1 203 1 18 1 136 2 139 1 21 1 79 1 81 2 209 1 84 1 82 1 87 1 217 1 89 1 92 2 28 1 29 2 154 1 97 1 158 1 32 3 33 1 163 1 100 1 103 3 167 1 233 1 234 2 46 1 111 1 176 1 178 1 50 1 51 1 117 1 179 1 180 2 244 1 119 1 57 1 121 1 
0 1 2 1 59 1 3 1 61 1 123 1 124 1 64 1 125 1 6 1 193 1 68 1 12 1 71 1 70 2 14 1 13 2 203 1 18 1 204 1 136 2 139 1 79 3 22 1 207 1 81 2 84 1 82 1 87 1 217 1 89 1 219 1 92 2 93 1 154 1 29 1 97 1 223 1 158 1 32 3 100 1 163 1 103 3 167 1 233 1 234 2 46 1 107 1 111 1 176 1 177 1 178 1 50 1 51 1 117 1 179 1 180 2 244 1 119 1 57 1 
0 1 2 1 3 1 61 1 123 1 124 1 64 1 125 1 6 1 193 1 12 1 71 1 70 2 14 1 13 2 203 1 18 1 136 2 139 1 21 1 79 3 22 1 207 1 81 2 84 1 82 1 87 1 217 1 89 1 219 1 92 2 23 1 28 1 93 1 154 1 29 1 94 1 97 1 223 1 158 1 32 3 100 1 163 1 103 3 167 1 233 1 234 2 46 1 107 1 111 1 176 1 177 1 178 1 50 1 51 1 117 1 179 1 180 2 244 1 119 1 57 1 
0 1 223 1 158 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 18 1 203 1 204 1 136 2 234 2 107 1 207 1 22 1 79 2 176 1 209 1 81 2 177 1 178 1 50 1 82 1 179 1 219 1 244 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 121 1 154 1 29 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 173 1 134 1 203 1 18 1 136 2 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 2 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 154 1 29 1 
180 1 70 1 139 1 92 1 170 1 
180 1 70 1 61 1 92 1 170 1 
180 1 70 1 139 1 205 1 92 1 48 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 61 1 123 1 64 1 125 1 6 1 193 1 68 1 69 1 70 2 13 2 14 1 129 4 199 1 134 1 18 1 203 1 75 1 204 1 136 2 139 1 79 2 22 1 207 1 209 1 81 2 145 1 82 1 85 1 87 1 218 1 219 2 92 2 154 1 29 2 95 1 156 3 223 1 158 1 33 1 100 1 163 1 103 3 167 1 173 1 42 3 43 1 234 2 236 3 46 1 107 1 239 3 110 1 240 1 111 1 176 1 177 1 178 1 50 1 51 1 179 1 180 2 244 1 119 1 57 1 121 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 93 1 154 1 29 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 35 2 68 1 13 2 14 1 167 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 57 1 121 1 154 1 29 1 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 35 2 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 176 1 209 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 121 1 154 1 29 2 
0 1 158 1 223 1 123 1 33 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 199 1 173 1 134 1 203 1 18 1 136 3 204 1 234 2 45 1 107 1 207 1 22 1 79 2 209 1 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 121 1 154 1 29 2 
0 1 223 1 158 1 123 1 100 1 163 1 125 1 6 1 193 1 68 1 13 2 14 1 167 1 203 1 18 1 204 1 136 3 234 2 45 1 107 1 207 1 22 1 79 2 176 1 81 3 177 1 178 1 50 1 82 1 179 1 219 1 244 1 154 1 29 1 
95 1 97 1 0 1 156 2 223 1 162 1 64 1 101 1 68 1 165 3 103 2 14 1 129 3 198 1 37 1 171 1 42 2 75 1 204 1 43 1 236 2 46 1 174 1 238 1 239 2 79 2 110 1 111 1 240 1 145 1 147 1 114 1 213 1 51 1 85 1 180 4 87 1 218 1 219 2 25 1 30 1 
95 1 0 1 2 1 156 2 223 1 4 1 64 1 101 1 68 1 165 3 71 1 103 2 14 1 129 3 198 1 200 1 171 1 42 2 75 1 204 1 43 1 233 1 236 2 46 1 104 1 76 1 239 2 79 2 110 1 175 1 240 1 111 1 145 1 146 1 114 1 213 1 51 1 149 1 180 4 87 1 89 1 219 1 25 1 30 1 
0 1 158 1 223 1 123 1 100 1 163 1 125 3 6 1 193 1 68 1 14 1 13 4 167 1 230 1 203 1 18 1 136 2 204 1 234 2 107 1 142 2 79 2 22 1 207 1 176 1 81 2 177 1 178 1 50 1 82 1 179 3 219 1 244 1 90 1 57 1 27 1 93 1 29 3 154 1 
0 1 223 1 107 1 142 1 207 1 22 1 79 2 125 1 177 1 68 1 179 1 13 1 14 1 219 1 90 1 230 1 29 1 204 1 
0 1 223 1 107 1 142 3 207 1 22 1 79 2 112 1 125 3 177 1 68 1 179 3 13 3 14 1 219 1 90 1 230 1 29 3 204 1 
0 1 223 1 107 1 142 1 207 1 22 1 79 2 226 1 125 1 177 1 68 1 179 1 13 1 14 1 219 1 90 1 230 1 29 1 204 1 
0 1 223 1 107 1 142 1 79 2 22 1 207 1 226 1 177 1 68 1 14 1 219 1 90 1 204 1 
0 1 223 1 125 1 68 1 70 1 14 1 13 1 230 1 170 1 204 1 45 1 107 1 237 1 142 1 79 2 22 1 207 1 177 1 179 1 180 1 219 1 90 1 92 1 184 1 29 1 
214 1 155 1 159 1 79 1 
155 1 79 1 24 1 
83 1 15 1 79 1 185 2 
83 1 15 1 79 1 8 1 127 1 
155 1 5 1 
236 1 156 1 129 1 239 1 240 1 42 1 
71 1 76 1 2 1 87 1 145 1 221 1 233 1 
87 1 110 1 145 1 43 1 
236 1 69 1 156 1 129 1 239 1 240 1 42 1 
45 1 180 1 81 1 176 1 136 1 234 1 
158 1 234 1 
45 1 180 1 81 1 136 1 
158 1 63 1 81 1 176 1 27 1 136 1 234 2 
158 1 234 1 
94 1 
23 1 
94 1 
204 1 
204 1 
68 1 
45 1 0 1 223 1 99 1 79 2 80 2 81 2 164 1 241 1 242 1 148 1 180 1 14 1 216 1 198 1 219 1 243 1 39 1 23 1 94 1 
105 1 
0 1 223 1 99 1 79 2 226 1 164 1 242 1 148 1 14 1 216 1 198 1 219 1 39 1 23 1 94 1 
0 2 223 2 99 2 79 4 62 1 34 1 164 2 242 2 148 2 14 2 216 2 198 2 219 2 39 2 23 2 94 2 
0 1 223 1 99 1 79 2 62 1 164 1 242 1 148 1 14 1 216 1 198 1 219 1 39 1 23 1 94 1 
45 1 0 1 223 1 99 1 79 2 80 1 81 1 164 1 241 2 242 1 148 1 180 3 14 1 216 1 198 1 219 1 243 1 39 1 23 1 94 1 
0 1 223 1 99 1 79 2 34 1 164 1 242 1 148 1 14 1 216 1 198 1 219 1 39 1 23 1 94 1 
58 1 0 2 223 2 99 2 79 4 34 1 164 2 242 2 148 2 14 2 216 2 198 2 219 2 39 2 23 2 133 1 94 2 
58 1 0 1 223 1 99 1 79 2 164 1 242 1 148 1 14 1 216 1 198 1 219 1 39 1 23 1 133 1 94 1 
45 1 180 2 41 1 165 2 
45 1 31 1 180 2 165 2 
31 1 97 1 0 1 2 1 223 1 3 1 32 2 99 1 62 1 64 1 9 1 164 1 165 2 12 1 71 1 103 2 14 1 198 1 39 1 41 1 233 1 46 1 105 1 78 1 79 3 80 1 111 1 81 1 51 1 84 1 148 1 242 1 117 1 180 2 87 1 216 1 217 1 89 1 219 2 243 1 23 1 28 1 94 1 
58 1 0 1 223 1 216 1 133 1 
31 1 95 1 0 1 156 3 223 1 99 1 64 1 164 1 165 2 69 1 103 2 14 1 168 1 129 4 198 1 39 1 41 1 42 3 75 1 43 1 236 3 46 1 105 1 78 1 239 3 79 2 110 1 80 1 111 1 240 1 81 1 145 1 241 1 51 1 148 1 242 1 85 1 180 3 87 1 216 1 218 1 219 3 243 1 23 1 94 1 
45 1 0 1 106 1 140 1 223 1 160 1 79 2 208 1 143 1 81 2 241 1 196 1 180 2 14 1 198 1 219 1 23 1 54 2 26 1 94 1 
188 1 190 1 0 1 223 1 224 1 196 1 70 1 14 1 198 1 140 1 79 2 143 2 208 1 81 1 241 1 180 2 52 1 219 1 23 1 92 1 54 1 26 1 27 1 94 1 122 1 
52 1 
188 1 97 1 0 1 2 1 223 1 3 1 160 1 32 4 60 1 64 1 66 1 196 1 12 1 71 1 70 1 14 1 103 2 168 2 198 1 233 1 140 1 78 1 79 3 143 2 208 1 81 2 241 2 84 1 51 1 117 1 180 3 52 1 87 1 217 1 89 1 219 2 92 1 119 1 23 1 54 2 56 1 26 1 28 1 122 1 94 1 
58 1 196 1 140 1 143 1 208 1 26 1 
188 1 95 1 0 1 156 4 223 1 160 1 60 1 64 1 196 1 69 1 70 1 103 2 14 1 168 2 129 5 198 1 42 4 75 1 43 1 236 4 140 1 78 1 239 4 79 2 110 1 143 2 208 1 240 1 81 2 145 1 241 2 51 1 85 1 180 3 52 1 87 1 218 1 219 3 92 1 119 1 23 1 54 2 56 1 26 1 122 1 94 1 
58 1 196 1 140 1 143 1 208 1 26 1 
0 1 223 1 160 1 66 1 10 1 14 1 198 1 235 1 45 1 140 1 106 1 79 2 143 1 208 1 81 2 241 1 180 2 219 1 23 1 54 2 94 1 
95 1 0 1 156 2 223 1 160 1 60 1 64 1 196 1 69 1 103 1 14 1 168 1 129 3 198 1 42 2 75 1 43 1 236 2 140 1 78 1 239 2 79 2 110 1 143 1 208 1 240 1 81 1 145 1 241 1 51 1 85 1 180 1 52 1 87 1 218 1 219 3 23 1 54 1 56 1 26 1 94 1 
188 1 54 1 143 1 81 1 27 1 122 1 
45 1 56 1 
45 1 60 1 
188 1 0 1 223 1 196 1 70 1 14 1 198 1 140 1 79 2 143 2 208 1 81 1 241 1 180 2 52 1 219 1 23 1 92 1 54 1 26 1 94 1 122 1 

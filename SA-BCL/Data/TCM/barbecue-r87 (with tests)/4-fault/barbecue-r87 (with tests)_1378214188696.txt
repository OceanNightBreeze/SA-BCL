#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 131 179 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 75 4 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 16 55 48 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 16 55 93 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 16 55 48 189 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I | OPERATOR | 3545 | - -> *
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String; | RETURN | 5938 | return null
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 12734 | 2 -> 1
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
74 1 140 1 42 1 224 1 137 1 61 1 
74 1 140 1 42 1 137 1 61 1 
218 1 49 1 209 2 
134 1 63 3 96 1 97 1 173 1 99 2 125 1 137 1 211 1 212 1 30 1 231 1 232 1 5 1 234 1 180 1 121 1 169 1 170 1 
63 3 96 1 97 1 135 1 99 1 125 1 137 1 212 1 231 1 232 1 5 1 234 1 150 1 180 1 121 2 169 1 
232 1 96 1 12 1 125 1 
63 2 96 1 97 1 99 1 125 1 212 1 128 1 232 1 5 2 234 1 78 1 
134 1 63 3 97 1 99 1 173 1 125 1 137 2 212 1 211 1 204 1 72 1 231 1 232 1 5 1 234 1 180 1 121 1 169 2 61 1 170 1 
134 1 63 3 97 1 99 1 173 1 125 1 137 2 212 1 211 1 204 1 231 1 232 1 5 1 234 1 180 1 121 1 169 2 61 1 170 1 
63 2 96 1 97 1 99 1 125 1 137 1 212 1 204 1 72 1 232 1 5 1 233 1 234 1 8 1 221 1 169 1 61 1 
63 2 96 1 97 1 99 1 125 1 137 1 212 1 204 1 72 1 232 1 5 1 233 1 234 1 8 1 222 1 169 1 61 1 
63 2 96 1 97 1 99 1 125 1 137 1 212 1 204 1 103 1 33 1 232 1 5 1 233 1 234 1 8 1 80 1 169 1 61 1 
63 2 96 1 97 1 99 1 125 1 137 1 212 1 204 1 103 1 72 1 33 1 232 1 5 1 233 1 234 1 8 1 80 1 169 1 61 1 
63 3 96 1 97 1 99 2 125 1 212 1 232 1 5 1 234 2 238 1 
62 1 63 3 96 1 157 1 125 1 212 1 232 1 164 2 5 1 234 2 
62 1 63 2 164 1 232 1 5 2 96 1 223 1 234 1 125 1 212 1 
62 1 63 2 96 1 125 1 212 1 129 1 232 1 164 1 5 1 234 1 
62 1 63 2 96 1 125 1 212 2 232 1 164 1 5 2 234 3 238 1 
62 1 63 4 96 1 125 1 137 1 212 2 231 1 232 1 164 2 5 1 234 2 57 1 37 1 150 1 121 1 169 1 
62 1 63 2 178 1 164 1 232 1 5 1 96 1 234 1 125 1 212 1 
62 1 63 3 96 1 125 1 69 1 137 1 212 1 70 1 231 1 232 1 164 1 5 1 76 1 234 1 208 1 57 1 121 4 169 1 
62 1 63 2 164 1 232 1 5 1 96 1 234 1 125 1 15 1 212 1 94 1 
228 1 85 3 17 1 
85 1 
199 1 0 1 157 1 48 1 16 1 214 4 106 4 165 1 131 1 179 1 56 1 55 1 146 1 59 1 181 1 28 1 
154 2 155 1 12 1 111 1 0 1 100 1 156 1 210 1 157 1 125 1 48 1 16 1 51 1 214 4 106 4 56 1 55 1 146 1 59 1 181 1 28 1 
155 1 12 1 111 1 0 1 100 1 156 1 210 1 157 1 125 1 48 1 16 1 214 4 106 4 56 1 55 1 146 1 59 1 181 1 28 1 
197 1 0 1 157 1 48 1 16 1 127 1 22 1 75 1 214 4 106 4 4 1 56 1 55 1 146 1 195 1 59 1 181 1 28 1 
197 1 155 1 0 1 156 1 157 1 48 1 16 1 127 1 22 1 75 1 214 4 106 4 56 1 55 1 236 1 146 1 195 1 59 1 181 1 28 1 
197 1 155 1 0 1 156 1 157 1 48 1 16 1 127 1 22 1 75 1 214 4 106 4 56 1 55 1 236 1 146 1 195 1 59 1 181 1 28 1 
0 1 157 1 48 1 16 1 214 4 106 4 56 1 55 1 146 1 59 1 181 1 28 1 
120 1 
197 1 155 1 0 1 156 1 157 1 48 1 16 1 127 1 22 1 75 1 214 4 106 4 56 1 55 1 236 1 146 1 195 1 59 1 181 1 28 1 
155 1 12 1 111 1 0 1 100 1 156 1 210 1 125 1 48 1 16 1 214 4 106 4 55 1 56 1 146 1 59 1 181 1 28 1 
106 1 214 1 55 1 146 1 48 1 
197 1 155 1 156 1 157 1 48 1 16 1 127 1 22 1 75 1 214 4 106 4 55 1 56 1 236 1 146 1 195 1 59 1 181 1 28 1 
197 1 155 1 156 1 157 1 16 1 127 1 22 1 75 1 214 4 106 4 55 1 56 1 236 1 93 1 146 1 195 1 59 1 181 1 28 1 
197 1 155 1 0 1 156 1 157 1 48 1 16 1 127 1 32 1 22 1 75 1 189 1 214 4 106 4 56 1 55 1 146 1 195 1 59 1 181 1 28 1 
154 1 107 1 51 1 
154 1 142 1 
154 1 226 1 
154 1 2 1 203 1 137 1 53 1 233 1 8 1 149 1 80 1 39 1 60 1 61 1 
154 1 149 1 137 1 152 1 60 1 61 1 
154 1 53 1 233 1 8 1 149 1 137 1 61 1 
154 1 226 1 
154 1 133 1 
154 1 226 1 
154 1 142 1 
154 1 142 1 
154 1 201 1 1 1 95 1 
154 1 215 1 47 1 
154 2 62 1 63 2 111 1 174 1 125 1 226 1 89 2 187 1 71 1 164 1 5 1 191 1 234 1 36 2 147 1 81 1 
45 1 
62 1 63 2 12 1 111 1 174 1 125 1 187 1 71 1 164 1 5 1 191 1 234 1 81 1 
63 3 111 1 66 2 97 1 100 1 99 2 84 2 125 1 5 1 234 1 194 2 166 1 
122 1 63 2 66 1 125 1 184 1 186 1 185 2 130 1 5 1 194 1 10 3 197 1 11 2 198 1 84 1 88 1 138 1 139 1 22 2 23 1 205 1 151 1 153 1 154 8 98 1 97 1 100 1 99 1 31 1 161 1 104 1 163 1 217 1 166 1 36 3 38 1 219 1 40 3 109 2 41 1 110 1 111 1 226 1 116 1 234 1 119 1 239 1 
63 3 111 1 66 2 97 1 100 1 99 2 84 2 125 1 5 1 234 1 194 2 166 1 
122 2 63 3 66 1 67 2 125 1 184 2 185 4 129 2 130 2 5 2 7 1 194 1 78 1 9 1 197 2 200 1 13 1 135 1 84 1 202 1 88 2 137 2 138 2 90 1 204 1 21 2 139 2 23 2 140 2 22 2 92 2 141 3 143 1 145 4 148 1 26 4 149 6 151 2 154 4 98 2 97 1 100 1 99 1 29 1 213 1 104 2 163 2 34 1 217 2 36 4 219 2 40 4 109 4 41 2 110 2 43 2 44 2 111 1 113 1 227 2 52 1 115 1 116 2 229 2 117 2 231 1 230 2 234 1 58 2 119 2 180 1 121 1 60 3 61 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 239 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 35 2 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 35 2 194 1 133 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
63 2 111 1 66 1 97 1 100 1 99 1 84 1 125 1 112 1 5 1 234 1 194 1 166 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 35 2 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 63 2 123 1 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 31 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 
122 1 182 1 63 3 66 2 2 2 125 1 184 1 185 2 129 1 130 1 5 4 194 2 8 1 78 1 80 3 197 1 198 1 84 2 202 1 88 1 203 2 137 1 138 1 204 1 139 1 91 1 23 1 22 1 207 1 144 1 149 2 151 1 154 3 97 1 100 1 99 2 29 1 103 2 104 1 163 1 217 1 36 2 166 1 108 1 37 1 219 1 39 2 40 2 222 1 109 2 41 1 110 1 111 1 51 3 116 1 229 1 230 1 53 1 233 1 234 2 58 1 119 1 60 2 61 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 239 1 
122 1 63 3 66 1 67 1 125 1 184 1 185 2 129 1 130 1 5 1 194 1 9 1 197 1 13 1 135 1 84 1 88 1 137 1 138 1 21 1 139 1 140 1 22 1 23 1 92 1 141 3 145 2 26 2 149 3 151 1 154 2 98 1 97 1 100 1 99 1 104 1 163 1 34 1 217 1 36 2 219 1 40 2 109 2 41 1 110 1 43 1 44 1 111 1 227 1 116 1 229 1 117 1 231 1 230 1 234 1 58 1 119 1 180 1 121 1 
63 2 111 1 66 1 97 1 100 1 99 1 84 1 125 1 117 1 5 1 234 1 194 1 166 1 
122 1 63 1 67 1 184 1 186 1 185 2 129 1 130 1 9 1 197 1 198 1 13 1 135 1 88 1 137 1 138 1 21 1 139 1 22 2 140 1 23 1 92 1 141 3 145 2 26 2 149 3 151 1 154 2 98 1 157 1 31 1 161 1 104 1 163 1 34 1 217 1 36 2 219 1 40 2 109 2 41 1 110 1 43 1 44 1 227 1 116 1 229 1 117 1 230 1 231 1 57 1 58 1 119 1 121 1 239 1 
122 1 63 3 123 1 66 1 67 1 125 1 184 1 185 2 129 1 130 1 5 1 194 1 9 1 197 1 13 1 135 1 84 1 88 1 137 1 138 1 21 1 139 1 23 1 140 1 22 1 92 1 141 3 145 2 26 2 149 3 151 1 154 2 98 1 97 1 100 1 99 1 104 1 163 1 34 1 217 1 36 2 219 1 40 2 109 2 41 1 110 1 43 1 44 1 111 1 227 1 116 1 229 1 117 1 231 1 230 1 234 1 58 1 119 1 180 1 121 1 
122 1 62 1 63 3 123 1 66 1 67 1 125 1 184 1 185 2 129 1 130 1 5 1 194 1 9 1 197 1 13 1 135 1 84 1 88 1 137 1 138 1 21 1 139 1 23 1 140 1 22 1 92 1 141 3 145 2 26 2 149 3 151 1 154 2 98 1 100 1 157 1 104 1 164 1 163 1 34 1 217 1 36 2 219 1 40 2 109 2 41 1 110 1 43 1 44 1 111 1 227 1 116 1 229 1 117 1 231 1 230 1 234 1 58 1 57 1 119 1 121 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 166 1 36 2 219 1 40 2 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 138 1 116 1 139 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 98 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 97 1 66 1 98 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 97 1 66 1 98 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 97 1 66 1 98 1 99 1 100 1 125 1 184 1 185 2 186 1 104 1 130 1 163 1 5 1 217 1 194 1 36 2 166 1 219 1 40 2 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 98 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
154 1 190 1 44 1 145 1 26 1 
154 1 190 1 145 1 26 1 227 1 
154 1 177 1 192 1 44 1 145 1 26 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 182 1 63 2 66 1 2 3 125 1 184 1 185 2 186 1 129 1 130 1 5 2 194 1 8 1 80 4 197 1 198 1 84 1 202 1 88 1 203 3 137 1 138 1 204 1 139 1 23 1 140 1 22 2 145 2 26 2 149 3 151 1 154 2 98 1 97 1 100 1 99 1 29 1 31 1 103 1 161 1 104 1 163 1 217 1 166 1 36 2 219 1 39 3 40 2 109 2 41 1 110 1 44 1 111 1 227 1 116 1 229 1 230 1 53 1 233 1 234 1 58 1 119 1 60 3 239 1 61 1 
122 1 63 2 123 1 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 98 1 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 104 1 130 1 163 1 5 1 217 1 35 2 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 35 2 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 186 1 31 1 161 1 104 1 130 1 163 1 5 1 217 1 194 1 36 3 166 1 219 1 40 3 109 2 41 1 197 1 110 1 198 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 2 234 1 119 1 151 1 239 1 
122 1 63 2 97 1 66 1 99 1 100 1 125 1 184 1 185 2 104 1 130 1 163 1 5 1 217 1 194 1 36 3 219 1 40 3 109 2 41 1 197 1 110 1 111 1 84 1 88 1 226 1 138 1 139 1 116 1 23 1 22 1 234 1 119 1 151 1 
63 2 5 1 97 1 66 1 111 1 99 1 100 1 194 1 84 1 234 1 125 1 
182 1 154 4 63 2 97 1 99 1 2 2 29 1 68 1 125 1 211 1 103 1 129 1 5 2 8 1 80 3 168 1 221 1 39 2 170 1 134 1 83 1 111 1 173 1 202 1 174 1 203 2 137 1 204 1 51 3 229 1 230 1 206 1 233 1 234 1 58 1 235 1 25 1 149 2 121 1 60 2 61 1 
154 4 64 1 63 2 97 1 99 1 2 2 29 1 67 1 68 1 125 1 103 1 129 1 216 1 5 1 8 1 80 3 168 1 39 2 171 1 43 1 83 1 111 1 202 1 174 1 15 1 203 2 113 1 137 1 51 3 21 1 229 1 92 1 230 1 206 1 54 1 233 1 234 1 58 1 235 1 25 1 149 2 94 1 60 2 61 1 
122 3 63 2 123 1 98 1 66 1 97 1 100 1 99 1 125 1 184 1 185 4 127 1 104 1 130 3 75 2 163 3 5 1 217 3 194 1 36 2 195 1 219 1 40 2 109 4 41 1 197 3 110 1 111 1 84 1 88 3 138 1 139 1 116 3 23 1 22 3 234 1 119 1 209 1 151 3 
154 1 122 1 63 2 65 1 66 1 97 1 100 1 99 1 125 1 185 1 127 1 130 1 188 1 75 1 190 1 163 1 5 1 217 1 194 1 195 1 109 1 197 1 111 1 84 1 88 1 226 1 116 1 22 1 234 1 145 1 26 1 151 1 
122 1 197 1 63 2 97 1 66 1 111 1 99 1 100 1 84 1 125 1 88 1 127 1 185 1 116 1 22 1 130 1 75 1 163 1 5 1 217 1 194 1 234 1 195 1 151 1 109 1 
122 3 63 2 66 1 97 1 100 1 99 1 125 1 185 3 127 1 130 3 75 3 163 3 5 1 217 3 194 1 195 1 109 3 197 3 111 1 84 1 86 1 88 3 116 3 22 3 234 1 151 3 
122 1 63 2 66 1 97 1 100 1 99 1 125 1 185 1 127 1 130 1 75 1 163 1 5 1 217 1 194 1 195 1 109 1 197 1 111 1 84 1 88 1 116 1 22 1 178 1 234 1 151 1 
63 2 111 1 66 1 97 1 100 1 99 1 84 1 125 1 127 1 75 1 178 1 5 1 234 1 194 1 
73 1 63 1 183 1 136 1 
73 1 63 1 79 1 
63 1 18 2 176 1 30 1 
63 1 101 1 124 1 176 1 30 1 
73 1 158 1 
2 1 203 1 80 1 103 1 39 1 60 1 
53 1 2 1 203 1 80 1 103 1 39 1 60 1 
67 1 137 1 113 1 21 1 160 1 92 1 61 1 
29 1 202 1 137 1 61 1 
104 1 130 1 36 1 50 1 209 1 40 1 109 2 
130 1 109 1 
104 1 154 1 36 1 226 1 40 1 109 1 
130 1 109 1 
154 1 36 1 226 1 40 1 
62 1 
164 1 
164 1 
99 1 
97 1 
99 1 
62 1 63 2 172 1 82 1 111 1 174 1 125 1 87 1 126 1 19 1 164 1 5 1 132 1 234 1 220 1 
62 1 63 2 82 1 111 1 174 1 125 1 87 1 126 1 19 1 178 1 164 1 5 1 132 1 234 1 220 1 
62 2 63 4 172 1 82 2 111 2 225 1 174 2 87 2 125 2 126 2 19 2 164 2 5 2 132 2 234 2 220 2 
154 1 62 1 63 2 82 1 111 1 47 1 174 1 125 1 87 1 126 1 226 1 19 1 164 1 5 1 132 1 234 1 77 2 36 2 27 1 220 1 
105 1 
154 2 102 1 226 1 51 2 
154 2 193 1 226 1 51 2 
154 2 62 1 63 3 67 1 102 1 125 1 126 1 129 1 105 1 164 1 5 2 34 1 193 1 132 1 77 1 36 1 78 1 9 1 220 1 172 1 43 1 82 1 13 1 111 1 135 1 174 1 87 1 137 1 19 1 51 2 21 1 20 1 229 1 92 1 141 2 230 1 231 1 234 1 57 1 58 1 27 1 149 2 121 1 
162 1 12 1 111 1 132 1 125 1 
154 3 62 1 182 1 63 2 2 3 29 1 102 1 125 1 126 1 103 1 129 1 105 1 164 1 5 3 193 1 132 1 77 1 8 1 36 1 78 1 80 4 39 3 220 1 82 1 111 1 202 1 47 1 174 1 87 1 203 3 137 1 19 1 204 1 51 2 229 1 230 1 53 1 233 1 234 1 58 1 27 1 149 2 95 1 60 3 61 1 
154 3 62 1 63 2 82 1 111 1 47 2 174 1 125 1 87 1 126 1 226 1 19 1 164 1 5 1 132 1 234 1 77 1 36 1 27 1 220 1 
62 1 63 2 82 1 111 1 225 1 174 1 87 1 125 1 126 1 19 1 164 1 5 1 132 1 234 1 220 1 
62 2 63 4 82 2 12 1 111 2 225 1 174 2 87 2 125 2 126 2 19 2 162 1 164 2 5 2 132 2 234 2 220 2 
62 1 63 2 82 1 12 1 111 1 174 1 87 1 125 1 126 1 19 1 162 1 164 1 5 1 132 1 234 1 220 1 
154 2 62 1 63 2 199 1 111 1 1 1 47 1 174 1 125 1 226 1 3 1 164 1 5 1 165 1 131 1 234 1 237 1 118 1 36 2 196 2 
154 1 62 1 182 1 63 2 2 2 29 1 125 1 103 1 129 1 164 1 3 1 165 1 5 3 131 1 6 1 8 1 36 1 78 1 167 1 196 1 80 3 39 2 199 1 111 1 202 1 47 1 174 1 203 2 137 1 204 1 114 1 53 1 233 1 234 1 237 1 58 1 118 1 149 1 95 1 60 2 61 1 
3 1 24 1 36 1 196 1 209 1 159 1 
6 1 226 1 
226 1 167 1 
154 2 62 1 63 2 199 1 111 1 47 1 174 1 125 1 159 1 114 1 3 2 164 1 5 1 165 1 131 1 234 1 145 1 24 1 237 1 36 1 26 1 196 1 
62 1 154 2 63 2 125 1 159 1 215 1 164 1 3 2 165 1 5 1 131 1 218 1 36 1 196 1 199 1 111 1 174 1 47 1 114 1 234 1 237 1 24 1 145 1 26 1 209 1 
114 1 
154 3 62 1 63 3 67 1 125 1 159 1 129 1 164 1 3 2 165 1 5 2 34 1 131 1 6 1 78 1 36 2 167 1 196 2 9 1 43 1 199 1 13 1 111 1 135 1 14 1 47 2 174 1 137 1 114 1 21 1 140 1 92 1 141 4 231 1 234 1 145 1 24 1 237 1 57 1 58 1 118 1 26 1 149 2 121 1 95 2 
3 1 199 1 165 1 12 1 131 1 237 1 
154 3 62 1 182 1 63 2 2 4 29 1 125 1 159 1 103 1 129 1 164 1 3 2 165 1 5 3 131 1 6 1 8 1 36 2 78 1 167 1 196 2 80 5 39 4 199 1 111 1 202 1 47 2 174 1 203 4 137 1 204 1 114 1 140 1 53 1 233 1 234 1 145 1 24 1 237 1 58 1 118 1 26 1 149 2 95 2 60 4 61 1 
3 1 199 1 165 1 12 1 131 1 237 1 
62 1 154 2 63 2 1 1 125 1 164 1 3 1 5 1 36 2 196 2 199 1 111 1 46 1 14 1 174 1 47 1 226 1 175 1 234 1 237 1 118 1 

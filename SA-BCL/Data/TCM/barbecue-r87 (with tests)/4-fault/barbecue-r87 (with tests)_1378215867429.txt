#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 219 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 232 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 11 113 26 56 167 154 55 35 221 211 217 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V ERROR java.lang.NullPointerException 11 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | ASSIGN | 10508 | = null
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String; | RETURN | 3365 | return null
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
20 1 136 1 173 1 196 1 248 1 
9 2 182 1 229 1 
178 1 20 1 136 1 173 1 196 1 248 1 
45 1 189 1 191 1 23 1 
28 1 0 1 48 2 51 1 23 1 174 2 189 1 191 1 38 1 39 1 161 1 91 2 
0 1 47 1 48 3 151 2 240 1 23 1 54 1 24 1 70 1 56 1 173 1 174 1 189 1 38 1 26 1 161 1 90 1 91 1 248 2 192 1 
0 1 47 1 48 3 151 2 240 1 23 1 54 1 24 1 70 1 56 1 173 1 174 1 189 1 38 1 26 1 161 1 90 1 91 1 248 2 
0 1 48 2 151 1 116 1 23 1 33 1 173 1 174 1 189 1 191 1 38 1 161 1 90 1 91 1 248 1 60 1 192 1 
0 1 3 1 48 2 151 1 116 1 23 1 173 1 174 1 189 1 191 1 38 1 161 1 90 1 91 1 248 1 60 1 192 1 
0 1 194 1 48 2 151 1 153 1 116 1 23 1 173 1 174 1 189 1 191 1 38 1 161 1 90 1 91 1 128 1 248 1 60 1 
0 1 194 1 48 2 151 1 153 1 116 1 23 1 173 1 174 1 189 1 191 1 38 1 161 1 90 1 91 1 128 1 248 1 60 1 192 1 
0 2 174 2 48 3 189 1 38 1 191 1 161 1 91 1 23 1 201 1 
0 2 1 1 48 3 236 2 23 1 25 1 189 1 191 1 161 1 91 1 
0 1 99 1 25 1 48 2 189 1 236 1 191 1 161 1 91 2 23 1 
0 1 25 1 48 2 189 1 236 1 191 1 161 1 91 1 23 1 230 1 
0 1 25 1 48 2 189 1 236 1 191 1 161 1 97 1 91 1 23 1 
0 1 235 1 48 3 236 1 197 1 151 1 23 1 86 1 56 4 25 1 87 1 189 1 191 1 26 1 161 1 91 1 248 1 43 1 
0 1 48 2 236 1 23 1 25 1 189 1 191 1 244 1 161 1 91 1 13 1 
0 1 48 3 236 1 151 1 240 1 23 1 54 1 24 1 70 1 56 1 25 1 189 1 191 1 26 1 161 1 91 1 248 1 43 1 
0 1 108 1 167 1 48 3 236 1 151 1 23 1 56 2 25 1 189 1 191 1 26 1 161 1 91 1 248 1 43 1 
0 3 25 1 48 2 189 1 236 1 191 1 161 2 91 2 23 1 201 1 
0 2 108 1 46 1 48 4 236 2 151 1 23 1 56 1 25 1 189 1 191 1 26 1 161 2 91 1 248 1 43 1 
93 1 96 1 144 3 
144 1 
0 2 1 1 2 1 64 1 198 4 201 1 135 2 8 2 73 4 138 1 12 1 141 4 142 4 79 1 80 1 145 2 81 2 18 1 20 2 23 1 154 1 157 1 25 1 210 1 212 4 211 1 26 1 214 1 89 8 90 1 91 3 216 1 217 1 92 3 163 1 218 2 94 1 166 2 167 2 168 1 221 1 35 1 100 4 173 1 40 2 227 1 41 1 230 2 42 1 43 1 106 4 108 1 48 3 236 1 181 1 113 2 115 2 52 1 186 2 55 1 56 3 57 4 187 1 188 1 190 4 125 1 129 1 250 1 248 2 
0 2 1 1 2 1 132 2 4 2 10 2 141 4 142 4 20 2 18 1 21 1 150 2 152 2 154 1 23 1 22 2 157 1 156 3 25 1 26 1 163 1 164 1 165 4 167 1 34 2 35 1 173 1 37 2 176 4 42 1 177 2 43 1 48 4 181 1 186 4 55 1 56 2 187 1 188 1 190 4 59 1 193 2 195 2 198 3 66 2 67 2 199 2 200 4 201 1 203 2 79 1 80 1 204 1 205 2 207 2 84 1 85 2 210 1 211 1 212 6 89 14 215 2 216 1 91 3 90 1 217 1 221 1 222 2 98 2 225 2 227 1 105 1 230 2 231 2 106 3 233 2 109 2 108 1 236 1 111 4 113 2 115 4 239 2 117 1 242 2 120 1 121 2 124 2 125 1 247 2 248 2 250 1 129 1 130 2 
0 2 193 2 195 2 1 1 2 1 4 2 132 2 5 1 198 3 199 2 67 2 66 2 200 4 201 1 203 2 10 2 141 4 142 4 79 1 204 1 80 1 205 2 18 1 20 2 21 1 207 2 150 2 152 2 22 2 23 1 154 1 85 2 157 1 25 1 210 1 212 6 211 1 26 1 214 1 215 2 89 4 90 1 91 3 216 1 217 1 163 1 165 4 167 1 222 2 221 1 98 2 34 2 35 1 173 1 37 2 176 4 225 2 227 1 105 1 231 2 230 2 177 2 42 1 43 1 233 2 106 3 108 1 48 3 111 4 236 1 181 1 113 2 239 2 115 4 117 1 242 2 55 1 186 4 56 2 121 2 187 1 124 2 188 1 190 4 125 1 247 2 129 1 250 1 248 2 130 2 
0 2 193 2 195 1 1 1 2 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 80 1 206 1 150 1 22 1 23 1 154 1 157 1 158 1 25 1 210 1 211 1 26 1 91 3 216 1 217 1 163 1 165 1 167 1 221 1 34 2 35 1 37 1 102 1 176 1 231 1 177 1 42 1 43 1 48 3 236 1 113 1 114 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
0 2 2 1 132 2 4 2 5 1 10 2 141 4 142 4 14 1 20 2 18 1 21 1 149 2 150 2 152 2 154 1 23 1 22 2 157 1 26 1 160 1 163 1 165 4 167 1 169 1 170 1 34 2 35 1 172 2 174 1 173 1 37 2 38 1 176 4 42 1 177 2 179 2 47 1 48 3 181 1 186 4 55 1 56 2 187 1 188 1 190 4 193 2 195 2 63 1 198 3 66 2 67 2 199 2 200 4 201 1 202 1 203 2 72 1 79 1 204 1 80 1 205 2 82 1 207 2 85 2 210 1 211 1 212 6 214 1 89 4 215 2 216 1 91 3 90 1 217 1 95 2 221 1 222 2 98 2 103 2 225 2 227 1 105 1 230 2 231 2 106 3 233 2 108 1 234 1 111 4 113 2 115 4 239 2 117 1 119 1 242 2 121 2 124 2 125 1 247 2 129 1 248 2 250 1 130 2 
0 3 193 3 195 1 1 1 2 1 132 1 66 3 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 154 1 22 1 23 1 157 1 158 1 25 1 210 1 211 1 26 1 91 5 216 1 217 1 163 1 165 1 167 1 221 1 34 3 35 1 37 1 176 1 231 1 177 1 42 1 43 1 46 1 48 4 236 2 113 1 238 1 114 1 51 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
0 2 193 2 195 1 1 1 2 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 154 1 22 1 23 1 157 1 158 1 25 1 210 1 211 1 26 1 91 3 216 1 217 1 163 1 165 1 167 1 221 1 34 2 35 1 37 1 176 1 231 1 177 1 42 1 43 1 48 3 236 1 113 1 238 1 114 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
1 1 188 1 2 1 190 4 211 1 125 1 142 4 79 1 80 1 157 1 42 1 217 1 
190 1 211 1 142 1 80 1 217 1 
0 2 193 2 195 1 1 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 22 1 23 1 154 1 157 1 158 1 25 1 210 1 211 1 26 1 91 3 216 1 217 1 163 1 165 1 167 1 221 1 34 2 35 1 37 1 176 1 231 1 177 1 42 1 43 1 48 3 236 1 113 1 238 1 114 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
0 2 193 2 195 1 1 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 22 1 23 1 154 1 157 1 158 1 25 1 210 1 211 1 26 1 91 3 216 1 163 1 165 1 219 1 167 1 221 1 34 2 35 1 37 1 176 1 231 1 177 1 42 1 43 1 48 3 236 1 113 1 238 1 114 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
0 2 193 2 1 1 195 1 2 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 154 1 22 1 23 1 157 1 158 1 25 1 210 1 211 1 26 1 91 3 216 1 217 1 163 1 165 1 167 1 221 1 34 2 35 1 37 1 176 1 231 1 177 1 42 1 43 1 107 1 232 1 48 3 236 1 113 1 114 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
127 1 
0 2 193 2 195 1 1 1 2 1 132 1 66 2 200 1 201 1 203 1 11 1 142 4 79 1 204 1 80 1 206 1 21 1 150 1 154 1 22 1 23 1 157 1 158 1 25 1 210 1 211 1 26 1 91 4 216 1 217 1 163 1 165 1 167 1 221 1 34 2 35 1 37 1 176 1 231 1 177 1 42 1 43 1 48 3 236 1 113 1 238 1 114 1 51 1 117 1 55 1 56 1 188 1 190 4 125 1 248 1 250 1 
61 1 89 1 59 1 
76 1 89 1 
89 1 249 1 
147 1 173 1 50 1 212 1 77 1 153 1 198 1 89 1 116 1 68 1 248 1 60 1 
147 1 173 1 212 1 89 1 116 1 248 1 60 1 
89 1 249 1 
173 1 212 1 198 1 134 1 89 1 248 1 
246 1 89 1 
89 1 249 1 
76 1 89 1 
76 1 89 1 
57 1 112 1 89 1 44 1 
29 1 73 1 89 1 
0 1 19 1 148 1 48 2 236 1 183 1 23 1 241 2 25 1 210 1 141 2 40 1 89 2 91 1 249 1 228 1 146 1 
118 1 
0 1 45 1 19 1 48 2 236 1 183 1 23 1 25 1 210 1 40 1 91 1 228 1 146 1 
0 1 193 2 48 3 117 1 66 2 23 1 208 1 34 2 210 1 174 2 38 1 91 1 
0 1 193 1 195 2 4 2 132 2 63 1 198 3 66 1 67 2 199 2 200 4 202 1 72 1 203 2 10 2 141 4 14 1 82 1 18 1 20 2 207 2 149 2 150 2 152 2 23 1 22 2 85 2 210 1 212 6 160 1 26 1 89 4 90 1 91 2 165 4 167 1 95 2 169 1 222 2 170 1 34 1 172 2 173 1 174 1 37 2 38 1 103 2 176 2 225 2 230 2 231 2 177 2 233 2 106 3 179 2 234 1 47 1 48 3 111 4 181 1 113 2 115 4 51 1 117 1 119 1 242 2 186 4 56 1 187 1 124 2 247 2 129 1 248 2 130 2 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 123 2 124 1 247 1 215 1 91 1 249 1 
34 1 0 1 193 1 174 1 210 1 48 2 38 1 91 1 66 1 117 1 23 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 1 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 1 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 123 2 124 1 247 1 91 1 249 1 
0 1 193 1 48 2 117 1 66 1 23 1 208 1 34 1 101 1 210 1 174 1 38 1 91 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 1 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 123 2 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 110 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 2 193 2 194 2 195 1 3 1 132 1 4 1 198 2 199 1 66 2 67 1 200 2 68 2 203 1 10 1 140 1 141 2 77 2 143 1 207 1 147 1 150 1 153 3 22 1 23 1 85 1 155 1 208 1 210 1 212 2 89 3 90 1 216 1 91 4 165 2 222 1 98 1 34 2 173 1 174 2 37 1 38 1 176 1 104 1 230 1 231 1 177 1 233 1 46 1 48 3 50 2 111 2 113 1 181 1 51 1 116 1 117 1 242 1 124 1 59 3 129 1 248 1 60 1 130 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 208 1 210 1 124 1 215 1 91 1 249 1 
0 1 193 1 195 1 4 1 132 1 66 1 67 1 199 1 200 2 72 1 203 1 10 1 141 2 18 1 20 1 207 1 149 1 150 1 152 1 23 1 22 1 85 1 210 1 212 3 26 1 89 2 91 1 165 2 167 1 95 1 222 1 34 1 172 1 174 1 37 1 38 1 103 1 176 1 225 1 230 1 231 1 177 1 106 3 233 1 179 1 47 1 48 3 111 2 113 1 115 2 117 1 242 1 186 2 56 1 187 1 124 1 247 1 248 1 130 1 
0 1 193 1 48 2 117 1 66 1 23 1 208 1 34 1 210 1 174 1 38 1 103 1 91 1 
1 1 195 1 132 1 4 1 67 1 199 1 200 2 72 1 203 1 10 1 141 2 205 1 18 1 20 1 207 1 149 1 150 1 152 1 22 1 85 1 212 3 26 1 89 2 215 1 165 2 167 1 95 1 222 1 98 1 172 1 37 1 103 1 176 2 225 1 230 1 231 1 177 1 43 1 106 3 233 1 179 1 48 1 111 2 113 1 115 2 239 1 242 1 186 2 56 1 187 1 121 1 124 1 247 1 248 1 130 1 
0 1 193 1 195 1 4 1 132 1 66 1 67 1 199 1 200 2 72 1 203 1 10 1 141 2 18 1 20 1 207 1 149 1 150 1 152 1 23 1 22 1 85 1 210 1 212 3 26 1 89 2 91 1 165 2 167 1 95 1 222 1 34 1 172 1 174 1 37 1 38 1 103 1 176 1 225 1 230 1 231 1 177 1 233 1 106 3 179 1 47 1 48 3 110 1 111 2 113 1 115 2 117 1 242 1 186 2 56 1 187 1 124 1 247 1 248 1 130 1 
0 1 193 1 1 1 195 1 4 1 132 1 199 1 66 1 67 1 200 2 72 1 203 1 10 1 141 2 18 1 20 1 207 1 149 1 150 1 152 1 23 1 22 1 85 1 25 1 210 1 212 3 26 1 89 2 91 1 165 2 167 1 95 1 222 1 34 1 172 1 37 1 103 1 176 1 225 1 230 1 231 1 177 1 43 1 233 1 106 3 179 1 48 3 110 1 236 1 111 2 113 1 115 2 117 1 242 1 186 2 56 1 187 1 124 1 247 1 248 1 130 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 176 2 141 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 2 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 215 1 91 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 67 1 66 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 2 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 2 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
49 1 115 1 225 1 89 1 186 1 
49 1 115 1 89 1 152 1 186 1 
115 1 225 1 89 1 162 1 69 1 186 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 194 1 195 1 4 1 132 1 198 3 199 1 66 1 67 1 200 2 68 3 203 1 10 1 141 2 77 3 205 1 20 1 207 1 147 1 150 1 152 1 153 4 22 1 23 1 85 1 208 1 210 1 212 3 89 2 215 1 90 1 216 1 91 2 165 2 222 1 98 1 34 1 173 1 174 1 37 1 38 1 176 2 225 1 231 1 230 1 177 1 233 1 48 2 50 3 111 2 113 1 181 1 239 1 115 2 116 1 117 1 242 1 186 2 121 1 124 1 247 1 129 1 248 1 60 1 130 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 1 141 3 231 1 177 1 233 1 207 1 48 2 150 1 110 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 247 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 1 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 208 1 121 1 210 1 123 2 124 1 247 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 123 2 124 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 215 1 91 1 249 1 
0 1 193 1 165 2 195 1 4 1 132 1 199 1 66 1 67 1 200 2 222 1 34 1 203 1 10 1 174 1 37 1 38 1 176 1 141 3 231 1 177 1 233 1 207 1 48 2 150 1 111 3 117 1 22 1 23 1 242 1 210 1 124 1 91 1 249 1 
0 1 193 2 48 3 117 1 66 2 23 1 208 1 34 2 210 1 174 2 38 1 91 1 
0 1 193 1 165 2 195 1 132 1 4 1 199 1 66 1 67 1 200 2 222 1 98 1 34 1 203 1 10 1 174 1 37 1 38 1 141 3 176 2 231 1 177 1 205 1 233 1 207 1 48 2 150 1 111 3 239 1 117 1 22 1 23 1 242 1 208 1 121 1 210 1 124 1 247 1 215 1 91 1 249 1 
0 1 194 1 95 1 133 1 198 2 65 1 68 2 220 1 170 1 171 1 172 1 174 1 173 1 139 1 38 1 77 2 40 1 13 1 230 1 15 1 179 1 149 1 50 2 48 2 113 1 181 1 153 3 116 1 23 1 85 1 184 1 185 1 210 1 122 1 212 2 244 1 213 1 89 4 91 1 59 3 129 1 60 1 248 1 130 1 
0 1 194 1 198 2 65 1 68 2 220 1 33 1 70 1 171 1 174 1 173 1 38 1 77 2 40 1 230 1 15 1 50 2 48 2 113 1 181 1 240 1 153 3 116 1 23 1 85 1 24 1 54 1 185 1 56 1 210 1 122 1 212 2 89 4 216 1 91 2 90 1 59 3 129 1 60 1 248 1 130 1 
0 1 193 1 165 4 195 3 4 1 132 3 199 1 67 1 66 1 200 4 222 1 9 1 34 1 203 3 10 1 174 1 37 3 38 1 141 2 176 3 231 3 177 3 206 1 233 1 207 1 110 1 150 3 48 2 111 2 114 2 117 1 22 3 23 1 242 1 158 1 210 1 124 1 247 1 91 1 
0 1 193 1 165 3 195 3 132 3 66 1 200 3 34 1 203 3 174 1 37 3 38 1 176 3 226 1 231 3 177 3 206 1 150 3 48 2 114 3 117 1 22 3 23 1 158 1 210 1 91 1 
0 1 193 1 165 1 195 1 132 1 97 1 66 1 200 1 34 1 203 1 174 1 37 1 38 1 176 1 231 1 177 1 206 1 150 1 48 2 114 1 117 1 22 1 23 1 158 1 210 1 91 1 
0 1 193 1 48 2 114 1 97 1 117 1 66 1 23 1 34 1 210 1 174 1 38 1 91 1 206 1 
0 1 193 1 165 1 195 1 132 1 66 1 200 1 34 1 203 1 11 1 174 1 37 1 38 1 176 1 231 1 177 1 206 1 150 1 48 2 114 1 117 1 22 1 23 1 158 1 210 1 91 1 
0 1 193 1 165 1 195 1 48 2 150 1 132 1 114 1 66 1 117 1 23 1 200 1 22 1 34 1 158 1 203 1 174 1 210 1 37 1 38 1 176 1 91 1 231 1 177 1 206 1 
71 1 223 1 48 1 30 1 
58 1 243 1 48 1 39 1 31 1 
48 1 30 1 62 1 
83 2 48 1 39 1 31 1 
30 1 237 1 
173 1 181 1 129 1 248 1 
194 1 147 1 50 1 77 1 153 1 198 1 68 1 
179 1 173 1 149 1 74 1 95 1 248 1 170 1 
194 1 50 1 77 1 153 1 198 1 68 1 
9 1 207 1 165 2 132 1 111 1 141 1 88 1 
165 1 132 1 
165 1 207 1 111 1 141 1 89 1 249 1 
165 1 132 1 
111 1 141 1 89 1 249 1 
25 1 
236 1 
236 1 
174 1 
38 1 
174 1 
0 1 83 1 48 2 6 1 23 1 209 1 36 1 210 1 224 1 159 1 175 1 245 1 27 1 40 1 91 1 
0 1 45 1 180 1 83 1 48 2 6 1 23 1 209 1 36 1 210 1 159 1 224 1 175 1 245 1 40 1 91 1 
0 1 83 1 48 2 6 1 23 1 7 2 209 1 137 1 36 1 73 1 210 1 224 1 159 1 175 1 245 1 141 2 40 1 89 1 91 1 249 1 
32 1 
75 1 89 2 59 2 249 1 
131 1 89 2 59 2 249 1 
0 1 131 1 167 1 95 1 6 1 32 1 7 1 72 1 137 1 172 1 36 1 224 1 175 1 75 1 141 1 40 1 230 1 17 1 18 1 106 2 179 1 149 1 83 1 47 1 48 3 113 1 51 1 23 1 85 1 209 1 56 1 187 1 210 1 159 1 212 2 245 1 26 1 27 1 89 2 91 2 59 2 248 1 130 1 
45 1 36 1 210 1 180 1 23 1 
0 1 131 1 194 1 6 1 198 3 32 1 68 3 7 1 137 1 36 1 73 1 173 1 224 1 175 1 75 1 141 1 77 3 40 1 230 1 147 1 83 1 50 3 48 2 181 1 113 1 153 4 51 1 116 1 23 1 85 1 209 1 57 1 210 1 159 1 212 2 245 1 89 3 91 3 216 1 90 1 59 2 129 1 60 1 248 1 130 1 
0 1 83 1 48 2 6 1 23 1 7 1 209 1 137 1 36 1 73 2 210 1 224 1 159 1 175 1 245 1 141 1 40 1 89 3 91 1 249 1 
0 1 83 1 48 2 6 1 23 1 209 1 36 1 210 1 159 1 224 1 175 1 245 1 126 1 40 1 91 1 
0 2 45 1 180 1 83 2 48 4 6 2 23 2 209 2 36 2 210 2 159 2 224 2 175 2 245 2 126 1 40 2 91 2 
0 1 83 1 48 2 6 1 97 1 23 1 209 1 36 1 210 1 224 1 159 1 175 1 245 1 40 1 91 1 
0 2 83 2 48 4 6 2 23 2 209 2 36 2 210 2 159 2 224 2 175 2 245 2 126 1 27 1 40 2 91 2 
92 1 45 1 138 1 12 1 168 1 52 1 
0 1 92 1 168 1 100 2 138 1 73 1 175 1 141 2 40 1 78 1 16 1 81 1 83 1 48 2 112 1 23 1 53 1 210 1 89 2 91 1 249 1 
81 1 92 1 0 1 83 1 48 2 112 1 168 1 52 1 23 1 100 2 73 1 138 1 210 1 12 1 175 1 141 2 40 1 89 2 91 1 249 1 
0 1 92 1 194 1 166 1 198 2 168 1 68 2 8 1 100 1 73 1 138 1 173 1 12 1 175 1 141 1 77 2 40 1 230 1 145 1 81 1 147 1 83 1 50 2 48 2 113 1 181 1 153 3 51 1 116 1 23 1 52 1 57 1 210 1 212 1 89 1 91 3 216 1 90 1 129 1 60 1 248 1 
9 1 92 1 218 1 100 1 141 1 135 1 
249 1 145 1 
249 1 8 1 
92 2 0 1 218 1 166 1 83 1 48 2 115 1 168 1 52 1 23 1 135 1 186 1 100 1 73 1 138 1 210 1 12 1 175 1 141 1 40 1 89 2 91 1 
0 1 92 2 29 1 218 1 166 1 168 1 135 1 9 1 100 1 138 1 73 1 12 1 175 1 141 1 40 1 83 1 48 2 115 1 182 1 23 1 52 1 186 1 210 1 89 2 91 1 
166 1 
0 1 92 2 218 1 166 1 167 1 95 1 168 1 135 1 8 1 72 1 172 1 100 2 73 2 138 1 12 1 175 1 141 2 40 1 230 1 145 1 81 1 18 1 20 1 106 4 179 1 149 1 83 1 47 1 48 3 113 1 115 1 51 1 23 1 52 1 53 1 186 1 56 1 57 2 187 1 210 1 212 2 26 1 89 3 91 2 248 1 
92 1 45 1 138 1 12 1 168 1 52 1 
0 1 92 2 218 1 194 1 166 1 198 4 168 1 68 4 135 1 8 1 100 2 73 2 138 1 173 1 12 1 175 1 141 2 77 4 40 1 230 1 145 1 81 1 20 1 147 1 83 1 50 4 48 2 113 1 181 1 115 1 153 5 51 1 116 1 23 1 52 1 186 1 57 2 210 1 212 2 89 3 91 3 216 1 90 1 129 1 60 1 248 1 

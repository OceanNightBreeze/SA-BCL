#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 223 70 187 220 121 173 5 6 179 28 62 216 9 217 222 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V ERROR java.lang.NullPointerException 223 70 187 220 121 173 5 6 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V ERROR java.lang.NullPointerException 223 70 187 220 104 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V ERROR java.lang.NullPointerException 223 70 187 220 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V ERROR java.lang.NullPointerException 42 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V ERROR java.lang.NullPointerException 223 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List; | RETURN | 32208 | return null
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | STATEMENT | 11921 | stmt -> ;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getResolution()I | CONDITION | 13540 | if (x) -> if (!x)
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:Module([I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 236 1 237 1 238 1 57 1 164 1 
127 1 236 1 238 1 57 1 164 1 
32 1 55 1 123 2 
242 3 157 1 161 1 160 3 128 2 113 3 82 1 105 1 31 1 16 1 18 2 
242 2 5 1 161 1 160 2 247 1 164 1 173 1 128 1 83 1 82 1 31 1 210 1 252 1 16 1 18 2 
242 1 5 1 161 1 160 2 59 1 247 1 164 1 173 1 128 1 82 1 52 1 31 1 226 1 210 1 16 1 18 1 184 1 
242 1 6 1 5 2 161 1 160 2 247 1 164 1 173 1 128 1 82 1 31 1 210 1 252 1 16 1 18 1 
114 1 82 1 161 1 16 1 
242 1 161 1 160 1 61 1 128 2 82 1 31 1 16 1 18 1 156 1 
242 1 5 1 161 1 160 2 59 1 247 2 164 2 173 1 128 1 63 1 81 1 52 1 31 1 226 1 238 1 210 1 16 1 18 1 184 1 
242 1 5 1 161 1 160 2 59 1 247 2 164 2 173 1 128 1 63 1 52 1 31 1 226 1 238 1 210 1 16 1 18 1 184 1 
242 1 161 1 160 1 247 1 164 1 128 1 63 1 81 1 82 1 31 1 238 1 87 1 33 1 16 1 18 1 240 1 
242 1 246 1 161 1 160 1 247 1 164 1 128 1 63 1 81 1 82 1 31 1 238 1 87 1 33 1 16 1 18 1 
242 1 161 1 160 1 111 1 247 1 164 1 165 1 128 1 249 1 63 1 82 1 31 1 238 1 87 1 33 1 16 1 18 1 
242 1 161 1 160 1 111 1 247 1 164 1 165 1 128 1 249 1 63 1 81 1 82 1 31 1 238 1 87 1 33 1 16 1 18 1 
128 1 242 2 82 1 105 1 31 1 160 1 161 1 16 1 18 1 
242 2 140 1 161 1 160 1 128 1 102 1 82 1 16 1 18 1 
128 2 140 1 242 1 82 1 192 1 160 1 161 1 16 1 18 1 
128 1 140 1 242 1 82 1 26 1 160 1 161 1 16 1 18 1 
128 1 140 1 242 1 82 1 160 1 161 1 16 1 18 1 79 1 
242 1 140 1 190 1 5 4 161 1 160 2 247 1 164 1 173 1 193 1 128 1 82 1 106 1 16 1 18 1 170 1 36 1 
128 1 140 1 242 1 66 1 82 1 160 1 161 1 16 1 18 1 10 1 
76 1 12 3 243 1 
12 1 
141 1 140 1 0 2 1 5 143 1 6 1 5 2 9 1 13 3 147 2 152 4 17 1 21 3 22 1 26 2 160 4 161 1 27 4 28 1 164 2 29 3 166 1 30 1 167 2 169 3 35 1 36 1 37 2 39 2 171 3 40 1 42 2 43 1 173 1 50 1 179 1 180 4 183 1 53 1 186 2 187 2 60 1 61 1 62 1 63 1 194 3 196 2 197 3 70 2 72 1 199 2 77 1 204 1 203 1 83 1 209 1 88 4 213 2 214 1 93 1 216 1 217 1 95 1 219 1 220 2 96 2 97 2 221 1 224 1 223 2 225 2 100 6 102 1 104 2 105 1 232 3 110 2 234 3 112 2 238 1 241 1 242 4 121 2 245 4 124 2 125 4 128 5 127 2 250 4 133 1 252 1 136 1 254 14 137 1 139 2 
141 1 140 1 0 2 1 5 77 1 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 88 4 17 1 21 3 93 1 22 1 214 1 213 1 216 1 217 1 95 1 220 2 96 2 97 2 26 2 27 4 161 1 160 3 221 1 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 35 1 169 2 36 1 37 2 39 2 171 2 232 3 42 2 43 1 110 2 234 2 112 2 173 1 50 1 179 1 238 1 180 4 183 1 186 2 53 1 241 1 187 2 242 2 121 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 250 4 194 3 133 1 196 2 252 1 197 3 70 2 72 1 254 4 136 1 199 2 139 2 137 1 
217 1 95 1 77 1 9 1 50 1 102 1 152 4 88 4 183 1 214 1 137 1 53 1 
141 1 0 2 1 4 142 2 5 2 6 1 143 1 9 1 13 3 147 2 152 4 21 3 158 1 26 2 27 4 161 1 160 3 162 1 164 2 28 1 166 1 31 1 168 1 35 1 169 2 37 2 39 2 171 2 42 2 43 1 45 1 47 2 173 1 49 1 50 1 178 2 179 1 180 4 182 1 181 1 183 1 186 2 53 1 187 2 188 2 60 1 62 1 63 1 194 2 64 1 196 2 197 4 70 2 72 1 199 2 74 2 201 2 77 1 202 2 204 1 209 1 210 1 86 1 88 4 214 1 216 1 217 1 95 1 220 2 97 2 98 2 224 1 223 2 225 2 100 6 104 2 105 1 232 2 110 2 234 2 112 2 113 1 238 1 239 1 119 2 241 1 242 2 121 2 244 2 245 4 124 2 125 4 126 1 127 2 128 3 129 2 250 4 133 1 251 1 252 1 254 4 136 1 137 1 139 2 
141 1 140 1 0 2 1 5 77 1 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 153 1 88 4 17 1 21 3 93 1 214 1 213 1 216 1 217 1 95 1 220 2 96 2 97 2 26 2 27 4 161 1 160 3 221 1 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 169 2 36 1 37 2 39 2 171 2 232 3 42 2 110 2 234 2 112 2 173 1 50 1 179 1 238 1 180 4 183 1 186 2 53 1 187 2 242 2 189 1 121 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 250 4 194 3 133 1 196 2 252 1 197 3 70 2 71 1 72 1 254 4 136 1 199 2 139 2 137 1 
141 1 140 1 77 1 143 1 6 2 5 3 204 1 9 1 206 4 146 2 13 4 208 2 209 1 150 1 152 4 88 4 155 2 19 4 21 4 214 1 213 1 216 1 217 1 95 1 26 2 27 2 161 1 160 3 28 1 164 2 224 1 100 4 166 1 101 1 102 1 105 1 36 1 38 2 230 3 41 1 44 2 173 1 48 1 50 1 179 1 238 1 180 2 183 1 53 1 241 1 242 2 54 2 121 2 60 1 62 1 248 4 127 2 128 3 63 1 250 4 131 2 195 1 68 1 134 1 252 1 72 1 254 8 136 1 137 1 
141 1 140 1 0 2 1 4 142 2 77 1 202 2 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 88 4 21 3 214 1 213 1 216 1 217 1 95 1 220 2 97 2 26 2 160 4 161 1 27 4 98 2 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 169 2 35 1 36 1 37 2 39 2 171 2 232 2 42 2 43 1 110 2 234 2 112 2 173 1 50 1 179 1 238 1 180 4 181 1 183 1 119 2 53 1 186 2 187 2 242 2 121 2 244 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 129 2 250 4 194 2 133 1 196 2 252 1 197 4 70 2 72 1 136 1 254 4 139 2 199 2 137 1 
140 1 141 1 0 2 1 5 5 3 6 2 143 1 9 1 13 3 147 2 152 4 153 1 17 1 21 3 22 1 26 2 160 3 161 1 27 4 164 2 28 1 166 1 169 2 35 1 36 1 37 2 39 2 171 2 42 2 43 1 173 1 176 1 50 1 179 1 180 4 183 1 53 1 186 2 187 2 189 1 60 1 61 1 62 1 63 1 194 3 196 2 197 3 70 2 72 1 199 2 77 1 204 1 209 1 88 4 213 1 214 1 93 1 216 1 217 1 95 1 220 2 96 2 97 2 221 1 224 1 223 2 225 2 100 6 102 1 104 2 105 1 232 3 110 2 234 2 112 2 238 1 242 2 241 1 121 2 245 4 124 2 125 4 128 4 127 2 250 4 133 1 252 1 136 1 254 4 137 1 139 2 
91 1 
217 1 152 1 88 1 9 1 214 1 
141 1 140 1 0 2 1 5 77 1 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 153 1 88 4 17 1 21 3 93 1 22 1 214 1 213 1 216 1 217 1 95 1 220 2 96 2 97 2 26 2 27 4 161 1 160 3 221 1 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 35 1 169 2 36 1 37 2 39 2 171 2 232 3 42 2 43 1 110 2 234 2 112 2 173 1 179 1 238 1 180 4 183 1 186 2 53 1 187 2 242 2 189 1 121 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 250 4 194 3 133 1 196 2 252 1 197 3 70 2 72 1 254 4 136 1 199 2 139 2 137 1 
141 1 140 1 0 2 1 5 77 1 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 153 1 88 4 17 1 21 3 93 1 22 1 214 1 213 1 216 1 95 1 220 2 96 2 97 2 26 2 27 4 161 1 160 3 221 1 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 35 1 169 2 36 1 37 2 39 2 171 2 232 3 42 2 43 1 110 2 234 2 112 2 173 1 179 1 238 1 180 4 183 1 186 2 53 1 187 2 242 2 189 1 121 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 250 4 194 3 133 1 196 2 252 1 197 3 253 1 70 2 72 1 254 4 136 1 199 2 139 2 137 1 
140 3 141 1 0 2 1 5 142 2 5 2 6 1 143 3 9 1 13 3 147 2 152 4 153 1 17 1 21 3 26 2 160 5 161 3 27 6 28 1 164 2 166 1 169 4 35 1 36 1 37 2 39 2 171 4 42 2 43 1 173 1 50 1 179 1 180 6 181 1 183 1 53 1 186 2 187 2 189 1 60 1 62 1 63 1 194 3 196 2 197 5 70 2 72 1 199 2 77 1 202 2 204 1 209 1 88 4 213 1 214 1 93 1 216 1 218 1 217 1 95 1 220 2 96 2 97 2 98 2 221 1 222 1 224 1 223 2 225 2 100 6 102 1 104 2 105 1 232 3 110 2 234 4 112 2 238 1 119 2 242 4 121 2 244 2 245 4 124 2 125 4 128 5 127 2 129 2 250 4 133 3 252 1 136 1 254 6 137 1 138 1 139 2 
141 1 140 1 0 2 1 4 142 2 77 1 202 2 143 1 6 1 5 2 204 1 9 1 13 3 147 2 209 1 152 4 88 4 21 3 214 1 213 1 216 1 217 1 95 1 220 2 97 2 26 2 160 3 161 1 27 4 162 1 98 2 28 1 164 2 225 2 223 2 224 1 100 6 166 1 102 1 104 2 105 1 169 2 35 1 36 1 37 2 39 2 171 2 232 2 42 2 43 1 110 2 234 2 112 2 173 1 50 1 179 1 238 1 180 4 181 1 183 1 119 2 53 1 186 2 241 1 187 2 242 2 121 2 244 2 245 4 124 2 125 4 60 1 62 1 127 2 128 3 63 1 129 2 250 4 194 2 133 1 196 2 252 1 197 4 70 2 72 1 136 1 254 4 139 2 199 2 137 1 
191 1 203 1 254 1 
7 1 254 1 
148 1 254 1 
24 1 78 1 164 1 165 1 100 1 207 1 130 1 13 1 238 1 87 1 33 1 254 1 
100 1 130 1 238 1 33 1 87 1 164 1 254 1 
148 1 254 1 
100 1 13 1 238 1 8 1 164 1 254 1 
185 1 254 1 
148 1 254 1 
7 1 254 1 
7 1 254 1 
65 1 15 1 19 1 254 1 
248 1 116 1 254 1 
242 1 140 1 120 2 143 1 161 1 160 1 205 1 128 1 80 1 250 2 67 1 103 1 148 1 155 1 254 2 212 1 
198 1 
128 1 140 1 242 1 80 1 67 1 114 1 103 1 143 1 160 1 161 1 155 1 212 1 
128 1 242 1 171 1 31 1 133 1 143 1 160 1 161 1 169 1 234 1 
128 1 242 1 171 2 113 1 177 1 31 1 133 1 143 1 160 2 161 1 169 2 234 2 
74 2 141 1 0 2 1 4 201 2 142 2 5 1 143 1 6 1 13 3 147 2 209 1 210 1 86 1 21 3 158 1 220 2 97 2 26 2 27 4 161 1 160 2 164 2 225 2 223 2 100 6 166 1 104 2 31 1 168 1 169 1 37 2 39 2 171 1 232 2 42 2 45 1 110 2 47 2 234 1 173 1 112 2 49 1 178 2 238 1 180 4 182 1 239 1 186 2 242 1 187 2 188 2 121 2 245 4 124 2 125 4 126 1 61 1 128 2 127 2 63 1 64 1 194 2 250 4 133 1 251 1 196 2 197 2 70 2 72 1 254 4 139 2 199 2 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 1 1 143 1 110 1 234 1 177 1 147 1 20 1 119 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 98 1 225 1 223 1 128 1 129 1 250 1 194 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
128 1 242 1 171 2 113 1 177 1 31 1 133 1 143 1 160 2 161 1 169 2 234 2 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 194 1 250 3 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
187 1 242 1 171 1 232 1 0 1 220 1 245 1 143 1 124 1 161 1 160 1 125 1 234 1 223 1 128 1 250 1 194 1 133 1 31 1 197 1 70 1 169 1 37 1 139 1 
242 1 171 1 143 1 161 1 160 1 234 1 128 1 177 1 133 1 31 1 85 1 169 1 
171 1 0 1 232 1 1 1 143 1 110 1 234 1 147 1 20 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 225 1 223 1 128 1 194 1 250 1 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
187 1 242 1 171 1 232 1 0 1 220 1 245 1 143 1 124 1 161 1 160 1 125 1 234 1 223 1 128 1 250 1 194 1 133 1 31 1 197 1 70 1 169 1 37 1 139 1 
187 1 242 1 171 1 232 1 0 1 220 1 245 1 143 1 124 1 161 1 160 1 125 1 234 1 223 1 128 1 250 1 194 1 133 1 31 1 197 1 70 1 169 1 37 1 139 1 
171 1 0 1 232 1 1 1 202 1 143 1 110 1 234 1 147 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 225 1 223 1 128 1 194 1 250 1 31 1 133 1 196 1 197 2 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 194 1 250 3 104 1 31 1 133 1 196 1 197 2 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 1 1 202 1 143 1 110 1 234 1 176 1 147 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 225 1 223 1 128 1 194 1 250 1 31 1 133 1 196 1 197 2 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 194 1 250 3 104 1 31 1 133 1 196 1 197 2 169 1 70 1 37 1 199 1 139 1 
141 1 0 1 1 2 143 1 78 2 203 3 207 2 13 2 147 1 83 1 209 1 87 1 220 1 24 2 97 1 26 1 161 1 160 1 163 1 164 1 165 3 225 1 223 1 224 1 100 2 31 1 33 1 169 2 37 1 231 1 39 1 171 2 232 1 42 1 110 1 111 2 234 2 112 1 177 1 238 1 242 2 187 1 121 1 245 2 246 1 124 1 125 2 61 1 128 4 63 1 129 1 130 1 194 1 250 2 133 1 196 1 197 1 70 1 254 3 73 1 135 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 177 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 194 1 250 3 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
39 1 171 1 232 1 0 1 142 1 5 1 6 1 143 1 234 1 112 1 173 1 210 1 180 2 21 2 186 1 187 1 242 1 220 1 121 1 245 1 26 1 124 1 160 2 161 1 27 2 125 1 164 1 223 1 128 1 127 1 100 2 250 1 194 1 166 1 31 1 133 1 197 1 70 1 169 1 37 1 254 2 139 1 
128 1 242 1 171 1 177 1 31 1 133 1 143 1 160 1 161 1 47 1 169 1 234 1 
74 1 0 1 1 2 201 1 142 1 6 1 5 1 202 1 147 1 21 3 220 1 26 1 97 1 27 2 160 1 98 1 164 1 223 1 225 1 100 3 166 1 102 1 104 1 36 1 37 1 39 1 232 1 42 1 110 1 47 1 112 1 173 1 49 1 178 1 180 2 119 1 186 1 187 1 188 1 121 1 244 1 245 2 124 1 125 2 127 1 129 1 194 1 250 2 196 1 197 2 70 1 72 1 254 2 199 1 139 1 
74 1 0 1 1 2 201 1 142 1 143 1 6 1 5 1 147 1 210 1 21 3 220 1 97 1 26 1 27 2 161 1 160 2 164 1 225 1 223 1 100 3 166 1 104 1 31 1 169 1 37 1 39 1 171 1 232 1 42 1 110 1 47 1 234 1 173 1 112 1 49 1 176 1 178 1 180 2 186 1 242 1 187 1 188 1 121 1 245 2 124 1 125 2 127 1 128 1 194 1 250 2 133 1 196 1 197 1 70 1 72 1 254 2 139 1 199 1 
74 1 140 1 0 1 1 2 201 1 142 1 5 1 6 1 143 1 147 1 21 3 220 1 97 1 26 1 27 2 161 1 160 2 164 1 225 1 223 1 100 3 166 1 102 1 104 1 169 1 36 1 37 1 39 1 171 1 232 1 42 1 110 1 47 1 234 1 173 1 112 1 49 1 176 1 178 1 180 2 186 1 242 1 187 1 188 1 121 1 245 2 124 1 125 2 128 1 127 1 194 1 250 2 133 1 196 1 197 1 70 1 72 1 254 2 139 1 199 1 
171 1 232 1 0 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 119 1 242 1 187 1 220 1 244 1 97 1 245 2 124 1 160 1 161 1 98 1 125 2 225 1 223 1 128 1 129 1 194 1 250 2 31 1 133 1 196 1 197 2 169 1 70 1 37 1 139 1 199 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
187 1 242 1 171 1 232 1 0 1 220 1 143 1 245 2 124 1 161 1 160 1 125 1 234 1 223 1 128 1 194 1 250 2 104 1 133 1 31 1 197 1 70 1 169 1 37 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 250 3 194 1 104 1 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 250 3 194 1 104 1 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 97 1 245 2 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 2 194 1 104 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 250 3 194 1 104 1 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
142 1 180 1 27 1 229 1 254 1 
180 1 27 1 229 1 254 1 186 1 
142 1 180 1 27 1 227 1 118 1 254 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
141 1 0 1 1 2 142 1 202 1 143 1 78 3 207 3 13 3 147 1 209 1 87 1 220 1 24 3 97 1 26 1 27 2 161 1 160 1 98 1 164 1 165 4 225 1 224 1 223 1 100 3 104 1 31 1 33 1 169 1 37 1 39 1 171 1 232 1 42 1 110 1 111 1 234 1 112 1 177 1 238 1 180 2 119 1 186 1 242 1 187 1 121 1 244 1 245 2 124 1 125 2 128 2 127 1 129 1 63 1 130 1 194 1 250 2 133 1 196 1 197 2 70 1 254 2 139 1 199 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 176 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 194 1 250 3 104 1 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 104 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 1 1 143 1 110 1 234 1 177 1 147 1 20 1 119 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 98 1 225 1 223 1 128 1 129 1 250 1 194 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 1 1 143 1 110 1 234 1 177 1 147 1 20 1 119 1 242 1 187 1 220 1 97 1 245 1 160 1 161 1 124 1 125 1 98 1 225 1 223 1 128 1 129 1 250 1 194 1 31 1 133 1 196 1 197 1 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 202 1 143 1 110 1 234 1 177 1 147 1 148 1 119 1 242 1 187 1 220 1 244 1 97 1 245 3 160 1 161 1 124 1 125 2 98 1 225 1 223 1 128 1 129 1 250 3 194 1 31 1 133 1 196 1 197 2 70 1 169 1 37 1 199 1 139 1 
171 1 0 1 232 1 42 1 1 2 143 1 110 1 234 1 147 1 148 1 242 1 187 1 220 1 97 1 245 3 160 1 161 1 124 1 125 2 225 1 223 1 128 1 194 1 250 3 31 1 133 1 196 1 197 1 169 1 70 1 37 1 199 1 139 1 
141 1 39 1 172 1 5 1 78 2 143 1 203 3 111 1 112 1 207 2 13 2 52 1 209 1 238 1 117 1 87 1 89 1 155 1 240 1 184 1 242 1 23 1 159 1 121 1 24 2 26 1 160 1 161 1 59 1 164 1 165 3 224 1 128 2 100 2 63 1 31 1 226 1 33 1 34 1 254 4 
74 1 141 1 39 1 172 1 200 1 201 1 78 2 143 1 203 3 111 1 10 1 112 1 207 2 13 2 178 1 209 1 238 1 117 1 87 1 89 1 155 1 215 1 242 1 158 1 188 1 23 1 159 1 121 1 24 2 26 1 56 1 160 1 161 1 164 1 165 3 128 1 100 2 66 1 31 1 33 1 107 1 34 1 254 4 
171 1 232 3 0 1 42 1 1 4 143 1 110 1 234 1 176 1 147 1 17 1 93 1 242 1 187 1 220 1 97 1 245 2 123 1 124 1 161 1 160 1 125 2 221 2 225 1 223 1 128 1 250 2 194 3 104 1 133 1 31 1 196 1 197 3 70 1 169 1 37 1 199 1 139 1 
242 1 171 1 232 3 1 3 143 1 160 1 161 1 221 3 234 1 174 1 128 1 194 3 31 1 133 1 197 3 169 1 17 1 93 1 
242 1 171 1 232 1 1 1 143 1 160 1 161 1 221 1 234 1 79 1 128 1 194 1 31 1 133 1 197 1 169 1 17 1 93 1 
242 1 171 1 143 1 161 1 160 1 221 1 234 1 79 1 128 1 133 1 31 1 17 1 169 1 
171 1 232 1 1 1 143 1 234 1 11 1 148 1 180 1 17 1 93 1 242 1 96 1 161 1 160 1 27 1 221 1 128 1 194 1 133 1 31 1 197 1 169 1 254 1 229 1 
242 1 171 1 232 1 1 1 143 1 160 1 161 1 221 1 234 1 128 1 194 1 31 1 133 1 197 1 169 1 17 1 93 1 
51 1 2 1 4 1 160 1 
94 1 157 1 149 1 160 1 46 1 
75 1 2 1 160 1 
157 1 151 2 160 1 46 1 
115 1 2 1 
207 1 13 1 24 1 78 1 111 1 165 1 
141 1 209 1 238 1 164 1 
130 1 207 1 13 1 24 1 78 1 111 1 165 1 
74 1 158 1 188 1 178 1 84 1 238 1 164 1 
250 1 42 1 245 1 233 1 123 1 125 2 223 1 
125 1 223 1 
42 1 125 1 254 1 
125 1 223 1 
250 1 148 1 245 1 254 1 
140 1 
213 1 
213 1 
113 1 
31 1 
113 1 
109 1 242 1 3 1 143 1 144 1 58 1 161 1 160 1 128 1 235 1 154 1 155 1 228 1 211 1 
109 1 242 1 3 1 143 1 144 1 161 1 160 1 79 1 128 1 235 1 154 1 155 1 228 1 211 1 
109 2 242 2 3 2 143 2 144 2 58 1 161 2 160 2 128 2 235 2 154 2 155 2 228 2 211 2 92 1 
109 1 242 1 3 1 143 1 144 1 161 1 160 1 128 1 235 1 132 1 114 1 154 1 155 1 228 1 211 1 
109 1 242 1 122 1 3 1 143 1 144 1 161 1 160 1 248 1 128 1 235 1 250 2 148 1 69 2 154 1 155 1 254 1 228 1 211 1 
99 1 
148 1 203 2 90 1 254 2 
14 1 148 1 203 2 254 2 
74 1 109 1 39 1 201 1 3 1 144 1 143 1 6 1 5 1 145 1 203 2 112 1 173 1 49 1 235 1 14 1 178 1 210 1 154 1 155 1 21 2 211 1 90 1 242 1 188 1 121 1 122 1 26 1 58 1 160 2 161 1 164 1 61 1 99 1 128 2 100 2 250 1 166 1 69 1 72 1 228 1 254 2 
235 1 132 1 114 1 143 1 161 1 
109 1 141 1 39 1 3 1 78 3 144 1 143 1 203 2 111 1 112 1 235 1 207 3 13 3 14 1 209 1 238 1 87 1 154 1 155 1 19 1 211 1 90 1 242 1 121 1 122 1 24 3 26 1 160 1 161 1 164 1 165 4 61 1 99 1 224 1 248 1 128 3 100 2 63 1 130 1 250 1 69 1 33 1 228 1 254 3 
109 1 242 1 122 1 3 1 143 1 144 1 161 1 160 1 248 2 128 1 235 1 250 1 148 1 69 1 154 1 155 1 254 3 228 1 211 1 
109 1 242 1 3 1 143 1 144 1 161 1 160 1 128 1 235 1 154 1 155 1 228 1 211 1 92 1 
109 2 242 2 3 2 143 2 144 2 161 2 160 2 128 2 235 2 132 1 114 1 154 2 155 2 228 2 211 2 92 1 
230 1 41 1 114 1 195 1 68 1 134 1 
230 1 41 1 144 1 143 1 206 2 175 1 148 1 15 1 155 1 242 1 54 1 25 1 160 1 161 1 128 1 248 1 250 2 68 1 108 1 254 2 
230 1 242 1 54 1 41 1 143 1 144 1 161 1 160 1 206 2 248 1 128 1 250 2 195 1 148 1 134 1 68 1 15 1 155 1 254 2 
230 1 141 1 41 1 44 1 78 2 144 1 143 1 111 1 206 1 207 2 146 1 13 2 209 1 238 1 87 1 155 1 19 1 242 1 54 1 121 1 24 2 26 1 160 1 161 1 164 1 165 3 61 1 224 1 248 1 128 3 100 1 63 1 130 1 250 1 131 1 195 1 68 1 134 1 33 1 254 1 
206 1 230 1 250 1 208 1 123 1 38 1 
146 1 148 1 
148 1 44 1 
230 2 242 1 41 1 143 1 144 1 27 1 161 1 160 1 248 1 206 1 128 1 250 1 131 1 208 1 195 1 134 1 68 1 180 1 155 1 254 2 38 1 
230 2 242 1 41 1 55 1 143 1 144 1 123 1 27 1 161 1 160 1 248 1 206 1 128 1 250 1 131 1 208 1 195 1 116 1 134 1 68 1 180 1 155 1 254 2 38 1 
131 1 
74 1 230 2 41 1 201 1 44 1 144 1 143 1 6 1 5 1 173 1 49 1 175 1 206 2 146 1 208 1 178 1 210 1 180 1 155 1 19 2 21 4 242 1 188 1 54 1 121 1 26 1 27 1 160 2 161 1 164 1 61 1 248 2 127 1 128 2 100 2 250 2 166 1 131 1 195 1 68 1 134 1 72 1 254 3 38 1 
230 1 41 1 114 1 195 1 68 1 134 1 
230 2 141 1 41 1 44 1 78 4 144 1 143 1 111 1 206 2 207 4 146 1 13 4 208 1 209 1 238 1 180 1 87 1 155 1 19 2 242 1 54 1 121 1 24 4 26 1 27 1 160 1 161 1 164 1 165 5 61 1 224 1 248 2 127 1 128 3 100 2 63 1 130 1 250 2 131 1 195 1 68 1 134 1 33 1 254 3 38 1 

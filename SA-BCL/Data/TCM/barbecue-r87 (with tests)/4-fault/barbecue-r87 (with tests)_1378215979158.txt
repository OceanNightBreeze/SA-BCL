#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 156 195 91 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 13985 | 2 -> 3
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 26263 | 1 -> 0
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 5473 | if (x) -> if (!x)
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
140 1 228 1 31 1 167 1 63 1 19 1 
140 1 228 1 31 1 167 1 63 1 
11 2 223 1 6 1 
41 1 110 1 187 1 76 1 79 1 176 3 64 1 216 1 226 1 65 1 164 1 83 1 153 1 167 1 194 1 34 1 138 2 169 1 38 1 
41 1 110 1 187 1 76 1 176 3 65 1 216 2 164 1 135 1 12 1 83 1 153 1 167 1 34 1 138 1 38 1 
41 1 21 1 110 2 187 2 176 2 65 1 164 1 153 3 34 1 138 1 
41 1 70 1 110 1 187 2 76 1 176 4 65 1 216 1 164 1 83 1 153 2 12 1 167 1 34 1 138 2 38 1 
41 1 164 1 34 1 254 1 
93 1 41 1 110 2 187 1 176 2 65 1 164 1 227 1 153 1 34 1 138 1 
41 1 110 1 187 1 76 2 176 3 64 1 216 1 65 1 226 1 164 1 31 1 83 1 153 1 167 2 194 1 138 1 169 1 38 1 200 1 139 1 
41 1 110 1 187 1 76 2 176 3 64 1 216 1 65 1 226 1 164 1 31 1 83 1 153 1 167 2 194 1 138 1 169 1 38 1 200 1 
41 1 234 1 110 1 187 1 76 1 176 2 65 1 164 1 31 1 153 1 167 1 34 1 138 1 200 1 203 1 92 1 139 1 
41 1 234 1 110 1 187 1 76 1 176 2 65 1 218 1 164 1 31 1 153 1 167 1 34 1 138 1 200 1 203 1 139 1 
41 1 234 1 110 1 187 1 75 1 76 1 176 2 65 1 164 1 31 1 252 1 153 1 167 1 34 1 138 1 200 1 202 1 203 1 
41 1 234 1 110 1 187 1 75 1 76 1 176 2 65 1 164 1 31 1 252 1 153 1 167 1 34 1 138 1 200 1 202 1 203 1 139 1 
41 1 21 1 110 1 187 1 176 3 65 1 164 1 153 2 34 1 138 2 
41 1 42 1 73 1 110 1 187 1 176 3 164 1 153 2 34 1 197 2 
41 1 42 1 164 1 153 1 110 2 34 1 187 1 117 1 197 1 176 2 
41 1 42 1 110 1 187 1 176 2 164 1 153 1 34 1 197 1 69 1 
41 1 244 1 42 1 164 1 153 1 110 1 34 1 187 1 197 1 176 2 
41 1 71 1 42 1 2 1 110 1 187 1 76 1 189 1 176 3 214 1 216 4 164 1 153 1 167 1 34 1 54 1 197 1 38 1 
41 1 42 1 110 1 187 1 176 2 49 1 250 1 164 1 153 1 34 1 197 1 
53 1 249 3 199 1 
249 1 
141 2 143 1 0 2 2 1 145 2 147 3 5 3 8 1 152 4 153 4 12 1 13 1 156 1 18 1 21 1 23 1 22 1 160 3 28 5 161 3 162 3 30 2 31 1 166 1 165 1 167 2 33 3 36 1 38 1 40 1 171 4 39 1 172 1 41 1 42 1 173 2 174 5 45 3 46 1 176 4 55 1 183 1 56 2 60 2 185 2 195 1 196 14 67 1 68 3 197 2 69 2 201 3 200 1 204 4 70 1 73 1 207 1 81 1 211 4 215 3 82 1 216 2 217 2 220 1 85 1 87 1 93 1 95 1 224 1 225 1 99 2 228 2 102 2 231 1 232 2 110 5 111 1 235 1 113 3 236 1 115 4 237 4 238 1 240 3 120 2 122 6 241 1 242 2 128 2 129 1 131 3 132 2 135 1 251 3 137 3 
141 2 143 1 73 1 145 2 2 1 207 1 211 4 5 3 8 1 215 2 216 2 82 1 217 2 152 4 12 1 153 2 13 1 85 1 87 1 156 1 18 1 95 1 21 1 23 1 22 1 28 5 160 3 224 1 161 3 225 1 162 3 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 36 1 38 1 232 2 171 4 40 1 39 1 41 1 42 1 173 2 174 5 110 3 45 2 111 1 46 1 176 3 113 3 235 1 236 1 115 4 237 4 238 1 55 1 240 3 56 2 120 2 183 1 185 2 122 6 60 2 241 1 242 2 128 2 129 1 132 2 131 3 135 1 251 3 195 1 196 4 67 1 68 2 137 3 197 1 69 2 200 1 201 3 204 4 
95 1 152 4 73 1 23 1 195 1 207 1 36 1 13 1 183 1 156 1 241 1 171 4 
143 1 73 1 2 1 207 1 77 2 209 1 211 2 213 1 151 4 82 1 216 3 152 4 12 1 153 2 13 1 85 1 155 3 17 4 156 1 157 1 95 1 21 1 23 1 22 1 224 1 225 1 98 4 29 1 228 2 31 1 165 1 166 1 33 4 167 2 36 1 104 2 38 1 232 2 105 2 40 1 171 4 39 1 109 2 41 1 42 1 110 3 111 1 176 3 237 4 238 1 55 1 181 2 182 1 183 1 122 4 241 1 127 1 130 2 133 1 135 2 251 4 191 2 195 1 196 8 67 1 197 1 69 2 200 1 204 2 
141 2 143 1 144 2 73 1 2 1 207 1 211 4 5 2 150 2 7 2 215 2 8 1 82 1 216 2 217 2 152 4 12 1 153 2 13 1 85 1 156 1 95 1 21 1 23 1 22 1 160 2 28 4 161 2 225 1 162 2 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 36 1 38 1 232 2 40 1 171 4 39 1 41 1 42 1 173 2 174 4 110 3 45 2 111 1 176 4 113 2 235 1 236 1 115 4 179 1 237 4 238 1 180 2 55 1 240 4 56 2 120 2 183 1 185 2 122 6 60 2 241 1 242 2 246 2 128 2 131 2 132 2 135 1 251 3 192 2 195 1 67 1 196 4 68 2 137 2 197 1 69 2 200 1 201 2 204 4 
141 2 143 1 144 2 73 1 2 1 207 1 211 4 5 2 150 2 7 2 215 2 8 1 82 1 216 2 217 2 152 4 12 1 153 2 13 1 85 1 156 1 95 1 21 1 23 1 22 1 160 2 28 4 224 1 161 2 225 1 162 2 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 36 1 38 1 232 2 40 1 171 4 39 1 41 1 42 1 173 2 174 4 110 3 45 2 111 1 176 3 113 2 235 1 236 1 115 4 179 1 237 4 238 1 180 2 55 1 240 4 56 2 120 2 183 1 185 2 122 6 60 2 241 1 242 2 246 2 128 2 131 2 132 2 135 1 251 3 192 2 195 1 67 1 196 4 68 2 137 2 197 1 198 1 69 2 200 1 201 2 204 4 
141 2 143 1 205 1 73 1 145 2 2 1 207 1 208 1 211 4 5 3 215 2 216 2 82 1 217 2 152 4 12 1 153 2 13 1 85 1 87 1 156 1 18 1 95 1 21 1 23 1 22 1 28 5 160 3 161 3 225 1 162 3 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 230 1 36 1 38 1 232 2 171 4 40 1 39 1 41 1 42 1 173 2 174 5 110 3 45 2 111 1 46 1 176 3 113 3 235 1 115 4 237 4 238 1 55 1 240 3 56 2 120 2 183 1 185 2 122 6 60 2 241 1 242 2 128 2 132 2 131 3 135 1 251 3 195 1 196 4 67 1 68 2 137 3 197 1 69 2 200 1 201 3 204 4 
88 1 
141 2 143 1 2 1 145 2 5 3 8 1 152 4 153 2 12 1 13 1 156 1 18 1 21 1 22 1 23 1 26 1 160 3 28 5 161 3 162 3 30 2 31 1 166 1 165 1 167 2 33 3 36 1 38 1 40 1 171 4 39 1 41 1 42 1 173 2 174 5 45 2 46 1 176 3 55 1 183 1 56 2 60 2 185 2 195 1 67 1 196 4 68 2 197 1 69 2 201 3 200 1 204 4 73 1 205 1 207 1 208 1 211 4 215 2 82 1 216 3 217 2 85 1 87 1 93 1 95 1 224 1 225 1 99 2 228 2 102 2 232 2 110 4 111 1 235 1 113 3 236 1 115 4 237 4 238 1 240 3 120 2 122 6 241 1 242 2 128 2 129 1 131 3 132 2 135 2 251 3 137 3 
141 2 143 1 144 2 5 2 150 2 8 1 7 2 152 4 153 2 12 1 13 1 16 1 156 1 158 1 21 1 159 2 22 1 23 1 27 1 28 4 160 2 161 2 162 2 30 2 31 1 166 1 165 1 167 2 33 3 35 1 36 1 38 1 37 2 39 1 171 4 40 1 41 1 173 2 174 4 45 2 47 1 176 3 179 1 180 2 55 1 183 1 56 2 60 2 185 2 61 2 65 1 192 2 195 1 196 4 67 1 68 2 198 1 69 2 201 2 200 1 204 4 207 1 211 4 215 2 216 2 82 1 217 2 219 1 83 1 84 2 85 1 95 1 94 2 96 1 224 1 225 1 99 2 100 1 228 2 102 2 232 2 110 3 111 1 235 1 113 2 236 1 115 4 237 4 238 1 116 1 240 4 120 2 122 6 241 1 242 2 246 2 128 2 132 2 131 2 135 1 251 3 253 1 138 1 137 2 
152 1 195 1 36 1 156 1 171 1 
141 2 143 1 205 1 73 1 145 2 2 1 207 1 208 1 211 4 5 3 8 1 215 2 216 2 82 1 217 2 152 4 12 1 153 2 85 1 87 1 156 1 18 1 95 1 21 1 23 1 22 1 28 5 160 3 161 3 225 1 162 3 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 36 1 38 1 232 2 171 4 40 1 39 1 41 1 42 1 173 2 174 5 110 3 45 2 111 1 46 1 176 3 113 3 235 1 236 1 115 4 237 4 238 1 55 1 240 3 56 2 120 2 183 1 185 2 122 6 60 2 241 1 242 2 128 2 129 1 132 2 131 3 135 1 251 3 195 1 196 4 67 1 68 2 137 3 197 1 69 2 200 1 201 3 204 4 
141 2 143 1 205 1 73 1 145 2 2 1 207 1 208 1 211 4 5 3 8 1 215 2 216 2 82 1 217 2 152 4 12 1 153 2 85 1 87 1 156 1 18 1 95 1 21 1 23 1 22 1 28 5 160 3 161 3 225 1 162 3 99 2 30 2 228 2 31 1 102 2 165 1 166 1 33 3 167 2 36 1 38 1 232 2 171 4 40 1 39 1 41 1 42 1 173 2 174 5 110 3 45 2 111 1 46 1 176 3 113 3 235 1 236 1 115 4 237 4 238 1 55 1 240 3 56 2 120 2 119 1 183 1 185 2 122 6 60 2 241 1 242 2 128 2 129 1 132 2 131 3 135 1 251 3 196 4 67 1 68 2 137 3 197 1 69 2 200 1 201 3 204 4 
141 2 143 1 144 2 2 1 145 2 5 3 150 2 8 1 7 2 152 4 153 5 12 1 13 1 15 1 156 1 18 1 21 1 23 1 22 1 24 1 160 3 28 5 161 3 162 3 30 2 31 1 166 1 165 1 167 2 33 3 36 1 38 1 40 4 171 4 39 1 41 4 42 4 173 2 174 5 45 5 46 1 176 9 179 1 180 2 55 1 183 1 56 2 60 2 185 2 192 2 195 1 67 1 196 6 68 5 197 4 69 2 201 3 200 1 204 6 205 1 74 1 73 1 207 1 208 1 211 6 215 5 82 1 216 2 217 2 85 1 87 1 91 1 95 1 225 1 99 2 228 2 102 2 232 2 110 6 111 1 235 4 113 3 236 1 115 4 237 4 238 1 240 5 121 1 120 2 122 6 241 1 242 2 246 2 128 2 131 3 132 2 135 1 251 3 137 3 
196 1 247 1 81 1 
234 1 51 1 31 1 167 1 196 1 122 1 203 1 
234 1 75 1 51 1 31 1 251 1 167 1 136 1 196 1 122 1 59 1 203 1 106 1 
163 1 31 1 251 1 167 1 196 1 122 1 
196 1 178 1 
196 1 178 1 
1 1 196 1 
190 1 196 1 
196 1 178 1 
190 1 196 1 
190 1 196 1 
98 1 142 1 196 1 184 1 
196 1 17 1 114 1 
41 1 42 1 126 1 43 1 110 1 4 1 176 2 50 1 178 1 153 1 32 1 237 2 196 2 181 1 118 2 197 1 40 1 
255 1 
41 1 42 1 126 1 43 1 32 1 153 1 110 1 181 1 254 1 197 1 176 2 50 1 40 1 
41 1 110 1 45 2 176 3 235 1 215 2 65 1 66 1 153 1 68 2 138 2 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 229 2 68 1 138 1 137 1 201 1 40 1 
41 1 110 1 45 1 176 2 235 1 215 1 65 1 66 1 153 1 68 1 138 1 40 1 233 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 229 2 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 26 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 110 1 45 2 176 3 235 1 215 2 65 1 66 1 153 1 68 2 138 2 40 1 
141 2 143 1 211 4 5 2 150 2 215 1 216 1 217 2 219 1 83 1 153 1 84 2 16 1 93 1 94 2 158 1 159 2 96 1 27 1 28 4 160 2 161 2 162 2 99 2 30 2 100 1 228 2 31 1 102 2 165 1 167 2 33 3 35 1 37 2 38 1 232 2 40 1 41 1 173 2 174 4 110 2 45 1 111 1 47 1 176 3 113 2 235 1 115 4 237 4 116 1 55 1 240 2 56 2 120 2 185 2 60 2 122 6 61 2 242 2 128 2 132 2 131 2 65 1 135 1 251 3 253 1 196 4 68 1 138 1 137 2 69 2 200 1 201 2 204 4 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 1 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
144 1 1 1 5 1 7 1 215 1 217 1 153 1 28 2 160 1 161 1 162 1 99 1 30 1 102 1 40 1 41 1 174 2 110 1 45 1 176 2 235 1 113 1 178 1 115 3 237 3 180 1 240 2 120 1 56 1 185 1 242 1 246 1 128 1 132 1 131 1 65 1 66 1 192 1 68 1 137 1 138 1 201 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 229 2 66 1 68 1 138 1 137 1 201 1 40 1 
141 1 211 2 5 1 150 1 215 1 216 1 217 1 83 1 153 1 84 1 94 1 159 1 28 2 160 1 161 1 162 1 99 1 30 1 228 1 102 1 165 1 167 1 33 3 37 1 38 1 232 1 40 1 41 1 173 1 174 2 110 1 45 1 111 1 176 3 113 1 235 1 115 2 237 2 240 1 120 1 56 1 185 1 60 1 122 3 61 1 242 1 128 1 132 1 131 1 65 1 135 1 253 1 196 2 68 1 138 1 137 1 69 1 201 1 204 2 
41 1 110 1 45 1 176 2 235 1 215 1 65 1 66 1 153 1 68 1 138 1 37 1 40 1 
141 1 144 1 73 1 2 1 211 2 5 1 150 1 7 1 216 1 217 1 84 1 94 1 159 1 28 2 160 1 161 1 162 1 99 1 30 1 228 1 102 1 165 1 33 3 167 1 37 1 38 1 232 1 173 1 174 2 111 1 176 1 113 1 115 2 237 2 180 1 240 2 120 1 56 1 122 3 60 1 185 1 61 1 242 1 246 1 128 1 132 1 131 1 135 1 192 1 253 1 196 2 137 1 69 1 201 1 204 2 
141 1 211 2 5 1 150 1 215 1 216 1 217 1 83 1 153 1 84 1 94 1 159 1 26 1 28 2 160 1 161 1 162 1 99 1 30 1 228 1 102 1 165 1 167 1 33 3 37 1 38 1 232 1 40 1 41 1 173 1 174 2 110 1 45 1 111 1 176 3 113 1 235 1 115 2 237 2 240 1 56 1 120 1 185 1 60 1 122 3 61 1 242 1 128 1 132 1 131 1 65 1 135 1 253 1 196 2 68 1 138 1 137 1 69 1 201 1 204 2 
141 1 73 1 2 1 211 2 5 1 150 1 215 1 216 1 217 1 153 1 84 1 94 1 159 1 26 1 28 2 160 1 161 1 162 1 99 1 30 1 228 1 102 1 165 1 167 1 33 3 37 1 38 1 232 1 40 1 41 1 42 1 173 1 174 2 110 1 45 1 111 1 176 3 113 1 235 1 115 2 237 2 240 1 56 1 120 1 185 1 60 1 122 3 61 1 242 1 128 1 132 1 131 1 135 1 253 1 196 2 68 1 137 1 197 1 69 1 201 1 204 2 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 215 1 7 1 115 2 217 1 153 1 237 2 180 1 240 2 56 1 120 1 185 1 242 1 246 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 137 1 138 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 1 56 1 120 1 185 1 242 1 246 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 2 217 1 153 1 237 2 180 1 240 1 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
108 1 196 1 211 1 204 1 150 1 
108 1 196 1 60 1 211 1 204 1 
9 1 196 1 14 1 211 1 204 1 150 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
141 1 143 1 144 1 75 4 211 2 5 1 150 1 215 1 7 1 217 1 153 1 160 1 28 2 161 1 162 1 99 1 30 1 228 1 31 1 102 1 166 1 167 1 232 1 40 1 106 3 234 1 41 1 173 1 174 2 110 2 45 1 176 2 113 1 235 1 115 2 51 1 237 2 180 1 55 1 240 2 56 1 120 1 185 1 60 1 122 3 59 3 242 1 246 1 128 1 132 1 131 1 65 1 192 1 66 1 252 1 251 3 136 3 196 2 68 1 137 1 138 1 69 1 201 1 200 1 203 1 204 2 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 128 1 26 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 1 56 1 120 1 185 1 242 1 246 1 128 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 229 2 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 229 2 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 180 1 240 2 56 1 120 1 185 1 242 1 246 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 192 1 66 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
215 1 41 1 65 1 153 1 110 1 45 1 68 1 138 1 176 2 40 1 235 1 
70 1 141 1 143 1 206 1 75 3 146 1 78 1 81 3 5 1 215 2 218 1 217 1 153 2 93 1 160 1 28 2 161 1 162 1 99 1 30 1 31 1 102 1 166 1 167 1 232 1 40 1 106 2 234 1 41 1 173 1 174 2 110 4 45 2 176 3 113 1 235 1 115 2 51 1 237 2 55 1 240 1 56 1 120 1 185 1 122 2 59 2 242 1 124 1 246 1 131 1 132 1 65 1 66 1 252 2 251 2 136 2 196 3 68 2 138 2 137 1 69 1 200 1 201 1 203 1 
41 1 144 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 115 3 217 1 153 1 237 3 240 2 56 1 120 1 185 1 242 1 128 1 160 1 28 2 132 1 131 1 161 1 162 1 99 1 30 1 65 1 102 1 68 1 138 1 137 1 201 1 40 1 
41 1 174 2 110 1 45 1 176 2 113 1 235 1 5 1 178 1 215 1 7 1 115 3 217 1 153 1 237 3 240 1 56 1 120 1 185 1 242 1 246 1 160 1 28 2 131 1 132 1 161 1 162 1 99 1 30 1 65 1 102 1 66 1 68 1 138 1 137 1 201 1 40 1 
234 1 41 1 141 1 143 1 173 1 110 2 75 3 175 1 81 3 176 2 216 1 153 1 181 1 55 1 57 1 59 2 122 2 92 1 125 1 248 1 64 1 226 1 65 1 101 1 31 1 251 2 166 1 252 1 194 1 136 2 167 1 196 4 138 1 103 1 169 1 69 1 200 1 232 1 40 1 203 1 106 2 
234 1 41 1 141 1 143 1 173 1 3 1 110 1 75 3 175 1 81 3 176 2 49 1 10 1 153 1 116 1 84 1 181 1 55 1 57 1 59 2 122 2 123 1 61 1 94 1 125 1 159 1 248 1 250 1 65 1 101 1 31 1 251 2 252 1 136 2 167 1 196 4 138 1 103 1 170 1 69 1 232 1 203 1 40 1 106 2 
41 1 174 4 110 1 45 1 46 2 176 2 113 3 235 1 5 3 215 1 115 2 217 1 11 1 153 1 237 2 240 3 56 1 120 1 87 1 185 1 18 1 242 1 128 1 26 1 160 3 28 4 132 1 131 3 161 3 162 3 99 1 30 1 65 1 102 1 68 1 137 3 138 1 201 3 40 1 
41 1 174 1 110 1 45 1 46 1 28 1 160 1 176 2 131 1 235 1 113 1 161 1 162 1 5 1 215 1 65 1 153 1 68 1 138 1 240 1 137 1 87 1 18 1 201 1 40 1 
41 1 174 3 110 1 45 1 46 3 176 2 113 3 235 1 5 3 215 1 153 1 240 3 87 1 18 1 160 3 28 3 131 3 134 1 161 3 162 3 65 1 68 1 137 3 138 1 201 3 40 1 
41 1 174 1 110 1 45 1 46 1 176 2 113 1 235 1 5 1 215 1 153 1 240 1 87 1 18 1 244 1 160 1 28 1 131 1 161 1 162 1 65 1 68 1 137 1 138 1 201 1 40 1 
41 1 244 1 110 1 45 1 46 1 176 2 235 1 215 1 65 1 153 1 68 1 138 1 18 1 40 1 
108 1 41 1 145 1 174 1 110 1 45 1 46 1 112 1 176 2 211 1 113 1 235 1 5 1 178 1 215 1 153 1 240 1 87 1 18 1 160 1 28 1 131 1 161 1 162 1 65 1 196 1 68 1 137 1 138 1 201 1 40 1 204 1 
186 1 48 1 176 1 243 1 
20 1 186 1 176 1 
79 1 58 2 176 1 177 1 
154 1 79 1 176 1 177 1 212 1 
186 1 89 1 
252 1 251 1 136 1 75 1 59 1 106 1 
94 1 31 1 159 1 167 1 116 1 84 1 210 1 
143 1 31 1 167 1 55 1 
51 1 252 1 251 1 136 1 75 1 59 1 106 1 
115 1 237 1 174 1 196 1 185 1 178 1 
174 1 131 1 
115 1 237 1 196 1 178 1 
115 1 11 1 237 1 174 2 239 1 185 1 131 1 
174 1 131 1 
197 1 
42 1 
197 1 
138 1 
138 1 
65 1 
41 1 244 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 176 2 153 1 181 1 197 1 86 1 40 1 
107 1 41 2 42 2 72 2 44 2 110 2 221 2 188 2 80 2 176 4 153 2 181 2 86 2 197 2 90 1 40 2 
41 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 176 2 97 1 178 1 52 2 153 1 237 2 196 1 181 1 197 1 86 1 17 1 40 1 
193 1 
41 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 176 2 153 1 181 1 197 1 86 1 90 1 40 1 
41 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 176 2 97 1 178 1 52 1 153 1 237 1 196 3 181 1 197 1 86 1 17 2 40 1 
107 1 41 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 176 2 153 1 181 1 86 1 197 1 40 1 
107 1 41 2 42 2 72 2 44 2 110 2 221 2 188 2 80 2 149 1 176 4 153 2 181 2 254 1 86 2 197 2 40 2 
41 1 42 1 72 1 44 1 110 1 221 1 188 1 80 1 149 1 176 2 153 1 181 1 254 1 86 1 197 1 40 1 
196 2 81 2 62 1 178 1 
1 1 196 1 222 1 81 1 178 1 
41 1 141 1 42 1 72 1 173 1 44 1 2 1 110 2 111 1 80 1 81 1 176 3 216 1 52 1 153 1 237 1 84 1 181 1 86 1 122 2 90 1 61 1 62 1 93 1 94 1 159 1 222 1 221 1 188 1 25 1 97 1 135 1 165 1 193 1 253 1 33 2 167 1 196 1 197 1 69 1 38 1 232 1 40 1 
41 1 44 1 254 1 149 1 40 1 
141 1 72 1 143 1 75 4 80 1 81 1 153 1 86 1 17 1 93 1 221 1 222 1 97 1 98 1 31 1 166 1 167 1 232 1 40 1 106 3 234 1 41 1 42 1 173 1 44 1 110 3 176 2 51 1 52 1 237 1 181 1 55 1 122 2 59 3 62 1 188 1 252 1 251 3 193 1 136 3 196 2 197 1 69 1 200 1 203 1 
41 1 109 1 42 1 110 1 176 2 211 1 151 1 153 1 237 1 181 1 182 1 155 2 17 1 127 1 130 1 133 1 29 1 196 2 197 1 104 1 40 1 204 1 
191 1 178 1 
105 1 178 1 
109 1 151 1 11 1 237 1 155 1 130 1 
41 1 142 1 42 1 127 1 110 1 77 1 176 2 133 1 178 1 29 1 151 2 153 1 237 2 196 2 181 1 182 1 197 1 155 1 17 1 40 1 
41 1 109 1 42 1 110 1 176 2 211 1 114 1 151 1 153 1 11 1 237 1 181 1 182 1 155 2 17 1 127 1 223 1 130 1 133 1 29 1 196 2 197 1 104 1 40 1 204 1 
104 1 
109 1 41 1 42 1 2 1 110 2 77 1 111 1 148 1 176 3 211 1 151 2 216 1 153 1 237 2 84 1 181 1 182 1 155 2 122 2 17 2 61 1 93 1 94 1 159 1 127 1 130 1 133 1 98 2 29 1 228 1 135 1 165 1 191 1 253 1 33 4 167 1 196 3 104 1 197 1 69 1 38 1 232 1 105 1 40 1 204 1 
29 1 127 1 254 1 182 1 155 1 133 1 
109 1 41 1 234 1 42 1 143 1 110 3 75 5 77 1 176 2 211 1 151 2 51 1 153 1 237 2 181 1 55 1 182 1 59 4 122 2 155 2 17 2 93 1 127 1 130 1 133 1 98 2 29 1 228 1 31 1 251 4 252 1 166 1 191 1 136 4 167 1 196 3 104 1 197 1 69 1 200 1 232 1 105 1 40 1 203 1 204 1 106 4 
29 1 127 1 254 1 182 1 155 1 133 1 
41 1 42 1 142 1 110 1 77 1 148 1 176 2 178 1 151 2 153 1 237 2 181 1 182 1 155 1 17 1 245 1 29 1 196 2 197 1 168 1 40 1 
41 1 234 1 42 1 143 1 110 3 75 3 77 1 176 2 151 1 51 1 153 1 237 1 181 1 55 1 182 1 59 2 122 1 155 1 17 1 93 1 127 1 133 1 98 1 29 1 31 1 251 2 252 1 166 1 191 1 136 2 167 1 196 1 104 1 197 1 69 1 200 1 232 1 105 1 40 1 203 1 106 2 

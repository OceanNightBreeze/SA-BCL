#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 251 179 199 197 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V ERROR java.lang.NullPointerException 168 176 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V ERROR java.lang.NullPointerException 168 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V | STATEMENT | 3220 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:outbit(ILnet.sourceforge.barbecue.output.Output;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module; | RETURN | 5223 | return null
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 6328 | 2 -> -1
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:encode([IILnet.sourceforge.barbecue.output.Output;)V | OPERATOR | 8885 | + -> *
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
193 1 174 1 260 1 1 1 252 1 
231 1 65 2 191 1 
193 1 174 1 260 1 1 1 252 1 189 1 
126 1 118 1 56 1 40 1 
156 1 233 1 208 1 134 1 13 1 135 1 118 1 18 2 56 1 40 1 173 2 155 2 
78 1 1 2 252 1 4 1 176 1 208 1 150 1 178 1 66 1 163 1 13 1 135 1 118 1 18 3 56 1 120 1 76 1 246 2 173 1 155 1 
78 1 1 2 252 1 4 1 176 1 208 1 150 1 178 1 66 1 163 1 13 1 135 1 118 1 18 3 56 1 120 1 246 2 173 1 155 1 
1 1 252 1 145 1 176 1 128 1 101 1 208 1 13 1 135 1 118 1 18 2 56 1 246 1 40 1 76 1 173 1 155 1 
1 1 252 1 176 1 128 1 101 1 208 1 209 1 13 1 135 1 118 1 18 2 56 1 246 1 40 1 76 1 173 1 155 1 
1 1 252 1 176 1 128 1 101 1 236 1 208 1 257 1 13 1 135 1 118 1 18 2 119 1 56 1 246 1 40 1 173 1 155 1 
1 1 252 1 176 1 128 1 101 1 236 1 208 1 257 1 13 1 135 1 118 1 18 2 119 1 56 1 246 1 76 1 40 1 173 1 155 1 
13 1 135 1 118 1 18 3 208 2 56 1 122 1 40 1 173 2 155 1 
43 1 97 1 237 2 208 2 135 1 118 1 18 3 56 1 40 1 155 1 
135 1 118 1 97 1 53 1 18 2 237 1 208 1 56 1 40 1 155 2 
135 1 118 1 97 1 18 2 237 1 57 1 208 1 56 1 40 1 155 1 
135 1 118 1 97 1 18 2 237 1 208 1 56 1 40 1 12 1 155 1 
1 1 97 1 4 4 237 1 239 1 208 1 107 1 109 1 178 1 135 1 118 1 136 1 214 1 18 3 56 1 246 1 40 1 155 1 
97 1 237 1 205 1 208 1 135 1 118 1 18 2 56 1 40 1 77 1 155 1 
78 1 1 1 97 1 4 1 237 1 208 1 150 1 178 1 66 1 135 1 118 1 214 1 18 3 56 1 120 1 246 1 40 1 155 1 
1 1 97 1 4 2 237 1 208 1 178 1 135 1 118 1 214 1 18 3 56 1 58 1 246 1 40 1 219 1 155 1 
135 2 118 1 97 1 18 2 237 1 208 3 56 1 122 1 40 1 155 2 
1 1 97 1 4 1 237 2 208 2 178 1 135 2 118 1 214 1 18 4 56 1 171 1 58 1 246 1 40 1 155 1 
27 1 62 1 203 3 
203 1 
139 2 202 4 1 2 146 2 4 3 80 2 81 1 8 1 84 4 82 4 9 1 208 2 211 4 15 1 214 1 18 3 152 4 24 1 219 2 155 3 222 1 157 1 97 1 159 2 98 4 100 1 103 2 108 4 165 1 111 1 168 2 39 1 41 8 42 1 175 1 43 1 176 1 234 1 237 1 177 2 178 1 179 1 116 2 181 4 117 1 244 2 51 1 52 1 245 1 57 2 56 1 58 1 122 1 249 1 250 1 251 1 252 1 127 1 190 1 130 2 192 3 133 1 68 1 260 2 194 1 196 4 198 1 199 1 200 1 
139 4 0 2 141 2 1 2 143 2 2 2 146 4 4 2 7 2 8 1 149 1 9 1 15 1 18 4 152 4 20 2 24 1 23 2 155 3 26 2 158 2 31 2 32 2 33 2 34 1 164 2 165 1 167 2 168 2 172 2 41 14 42 1 43 1 176 1 46 3 178 1 179 1 48 2 47 2 49 1 50 4 180 2 181 4 182 1 51 1 52 1 54 1 55 2 56 1 57 2 58 1 59 4 188 1 190 1 194 1 196 4 195 1 198 1 200 1 199 1 204 4 81 1 82 6 84 3 208 2 85 2 88 1 213 4 214 1 92 2 218 2 96 2 219 1 222 1 97 1 223 2 100 1 102 2 104 2 105 2 108 3 111 1 237 1 243 2 117 1 245 1 122 1 251 1 127 1 252 1 258 2 260 2 264 2 265 2 
139 4 0 2 141 2 144 1 143 2 1 2 2 2 204 4 4 2 146 4 7 2 81 1 8 1 84 3 82 6 9 1 85 2 208 2 88 1 213 4 15 1 214 1 18 3 20 2 152 4 92 2 23 2 24 1 96 2 218 2 219 1 26 2 155 3 222 1 158 2 223 2 97 1 100 1 31 2 102 2 105 2 104 2 32 2 108 3 33 2 164 2 165 1 111 1 167 2 168 2 172 2 41 4 42 1 43 1 176 1 237 1 178 1 47 2 179 1 180 2 50 4 243 2 181 4 117 1 51 1 182 1 52 1 245 1 55 2 56 1 57 2 58 1 122 1 59 4 251 1 252 1 127 1 188 1 190 1 258 2 68 1 260 2 194 1 195 1 196 4 264 2 265 2 198 1 199 1 200 1 
139 4 0 3 141 3 143 2 1 2 2 2 204 5 146 4 4 2 7 2 81 1 8 1 84 3 82 6 9 1 208 2 210 1 88 1 213 4 214 1 15 1 18 3 152 4 91 2 20 3 92 2 24 1 23 3 25 1 218 2 219 1 26 3 155 3 222 1 223 2 97 1 100 1 31 2 105 2 104 2 32 2 108 3 33 2 164 3 165 1 111 1 168 2 172 2 41 4 42 1 43 1 176 1 237 1 238 1 178 1 47 2 179 1 243 2 180 3 50 3 181 4 117 1 51 1 52 1 245 1 55 3 57 2 56 1 58 1 122 1 59 5 251 1 252 1 127 1 190 1 260 2 194 1 71 1 72 1 196 4 264 2 265 2 198 1 266 1 199 1 200 1 
139 4 0 3 141 3 143 2 1 2 2 2 204 5 146 4 4 2 7 2 81 1 8 1 84 3 82 6 9 1 208 4 210 1 88 1 213 4 214 1 15 1 18 4 152 4 91 2 20 3 92 3 24 1 23 3 218 2 219 1 26 3 155 5 222 1 156 1 223 3 97 1 100 1 31 2 105 2 104 2 32 2 108 3 33 2 164 3 165 1 111 1 168 2 172 2 171 1 41 4 42 1 43 1 176 1 237 2 178 1 47 2 179 1 243 2 50 3 180 3 181 4 117 1 51 1 52 1 245 1 55 3 57 2 56 1 58 1 122 1 59 5 251 1 252 1 127 1 188 1 190 1 68 1 260 2 194 1 71 1 195 1 196 4 264 2 75 1 265 3 198 1 266 1 199 1 200 1 
139 4 0 3 141 3 143 2 1 2 2 2 204 5 146 4 4 2 7 2 81 1 8 1 84 3 82 6 9 1 208 2 210 1 88 1 213 4 214 1 15 1 18 3 152 4 91 2 20 3 92 2 24 1 23 3 218 2 219 1 26 3 155 3 222 1 223 2 97 1 100 1 31 2 105 2 104 2 32 2 108 3 33 2 164 3 165 1 111 1 168 2 172 2 41 4 42 1 43 1 176 1 237 1 178 1 47 2 179 1 243 2 50 3 180 3 181 4 117 1 51 1 52 1 245 1 55 3 57 2 56 1 58 1 122 1 59 5 251 1 252 1 127 1 188 1 190 1 68 1 260 2 194 1 71 1 195 1 196 4 264 2 75 1 265 2 198 1 266 1 199 1 200 1 
181 4 251 1 165 1 117 1 43 1 52 1 196 4 8 1 24 1 198 1 199 1 179 1 
125 1 
139 4 0 3 141 3 1 2 143 2 2 2 4 3 146 4 7 2 8 1 9 1 15 1 18 3 20 3 152 4 23 3 24 1 25 1 155 4 26 3 156 1 31 2 32 2 33 2 164 3 165 1 168 2 172 2 41 4 42 1 43 1 176 1 178 1 179 1 47 2 180 3 50 3 181 4 51 1 52 1 55 3 56 1 57 2 58 1 59 5 188 1 190 1 68 1 194 1 71 1 196 4 195 1 75 1 198 1 200 1 199 1 204 5 81 1 82 6 84 3 208 2 210 1 88 1 213 4 214 1 91 2 92 2 218 2 219 2 222 1 97 1 223 2 99 1 100 1 104 2 105 2 108 3 111 1 237 1 238 1 243 2 117 1 245 1 122 1 251 1 127 1 252 1 260 2 264 2 265 2 266 1 
181 1 117 1 196 1 199 1 179 1 
139 4 0 3 141 3 143 2 1 2 2 2 204 5 146 4 4 2 7 2 81 1 8 1 84 3 82 6 9 1 208 2 210 1 88 1 213 4 214 1 15 1 18 3 152 4 91 2 20 3 92 2 24 1 23 3 25 1 218 2 219 1 26 3 155 3 222 1 223 2 97 1 100 1 31 2 105 2 104 2 32 2 108 3 33 2 164 3 165 1 111 1 168 2 172 2 41 4 42 1 43 1 176 1 237 1 238 1 178 1 47 2 179 1 243 2 180 3 50 3 181 4 117 1 51 1 245 1 55 3 57 2 56 1 58 1 122 1 59 5 251 1 252 1 127 1 188 1 190 1 260 2 194 1 71 1 195 1 196 4 264 2 75 1 265 2 198 1 266 1 199 1 200 1 
139 4 0 3 141 3 143 2 1 2 2 2 204 5 146 4 4 2 7 2 81 1 8 1 84 3 82 6 9 1 208 2 210 1 88 1 213 4 214 1 15 1 18 3 152 4 91 2 20 3 92 2 24 1 23 3 25 1 218 2 219 1 26 3 155 3 222 1 223 2 97 1 100 1 31 2 105 2 104 2 32 2 108 3 33 2 164 3 165 1 111 1 168 2 172 2 41 4 42 1 43 1 176 1 237 1 238 1 178 1 47 2 179 1 243 2 180 3 50 3 181 4 117 1 51 1 245 1 55 3 57 2 56 1 58 1 122 1 59 5 251 1 252 1 127 1 188 1 190 1 260 2 194 1 69 1 71 1 195 1 196 4 264 2 75 1 265 2 198 1 266 1 200 1 
139 6 0 7 141 7 143 2 1 3 2 2 3 1 4 2 146 6 7 2 8 1 9 1 11 1 15 1 18 20 152 4 20 7 153 1 23 7 24 1 25 1 155 11 26 7 158 2 29 1 31 2 32 2 33 2 35 1 164 7 165 1 167 2 168 2 172 2 41 7 42 1 43 1 176 1 178 1 47 2 179 1 180 7 50 9 181 4 51 1 182 1 52 1 55 7 56 10 57 2 58 1 59 9 60 1 188 1 64 1 190 10 67 1 194 1 71 5 196 4 195 1 197 1 198 1 199 1 200 1 204 9 81 1 206 1 82 6 84 3 85 2 208 11 210 5 88 9 212 1 213 4 216 1 215 1 214 1 91 2 92 10 93 1 96 2 218 2 219 1 222 1 97 9 223 10 99 1 100 1 102 2 105 2 104 2 226 1 228 1 108 4 111 1 235 1 237 10 238 1 243 2 117 1 245 1 122 1 124 1 251 1 252 2 127 1 254 1 258 2 260 2 262 1 264 2 265 10 266 5 
139 4 0 2 141 2 144 1 1 2 143 2 142 1 2 2 146 4 4 2 7 2 8 1 9 1 13 1 15 1 18 3 152 4 20 2 24 1 23 2 155 3 26 2 158 2 160 1 31 2 32 2 33 2 163 1 164 2 165 1 38 2 167 2 168 2 172 2 173 1 41 4 42 1 176 1 45 1 178 1 179 1 47 2 50 4 180 2 181 4 51 1 182 1 52 1 55 2 57 2 56 1 58 1 59 4 188 1 190 1 68 1 194 1 196 4 195 1 198 1 200 1 199 1 204 4 79 2 81 1 82 6 84 3 208 2 85 2 207 1 88 1 213 4 90 1 92 2 218 2 96 2 95 2 219 1 222 1 223 2 100 1 224 1 102 2 225 2 104 2 105 2 227 1 108 3 111 1 112 1 115 1 243 2 117 1 245 1 122 1 251 1 127 1 252 1 132 2 258 2 260 2 138 1 264 2 265 2 
49 1 70 1 41 1 
14 1 41 1 
201 1 186 1 1 1 252 1 19 1 128 1 101 1 82 1 86 1 108 1 257 1 41 1 
186 1 1 1 252 1 128 1 101 1 82 1 41 1 
14 1 41 1 
1 1 252 1 82 1 108 1 255 1 41 1 
241 1 41 1 
187 1 41 1 
14 1 41 1 
187 1 41 1 
187 1 41 1 
230 1 202 1 41 1 248 1 
169 1 41 1 211 1 
6 2 147 1 83 1 190 1 208 1 177 1 13 1 14 1 18 2 152 2 184 1 56 1 121 1 220 1 173 1 41 2 155 1 
217 1 
13 1 126 1 18 2 184 1 83 1 177 1 208 1 56 1 190 1 121 1 173 1 220 1 155 1 
140 1 223 2 190 1 208 1 88 1 13 1 18 3 92 2 56 1 265 2 173 2 155 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 50 1 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 5 2 7 1 208 1 47 1 88 1 50 1 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
140 1 223 1 190 1 208 1 114 1 88 1 13 1 18 2 92 1 56 1 265 1 173 1 155 1 
0 1 141 1 143 1 2 1 204 2 5 2 7 1 208 1 47 1 88 1 50 1 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 99 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
140 1 0 1 201 2 141 1 143 1 1 1 2 1 204 2 148 1 7 1 82 2 208 2 9 1 86 2 209 1 88 1 13 1 213 2 18 3 19 2 152 2 20 1 92 2 23 1 218 1 155 4 26 1 156 1 158 1 223 2 101 1 31 1 104 1 32 1 108 2 33 1 110 1 164 1 168 1 171 1 173 2 41 3 42 1 176 1 236 2 47 1 180 1 49 3 243 1 50 1 51 1 55 1 56 1 57 1 59 2 252 1 128 1 190 1 253 1 257 3 73 1 264 1 265 2 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 223 2 190 1 208 1 88 1 13 1 18 3 92 2 56 1 265 2 173 2 155 1 
139 4 0 2 141 2 142 1 1 2 143 2 2 2 204 4 79 2 146 4 4 1 7 2 82 6 84 3 207 1 9 1 208 1 88 1 13 1 213 4 90 1 18 3 20 2 152 4 92 1 23 2 95 2 218 2 219 1 155 2 26 2 156 1 223 1 224 1 100 1 160 1 31 2 225 2 105 2 32 2 104 2 227 1 108 3 33 2 163 1 164 2 38 2 167 2 112 1 168 2 172 2 173 1 41 4 176 1 45 1 178 1 47 2 115 1 243 2 50 2 180 2 51 1 55 2 56 1 57 2 59 4 252 1 190 1 132 2 194 1 260 2 138 1 264 2 265 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 5 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
88 1 13 1 223 1 18 2 92 1 208 1 56 1 190 1 265 1 173 1 155 1 
139 2 0 1 141 1 142 1 1 1 143 1 204 2 2 1 79 1 146 2 4 1 7 1 82 3 84 3 208 1 88 1 13 1 213 2 18 3 20 1 152 2 92 1 23 1 95 1 218 1 219 1 155 1 26 1 223 1 100 1 31 1 225 1 105 1 32 1 104 1 33 1 163 1 164 1 38 1 167 1 168 1 172 1 173 1 41 2 178 1 47 1 243 1 50 1 180 1 55 1 57 1 56 1 59 2 190 1 132 1 194 1 260 1 264 1 265 1 
140 1 223 1 190 1 208 1 132 1 88 1 13 1 18 2 92 1 56 1 265 1 173 1 155 1 
139 2 0 1 141 1 142 1 1 1 143 1 204 2 2 1 79 1 4 1 146 2 7 1 84 3 82 3 85 1 213 2 214 1 18 1 152 2 20 1 23 1 95 1 218 1 96 1 219 1 26 1 158 1 100 1 31 1 225 1 102 1 105 1 32 1 104 1 33 1 164 1 38 1 167 1 168 1 172 1 41 2 43 1 178 1 47 1 50 2 243 1 180 1 55 1 57 1 59 2 132 1 258 1 260 1 194 1 264 1 
139 2 0 1 141 1 142 1 1 1 143 1 2 1 204 2 79 1 146 2 4 1 7 1 82 3 84 3 208 1 88 1 13 1 213 2 18 3 20 1 152 2 92 1 23 1 95 1 218 1 219 1 155 1 26 1 223 1 99 1 100 1 31 1 225 1 105 1 32 1 104 1 33 1 163 1 164 1 38 1 167 1 168 1 172 1 173 1 41 2 178 1 47 1 243 1 50 1 180 1 55 1 57 1 56 1 59 2 190 1 132 1 194 1 260 1 264 1 265 1 
139 2 0 1 141 1 142 1 1 1 143 1 2 1 204 2 79 1 146 2 4 1 7 1 82 3 84 3 208 1 88 1 213 2 214 1 18 3 20 1 152 2 92 1 23 1 95 1 218 1 219 1 155 1 26 1 223 1 97 1 99 1 100 1 31 1 225 1 105 1 104 1 32 1 33 1 164 1 38 1 167 1 168 1 172 1 41 2 43 1 237 1 178 1 47 1 243 1 50 1 180 1 55 1 56 1 57 1 59 2 190 1 132 1 194 1 260 1 264 1 265 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 50 2 180 1 13 1 213 2 18 2 20 1 55 1 152 2 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 105 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 105 1 190 1 33 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 105 1 190 1 33 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 2 18 2 55 1 152 2 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 104 1 105 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 105 1 190 1 33 1 164 1 264 1 265 1 173 1 
139 1 167 1 146 1 87 1 41 1 
139 1 146 1 172 1 87 1 41 1 
139 1 16 1 167 1 146 1 10 1 41 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
139 2 140 1 0 1 201 3 141 1 1 1 143 1 2 1 204 2 146 2 7 1 82 3 85 1 208 1 9 1 86 3 88 1 13 1 213 2 18 2 19 3 20 1 152 2 92 1 23 1 96 1 218 1 155 2 26 1 158 1 223 1 101 1 31 1 102 1 105 1 104 1 32 1 108 3 33 1 164 1 167 1 168 1 172 1 173 1 41 2 42 1 176 1 236 1 47 1 243 1 50 2 180 1 51 1 55 1 56 1 57 1 59 2 186 1 252 1 128 1 190 1 257 4 258 1 260 1 264 1 265 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 99 1 31 1 105 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 5 2 7 1 208 1 47 1 88 1 180 1 50 1 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 105 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 5 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
140 1 0 1 141 1 143 1 2 1 204 2 7 1 85 1 208 1 47 1 88 1 180 1 50 2 13 1 14 1 213 3 18 2 55 1 152 3 20 1 92 1 23 1 56 1 96 1 218 1 59 2 155 1 26 1 158 1 223 1 31 1 102 1 104 1 190 1 33 1 258 1 164 1 264 1 265 1 173 1 
0 1 141 1 143 1 2 1 204 2 7 1 208 1 47 1 88 1 50 1 180 1 13 1 14 1 213 3 18 2 55 1 20 1 152 3 92 1 23 1 56 1 218 1 59 2 155 1 26 1 223 1 31 1 104 1 190 1 33 1 164 1 264 1 265 1 173 1 
201 1 42 1 1 1 176 1 236 1 82 1 177 1 208 1 9 1 86 1 243 1 49 2 13 1 17 1 19 1 18 2 56 1 57 1 155 2 61 1 252 1 128 1 101 1 129 1 32 1 190 1 108 1 131 1 257 1 137 1 168 1 173 1 41 2 
201 1 1 1 236 1 82 1 177 1 208 1 9 1 86 1 49 2 243 1 13 1 17 1 19 1 18 2 56 1 57 1 155 1 61 1 252 1 128 1 101 1 129 1 32 1 190 1 108 1 131 1 257 1 137 1 168 1 173 1 41 2 
0 3 141 3 143 1 2 1 204 4 7 1 208 1 210 1 47 1 88 1 180 3 50 3 13 1 213 2 18 2 152 2 55 3 20 3 92 1 23 3 56 1 218 1 155 1 59 4 26 3 223 1 99 1 31 1 65 1 105 1 104 1 190 1 33 1 164 3 71 1 264 1 265 1 266 2 173 1 
139 1 0 1 141 1 204 1 146 1 208 1 87 1 210 1 88 1 180 1 50 1 13 1 14 1 18 2 21 1 91 1 55 1 20 1 92 1 23 1 56 1 155 1 59 1 26 1 223 1 190 1 164 1 71 1 265 1 266 1 173 1 41 1 
0 3 141 3 204 3 208 1 210 1 88 1 180 3 50 3 13 1 18 2 55 3 20 3 92 1 23 3 56 1 247 1 155 1 59 3 26 3 223 1 190 1 164 3 71 1 265 1 266 3 173 1 
0 1 141 1 204 1 208 1 210 1 12 1 88 1 180 1 50 1 13 1 18 2 55 1 20 1 92 1 23 1 56 1 155 1 59 1 26 1 223 1 190 1 164 1 71 1 265 1 266 1 173 1 
223 1 190 1 208 1 12 1 88 1 13 1 71 1 18 2 92 1 56 1 265 1 266 1 173 1 155 1 
0 1 141 1 204 1 208 1 210 1 88 1 180 1 50 1 13 1 18 2 55 1 20 1 92 1 23 1 56 1 155 1 59 1 26 1 223 1 190 1 164 1 71 1 265 1 266 1 173 1 
89 1 18 1 232 1 185 1 
134 1 18 1 63 1 170 1 151 1 
89 1 18 1 30 1 
134 1 261 2 18 1 151 1 
89 1 161 1 
201 1 19 1 236 1 86 1 108 1 257 1 
201 1 186 1 236 1 108 1 86 1 257 1 19 1 
1 1 51 1 252 1 9 1 
1 1 38 1 252 1 225 1 74 1 227 1 95 1 
180 1 213 1 204 2 152 1 65 1 154 1 264 1 
180 1 204 1 
14 1 213 1 204 1 152 1 264 1 41 1 
180 1 204 1 
14 1 213 1 152 1 41 1 
97 1 
237 1 
237 1 
173 1 
13 1 
173 1 
190 1 208 1 177 1 240 1 162 1 12 1 36 1 37 1 261 1 18 2 263 1 183 1 56 1 123 1 155 1 
190 2 208 2 177 2 240 2 256 1 162 2 229 1 36 2 37 2 261 2 18 4 263 2 183 2 56 2 123 2 155 2 
190 1 208 1 177 1 240 1 256 1 162 1 36 1 37 1 261 1 18 2 263 1 183 1 56 1 123 1 155 1 
106 2 190 1 208 1 177 1 240 1 162 1 211 1 36 1 37 1 14 1 261 1 18 2 152 2 263 1 22 1 183 1 56 1 41 1 123 1 155 1 
166 1 
49 2 14 1 113 1 41 2 
49 2 14 1 44 1 41 2 
142 1 1 1 113 1 79 1 4 1 44 1 84 2 82 2 177 1 208 1 240 1 178 1 243 1 49 2 18 3 152 1 22 1 183 1 57 1 56 1 95 1 219 1 155 2 123 1 156 1 28 1 100 1 225 1 106 1 32 1 190 1 256 1 162 1 36 1 163 1 37 1 194 1 38 1 166 1 261 1 168 1 263 1 41 2 
259 1 126 1 56 1 190 1 162 1 
201 3 42 1 202 1 1 1 113 1 44 1 176 1 236 1 82 2 9 1 177 1 208 1 86 3 240 1 211 1 243 1 49 2 51 1 19 3 18 2 152 1 22 1 183 1 57 1 56 1 155 3 123 1 186 1 156 1 252 1 128 1 101 1 106 1 32 1 190 1 108 3 162 1 257 4 36 1 37 1 166 1 261 1 168 1 263 1 41 3 
126 1 190 1 208 1 177 1 240 1 162 1 259 1 36 1 37 1 261 1 18 2 263 1 183 1 56 1 123 1 155 1 
106 1 190 1 208 1 177 1 240 1 162 1 211 2 36 1 37 1 14 1 261 1 18 2 152 1 263 1 22 1 183 1 56 1 41 3 123 1 155 1 
190 1 208 1 177 1 240 1 162 1 229 1 36 1 37 1 261 1 18 2 263 1 183 1 56 1 123 1 155 1 
126 1 190 2 208 2 177 2 240 2 162 2 229 1 259 1 36 2 37 2 261 2 18 4 263 2 183 2 56 2 123 2 155 2 
249 1 157 1 98 2 234 1 190 1 208 1 177 1 130 1 211 1 133 1 192 1 14 1 261 1 18 2 152 2 263 1 56 1 248 1 41 2 155 1 
201 2 42 1 202 1 1 1 234 1 176 1 236 1 82 1 177 1 208 1 9 1 86 2 211 1 116 1 244 1 51 1 19 2 18 2 152 1 57 1 56 1 155 3 249 1 186 1 157 1 156 1 252 1 98 1 128 1 101 1 103 1 190 1 130 1 108 2 257 3 192 1 133 1 261 1 168 1 263 1 41 1 
192 1 98 1 159 1 152 1 80 1 65 1 
14 1 103 1 
14 1 244 1 
139 1 249 1 157 1 98 1 146 1 159 1 234 1 80 1 190 1 208 1 177 1 211 1 133 1 192 2 116 1 261 1 18 2 152 1 263 1 56 1 41 2 155 1 
192 1 133 1 249 1 126 1 157 1 234 1 
234 1 177 1 208 1 211 1 242 1 14 1 18 2 152 2 56 1 94 1 155 1 248 1 221 1 157 1 98 2 190 1 130 1 192 1 261 1 263 1 41 2 
139 1 146 1 234 1 80 1 177 1 208 1 211 1 116 1 18 2 152 1 56 1 155 1 249 1 157 1 159 1 98 1 65 1 190 1 192 2 133 1 261 1 169 1 263 1 231 1 41 2 
116 1 
139 1 202 2 142 1 1 1 79 1 146 1 4 1 234 1 80 1 84 4 82 2 177 1 208 1 178 1 211 2 242 1 116 1 244 1 18 3 152 2 56 1 57 1 95 1 219 1 155 2 249 1 156 1 157 1 159 1 98 2 100 1 225 1 103 1 190 1 130 1 192 2 133 1 163 1 260 1 194 1 38 1 261 1 168 1 263 1 41 3 
192 1 133 1 249 1 126 1 157 1 234 1 
139 1 201 4 42 1 202 2 1 1 146 1 234 1 176 1 80 1 236 1 82 2 177 1 208 1 9 1 86 4 211 2 116 1 244 1 51 1 19 4 18 2 152 2 57 1 56 1 155 3 249 1 186 1 157 1 156 1 252 1 159 1 98 2 128 1 101 1 103 1 190 1 130 1 108 4 257 5 192 2 133 1 260 1 261 1 168 1 263 1 41 3 

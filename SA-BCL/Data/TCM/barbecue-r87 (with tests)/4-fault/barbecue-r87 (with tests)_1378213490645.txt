#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4542 | = null
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | CONSTANT | 26263 | 1 -> 0
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
153 1 191 1 190 1 114 1 131 1 228 1 
153 1 191 1 190 1 114 1 228 1 
13 2 34 1 242 1 
153 1 126 1 127 1 28 1 92 1 111 3 32 1 222 1 102 1 205 1 196 1 164 1 148 1 136 1 42 1 150 1 207 1 108 2 214 1 
153 1 126 1 127 1 91 1 28 1 93 1 111 3 222 1 102 1 164 1 148 1 136 1 42 1 150 1 108 1 214 2 
126 1 164 1 136 1 49 1 
126 1 127 1 111 2 222 1 193 1 164 1 136 1 42 1 150 2 198 1 108 1 
217 1 153 2 126 1 127 1 28 1 92 1 111 3 222 1 102 2 223 1 196 1 205 1 148 1 136 1 42 1 150 1 207 1 108 1 228 1 214 1 
153 2 126 1 127 1 28 1 92 1 111 3 222 1 102 2 223 1 196 1 205 1 148 1 136 1 42 1 150 1 207 1 108 1 228 1 214 1 
153 1 126 1 217 1 127 1 111 2 115 1 157 1 4 1 222 1 102 1 223 1 164 1 136 1 42 1 150 1 108 1 228 1 
153 1 126 1 217 1 127 1 111 2 157 1 4 1 222 1 102 1 223 1 164 1 136 1 42 1 150 1 123 1 108 1 228 1 
153 1 126 1 127 1 111 2 50 1 157 1 4 1 222 1 102 1 223 1 164 1 136 1 240 1 138 1 42 1 150 1 108 1 228 1 
153 1 217 1 126 1 127 1 111 2 50 1 157 1 4 1 222 1 102 1 223 1 164 1 136 1 240 1 138 1 42 1 150 1 108 1 228 1 
126 1 127 2 111 3 222 1 164 1 136 1 42 1 150 1 24 1 108 2 
126 1 127 2 111 3 234 1 164 1 136 1 83 1 67 2 42 1 150 1 
126 1 164 1 127 1 128 1 83 1 136 1 42 1 67 1 150 2 111 2 
126 1 127 1 111 2 164 1 136 1 83 1 67 1 42 1 150 1 124 1 
126 1 127 3 111 2 164 1 136 1 83 1 67 1 42 2 150 2 24 1 
153 1 171 1 126 1 127 2 91 1 111 4 102 1 164 1 148 1 136 1 83 1 65 1 67 2 42 2 150 1 214 1 
126 1 164 1 127 1 83 1 136 1 42 1 67 1 150 1 111 2 160 1 
153 1 171 1 126 1 201 1 127 1 111 3 76 1 102 1 134 1 164 1 81 1 148 1 136 1 83 1 67 1 42 1 150 1 214 4 
173 1 126 1 164 1 127 1 83 1 136 1 2 1 42 1 67 1 150 1 111 2 
215 1 96 1 26 3 
26 1 
125 2 127 2 3 3 130 2 132 4 136 1 137 1 140 2 11 2 141 1 142 1 143 1 145 1 146 2 147 2 148 1 150 3 22 1 23 4 24 1 27 4 152 1 153 2 30 1 31 2 37 14 38 1 39 2 167 2 170 2 171 1 45 3 46 2 174 2 176 1 181 1 53 4 184 2 54 1 183 1 55 4 185 1 187 1 188 2 58 1 61 2 194 2 195 2 62 4 66 1 67 1 68 1 199 1 71 4 75 4 204 1 80 2 83 1 84 1 208 2 86 1 214 3 212 2 219 1 216 2 91 1 93 2 95 3 94 2 98 2 99 2 101 2 223 1 107 2 225 6 228 1 111 3 113 2 234 1 114 2 235 1 236 1 116 2 119 1 122 1 124 2 243 1 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 4 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 122 1 55 4 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 71 4 11 2 15 1 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 185 1 122 1 55 4 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 8 1 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 87 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 122 1 55 4 187 1 188 2 243 1 124 2 
9 1 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 198 1 199 1 140 2 8 1 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 4 23 4 22 1 208 2 24 1 87 1 27 4 214 3 212 2 152 1 219 1 153 2 91 1 30 1 93 2 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 185 1 122 1 55 4 187 1 188 2 243 1 124 2 
125 2 127 4 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 65 1 68 1 67 2 198 1 199 1 140 2 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 3 204 1 147 2 80 3 148 1 83 1 84 1 150 5 23 4 22 1 208 2 24 1 27 4 212 2 214 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 3 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 4 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 185 1 122 1 55 4 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 185 1 122 1 55 4 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 71 4 11 2 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 122 1 55 4 187 1 188 2 243 1 124 2 
71 1 219 1 66 1 84 1 55 1 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 8 1 71 4 11 2 141 1 75 4 142 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 87 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 55 4 122 1 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 68 1 67 1 199 1 140 2 8 1 71 4 11 2 141 1 75 4 142 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 87 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 55 4 122 1 186 1 187 1 188 2 243 1 124 2 
125 2 127 2 3 3 58 1 130 2 61 2 132 4 195 2 194 2 62 4 136 1 66 1 68 1 67 1 199 1 140 2 8 1 71 4 11 2 141 1 75 4 142 1 144 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 83 1 84 1 150 3 23 4 22 1 208 2 24 1 87 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 228 1 171 1 46 2 174 2 176 1 111 3 113 2 234 1 114 2 116 2 119 1 181 1 53 4 183 1 54 1 184 2 122 1 55 4 187 1 188 2 243 1 124 2 
57 1 125 2 127 2 3 3 58 1 130 2 59 1 61 2 132 4 6 2 195 2 194 2 62 4 64 1 136 1 66 1 68 1 69 1 139 1 199 1 140 2 71 4 11 2 15 1 73 1 203 1 141 1 75 4 142 1 143 1 145 1 146 2 204 1 147 2 80 2 148 1 20 1 84 1 150 3 23 4 22 1 85 2 25 2 208 2 24 1 27 4 214 2 212 2 152 1 219 1 153 2 91 1 28 1 30 1 93 1 94 2 95 3 99 2 98 2 31 2 101 2 222 1 36 2 37 4 38 1 223 1 107 2 39 2 225 6 167 2 170 2 108 1 228 1 230 1 46 2 174 2 176 1 111 3 113 2 114 2 116 2 119 1 181 1 121 1 53 4 183 1 54 1 184 2 185 1 55 4 122 1 56 2 187 1 188 2 243 1 124 2 
37 1 189 1 235 1 
37 1 197 1 
37 1 197 1 
37 1 153 1 225 1 3 1 149 1 228 1 
153 1 12 1 3 1 74 1 157 1 4 1 161 1 37 1 225 1 240 1 82 1 228 1 
117 1 37 1 
37 1 153 1 225 1 4 1 157 1 161 1 228 1 
37 1 79 1 
37 1 197 1 
37 1 79 1 
37 1 79 1 
37 1 229 1 14 1 60 1 
37 1 224 1 35 1 
127 1 109 1 202 1 141 1 111 2 159 1 222 1 37 2 163 1 135 1 136 1 197 1 150 1 23 2 209 2 108 1 70 1 
7 1 
163 1 135 1 127 1 136 1 49 1 202 1 150 1 111 2 141 1 108 1 222 1 159 1 70 1 
127 1 156 1 141 1 111 3 146 2 222 1 80 2 181 1 39 2 136 1 150 1 108 2 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 77 2 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
127 1 154 1 156 1 141 1 111 2 146 1 222 1 80 1 181 1 39 1 136 1 150 1 108 1 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 77 2 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 233 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
125 1 127 2 58 1 3 2 130 1 4 1 61 1 194 1 195 1 136 1 65 1 198 1 140 1 12 2 141 1 74 2 75 2 146 2 147 1 80 2 82 2 206 1 150 4 23 2 208 1 212 1 27 2 153 1 218 1 94 1 156 1 155 1 99 1 98 1 31 1 157 1 158 1 222 1 101 1 161 1 37 3 104 1 223 1 39 2 107 1 225 2 170 1 108 2 228 1 46 1 174 1 111 3 113 1 50 2 235 3 116 1 181 1 240 3 53 2 123 1 187 1 188 1 243 1 124 1 
125 1 127 1 94 1 156 1 155 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
127 1 156 1 141 1 111 3 146 2 222 1 80 2 181 1 39 2 136 1 150 1 108 2 
57 1 125 2 127 1 3 3 58 1 130 2 59 1 61 2 132 4 6 2 194 2 195 2 62 4 64 1 136 1 69 1 198 1 139 1 140 2 11 2 73 1 203 1 141 1 75 4 146 1 204 1 147 2 80 1 148 1 20 1 150 2 22 1 23 4 85 2 25 2 208 2 214 1 212 2 27 4 153 2 28 1 93 1 95 3 94 2 99 2 98 2 31 2 222 1 101 2 36 2 37 4 223 1 39 1 107 2 225 6 167 2 170 2 108 1 228 1 230 1 46 2 174 2 111 3 113 2 114 2 116 2 181 1 121 1 53 4 184 2 56 2 187 1 124 2 188 2 
125 1 127 1 94 1 156 1 155 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 130 2 61 1 5 1 195 1 194 1 136 1 197 1 140 1 11 1 141 1 75 2 146 1 147 1 80 1 150 1 23 3 208 1 27 3 94 1 155 1 156 1 99 1 31 1 101 1 222 1 107 1 39 1 108 1 170 1 46 1 111 2 113 1 51 1 116 1 117 1 179 1 181 1 53 2 241 1 188 1 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 77 2 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
57 1 125 1 127 1 130 1 61 1 132 2 6 1 194 1 195 1 62 2 136 1 140 1 11 1 141 1 75 2 146 1 204 1 147 1 80 1 148 1 150 1 22 1 23 2 85 1 25 1 208 1 214 1 212 1 27 2 153 1 28 1 93 1 95 3 94 1 99 1 98 1 31 1 222 1 101 1 36 1 37 2 39 1 107 1 225 3 167 1 108 1 170 1 46 1 174 1 111 3 113 1 114 1 116 1 181 1 53 2 184 1 56 1 124 1 188 1 
127 1 156 1 141 1 111 2 146 1 222 1 6 1 80 1 181 1 39 1 136 1 150 1 108 1 
57 1 125 1 130 2 61 1 132 2 5 1 6 1 195 1 194 1 62 2 140 1 11 1 75 2 204 1 147 1 148 1 22 1 23 2 85 1 25 1 208 1 212 1 214 1 27 2 153 1 93 1 95 3 94 1 155 1 98 1 99 1 31 1 101 1 36 1 37 2 107 1 225 3 167 1 170 1 171 1 46 1 174 1 111 1 113 1 114 1 234 1 51 1 116 1 179 1 53 2 184 1 56 1 241 1 124 1 188 1 
57 1 125 1 127 1 130 1 61 1 132 2 6 1 194 1 195 1 62 2 136 1 140 1 11 1 141 1 75 2 146 1 204 1 147 1 80 1 148 1 150 1 22 1 23 2 85 1 25 1 208 1 214 1 212 1 27 2 153 1 28 1 93 1 95 3 94 1 99 1 98 1 31 1 222 1 101 1 36 1 37 2 39 1 107 1 225 3 167 1 170 1 108 1 46 1 174 1 111 3 113 1 114 1 233 1 116 1 181 1 53 2 184 1 56 1 124 1 188 1 
57 1 125 1 127 1 130 1 61 1 132 2 6 1 194 1 195 1 62 2 136 1 67 1 140 1 11 1 141 1 75 2 146 1 204 1 147 1 80 1 148 1 83 1 150 1 22 1 23 2 85 1 25 1 208 1 214 1 212 1 27 2 153 1 93 1 95 3 94 1 99 1 98 1 31 1 101 1 36 1 37 2 39 1 107 1 225 3 167 1 170 1 171 1 46 1 174 1 111 3 113 1 234 1 114 1 233 1 116 1 181 1 53 2 184 1 56 1 124 1 188 1 
125 1 127 1 94 1 155 1 156 1 99 1 130 2 31 1 101 1 222 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 2 208 1 241 1 27 2 188 1 
125 1 127 1 94 1 156 1 155 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 1 31 1 222 1 101 1 61 1 195 1 194 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 2 208 1 241 1 188 1 27 2 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
132 1 37 1 62 1 166 1 167 1 
132 1 37 1 62 1 184 1 166 1 
132 1 37 1 62 1 239 1 110 1 167 1 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 58 1 3 3 130 2 4 1 61 1 5 1 132 2 194 1 195 1 62 2 136 1 140 1 11 1 12 3 141 1 74 3 75 2 146 1 147 1 80 1 82 3 150 2 23 2 208 1 212 1 27 2 153 1 94 1 155 1 156 1 99 1 98 1 31 1 157 1 101 1 222 1 161 1 37 2 223 1 39 1 107 1 225 3 167 1 170 1 108 1 228 1 46 1 174 1 111 2 113 1 50 1 114 1 51 1 116 1 179 1 181 1 240 4 53 2 184 1 187 1 241 1 243 1 124 1 188 1 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 233 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 11 1 46 1 111 2 141 1 75 2 113 1 77 2 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 51 1 77 2 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 156 1 155 1 99 1 130 2 31 1 222 1 101 1 61 1 5 1 194 1 195 1 39 1 107 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 51 1 146 1 116 1 147 1 179 1 80 1 181 1 53 2 150 1 23 3 208 1 241 1 188 1 27 3 
125 1 127 1 94 1 99 1 130 1 31 1 222 1 101 1 61 1 194 1 195 1 107 1 39 1 136 1 197 1 170 1 140 1 108 1 46 1 111 2 141 1 75 2 113 1 146 1 116 1 147 1 80 1 181 1 53 2 150 1 23 3 208 1 27 3 188 1 
80 1 127 1 181 1 39 1 136 1 150 1 111 2 141 1 108 1 222 1 146 1 
89 1 153 1 127 1 220 1 92 1 3 2 58 1 98 1 157 1 4 1 222 1 37 4 196 1 223 1 225 2 136 1 226 1 108 1 70 1 228 1 10 1 12 2 174 1 16 1 74 2 111 2 141 1 50 1 115 1 235 3 178 1 205 1 82 2 240 3 150 2 207 1 187 1 214 1 212 1 243 1 124 1 
89 1 153 1 127 1 220 1 1 1 2 1 97 1 3 2 58 1 98 1 4 1 157 1 222 1 36 1 37 4 225 2 136 1 226 1 108 1 200 1 70 1 228 1 10 1 173 1 12 2 174 1 16 1 74 2 111 2 141 1 50 1 235 3 178 1 19 1 121 1 82 2 240 3 150 1 56 1 85 1 25 1 187 1 124 1 212 1 
127 1 130 1 99 1 31 1 100 1 101 1 222 1 61 1 132 1 37 1 103 1 194 1 62 1 39 1 136 1 197 1 41 1 166 1 140 1 108 1 232 1 141 1 111 2 75 1 146 1 116 1 80 1 181 1 21 1 53 1 150 1 188 1 
127 1 111 2 141 1 99 1 130 1 75 1 31 1 100 1 222 1 146 1 101 1 116 1 61 1 194 1 80 1 181 1 39 1 136 1 21 1 41 1 53 1 150 1 108 1 140 1 188 1 
125 1 127 1 94 1 130 3 99 3 31 3 100 2 101 3 222 1 61 3 195 1 194 3 107 1 39 1 136 1 41 1 170 1 140 3 108 1 11 1 46 1 13 1 141 1 111 2 113 1 75 4 233 1 146 1 116 3 147 1 80 1 181 1 21 1 53 4 150 1 23 2 208 1 27 2 188 3 
127 1 130 3 99 3 31 3 100 3 101 3 222 1 61 3 194 3 39 1 136 1 41 1 140 3 108 1 141 1 111 2 75 3 146 1 116 3 80 1 181 1 120 1 21 1 53 3 150 1 188 3 
127 1 130 1 99 1 31 1 100 1 160 1 101 1 222 1 61 1 194 1 39 1 136 1 41 1 140 1 108 1 141 1 111 2 75 1 146 1 116 1 80 1 181 1 21 1 53 1 150 1 188 1 
127 1 141 1 111 2 100 1 160 1 146 1 222 1 80 1 181 1 39 1 136 1 41 1 150 1 108 1 
221 1 111 1 168 1 
111 1 32 1 88 1 211 2 
44 1 63 1 111 1 168 1 
238 1 111 1 210 1 32 1 88 1 
231 1 168 1 
12 1 82 1 240 1 3 1 74 1 50 1 
12 1 82 1 240 1 3 1 74 1 50 1 161 1 
153 1 17 1 36 1 121 1 85 1 56 1 228 1 
153 1 58 1 187 1 228 1 
125 1 13 1 53 2 23 1 27 1 188 1 151 1 
53 1 188 1 
37 1 125 1 197 1 53 1 23 1 27 1 
53 1 188 1 
37 1 197 1 23 1 27 1 
83 1 
67 1 
67 1 
108 1 
222 1 
108 1 
47 1 127 1 48 1 129 1 141 1 111 2 160 1 105 1 136 1 83 1 67 1 150 1 169 1 70 1 213 1 
47 2 127 2 48 2 129 2 177 1 141 2 111 4 105 2 118 1 136 2 83 2 67 2 150 2 169 2 213 2 70 2 
47 1 127 1 48 1 129 1 141 1 111 2 35 1 37 1 105 1 180 1 40 2 136 1 83 1 197 1 67 1 150 1 23 2 169 1 70 1 213 1 
165 1 
37 2 182 1 197 1 235 2 
52 1 37 2 197 1 235 2 
57 1 153 1 127 1 129 1 93 1 95 2 98 1 36 1 37 2 105 1 40 1 225 2 136 1 67 1 165 1 198 1 169 1 70 1 171 1 47 1 174 1 48 1 111 3 141 1 78 1 235 2 204 1 52 1 118 1 180 1 148 1 182 1 83 1 150 2 23 1 22 1 56 1 85 1 25 1 212 1 124 1 213 1 214 1 
136 1 49 1 48 1 141 1 112 1 
127 1 129 1 58 1 3 3 4 1 136 1 67 1 198 1 70 1 12 3 14 1 141 1 74 3 83 1 82 3 150 3 23 1 213 1 212 1 153 1 98 1 157 1 35 1 161 1 37 3 105 1 223 1 225 2 40 1 165 1 169 1 228 1 47 1 174 1 48 1 111 2 50 1 235 2 52 1 180 1 182 1 240 4 187 1 243 1 124 1 
47 1 127 1 48 1 129 1 141 1 111 2 35 2 37 3 105 1 180 1 40 1 136 1 83 1 197 1 67 1 150 1 23 1 169 1 70 1 213 1 
47 1 127 1 48 1 129 1 177 1 141 1 111 2 105 1 136 1 83 1 67 1 150 1 169 1 213 1 70 1 
47 2 127 2 49 1 48 2 129 2 177 1 141 2 111 4 112 1 105 2 136 2 83 2 67 2 150 2 169 2 213 2 70 2 
47 1 127 1 48 1 129 1 141 1 111 2 105 1 118 1 136 1 83 1 67 1 150 1 169 1 70 1 213 1 
47 1 127 1 49 1 48 1 129 1 141 1 111 2 112 1 105 1 136 1 83 1 67 1 150 1 169 1 213 1 70 1 
43 1 172 1 72 1 175 1 127 1 141 1 111 2 237 1 60 1 192 2 35 1 37 2 106 1 136 1 83 1 197 1 67 1 150 1 23 2 70 1 
153 1 127 1 3 2 58 1 98 1 33 1 157 1 4 1 161 1 192 1 35 1 162 1 37 1 133 1 106 1 223 1 225 1 136 1 67 1 198 1 70 1 228 1 43 1 172 1 12 2 72 1 14 1 175 1 74 2 111 2 141 1 50 1 237 1 82 2 240 3 83 1 150 3 23 1 187 1 124 1 243 1 
13 1 0 1 23 1 227 1 237 1 192 1 
133 1 197 1 
197 1 162 1 
127 1 0 1 33 1 192 1 35 1 37 2 132 1 106 1 62 1 136 1 67 1 227 1 70 1 43 1 172 1 175 1 111 2 141 1 237 2 83 1 150 1 23 1 
127 1 0 1 33 1 192 1 35 1 37 2 132 1 106 1 62 1 224 1 136 1 67 1 227 1 70 1 43 1 172 1 175 1 13 1 111 2 141 1 237 2 83 1 150 1 23 1 242 1 
33 1 
57 1 153 1 0 1 127 1 93 1 95 4 98 1 33 1 192 2 35 2 162 1 36 1 132 1 37 3 133 1 62 1 106 1 136 1 225 2 67 1 198 1 227 1 70 1 43 1 172 1 171 1 72 1 14 2 175 1 111 3 141 1 114 1 18 1 237 2 204 1 148 1 83 1 150 2 23 2 22 1 56 1 85 1 25 1 214 1 124 1 
43 1 106 1 172 1 175 1 49 1 237 1 
127 1 0 1 58 1 3 4 4 1 192 2 132 1 133 1 62 1 136 1 67 1 198 1 70 1 12 4 14 2 72 1 141 1 74 4 83 1 82 4 150 3 23 2 153 1 98 1 157 1 33 1 162 1 35 2 161 1 37 3 106 1 223 1 225 2 227 1 228 1 43 1 172 1 175 1 111 2 50 1 114 1 237 2 240 5 187 1 243 1 124 1 
43 1 106 1 172 1 175 1 49 1 237 1 
127 1 90 1 29 1 35 1 192 2 60 1 37 2 106 1 136 1 197 1 67 1 70 1 175 1 72 1 111 2 141 1 18 1 237 1 83 1 150 1 23 2 

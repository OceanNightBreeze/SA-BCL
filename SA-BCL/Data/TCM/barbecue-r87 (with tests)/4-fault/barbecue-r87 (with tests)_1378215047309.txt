#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 98 243 44 154 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createCodewords([CI)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.twod.pdf417.PDF417Module:createBits([III)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:PDF417Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:PDF417Module(Ljava.lang.String;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.twod.pdf417.PDF417Barcode:initBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 6967 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:generateEC([III)V | OPERATOR | 4719 | - -> *
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8370 | if (x) -> if (!x)
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.twod.pdf417.PDF417Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 216 1 20 1 185 1 147 1 48 1 
36 1 216 1 20 1 185 1 147 1 
53 1 72 2 81 1 
68 2 250 1 209 3 3 1 88 1 40 2 61 2 62 1 167 1 32 2 248 1 
68 2 36 1 250 1 39 1 209 2 245 1 3 1 74 1 25 1 40 2 128 1 42 1 61 1 167 1 32 4 248 1 
68 1 36 1 250 1 139 1 39 1 104 1 209 1 245 1 3 1 25 1 40 1 10 1 42 1 61 1 201 1 167 1 32 3 248 1 
68 1 36 1 250 1 39 1 141 1 209 1 245 1 3 1 25 1 128 1 40 1 42 2 61 1 167 1 32 3 248 1 
223 1 250 1 167 1 248 1 
68 1 250 1 209 1 3 1 8 1 40 1 43 1 61 2 167 1 32 2 248 1 
241 1 68 1 36 2 250 1 139 1 39 1 104 1 20 1 209 1 245 2 3 1 162 1 25 1 40 1 10 1 42 1 61 1 201 1 32 3 248 1 
68 1 36 2 250 1 139 1 39 1 104 1 20 1 209 1 245 2 3 1 162 1 25 1 40 1 10 1 42 1 61 1 201 1 32 3 248 1 
68 1 241 1 36 1 16 1 250 1 20 1 209 1 245 1 3 1 162 1 178 1 40 1 247 1 61 1 167 1 32 2 248 1 
68 1 241 1 36 1 16 1 250 1 20 1 209 1 245 1 3 1 162 1 231 1 40 1 247 1 61 1 167 1 32 2 248 1 
68 1 36 1 16 1 250 1 157 1 20 1 209 1 245 1 3 1 162 1 40 1 247 1 61 1 167 1 78 1 32 2 205 1 248 1 
241 1 68 1 36 1 16 1 250 1 157 1 20 1 209 1 245 1 3 1 162 1 40 1 247 1 61 1 167 1 78 1 32 2 205 1 248 1 
68 2 250 1 209 2 3 1 40 1 61 1 62 1 167 1 32 3 248 1 
250 1 209 2 58 1 40 1 110 2 61 1 167 1 32 3 45 1 248 1 
40 1 215 1 250 1 110 1 61 2 209 1 167 1 45 1 32 2 248 1 
250 1 209 1 40 1 110 1 61 1 167 1 32 2 45 1 248 1 15 1 
40 1 102 1 250 1 110 1 61 1 209 1 167 1 45 1 32 2 248 1 
36 1 250 1 18 1 143 1 209 1 245 1 193 1 25 1 259 1 40 1 110 1 42 4 61 1 219 1 167 1 32 3 45 1 248 1 
250 1 209 1 40 1 75 1 110 1 61 1 236 1 167 1 32 2 45 1 248 1 
214 1 93 3 254 1 
93 1 
142 3 140 4 141 1 144 1 146 1 4 5 148 2 6 4 8 1 150 2 12 1 152 1 15 2 159 1 20 1 161 1 160 1 22 1 162 1 24 3 25 1 26 3 164 1 166 1 32 4 168 1 36 2 35 1 170 2 38 1 179 4 41 2 181 1 42 2 44 1 45 1 185 2 188 1 189 1 190 3 57 1 194 2 195 2 58 1 59 1 196 3 61 5 198 3 62 1 202 2 204 2 206 1 208 1 209 4 210 3 213 3 73 3 74 1 77 2 221 3 85 4 222 2 224 2 87 3 227 3 229 2 94 5 235 4 92 2 237 1 238 1 95 1 97 2 98 1 243 1 99 2 103 1 244 3 106 4 107 1 108 1 110 2 113 1 248 1 115 3 251 1 123 6 253 14 256 2 129 1 259 1 128 1 130 1 131 3 134 1 
206 1 208 1 142 3 141 1 140 4 209 2 146 1 213 3 4 5 148 2 73 2 6 4 150 2 12 1 77 2 152 1 221 2 15 2 85 4 222 2 224 2 87 3 20 1 159 1 161 1 160 1 22 1 227 3 162 1 229 2 26 3 25 1 24 3 164 1 92 2 235 4 94 5 166 1 238 1 95 1 32 3 97 2 168 1 98 1 35 1 99 2 36 2 243 1 170 2 244 3 38 1 106 4 179 4 107 1 108 1 181 1 42 2 110 1 44 1 113 1 185 2 45 1 115 3 248 1 251 1 123 6 188 1 253 4 189 1 190 3 256 2 57 1 195 2 194 2 128 1 59 1 259 1 58 1 129 1 196 3 130 1 131 2 61 3 198 3 62 1 204 2 202 2 
98 1 243 1 140 4 22 1 58 1 181 1 235 4 12 1 238 1 44 1 152 1 113 1 
1 1 141 1 140 4 142 3 3 1 4 4 148 2 6 4 7 1 150 2 12 1 13 2 14 1 152 1 15 2 159 1 20 1 161 1 160 1 22 1 162 1 25 1 26 3 24 2 164 1 165 1 166 1 32 3 169 2 36 2 35 1 170 2 38 1 39 1 180 1 179 4 181 1 42 2 44 1 185 2 188 1 189 1 190 2 55 1 195 2 59 1 196 2 61 3 198 2 200 2 62 1 63 2 64 2 203 1 202 2 204 2 68 1 208 1 209 2 211 2 213 2 73 2 77 2 220 2 221 2 85 4 222 2 224 2 87 4 227 2 229 2 92 2 235 4 94 4 234 1 238 1 95 1 97 2 98 1 243 1 99 2 244 2 106 4 107 1 108 1 113 1 248 1 115 2 249 1 121 2 251 1 123 6 253 4 252 1 255 2 256 2 127 2 129 1 128 1 130 1 260 1 131 2 132 2 261 1 
208 1 137 4 142 4 140 4 141 2 209 2 212 1 149 2 6 2 12 1 77 2 152 1 15 2 85 2 20 1 159 1 161 1 160 1 22 1 162 1 228 1 23 1 26 4 230 1 90 1 25 1 164 1 235 4 30 1 31 3 238 1 95 1 32 3 96 2 98 1 35 1 243 1 36 2 38 1 174 4 106 4 175 2 107 1 108 1 181 1 110 1 42 3 44 1 113 1 185 2 45 1 47 4 248 1 122 2 251 1 123 4 253 8 189 1 52 2 126 2 128 1 58 1 129 1 259 1 59 1 61 3 133 1 62 1 66 2 
208 1 142 3 140 4 141 1 209 2 211 2 213 2 4 4 148 2 73 2 6 4 150 2 12 1 13 2 77 2 152 1 221 2 15 2 85 4 222 2 224 2 87 4 20 1 159 1 160 1 227 2 22 1 162 1 229 2 24 2 26 3 25 1 164 1 94 4 235 4 92 2 166 1 238 1 95 1 32 4 97 2 98 1 169 2 35 1 99 2 243 1 36 2 170 2 244 2 38 1 106 4 179 4 107 1 108 1 181 1 110 1 42 2 44 1 113 1 185 2 45 1 115 2 248 1 251 1 123 6 188 1 253 4 189 1 190 2 256 2 127 2 55 1 195 2 128 1 58 1 129 1 259 1 59 1 196 2 130 1 131 2 61 3 198 2 200 2 62 1 63 2 204 2 202 2 
208 1 142 3 140 4 141 1 209 2 211 2 213 2 4 4 148 2 73 2 6 4 150 2 12 1 13 2 77 2 152 1 221 2 15 2 85 4 222 2 224 2 87 4 20 1 159 1 161 1 160 1 227 2 22 1 162 1 229 2 24 2 26 3 25 1 164 1 94 4 235 4 92 2 166 1 238 1 95 1 32 3 97 2 98 1 169 2 35 1 99 2 243 1 36 2 170 2 244 2 38 1 106 4 180 1 179 4 107 1 108 1 181 1 110 1 42 2 44 1 113 1 185 2 45 1 115 2 248 1 251 1 123 6 188 1 253 4 189 1 190 2 256 2 127 2 55 1 195 2 128 1 58 1 129 1 259 1 59 1 196 2 130 1 131 2 61 3 198 2 200 2 62 1 63 2 204 2 202 2 
208 1 142 3 140 4 141 1 209 2 146 1 213 3 4 5 148 2 73 2 6 4 150 2 12 1 77 2 152 1 221 2 15 2 84 1 85 4 222 2 224 2 87 3 158 1 20 1 159 1 160 1 22 1 227 3 162 1 229 2 26 3 25 1 24 3 164 1 92 2 235 4 94 5 238 1 95 1 32 3 97 2 168 1 98 1 35 1 99 2 36 2 243 1 170 2 244 3 38 1 106 4 179 4 107 1 108 1 181 1 42 2 110 1 182 1 44 1 113 1 185 2 45 1 115 3 248 1 251 1 123 6 253 4 189 1 190 3 256 2 57 1 195 2 194 2 128 1 59 1 259 1 58 1 129 1 196 3 130 1 131 2 61 3 198 3 62 1 204 2 202 2 
239 1 
140 4 141 2 142 3 146 1 4 5 148 2 6 4 8 1 150 2 12 1 152 1 15 2 159 1 20 1 160 1 161 1 22 1 162 1 24 3 25 1 26 3 164 1 166 1 32 3 168 1 36 2 35 1 170 2 38 1 179 4 181 1 42 3 182 1 44 1 45 1 185 2 188 1 189 1 190 3 57 1 194 2 195 2 58 1 59 1 196 3 61 4 198 3 62 1 202 2 204 2 206 1 208 1 209 2 213 3 73 2 77 2 221 2 85 4 84 1 222 2 224 2 87 3 227 3 229 2 94 5 235 4 92 2 238 1 95 1 97 2 98 1 243 1 99 2 244 3 106 4 107 1 108 1 110 1 113 1 248 1 115 3 123 6 251 1 253 4 125 1 256 2 129 1 259 1 128 1 130 1 131 2 
243 1 235 1 140 1 44 1 22 1 
206 1 208 1 142 3 141 1 140 4 209 2 146 1 213 3 4 5 148 2 73 2 6 4 150 2 77 2 152 1 221 2 15 2 84 1 85 4 222 2 224 2 87 3 20 1 159 1 160 1 22 1 227 3 162 1 229 2 26 3 25 1 24 3 164 1 92 2 235 4 94 5 166 1 238 1 95 1 32 3 97 2 168 1 98 1 35 1 99 2 36 2 243 1 170 2 244 3 38 1 106 4 179 4 107 1 108 1 181 1 42 2 110 1 182 1 44 1 113 1 185 2 45 1 115 3 248 1 251 1 123 6 188 1 253 4 189 1 190 3 256 2 57 1 195 2 194 2 128 1 59 1 259 1 58 1 129 1 196 3 130 1 131 2 61 3 198 3 62 1 204 2 202 2 
206 1 208 1 142 3 141 1 140 4 209 2 146 1 213 3 4 5 148 2 73 2 6 4 150 2 77 2 152 1 221 2 15 2 84 1 85 4 222 2 224 2 87 3 20 1 159 1 160 1 22 1 227 3 162 1 229 2 26 3 25 1 24 3 164 1 92 2 235 4 94 5 166 1 238 1 95 1 32 3 97 2 168 1 98 1 35 1 99 2 36 2 243 1 170 2 244 3 38 1 106 4 179 4 107 1 108 1 181 1 42 2 110 1 182 1 113 1 185 2 45 1 115 3 248 1 251 1 123 6 188 1 253 4 189 1 190 3 256 2 57 1 195 2 194 2 128 1 59 1 259 1 58 1 129 1 196 3 130 1 131 2 61 3 198 3 62 1 204 2 202 2 135 1 
142 3 140 4 141 1 146 5 4 9 148 2 6 6 9 1 150 2 11 1 12 1 13 2 152 1 154 1 15 2 156 1 159 10 20 2 160 1 22 1 162 1 24 7 25 1 26 3 164 1 166 1 32 20 33 1 168 5 169 2 35 1 36 3 170 2 38 1 179 4 181 1 42 2 182 1 44 1 45 9 185 2 188 1 189 1 190 7 54 1 55 1 57 5 194 2 195 2 58 1 59 1 196 7 60 1 61 11 198 7 199 1 200 2 62 1 63 2 202 2 204 2 67 1 208 1 71 1 209 11 211 2 213 7 73 10 76 1 77 2 221 10 82 1 84 1 85 6 222 2 224 2 87 9 227 7 229 2 89 1 232 1 94 9 235 4 92 2 238 1 95 1 97 2 98 1 99 2 243 1 100 1 244 7 106 4 107 1 108 1 246 1 109 1 110 10 111 1 113 1 248 10 115 7 251 1 123 6 253 7 125 1 256 2 127 2 128 1 129 1 259 1 130 9 131 10 
101 1 103 1 253 1 
56 1 36 1 16 1 247 1 123 1 253 1 20 1 
16 1 36 1 0 1 123 1 157 1 253 1 142 1 20 1 177 1 56 1 247 1 34 1 
242 1 36 1 123 1 253 1 142 1 20 1 
49 1 253 1 
49 1 253 1 
91 1 253 1 
49 1 253 1 
112 1 253 1 
112 1 253 1 
112 1 253 1 
50 1 137 1 253 1 
86 1 27 1 253 1 47 1 
68 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 99 1 170 1 138 2 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 207 1 159 1 209 1 3 1 73 1 130 1 131 1 61 1 114 1 32 2 221 1 248 1 
68 1 99 1 170 1 138 2 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 125 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 2 0 2 207 1 142 2 209 2 145 1 211 1 3 1 213 1 4 2 148 1 73 2 74 1 8 1 150 1 218 1 77 1 221 2 15 1 222 1 16 1 224 1 157 3 87 1 20 1 159 1 227 1 162 1 229 1 24 1 231 1 94 2 32 3 34 2 97 1 36 1 170 1 103 3 244 1 106 2 177 2 107 1 179 2 247 1 186 1 115 1 116 1 248 1 251 1 123 2 253 3 189 1 190 1 256 1 56 1 195 1 196 1 130 1 61 4 131 2 198 1 202 1 204 1 205 2 
68 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 141 1 209 1 3 1 213 1 4 2 148 1 73 1 6 2 150 1 13 1 77 1 220 1 221 1 15 1 85 2 222 1 224 1 87 1 159 1 227 1 229 1 25 1 26 3 24 1 92 1 94 2 32 3 97 1 35 1 99 1 36 1 170 1 244 1 39 1 106 2 179 2 42 1 185 1 115 1 248 1 121 1 123 3 253 2 255 1 190 1 256 1 195 1 59 1 196 1 260 1 130 1 131 1 61 1 198 1 132 1 64 1 202 1 204 1 
68 1 121 1 207 1 159 1 209 1 3 1 73 1 130 1 131 1 61 1 32 2 221 1 248 1 
141 1 211 1 213 1 4 2 148 1 6 2 150 1 13 1 77 1 220 1 15 1 85 2 222 1 224 1 87 2 227 1 229 1 26 3 25 1 24 1 92 1 94 2 32 1 97 1 169 1 35 1 99 1 36 1 170 1 244 1 106 2 179 2 42 1 185 1 115 1 121 1 123 3 253 2 255 1 190 1 256 1 127 1 195 1 59 1 58 1 259 1 196 1 260 1 198 1 132 1 200 1 64 1 63 1 202 1 204 1 
68 1 141 1 209 1 3 1 213 1 4 2 148 1 73 1 6 2 150 1 13 1 77 1 220 1 221 1 15 1 85 2 222 1 224 1 87 1 159 1 227 1 229 1 25 1 26 3 24 1 92 1 94 2 32 3 97 1 35 1 99 1 36 1 170 1 244 1 39 1 106 2 179 2 42 1 185 1 115 1 248 1 121 1 123 3 253 2 125 1 255 1 190 1 256 1 195 1 59 1 196 1 260 1 130 1 131 1 61 1 198 1 132 1 64 1 202 1 204 1 
141 1 209 1 213 1 4 2 148 1 73 1 6 2 150 1 13 1 77 1 220 1 221 1 15 1 85 2 222 1 224 1 87 1 159 1 227 1 229 1 25 1 26 3 24 1 92 1 94 2 32 3 97 1 35 1 99 1 36 1 170 1 244 1 106 2 179 2 42 1 110 1 45 1 185 1 115 1 248 1 121 1 123 3 253 2 125 1 255 1 190 1 256 1 195 1 259 1 58 1 59 1 196 1 260 1 130 1 61 1 131 1 198 1 132 1 64 1 202 1 204 1 
68 1 169 1 170 1 207 1 244 1 209 1 211 1 213 1 3 1 4 2 148 1 73 1 106 2 179 2 221 1 115 1 248 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 169 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 2 73 1 179 2 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 204 1 202 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
6 1 85 1 253 1 217 1 13 1 
6 1 85 1 92 1 253 1 217 1 
6 1 85 1 51 1 197 1 253 1 13 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 0 3 207 1 142 3 209 1 211 1 213 1 3 1 4 2 148 1 73 1 6 2 150 1 13 1 77 1 221 1 15 1 85 2 16 1 222 1 224 1 157 4 87 2 20 1 159 1 227 1 162 1 229 1 24 1 94 2 92 1 32 2 34 3 97 1 169 1 99 1 36 1 170 1 244 1 106 2 177 3 107 1 179 2 247 1 185 1 115 1 248 1 251 1 123 3 253 2 189 1 190 1 256 1 56 1 127 1 195 1 196 1 130 1 131 1 61 2 198 1 200 1 63 1 202 1 204 1 205 1 
68 1 99 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 125 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 169 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 91 1 130 1 94 2 61 1 131 1 198 1 200 1 32 2 202 1 204 1 
68 1 207 1 209 1 211 1 213 1 3 1 4 2 73 1 148 1 221 1 222 1 224 1 87 2 159 1 227 1 229 1 24 1 91 1 94 2 32 2 169 1 170 1 244 1 106 3 179 3 248 1 115 1 49 1 190 1 256 1 127 1 195 1 196 1 130 1 131 1 61 1 198 1 200 1 63 1 204 1 202 1 
68 1 169 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 170 1 244 1 209 1 3 1 213 1 4 2 148 1 73 1 106 3 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 2 207 1 159 1 209 1 3 1 73 2 130 1 131 2 61 1 32 3 221 2 248 1 
68 1 1 1 142 3 141 1 209 1 3 1 213 2 4 4 148 2 73 1 6 4 7 1 8 1 150 2 13 2 14 1 77 2 220 2 221 1 15 2 85 4 222 2 224 2 87 2 20 1 159 1 227 2 162 1 229 2 25 1 26 3 24 2 165 1 234 1 92 2 94 4 32 3 97 2 35 1 99 2 36 2 170 2 244 2 39 1 106 4 179 4 42 1 185 2 115 2 248 1 249 1 121 2 251 1 123 6 252 1 253 4 189 1 255 2 190 2 256 2 195 2 59 1 196 2 260 1 130 1 131 1 61 2 198 2 261 1 132 2 64 2 203 1 202 2 204 2 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 1 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 32 2 202 1 204 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 169 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 2 73 1 179 2 221 1 115 1 248 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 2 207 1 159 1 209 1 3 1 73 2 130 1 131 2 61 1 32 3 221 2 248 1 
68 1 169 1 99 1 170 1 207 1 244 1 209 1 211 1 3 1 213 1 4 2 148 1 106 3 73 1 179 3 221 1 115 1 248 1 49 1 222 1 224 1 87 2 190 1 159 1 256 1 227 1 229 1 24 1 127 1 195 1 196 1 130 1 94 2 61 1 131 1 198 1 200 1 63 1 32 2 202 1 204 1 
68 1 130 1 61 1 131 1 159 1 209 1 32 2 3 1 221 1 73 1 248 1 
97 1 68 1 36 1 0 2 103 3 37 1 142 2 209 1 3 1 175 1 176 1 105 1 177 2 150 1 75 1 247 1 151 1 77 1 220 1 248 1 15 1 83 1 120 1 16 1 251 1 157 3 123 2 253 4 189 1 255 1 159 1 20 1 191 1 21 1 258 1 234 1 236 1 61 1 132 1 64 1 32 2 240 1 34 2 205 1 
97 1 68 1 36 1 0 2 103 3 37 1 139 1 142 2 104 1 209 1 3 1 175 1 176 1 105 1 177 2 178 1 107 1 150 1 10 1 247 1 42 1 77 1 248 1 15 1 120 1 16 1 251 1 157 3 123 2 253 4 189 1 159 1 20 1 21 1 162 1 258 1 61 2 201 1 32 2 34 2 205 1 
168 1 68 1 244 1 209 1 146 1 213 1 3 1 4 1 73 1 221 1 115 1 248 1 87 1 190 1 159 1 227 1 24 1 57 1 196 1 130 1 61 1 94 1 131 1 198 1 32 2 
168 1 68 1 244 1 209 1 146 1 213 1 3 1 4 1 73 1 6 1 217 1 221 1 115 1 248 1 155 1 49 1 85 1 253 1 87 1 190 1 159 1 227 1 24 1 57 1 194 1 196 1 130 1 61 1 94 1 131 1 198 1 32 2 
168 3 68 1 244 3 209 1 146 1 213 3 3 1 4 3 5 1 73 1 221 1 115 3 248 1 87 3 190 3 159 1 227 3 24 3 57 1 196 3 130 1 61 1 94 3 131 1 198 3 32 2 
168 1 68 1 102 1 244 1 209 1 146 1 213 1 3 1 4 1 73 1 221 1 115 1 248 1 87 1 190 1 159 1 227 1 24 1 57 1 196 1 130 1 61 1 94 1 131 1 198 1 32 2 
168 1 68 1 102 1 159 1 209 1 3 1 73 1 57 1 130 1 61 1 131 1 32 2 221 1 248 1 
168 2 68 1 99 1 170 1 244 3 209 1 146 1 72 1 213 3 3 1 4 4 148 1 106 2 73 1 179 2 221 1 115 3 248 1 222 1 224 1 87 3 125 1 190 3 159 1 256 1 227 3 229 1 24 3 57 1 195 1 196 3 130 1 61 1 94 4 131 1 198 3 32 2 204 1 202 1 
118 1 183 1 32 1 
88 1 119 2 32 1 65 1 
88 1 136 1 28 1 32 1 65 1 
183 1 257 1 32 1 153 1 
183 1 79 1 
36 1 20 1 234 1 132 1 220 1 64 1 80 1 
177 1 0 1 157 1 142 1 34 1 205 1 
177 1 56 1 0 1 157 1 142 1 34 1 205 1 
36 1 251 1 189 1 20 1 
49 1 179 1 170 1 253 1 4 1 106 1 
190 1 4 1 
49 1 179 1 253 1 106 1 
179 1 170 1 190 1 2 1 72 1 4 2 106 1 
190 1 4 1 
110 1 
45 1 
110 1 
68 1 
68 1 
3 1 
49 1 69 2 137 1 70 1 253 1 124 1 173 1 159 1 19 1 209 1 106 2 175 1 163 1 110 1 61 1 29 1 32 2 45 1 46 1 248 1 
49 1 69 1 137 2 70 1 253 3 124 1 173 1 159 1 19 1 209 1 106 1 175 1 163 1 110 1 61 1 29 1 32 2 45 1 46 1 248 1 
163 1 171 1 110 1 70 1 61 1 29 1 173 1 19 1 159 1 209 1 45 1 32 2 46 1 175 1 248 1 
223 1 171 1 70 2 173 2 159 2 19 2 209 2 175 2 163 2 110 2 61 2 29 2 32 4 45 2 46 2 187 1 248 2 
102 1 70 1 173 1 159 1 19 1 209 1 175 1 163 1 110 1 61 1 29 1 32 2 45 1 46 1 248 1 
171 1 70 2 225 1 173 2 159 2 19 2 209 2 175 2 163 2 110 2 61 2 29 2 32 4 45 2 46 2 248 2 
49 1 103 2 253 2 184 1 
49 1 233 1 103 2 253 2 
97 1 69 1 35 1 36 1 103 2 70 1 172 1 173 1 141 1 209 1 106 1 175 1 150 1 8 1 110 1 42 1 184 1 77 1 220 1 45 1 46 1 15 1 248 1 123 2 225 1 124 1 253 2 255 1 19 1 159 1 226 1 26 2 25 1 163 1 59 1 233 1 259 1 260 1 61 2 29 1 132 1 64 1 32 3 
223 1 173 1 159 1 248 1 187 1 
97 1 69 1 36 1 0 3 103 2 137 1 70 1 172 1 142 3 173 1 209 1 106 1 175 1 177 3 107 1 150 1 8 1 247 1 110 1 184 1 77 1 45 1 47 1 46 1 15 1 248 1 16 1 251 1 157 4 123 2 124 1 253 3 189 1 19 1 159 1 20 1 162 1 56 1 163 1 233 1 61 3 29 1 32 2 34 3 205 1 
172 1 
163 1 223 1 110 1 70 1 61 1 29 1 173 1 19 1 159 1 209 1 45 1 32 2 46 1 175 1 248 1 187 1 
70 1 225 1 173 1 159 1 19 1 209 1 175 1 163 1 110 1 61 1 29 1 32 2 45 1 46 1 248 1 
49 1 86 1 137 1 253 2 174 2 159 1 209 1 212 1 106 2 175 1 23 1 90 1 110 1 61 1 30 1 31 1 32 2 45 1 96 1 248 1 
137 1 174 1 209 1 212 1 72 1 175 1 106 1 6 1 110 1 45 1 248 1 85 1 122 1 50 1 253 2 52 1 159 1 53 1 23 1 90 1 61 1 30 1 31 2 32 2 66 1 
122 1 
35 1 36 1 137 2 141 1 174 2 209 1 212 1 106 2 175 1 149 1 6 1 8 1 110 1 42 1 77 1 220 1 185 1 45 1 47 2 248 1 15 1 85 1 17 1 122 1 123 2 253 3 255 1 52 1 159 1 126 1 23 1 26 4 90 1 25 1 259 1 59 1 260 1 61 2 132 1 30 1 31 2 64 1 32 3 66 1 96 1 
23 1 90 1 223 1 30 1 31 1 212 1 
0 4 137 2 142 4 209 1 212 1 149 1 6 1 8 1 77 1 15 1 85 1 16 1 157 5 20 1 159 1 162 1 23 1 90 1 30 1 31 2 32 2 34 4 96 1 36 1 174 2 175 1 106 2 177 4 107 1 247 1 110 1 45 1 185 1 47 2 248 1 122 1 123 2 251 1 253 3 189 1 52 1 126 1 56 1 61 3 66 1 205 1 
36 1 0 2 137 1 142 2 174 1 209 1 212 1 106 1 175 1 149 1 177 2 107 1 8 1 247 1 110 1 77 1 45 1 47 1 15 1 248 1 16 1 122 1 251 1 157 3 123 1 253 1 189 1 159 1 20 1 126 1 162 1 23 1 56 1 90 1 61 3 30 1 31 1 32 2 34 2 96 1 205 1 
174 1 31 1 52 1 72 1 66 1 106 1 
49 1 126 1 
49 1 149 1 
137 1 174 1 209 1 212 1 175 1 106 1 6 1 110 1 45 1 248 1 85 1 122 1 253 2 52 1 159 1 23 1 90 1 61 1 30 1 31 2 32 2 66 1 
23 1 90 1 223 1 30 1 31 1 212 1 
137 1 174 2 209 1 212 1 175 1 106 2 110 1 45 1 248 1 117 1 49 1 86 1 17 1 253 2 159 1 192 1 23 1 61 1 31 1 32 2 96 1 

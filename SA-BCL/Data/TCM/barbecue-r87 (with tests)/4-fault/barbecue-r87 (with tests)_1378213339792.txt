#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 63 115 91 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 228 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String; | RETURN | 4319 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8714 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
183 1 104 1 141 1 94 1 162 1 144 1 
183 1 141 1 94 1 162 1 144 1 
234 2 135 1 202 1 
119 1 79 1 192 1 176 1 167 1 221 1 241 1 144 1 87 1 127 1 28 1 73 1 92 1 112 2 11 1 173 3 130 1 247 1 236 1 
66 1 119 2 79 1 192 1 221 1 144 1 28 1 73 1 112 1 11 1 92 1 173 3 130 1 247 1 236 1 148 1 
79 1 192 3 221 1 154 1 28 1 112 1 11 1 173 2 130 2 236 2 
66 1 119 1 79 1 103 1 192 2 221 1 144 1 28 1 73 1 112 2 11 1 92 1 173 4 130 1 247 1 236 2 
28 1 79 1 146 1 221 1 
79 1 192 1 221 1 85 1 108 1 28 1 112 1 11 1 173 2 130 2 236 1 
119 1 79 1 192 1 176 1 69 1 221 1 5 1 241 1 144 2 87 1 127 1 73 2 92 1 112 1 11 1 173 3 130 1 247 1 236 1 162 1 
119 1 79 1 192 1 176 1 221 1 5 1 241 1 144 2 87 1 127 1 73 2 92 1 112 1 11 1 173 3 130 1 247 1 236 1 162 1 
79 1 192 1 221 1 69 1 5 1 178 1 26 1 144 1 28 1 73 1 112 1 11 1 173 2 130 1 236 1 162 1 34 1 
79 1 192 1 221 1 69 1 5 1 206 1 178 1 144 1 28 1 73 1 112 1 11 1 173 2 130 1 236 1 162 1 34 1 
79 1 192 1 221 1 5 1 178 1 144 1 232 1 28 1 73 1 112 1 11 1 173 2 130 1 116 1 236 1 162 1 34 1 17 1 
79 1 192 1 69 1 221 1 5 1 178 1 144 1 232 1 28 1 73 1 112 1 11 1 173 2 130 1 116 1 236 1 162 1 34 1 17 1 
79 1 192 2 221 1 154 1 28 1 112 2 11 1 173 3 130 1 236 1 
188 1 79 1 192 2 37 1 221 1 28 1 145 2 173 3 130 1 236 1 
188 1 28 1 79 1 145 1 192 1 173 2 130 2 221 1 226 1 236 1 
188 1 79 1 192 1 221 1 28 1 145 1 173 2 130 1 236 1 174 1 
188 1 79 1 192 1 221 1 71 1 28 1 145 1 173 2 130 1 236 1 
101 1 188 1 119 4 79 1 20 1 192 1 221 1 152 1 144 1 109 1 28 1 73 1 145 1 92 1 173 3 130 1 43 1 236 1 
188 1 79 1 192 1 221 1 53 1 28 1 145 1 173 2 130 1 98 1 236 1 
0 1 67 1 107 3 
107 1 
5 1 6 1 7 3 143 1 144 2 10 1 145 2 147 2 148 1 18 1 19 1 21 1 150 3 152 1 24 4 153 1 154 1 27 1 29 1 32 2 162 1 163 3 36 1 37 1 166 1 173 4 44 1 174 2 45 1 175 5 50 2 177 3 54 6 179 3 181 1 56 5 58 3 62 2 63 1 186 4 188 1 66 1 189 2 192 4 68 1 194 4 70 2 196 1 195 2 72 2 197 1 198 3 201 14 81 2 204 3 84 1 85 1 86 1 88 1 210 1 93 1 92 1 212 3 94 2 213 3 218 1 220 1 102 1 103 1 221 1 224 1 227 1 229 3 113 1 233 1 115 1 235 1 237 3 238 1 120 4 119 2 121 4 240 2 122 4 245 2 130 5 249 2 134 2 250 1 251 3 136 3 252 2 137 2 253 3 138 2 
66 1 188 1 189 2 192 2 68 1 194 4 70 2 196 1 5 1 195 2 7 3 143 1 144 2 72 2 10 1 197 1 145 1 198 3 147 2 148 1 201 4 18 1 19 1 81 2 21 1 204 3 24 4 152 1 84 1 153 1 154 1 88 1 27 1 210 1 92 1 93 1 29 1 212 3 213 3 94 2 32 2 162 1 218 1 163 2 102 1 36 1 166 1 37 1 221 1 224 1 227 1 229 2 173 3 113 1 233 1 115 1 235 1 238 1 237 2 44 1 174 2 119 2 120 4 45 1 175 5 240 2 121 4 122 4 177 3 54 6 181 1 179 3 56 5 245 2 58 3 130 3 62 2 249 2 134 2 251 3 136 3 63 1 137 2 252 2 186 4 138 2 253 3 
120 4 45 1 36 1 37 1 194 4 88 1 210 1 113 1 115 1 238 1 63 1 18 1 
66 1 188 1 189 2 192 2 68 1 194 4 70 2 5 1 195 2 7 3 143 1 144 2 72 2 10 1 145 1 198 3 147 2 148 1 201 4 76 1 18 1 19 1 81 2 21 1 22 1 204 3 24 4 152 1 84 1 153 1 154 1 88 1 210 1 92 1 93 1 29 1 212 3 213 3 94 2 32 2 162 1 218 1 163 2 102 1 36 1 37 1 221 1 224 1 227 1 229 2 173 3 113 1 233 1 115 1 235 1 238 1 237 2 44 1 174 2 119 2 120 4 45 1 175 5 240 2 121 4 122 4 177 3 242 1 54 6 181 1 179 3 56 5 245 2 58 3 130 3 62 2 249 2 134 2 251 3 136 3 63 1 137 2 252 2 186 4 138 2 253 3 
66 1 188 1 191 3 192 2 194 4 3 1 196 1 5 1 4 2 142 2 143 1 144 2 10 1 145 1 148 2 201 8 18 1 77 1 21 1 24 2 152 1 84 1 208 2 153 1 154 1 88 1 210 1 92 1 29 1 212 4 94 2 213 4 31 4 32 2 162 1 218 1 102 1 36 1 37 1 38 2 221 1 224 1 227 1 230 2 231 2 171 1 110 1 173 3 113 1 233 1 115 1 238 1 44 1 174 2 46 4 120 4 45 1 119 3 48 1 121 2 122 4 54 4 181 1 61 4 130 3 133 1 185 1 63 1 65 2 
66 1 188 1 189 2 192 2 194 4 70 2 5 1 7 2 143 1 144 2 72 2 10 1 145 1 197 1 198 2 199 2 75 2 147 2 148 1 15 2 201 4 18 1 81 2 21 1 204 2 152 1 24 4 84 1 207 2 153 1 154 1 88 1 210 1 93 1 92 1 29 1 212 3 95 2 213 3 94 2 32 2 162 1 163 2 218 1 102 1 36 1 166 1 37 1 221 1 224 1 227 1 229 2 173 4 113 1 233 1 115 1 237 2 238 1 44 1 174 2 120 4 45 1 119 2 175 4 121 4 240 2 122 4 177 2 54 6 181 1 179 2 56 4 245 2 58 2 59 1 130 3 62 2 249 2 134 2 251 2 136 4 63 1 137 2 252 2 186 4 253 2 138 2 
5 1 7 3 143 1 144 2 145 1 10 1 147 2 148 2 18 1 19 1 21 1 152 1 24 4 154 1 153 1 27 1 29 1 32 2 162 1 163 2 36 1 37 1 166 1 173 3 42 1 44 1 174 2 45 1 175 5 177 3 54 6 179 3 181 1 56 5 58 3 62 2 63 1 186 4 188 1 66 1 189 2 192 2 68 1 194 4 70 2 195 2 196 1 72 2 197 1 198 3 201 4 76 1 81 2 204 3 84 1 85 1 88 1 210 1 93 1 92 1 94 2 213 3 212 3 218 1 102 1 221 1 224 1 227 1 229 2 113 1 233 1 115 1 235 1 237 2 238 1 120 4 119 3 121 4 240 2 122 4 242 1 245 2 130 4 249 2 134 2 136 3 251 3 252 2 137 2 253 3 138 2 
120 1 194 1 115 1 63 1 88 1 
66 1 188 1 189 2 192 2 68 1 194 4 70 2 5 1 195 2 7 3 143 1 144 2 72 2 10 1 197 1 145 1 198 3 147 2 148 1 201 4 76 1 19 1 81 2 21 1 204 3 24 4 152 1 84 1 153 1 154 1 88 1 27 1 210 1 92 1 93 1 29 1 212 3 213 3 94 2 32 2 162 1 218 1 163 2 102 1 36 1 166 1 37 1 221 1 224 1 227 1 229 2 173 3 113 1 233 1 115 1 235 1 238 1 237 2 44 1 174 2 119 2 120 4 45 1 175 5 240 2 121 4 122 4 177 3 242 1 54 6 181 1 179 3 56 5 245 2 58 3 130 3 62 2 249 2 134 2 251 3 136 3 63 1 137 2 252 2 186 4 138 2 253 3 
66 1 188 1 189 2 192 2 68 1 194 4 70 2 5 1 195 2 7 3 143 1 144 2 72 2 10 1 197 1 145 1 198 3 147 2 148 1 201 4 76 1 19 1 81 2 21 1 204 3 24 4 152 1 84 1 153 1 154 1 88 1 27 1 210 1 92 1 93 1 29 1 212 3 213 3 94 2 32 2 162 1 218 1 163 2 102 1 36 1 166 1 37 1 221 1 106 1 224 1 227 1 229 2 173 3 113 1 233 1 235 1 238 1 237 2 44 1 174 2 119 2 120 4 45 1 175 5 240 2 121 4 122 4 177 3 242 1 54 6 181 1 179 3 56 5 245 2 58 3 130 3 62 2 249 2 134 2 251 3 136 3 63 1 137 2 252 2 186 4 138 2 253 3 
5 1 7 3 143 1 8 1 144 2 145 4 10 1 13 1 147 2 148 1 15 2 18 1 19 1 21 1 152 1 24 6 154 1 153 4 29 1 32 2 162 1 163 5 36 1 37 1 166 1 173 9 44 1 174 2 45 1 175 5 177 3 54 6 179 3 181 1 56 5 58 3 59 1 62 2 63 1 186 4 188 4 66 1 189 2 192 5 68 1 194 4 70 2 195 2 72 2 197 1 198 3 199 2 75 2 201 6 76 1 81 2 204 3 207 2 84 1 88 1 210 1 93 4 91 1 92 1 94 2 213 3 95 2 212 3 97 1 218 1 102 1 221 4 224 1 227 1 229 5 113 1 233 1 115 1 235 1 237 5 238 1 120 4 119 2 121 6 240 2 122 4 242 1 126 1 245 2 130 6 249 2 134 2 136 5 251 3 252 2 137 2 253 3 138 2 
66 1 188 1 189 2 192 2 194 4 70 2 196 1 5 1 7 2 143 1 144 2 72 2 10 1 145 1 197 1 198 2 199 2 75 2 147 2 148 1 15 2 201 4 18 1 81 2 21 1 204 2 152 1 24 4 84 1 207 2 153 1 154 1 88 1 210 1 93 1 92 1 29 1 212 3 95 2 213 3 94 2 160 1 32 2 162 1 163 2 218 1 102 1 36 1 166 1 37 1 221 1 224 1 227 1 229 2 173 3 113 1 233 1 115 1 237 2 238 1 44 1 174 2 120 4 45 1 119 2 175 4 121 4 240 2 122 4 177 2 54 6 181 1 179 2 56 4 245 2 58 2 59 1 130 3 62 2 249 2 134 2 251 2 136 4 63 1 137 2 252 2 186 4 253 2 138 2 
5 1 143 1 7 2 144 2 10 1 11 1 147 2 148 1 15 2 18 1 21 1 24 4 151 2 154 1 153 1 29 1 160 1 32 2 162 1 163 2 36 1 166 1 39 1 173 3 44 1 174 2 47 1 45 1 175 4 177 2 54 6 179 2 181 1 55 1 56 4 58 2 59 1 62 2 63 1 186 4 64 1 66 1 189 2 192 2 194 4 70 2 196 1 72 2 197 1 198 2 75 2 199 2 200 2 201 4 81 2 204 2 207 2 84 1 88 1 89 1 210 1 92 1 93 1 94 2 213 3 95 2 212 3 216 1 218 1 102 1 221 1 224 1 222 2 227 1 229 2 112 1 113 1 233 1 115 1 117 1 238 1 237 2 239 2 118 1 119 2 120 4 240 2 121 4 122 4 124 1 245 2 129 1 130 3 247 1 248 2 249 2 134 2 136 4 251 2 252 2 137 2 138 2 253 2 
190 1 
12 1 201 1 220 1 
168 1 201 1 
205 1 178 1 54 1 125 1 144 1 156 1 57 1 212 1 162 1 201 1 34 1 17 1 
178 1 54 1 201 1 162 1 125 1 34 1 144 1 
168 1 201 1 
140 1 212 1 54 1 162 1 201 1 144 1 
172 1 201 1 
168 1 201 1 
9 1 201 1 
9 1 201 1 
9 1 201 1 
46 1 105 1 201 1 
83 1 31 1 201 1 35 1 
192 1 122 2 51 1 221 1 123 1 168 1 153 1 230 1 41 1 112 1 11 1 173 2 130 1 14 2 201 2 16 1 219 1 
80 1 
41 1 11 1 112 1 192 1 146 1 173 2 130 1 221 1 123 1 16 1 153 1 230 1 219 1 
11 1 112 1 192 1 93 1 173 2 130 1 221 1 237 1 153 1 229 1 163 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 157 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
192 1 221 1 40 1 153 1 229 1 170 1 93 1 112 1 11 1 173 2 130 1 237 1 163 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 157 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 42 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 136 2 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 2 70 1 5 1 7 1 144 1 72 1 10 1 11 1 74 1 198 1 201 3 17 3 81 1 23 1 204 1 205 2 206 1 207 1 85 1 153 1 156 2 93 1 212 2 32 1 162 1 163 2 220 3 34 1 103 1 221 1 229 2 170 1 232 2 112 2 173 3 237 2 44 1 174 1 175 2 122 2 177 1 178 1 54 2 181 1 179 1 243 1 56 2 245 1 57 2 58 1 130 4 246 1 249 1 62 1 134 1 251 1 136 1 137 1 252 1 186 2 253 1 138 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 70 1 7 1 144 1 72 1 11 1 198 1 75 1 200 1 147 1 148 1 201 2 81 1 204 1 151 1 24 2 84 1 153 1 92 1 93 1 94 1 213 3 32 1 216 1 218 1 163 1 221 1 222 1 229 1 112 1 173 3 237 1 239 1 174 1 119 1 175 2 240 1 121 2 122 2 177 1 54 3 179 1 56 2 245 1 58 1 130 1 247 1 248 1 249 1 62 1 134 1 136 1 251 1 252 1 137 1 186 2 138 1 253 1 
192 1 221 1 151 1 153 1 229 1 170 1 93 1 112 1 11 1 173 2 130 1 237 1 163 1 
189 1 70 1 7 1 144 1 72 1 198 1 75 1 199 1 200 1 147 1 148 1 201 2 15 1 81 1 204 1 151 1 152 1 24 2 84 1 207 1 92 1 213 3 94 1 95 1 32 1 216 1 218 1 37 1 222 1 173 1 239 1 174 1 119 1 175 2 240 1 121 2 122 2 177 1 54 3 179 1 56 2 245 1 58 1 248 1 249 1 62 1 134 1 136 2 251 1 252 1 137 1 186 2 138 1 253 1 
189 1 192 1 70 1 7 1 144 1 72 1 11 1 198 1 75 1 200 1 147 1 148 1 201 2 81 1 204 1 151 1 24 2 84 1 153 1 92 1 93 1 94 1 213 3 32 1 216 1 218 1 163 1 221 1 222 1 229 1 112 1 173 3 42 1 237 1 239 1 174 1 119 1 175 2 240 1 121 2 122 2 177 1 54 3 179 1 56 2 245 1 58 1 130 1 247 1 248 1 249 1 62 1 134 1 136 1 251 1 137 1 252 1 186 2 138 1 253 1 
188 1 189 1 192 1 70 1 7 1 144 1 72 1 145 1 198 1 75 1 200 1 147 1 148 1 201 2 81 1 204 1 151 1 24 2 152 1 84 1 153 1 92 1 93 1 94 1 213 3 32 1 216 1 163 1 218 1 37 1 221 1 222 1 229 1 173 3 42 1 237 1 239 1 174 1 119 1 175 2 240 1 121 2 122 2 177 1 54 3 179 1 56 2 245 1 58 1 130 1 248 1 249 1 62 1 134 1 136 1 251 1 137 1 252 1 186 2 138 1 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 3 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 147 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
78 1 121 1 75 1 24 1 201 1 
78 1 121 1 240 1 24 1 201 1 
121 1 75 1 30 1 24 1 161 1 201 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 70 1 5 1 7 1 144 1 72 1 10 1 11 1 198 1 75 1 199 1 147 1 201 2 15 1 17 4 81 1 204 1 205 3 24 2 207 1 153 1 156 3 93 1 95 1 94 1 212 3 32 1 162 1 163 1 34 1 221 1 229 1 170 1 232 1 112 1 173 2 237 1 44 1 174 1 175 2 240 1 121 2 122 2 177 1 178 1 54 3 125 1 181 1 179 1 56 2 245 1 57 3 58 1 130 2 249 1 62 1 134 1 251 1 136 2 137 1 252 1 186 2 253 1 138 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 42 1 147 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 157 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 157 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 168 1 7 1 229 1 72 1 11 1 112 1 173 2 198 1 237 1 175 2 81 1 122 3 204 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 136 1 251 1 137 1 163 1 252 1 186 3 253 1 
192 1 221 1 153 1 229 2 170 1 93 1 112 2 11 1 173 3 130 1 237 2 163 2 
189 2 192 1 70 2 5 1 7 2 144 2 72 2 10 1 11 1 198 2 75 2 200 2 147 2 148 1 201 4 81 2 204 2 151 2 24 4 84 1 85 1 153 1 89 1 92 1 93 1 212 3 94 2 213 3 32 2 216 1 162 1 218 1 163 1 39 1 221 1 222 2 229 1 112 1 173 3 117 1 237 1 239 2 174 2 118 1 47 1 119 1 175 4 240 2 121 4 122 4 124 1 177 2 54 6 181 1 179 2 55 1 56 4 245 2 58 2 129 1 130 2 247 1 248 2 249 2 62 2 134 2 136 2 251 2 137 2 252 2 64 1 186 4 138 2 253 2 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 62 1 134 1 251 1 136 1 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 157 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
192 1 221 1 153 1 229 2 170 1 93 1 112 2 11 1 173 3 130 1 237 2 163 2 
189 1 192 1 221 1 70 1 7 1 229 1 170 1 72 1 11 1 112 1 198 1 173 2 199 1 237 1 15 1 175 2 81 1 122 2 204 1 207 1 177 1 153 1 179 1 56 2 245 1 58 1 93 1 130 1 95 1 62 1 134 1 251 1 136 2 137 1 163 1 252 1 186 2 253 1 
139 1 192 1 221 1 2 1 222 1 225 1 230 1 144 1 232 1 10 1 11 1 112 1 173 2 200 1 201 4 239 1 17 3 174 1 149 1 203 1 205 2 124 1 178 1 53 1 54 2 153 1 180 1 181 1 209 1 156 2 57 2 130 1 159 1 212 2 248 1 249 1 98 1 32 1 33 1 162 1 34 1 220 3 187 1 138 1 
192 1 221 1 2 1 5 1 225 1 230 1 144 1 232 1 10 1 11 1 112 1 173 2 201 4 44 1 17 3 174 1 119 1 149 1 176 1 203 1 205 2 241 1 178 1 26 1 54 2 153 1 181 1 209 1 87 1 156 2 127 1 57 2 130 2 212 2 249 1 32 1 33 1 162 1 34 1 220 3 138 1 
189 1 192 1 68 1 221 1 70 1 7 3 229 1 72 1 112 1 11 1 198 3 173 2 42 1 234 1 147 1 235 2 237 1 175 4 19 1 81 1 122 2 204 3 177 3 153 1 179 3 56 4 245 1 58 3 93 1 130 1 62 1 134 1 251 3 136 3 137 1 252 1 163 1 186 2 253 3 
193 1 192 1 68 1 221 1 168 1 195 1 7 1 229 1 112 1 11 1 198 1 173 2 235 1 237 1 201 1 78 1 175 1 19 1 121 1 204 1 24 1 177 1 153 1 179 1 56 1 58 1 93 1 130 1 251 1 136 1 163 1 253 1 
19 1 175 1 192 1 68 1 221 1 204 1 7 1 177 1 153 1 229 1 179 1 56 1 11 1 112 1 93 1 58 1 173 2 198 1 130 1 235 1 237 1 136 1 251 1 163 1 253 1 
192 1 68 1 221 1 7 3 229 1 112 1 11 1 198 3 173 2 235 3 237 1 175 3 19 1 204 3 177 3 153 1 179 3 56 3 58 3 93 1 211 1 130 1 251 3 136 3 163 1 253 3 
19 1 175 1 192 1 68 1 221 1 204 1 71 1 7 1 177 1 153 1 229 1 179 1 56 1 11 1 112 1 93 1 58 1 173 2 198 1 130 1 235 1 237 1 136 1 251 1 163 1 253 1 
192 1 68 1 221 1 71 1 153 1 229 1 93 1 112 1 11 1 173 2 130 1 235 1 237 1 163 1 
90 1 173 1 131 1 155 1 
49 1 173 1 155 1 
167 1 173 1 214 2 254 1 
167 1 173 1 25 1 99 1 254 1 
132 1 155 1 
232 1 57 1 205 1 212 1 125 1 17 1 156 1 
111 1 124 1 248 1 200 1 162 1 239 1 144 1 
232 1 57 1 205 1 212 1 17 1 156 1 
10 1 162 1 181 1 144 1 
175 2 122 1 234 1 134 1 179 1 217 1 186 1 
175 1 179 1 
175 1 122 1 168 1 134 1 201 1 186 1 
175 1 179 1 
122 1 168 1 201 1 186 1 
188 1 
145 1 
145 1 
112 1 
11 1 
112 1 
188 1 164 1 192 1 221 1 82 1 52 1 223 1 153 1 230 1 244 1 145 1 184 1 173 2 130 1 114 1 
46 1 188 1 164 1 192 1 122 2 221 1 168 1 82 1 52 1 223 1 169 1 153 1 230 1 145 1 158 2 184 1 173 2 130 1 114 1 201 1 
165 1 
60 1 168 1 201 2 220 2 
182 1 168 1 201 2 220 2 
188 1 192 1 144 1 145 1 200 1 148 1 201 2 152 1 82 1 84 1 85 1 153 1 92 1 158 1 213 2 32 1 216 1 218 1 220 2 164 1 165 1 221 1 223 1 222 1 169 1 228 1 230 1 173 3 114 1 174 1 239 1 119 1 122 1 52 1 54 2 244 1 182 1 60 1 184 1 130 2 248 1 249 1 138 1 
128 1 146 1 184 1 221 1 153 1 
188 1 192 1 5 1 144 1 145 1 10 1 201 3 17 4 205 3 82 1 85 1 153 1 156 3 158 1 212 3 31 1 32 1 162 1 220 2 34 1 164 1 165 1 221 1 223 1 169 1 230 1 232 1 173 2 114 1 44 1 174 1 46 1 122 1 52 1 178 1 54 2 181 1 125 1 182 1 57 3 60 1 184 1 130 3 249 1 138 1 
188 1 164 1 192 1 221 1 223 1 168 1 169 1 230 1 172 1 145 1 173 2 114 1 201 1 122 1 52 1 82 1 153 1 184 1 158 1 130 1 
188 1 164 1 192 1 1 1 221 1 82 1 223 1 52 1 153 1 230 1 145 1 184 1 173 2 130 1 114 1 
188 2 164 2 192 2 1 1 221 2 82 2 223 2 52 2 153 2 230 2 128 1 145 2 146 1 184 2 173 4 130 2 114 2 
188 1 164 1 192 1 221 1 71 1 82 1 52 1 223 1 153 1 230 1 145 1 184 1 173 2 130 1 114 1 
188 2 164 2 192 2 1 1 221 2 82 2 223 2 52 2 153 2 230 2 244 1 145 2 184 2 173 4 130 2 114 2 
188 1 164 1 192 1 221 1 82 1 223 1 52 1 153 1 230 1 128 1 145 1 146 1 184 1 173 2 130 1 114 1 
46 1 188 1 48 1 191 1 192 1 122 2 221 1 3 1 168 1 83 1 153 1 230 1 145 1 61 2 173 2 130 1 133 1 201 2 65 1 77 1 
188 1 192 1 191 1 221 1 3 1 5 1 142 1 230 1 144 1 231 1 232 1 10 1 145 1 173 2 201 1 44 1 17 3 174 1 77 1 46 1 48 1 122 1 205 2 208 1 85 1 178 1 54 1 153 1 125 1 181 1 156 2 57 2 61 1 130 3 212 2 31 1 133 1 32 1 162 1 65 1 34 1 
191 1 122 1 61 1 38 1 234 1 4 1 
168 1 142 1 
168 1 231 1 
46 1 188 1 48 1 121 1 191 2 192 1 122 1 38 1 221 1 3 1 24 1 4 1 208 1 153 1 230 1 145 1 61 1 173 2 130 1 133 1 201 2 77 1 
188 1 192 1 191 2 221 1 38 1 3 1 105 1 4 1 230 1 145 1 173 2 234 1 201 2 77 1 46 1 48 1 121 1 122 1 24 1 208 1 153 1 61 1 130 1 133 1 135 1 
208 1 
188 1 192 1 191 2 38 1 221 1 3 1 222 1 4 1 142 1 230 1 144 1 231 1 145 1 173 3 200 1 148 1 201 3 239 1 174 1 77 1 46 2 119 1 48 1 121 1 122 2 24 1 152 1 84 1 85 1 208 1 153 1 54 2 92 1 61 2 130 2 94 1 213 4 248 1 31 2 133 1 32 1 216 1 215 1 218 1 65 1 
48 1 191 1 146 1 3 1 133 1 77 1 
188 1 191 2 192 1 3 1 142 1 5 1 4 1 144 1 145 1 10 1 201 3 17 5 77 1 205 4 24 1 85 1 208 1 153 1 156 4 212 4 94 1 31 2 32 1 162 1 34 1 221 1 38 1 230 1 231 1 232 1 173 2 44 1 174 1 46 2 48 1 121 1 122 2 178 1 54 2 181 1 125 1 57 4 61 2 130 3 133 1 65 1 
48 1 191 1 146 1 3 1 133 1 77 1 
188 1 192 1 191 1 221 1 3 1 168 1 230 1 145 1 173 2 201 2 46 1 122 2 83 1 153 1 61 2 130 1 96 1 133 1 215 1 65 1 100 1 

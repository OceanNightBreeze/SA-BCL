#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 98 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 77 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 101 168 118 245 157 154 175 178 41 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer; | RETURN | 6364 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | STATEMENT | 11921 | stmt -> ;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | ASSIGN | 3259 | = null
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
182 1 203 1 193 1 131 1 135 1 
215 2 138 1 120 1 
182 1 203 1 193 1 131 1 6 1 135 1 
153 1 137 1 23 2 230 1 10 1 29 1 119 1 33 2 14 1 149 1 75 1 
55 1 56 1 122 1 137 1 126 1 23 3 25 4 230 1 10 1 203 1 47 1 29 1 68 1 220 1 33 1 14 1 149 1 75 1 
230 1 10 1 137 1 115 1 29 1 14 1 33 1 15 1 149 1 75 1 23 2 
137 1 23 2 230 3 10 1 29 2 190 1 33 1 14 2 149 1 75 1 
56 1 137 1 1 1 126 1 64 1 23 4 25 1 230 2 10 1 203 1 29 1 68 1 33 2 14 2 149 1 75 1 
10 1 137 1 224 1 75 1 
137 1 79 1 23 2 230 1 10 1 29 2 71 1 33 1 14 1 149 1 75 1 
56 1 35 1 139 1 126 1 23 3 25 1 230 1 10 1 203 2 158 1 29 1 68 2 118 1 144 1 206 1 33 1 14 1 135 1 149 1 75 1 
56 1 35 1 126 1 23 3 25 1 230 1 10 1 203 2 158 1 29 1 68 2 118 1 144 1 206 1 33 1 14 1 135 1 149 1 75 1 
137 1 3 1 139 1 80 1 22 1 23 2 230 1 10 1 203 1 29 1 68 1 118 1 33 1 14 1 135 1 149 1 75 1 
136 1 137 1 3 1 139 1 80 1 23 2 230 1 10 1 203 1 29 1 68 1 118 1 33 1 14 1 135 1 149 1 75 1 
37 1 137 1 3 1 80 1 23 2 230 1 10 1 203 1 29 1 68 1 118 1 31 1 89 1 33 1 14 1 135 1 149 1 75 1 
37 1 137 1 3 1 139 1 80 1 23 2 230 1 10 1 203 1 29 1 68 1 118 1 31 1 89 1 33 1 14 1 135 1 149 1 75 1 
137 1 23 3 230 2 10 1 29 1 190 1 33 2 14 1 149 1 75 1 
181 1 137 1 23 3 230 2 10 1 29 1 173 2 14 1 75 1 209 1 
244 1 230 1 10 1 137 1 29 2 173 1 14 1 75 1 209 1 23 2 
137 1 23 2 66 1 230 1 10 1 29 1 173 1 14 1 75 1 209 1 
35 1 137 1 126 1 23 3 25 1 230 1 10 1 203 1 158 1 29 1 68 1 173 1 144 1 206 1 148 1 14 1 75 1 209 1 
137 1 1 1 126 1 4 1 23 3 25 2 230 1 10 1 203 1 29 1 68 1 173 1 148 1 14 1 75 1 209 1 
26 1 0 1 234 3 
234 1 
76 1 1 1 193 1 194 1 81 1 4 1 83 14 84 1 141 1 199 3 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 92 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 36 1 222 3 110 2 162 1 225 1 41 1 168 2 169 1 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 240 1 125 2 126 1 185 1 63 2 62 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 237 4 181 1 185 1 41 1 243 1 85 1 218 1 204 1 178 1 207 1 54 4 
76 1 1 1 193 1 4 1 83 5 7 1 85 1 10 1 9 1 203 2 204 1 205 1 88 1 207 1 148 1 150 1 209 1 95 2 154 1 96 1 19 1 155 1 97 1 156 2 23 3 25 2 101 1 157 1 159 1 104 1 218 1 29 2 221 1 41 1 168 2 229 2 230 1 231 1 45 2 172 1 232 1 116 1 173 1 118 1 176 1 175 1 117 1 178 1 54 4 237 4 181 1 123 2 58 2 184 2 59 1 126 1 185 1 63 2 187 1 243 1 66 1 245 1 135 1 74 4 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 1 1 193 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 10 1 85 1 9 1 203 2 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 104 1 218 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 109 1 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
21 1 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
237 1 204 1 178 1 41 1 54 1 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 104 1 218 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 98 1 101 1 100 1 216 1 157 1 102 1 104 1 218 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 77 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 2 200 1 201 1 85 1 10 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 148 1 93 1 209 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 218 1 104 1 29 2 219 2 107 1 108 1 221 1 161 1 222 3 110 2 225 1 41 1 169 1 168 2 170 1 230 1 114 1 232 4 173 1 118 1 175 1 117 1 177 1 178 1 235 2 236 1 54 4 237 4 181 1 125 2 126 1 185 1 63 2 242 2 243 1 66 1 188 1 245 1 129 1 134 1 135 1 74 3 
76 1 1 1 193 1 194 1 81 1 4 1 83 4 84 1 141 1 8 3 200 1 201 1 10 1 85 1 9 1 203 2 12 1 87 1 204 1 143 1 145 1 207 1 149 1 93 1 96 1 154 1 20 1 213 2 212 1 155 4 214 1 97 1 156 3 23 3 25 2 101 1 100 1 216 1 157 1 102 1 104 1 218 1 29 2 219 3 30 1 107 1 33 1 108 1 221 1 161 1 222 4 40 1 110 2 225 1 41 1 169 2 168 2 170 1 42 1 230 1 114 1 232 4 118 1 175 1 117 1 177 1 178 1 52 1 235 2 179 1 236 1 54 4 237 4 56 1 125 2 126 1 185 1 63 2 242 3 243 1 66 1 188 1 245 1 129 1 134 1 135 1 73 1 74 3 
36 1 83 1 94 1 
239 1 83 1 
82 1 83 1 
82 1 83 1 
239 1 83 1 
37 1 2 1 3 1 80 1 226 1 83 1 156 1 203 1 11 1 28 1 174 1 135 1 
203 1 3 1 28 1 80 1 83 1 135 1 156 1 
239 1 83 1 
202 1 203 1 226 1 83 1 135 1 156 1 
83 1 53 1 
82 1 83 1 
45 1 83 1 106 1 
16 1 184 1 83 1 133 1 
239 1 241 1 61 1 63 2 83 2 7 1 23 2 230 1 10 1 104 1 48 1 29 1 69 1 70 2 34 1 33 1 149 1 
13 1 
224 1 241 1 61 1 7 1 23 2 230 1 10 1 104 1 29 1 69 1 34 1 33 1 149 1 
20 2 212 2 166 1 23 3 230 1 10 1 104 1 29 1 145 2 33 2 149 1 93 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
230 1 10 1 20 1 212 1 104 1 29 1 145 1 33 1 149 1 23 2 93 1 
193 1 4 1 81 1 83 2 84 1 141 1 8 1 200 1 201 1 10 1 203 1 86 1 143 1 146 1 145 1 149 1 93 1 96 1 20 1 212 1 213 2 155 2 97 1 23 3 156 3 25 1 216 1 100 1 102 1 104 1 29 1 219 1 30 1 107 1 33 1 108 1 161 1 222 2 40 1 110 2 225 1 168 1 170 1 230 1 114 1 232 2 177 1 52 1 179 1 56 1 125 1 126 1 242 1 63 2 66 1 188 1 129 1 73 1 74 3 
20 1 212 1 166 1 23 2 230 1 10 1 104 1 29 1 146 1 145 1 33 1 149 1 93 1 
193 1 4 1 81 1 83 2 84 1 141 1 8 1 200 1 201 1 203 1 86 1 143 1 146 1 148 1 208 1 96 1 211 1 213 2 155 2 97 1 156 3 23 1 25 1 216 1 100 1 102 1 219 2 30 1 107 1 108 1 222 2 161 1 40 1 110 2 225 1 168 1 170 1 114 1 232 2 50 1 177 1 52 1 179 1 181 1 121 1 125 1 126 1 63 2 242 1 66 1 188 1 129 1 73 1 74 3 191 1 
193 1 4 1 81 1 83 2 84 1 141 1 8 1 200 1 201 1 10 1 203 1 86 1 143 1 146 1 145 1 149 1 93 1 96 1 20 1 212 1 213 2 155 2 97 1 23 3 156 3 25 1 216 1 100 1 102 1 104 1 29 1 219 1 30 1 107 1 33 1 108 1 161 1 222 2 40 1 110 2 225 1 168 1 170 1 230 1 114 1 232 2 177 1 52 1 179 1 236 1 56 1 125 1 126 1 242 1 63 2 66 1 188 1 129 1 73 1 74 3 
193 1 4 1 81 1 83 2 84 1 141 1 8 1 200 1 201 1 10 1 203 1 86 1 143 1 146 1 145 1 148 1 93 1 209 1 96 1 20 1 212 1 213 2 155 2 97 1 23 3 156 3 25 1 100 1 216 1 102 1 104 1 29 1 219 1 30 1 107 1 108 1 161 1 222 2 40 1 110 2 225 1 168 1 170 1 230 1 114 1 232 2 173 1 177 1 52 1 179 1 236 1 181 1 125 1 126 1 242 1 63 2 66 1 188 1 129 1 73 1 74 3 
161 1 222 2 110 2 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 211 1 20 1 212 1 213 2 242 1 63 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 145 1 208 1 149 1 93 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 201 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 201 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 201 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 2 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 201 1 114 1 143 1 145 1 208 1 149 1 93 1 239 1 211 1 20 1 213 2 212 1 63 2 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 201 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
113 1 86 1 232 1 155 1 83 1 
113 1 232 1 125 1 155 1 83 1 
112 1 86 1 232 1 155 1 83 1 72 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
2 3 3 1 193 1 80 1 81 1 195 1 83 2 84 1 141 1 8 1 200 1 201 1 10 1 203 1 11 3 86 1 143 1 145 1 89 1 208 1 149 1 93 1 211 1 20 1 212 1 213 2 155 2 23 2 156 3 100 1 101 1 216 1 102 1 104 1 28 1 29 2 219 2 107 1 33 1 108 1 221 1 161 1 222 2 37 4 110 2 225 1 166 1 226 3 168 1 170 1 230 1 114 1 232 2 174 3 50 1 118 1 177 1 121 1 125 1 242 1 63 2 66 1 188 1 129 1 135 1 191 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 236 1 93 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 208 1 149 1 93 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 186 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 186 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 242 1 63 3 186 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
151 1 20 1 212 1 166 1 23 2 230 1 10 1 104 1 29 1 145 1 33 1 149 1 93 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 239 1 20 1 213 2 212 1 242 1 63 3 186 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 236 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
222 2 161 1 110 3 225 1 81 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 93 1 121 1 239 1 20 1 213 2 212 1 242 1 63 3 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 
136 1 2 2 3 1 80 1 81 1 195 1 83 3 5 1 84 1 198 1 141 1 8 1 200 1 10 1 203 1 11 2 143 1 145 2 89 2 147 1 149 1 93 1 20 2 213 2 212 2 23 3 156 2 100 1 101 1 216 1 102 1 104 1 28 1 29 4 219 1 107 1 33 2 108 1 221 1 222 2 36 3 161 1 37 3 110 2 225 1 166 1 226 2 168 1 170 1 230 2 114 1 174 2 118 1 177 1 63 2 242 1 64 1 66 1 188 1 129 1 132 1 71 1 135 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 10 1 114 1 143 1 145 1 149 1 93 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 191 1 
20 2 212 2 166 1 23 3 230 1 10 1 104 1 29 1 145 2 33 2 149 1 93 1 
193 2 4 1 81 2 195 1 83 4 84 2 141 2 8 2 200 2 201 2 10 1 203 2 86 2 143 2 146 2 145 1 149 1 93 1 96 1 20 1 212 1 213 4 155 4 24 1 97 1 23 3 156 6 25 1 99 1 101 1 216 2 100 2 102 2 104 1 29 2 219 2 105 1 30 2 107 2 33 1 108 2 161 2 222 4 40 2 110 4 225 2 226 3 228 1 168 2 170 2 230 1 46 1 114 2 232 4 118 1 177 2 52 1 179 2 56 1 124 1 125 2 126 1 242 2 63 4 66 2 188 2 129 2 130 1 71 1 246 1 135 1 73 2 74 3 192 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 208 1 149 1 93 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 1 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
222 2 161 1 110 3 225 1 81 1 166 1 84 1 141 1 8 1 170 1 200 1 230 1 201 1 10 1 114 1 143 1 50 1 145 1 208 1 149 1 93 1 121 1 239 1 211 1 20 1 213 2 212 1 63 3 242 1 186 2 23 2 188 1 100 1 129 1 102 1 104 1 29 1 219 2 107 1 33 1 108 1 191 1 
221 1 35 1 36 3 37 3 2 2 3 1 111 1 80 1 195 1 226 2 197 1 83 4 7 1 168 1 230 1 10 1 11 2 203 1 174 2 49 1 144 1 118 1 206 1 177 1 89 1 90 1 149 1 210 1 22 1 156 2 23 2 25 1 66 1 216 1 101 1 158 1 189 1 104 1 29 2 33 1 135 1 
36 3 37 3 40 1 2 2 3 1 111 1 80 1 195 1 226 2 197 1 83 4 7 1 168 1 230 1 43 1 10 1 11 2 203 1 115 1 174 2 49 1 89 1 177 1 15 1 90 1 149 1 179 1 210 1 238 1 183 1 156 2 23 2 66 1 101 1 216 1 189 1 104 1 27 1 29 1 30 1 33 1 246 1 73 1 135 1 
222 4 161 1 110 2 225 1 81 1 84 1 141 1 169 2 8 3 170 1 200 1 230 1 201 1 10 1 114 1 143 1 145 1 149 1 236 1 93 1 20 1 213 2 212 1 63 2 242 3 214 1 23 2 215 1 188 1 100 1 129 1 102 1 104 1 29 1 219 3 107 1 134 1 33 1 108 1 
222 3 20 1 212 1 242 3 214 1 169 3 8 3 23 2 42 1 230 1 10 1 104 1 29 1 219 3 145 1 33 1 134 1 149 1 93 1 
222 1 20 1 212 1 242 1 214 1 169 1 8 1 23 2 230 1 10 1 104 1 29 1 219 1 145 1 119 1 33 1 134 1 149 1 93 1 
20 1 212 1 214 1 169 1 23 2 230 1 10 1 104 1 29 1 145 1 119 1 33 1 149 1 93 1 
222 1 20 1 212 1 242 1 214 1 169 1 8 1 23 2 230 1 10 1 104 1 29 1 219 1 145 1 33 1 134 1 149 1 93 1 
222 1 164 1 83 1 169 1 8 1 230 1 10 1 113 1 232 1 145 1 149 1 235 1 93 1 239 1 20 1 212 1 242 1 155 1 214 1 23 2 104 1 29 1 219 1 134 1 33 1 
17 1 217 1 163 1 23 1 
152 1 153 1 142 1 127 1 23 1 
78 1 163 1 23 1 
160 2 153 1 142 1 23 1 
163 1 32 1 
37 1 11 1 2 1 174 1 89 1 226 1 
101 1 203 1 195 1 135 1 
40 1 203 1 51 1 135 1 73 1 246 1 179 1 
37 1 11 1 2 1 28 1 174 1 89 1 226 1 
110 1 239 1 213 1 63 1 83 1 141 1 
213 1 108 1 
110 1 239 1 63 1 83 1 
215 1 110 1 213 2 63 1 108 1 65 1 141 1 
213 1 108 1 
173 1 
209 1 
173 1 
33 1 
33 1 
149 1 
160 1 18 1 57 1 223 1 165 1 167 1 7 1 23 2 230 1 67 1 44 1 10 1 104 1 29 1 91 1 
160 1 18 1 57 1 223 1 165 1 167 1 7 1 23 2 230 1 44 1 10 1 104 1 29 1 119 1 91 1 
160 2 18 2 57 2 223 2 165 2 167 2 7 2 23 4 230 2 67 1 44 2 10 2 103 1 104 2 29 2 91 2 
160 1 18 1 57 1 223 1 224 1 165 1 167 1 227 1 7 1 23 2 230 1 44 1 10 1 104 1 29 1 91 1 
160 1 180 1 38 1 18 1 57 1 239 1 223 1 165 1 63 1 83 3 167 1 7 1 23 2 230 1 45 2 44 1 10 1 104 1 29 1 91 1 
160 1 18 1 57 1 223 1 165 1 167 1 7 1 23 2 230 1 44 1 10 1 103 1 104 1 29 1 91 1 
160 2 18 2 57 2 223 2 224 1 165 2 167 2 227 1 7 2 23 4 230 2 44 2 10 2 103 1 104 2 29 2 91 2 
160 1 180 1 38 2 18 1 57 1 239 1 223 1 165 1 63 2 83 1 167 1 7 1 23 2 230 1 45 1 44 1 10 1 104 1 29 1 91 1 
196 1 
36 2 39 1 239 1 83 2 
36 2 239 1 60 1 83 2 
160 1 36 2 38 1 39 1 40 1 223 1 165 1 4 1 196 1 83 2 167 1 7 1 168 1 230 1 10 1 44 1 203 1 233 1 177 1 52 1 179 1 91 1 180 1 56 1 96 1 18 1 57 1 60 1 126 1 63 1 97 1 156 2 23 3 66 1 25 1 67 1 216 1 104 1 29 2 30 1 71 1 73 1 74 2 
10 1 224 1 104 1 167 1 227 1 
160 1 221 1 36 2 38 1 37 4 39 1 223 1 2 3 3 1 80 1 165 1 195 1 226 3 196 1 83 3 167 1 7 1 168 1 230 1 45 1 10 1 44 1 11 3 203 1 174 3 118 1 177 1 89 1 91 1 180 1 18 1 57 1 184 1 60 1 63 1 156 2 23 2 66 1 216 1 101 1 104 1 28 1 29 3 71 1 135 1 
172 1 123 1 224 1 116 1 176 1 205 1 
16 1 95 2 160 1 239 1 123 1 63 2 83 2 140 1 7 1 23 2 128 1 230 1 45 1 172 1 171 1 10 1 104 1 29 1 116 1 150 1 91 1 
95 1 160 1 138 1 19 1 123 2 63 1 155 1 83 2 7 1 23 2 215 1 230 1 231 1 45 1 172 1 10 1 159 1 104 1 232 1 29 1 116 1 176 1 205 1 106 1 91 1 
19 1 
160 1 40 1 193 1 4 1 83 3 7 1 168 1 229 1 230 1 231 1 45 2 10 1 172 1 203 1 232 1 116 1 176 1 205 1 52 1 179 1 150 1 91 1 95 2 56 1 96 1 19 1 123 2 58 1 184 2 126 1 63 2 155 1 97 1 23 3 156 2 128 1 25 1 66 1 159 1 104 1 29 2 30 1 71 1 73 1 74 4 
172 1 123 1 224 1 116 1 176 1 205 1 
160 1 221 1 37 5 2 4 193 1 3 1 80 1 195 1 226 4 83 3 7 1 168 1 229 1 230 1 231 1 45 2 10 1 172 1 11 4 203 1 232 1 174 4 116 1 176 1 118 1 89 1 205 1 150 1 91 1 95 2 19 1 123 2 58 1 184 2 63 2 155 1 156 2 23 2 66 1 101 1 159 1 104 1 28 1 29 3 71 1 135 1 
16 1 95 2 160 1 239 1 123 1 63 2 83 2 7 1 23 2 230 1 45 1 172 1 10 1 104 1 29 1 116 1 176 1 205 1 150 1 91 1 
160 1 221 1 37 3 2 2 3 1 80 1 195 1 226 2 83 1 7 1 168 1 229 1 230 1 45 1 10 1 172 1 11 2 203 1 174 2 116 1 176 1 118 1 89 1 205 1 150 1 91 1 95 1 19 1 123 1 58 1 184 1 63 1 156 1 23 2 66 1 101 1 104 1 28 1 29 3 71 1 135 1 
95 1 215 1 231 1 123 1 159 1 63 1 
239 1 58 1 
229 1 239 1 
95 1 160 1 19 1 123 2 63 1 155 1 83 2 7 1 23 2 230 1 231 1 45 1 172 1 10 1 159 1 104 1 232 1 29 1 116 1 176 1 205 1 91 1 

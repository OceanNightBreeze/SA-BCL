#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V ERROR java.lang.NullPointerException 135 
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 253 77 94 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V ERROR java.lang.NullPointerException 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 3818 | 2 -> 1
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String; | ASSIGN | 3319 | = null
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V | STATEMENT | 27684 | stmt -> ;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
164 1 57 1 99 1 161 1 186 1 65 1 
164 1 57 1 99 1 186 1 65 1 
135 1 
124 1 56 1 63 1 114 1 67 1 35 1 24 2 185 1 254 1 207 1 170 2 
124 1 56 1 189 4 57 1 213 1 93 1 111 1 63 1 218 1 114 1 67 1 81 1 118 1 70 1 24 1 185 1 254 1 170 3 
124 1 56 1 63 1 114 1 67 1 166 1 24 1 185 1 236 1 254 1 170 2 
124 1 56 1 189 1 57 1 241 1 213 1 179 1 111 1 63 1 114 1 67 1 81 1 85 1 24 1 134 1 185 1 254 1 170 3 
124 1 56 1 189 2 57 1 213 1 111 1 63 1 114 1 67 1 81 1 132 1 72 1 24 1 185 1 254 1 170 3 
124 3 56 2 63 2 114 1 67 1 165 1 24 1 185 1 254 1 170 2 
124 2 56 1 189 1 30 1 57 1 213 1 111 1 63 2 114 1 67 1 81 1 132 1 24 2 185 1 254 1 170 4 
67 1 114 1 176 1 254 1 
124 1 56 2 139 1 211 1 63 1 114 1 67 1 24 1 185 1 254 1 170 2 
138 1 124 1 56 1 189 1 57 2 241 1 213 1 179 1 111 1 63 1 65 1 67 1 222 1 81 2 85 1 24 1 134 1 185 1 254 1 170 3 
138 1 124 1 56 1 189 1 57 2 241 1 213 1 179 1 111 1 63 1 65 1 67 1 81 2 85 1 24 1 134 1 185 1 254 1 170 3 
138 1 124 1 56 1 29 1 57 1 31 1 63 1 65 1 114 1 67 1 81 1 22 1 222 1 24 1 185 1 254 1 170 2 
138 1 124 1 56 1 58 1 57 1 31 1 63 1 65 1 114 1 67 1 81 1 22 1 222 1 24 1 185 1 254 1 170 2 
138 1 124 1 56 1 57 1 31 1 1 1 63 1 65 1 114 1 67 1 81 1 22 1 48 1 24 1 224 1 185 1 254 1 170 2 
138 1 124 1 56 1 57 1 31 1 1 1 63 1 65 1 114 1 67 1 81 1 222 1 22 1 48 1 24 1 224 1 185 1 254 1 170 2 
124 2 56 1 63 1 114 1 67 1 165 1 24 2 185 1 254 1 170 3 
67 1 114 1 56 1 124 2 14 2 141 1 63 1 254 1 55 1 170 3 
67 1 114 1 56 2 124 1 6 1 14 1 63 1 254 1 55 1 170 2 
67 1 114 1 56 1 124 1 14 1 33 1 63 1 254 1 55 1 170 2 
197 1 153 3 121 1 
153 1 
123 2 124 4 0 1 5 3 132 1 8 1 9 4 10 1 137 1 13 2 138 1 139 1 14 2 15 3 142 2 141 1 147 1 149 3 23 1 157 3 30 1 159 1 33 2 162 2 163 4 165 1 164 2 169 1 170 4 172 2 40 1 173 1 174 1 177 3 180 1 181 3 182 3 55 1 187 1 56 5 189 2 57 2 194 2 61 4 65 1 66 2 67 1 195 1 196 6 198 1 71 1 199 1 72 1 200 2 73 1 204 3 203 1 205 3 208 1 76 1 77 1 78 1 213 1 214 2 215 1 216 1 80 1 217 3 219 14 221 3 83 1 84 4 86 1 87 3 225 5 226 4 90 4 228 3 92 2 230 1 233 2 235 2 101 2 238 5 239 1 106 1 108 3 109 1 113 2 116 3 115 2 247 1 248 1 253 1 256 2 
123 2 124 2 56 3 0 1 189 2 57 2 194 2 61 4 65 1 66 2 67 1 5 2 195 1 196 6 71 1 198 1 8 1 132 1 72 1 200 2 73 1 9 4 204 3 203 1 205 3 10 1 137 1 138 1 13 2 76 1 14 1 15 3 77 1 141 1 213 1 78 1 214 2 215 1 147 1 216 1 80 1 217 3 219 4 149 3 221 3 83 1 23 1 84 4 86 1 87 2 225 5 226 4 90 4 228 3 92 2 159 1 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 40 1 172 2 170 3 238 5 174 1 239 1 106 1 108 3 109 1 177 3 113 2 180 1 115 2 116 3 181 2 247 1 182 3 248 1 253 1 256 2 55 1 
174 1 77 1 141 1 159 1 230 1 163 4 83 1 23 1 84 4 73 1 253 1 137 1 
123 2 124 2 56 3 0 1 189 2 57 2 194 2 61 4 4 1 65 1 66 2 67 1 5 2 195 1 196 6 198 1 71 1 8 1 132 1 72 1 200 2 73 1 9 4 204 3 203 1 205 3 10 1 137 1 138 1 13 2 14 1 15 3 77 1 141 1 213 1 78 1 214 2 215 1 147 1 216 1 80 1 217 3 219 4 150 1 149 3 221 3 83 1 23 1 84 4 87 2 225 5 226 4 90 4 228 3 92 2 159 1 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 40 1 172 2 170 3 238 5 174 1 239 1 108 3 109 1 177 3 113 2 115 2 116 3 181 2 247 1 182 3 248 1 50 1 253 1 256 2 55 1 
124 2 56 3 189 3 57 2 126 2 127 2 61 4 65 1 67 1 195 1 196 4 198 1 71 1 8 1 132 1 72 2 133 2 73 1 136 1 205 4 206 4 10 1 137 1 138 1 210 3 14 1 77 1 141 1 78 1 213 1 215 1 147 1 216 1 80 1 219 8 21 1 221 4 82 2 83 1 23 1 84 4 226 2 90 2 91 4 28 1 156 1 159 1 33 2 230 1 163 4 231 2 164 2 165 1 169 1 41 1 170 3 40 1 174 1 239 1 243 2 110 4 180 1 247 1 119 1 250 2 52 1 253 1 256 2 55 1 
123 2 124 2 56 3 0 1 189 2 57 2 194 2 61 4 65 1 66 2 5 2 67 1 195 1 196 6 198 1 71 1 8 1 132 1 72 1 200 2 73 1 9 4 204 4 205 3 10 1 137 1 11 2 138 1 12 2 13 2 76 1 14 1 15 2 77 1 141 1 78 1 213 1 214 2 19 2 215 1 147 1 216 1 80 1 217 2 219 4 149 2 221 3 83 1 23 1 84 4 87 2 225 4 226 4 90 4 158 2 228 2 92 2 159 1 32 2 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 170 4 172 2 40 1 238 4 174 1 239 1 106 1 242 2 108 2 177 2 115 2 116 2 181 2 247 1 182 2 51 1 253 1 256 2 55 1 
123 2 124 2 0 1 4 1 5 2 132 1 8 1 9 4 10 1 137 1 13 2 138 1 139 1 14 1 15 3 141 1 147 1 149 3 150 1 23 1 159 1 33 2 162 2 163 4 165 1 164 2 169 1 170 3 172 2 40 1 174 1 177 3 180 1 181 2 182 3 55 1 56 4 189 3 57 2 194 2 61 4 65 1 66 2 67 1 195 1 196 6 198 1 71 1 72 2 200 2 73 1 203 1 204 3 205 3 76 1 77 1 78 1 213 1 214 2 215 1 80 1 216 1 217 3 219 4 221 3 83 1 84 4 87 2 86 1 225 5 226 4 90 4 228 3 92 2 230 1 233 2 235 2 101 2 103 1 238 5 239 1 106 1 109 1 108 3 113 2 116 3 115 2 247 1 248 1 253 1 256 2 
227 1 
123 2 124 2 0 1 2 1 5 2 132 1 8 1 9 4 137 1 11 2 13 2 12 2 138 1 15 2 19 2 147 1 148 1 149 2 23 1 24 1 26 2 154 2 158 2 159 1 33 2 32 2 162 2 163 4 164 2 165 1 169 1 40 1 172 2 170 3 174 1 177 2 180 1 181 2 182 2 51 1 185 1 53 2 56 3 189 2 190 1 192 1 57 2 60 2 194 2 61 4 64 1 65 1 66 2 195 1 67 1 68 1 196 6 71 1 198 1 72 1 200 2 73 1 204 4 205 3 76 1 77 1 213 1 78 1 214 2 215 1 216 1 80 1 217 2 219 4 221 3 83 1 84 4 87 2 225 4 226 4 88 1 90 4 89 1 228 2 92 2 230 1 96 1 232 2 233 2 235 2 101 2 238 4 105 1 239 1 106 1 242 2 108 2 111 1 116 2 115 2 247 1 246 1 253 1 256 2 
77 1 84 1 230 1 253 1 163 1 
123 2 124 2 56 3 0 1 189 2 57 2 194 2 61 4 4 1 65 1 66 2 67 1 5 2 195 1 196 6 198 1 71 1 8 1 132 1 72 1 200 2 73 1 9 4 204 3 203 1 205 3 10 1 137 1 138 1 13 2 76 1 14 1 15 3 77 1 141 1 213 1 78 1 214 2 215 1 147 1 216 1 80 1 217 3 219 4 150 1 149 3 221 3 23 1 84 4 86 1 87 2 225 5 226 4 90 4 228 3 92 2 159 1 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 40 1 172 2 170 3 238 5 174 1 239 1 106 1 108 3 109 1 177 3 113 2 115 2 116 3 181 2 247 1 182 3 248 1 253 1 256 2 55 1 
123 2 124 2 56 3 0 1 189 2 57 2 194 2 61 4 4 1 65 1 66 2 67 1 5 2 195 1 196 6 198 1 71 1 8 1 132 1 72 1 200 2 73 1 9 4 204 3 203 1 205 3 10 1 137 1 138 1 13 2 76 1 14 1 15 3 141 1 213 1 78 1 214 2 215 1 147 1 216 1 80 1 217 3 219 4 150 1 149 3 221 3 23 1 84 4 86 1 87 2 225 5 226 4 90 4 228 3 92 2 159 1 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 40 1 172 2 170 3 238 5 174 1 239 1 106 1 108 3 109 1 177 3 113 2 115 2 116 3 181 2 247 1 182 3 248 1 253 1 256 2 54 1 55 1 
123 2 124 5 0 4 4 1 5 5 132 1 8 1 9 4 10 1 137 1 11 2 13 2 12 2 138 1 14 4 15 3 141 1 16 1 144 1 19 2 147 1 150 1 149 3 23 1 158 2 159 1 33 2 32 2 162 2 163 4 165 1 164 2 169 1 170 9 172 2 40 1 174 1 177 3 181 5 182 3 51 1 55 4 56 6 189 2 57 2 194 2 61 4 65 1 66 2 67 4 195 1 196 6 198 1 71 1 72 1 200 2 73 1 203 1 204 5 205 3 76 1 77 1 78 4 213 1 214 2 215 1 216 1 80 1 217 3 219 6 221 3 83 1 84 4 87 5 225 5 226 6 90 6 228 3 92 2 230 1 94 1 95 1 233 2 235 2 101 2 104 1 238 5 239 1 106 1 242 2 109 1 108 3 113 2 116 3 115 2 247 1 248 1 253 1 256 2 
123 2 124 2 56 3 0 1 189 2 190 1 57 2 194 2 61 4 65 1 66 2 5 2 67 1 195 1 196 6 198 1 71 1 8 1 132 1 72 1 200 2 73 1 9 4 204 4 205 3 10 1 137 1 11 2 138 1 12 2 13 2 76 1 14 1 15 2 77 1 141 1 78 1 213 1 214 2 19 2 215 1 147 1 216 1 80 1 217 2 219 4 149 2 221 3 83 1 23 1 84 4 87 2 225 4 226 4 90 4 158 2 228 2 92 2 159 1 32 2 33 2 230 1 162 2 163 4 164 2 165 1 233 2 235 2 169 1 101 2 170 3 172 2 40 1 238 4 174 1 239 1 106 1 242 2 108 2 177 2 180 1 115 2 116 2 181 2 247 1 182 2 51 1 253 1 256 2 55 1 
173 1 240 1 219 1 
45 1 219 1 
220 1 219 1 
27 1 57 1 31 1 79 1 128 1 65 1 219 1 196 1 221 1 129 1 22 1 48 1 
196 1 22 1 57 1 31 1 79 1 65 1 219 1 
220 1 219 1 
36 1 221 1 196 1 57 1 65 1 219 1 
229 1 219 1 
220 1 219 1 
45 1 219 1 
45 1 219 1 
244 1 206 1 42 1 219 1 
74 1 110 1 219 1 
124 1 56 1 14 1 61 2 78 1 112 1 231 1 146 1 219 2 67 1 220 1 49 1 202 2 39 1 75 1 170 2 55 1 
184 1 
67 1 56 1 124 1 14 1 176 1 78 1 112 1 39 1 146 1 231 1 55 1 170 2 75 1 
5 1 67 1 56 1 181 1 124 1 0 1 87 1 24 1 78 1 185 1 170 2 
5 2 67 1 56 1 181 2 124 1 0 1 87 2 24 2 78 1 152 1 185 1 170 3 
123 2 124 1 56 2 0 1 189 1 192 1 60 2 57 2 194 2 61 4 2 1 64 1 65 1 66 2 67 1 5 1 68 1 196 6 8 1 72 1 200 2 204 2 9 4 205 3 138 1 13 2 139 1 15 2 213 1 78 1 214 2 216 1 80 1 217 2 219 4 148 1 149 2 221 3 24 1 87 1 225 4 226 4 88 1 26 2 89 1 154 2 90 4 228 2 92 2 32 2 33 2 162 2 96 1 164 2 232 2 233 2 235 2 101 2 40 1 172 2 170 3 238 4 105 1 108 2 177 2 111 1 115 2 116 2 181 1 246 1 182 2 53 2 185 1 256 2 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 175 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
124 1 56 1 0 1 78 1 67 1 5 2 181 2 24 2 87 2 152 1 185 1 170 3 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 13 1 238 2 175 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
124 1 56 1 0 1 44 1 78 1 67 1 5 1 181 1 24 1 87 1 152 1 185 1 170 2 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 13 1 238 2 175 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 103 1 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 2 9 3 101 1 170 2 12 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 4 124 2 0 1 58 1 57 1 194 1 61 2 128 2 65 1 66 1 67 1 5 2 196 2 129 2 8 1 200 1 204 1 9 2 13 1 138 1 139 1 15 1 17 1 78 1 79 1 216 1 217 1 219 3 149 1 221 2 22 1 24 2 87 2 225 2 224 2 152 1 27 2 30 1 228 1 31 1 92 1 33 1 34 1 162 1 233 1 167 1 235 1 169 1 101 1 170 3 173 3 238 2 242 1 177 1 108 1 115 1 116 1 181 2 182 1 48 3 185 1 256 1 255 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 13 1 238 2 15 1 242 1 177 1 108 1 78 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 124 1 56 1 0 1 189 1 60 1 57 1 194 1 61 2 66 1 67 1 5 1 196 3 72 1 200 1 204 1 9 2 205 3 13 1 15 1 213 1 78 1 214 1 80 1 217 1 219 2 149 1 24 1 87 1 225 2 226 2 26 1 89 1 154 1 90 2 228 1 92 1 33 1 32 1 162 1 164 1 232 1 233 1 235 1 101 1 40 1 172 1 170 3 238 2 108 1 177 1 111 1 116 1 115 1 181 1 182 1 53 1 185 1 256 1 
124 1 56 1 0 1 78 1 67 1 5 1 181 1 232 1 24 1 87 1 152 1 185 1 170 2 
123 1 189 1 60 1 57 1 194 1 61 2 66 1 196 3 72 1 200 1 204 2 9 2 205 3 10 1 11 1 13 1 12 1 15 1 141 1 213 1 214 1 19 1 80 1 217 1 219 2 149 1 225 2 226 2 26 1 89 1 154 1 90 2 158 1 228 1 92 1 33 1 32 1 162 1 164 1 232 1 233 1 235 1 101 1 40 1 172 1 170 1 238 2 242 1 177 1 108 1 116 1 115 1 182 1 53 1 256 1 
123 1 124 1 56 1 0 1 189 1 60 1 57 1 194 1 61 2 66 1 67 1 5 1 196 3 72 1 200 1 204 1 9 2 205 3 13 1 15 1 213 1 78 1 214 1 80 1 217 1 219 2 149 1 24 1 87 1 225 2 226 2 26 1 89 1 154 1 90 2 228 1 92 1 33 1 32 1 162 1 164 1 232 1 233 1 235 1 101 1 40 1 172 1 170 3 103 1 238 2 108 1 177 1 111 1 115 1 116 1 181 1 182 1 53 1 185 1 256 1 
123 1 56 1 124 1 0 1 189 1 60 1 57 1 194 1 61 2 66 1 67 1 5 1 196 3 72 1 200 1 204 1 9 2 205 3 10 1 13 1 14 1 15 1 141 1 213 1 78 1 214 1 80 1 217 1 219 2 149 1 87 1 225 2 226 2 26 1 89 1 154 1 90 2 228 1 92 1 32 1 33 1 162 1 164 1 232 1 233 1 235 1 101 1 172 1 170 3 40 1 103 1 238 2 177 1 108 1 115 1 116 1 181 1 182 1 53 1 256 1 55 1 
123 1 56 1 124 1 0 1 158 1 228 1 92 1 194 1 61 2 162 1 66 1 5 1 67 1 200 1 204 2 9 2 101 1 11 1 170 2 12 1 13 1 238 2 242 1 15 1 108 1 177 1 78 1 19 1 217 1 115 1 116 1 149 1 181 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 242 1 177 1 108 1 78 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 2 162 1 66 1 5 1 67 1 200 1 9 2 204 1 101 1 170 2 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
120 1 32 1 226 1 90 1 219 1 
120 1 226 1 90 1 219 1 172 1 
46 1 32 1 226 1 245 1 90 1 219 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 124 1 56 2 0 1 57 1 194 1 61 2 128 3 65 1 66 1 67 1 5 1 196 3 129 3 8 1 200 1 204 2 9 2 11 1 12 1 13 1 138 1 15 1 78 1 79 1 214 1 19 1 216 1 217 1 219 2 149 1 221 3 22 1 24 1 87 1 224 1 225 2 226 2 152 1 90 2 27 3 158 1 228 1 92 1 31 1 32 1 33 1 162 1 164 1 233 1 235 1 169 1 101 1 172 1 170 2 238 2 242 1 108 1 177 1 115 1 116 1 181 1 182 1 48 4 185 1 256 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 103 1 13 1 238 2 15 1 177 1 108 1 78 1 214 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 1 101 1 170 2 13 1 238 2 175 2 15 1 242 1 177 1 108 1 78 1 214 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 175 2 15 1 242 1 177 1 108 1 78 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 158 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 9 3 204 2 101 1 11 1 170 2 12 1 13 1 238 2 15 1 242 1 177 1 108 1 78 1 19 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 152 1 185 1 
123 1 56 1 124 1 0 1 228 1 194 1 92 1 61 3 162 1 66 1 5 1 67 1 200 1 204 1 9 3 101 1 170 2 13 1 238 2 15 1 177 1 108 1 78 1 217 1 115 1 116 1 220 1 181 1 149 1 182 1 87 1 24 1 225 2 185 1 
56 2 124 1 188 1 189 1 27 2 29 1 125 1 57 1 31 1 33 1 128 2 231 1 65 1 98 1 67 1 129 2 196 2 233 1 8 1 234 1 134 1 235 1 169 1 170 2 171 1 237 1 173 3 138 1 241 1 179 1 78 1 216 1 219 4 221 2 48 3 22 1 85 1 24 1 224 1 185 1 256 1 
155 1 56 1 124 1 188 1 27 2 125 1 60 1 57 1 31 1 33 1 128 2 231 1 97 1 65 1 98 1 67 1 129 2 196 2 166 1 8 1 233 1 234 1 100 1 235 1 236 1 170 2 171 1 237 1 173 3 78 1 216 1 219 4 148 1 221 2 48 3 22 1 24 1 224 1 25 1 53 1 26 1 185 1 154 1 256 1 
56 1 124 1 0 1 228 3 67 1 5 1 204 3 203 1 38 1 170 2 238 3 15 3 108 3 109 1 177 3 78 1 217 3 116 3 149 3 181 1 182 3 248 3 24 1 87 1 225 3 185 1 
56 1 124 1 0 1 228 1 67 1 5 1 35 1 204 1 203 1 170 2 238 1 15 1 108 1 109 1 177 1 78 1 217 1 116 1 149 1 181 1 182 1 248 1 24 1 87 1 225 1 185 1 
56 1 124 1 0 1 109 1 78 1 67 1 5 1 35 1 181 1 248 1 24 1 87 1 185 1 170 2 
123 1 56 1 124 1 0 1 228 3 92 1 194 1 61 2 162 1 66 1 67 1 5 1 200 1 9 2 204 3 203 1 101 1 103 1 170 2 13 1 238 4 140 1 15 3 108 3 109 1 177 3 78 1 214 1 217 3 115 1 116 3 149 3 181 1 182 3 248 2 24 1 87 1 225 4 185 1 
56 1 124 1 0 1 228 1 67 1 5 1 204 1 203 1 170 2 238 1 15 1 108 1 109 1 177 1 78 1 145 1 113 1 217 1 219 1 116 1 220 1 149 1 181 1 182 1 248 1 120 1 24 1 87 1 225 1 226 1 185 1 90 1 
56 1 124 1 0 1 228 1 67 1 5 1 204 1 203 1 170 2 238 1 15 1 108 1 109 1 177 1 78 1 217 1 116 1 149 1 181 1 182 1 248 1 24 1 87 1 225 1 185 1 
37 1 249 1 251 1 207 1 170 1 
18 1 252 1 20 1 170 1 
20 1 170 1 102 1 
69 2 251 1 207 1 170 1 
168 1 20 1 
57 1 8 1 216 1 65 1 
129 1 221 1 27 1 48 1 224 1 128 1 
129 1 221 1 27 1 48 1 224 1 79 1 128 1 
57 1 60 1 65 1 148 1 131 1 53 1 154 1 
140 1 15 1 223 1 200 1 61 1 9 1 225 2 
15 1 225 1 
220 1 200 1 61 1 9 1 225 1 219 1 
15 1 225 1 
220 1 61 1 9 1 219 1 
55 1 
14 1 
14 1 
24 1 
185 1 
24 1 
124 1 56 1 176 1 59 1 43 1 143 1 212 1 78 1 3 1 231 1 67 1 47 1 69 1 7 1 201 1 170 2 
124 1 56 1 59 1 43 1 143 1 212 1 78 1 231 1 67 1 47 1 69 1 151 1 7 1 201 1 170 2 
124 1 56 1 59 1 43 1 143 1 212 1 78 1 231 1 67 1 35 1 47 1 69 1 7 1 201 1 170 2 
124 2 56 2 209 1 59 2 43 2 143 2 212 2 78 2 231 2 67 2 47 2 69 2 151 1 7 2 201 2 170 4 
124 1 56 1 59 1 43 1 143 1 61 2 212 1 78 1 110 1 231 1 219 1 67 1 220 1 47 1 69 1 7 1 183 2 201 1 122 1 170 2 
160 1 
173 2 220 1 62 1 219 2 
173 2 220 1 191 1 219 2 
56 2 124 1 189 1 191 1 60 1 59 1 57 1 61 1 33 1 160 1 62 1 231 1 67 1 196 2 69 1 7 1 233 1 72 1 201 1 235 1 205 2 40 1 170 3 173 2 139 1 43 1 143 1 78 1 212 1 178 1 213 1 111 1 80 1 219 2 47 1 151 1 183 1 53 1 26 1 89 1 154 1 256 1 122 1 
67 1 176 1 78 1 212 1 3 1 
56 3 124 1 27 3 191 1 59 1 57 1 31 1 61 1 33 1 160 1 62 1 128 3 231 1 65 1 67 1 129 3 196 2 69 1 7 1 233 1 8 1 201 1 235 1 206 1 169 1 170 2 173 2 138 1 139 1 43 1 143 1 78 1 212 1 79 1 110 1 216 1 219 3 221 3 47 1 48 4 22 1 183 1 224 1 256 1 122 1 
124 1 56 1 59 1 43 1 143 1 61 1 212 1 78 1 110 2 231 1 219 3 67 1 220 1 47 1 69 1 7 1 183 1 201 1 122 1 170 2 
124 1 56 1 209 1 59 1 43 1 143 1 212 1 78 1 231 1 67 1 47 1 69 1 7 1 201 1 170 2 
124 2 56 2 209 1 176 1 59 2 43 2 143 2 212 2 78 2 3 1 231 2 67 2 47 2 69 2 7 2 201 2 170 4 
21 1 210 1 176 1 28 1 119 1 41 1 
124 1 56 1 91 2 28 1 193 1 61 2 231 1 67 1 69 1 7 1 170 2 210 1 107 1 78 1 110 1 244 1 219 2 117 1 21 1 220 1 250 1 
56 1 124 1 91 2 210 1 28 1 61 2 78 1 110 1 244 1 231 1 219 2 67 1 220 1 21 1 69 1 7 1 119 1 250 1 41 1 170 2 
124 1 56 3 91 1 27 2 28 1 57 1 31 1 127 1 61 1 33 1 128 2 231 1 65 1 67 1 129 2 196 1 69 1 7 1 8 1 133 1 206 1 169 1 170 2 41 1 138 1 139 1 210 1 243 1 78 1 79 1 110 1 216 1 219 1 21 1 221 2 48 3 22 1 119 1 250 1 224 1 256 1 
140 1 91 1 210 1 82 1 126 1 61 1 
220 1 133 1 
220 1 127 1 
124 1 56 1 91 1 28 1 126 1 61 1 231 1 67 1 69 1 7 1 170 2 41 1 210 2 78 1 243 1 110 1 219 2 21 1 82 1 119 1 226 1 90 1 
124 1 56 1 91 1 28 1 126 1 61 1 231 1 67 1 69 1 7 1 130 1 74 1 170 2 41 1 210 2 140 1 78 1 243 1 110 1 219 2 21 1 82 1 119 1 226 1 90 1 
243 1 
124 1 56 2 91 2 189 1 28 1 60 1 57 1 126 1 127 1 61 2 33 1 231 1 67 1 164 1 196 2 69 1 7 1 72 1 133 1 205 4 206 2 170 3 41 1 40 1 139 1 210 2 107 1 243 1 78 1 213 1 110 2 111 1 80 1 219 3 21 1 82 1 119 1 250 1 226 1 53 1 26 1 89 1 154 1 90 1 256 1 
21 1 210 1 176 1 28 1 119 1 41 1 
56 3 124 1 57 1 126 1 127 1 61 2 128 4 65 1 67 1 196 2 129 4 69 1 7 1 8 1 133 1 206 2 138 1 139 1 210 2 78 1 79 1 216 1 219 3 21 1 221 4 22 1 82 1 224 1 226 1 90 1 27 4 91 2 28 1 31 1 33 1 231 1 164 1 169 1 41 1 170 2 243 1 110 2 48 5 119 1 250 1 256 1 

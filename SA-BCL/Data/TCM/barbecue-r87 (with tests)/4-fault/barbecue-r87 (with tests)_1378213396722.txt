#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 165 142 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 165 40 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 165 142 59 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V ERROR java.lang.NullPointerException 49 17 234 85 223 30 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V ERROR java.lang.NullPointerException 49 17 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | RETURN | 9459 | return null
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | STATEMENT | 3378 | stmt -> ;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
127 1 237 1 125 1 150 1 105 1 
65 1 213 1 96 2 
127 1 237 1 131 1 125 1 150 1 105 1 
1 1 224 1 168 1 201 1 12 3 23 1 157 2 173 2 175 2 209 1 238 2 
1 1 224 1 201 1 12 2 23 1 157 2 13 1 173 2 85 1 175 1 124 1 238 4 149 1 125 1 223 1 151 1 
23 1 1 1 201 1 136 1 
157 1 23 1 224 1 1 1 173 1 92 1 176 1 175 2 201 1 238 2 12 1 
108 1 1 1 224 1 128 1 12 1 23 1 157 1 13 1 173 1 85 1 175 1 69 1 124 2 238 3 71 1 163 1 150 1 125 2 223 1 31 1 
108 1 1 1 224 1 128 1 12 1 23 1 157 1 13 1 173 1 85 1 175 1 69 1 124 2 238 3 71 1 150 1 125 2 223 1 31 1 
108 1 1 1 224 1 166 1 201 1 12 1 23 1 157 1 173 1 66 1 175 1 124 1 238 2 163 1 214 1 125 1 150 1 
108 1 1 1 224 1 166 1 201 1 12 1 23 1 157 1 26 1 173 1 175 1 124 1 238 2 163 1 214 1 125 1 150 1 
108 1 1 1 224 1 166 1 138 1 201 1 12 1 23 1 157 1 173 1 175 1 124 1 238 2 47 1 214 1 125 1 150 1 74 1 
108 1 1 1 224 1 166 1 138 1 201 1 12 1 23 1 157 1 173 1 175 1 124 1 238 2 47 1 163 1 214 1 125 1 150 1 74 1 
157 2 23 1 224 1 1 1 173 1 168 1 175 1 201 1 238 3 12 2 
1 1 153 1 201 1 186 2 12 2 23 1 173 1 175 1 46 1 238 3 
23 1 1 1 173 1 175 2 186 1 201 1 203 1 46 1 238 2 12 1 
23 1 1 1 173 1 57 1 175 1 186 1 201 1 46 1 238 2 12 1 
23 1 1 1 173 1 184 1 175 1 186 1 201 1 46 1 238 2 12 1 
1 1 167 1 201 1 186 1 12 1 23 1 173 1 85 1 175 1 235 1 195 1 210 1 46 1 124 1 238 3 122 1 125 1 223 4 
23 1 1 1 173 1 208 1 175 1 186 1 201 1 120 1 46 1 238 2 12 1 
1 1 201 1 186 1 128 1 12 1 23 1 173 1 85 1 175 1 195 1 69 1 46 1 124 1 238 3 71 1 125 1 223 1 31 1 
1 1 201 1 186 1 12 1 23 1 173 1 85 1 175 1 195 1 46 1 124 1 238 3 125 1 30 1 223 2 151 1 
139 3 50 1 52 1 
139 1 
1 1 2 1 5 1 186 1 188 1 60 1 190 1 12 1 62 1 64 1 16 1 199 1 72 1 77 1 202 1 20 1 81 1 142 1 83 1 207 1 144 1 33 4 91 1 153 1 218 1 156 1 38 1 158 3 159 1 98 2 46 1 220 1 162 1 107 1 165 1 110 10 169 1 230 1 117 1 118 1 175 1 177 1 119 1 121 1 123 4 238 2 181 1 
91 1 33 4 1 1 2 1 153 1 5 1 186 1 188 1 60 1 218 1 12 1 156 1 190 1 159 1 62 1 64 1 16 1 46 1 162 1 72 1 107 1 165 1 77 1 169 1 202 1 20 1 230 1 81 1 142 1 83 1 207 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
33 4 165 1 153 1 5 1 188 1 190 1 156 1 81 1 142 1 16 1 119 1 123 4 
33 4 1 1 152 1 153 1 5 1 35 1 185 1 186 1 188 1 12 1 156 1 190 1 14 1 16 1 46 1 165 1 110 2 20 1 81 1 141 1 116 1 142 1 24 1 175 1 88 1 119 1 238 2 123 4 180 1 
33 4 1 1 153 1 5 1 186 1 188 1 60 1 156 1 190 1 12 1 16 1 46 1 162 1 107 1 165 1 202 1 20 1 81 1 142 1 232 1 175 1 177 1 119 1 123 4 238 2 181 1 
33 4 1 1 153 1 5 1 186 1 188 1 60 1 156 1 190 1 12 1 16 1 46 1 162 1 107 1 165 1 202 1 20 1 81 1 142 1 232 1 175 1 177 1 119 1 123 4 238 2 181 1 
33 4 91 1 1 1 2 1 153 1 5 1 186 1 188 1 218 1 12 1 156 1 190 1 191 1 159 1 62 1 64 1 16 1 46 1 72 1 107 1 165 1 169 1 77 1 202 1 20 1 230 1 81 1 142 1 83 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
33 4 1 1 5 1 188 1 60 1 156 1 190 1 12 1 157 1 16 1 162 1 107 1 224 1 165 1 202 1 20 1 81 1 142 1 232 1 175 1 177 1 119 1 123 4 238 2 181 1 
104 1 
91 1 33 4 1 1 2 1 153 1 5 1 186 1 188 1 60 1 218 1 12 1 156 1 190 1 159 1 62 1 64 1 16 1 46 1 162 1 72 1 107 1 165 1 77 1 169 1 202 1 20 1 230 1 81 1 142 1 83 1 207 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
33 1 142 1 165 1 123 1 156 1 
91 1 33 4 1 1 2 1 153 1 5 1 186 1 188 1 60 1 218 1 12 1 156 1 159 1 62 1 64 1 16 1 46 1 162 1 72 1 107 1 165 1 169 1 77 1 202 1 20 1 230 1 81 1 142 1 83 1 207 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
91 1 33 4 1 1 2 1 153 1 5 1 186 1 188 1 60 1 218 1 12 1 156 1 40 1 159 1 62 1 64 1 16 1 46 1 162 1 72 1 107 1 165 1 169 1 77 1 202 1 20 1 230 1 81 1 83 1 207 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
91 1 33 4 1 1 2 1 153 1 5 1 186 1 188 1 59 1 60 1 218 1 12 1 156 1 190 1 159 1 62 1 64 1 16 1 44 1 46 1 162 1 72 1 107 1 165 1 77 1 169 1 202 1 20 1 230 1 81 1 142 1 83 1 118 1 144 1 175 1 177 1 119 1 121 1 238 2 123 4 181 1 
110 1 161 1 220 1 
41 1 110 1 
110 1 204 1 
110 1 204 1 
110 1 204 1 
41 1 110 1 
41 1 110 1 
110 1 8 1 222 1 125 1 150 1 137 1 
97 1 166 1 110 1 214 1 222 1 125 1 150 1 
166 1 110 1 171 1 8 1 113 1 97 1 194 1 214 1 150 1 125 1 222 1 74 1 
110 1 51 1 
109 1 110 1 48 1 
110 1 93 1 174 1 11 1 
1 1 75 1 76 1 110 2 111 1 216 2 186 1 20 1 172 1 12 1 41 1 175 1 46 1 238 2 103 2 198 1 180 1 
112 1 
1 1 75 1 76 1 111 1 186 1 20 1 12 1 175 1 46 1 238 2 136 1 198 1 180 1 
1 1 2 1 126 1 57 1 12 1 189 2 61 1 13 1 133 1 64 2 68 1 193 1 196 2 200 1 73 1 72 1 77 1 202 1 20 1 22 1 83 1 25 3 84 1 85 1 87 1 144 1 28 1 90 1 148 1 30 1 91 2 34 1 95 1 219 1 157 1 103 2 223 1 222 3 164 1 105 1 106 1 107 1 224 1 110 2 169 1 227 1 230 1 231 1 233 1 118 1 234 1 177 1 175 1 178 2 121 1 238 3 125 1 181 1 53 1 
107 1 1 1 224 1 78 1 202 1 20 1 12 1 157 1 87 1 177 1 175 1 238 2 181 1 
2 1 126 1 57 1 56 1 189 2 61 1 133 1 64 2 193 1 68 1 195 1 196 2 200 1 73 1 72 1 77 1 22 1 83 1 25 3 84 1 85 1 86 1 87 1 144 1 28 1 146 1 90 1 148 1 30 1 91 2 153 1 34 1 95 1 219 1 103 2 222 3 223 1 164 1 105 1 106 1 110 2 169 1 227 1 228 1 230 2 231 1 233 1 118 1 234 1 178 2 121 1 238 1 125 1 241 1 53 1 
1 1 2 1 126 1 57 1 130 1 12 1 189 2 61 1 13 1 133 1 64 2 68 1 193 1 196 2 200 1 73 1 72 1 77 1 202 1 20 1 22 1 83 1 25 3 84 1 85 1 87 1 144 1 28 1 90 1 148 1 30 1 91 2 34 1 95 1 219 1 157 1 103 2 223 1 222 3 164 1 105 1 106 1 107 1 224 1 110 2 169 1 227 1 230 1 231 1 233 1 118 1 234 1 177 1 175 1 178 2 121 1 238 3 125 1 181 1 53 1 
1 1 2 1 126 1 57 1 186 1 130 1 12 1 189 2 61 1 133 1 64 2 68 1 193 1 195 1 196 2 200 1 73 1 72 1 77 1 202 1 20 1 22 1 83 1 25 3 84 1 85 1 87 1 144 1 28 1 90 1 148 1 30 1 91 2 153 1 34 1 95 1 219 1 46 1 103 2 164 1 223 1 222 3 105 1 106 1 107 1 110 2 169 1 227 1 230 1 231 1 118 1 233 1 234 1 175 1 177 1 178 2 121 1 238 3 125 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 12 1 189 2 157 1 64 2 133 1 103 2 72 1 164 1 106 1 107 1 224 1 169 1 77 1 78 1 202 1 20 1 228 1 230 2 83 1 86 1 144 1 118 1 233 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 53 1 241 1 181 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 2 12 1 157 1 41 1 64 2 133 1 103 2 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 1 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
154 1 110 1 178 1 196 1 200 1 
154 1 110 1 28 1 178 1 196 1 
19 1 110 1 135 1 178 1 196 1 200 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
1 1 2 1 56 1 57 1 8 3 12 1 189 2 64 2 133 1 193 1 194 3 196 2 200 1 72 1 74 4 77 1 78 1 79 1 202 1 20 1 21 1 22 1 83 1 86 1 144 1 28 1 146 1 90 1 148 1 214 1 150 1 91 2 34 1 95 1 219 1 157 1 97 1 43 1 47 1 103 2 164 1 222 3 105 1 106 1 107 1 108 1 224 1 166 1 110 2 169 1 171 3 113 3 228 1 230 2 118 1 233 1 234 1 177 1 175 2 178 2 121 1 238 2 53 1 241 1 125 1 181 1 
91 2 1 1 2 1 34 1 95 1 130 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 226 2 78 1 202 1 20 1 228 1 230 1 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 226 2 78 1 202 1 20 1 228 1 230 2 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
107 1 157 1 224 1 1 1 175 1 177 1 202 1 238 2 20 1 12 1 181 1 
107 2 1 1 224 1 78 1 202 2 20 1 12 1 157 2 177 2 175 1 238 3 181 1 
1 1 54 1 2 2 3 1 55 1 126 1 57 2 8 3 129 1 12 1 189 4 61 2 13 1 133 2 64 4 68 1 193 2 196 4 18 1 70 1 200 2 73 1 72 2 77 2 79 1 202 1 20 1 21 1 22 2 83 2 25 3 84 2 85 1 87 2 144 2 28 2 211 1 90 2 148 2 150 1 30 1 91 4 92 1 34 2 36 1 95 2 219 2 157 1 45 1 103 4 223 1 222 6 164 2 105 2 106 2 107 1 108 1 224 1 110 4 169 2 227 2 230 2 231 2 233 2 118 2 234 2 177 1 175 2 178 4 121 2 238 3 125 2 181 1 53 2 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 1 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 226 2 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 226 2 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
107 1 1 1 224 1 78 1 202 1 94 1 20 1 12 1 157 1 177 1 175 1 238 2 181 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 226 2 202 1 20 1 230 1 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 130 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
91 2 1 1 2 1 34 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 169 1 77 1 202 1 20 1 230 2 22 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
1 1 2 1 57 1 56 1 8 2 12 2 189 2 64 2 133 1 193 1 194 2 72 1 74 3 77 1 78 1 79 1 202 2 80 1 20 1 21 1 83 1 26 1 144 1 90 1 148 1 214 1 149 1 150 1 91 2 92 1 34 1 95 1 219 1 157 2 97 1 43 1 220 3 103 2 47 2 164 1 222 2 106 1 107 2 108 1 224 1 225 1 166 1 110 3 169 1 171 2 113 2 114 1 230 1 118 1 233 1 234 1 175 4 177 2 121 1 179 1 238 3 125 1 181 1 53 1 
91 2 1 1 2 1 34 1 56 1 95 1 12 1 189 3 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 1 83 1 118 1 233 1 144 1 175 1 177 1 121 1 90 1 238 2 148 1 181 1 53 1 
107 2 1 1 224 1 78 1 202 2 20 1 12 1 157 2 177 2 175 1 238 3 181 1 
91 2 1 1 2 1 34 1 56 1 95 1 189 3 12 1 157 1 41 1 64 2 133 1 103 3 164 1 72 1 106 1 107 1 224 1 77 1 169 1 78 1 202 1 20 1 228 1 230 2 22 1 83 1 86 1 118 1 233 1 144 1 175 1 177 1 146 1 121 1 90 1 238 2 148 1 241 1 181 1 53 1 
32 1 1 1 57 1 187 1 217 1 8 2 37 1 12 1 219 1 157 1 61 1 67 1 194 2 193 1 45 1 220 3 221 1 100 1 102 1 47 1 222 2 74 3 224 1 166 1 110 4 79 1 171 2 227 1 113 2 20 1 21 1 231 1 84 1 143 1 208 1 175 1 234 1 145 1 120 1 238 2 180 1 214 1 150 1 125 1 
32 1 1 1 57 1 187 1 8 2 128 1 12 1 219 1 157 1 43 1 66 1 194 2 193 1 69 1 220 3 221 1 100 1 71 1 102 1 47 1 223 1 222 2 74 3 224 1 108 1 166 1 110 4 79 1 171 2 113 2 20 1 21 1 143 1 175 2 234 1 238 2 180 1 214 1 31 1 150 1 125 1 
91 1 1 1 2 1 218 1 12 1 157 1 62 1 159 1 64 1 72 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 83 1 144 1 118 1 175 1 177 1 121 1 238 2 181 1 
91 3 1 1 2 3 218 3 12 1 157 1 62 1 159 1 63 1 64 3 72 3 107 1 224 1 77 3 169 3 202 1 20 1 230 3 83 3 144 3 118 3 175 1 177 1 121 3 238 2 181 1 
91 1 1 1 2 1 184 1 218 1 12 1 157 1 62 1 159 1 64 1 72 1 107 1 224 1 77 1 169 1 202 1 20 1 230 1 83 1 144 1 118 1 175 1 177 1 121 1 238 2 181 1 
107 1 1 1 224 1 184 1 202 1 20 1 218 1 12 1 157 1 62 1 175 1 177 1 238 2 181 1 
91 4 1 1 2 3 34 1 95 1 130 1 218 2 96 1 189 2 12 1 157 1 62 1 159 1 133 1 64 4 103 2 164 1 72 3 106 1 107 1 224 1 77 3 169 3 202 1 20 1 230 3 22 1 83 3 233 1 144 3 118 3 175 1 177 1 121 3 90 1 238 2 148 1 53 1 181 1 
91 1 1 1 2 1 4 1 154 1 218 1 12 1 157 1 41 1 62 1 159 1 64 1 99 1 196 1 72 1 107 1 224 1 110 1 77 1 169 1 202 1 20 1 230 1 83 1 144 1 118 1 175 1 177 1 178 1 121 1 238 2 181 1 
160 1 238 1 197 1 
15 2 155 1 209 1 238 1 
155 1 209 1 238 1 239 1 206 1 
140 1 160 1 238 1 9 1 
160 1 212 1 
227 1 231 1 84 1 27 1 45 1 150 1 125 1 
79 1 21 1 125 1 150 1 
97 1 194 1 171 1 8 1 113 1 47 1 74 1 
194 1 171 1 8 1 113 1 47 1 74 1 
91 1 41 1 110 1 103 1 95 1 189 1 
91 1 77 1 
41 1 110 1 103 1 189 1 
91 2 77 1 103 1 95 1 96 1 189 1 240 1 
91 1 77 1 
186 1 
46 1 
186 1 
157 1 
157 1 
224 1 
0 1 215 1 1 1 183 1 110 3 186 1 20 1 48 2 205 1 10 1 12 1 132 1 41 1 42 1 192 1 175 1 46 1 238 2 103 1 180 1 
0 1 1 1 183 1 186 1 20 1 205 1 10 1 12 1 42 1 192 1 175 1 46 1 238 2 101 1 180 1 
0 2 1 2 183 2 186 2 20 2 205 2 115 1 10 2 12 2 42 2 192 2 175 2 46 2 238 4 136 1 101 1 180 2 
0 1 1 1 183 1 186 1 20 1 205 1 10 1 115 1 12 1 42 1 192 1 175 1 46 1 238 2 136 1 180 1 
0 1 1 1 183 1 186 1 20 1 205 1 10 1 12 1 82 1 42 1 192 1 175 1 46 1 238 2 180 1 
41 1 110 2 89 1 220 2 
41 1 110 2 134 1 220 2 
0 1 215 1 1 1 183 1 92 1 126 1 57 1 186 1 58 1 10 1 12 1 219 1 61 1 132 1 42 1 192 1 193 1 68 1 134 1 195 1 46 1 220 2 103 1 73 1 222 2 223 1 110 2 227 1 20 1 205 1 231 1 82 1 25 2 84 1 85 1 175 2 234 1 89 1 238 3 29 1 180 1 30 1 125 1 
0 1 1 1 136 1 20 1 115 1 
0 1 215 1 1 1 183 1 92 1 57 1 186 1 8 3 58 1 10 1 12 1 219 1 132 1 42 1 97 1 192 1 43 1 194 3 193 1 134 1 46 1 220 2 103 1 47 1 222 2 74 4 108 1 166 1 110 3 79 1 171 3 113 3 20 1 48 1 205 1 21 1 174 1 175 3 234 1 89 1 238 2 180 1 214 1 150 1 125 1 
0 1 215 2 1 1 183 1 110 1 186 1 20 1 48 1 205 1 10 1 12 1 132 1 41 1 42 1 192 1 175 1 46 1 238 2 103 2 180 1 
58 1 
0 1 1 1 183 1 184 1 186 1 20 1 205 1 10 1 12 1 42 1 192 1 175 1 46 1 238 2 180 1 
0 2 1 2 183 2 186 2 20 2 205 2 10 2 12 2 82 1 42 2 192 2 175 2 46 2 238 4 101 1 180 2 
1 1 152 1 35 1 186 1 7 1 6 1 12 1 96 1 14 2 46 1 196 1 103 1 109 1 110 2 20 1 48 1 141 1 24 1 49 1 175 1 236 1 178 1 238 2 180 1 213 1 
236 1 
1 1 152 1 35 1 57 1 186 1 12 1 39 1 14 1 68 1 17 1 195 1 46 1 103 1 223 1 222 1 110 1 170 1 20 1 48 1 141 1 24 1 25 1 49 1 85 1 175 1 234 1 238 3 180 1 30 1 125 1 
24 1 152 1 14 1 35 1 136 1 141 1 
1 1 152 1 92 1 35 1 57 1 6 1 7 1 186 1 8 4 12 1 39 1 97 1 14 2 43 1 194 4 17 1 196 1 46 1 103 2 47 1 222 2 105 1 74 5 108 1 166 1 110 3 79 1 171 4 170 1 113 4 20 1 48 2 21 1 141 1 24 1 49 2 174 2 175 3 234 1 178 1 236 1 238 2 180 1 214 1 150 1 125 1 
24 1 152 1 14 1 35 1 136 1 141 1 
1 1 182 1 93 1 186 1 12 1 41 1 14 1 17 1 46 1 103 2 110 2 20 1 48 1 229 1 141 1 24 1 49 2 175 1 238 2 147 1 180 1 
1 1 152 1 92 1 35 1 57 1 186 1 8 2 12 1 39 1 97 1 14 1 43 1 194 2 17 1 46 1 103 1 47 1 222 1 74 3 108 1 166 1 110 1 79 1 171 2 170 1 113 2 20 1 48 1 21 1 141 1 24 1 49 1 174 1 175 3 234 1 236 1 238 2 180 1 214 1 150 1 125 1 
49 1 14 1 6 1 7 1 103 1 96 1 
41 1 170 1 
39 1 41 1 
1 1 152 1 110 2 35 1 6 1 7 1 186 1 20 1 48 1 141 1 12 1 24 1 49 1 14 2 175 1 178 1 236 1 196 1 46 1 238 2 103 1 180 1 
1 1 152 1 110 1 35 1 186 1 20 1 48 1 141 1 12 1 24 1 49 1 14 1 175 1 17 1 46 1 238 2 103 1 180 1 

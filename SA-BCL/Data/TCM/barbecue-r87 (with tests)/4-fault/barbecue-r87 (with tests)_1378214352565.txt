#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 235 40 223 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V ERROR java.lang.NullPointerException 6 81 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeFactory:createPDF417(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 13337 | return null
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V | STATEMENT | 9268 | stmt -> ;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String; | STATEMENT | 11921 | stmt -> ;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSCC14ShippingCode(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.BarcodeFactory:createGlobalTradeItemNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String; | CONDITION | 12482 | if (x) -> if (!x)
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
78 1 202 1 220 1 90 1 139 1 127 1 
202 1 220 1 90 1 139 1 127 1 
44 2 157 1 10 1 
248 1 0 2 250 1 129 1 86 1 87 1 200 1 90 1 61 1 9 1 110 1 13 1 172 1 125 3 174 1 176 1 154 1 101 1 103 1 
0 1 129 1 86 1 200 1 90 1 9 1 110 1 13 1 125 3 174 1 176 1 154 2 55 1 101 1 102 1 103 1 
0 1 110 2 86 3 129 1 125 2 201 1 200 1 174 1 176 1 9 2 
0 2 129 1 86 2 200 1 90 1 9 2 110 1 13 1 125 4 14 1 174 1 176 1 154 1 101 1 55 1 103 1 
129 1 200 1 174 1 149 1 
0 1 110 2 86 1 129 1 125 2 200 1 15 1 174 1 176 1 9 1 35 1 
0 1 248 1 86 1 250 1 87 1 200 1 90 2 203 1 9 1 110 1 13 1 125 3 172 1 174 1 258 1 176 1 154 1 127 1 101 2 103 1 
0 1 248 1 86 1 250 1 87 1 200 1 90 2 9 1 110 1 13 1 125 3 172 1 174 1 258 1 176 1 154 1 127 1 101 2 103 1 
0 1 57 1 129 1 86 1 200 1 90 1 119 1 203 1 9 1 110 1 125 2 173 1 174 1 258 1 176 1 101 1 127 1 
0 1 57 1 129 1 86 1 41 1 200 1 90 1 119 1 203 1 9 1 110 1 125 2 174 1 258 1 176 1 101 1 127 1 
0 1 160 1 57 1 129 1 86 1 200 1 90 1 119 1 9 1 151 1 110 1 125 2 174 1 258 1 176 1 101 1 127 1 212 1 
0 1 160 1 57 1 129 1 86 1 200 1 90 1 203 1 119 1 9 1 151 1 110 1 125 2 174 1 258 1 176 1 101 1 127 1 212 1 
0 2 110 1 86 2 129 1 125 3 201 1 200 1 174 1 176 1 9 1 
110 1 21 2 86 2 129 1 125 3 71 1 200 1 174 1 141 1 9 1 
110 2 21 1 86 1 129 1 125 2 71 1 200 1 174 1 34 1 9 1 
110 1 21 1 86 1 129 1 125 2 71 1 200 1 174 1 145 1 9 1 
110 1 21 1 86 1 129 1 125 2 71 1 200 1 174 1 180 1 9 1 
21 1 129 1 86 1 130 1 200 1 148 1 90 1 121 1 9 1 110 1 29 1 125 3 71 1 174 1 154 4 101 1 191 1 103 1 
21 1 129 1 86 1 200 1 9 1 110 1 125 2 71 1 257 1 174 1 
228 1 152 1 247 3 
247 1 
245 1 
2 2 131 4 134 1 5 1 137 6 138 1 14 1 140 1 17 2 141 1 144 1 145 2 146 1 21 2 26 2 150 2 31 4 32 2 154 2 35 1 37 3 158 1 39 5 40 1 162 3 164 2 165 1 47 1 48 3 166 1 49 1 46 2 168 1 169 1 175 2 55 1 177 3 178 1 179 1 59 4 65 1 184 1 71 1 187 2 189 2 192 3 194 3 73 1 197 1 198 2 74 4 201 1 200 1 202 2 204 1 76 4 207 1 208 3 215 2 86 4 217 2 88 1 90 2 222 1 91 2 93 2 94 1 227 1 95 1 98 1 230 1 102 1 103 1 229 2 231 2 105 4 106 2 235 1 236 1 237 1 108 2 110 5 111 2 244 3 246 14 249 2 251 3 253 1 121 1 255 2 125 4 258 1 126 1 127 1 259 4 
194 3 73 1 197 1 198 2 2 2 74 4 202 2 131 4 200 1 201 1 134 1 5 1 204 1 76 4 207 1 137 6 138 1 208 2 140 1 17 2 141 1 145 2 144 1 146 1 215 2 21 1 86 2 217 2 88 1 90 2 91 2 222 1 150 2 26 2 93 2 227 1 95 1 98 1 32 2 31 4 154 2 229 2 230 1 102 1 103 1 231 2 37 3 39 5 40 1 106 2 105 4 162 2 235 1 236 1 164 2 237 1 165 1 46 2 49 1 166 1 48 2 47 1 168 1 108 2 110 3 111 2 175 2 244 3 55 1 246 4 177 3 179 1 59 4 253 1 65 1 121 1 255 2 125 3 184 1 71 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
73 1 40 1 197 1 235 1 131 4 49 1 166 1 207 1 227 1 31 4 141 1 230 1 
194 3 73 1 197 1 198 2 2 2 74 4 202 2 200 1 131 4 201 1 134 1 5 1 76 4 207 1 137 6 138 1 208 2 17 2 141 1 145 2 144 1 146 1 215 2 21 1 86 2 217 2 88 1 90 2 222 1 91 2 150 2 26 2 93 2 227 1 32 2 31 4 154 2 229 2 230 1 102 1 103 1 231 2 104 1 37 3 39 5 40 1 106 2 162 2 105 4 235 1 236 1 164 2 43 1 237 1 165 1 46 2 49 1 166 1 48 2 47 1 168 1 108 2 110 3 111 2 175 2 115 1 244 3 55 1 246 4 177 3 179 1 59 4 253 1 65 1 121 1 255 2 125 3 184 1 71 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
194 4 73 1 1 1 197 1 202 2 131 4 200 1 201 1 6 4 7 1 5 1 76 2 207 1 137 4 79 1 81 2 140 1 210 1 82 2 141 1 211 2 145 2 144 1 146 1 21 1 86 2 23 4 88 1 218 2 25 1 90 2 221 2 27 2 227 1 31 4 154 3 230 1 102 2 103 1 40 1 105 2 235 1 236 1 163 2 237 1 165 1 49 1 166 1 47 1 168 1 110 3 55 1 246 8 179 1 63 1 253 1 121 1 66 4 125 3 184 1 71 1 72 1 187 2 258 1 126 1 127 1 192 4 259 4 128 3 
194 3 73 1 197 1 198 2 2 2 3 2 74 4 202 2 200 1 131 4 201 1 204 1 5 1 76 4 207 1 137 6 208 2 17 2 141 1 144 1 145 2 146 1 215 2 21 1 86 2 217 2 88 1 90 2 222 1 150 2 26 2 93 2 227 1 98 1 32 2 31 4 154 2 229 2 230 1 102 1 103 1 231 2 36 2 233 2 37 4 159 2 39 4 40 1 106 2 162 2 105 4 235 1 42 2 236 1 164 2 237 1 165 1 46 2 48 2 49 1 166 1 47 1 168 1 108 2 110 3 111 2 175 2 244 2 55 1 56 2 246 4 177 2 179 1 59 4 253 1 121 1 255 2 125 4 184 1 71 1 186 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
2 2 131 4 134 1 5 1 137 6 138 1 140 1 17 2 141 1 144 1 145 2 146 1 21 1 26 2 150 2 31 4 32 2 154 3 35 1 37 3 40 1 39 5 162 2 164 2 165 1 47 1 48 2 166 1 49 1 46 2 168 1 175 2 54 1 55 1 177 3 179 1 59 4 65 1 184 1 71 1 187 2 189 2 192 3 194 3 73 1 197 1 198 2 74 4 201 1 200 1 202 2 204 1 76 4 207 1 208 2 215 2 86 2 217 2 88 1 90 2 222 1 91 2 93 2 227 1 95 1 98 1 103 1 102 2 230 1 229 2 231 2 104 1 105 4 106 2 235 1 236 1 237 1 108 2 110 4 111 2 244 3 115 1 246 4 253 1 121 1 255 2 125 3 258 1 126 1 127 1 259 4 
0 1 3 2 2 2 131 4 135 2 5 1 8 2 137 6 13 1 140 1 17 2 19 1 145 2 144 1 146 1 26 2 150 2 31 4 32 2 154 2 36 2 37 4 159 2 40 1 39 4 161 1 162 2 42 2 164 2 165 1 47 1 166 1 49 1 48 2 46 2 168 1 52 1 176 1 175 2 55 1 56 2 177 2 179 1 59 4 60 2 184 1 186 1 187 2 189 2 192 3 194 3 73 1 197 1 198 2 74 4 202 2 201 1 200 1 204 1 76 4 207 1 206 2 208 2 80 2 215 2 214 1 86 2 217 2 88 1 90 2 222 1 93 2 227 1 98 1 103 1 102 1 230 1 229 2 231 2 233 2 105 4 106 2 235 1 236 1 237 1 240 1 108 2 110 3 243 1 111 2 113 1 244 2 246 4 117 1 118 1 253 1 122 1 123 1 255 2 125 3 258 1 126 1 127 1 259 4 
194 3 73 1 197 1 198 2 2 2 3 2 74 4 202 2 200 1 131 4 201 1 204 1 5 1 76 4 207 1 137 6 208 2 140 1 17 2 141 1 19 1 144 1 145 2 146 1 215 2 21 1 86 2 217 2 88 1 90 2 222 1 150 2 26 2 93 2 227 1 98 1 32 2 31 4 154 2 229 2 230 1 102 1 103 1 231 2 36 2 233 2 37 4 159 2 39 4 40 1 106 2 162 2 105 4 235 1 42 2 236 1 164 2 237 1 165 1 46 2 48 2 49 1 166 1 47 1 168 1 108 2 110 3 111 2 175 2 244 2 55 1 56 2 246 4 177 2 179 1 59 4 253 1 121 1 255 2 125 3 184 1 71 1 186 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
40 1 131 1 235 1 31 1 49 1 
194 3 73 1 197 1 198 2 2 2 74 4 202 2 131 4 200 1 201 1 134 1 5 1 204 1 76 4 207 1 137 6 138 1 208 2 17 2 141 1 145 2 144 1 146 1 215 2 21 1 86 2 217 2 88 1 90 2 222 1 91 2 150 2 26 2 93 2 227 1 95 1 98 1 32 2 31 4 154 2 229 2 102 1 103 1 231 2 104 1 37 3 39 5 40 1 106 2 105 4 162 2 235 1 236 1 164 2 237 1 165 1 46 2 49 1 166 1 48 2 47 1 168 1 108 2 110 3 111 2 175 2 115 1 244 3 55 1 246 4 177 3 179 1 59 4 253 1 65 1 121 1 255 2 125 3 184 1 71 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
194 3 73 1 197 1 198 2 2 2 74 4 202 2 131 4 200 1 201 1 134 1 5 1 204 1 76 4 207 1 137 6 138 1 208 2 17 2 141 1 145 2 144 1 146 1 215 2 21 1 86 2 217 2 88 1 90 2 222 1 91 2 150 2 26 2 93 2 227 1 95 1 98 1 32 2 31 4 154 2 229 2 102 1 103 1 231 2 104 1 37 3 39 5 106 2 105 4 162 2 235 1 236 1 164 2 237 1 165 1 46 2 49 1 166 1 48 2 47 1 168 1 108 2 107 1 110 3 111 2 175 2 115 1 244 3 55 1 246 4 177 3 179 1 59 4 253 1 65 1 121 1 255 2 125 3 184 1 71 1 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
3 2 2 2 131 4 134 5 5 1 137 6 138 5 17 2 141 1 144 1 145 2 146 1 21 9 26 2 150 2 30 1 31 4 32 2 154 2 36 2 38 1 37 9 159 2 40 1 39 9 162 10 42 2 164 2 165 1 48 10 49 1 166 1 47 1 46 2 168 1 53 1 175 2 54 1 55 1 56 2 177 7 179 1 59 4 62 1 64 1 65 5 184 1 71 9 186 1 187 2 188 1 189 2 192 3 194 3 73 1 197 1 198 2 74 4 201 1 200 9 202 2 204 1 76 6 207 1 208 10 215 2 86 10 217 2 88 9 90 2 222 9 91 2 223 1 93 2 226 1 227 1 98 1 230 1 102 1 103 1 229 2 231 2 104 1 233 2 105 6 106 2 235 1 236 1 237 1 108 2 241 1 110 11 112 1 111 2 115 1 244 7 246 6 253 1 121 1 255 2 125 19 258 1 126 1 127 1 259 4 
256 1 246 1 169 1 
18 1 246 1 
20 1 246 1 
18 1 246 1 
18 1 246 1 
20 1 246 1 
194 1 57 1 90 1 119 1 181 1 151 1 171 1 137 1 124 1 33 1 127 1 246 1 
194 1 137 1 90 1 127 1 83 1 246 1 
137 1 57 1 90 1 33 1 119 1 127 1 246 1 
20 1 246 1 
147 1 246 1 
69 1 23 1 132 1 246 1 
167 1 246 1 66 1 
20 1 196 1 22 1 21 1 86 1 88 1 200 1 224 2 110 1 70 1 125 2 77 1 71 1 211 1 259 2 246 2 84 1 
85 1 
110 1 21 1 22 1 70 1 86 1 77 1 125 2 71 1 88 1 200 1 149 1 211 1 84 1 
0 1 110 1 86 1 208 1 125 2 162 1 88 1 200 1 176 1 222 1 48 1 
0 2 86 1 88 1 162 2 200 1 222 1 48 2 254 1 110 1 125 3 208 2 176 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 2 86 1 88 1 162 2 200 1 222 1 48 2 254 1 110 1 125 3 208 2 176 1 
194 3 0 1 198 2 3 2 2 2 74 4 200 1 202 2 135 2 5 1 8 2 76 4 206 2 137 6 13 1 208 1 80 2 17 2 145 2 146 1 214 1 215 2 86 1 217 2 88 1 90 2 222 1 150 2 26 2 93 2 32 2 154 1 103 1 102 1 229 2 35 1 231 2 37 2 39 4 161 1 105 4 162 1 106 2 164 2 48 1 46 2 168 1 240 1 108 2 110 2 243 1 52 1 111 2 113 1 175 2 176 1 244 2 246 4 177 2 59 4 118 1 117 1 60 2 123 1 122 1 255 2 125 3 187 2 258 1 189 2 126 1 127 1 192 3 259 4 
0 1 37 1 233 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 116 2 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 198 1 3 1 2 1 74 2 200 1 202 1 135 1 5 1 8 1 76 2 206 1 137 3 13 1 208 1 80 1 17 1 145 1 146 1 215 1 86 1 217 1 88 1 90 1 222 1 150 1 26 1 93 1 32 1 154 1 103 1 102 1 229 1 231 1 37 1 39 2 161 1 105 2 162 1 106 1 164 1 48 1 46 1 108 1 110 1 111 1 175 1 176 1 244 1 246 2 177 1 59 2 60 1 255 1 125 3 187 1 189 1 192 3 259 2 
0 1 86 1 88 1 162 1 200 1 222 1 48 1 206 1 254 1 110 1 125 2 208 1 176 1 
198 1 2 1 3 1 74 2 202 1 135 1 5 1 8 1 76 2 206 1 137 3 80 1 17 1 141 1 145 1 146 1 215 1 217 1 90 1 26 1 150 1 93 1 32 1 154 1 102 1 103 1 229 1 36 1 231 1 37 2 233 1 159 1 39 2 161 1 106 1 105 2 42 1 164 1 46 1 108 1 111 1 175 1 244 1 56 1 246 2 177 1 59 2 60 1 121 1 255 1 125 1 187 1 189 1 192 3 259 2 
0 1 198 1 3 1 2 1 74 2 200 1 202 1 135 1 5 1 8 1 76 2 206 1 137 3 13 1 208 1 80 1 17 1 145 1 146 1 215 1 86 1 217 1 88 1 90 1 222 1 150 1 26 1 93 1 32 1 154 1 103 1 102 1 229 1 231 1 37 1 39 2 161 1 105 2 162 1 106 1 164 1 48 1 46 1 108 1 110 1 111 1 175 1 176 1 244 1 54 1 246 2 177 1 59 2 60 1 255 1 125 3 187 1 189 1 192 3 259 2 
198 1 3 1 2 1 74 2 200 1 202 1 135 1 5 1 8 1 76 2 206 1 137 3 208 1 80 1 17 1 141 1 145 1 146 1 215 1 21 1 86 1 217 1 88 1 90 1 222 1 150 1 26 1 93 1 32 1 154 1 103 1 102 1 229 1 231 1 37 1 39 2 161 1 105 2 162 1 106 1 164 1 48 1 46 1 108 1 110 1 111 1 175 1 244 1 54 1 246 2 177 1 59 2 60 1 121 1 255 1 125 3 71 1 187 1 189 1 192 3 259 2 
233 1 0 1 37 2 159 1 39 2 162 1 106 1 74 2 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 2 231 1 36 1 
0 1 37 1 233 1 39 2 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 1 233 1 39 2 198 1 74 2 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 2 231 1 36 1 
0 1 37 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
3 1 105 1 246 1 67 1 76 1 
105 1 246 1 93 1 67 1 76 1 
242 1 3 1 105 1 99 1 246 1 76 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 194 3 198 1 3 1 2 1 74 2 200 1 202 1 76 2 137 3 208 1 17 1 212 1 145 1 215 1 86 1 217 1 88 1 90 1 222 1 150 1 26 1 93 1 151 4 32 1 33 1 229 1 231 1 36 1 233 1 37 2 159 1 39 2 105 2 162 1 106 1 42 1 236 1 164 1 48 1 46 1 168 1 108 1 171 3 110 2 111 1 175 1 176 1 244 1 56 1 246 2 177 1 57 1 59 2 119 1 181 3 254 1 255 1 125 2 124 3 187 1 189 1 258 1 126 1 127 1 259 2 
0 1 37 1 39 2 198 1 106 1 162 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 54 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 233 1 159 1 39 2 198 1 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 1 233 1 39 2 198 1 74 3 162 1 106 1 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 116 2 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 116 2 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 2 233 1 159 1 39 2 74 3 162 1 106 1 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 56 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
0 1 37 1 39 2 106 1 162 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 1 39 2 106 1 162 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 1 39 2 198 1 106 1 162 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 116 2 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 58 1 86 1 88 1 162 1 200 1 222 1 48 1 254 1 110 1 125 2 208 1 176 1 
0 1 37 1 39 2 198 1 106 1 162 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 116 2 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 54 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 1 37 2 39 2 198 1 106 1 162 1 74 3 200 1 42 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 
0 2 194 2 2 1 74 2 200 1 137 2 208 2 14 1 17 1 142 1 212 2 145 1 215 1 86 2 217 1 88 1 90 1 24 1 222 1 150 1 26 1 151 3 32 1 33 1 229 1 231 1 35 1 37 1 233 1 39 2 41 1 162 2 106 1 236 1 164 1 238 1 48 2 46 1 168 1 108 1 169 3 171 2 109 1 110 4 111 1 175 1 176 1 244 1 246 3 177 1 57 1 59 2 119 1 181 2 254 1 255 1 125 3 124 2 187 1 258 1 189 1 126 1 127 1 259 2 
0 1 37 1 233 1 39 2 162 1 106 1 74 3 200 1 164 1 48 1 46 1 108 1 110 1 111 1 208 1 175 1 176 1 244 1 177 1 20 1 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 254 1 255 1 125 2 32 1 189 1 229 1 259 3 231 1 36 1 
194 2 0 1 195 1 2 1 200 1 236 1 168 1 169 3 171 2 137 2 110 2 172 1 173 1 17 1 176 1 211 1 246 4 212 1 145 1 213 1 248 1 216 1 57 1 250 1 86 1 87 1 88 1 90 1 119 1 181 2 68 1 151 3 28 1 124 2 125 2 187 1 258 1 154 1 126 1 127 1 156 1 
193 1 194 2 0 1 195 1 2 1 200 1 135 1 8 1 168 1 169 3 171 2 137 2 110 1 80 1 176 1 17 1 211 1 246 4 212 1 145 1 213 1 216 1 57 1 86 1 88 1 60 1 90 1 119 1 252 1 122 1 181 2 68 1 151 3 28 1 124 2 125 2 185 1 257 1 100 1 187 1 126 1 127 1 156 1 
0 1 37 1 177 1 39 1 86 1 162 1 88 1 200 1 134 1 222 1 48 1 65 1 110 1 138 1 208 1 125 2 176 1 244 1 
37 3 0 1 39 4 198 1 74 2 162 1 106 1 200 1 164 1 44 1 134 2 48 1 46 1 108 1 110 1 138 1 111 1 208 1 175 1 176 1 244 3 54 1 177 3 215 1 86 1 217 1 88 1 59 2 222 1 150 1 26 1 65 1 255 1 125 2 32 1 189 1 229 1 259 2 231 1 
232 1 0 1 37 3 177 3 39 3 86 1 162 1 88 1 200 1 134 3 222 1 48 1 65 1 110 1 138 1 208 1 125 2 176 1 244 3 
0 1 37 1 177 1 39 1 86 1 162 1 88 1 200 1 134 1 222 1 180 1 48 1 65 1 110 1 138 1 208 1 125 2 176 1 244 1 
0 1 86 1 88 1 162 1 200 1 134 1 222 1 180 1 48 1 65 1 110 1 125 2 208 1 176 1 
37 1 0 1 39 1 162 1 105 1 200 1 134 1 48 1 76 1 110 1 138 1 12 1 208 1 176 1 244 1 246 1 177 1 20 1 86 1 88 1 222 1 91 1 65 1 67 1 125 2 
125 1 219 1 4 1 
234 2 125 1 199 1 61 1 
125 1 153 1 4 1 170 1 
182 1 125 1 199 1 61 1 239 1 
225 1 4 1 
151 1 194 1 171 1 124 1 212 1 181 1 
209 1 80 1 90 1 135 1 8 1 127 1 122 1 
90 1 126 1 127 1 168 1 
151 1 194 1 171 1 124 1 33 1 212 1 181 1 
20 1 74 1 59 1 175 1 259 1 246 1 
59 1 164 1 
20 1 74 1 259 1 246 1 
74 1 59 2 164 1 175 1 44 1 120 1 259 1 
59 1 164 1 
21 1 
71 1 
21 1 
0 1 
0 1 
176 1 
21 1 86 1 88 1 200 1 180 1 45 1 110 1 11 1 125 2 71 1 97 1 16 1 114 1 143 1 211 1 
21 2 86 2 88 2 200 2 133 1 75 1 45 2 110 2 11 2 125 4 71 2 97 2 16 2 114 2 143 2 211 2 
20 1 21 1 86 1 88 1 200 1 45 1 136 1 66 2 50 1 110 1 11 1 125 2 71 1 97 1 16 1 114 1 143 1 211 1 246 3 259 1 
110 1 21 1 86 1 11 1 125 2 97 1 71 1 88 1 200 1 16 1 114 1 45 1 75 1 143 1 211 1 
21 2 86 2 88 2 200 2 149 1 75 1 45 2 110 2 11 2 125 4 71 2 97 2 16 2 190 1 114 2 143 2 211 2 
21 1 86 1 88 1 200 1 133 1 45 1 110 1 11 1 125 2 71 1 97 1 16 1 114 1 143 1 211 1 
21 1 86 1 88 1 200 1 149 1 45 1 110 1 11 1 125 2 71 1 97 1 16 1 114 1 190 1 143 1 211 1 
20 1 21 1 86 1 88 1 200 1 45 1 136 1 66 1 50 2 110 1 11 1 125 2 71 1 97 1 16 1 114 1 143 1 211 1 246 1 259 2 
96 1 
20 1 205 1 246 2 169 2 
20 1 51 1 246 2 169 2 
2 1 161 1 200 1 133 1 135 1 5 1 45 1 205 1 8 1 136 1 169 2 50 1 137 2 110 2 51 1 11 1 80 1 16 1 17 1 114 1 143 1 211 1 145 1 246 2 146 1 21 1 86 1 88 1 60 1 89 1 90 1 121 1 125 3 96 1 97 1 71 1 187 1 154 1 192 2 102 1 103 1 259 1 35 1 
11 1 88 1 200 1 190 1 149 1 
194 3 2 1 200 1 236 1 45 1 205 1 136 1 168 1 169 2 171 3 50 1 137 2 110 3 51 1 11 1 16 1 17 1 114 1 143 1 211 1 145 1 212 1 246 3 21 1 57 1 86 1 23 1 88 1 90 1 119 1 66 1 181 3 151 4 124 3 125 2 96 1 97 1 71 1 187 1 258 1 33 1 126 1 127 1 259 1 35 1 
1 1 21 1 86 1 105 1 88 1 200 1 163 1 44 1 6 1 63 1 7 1 167 1 66 1 76 1 27 1 110 1 125 2 71 1 210 1 82 1 211 1 259 1 246 2 128 2 157 1 
27 1 
1 1 161 1 105 1 202 1 200 1 163 1 135 1 6 2 7 1 5 1 8 1 76 1 110 2 137 2 80 1 81 1 210 1 82 1 211 1 246 3 145 1 146 1 21 1 86 1 23 2 88 1 218 1 60 1 90 1 221 1 63 1 121 1 27 1 66 2 183 1 125 3 71 1 187 1 154 1 192 4 102 1 103 1 259 2 128 2 35 1 
1 1 210 1 149 1 7 1 63 1 128 1 
194 4 1 1 105 1 202 1 200 1 236 1 163 1 6 2 7 1 168 1 76 1 171 4 137 2 110 3 81 1 210 1 82 1 211 1 246 3 145 1 212 1 21 1 57 1 86 1 23 2 88 1 218 1 90 1 221 1 119 1 63 1 27 1 66 2 181 4 151 5 124 4 125 2 71 1 187 1 258 1 33 1 126 1 127 1 259 2 128 2 35 1 
1 1 210 1 149 1 7 1 63 1 128 1 
21 1 86 1 88 1 200 1 6 1 63 1 92 1 66 1 110 1 125 2 71 1 81 1 210 1 155 1 211 1 259 1 246 1 128 1 
20 1 1 1 21 1 86 1 88 1 200 1 132 1 6 2 63 1 7 1 66 1 110 1 125 2 71 1 81 1 210 1 211 1 259 2 246 2 128 1 
194 2 1 1 200 1 236 1 6 1 7 1 168 1 171 2 137 1 110 3 81 1 210 1 211 1 246 1 145 1 212 1 21 1 57 1 86 1 23 1 88 1 218 1 90 1 221 1 119 1 63 1 27 1 66 1 181 2 151 3 124 2 125 2 71 1 187 1 258 1 33 1 126 1 127 1 259 1 128 1 35 1 
163 1 82 1 44 1 6 1 259 1 128 1 
20 1 218 1 
20 1 221 1 
1 1 105 1 200 1 163 1 7 1 6 1 76 1 110 1 210 1 82 1 211 1 246 2 21 1 86 1 88 1 63 1 27 1 66 1 125 2 71 1 128 2 259 1 

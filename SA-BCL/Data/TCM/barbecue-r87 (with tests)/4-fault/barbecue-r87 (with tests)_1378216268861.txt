#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR javax.servlet.ServletException 85 138 186 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR javax.servlet.ServletException 85 138 209 162 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR javax.servlet.ServletException 85 138 209 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | CONDITION | 7234 | if (x) -> if (!x)
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension; | CONDITION | 1261 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module; | CONDITION | 10783 | if (x) -> if (!x)
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
40 1 64 1 77 1 123 1 51 1 197 1 
40 1 64 1 77 1 123 1 51 1 
181 2 3 1 50 1 
168 1 222 1 2 1 185 1 84 1 200 1 171 2 123 1 139 1 227 3 67 1 145 1 126 1 206 1 21 1 232 1 39 1 55 1 220 1 
222 1 2 1 84 2 185 1 171 1 123 1 139 1 227 3 67 1 145 1 126 1 206 1 208 1 21 1 54 1 55 1 
222 1 145 1 206 2 126 1 177 1 55 3 2 1 171 1 227 2 67 2 
222 1 2 1 84 1 185 1 171 2 123 1 226 1 139 1 227 4 67 2 145 1 126 1 206 1 208 1 21 1 55 2 
212 1 222 1 145 1 2 1 
222 1 2 1 171 1 227 2 67 1 36 1 145 1 126 1 206 2 55 1 96 1 
222 1 168 1 2 1 185 1 84 1 171 1 123 2 86 1 139 2 227 3 67 1 126 1 206 1 21 1 39 1 232 1 55 1 77 1 220 1 13 1 
222 1 168 1 2 1 185 1 84 1 171 1 123 2 86 1 139 2 227 3 67 1 126 1 206 1 21 1 39 1 232 1 55 1 77 1 220 1 
62 1 222 1 2 1 171 1 123 1 188 1 86 1 139 1 227 2 67 1 88 1 145 1 126 1 206 1 55 1 77 1 13 1 
62 1 222 1 2 1 171 1 123 1 86 1 139 1 227 2 67 1 88 1 145 1 126 1 206 1 55 1 163 1 77 1 13 1 
62 1 222 1 2 1 171 1 123 1 86 1 139 1 227 2 67 1 88 1 145 1 126 1 206 1 92 1 55 1 22 1 77 1 164 1 
62 1 222 1 2 1 171 1 123 1 86 1 139 1 227 2 67 1 88 1 145 1 126 1 206 1 92 1 55 1 22 1 77 1 164 1 13 1 
222 1 145 1 206 1 126 1 177 1 55 2 2 1 171 2 227 3 67 1 
222 1 2 1 227 3 67 1 174 1 33 2 145 1 206 1 55 2 26 1 
222 1 145 1 206 2 55 1 2 1 196 1 227 2 174 1 67 1 33 1 
222 1 145 1 206 1 55 1 2 1 19 1 227 2 174 1 67 1 33 1 
222 1 145 1 206 1 55 1 2 1 48 1 227 2 174 1 67 1 33 1 
222 1 136 1 0 1 2 1 84 4 185 1 49 1 123 1 139 1 227 3 67 1 174 1 141 1 33 1 145 1 206 1 55 1 235 1 
222 1 2 1 227 2 67 1 174 1 33 1 145 1 203 1 215 1 206 1 55 1 
81 1 107 3 24 1 
107 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
61 1 28 1 18 1 85 1 138 1 8 1 194 1 23 1 209 1 93 4 41 1 95 4 166 1 26 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
61 1 28 1 18 1 85 1 138 1 8 1 194 1 23 1 209 1 93 4 41 1 95 4 166 1 26 1 
28 1 209 1 93 1 95 1 138 1 
8 1 28 1 194 1 85 1 209 1 93 4 41 1 166 1 95 4 138 1 26 1 
8 1 28 1 194 1 85 1 186 1 93 4 41 1 166 1 95 4 138 1 26 1 
28 1 85 1 18 1 138 1 8 1 162 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
8 1 28 1 194 1 85 1 209 1 18 1 93 4 41 1 166 1 95 4 138 1 
66 1 
28 1 18 1 85 1 138 1 8 1 194 1 209 1 93 4 41 1 95 4 166 1 26 1 
159 1 224 1 170 1 
199 1 170 1 
62 1 135 1 83 1 170 1 123 1 68 1 109 1 88 1 104 1 77 1 164 1 59 1 
88 1 62 1 104 1 83 1 170 1 77 1 123 1 
199 1 170 1 
83 1 77 1 131 1 170 1 123 1 68 1 
148 1 170 1 
170 1 221 1 
199 1 170 1 
170 1 221 1 
170 1 221 1 
183 1 11 1 76 1 170 1 
170 1 179 1 108 1 
45 1 106 2 2 1 4 2 199 1 170 2 29 1 227 2 174 1 190 1 33 1 34 1 205 1 175 1 206 1 231 1 55 1 
184 1 
212 1 45 1 2 1 29 1 227 2 174 1 190 1 33 1 34 1 205 1 206 1 231 1 55 1 
182 2 17 2 2 1 171 2 227 3 32 1 143 2 9 1 126 1 206 1 231 1 55 1 
116 2 182 1 118 1 2 1 4 3 65 1 125 1 9 1 126 1 127 1 73 1 10 1 192 1 129 3 195 3 12 1 132 2 14 2 16 1 17 1 199 1 143 1 204 1 146 1 206 1 147 1 210 1 149 1 150 1 154 1 31 1 32 1 103 1 161 1 105 1 46 1 223 2 47 1 170 8 171 1 227 2 231 1 176 1 178 1 55 1 234 1 180 1 
182 1 206 1 126 1 17 1 231 1 55 1 2 1 171 1 227 2 143 1 32 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 58 2 234 1 180 1 
182 1 17 1 2 1 171 1 189 1 227 2 32 1 143 1 9 1 126 1 206 1 231 1 55 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 58 2 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 115 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 10 1 103 1 161 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
62 1 182 2 118 1 2 1 4 2 120 1 65 1 123 1 68 2 125 1 127 1 9 1 126 1 192 1 77 1 195 2 12 1 132 2 14 1 135 2 80 1 17 2 16 1 83 2 19 1 86 1 20 1 201 1 143 2 88 1 146 1 204 1 206 4 92 2 154 1 30 1 31 1 32 1 216 1 36 1 159 3 157 1 217 1 103 1 161 1 163 1 164 3 42 1 46 1 223 2 47 1 170 3 171 2 226 1 227 3 109 2 231 1 55 2 178 1 234 1 59 2 180 1 60 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 55 1 178 1 234 1 180 1 
182 2 206 1 126 1 9 1 17 2 231 1 55 1 2 1 171 2 227 3 143 2 32 1 
182 1 118 2 2 1 4 4 119 1 185 1 121 1 120 2 65 2 123 2 68 3 125 2 126 1 127 2 191 2 130 3 77 1 195 4 12 2 132 4 133 1 14 2 15 4 134 1 80 1 82 2 17 1 16 2 83 6 84 1 19 2 86 1 87 1 201 2 143 1 204 2 146 2 206 2 91 2 21 1 150 2 152 2 98 1 154 2 31 2 100 2 32 1 35 1 36 1 217 2 103 2 161 2 219 1 165 1 46 2 223 4 47 2 170 4 171 1 172 1 227 3 51 2 52 1 228 4 231 1 54 1 56 2 55 1 178 2 113 1 233 2 234 2 180 2 60 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 58 2 234 1 180 1 
182 1 118 1 2 1 4 2 185 1 120 1 65 1 123 1 125 1 126 1 127 1 191 1 130 3 195 2 12 1 132 2 133 1 14 1 15 2 134 1 82 1 17 1 16 1 83 3 84 1 19 1 87 1 201 1 143 1 204 1 146 1 206 1 91 1 21 1 150 1 152 1 154 1 31 1 100 1 32 1 217 1 103 1 161 1 46 1 223 2 47 1 170 2 171 1 227 3 51 1 228 2 231 1 54 1 56 1 55 1 178 1 233 1 234 1 180 1 
182 1 17 1 2 1 171 1 227 2 32 1 143 1 9 1 126 1 206 1 91 1 231 1 55 1 
118 1 0 1 4 2 185 1 120 1 65 1 123 1 125 1 127 1 191 1 73 1 10 1 192 1 130 3 195 2 12 1 132 2 133 1 14 2 15 2 134 1 82 1 16 1 83 3 84 1 19 1 87 1 201 1 146 1 204 1 91 1 147 1 210 1 26 1 150 1 152 1 154 1 31 1 100 1 217 1 103 1 161 1 46 1 223 2 47 1 170 2 51 1 227 1 228 2 54 1 56 1 178 1 233 1 234 1 180 1 
115 1 182 1 118 1 2 1 4 2 185 1 120 1 65 1 123 1 125 1 126 1 127 1 191 1 130 3 195 2 12 1 132 2 133 1 14 1 15 2 134 1 82 1 17 1 16 1 83 3 84 1 19 1 87 1 201 1 143 1 204 1 146 1 206 1 91 1 21 1 150 1 152 1 154 1 31 1 100 1 32 1 217 1 103 1 161 1 46 1 223 2 47 1 170 2 171 1 227 3 51 1 228 2 231 1 54 1 56 1 55 1 178 1 233 1 234 1 180 1 
115 1 182 1 118 1 0 1 2 1 4 2 185 1 120 1 65 1 123 1 125 1 127 1 191 1 130 3 195 2 12 1 132 2 133 1 14 1 15 2 134 1 82 1 17 1 16 1 83 3 84 1 19 1 87 1 201 1 143 1 204 1 146 1 206 1 91 1 26 1 150 1 152 1 154 1 31 1 100 1 32 1 33 1 217 1 103 1 161 1 46 1 223 2 47 1 170 2 227 3 51 1 228 2 174 1 231 1 54 1 56 1 55 1 178 1 233 1 234 1 180 1 
182 1 118 1 2 1 4 2 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 2 12 1 132 2 14 2 46 1 16 1 17 1 223 2 47 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 147 1 178 1 55 1 210 1 234 1 180 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 2 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 73 1 103 1 161 1 192 1 195 2 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
82 1 170 1 114 1 228 1 15 1 
170 1 114 1 233 1 228 1 15 1 
82 1 170 1 173 1 228 1 69 1 15 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
62 1 182 1 118 1 2 1 4 2 120 1 65 1 123 1 68 3 125 1 127 1 9 1 126 1 10 1 73 1 192 1 77 1 195 2 12 1 132 2 14 2 15 2 135 3 80 1 16 1 82 1 17 1 83 3 19 1 86 1 201 1 143 1 88 1 204 1 146 1 206 2 147 1 92 1 210 1 150 1 154 1 31 1 32 1 157 1 104 1 217 1 103 1 161 1 164 4 46 1 223 2 47 1 170 2 171 1 227 2 51 1 228 2 109 3 231 1 178 1 55 1 233 1 234 1 59 3 180 1 60 1 
150 1 115 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
150 1 182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 58 2 234 1 180 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 58 2 234 1 180 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 9 1 10 1 73 1 103 1 161 1 192 1 195 3 12 1 132 2 14 2 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 146 1 204 1 206 1 231 1 147 1 55 1 178 1 210 1 234 1 180 1 
182 1 118 1 2 1 4 3 154 1 65 1 31 1 32 1 125 1 127 1 126 1 103 1 161 1 195 3 12 1 132 2 14 1 46 1 17 1 16 1 223 2 47 1 199 1 171 1 227 2 143 1 204 1 146 1 206 1 231 1 55 1 178 1 234 1 180 1 
62 1 2 1 120 1 29 1 123 1 188 1 68 2 155 1 7 1 126 1 157 1 159 3 158 1 39 1 217 1 77 1 164 3 220 1 168 1 135 2 80 1 83 2 84 1 170 4 171 1 19 1 86 1 227 2 109 2 201 1 202 1 88 1 206 2 231 1 232 1 92 1 55 1 57 1 94 1 59 2 60 1 
62 1 152 1 2 1 120 1 29 1 187 1 123 1 100 1 68 2 214 1 155 1 7 1 215 1 126 1 191 1 159 3 158 1 217 1 77 1 164 3 165 1 135 2 80 1 198 1 83 2 170 4 171 1 19 1 227 2 109 2 201 1 202 1 88 1 144 1 203 1 206 1 231 1 92 1 56 1 55 1 57 1 94 1 59 2 60 1 
150 1 181 1 115 1 182 1 118 1 2 1 4 2 154 1 65 3 31 1 124 1 32 1 125 3 127 3 126 1 103 1 38 2 161 3 195 2 12 1 132 4 14 3 46 3 16 1 17 1 223 4 47 1 171 1 227 2 143 1 146 1 204 3 206 1 112 1 231 1 178 3 55 1 234 3 180 1 
182 1 2 1 65 3 124 1 32 1 125 3 127 3 126 1 72 1 38 3 161 3 132 3 14 3 46 3 17 1 223 3 171 1 227 2 143 1 204 3 206 1 112 1 231 1 178 3 55 1 234 3 
182 1 2 1 65 1 124 1 32 1 125 1 127 1 126 1 38 1 161 1 132 1 14 1 46 1 17 1 223 1 48 1 171 1 227 2 143 1 204 1 206 1 112 1 231 1 178 1 55 1 234 1 
182 1 17 1 2 1 48 1 171 1 124 1 227 2 32 1 143 1 206 1 126 1 231 1 38 1 55 1 
182 1 2 1 65 1 124 1 32 1 125 1 156 1 127 1 126 1 38 1 161 1 132 1 14 1 15 1 46 1 17 1 223 1 199 1 170 1 225 1 171 1 227 2 228 1 143 1 204 1 206 1 112 1 231 1 178 1 55 1 114 1 234 1 
182 1 2 1 65 1 124 1 32 1 125 1 127 1 126 1 38 1 161 1 132 1 14 1 46 1 17 1 223 1 171 1 227 2 143 1 204 1 206 1 112 1 231 1 178 1 55 1 234 1 
5 1 227 1 97 1 110 1 
128 1 37 1 200 1 227 1 167 1 
227 1 110 1 142 1 
230 2 128 1 200 1 227 1 
137 1 110 1 
135 1 92 1 164 1 59 1 109 1 68 1 
80 1 77 1 123 1 60 1 
135 1 92 1 104 1 164 1 59 1 109 1 68 1 
191 1 56 1 77 1 165 1 123 1 100 1 140 1 
181 1 4 1 154 1 195 1 132 2 234 1 25 1 
132 1 234 1 
4 1 154 1 199 1 170 1 195 1 132 1 
132 1 234 1 
4 1 199 1 170 1 195 1 
174 1 
33 1 
33 1 
171 1 
126 1 
171 1 
153 1 169 1 2 1 1 1 29 1 227 2 89 1 230 1 206 1 70 1 231 1 71 1 55 1 75 1 193 1 
153 1 169 1 2 1 1 1 48 1 29 1 227 2 230 1 206 1 70 1 231 1 71 1 55 1 75 1 193 1 
153 2 169 2 2 2 1 2 29 2 227 4 89 1 230 2 206 2 70 2 71 2 90 1 231 2 55 2 75 2 193 2 
212 1 153 1 169 1 2 1 1 1 29 1 227 2 230 1 206 1 70 1 71 1 231 1 55 1 75 1 193 1 27 1 
43 2 153 1 169 1 2 1 1 1 4 2 199 1 170 1 29 1 227 2 6 1 230 1 206 1 70 1 231 1 71 1 55 1 75 1 193 1 179 1 
44 1 
159 2 199 1 170 2 229 1 
159 2 199 1 170 2 79 1 
152 1 151 1 153 1 1 1 2 1 4 1 185 1 120 1 29 1 123 1 100 1 6 1 36 1 70 1 191 1 71 1 159 2 217 1 75 1 130 2 193 1 79 1 133 1 44 1 43 1 134 1 169 1 83 2 84 1 170 2 19 1 87 1 227 3 201 1 229 1 89 1 206 2 230 1 231 1 54 1 21 1 56 1 55 1 
212 1 231 1 2 1 75 1 27 1 
62 1 2 1 1 1 4 1 120 1 123 1 6 1 68 3 70 1 71 1 11 1 75 1 77 1 193 1 79 1 135 3 80 1 83 2 19 1 86 1 201 1 88 1 206 3 92 1 153 1 29 1 36 1 159 2 157 1 217 1 104 1 164 4 43 1 44 1 169 1 170 3 227 2 229 1 109 3 230 1 231 1 55 1 59 3 179 1 60 1 
43 1 153 1 169 1 2 1 1 1 4 1 199 1 170 3 29 1 227 2 6 1 230 1 206 1 70 1 231 1 71 1 55 1 75 1 193 1 179 2 
153 1 169 1 2 1 1 1 29 1 227 2 230 1 206 1 70 1 71 1 90 1 231 1 55 1 75 1 193 1 
212 1 153 2 169 2 2 2 1 2 29 2 227 4 230 2 206 2 70 2 71 2 90 1 231 2 55 2 75 2 193 2 27 1 
212 1 102 1 117 1 63 1 74 1 99 1 
183 1 63 1 2 1 4 2 29 1 122 1 102 1 218 1 74 1 169 1 170 2 199 1 227 2 111 1 230 1 206 1 207 2 231 1 55 1 179 1 211 1 
117 1 183 1 63 1 169 1 2 1 4 2 199 1 170 2 122 1 29 1 99 1 227 2 102 1 207 2 206 1 230 1 231 1 74 1 55 1 179 1 
62 1 117 1 63 1 2 1 4 1 122 1 29 1 123 1 99 1 68 2 101 1 102 1 36 1 157 1 104 1 11 1 217 1 74 1 78 1 77 1 164 3 135 2 80 1 169 1 83 1 170 1 19 1 86 1 227 2 109 2 53 1 88 1 207 1 230 1 206 3 231 1 92 1 55 1 59 2 179 1 60 1 
181 1 207 1 160 1 213 1 74 1 4 1 
199 1 101 1 
199 1 53 1 
117 1 63 1 2 1 213 1 4 1 29 1 99 1 102 1 160 1 74 2 78 1 15 1 169 1 170 2 227 2 228 1 230 1 206 1 207 1 231 1 55 1 179 1 
181 1 117 1 63 1 2 1 213 1 4 1 29 1 99 1 102 1 160 1 74 2 78 1 15 1 169 1 170 2 50 1 227 2 228 1 108 1 230 1 206 1 207 1 231 1 55 1 179 1 
78 1 
117 1 63 1 2 1 4 2 185 1 122 1 123 1 191 1 11 2 74 2 130 4 78 1 133 1 15 1 134 1 83 2 84 1 19 1 87 1 206 1 207 2 21 1 152 1 213 1 29 1 99 1 100 1 101 1 102 1 217 1 160 1 218 1 169 1 170 3 227 3 51 1 228 1 53 1 230 1 231 1 54 1 55 1 56 1 179 2 
212 1 102 1 117 1 63 1 74 1 99 1 
62 1 117 1 63 1 2 1 4 2 122 1 123 1 68 4 11 2 74 2 77 1 78 1 15 1 135 4 80 1 83 2 19 1 86 1 88 1 206 3 207 2 92 1 213 1 29 1 99 1 101 1 102 1 36 1 157 1 217 1 160 1 104 1 164 5 169 1 170 3 227 2 51 1 228 1 109 4 53 1 230 1 231 1 55 1 59 4 179 2 60 1 

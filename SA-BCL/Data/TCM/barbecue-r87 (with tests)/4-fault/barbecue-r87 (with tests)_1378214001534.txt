#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 107 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 79 7 100 111 3 32 73 97 23 144 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage; | ASSIGN | 3259 | = null
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8235 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V | CONSTANT | 3706 | 1 -> 0
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 122 1 66 1 170 1 229 1 
233 1 149 1 193 2 
64 1 122 1 66 1 170 1 229 1 55 1 
35 1 30 1 124 1 33 1 
78 2 50 1 94 1 30 1 2 2 33 1 201 1 57 1 124 1 127 1 128 1 146 2 
17 1 78 3 94 1 30 1 2 1 187 1 168 2 33 1 170 1 86 1 88 1 156 1 173 1 100 1 57 1 176 1 229 2 128 1 146 1 182 1 
17 1 78 3 94 1 30 1 2 1 187 1 168 2 33 1 170 1 88 1 156 1 173 1 100 1 57 1 176 1 229 2 128 1 146 1 182 1 
78 2 94 1 30 1 2 1 168 1 33 1 170 1 86 1 5 1 54 1 100 1 57 1 8 1 124 1 229 1 128 1 146 1 
78 2 94 1 30 1 2 1 168 1 33 1 170 1 86 1 54 1 100 1 57 1 157 1 8 1 124 1 229 1 128 1 146 1 
78 2 94 1 237 1 30 1 2 1 168 1 33 1 170 1 54 1 53 1 100 1 57 1 222 1 8 1 124 1 229 1 128 1 146 1 
78 2 94 1 237 1 30 1 2 1 168 1 33 1 170 1 86 1 54 1 53 1 100 1 57 1 222 1 8 1 124 1 229 1 128 1 146 1 
57 1 78 3 205 1 94 1 2 2 30 1 124 1 33 1 146 1 128 2 
78 3 94 1 63 1 30 1 33 1 171 1 58 2 124 1 128 2 146 1 
78 2 58 1 184 1 94 1 30 1 124 1 33 1 171 1 146 2 128 1 
78 2 94 1 30 1 198 1 33 1 171 1 58 1 124 1 128 1 146 1 
220 1 78 2 58 1 94 1 30 1 124 1 33 1 171 1 146 1 128 1 
78 3 94 1 30 1 67 1 187 4 168 1 169 1 33 1 171 1 241 1 58 1 178 1 124 1 129 1 229 1 128 1 146 1 182 1 
234 1 78 2 58 1 94 1 30 1 124 1 210 1 33 1 171 1 146 1 128 1 
78 3 94 1 30 1 187 1 168 1 169 1 33 1 171 1 88 1 156 1 173 1 58 1 176 1 124 1 229 1 128 1 146 1 182 1 
78 3 94 1 114 1 30 1 187 2 168 1 169 1 33 1 171 1 58 1 124 1 180 1 229 1 128 1 146 1 182 1 
78 2 94 2 30 1 33 1 171 1 58 1 205 1 124 1 128 3 146 2 
78 4 94 2 30 1 114 1 187 1 168 1 169 1 33 1 171 1 58 2 44 1 124 1 229 1 128 2 146 1 182 1 
132 1 115 1 161 3 
161 1 
48 1 111 1 112 1 114 1 187 2 4 1 3 1 118 2 6 1 56 1 58 1 7 2 192 2 128 2 194 2 15 1 60 1 64 1 63 1 198 1 135 1 202 1 205 1 208 1 142 1 23 1 72 1 145 4 74 5 24 4 73 1 146 3 76 1 79 1 78 3 218 1 30 1 32 1 219 1 154 2 91 1 158 2 226 1 227 2 229 2 232 1 165 4 41 2 97 1 169 1 170 1 171 1 172 1 43 2 174 1 240 1 100 1 101 1 177 1 45 2 180 1 46 1 247 1 109 1 182 1 
47 2 110 2 49 1 1 1 111 1 112 4 114 1 187 2 52 1 4 1 3 1 191 1 117 1 58 1 7 2 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 1 18 1 64 1 63 1 65 1 131 1 134 1 198 1 135 1 202 1 203 2 139 1 205 1 206 1 207 1 143 1 23 1 72 1 145 3 74 14 24 4 73 1 146 3 79 1 78 3 218 1 28 1 30 1 81 1 32 1 85 1 219 1 155 1 90 1 221 2 91 1 93 3 160 2 162 1 229 2 232 1 165 4 40 1 166 1 238 2 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 244 1 245 2 101 1 177 1 106 1 105 1 180 1 46 1 182 1 
47 2 110 2 49 1 1 1 111 1 112 4 114 1 187 2 4 1 3 1 191 1 117 1 58 1 7 2 126 1 12 1 128 2 194 2 16 2 15 1 195 1 60 4 61 1 18 1 64 1 63 1 65 1 134 1 198 1 135 1 202 1 139 1 205 1 206 1 207 1 143 1 23 1 72 1 145 3 24 4 73 1 74 4 146 3 79 1 78 3 218 1 28 1 30 1 81 1 32 1 85 1 219 1 155 1 90 1 221 2 91 1 160 2 229 2 232 1 165 4 166 1 238 2 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 244 1 245 2 177 1 101 1 106 1 105 1 180 1 46 1 182 1 
47 3 110 2 49 1 1 1 111 1 112 4 113 1 114 1 187 2 4 1 3 1 191 1 117 2 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 68 1 198 1 135 1 202 1 139 1 205 1 206 1 141 1 207 2 23 1 72 1 145 3 74 4 24 4 73 1 146 3 211 1 79 1 78 3 217 1 218 1 28 1 30 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 2 228 1 229 2 232 1 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 106 2 180 1 46 1 182 1 
148 1 
47 3 110 2 49 1 111 1 1 1 112 4 113 1 114 1 187 2 3 1 4 1 191 1 117 2 119 1 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 201 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 23 1 72 1 145 3 74 4 24 4 73 1 146 4 211 1 79 1 78 3 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 2 228 1 229 2 232 1 165 4 236 1 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 180 1 106 2 46 1 182 1 
47 3 110 2 49 1 111 1 1 1 112 4 113 1 114 1 187 2 3 1 4 1 191 1 117 2 119 1 7 2 58 2 126 1 12 1 128 3 194 2 15 1 16 3 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 201 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 23 1 72 1 145 3 74 4 24 4 73 1 146 5 211 1 79 1 78 4 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 3 228 1 229 2 232 1 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 3 245 3 244 2 44 1 102 1 101 1 177 1 180 1 106 2 46 1 182 1 
47 3 110 2 49 1 111 1 1 1 112 4 113 1 114 1 187 2 4 1 3 1 191 1 117 2 119 1 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 23 1 72 1 145 3 74 4 24 4 73 1 146 3 211 1 79 1 78 3 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 2 228 1 229 2 232 1 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 180 1 106 2 46 1 182 1 
165 4 63 1 218 1 97 1 135 1 219 1 202 1 23 1 24 4 46 1 232 1 15 1 
47 2 110 2 49 1 1 1 111 1 112 4 114 1 2 1 187 2 4 1 3 1 191 1 117 1 57 1 7 2 9 1 126 1 12 1 128 2 194 2 16 2 15 1 195 1 17 1 60 4 61 1 18 1 64 1 65 1 134 1 198 1 135 1 202 1 139 1 205 1 206 1 207 1 21 1 209 1 143 1 23 1 72 1 145 3 24 4 73 1 74 4 146 3 213 1 79 1 78 3 218 1 28 1 30 1 81 1 32 1 85 1 34 1 219 1 155 1 90 1 221 2 91 1 160 2 229 2 232 1 165 4 166 1 238 2 97 1 170 1 43 3 99 1 240 1 100 1 243 2 244 1 245 2 177 1 101 1 106 1 105 1 180 1 46 1 108 1 182 1 
165 1 218 1 97 1 23 1 24 1 
47 3 110 2 49 1 1 1 111 1 112 4 113 1 114 1 187 2 4 1 3 1 191 1 117 2 119 1 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 23 1 72 1 145 3 74 4 24 4 73 1 146 3 211 1 79 1 78 3 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 2 228 1 229 2 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 180 1 106 2 46 1 182 1 
47 3 110 2 49 1 1 1 111 1 112 4 113 1 114 1 187 2 4 1 3 1 191 1 117 2 119 1 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 72 1 145 3 74 4 24 4 73 1 146 3 211 1 79 1 78 3 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 160 2 228 1 229 2 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 180 1 106 2 46 1 107 1 182 1 
47 3 110 2 49 1 111 1 1 1 112 4 113 1 114 1 187 2 3 1 4 1 191 1 117 2 7 2 58 1 126 1 12 1 128 2 194 2 15 1 16 2 195 1 60 4 61 3 18 2 64 1 63 1 65 2 134 1 69 1 198 1 135 1 202 1 139 1 205 1 206 1 141 1 207 2 143 1 144 1 23 1 72 1 145 3 74 4 24 4 73 1 146 3 211 1 79 1 78 3 217 1 218 1 28 1 30 1 81 1 32 1 85 2 219 1 155 1 90 2 221 2 91 1 224 1 160 2 228 1 229 2 232 1 165 4 166 1 96 2 167 1 97 1 169 1 170 1 171 1 43 3 99 1 240 1 100 1 243 2 245 3 244 2 102 1 101 1 177 1 180 1 106 2 46 1 182 1 
131 1 74 1 248 1 
43 1 120 1 170 1 74 1 98 1 229 1 
43 1 62 1 8 1 74 1 170 1 229 1 54 1 
196 1 62 1 130 1 170 1 54 1 53 1 43 1 120 1 8 1 74 1 181 1 229 1 
74 1 136 1 
74 1 136 1 
74 1 163 1 
74 1 70 1 
74 1 136 1 
74 1 70 1 
74 1 70 1 
20 1 158 1 74 1 200 1 
84 1 74 1 154 1 
78 2 51 1 42 1 30 1 4 1 171 1 136 1 58 1 223 2 192 1 246 1 225 1 74 2 128 1 146 1 230 1 194 2 
92 1 
78 2 51 1 42 1 30 1 4 1 171 1 35 1 58 1 192 1 225 1 128 1 146 1 230 1 
47 2 78 2 110 3 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 211 1 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 147 2 
78 2 1 1 186 1 30 1 2 1 4 1 57 1 121 1 243 1 160 1 128 1 146 1 16 1 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 147 2 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 2 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 2 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 2 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 
47 2 78 2 110 3 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 2 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
47 2 110 2 78 2 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 2 16 1 195 1 61 2 18 1 236 1 65 1 134 1 69 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
47 2 78 2 110 2 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 2 16 1 195 1 61 2 18 1 65 1 134 1 69 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
47 2 110 2 1 1 2 2 4 1 190 1 191 1 117 1 54 1 53 3 57 1 7 1 121 1 120 2 8 1 126 1 11 1 12 1 14 1 128 2 16 2 194 2 195 1 196 2 61 1 18 1 62 1 130 2 131 3 65 1 134 1 198 1 201 1 139 1 204 1 206 1 207 1 74 3 146 4 78 3 79 1 28 1 30 1 85 1 155 1 90 1 157 1 222 2 160 2 229 1 164 1 166 1 170 1 240 1 99 1 43 2 100 1 243 2 244 1 245 2 44 1 106 1 181 2 
47 2 78 2 110 3 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
78 3 1 1 30 1 2 2 4 1 57 1 121 1 243 2 160 2 128 1 146 1 16 2 
0 1 47 4 110 4 49 2 1 1 112 4 113 2 2 1 187 1 4 1 190 1 191 2 117 2 57 1 120 3 7 2 9 2 126 2 12 2 128 1 16 1 194 4 60 4 17 1 195 2 61 4 18 2 64 2 65 2 69 2 134 2 198 2 201 1 137 1 139 2 207 2 206 2 21 1 209 2 72 1 145 3 74 4 25 1 146 2 212 1 211 2 213 2 77 1 79 1 78 3 217 2 80 1 28 2 30 1 85 2 87 1 34 2 155 2 90 2 221 2 36 1 160 1 229 2 166 2 238 2 170 1 99 2 43 6 100 1 243 1 244 2 245 4 101 1 102 2 106 2 180 1 183 1 108 2 182 1 
47 2 78 2 110 3 49 1 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 3 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 163 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
78 3 1 1 30 1 2 2 4 1 57 1 121 1 243 2 160 2 128 1 146 1 16 2 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 2 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 
57 1 78 2 1 1 243 1 2 1 30 1 160 1 4 1 146 1 128 1 16 1 
47 2 110 2 49 1 1 1 112 2 113 1 2 1 187 1 4 1 191 1 117 1 57 1 7 1 9 1 126 1 12 1 128 1 16 1 194 2 60 2 17 1 195 1 61 2 18 1 64 1 65 1 69 1 134 1 198 1 139 1 207 1 206 1 21 1 209 1 72 1 145 3 74 2 146 1 211 1 213 1 78 3 217 1 28 1 30 1 85 1 34 1 90 1 155 1 221 1 160 1 229 1 166 1 238 1 99 1 43 3 243 1 244 1 245 2 101 1 102 1 106 1 180 1 108 1 182 1 
78 2 1 1 30 1 2 1 4 1 57 1 121 1 243 1 9 1 160 1 128 1 146 1 16 1 
47 2 110 2 49 1 112 2 187 1 191 1 117 1 7 1 9 1 126 1 12 1 194 2 60 2 195 1 61 1 18 1 64 1 63 1 65 1 134 1 198 1 139 1 207 1 206 1 21 1 209 1 72 1 145 3 74 2 213 1 78 1 28 1 85 1 34 1 90 1 155 1 221 1 229 1 166 1 238 1 169 1 43 3 99 1 245 2 244 1 101 1 180 1 106 1 182 1 108 1 
47 2 110 2 49 1 1 1 112 2 113 1 2 1 187 1 4 1 191 1 117 1 57 1 7 1 9 1 126 1 12 1 128 1 16 1 194 2 195 1 60 2 17 1 61 1 18 1 64 1 65 1 69 1 134 1 198 1 139 1 206 1 207 1 21 1 209 1 72 1 145 3 74 2 146 1 211 1 213 1 78 3 217 1 28 1 30 1 85 1 34 1 155 1 90 1 221 1 160 1 229 1 166 1 236 1 238 1 99 1 43 3 243 1 244 1 245 2 101 1 180 1 106 1 108 1 182 1 
47 2 110 2 49 1 1 1 112 2 113 1 187 1 4 1 191 1 117 1 7 1 58 1 9 1 126 1 12 1 128 1 16 1 194 2 195 1 60 2 61 1 18 1 63 1 64 1 65 1 69 1 134 1 198 1 139 1 206 1 207 1 21 1 209 1 72 1 145 3 74 2 146 1 211 1 213 1 78 3 217 1 28 1 30 1 85 1 34 1 155 1 90 1 221 1 160 1 229 1 166 1 236 1 238 1 169 1 171 1 99 1 43 3 243 1 244 1 245 2 101 1 180 1 106 1 108 1 182 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 3 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 110 3 78 2 1 1 49 1 113 1 217 1 28 1 2 1 30 1 4 1 85 1 191 1 117 1 155 1 90 1 57 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 110 3 78 2 1 1 49 1 113 1 217 1 28 1 2 1 30 1 4 1 85 1 191 1 117 1 155 1 90 1 57 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 110 3 78 2 1 1 49 1 113 1 217 1 28 1 2 1 30 1 4 1 85 1 191 1 117 1 155 1 90 1 57 1 160 1 126 1 12 1 163 1 128 1 16 1 194 3 195 1 61 2 18 1 65 1 69 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
47 2 78 2 110 2 1 1 49 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 110 3 78 2 1 1 49 1 113 1 217 1 28 1 2 1 30 1 4 1 85 1 191 1 117 1 155 1 90 1 57 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 211 1 
60 1 112 1 238 1 10 1 74 1 
60 1 221 1 112 1 10 1 74 1 
138 1 60 1 112 1 238 1 74 1 231 1 
47 2 78 2 110 3 49 1 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 3 195 1 61 2 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 
47 2 110 2 49 1 1 1 112 2 2 1 4 1 190 1 191 1 117 1 54 1 53 4 57 1 7 1 121 1 120 3 8 1 126 1 12 1 128 1 16 1 194 2 195 1 60 2 196 3 61 1 18 1 62 1 64 1 130 3 65 1 134 1 198 1 139 1 206 1 207 1 74 2 146 2 78 2 79 1 28 1 30 1 85 1 155 1 90 1 221 1 222 1 160 1 229 1 166 1 238 1 170 1 240 1 99 1 43 3 100 1 243 1 244 1 245 2 106 1 181 3 
47 2 110 3 78 2 49 1 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 3 16 1 195 1 61 1 18 1 236 1 65 1 134 1 69 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 211 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 128 1 16 1 194 2 195 1 61 1 18 1 65 1 134 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 3 1 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 121 1 160 1 126 1 12 1 163 1 128 1 16 1 194 3 195 1 61 1 18 1 65 1 134 1 136 1 139 1 206 1 207 1 243 1 244 1 245 2 106 1 146 1 
47 2 78 2 110 2 1 1 113 1 217 1 28 1 2 1 30 1 4 1 191 1 85 1 117 1 155 1 90 1 57 1 126 1 160 1 12 1 128 1 194 2 16 1 195 1 61 2 18 1 65 1 134 1 69 1 139 1 206 1 207 1 243 1 244 1 245 2 102 1 106 1 146 1 211 1 
78 2 79 1 150 1 2 1 30 1 187 1 4 1 190 1 83 1 5 1 88 1 53 3 54 1 156 1 89 1 57 1 120 2 7 1 222 1 192 1 8 1 38 1 128 1 229 1 196 2 130 2 197 1 95 1 166 1 131 3 198 1 170 1 173 1 43 2 99 1 240 1 100 1 176 1 181 2 74 4 146 2 
213 1 214 1 78 2 79 1 150 1 2 1 30 1 189 1 4 1 190 1 83 1 116 1 34 1 53 3 54 1 89 1 57 1 120 2 7 1 222 1 192 1 8 1 38 1 128 1 229 1 196 2 234 1 130 2 197 1 95 1 131 3 166 1 198 1 170 1 137 1 43 2 99 1 209 1 210 1 181 2 74 4 75 1 146 1 108 1 
47 3 110 2 78 2 1 1 217 1 113 1 28 1 30 1 2 1 4 1 191 1 85 2 117 2 155 1 90 2 57 1 126 1 160 1 12 1 228 1 128 1 194 2 16 1 195 1 61 3 18 2 236 1 65 2 167 1 134 1 69 1 139 1 206 1 141 1 207 2 243 1 245 3 244 2 102 1 106 2 146 1 211 1 
47 3 78 2 1 1 30 1 2 1 4 1 85 3 117 3 90 3 57 1 160 1 228 3 128 1 16 1 61 3 18 3 65 3 167 1 141 1 207 3 243 1 245 3 244 3 22 1 106 3 146 1 
47 1 78 2 1 1 30 1 2 1 4 1 85 1 117 1 90 1 220 1 57 1 160 1 228 1 128 1 16 1 61 1 18 1 65 1 167 1 141 1 207 1 243 1 245 1 244 1 106 1 146 1 
78 2 1 1 167 1 30 1 2 1 4 1 220 1 57 1 243 1 160 1 228 1 146 1 128 1 16 1 
47 1 78 2 1 1 30 1 2 1 4 1 85 1 117 1 90 1 57 1 160 1 228 1 128 1 16 1 61 1 18 1 65 1 167 1 141 1 207 1 243 1 245 1 244 1 106 1 146 1 
47 1 78 2 1 1 112 1 30 1 2 1 188 1 4 1 85 1 117 1 90 1 57 1 10 1 160 1 228 1 128 1 16 1 60 1 61 1 18 1 96 1 65 1 167 1 136 1 141 1 207 1 243 1 245 1 244 1 106 1 74 1 146 1 
78 1 239 1 103 1 26 1 
78 1 50 1 37 1 199 1 153 1 
78 1 59 1 103 1 
78 1 50 1 175 2 199 1 
185 1 103 1 
196 1 222 1 120 1 130 1 181 1 53 1 
196 1 222 1 120 1 62 1 130 1 181 1 53 1 
79 1 190 1 170 1 229 1 
213 1 39 1 170 1 34 1 137 1 229 1 108 1 
110 1 245 2 28 1 151 1 193 1 117 1 194 1 
245 1 117 1 
110 1 245 1 28 1 74 1 136 1 194 1 
245 1 117 1 
110 1 74 1 136 1 194 1 
171 1 
58 1 
58 1 
2 1 
2 1 
57 1 
78 2 235 1 30 1 133 1 31 1 4 1 71 1 192 1 175 1 123 1 159 1 125 1 104 1 128 1 146 1 
78 2 29 1 30 1 133 1 31 1 4 1 136 1 154 1 71 1 192 1 175 1 123 1 159 1 125 1 104 1 74 1 13 2 128 1 146 1 194 2 
216 1 
78 2 30 1 133 1 31 1 4 1 220 1 71 1 192 1 175 1 123 1 159 1 125 1 104 1 128 1 146 1 
78 4 235 1 30 2 133 2 31 2 4 2 71 2 192 2 175 2 123 2 159 2 179 1 125 2 104 2 128 2 146 2 
140 1 131 2 74 2 136 1 
213 1 78 3 216 1 29 1 30 1 187 1 31 1 4 1 82 1 34 1 7 1 192 1 123 1 159 1 125 1 13 1 128 1 229 1 194 1 17 1 235 1 166 1 131 2 133 1 198 1 201 1 43 2 99 1 140 1 71 1 21 1 209 1 101 1 175 1 72 1 104 1 145 2 180 1 74 2 146 2 108 1 27 1 182 1 
35 1 242 1 30 1 125 1 4 1 
4 1 190 1 54 1 53 4 7 1 120 3 192 1 8 1 123 1 125 1 13 1 128 1 194 1 196 3 62 1 130 3 131 2 133 1 198 1 201 1 140 1 71 1 74 3 146 3 78 2 79 1 216 1 30 1 29 1 31 1 82 1 154 1 222 1 159 1 158 1 229 1 166 1 170 1 240 1 99 1 43 2 100 1 175 1 104 1 181 3 
78 2 30 1 133 1 31 1 4 1 35 1 71 1 242 1 192 1 175 1 123 1 159 1 125 1 104 1 128 1 146 1 
78 2 30 1 29 1 31 1 4 1 154 2 192 1 123 1 159 1 125 1 13 1 163 1 128 1 194 1 133 1 136 1 71 1 175 1 104 1 74 3 146 1 
78 2 30 1 133 1 31 1 4 1 71 1 192 1 175 1 123 1 159 1 179 1 125 1 104 1 128 1 146 1 
78 4 30 2 133 2 31 2 4 2 35 1 242 1 71 2 192 2 175 2 123 2 159 2 179 1 125 2 104 2 128 2 146 2 
131 2 82 1 74 2 136 1 
48 1 78 2 41 1 30 1 4 1 200 1 136 1 154 1 172 1 6 1 174 1 192 1 208 1 175 1 123 1 45 2 74 2 146 1 128 1 194 2 
48 1 78 2 79 1 30 1 4 1 190 1 154 1 53 3 54 1 118 1 6 1 120 2 222 1 7 1 192 1 8 1 123 1 158 1 227 1 128 1 229 1 194 1 196 2 62 1 130 2 41 1 198 1 170 1 201 1 172 1 43 1 174 1 240 1 100 1 208 1 175 1 45 1 74 1 181 2 247 1 146 3 
174 1 35 1 41 1 208 1 172 1 6 1 
78 2 48 1 215 1 30 1 4 1 152 1 154 1 6 1 192 1 123 1 128 1 194 2 41 1 19 1 200 1 136 1 174 1 175 1 45 2 74 2 146 1 
78 2 149 1 112 1 30 1 4 1 84 1 154 1 6 1 56 1 192 1 123 1 193 1 128 1 194 1 60 1 41 2 172 1 174 1 208 1 142 1 175 1 45 1 74 2 247 1 146 1 
247 1 
213 1 48 1 78 3 215 1 112 1 30 1 187 1 4 1 34 1 154 2 118 1 6 1 56 1 7 1 192 1 123 1 158 2 227 1 128 1 229 1 194 2 60 1 17 1 64 1 41 2 198 1 201 1 172 1 174 1 43 2 208 1 21 1 209 1 142 1 175 1 101 1 45 2 72 1 145 4 180 1 74 3 247 1 146 2 108 1 182 1 
174 1 35 1 41 1 208 1 172 1 6 1 
48 1 78 2 79 1 112 1 30 1 4 1 190 1 154 2 53 5 54 1 118 1 6 1 56 1 120 4 222 1 7 1 192 1 8 1 123 1 158 2 227 1 128 1 229 1 194 2 60 1 196 4 62 1 64 1 130 4 41 2 198 1 170 1 201 1 172 1 43 2 174 1 240 1 100 1 208 1 142 1 175 1 45 2 74 3 181 4 247 1 146 3 
227 1 136 1 
136 1 118 1 
78 2 112 1 30 1 4 1 154 1 6 1 56 1 192 1 123 1 128 1 194 1 60 1 41 2 172 1 174 1 208 1 142 1 175 1 45 1 74 2 247 1 146 1 
56 1 41 1 142 1 45 1 193 1 194 1 

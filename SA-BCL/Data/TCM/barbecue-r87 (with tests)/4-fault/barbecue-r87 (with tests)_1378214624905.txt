#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode; | OPERATOR | 7033 | == -> !=
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String; | OPERATOR | 6752 | != -> ==
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 12734 | 2 -> 1
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module; | STATEMENT | 10540 | stmt -> ;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
72 1 124 1 93 1 94 1 28 1 123 1 
72 1 93 1 94 1 28 1 123 1 
105 1 78 1 109 2 
72 1 103 1 159 1 147 1 49 1 219 1 75 1 163 1 63 1 183 3 18 1 35 1 153 1 142 1 243 1 215 1 47 1 121 2 194 1 
72 1 103 1 147 1 219 1 75 1 163 1 63 1 236 1 183 3 35 1 243 1 215 1 30 1 121 1 47 2 194 1 
103 1 163 1 8 1 243 1 
103 1 238 1 62 1 163 1 63 1 183 2 215 1 243 1 35 2 121 1 194 1 
72 2 103 1 159 1 147 1 49 1 219 1 75 2 61 1 63 1 183 3 18 1 35 1 93 1 95 1 142 1 243 1 215 1 47 1 121 1 194 1 
72 2 103 1 159 1 147 1 49 1 219 1 75 2 63 1 183 3 18 1 35 1 93 1 95 1 142 1 243 1 215 1 47 1 121 1 194 1 
72 1 103 1 14 1 75 1 163 1 61 1 63 1 183 2 35 1 169 1 37 1 93 1 95 1 243 1 215 1 121 1 194 1 
72 1 103 1 14 1 75 1 163 1 61 1 63 1 183 2 35 1 169 1 130 1 93 1 95 1 243 1 215 1 121 1 194 1 
72 1 103 1 14 1 75 1 163 1 63 1 183 2 19 1 35 1 169 1 93 1 95 1 81 1 43 1 243 1 215 1 121 1 194 1 
72 1 103 1 14 1 75 1 61 1 163 1 63 1 183 2 19 1 35 1 169 1 93 1 95 1 81 1 43 1 243 1 215 1 121 1 194 1 
103 1 163 1 63 1 183 3 174 1 215 1 243 1 35 1 121 2 194 2 
103 1 163 1 223 2 183 3 167 1 35 1 24 1 243 1 215 1 194 2 
103 1 202 1 163 1 223 1 167 1 183 2 215 1 243 1 35 2 194 1 
103 1 149 1 163 1 223 1 167 1 183 2 215 1 243 1 35 1 194 1 
103 1 163 1 223 1 167 1 183 2 174 1 215 2 243 1 35 2 194 3 
72 1 103 1 219 1 75 1 163 1 223 2 183 4 167 1 35 1 243 1 215 2 193 1 30 1 47 1 59 1 194 2 
103 1 148 1 163 1 223 1 167 1 183 2 215 1 243 1 35 1 194 1 
72 1 103 1 219 1 75 1 163 1 223 1 183 3 167 1 107 1 35 1 209 1 129 1 243 1 215 1 101 1 193 1 47 4 194 1 
103 1 163 1 223 1 183 2 167 1 35 1 243 1 215 1 232 1 146 1 194 1 
22 1 114 3 226 1 
114 1 
3 1 4 14 5 1 6 2 126 1 127 2 9 1 131 2 10 2 132 2 13 1 134 2 135 1 138 1 141 1 140 2 23 1 25 1 27 2 29 2 145 4 30 1 31 2 147 1 149 2 150 4 33 1 34 2 35 3 154 2 38 1 44 4 157 2 45 2 47 2 50 1 161 1 164 2 166 1 53 1 168 2 55 3 56 2 57 3 174 1 58 1 176 2 178 2 180 3 63 1 64 1 183 3 66 2 67 1 70 1 186 1 192 4 195 1 194 2 196 1 72 2 198 4 74 1 203 4 205 1 208 2 210 1 79 2 80 1 212 1 214 1 213 2 216 1 220 2 219 1 85 4 221 1 88 4 89 2 227 1 90 2 93 1 94 2 95 1 96 1 229 2 99 1 102 2 103 1 235 1 104 6 236 1 106 2 108 1 110 2 113 1 115 2 117 2 118 2 244 1 121 1 122 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 216 1 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 3 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 2 167 1 166 1 108 1 110 2 55 3 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 2 183 4 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 216 1 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 50 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 11 1 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 239 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 3 183 4 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 4 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 3 80 1 23 1 24 1 25 1 214 1 213 2 216 1 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 2 88 4 89 2 35 5 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 3 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 238 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 59 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 216 1 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
135 1 23 1 150 1 44 1 166 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 11 1 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 23 1 80 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 161 1 104 6 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 239 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 125 1 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 11 1 132 2 192 4 193 1 194 2 195 1 198 4 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 23 1 80 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 161 1 104 6 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 239 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 11 1 132 2 192 4 193 1 194 2 195 1 197 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 3 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 2 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 1 167 1 166 1 108 1 110 2 55 3 239 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
233 1 
178 2 4 4 6 2 66 2 183 3 127 2 67 1 131 2 10 2 11 1 132 2 192 4 193 1 194 2 195 1 198 4 135 1 72 2 134 2 138 1 203 4 205 1 140 2 141 1 210 1 79 2 80 1 23 1 24 1 25 1 214 1 213 2 216 1 27 2 30 1 145 4 31 2 219 1 220 2 150 4 221 1 85 4 149 2 33 1 34 2 223 1 88 4 89 2 35 4 154 2 227 1 93 1 95 1 94 2 96 1 38 1 229 2 44 4 99 1 157 2 45 2 47 3 102 2 103 1 235 1 104 6 161 1 164 2 106 2 236 2 167 1 166 1 108 1 110 2 55 3 238 1 239 1 115 2 57 3 118 2 117 2 174 1 244 1 58 1 
113 1 4 1 77 1 
185 1 4 1 
4 1 16 1 
72 1 14 1 4 1 104 1 237 1 169 1 93 1 242 1 57 1 43 1 98 1 191 1 
72 1 169 1 93 1 14 1 104 1 4 1 191 1 
4 1 16 1 
72 1 93 1 104 1 4 1 57 1 15 1 
4 1 190 1 
4 1 16 1 
185 1 4 1 
185 1 4 1 
4 1 86 1 7 1 46 1 
60 1 136 1 4 1 
103 1 4 2 76 1 203 2 223 1 16 1 183 2 167 1 35 1 36 1 40 1 189 1 172 2 12 1 82 1 195 1 194 1 
156 1 
103 1 76 1 223 1 189 1 8 1 12 1 167 1 183 2 82 1 35 1 36 1 194 1 195 1 
103 1 63 1 183 3 66 2 35 1 79 2 157 2 158 1 58 1 121 2 195 1 194 1 
178 2 3 1 5 1 4 4 6 2 63 1 64 1 183 3 66 1 127 2 70 1 9 1 186 1 131 2 10 2 132 2 192 4 195 1 194 1 134 2 72 2 198 4 74 1 203 4 205 1 140 2 208 2 79 1 212 1 214 1 213 2 27 2 29 2 145 4 31 2 147 1 220 2 219 1 85 4 149 2 34 2 88 4 35 2 89 2 90 2 154 2 93 1 95 1 94 2 38 1 229 2 157 1 45 2 47 1 102 2 103 1 104 6 164 2 236 1 106 2 53 1 110 2 168 2 238 1 55 3 56 2 115 2 57 3 117 2 118 2 244 1 58 1 121 1 122 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
217 1 178 1 222 2 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
103 1 63 1 183 3 66 2 35 1 79 2 157 2 158 1 58 1 121 2 195 1 194 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
103 1 63 1 66 1 183 2 157 1 35 1 121 1 58 1 194 1 195 1 79 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
178 1 222 2 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 190 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
103 1 63 1 182 1 183 2 66 1 35 1 79 1 157 1 158 1 58 1 121 1 195 1 194 1 
178 1 222 2 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 187 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 121 1 58 1 145 3 31 1 
178 1 4 3 6 1 63 1 183 3 66 2 127 1 130 1 10 1 191 1 192 2 195 1 194 2 198 2 134 1 72 1 14 1 203 2 140 1 141 1 207 1 19 2 79 2 214 1 213 1 27 1 145 2 31 1 149 1 34 1 224 1 87 1 89 1 35 4 154 1 93 1 95 1 38 1 229 1 43 3 98 2 157 2 45 1 158 1 102 1 103 1 104 2 164 1 106 1 110 1 237 2 169 1 238 1 170 1 113 3 242 2 115 1 57 2 117 1 118 1 58 1 121 2 59 1 177 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 154 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
178 1 4 2 6 1 63 1 183 3 66 1 127 1 70 1 131 1 10 1 132 1 192 2 195 1 194 1 134 1 72 1 198 2 203 2 205 1 140 1 208 1 79 1 213 1 27 1 29 1 145 2 31 1 147 1 220 1 219 1 149 1 85 2 34 1 88 2 35 1 89 1 90 1 154 1 94 1 229 1 157 1 45 1 47 1 102 1 103 1 104 3 164 1 236 1 106 1 110 1 168 1 55 3 56 1 115 1 117 1 118 1 244 1 58 1 121 1 
103 1 63 1 183 2 66 1 35 1 90 1 79 1 157 1 158 1 58 1 121 1 195 1 194 1 
178 1 4 2 6 1 183 1 127 1 70 1 131 1 10 1 132 1 192 2 193 1 72 1 134 1 198 2 203 2 205 1 140 1 208 1 24 1 213 1 27 2 29 1 145 2 31 1 217 1 220 1 219 1 149 1 85 2 34 1 224 1 88 2 152 1 89 1 90 1 154 1 94 1 229 1 97 1 45 1 47 1 102 1 104 3 162 1 164 1 236 1 106 1 110 1 168 1 55 3 56 1 115 1 118 1 117 1 244 1 
178 1 4 2 6 1 63 1 183 3 66 1 127 1 70 1 131 1 10 1 187 1 132 1 192 2 195 1 194 1 134 1 72 1 198 2 203 2 205 1 140 1 208 1 79 1 213 1 27 1 29 1 145 2 31 1 147 1 220 1 219 1 149 1 85 2 34 1 88 2 35 1 89 1 90 1 154 1 94 1 229 1 157 1 45 1 47 1 102 1 103 1 104 3 164 1 236 1 106 1 110 1 168 1 55 3 56 1 115 1 117 1 118 1 244 1 58 1 121 1 
178 1 4 2 6 1 183 3 66 1 127 1 70 1 131 1 10 1 187 1 132 1 192 2 193 1 195 1 194 1 134 1 72 1 198 2 203 2 205 1 140 1 208 1 79 1 24 1 213 1 27 1 29 1 145 2 31 1 220 1 219 1 85 2 149 1 34 1 223 1 88 2 35 1 89 1 90 1 154 1 94 1 229 1 157 1 45 1 47 1 102 1 103 1 104 3 164 1 236 1 106 1 167 1 110 1 168 1 55 3 56 1 115 1 117 1 118 1 244 1 58 1 
217 1 178 1 63 1 224 1 34 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 103 1 198 2 162 1 164 1 203 2 106 1 140 1 110 1 79 1 115 1 117 1 213 1 118 1 27 2 121 1 58 1 145 2 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 164 1 203 2 106 1 16 1 140 1 110 1 79 1 115 1 118 1 213 1 117 1 27 1 145 2 121 1 58 1 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
91 1 85 1 4 1 88 1 132 1 
91 1 220 1 85 1 4 1 88 1 
85 1 4 1 171 1 88 1 132 1 133 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
178 1 4 2 6 1 63 1 183 2 66 1 127 1 131 1 10 1 132 1 191 1 192 2 195 1 194 1 134 1 72 1 198 2 14 1 203 2 140 1 141 1 19 1 79 1 214 1 213 1 27 2 145 2 31 1 217 1 220 1 85 2 149 1 224 1 34 1 88 2 89 1 35 2 152 1 154 1 93 1 95 1 94 1 97 1 229 1 38 1 43 4 98 3 157 1 45 1 158 1 102 1 103 1 162 1 104 3 164 1 106 1 110 1 237 3 169 1 242 3 115 1 57 3 117 1 118 1 58 1 121 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 131 1 229 1 187 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
217 1 178 1 222 2 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 131 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 145 3 121 1 58 1 31 1 
217 1 178 1 222 2 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
217 1 178 1 63 1 34 1 224 1 66 1 183 2 127 1 89 1 35 1 152 1 154 1 97 1 229 1 192 2 157 1 45 1 158 1 194 1 195 1 102 1 198 2 103 1 162 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 2 145 3 121 1 58 1 31 1 
178 1 63 1 34 1 66 1 183 2 127 1 89 1 35 1 154 1 229 1 192 2 157 1 45 1 194 1 195 1 102 1 198 2 103 1 164 1 203 3 106 1 16 1 140 1 110 1 79 1 115 1 213 1 117 1 118 1 27 1 121 1 58 1 145 3 31 1 
4 4 149 1 6 1 63 1 183 2 128 1 35 2 36 1 228 1 37 1 93 1 95 1 10 1 39 1 38 1 231 1 98 2 43 3 47 1 194 1 195 1 103 1 72 1 134 1 159 1 49 1 14 1 104 2 141 1 17 1 18 1 51 1 19 1 237 2 169 1 242 2 113 3 57 2 142 1 214 1 121 1 
4 4 149 1 6 1 63 1 183 2 184 1 128 1 35 1 36 1 228 1 155 1 93 1 39 1 38 1 10 1 231 1 98 2 43 3 232 1 194 1 195 1 103 1 72 1 134 1 14 1 104 2 206 1 17 1 208 1 51 1 19 1 237 2 168 1 169 1 212 1 56 1 242 2 113 3 57 2 175 1 214 1 29 1 146 1 121 1 
178 3 63 1 34 3 183 2 66 1 35 1 89 3 71 1 229 3 42 1 192 3 157 1 102 3 195 1 194 1 198 3 103 1 199 1 79 1 240 3 115 3 117 3 27 3 58 1 121 1 31 3 
178 1 148 1 63 1 34 1 183 2 66 1 35 1 89 1 71 1 229 1 192 1 157 1 102 1 195 1 194 1 198 1 103 1 199 1 79 1 240 1 115 1 117 1 27 1 58 1 121 1 31 1 
103 1 148 1 63 1 183 2 66 1 35 1 79 1 71 1 240 1 157 1 58 1 121 1 195 1 194 1 
178 1 85 1 4 1 63 1 34 1 88 1 183 2 66 1 35 1 89 1 91 1 71 1 230 1 229 1 192 1 157 1 102 1 195 1 194 1 198 1 103 1 199 1 79 1 240 1 115 1 117 1 27 1 58 1 121 1 31 1 
178 1 63 1 34 1 183 2 66 1 35 1 89 1 71 1 229 1 192 1 157 1 102 1 195 1 194 1 198 1 103 1 199 1 79 1 240 1 115 1 117 1 27 1 58 1 121 1 31 1 
178 3 63 1 34 3 183 2 66 1 127 1 35 1 89 3 154 1 71 1 131 1 229 3 187 1 192 4 157 1 45 1 102 3 195 1 194 1 198 4 103 1 199 1 164 1 203 2 106 1 140 1 109 1 110 1 79 1 240 2 115 3 118 1 213 1 117 3 27 3 145 2 58 1 121 1 31 3 
116 1 183 1 173 1 144 1 153 1 
111 1 183 1 20 1 
183 1 144 1 68 2 153 1 
111 1 241 1 200 1 183 1 
111 1 234 1 
242 1 57 1 98 1 43 1 19 1 237 1 
72 1 93 1 38 1 214 1 
242 1 57 1 98 1 43 1 191 1 19 1 237 1 
72 1 208 1 93 1 56 1 212 1 120 1 29 1 
198 2 179 1 203 1 109 1 145 1 110 1 31 1 
198 1 31 1 
198 1 4 1 203 1 16 1 145 1 110 1 
198 1 31 1 
4 1 203 1 16 1 145 1 
167 1 
223 1 
223 1 
121 1 
63 1 
121 1 
103 1 218 1 32 1 148 1 165 1 204 1 183 2 35 1 69 1 68 1 36 1 143 1 195 1 194 1 48 1 
103 2 218 2 32 2 165 2 204 2 139 1 183 4 35 2 69 2 68 2 36 2 188 1 143 2 195 2 194 2 48 2 
103 1 218 1 32 1 165 1 204 1 8 1 183 2 151 1 35 1 69 1 68 1 36 1 143 1 195 1 194 1 48 1 
136 1 103 1 218 1 32 1 84 1 4 1 165 1 203 2 204 1 16 1 183 2 35 1 69 1 68 1 36 1 211 2 143 1 195 1 194 1 48 1 
52 1 
113 2 4 2 41 1 16 1 
112 1 113 2 4 2 16 1 
218 1 32 1 147 1 84 1 219 1 149 1 4 2 6 1 183 3 35 2 70 1 68 1 69 1 36 1 10 1 41 1 47 1 48 1 194 1 195 1 103 1 72 1 134 1 104 2 165 1 203 1 204 1 139 1 205 1 236 1 208 1 52 1 211 1 168 1 55 2 238 1 56 1 112 1 113 2 143 1 244 1 29 1 245 1 
103 1 165 1 8 1 151 1 195 1 
218 1 32 1 84 1 149 1 4 3 6 1 86 1 183 2 35 3 68 1 69 1 36 1 93 1 95 1 10 1 38 1 41 1 98 3 43 4 191 1 48 1 194 1 195 1 136 1 103 1 72 1 134 1 14 1 104 2 165 1 203 1 204 1 141 1 19 1 52 1 237 3 211 1 169 1 238 1 242 3 112 1 113 2 57 3 214 1 143 1 
136 2 103 1 218 1 32 1 84 1 4 3 165 1 203 1 204 1 16 1 183 2 35 1 69 1 68 1 36 1 211 1 143 1 195 1 194 1 48 1 
103 1 218 1 32 1 165 1 204 1 183 2 35 1 69 1 68 1 36 1 188 1 143 1 195 1 194 1 48 1 
103 2 218 2 32 2 165 2 204 2 8 1 183 4 151 1 35 2 69 2 68 2 36 2 188 1 143 2 195 2 194 2 48 2 
103 1 218 1 32 1 165 1 204 1 139 1 183 2 35 1 69 1 68 1 36 1 143 1 195 1 194 1 48 1 
103 1 92 1 181 1 183 2 65 1 143 1 35 1 68 1 36 1 194 1 195 1 
2 1 4 4 7 1 225 1 183 2 35 1 68 1 36 1 92 1 194 1 195 1 103 1 136 1 73 1 160 1 201 1 137 1 203 2 16 1 54 2 21 1 119 1 143 1 
136 1 103 1 160 1 181 1 4 2 203 2 7 1 16 1 65 1 183 2 35 1 54 2 68 1 36 1 92 1 143 1 195 1 194 1 
1 1 181 1 4 1 149 1 86 1 183 2 65 1 35 3 68 1 36 1 92 1 93 1 95 1 38 1 98 2 43 3 191 1 194 1 195 1 136 1 103 1 72 1 134 1 160 1 14 1 104 1 203 1 141 1 19 1 54 1 237 2 169 1 238 1 242 2 57 2 26 1 214 1 143 1 83 1 
0 1 201 1 203 1 100 1 109 1 54 1 
1 1 16 1 
26 1 16 1 
136 1 103 1 0 1 181 1 85 1 4 2 201 1 203 1 88 1 65 1 183 2 35 1 54 1 68 1 36 1 92 1 100 1 143 1 195 1 194 1 83 1 
60 1 0 1 181 1 4 2 85 1 183 2 65 1 88 1 35 1 68 1 36 1 92 1 100 1 194 1 195 1 103 1 136 1 201 1 105 1 203 1 54 1 109 1 143 1 83 1 
83 1 
0 1 147 1 1 1 181 1 219 1 85 1 4 3 149 1 86 2 88 1 183 3 65 1 35 2 70 1 68 1 36 1 92 1 94 1 100 1 47 1 194 1 195 1 136 2 103 1 72 1 134 1 160 1 201 1 104 2 203 2 205 1 236 1 208 1 54 2 168 1 238 1 55 4 56 1 26 1 119 1 143 1 244 1 29 1 83 1 
103 1 92 1 181 1 183 2 65 1 143 1 35 1 68 1 36 1 194 1 195 1 
0 1 1 1 181 1 85 1 4 3 149 1 86 2 88 1 183 2 65 1 35 3 68 1 36 1 92 1 93 1 94 1 95 1 38 1 98 4 43 5 191 1 100 1 194 1 195 1 136 2 103 1 72 1 134 1 160 1 14 1 201 1 104 2 203 2 141 1 19 1 54 2 237 4 169 1 238 1 242 4 57 4 26 1 214 1 143 1 83 1 

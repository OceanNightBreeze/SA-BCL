#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z | ASSIGN | 8602 | = null
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 90 1 69 1 171 1 50 1 
238 1 137 1 115 2 
225 1 90 1 69 1 171 1 156 1 50 1 
78 1 79 2 153 1 63 1 155 2 6 2 51 1 191 1 219 1 221 3 141 2 
97 1 211 1 79 1 185 1 153 1 155 4 6 2 50 1 51 1 191 1 219 1 221 2 162 1 139 1 224 1 141 2 
181 1 51 1 191 1 153 1 
51 1 191 1 53 1 79 2 219 1 221 1 153 1 72 1 155 2 6 1 141 1 
225 1 211 2 150 1 18 1 79 1 153 1 155 3 234 1 6 1 216 1 50 2 51 1 33 1 127 1 219 1 162 1 221 1 139 1 224 1 141 1 
225 1 211 2 150 1 18 1 79 1 153 1 155 3 234 1 6 1 50 2 51 1 33 1 127 1 219 1 162 1 221 1 139 1 224 1 141 1 
225 1 211 1 18 1 79 1 120 1 153 1 203 1 155 2 6 1 50 1 216 1 51 1 191 1 219 1 221 1 113 1 141 1 
225 1 211 1 18 1 79 1 120 1 153 1 155 2 6 1 50 1 216 1 51 1 191 1 88 1 219 1 221 1 113 1 141 1 
225 1 211 1 18 1 79 1 120 1 153 1 170 1 155 2 6 1 50 1 51 1 191 1 174 1 175 1 219 1 221 1 113 1 141 1 
225 1 211 1 18 1 79 1 120 1 153 1 170 1 155 2 6 1 50 1 216 1 51 1 191 1 174 1 175 1 219 1 221 1 113 1 141 1 
51 1 191 1 78 1 79 1 219 1 221 2 153 1 155 3 6 1 141 2 
51 1 34 1 191 1 79 1 108 1 221 2 153 1 116 2 155 3 6 1 
43 1 51 1 191 1 79 2 108 1 221 1 153 1 116 1 155 2 6 1 
51 1 191 1 183 1 79 1 108 1 221 1 153 1 116 1 155 2 6 1 
211 1 150 1 79 1 153 1 155 3 234 1 6 1 50 1 51 1 33 1 191 1 127 1 108 1 162 1 221 1 139 1 114 1 116 1 
211 1 185 1 79 1 153 1 155 3 6 1 50 1 51 1 191 1 108 1 221 1 162 2 94 1 139 1 114 1 116 1 
51 1 191 1 147 1 79 1 108 1 221 1 153 1 116 1 155 2 6 1 
211 1 79 1 153 1 135 1 155 3 6 1 50 1 51 1 191 1 9 1 109 1 108 1 221 1 162 4 139 1 114 1 116 1 73 1 
75 1 51 1 52 1 191 1 79 1 108 1 221 1 153 1 116 1 155 2 6 1 
182 1 89 1 57 3 
57 1 
132 2 5 1 7 2 10 1 11 6 139 1 14 1 15 1 17 1 18 1 22 14 146 2 149 1 27 1 151 1 28 1 153 1 29 2 30 2 155 4 34 1 158 1 37 4 38 3 160 3 161 2 39 1 162 2 41 1 166 4 44 1 45 3 171 2 50 2 172 2 53 1 176 4 177 2 55 3 59 2 183 2 185 1 61 2 189 1 190 2 65 1 67 1 68 2 194 1 70 4 196 2 74 1 78 1 79 5 199 1 198 2 82 1 81 2 202 4 201 1 84 4 205 2 206 2 94 1 208 1 209 4 97 1 98 1 212 4 213 2 214 2 101 1 104 3 102 2 106 2 108 1 220 1 221 4 112 1 114 1 116 2 226 1 225 1 117 2 227 1 232 1 231 2 121 2 124 1 125 3 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 28 1 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
186 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 192 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 4 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 2 149 1 208 1 209 4 98 1 212 4 213 2 214 2 28 1 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 3 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 235 1 172 2 50 2 124 1 125 3 53 1 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 192 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 235 1 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 2 149 1 208 1 209 4 98 1 212 4 213 2 214 2 28 1 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 3 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 4 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 28 1 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 47 1 121 2 171 2 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
74 1 101 1 212 1 176 1 82 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 192 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 38 2 160 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 235 1 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 0 2 5 1 7 2 10 1 11 6 139 1 14 1 15 1 141 1 142 1 17 1 18 1 22 4 144 2 146 2 24 1 149 1 28 1 153 1 29 2 30 2 155 3 158 1 37 4 160 2 38 2 161 2 162 2 41 1 42 1 166 4 44 1 45 3 167 2 47 1 46 1 48 2 171 2 50 2 172 2 176 4 177 2 55 2 178 1 58 1 59 2 183 2 60 1 184 1 185 1 61 2 189 1 190 2 65 1 67 1 68 2 194 1 195 2 70 4 196 2 74 1 78 1 79 3 198 2 81 2 82 1 202 4 201 1 84 4 205 2 206 2 93 1 94 1 208 1 209 4 96 1 98 1 212 4 213 2 214 2 101 1 102 2 219 1 220 1 221 2 112 1 224 1 226 1 225 1 117 2 227 1 232 1 231 2 121 2 124 1 125 3 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 192 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 38 2 160 2 108 1 220 1 221 2 162 2 112 1 222 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 235 1 172 2 50 2 124 1 125 3 176 4 55 2 177 2 129 2 240 1 
132 2 59 2 183 2 185 1 61 2 5 1 190 2 189 1 65 1 192 1 67 1 7 2 10 1 68 2 194 1 11 6 196 2 70 4 139 1 14 1 15 1 74 1 78 1 17 1 18 1 198 2 79 3 81 2 82 1 201 1 202 4 22 4 84 4 205 2 206 2 146 2 94 1 149 1 208 1 209 4 98 1 212 4 213 2 214 2 29 2 153 1 30 2 155 3 34 1 158 1 102 2 101 1 37 4 161 2 160 2 38 2 108 1 220 1 221 2 162 2 112 1 41 1 114 1 116 1 225 1 226 1 117 2 227 1 166 4 45 3 44 1 231 2 232 1 121 2 171 2 235 1 172 2 50 2 124 1 237 1 125 3 176 4 55 2 177 2 129 2 240 1 
128 1 199 1 22 1 
193 1 22 1 
239 1 22 1 
239 1 22 1 
225 1 125 1 2 1 11 1 22 1 50 1 
225 1 26 1 120 1 168 1 170 1 22 1 122 1 50 1 125 1 11 1 113 1 40 1 
225 1 26 1 120 1 11 1 113 1 22 1 50 1 
193 1 22 1 
193 1 22 1 
200 1 22 1 
239 1 22 1 
56 1 188 1 22 1 
152 1 233 1 64 1 22 1 
209 1 70 1 30 1 180 1 22 1 
209 1 23 1 118 1 7 1 70 1 22 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 183 1 61 1 136 1 190 1 66 1 7 1 68 1 11 3 196 1 70 2 140 1 141 1 198 1 18 1 79 2 81 1 201 1 202 2 22 2 84 2 205 1 206 1 146 1 91 1 209 2 26 1 213 1 214 1 29 1 153 1 30 1 155 2 217 1 158 1 102 1 37 2 161 1 160 1 38 1 219 1 220 1 221 1 113 1 41 1 40 3 225 1 117 1 166 2 120 1 168 3 231 1 171 1 170 4 121 1 122 3 50 1 172 1 126 1 125 3 175 1 177 1 55 1 129 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 163 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 1 213 1 214 1 61 1 100 2 29 1 153 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 100 2 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 1 0 1 183 1 61 1 190 1 7 1 68 1 195 1 11 3 70 2 196 1 139 1 141 1 79 1 198 1 81 1 202 2 22 2 84 2 205 1 144 1 206 1 146 1 94 1 209 2 213 1 214 1 29 1 153 1 30 1 155 3 102 1 37 2 161 1 160 1 38 1 219 1 162 1 221 1 41 1 224 1 226 1 117 1 166 2 45 3 167 1 232 1 231 1 48 1 171 1 121 1 50 1 172 1 177 1 55 1 129 1 240 1 58 1 
79 1 153 1 155 2 160 1 38 1 55 1 219 1 91 1 195 1 221 1 41 1 240 1 141 1 
132 1 59 2 0 1 183 1 61 1 136 1 190 1 66 1 7 1 68 1 195 1 11 3 70 2 196 1 139 1 140 1 198 1 81 1 202 2 22 2 84 2 205 1 144 1 206 1 146 1 94 1 209 2 213 1 214 1 29 1 30 1 155 1 34 1 217 1 102 1 37 2 161 1 162 1 114 1 226 1 117 1 166 2 45 3 167 1 232 1 231 1 48 1 171 1 121 1 172 1 50 1 126 1 177 1 129 1 58 1 
132 1 59 1 0 1 183 1 61 1 190 1 7 1 68 1 195 1 11 3 70 2 196 1 139 1 141 1 79 1 198 1 81 1 202 2 22 2 84 2 205 1 144 1 206 1 146 1 94 1 209 2 213 1 214 1 29 1 153 1 30 1 155 3 102 1 37 2 161 1 160 1 38 1 219 1 162 1 221 1 163 1 41 1 224 1 226 1 117 1 166 2 45 3 167 1 232 1 231 1 48 1 171 1 121 1 50 1 172 1 177 1 55 1 129 1 240 1 58 1 
132 1 59 1 0 1 183 1 61 1 190 1 7 1 68 1 195 1 11 3 70 2 196 1 139 1 79 1 198 1 81 1 202 2 22 2 84 2 205 1 144 1 206 1 146 1 94 1 209 2 213 1 214 1 29 1 153 1 30 1 155 3 34 1 102 1 37 2 161 1 160 1 38 1 108 1 162 1 221 1 163 1 114 1 41 1 116 1 226 1 117 1 166 2 45 3 167 1 231 1 232 1 48 1 171 1 121 1 50 1 172 1 177 1 55 1 129 1 240 1 58 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 66 1 217 1 102 1 37 2 68 1 38 1 160 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 2 198 1 79 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 91 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 161 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 161 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 161 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 217 1 66 1 193 1 102 1 37 2 38 1 160 1 161 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 2 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 91 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 161 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
209 1 7 1 70 1 180 1 22 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 1 213 1 214 1 61 1 100 2 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
79 1 169 1 153 1 155 2 160 1 38 1 55 1 219 1 91 1 221 1 41 1 240 1 141 1 
132 1 59 1 213 1 214 1 61 1 100 2 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
38 1 160 1 79 1 219 1 55 1 221 1 153 1 41 1 155 2 240 1 141 1 
79 1 153 1 155 3 160 2 38 2 55 2 219 1 91 1 221 1 41 1 240 1 141 2 
132 2 59 2 0 2 183 2 184 1 60 1 61 2 190 2 7 2 68 2 195 2 11 6 70 4 196 2 139 1 141 1 142 1 18 1 79 2 198 2 81 2 201 1 202 4 22 4 84 4 205 2 144 2 206 2 24 1 146 2 93 1 94 1 96 1 209 4 213 2 214 2 29 2 153 1 30 2 155 3 158 1 102 2 37 4 161 2 160 1 38 1 219 1 162 1 221 1 42 1 41 1 224 1 225 1 226 1 117 2 166 4 45 3 167 2 232 1 231 2 46 1 48 2 171 2 121 2 50 2 172 2 125 3 53 1 177 2 55 1 178 1 129 2 240 1 58 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 100 2 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
79 1 153 1 155 3 160 2 38 2 55 2 219 1 91 1 221 1 41 1 240 1 141 2 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 136 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 140 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 91 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 163 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
132 1 59 2 213 1 214 1 61 1 29 1 153 1 155 2 190 1 193 1 102 1 37 3 161 1 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 126 1 146 1 55 1 240 1 
132 1 59 1 183 1 61 1 62 1 190 1 66 1 68 1 11 2 196 1 141 2 199 3 18 1 79 4 198 1 81 1 201 1 202 2 22 3 84 2 205 1 206 1 86 1 146 1 88 1 91 1 97 1 26 1 213 1 214 1 29 1 153 1 155 3 158 1 102 1 218 1 37 2 160 2 38 2 219 1 220 1 221 2 113 1 41 1 40 2 225 1 117 1 166 2 120 1 168 2 231 1 121 1 170 3 122 2 50 1 172 1 53 1 125 2 175 2 177 1 55 2 129 1 179 1 240 1 
132 1 59 1 213 1 214 1 61 1 29 1 153 1 155 2 190 1 217 1 66 1 193 1 102 1 37 3 38 1 160 1 68 1 219 1 221 1 196 1 41 1 141 1 117 1 166 3 79 1 198 1 231 1 121 1 202 2 84 2 172 1 205 1 206 1 146 1 55 1 91 1 240 1 
183 1 150 1 153 1 155 2 157 1 33 1 158 1 219 1 110 1 220 1 162 1 11 2 221 1 40 2 113 1 41 1 141 1 225 1 168 2 79 2 230 1 120 1 18 1 199 3 81 1 170 3 201 1 20 1 203 1 21 1 234 1 204 1 22 4 122 2 50 1 173 1 125 2 127 1 175 1 177 1 129 1 
0 1 183 1 153 1 155 2 157 1 158 1 219 1 110 1 11 2 221 1 12 1 40 2 113 1 41 1 164 1 141 1 75 1 225 1 167 1 168 2 120 1 79 1 230 1 199 3 46 1 81 1 83 1 48 1 170 3 201 1 20 1 21 1 204 1 22 4 122 2 50 1 173 1 52 1 144 1 125 2 87 1 175 1 177 1 129 1 
132 3 59 3 61 3 153 1 155 2 102 3 159 3 68 3 160 1 38 1 219 1 221 1 196 3 41 1 141 1 117 3 77 1 79 1 80 1 121 3 202 3 84 3 206 3 55 1 95 1 240 1 
132 1 59 1 61 1 153 1 155 2 102 1 159 1 68 1 160 1 38 1 219 1 221 1 196 1 41 1 141 1 117 1 77 1 79 1 80 1 121 1 202 1 84 1 206 1 147 1 55 1 240 1 
79 1 80 1 153 1 155 2 159 1 160 1 38 1 147 1 55 1 219 1 221 1 41 1 240 1 141 1 
132 3 59 3 213 1 214 1 61 3 29 1 153 1 190 1 155 2 102 3 159 2 37 2 161 1 68 3 160 1 38 1 219 1 163 1 221 1 196 3 41 1 115 1 141 1 117 3 166 2 77 1 198 1 79 1 231 1 80 1 121 3 202 4 84 4 172 1 205 1 206 3 146 1 55 1 240 1 
132 1 59 1 117 1 77 1 79 1 80 1 61 1 153 1 121 1 202 1 155 2 84 1 206 1 102 1 159 1 38 1 160 1 68 1 219 1 55 1 221 1 196 1 41 1 240 1 141 1 
209 1 132 1 59 1 61 1 153 1 155 2 193 1 102 1 105 1 159 1 68 1 160 1 38 1 219 1 221 1 70 1 196 1 41 1 141 1 117 1 228 1 77 1 79 1 80 1 121 1 202 1 22 1 84 1 206 1 55 1 180 1 240 1 
54 1 63 1 207 1 155 1 236 1 
36 1 31 1 155 1 32 1 
154 1 155 1 32 1 
54 1 133 2 63 1 155 1 
148 1 32 1 
225 1 158 1 201 1 50 1 
125 1 175 1 168 1 170 1 40 1 122 1 
225 1 0 1 167 1 46 1 48 1 197 1 50 1 
125 1 26 1 175 1 168 1 170 1 40 1 122 1 
121 1 202 1 
193 1 166 1 146 1 37 1 202 1 22 1 
193 1 166 1 37 1 22 1 
166 1 146 1 37 1 121 1 19 1 202 2 115 1 
121 1 202 1 
116 1 
116 1 
108 1 
141 1 
141 1 
219 1 
181 1 229 2 133 2 79 2 134 2 143 1 153 2 49 2 155 4 204 2 85 2 107 2 131 2 221 2 111 2 138 1 41 2 
229 1 133 1 79 1 134 1 153 1 187 1 188 2 49 1 22 3 155 2 204 1 85 1 193 1 35 1 37 1 107 1 131 1 221 1 111 1 41 1 
229 1 133 1 79 1 134 1 143 1 153 1 49 1 155 2 204 1 85 1 107 1 131 1 221 1 111 1 41 1 
229 1 133 1 79 1 134 1 153 1 187 2 188 1 49 1 22 1 155 2 204 1 85 1 193 1 35 1 37 2 107 1 131 1 221 1 111 1 41 1 
181 1 229 1 133 1 79 1 134 1 153 1 49 1 155 2 204 1 85 1 107 1 131 1 221 1 111 1 138 1 41 1 
76 1 229 1 133 1 79 1 134 1 153 1 49 1 155 2 204 1 85 1 107 1 131 1 221 1 111 1 41 1 
229 1 133 1 79 1 134 1 153 1 49 1 155 2 204 1 85 1 147 1 107 1 131 1 221 1 111 1 41 1 
76 1 229 2 133 2 79 2 134 2 143 1 153 2 49 2 155 4 204 2 85 2 107 2 131 2 221 2 111 2 41 2 
193 1 199 2 22 2 123 1 
193 1 3 1 199 2 22 2 
210 1 0 1 183 1 3 1 133 1 134 1 153 1 187 1 155 3 103 1 35 1 37 1 107 1 11 2 111 1 221 1 162 1 139 1 41 1 224 1 226 1 76 1 45 2 229 1 167 1 79 2 199 2 232 1 81 1 48 1 49 1 22 2 204 1 50 1 123 1 144 1 85 1 53 1 177 1 129 1 131 1 94 1 58 1 
181 1 131 1 153 1 138 1 41 1 
183 1 26 1 3 1 133 1 134 1 153 1 187 1 188 1 155 2 158 1 103 1 35 1 37 1 107 1 220 1 11 2 111 1 221 1 40 3 41 1 113 1 225 1 229 1 168 3 79 3 120 1 18 1 199 2 81 1 170 4 201 1 233 1 49 1 22 3 204 1 122 3 50 1 123 1 85 1 125 3 53 1 175 1 177 1 129 1 131 1 
103 1 
229 1 79 1 133 1 152 1 4 1 153 1 188 1 215 1 22 2 155 2 204 1 193 1 145 1 37 2 92 1 221 1 71 2 41 1 223 1 165 1 
181 1 145 1 4 1 92 1 215 1 165 1 
25 1 133 1 4 1 152 1 153 1 215 1 188 1 155 2 193 1 37 2 221 1 41 1 71 2 223 1 16 1 229 1 79 1 204 1 22 2 145 1 130 1 
13 1 
209 1 0 1 25 1 1 1 183 1 99 1 133 1 4 1 153 1 188 2 215 1 155 3 8 1 37 2 221 1 162 1 11 2 70 1 139 1 71 2 41 1 13 1 223 1 165 1 224 1 226 1 45 4 229 1 119 1 167 1 79 2 232 1 48 1 171 1 233 2 22 3 204 1 50 1 144 1 53 1 145 2 177 1 92 1 94 1 58 1 
209 1 229 1 119 1 79 1 133 1 4 1 153 1 188 1 215 1 22 2 155 2 204 1 238 1 8 1 145 2 37 1 56 1 92 1 221 1 70 1 71 1 41 1 115 1 13 1 165 1 
181 1 145 1 4 1 92 1 215 1 165 1 
1 1 183 1 133 1 4 1 188 2 8 1 11 2 70 1 71 2 13 1 18 1 79 3 201 1 204 1 22 3 145 2 92 1 209 1 26 1 99 1 153 1 215 1 155 2 158 1 37 2 220 1 221 1 113 1 41 1 40 4 223 1 165 1 225 1 229 1 119 1 120 1 168 4 170 5 171 1 233 2 122 4 50 1 53 1 125 4 175 1 177 1 
183 1 1 1 26 1 99 1 133 1 4 1 153 1 188 1 215 1 155 2 158 1 37 1 220 1 11 1 221 1 71 1 40 2 41 1 113 1 13 1 223 1 165 1 225 1 229 1 168 2 79 3 120 1 18 1 170 3 201 1 233 1 22 1 204 1 122 2 50 1 125 2 145 1 53 1 175 1 177 1 92 1 
145 1 8 1 37 1 119 1 71 1 115 1 
193 1 99 1 
193 1 1 1 
209 1 133 1 4 1 153 1 215 1 188 1 155 2 8 1 37 1 221 1 70 1 41 1 71 1 13 1 165 1 229 1 119 1 79 1 204 1 22 2 145 2 92 1 

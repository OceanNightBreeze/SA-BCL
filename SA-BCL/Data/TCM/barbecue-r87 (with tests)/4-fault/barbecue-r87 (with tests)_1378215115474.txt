#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 78 35 200 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V FAILED junit.framework.ComparisonFailure 
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 5731 | return null
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.Module:toString()Ljava.lang.String; | RETURN | 7074 | return null
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String; | RETURN | 4244 | return null
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 153 1 43 1 114 1 108 1 223 1 
153 1 43 1 114 1 108 1 223 1 
191 2 38 1 98 1 
16 1 82 2 193 1 149 2 70 1 182 1 121 1 8 1 202 1 63 1 222 1 
1 1 51 1 16 1 82 1 193 1 149 3 117 1 105 1 182 1 92 1 121 1 185 4 8 1 112 1 39 1 202 1 63 1 223 1 
16 1 82 1 148 1 193 1 149 2 182 1 121 1 8 1 202 1 63 1 10 1 
51 1 16 1 82 1 193 1 149 3 117 1 152 1 245 1 182 1 92 1 121 1 212 1 185 1 8 1 202 1 63 1 204 1 223 1 
226 1 51 1 16 1 82 1 101 1 193 1 149 3 117 1 182 1 92 1 121 1 185 2 8 1 202 1 63 1 223 1 
170 1 182 2 121 1 82 1 16 1 193 1 8 1 149 2 63 2 202 3 
51 1 226 1 16 1 82 2 193 1 149 4 117 1 182 1 92 1 121 1 185 1 8 1 202 2 63 2 46 1 223 1 
121 1 16 1 8 1 4 1 
182 2 121 1 82 1 16 1 193 1 8 1 149 2 63 1 202 1 209 1 44 1 
100 1 51 1 82 1 193 1 149 3 67 1 117 1 152 1 245 1 182 1 92 2 121 1 212 1 185 1 8 1 202 1 63 1 43 1 204 1 223 2 
51 1 82 1 193 1 149 3 67 1 117 1 152 1 245 1 182 1 92 2 121 1 212 1 185 1 8 1 202 1 63 1 43 1 204 1 223 2 
100 1 16 1 82 1 193 1 149 2 67 1 182 1 92 1 121 1 94 1 8 1 202 1 63 1 40 1 176 1 43 1 223 1 
100 1 16 1 82 1 193 1 149 2 67 1 182 1 92 1 121 1 8 1 202 1 63 1 40 1 176 1 43 1 13 1 223 1 
16 1 82 1 193 1 149 2 67 1 182 1 92 1 121 1 8 1 202 1 63 1 40 1 235 1 176 1 175 1 43 1 219 1 223 1 
100 1 16 1 82 1 193 1 149 2 67 1 182 1 92 1 121 1 8 1 202 1 63 1 40 1 235 1 176 1 175 1 43 1 219 1 223 1 
170 1 182 1 121 1 82 2 16 1 193 1 8 1 149 3 63 1 202 2 
16 1 52 2 149 3 211 1 182 1 121 1 8 1 233 1 202 2 63 1 
182 2 121 1 16 1 52 1 8 1 149 2 125 1 63 1 202 1 211 1 
16 1 52 1 149 2 211 1 182 1 121 1 184 1 8 1 202 1 63 1 
248 3 230 1 79 1 
248 1 
65 1 
131 1 133 2 135 1 134 2 5 2 138 3 8 1 141 2 12 3 145 2 15 3 19 1 149 4 150 1 21 1 23 1 155 1 28 2 157 1 30 5 31 1 159 3 162 3 163 1 34 2 35 1 164 3 168 2 169 1 170 1 172 1 173 6 41 1 43 1 45 3 44 1 177 2 47 1 46 1 49 4 52 2 55 1 56 4 182 5 185 2 184 2 59 1 61 3 62 1 64 1 190 1 189 1 192 2 67 1 196 2 73 1 199 4 201 2 202 4 77 1 203 2 78 1 80 3 206 3 84 4 85 3 211 1 91 1 93 1 216 1 218 3 220 1 221 1 223 2 226 1 101 1 227 1 106 1 231 1 108 2 233 1 237 3 113 3 115 1 241 1 117 1 247 5 120 14 250 1 122 2 123 3 252 4 253 4 128 2 130 2 
189 1 190 1 131 1 133 2 192 2 67 1 134 2 135 1 196 2 5 2 73 1 199 4 138 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 145 2 80 3 12 3 206 2 15 3 84 4 19 1 149 3 85 2 21 1 23 1 155 1 211 1 91 1 93 1 157 1 30 5 216 1 218 3 31 1 159 3 220 1 221 1 223 2 226 1 163 1 34 2 101 1 35 1 227 1 164 3 106 1 231 1 168 2 108 2 169 1 170 1 172 1 173 6 233 1 113 3 237 3 43 1 177 2 45 3 47 1 49 4 52 1 117 1 55 1 56 4 247 5 120 4 182 3 184 2 185 2 122 2 59 1 250 1 123 3 252 4 61 3 253 4 62 1 128 2 130 2 64 1 
49 4 35 1 19 1 227 1 23 1 106 1 199 4 250 1 172 1 31 1 233 1 78 1 
0 1 131 1 133 2 134 2 5 2 137 2 7 2 138 2 8 1 141 2 142 2 144 1 145 2 12 2 14 1 15 2 19 1 149 3 21 1 22 2 23 1 155 1 157 1 30 4 31 1 159 2 33 2 32 2 163 1 34 2 35 1 164 2 168 2 167 1 169 1 170 1 172 1 171 1 173 6 43 1 177 2 45 2 47 1 49 4 51 1 55 1 56 4 58 1 182 3 184 2 185 2 61 2 62 1 64 1 190 1 189 1 193 1 66 2 67 1 196 2 73 1 199 4 75 1 201 2 202 2 203 2 78 1 80 2 81 2 205 2 206 2 82 1 84 4 85 2 86 1 210 2 216 1 218 2 217 1 220 1 221 1 223 2 99 1 226 1 101 1 102 1 227 1 229 1 106 1 231 1 108 2 113 3 237 4 116 2 117 1 247 4 120 4 250 1 122 2 123 3 252 4 253 4 128 2 130 2 
189 1 190 1 131 1 133 2 192 2 67 1 134 2 135 1 196 2 5 2 73 1 199 4 138 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 145 2 80 3 12 3 206 2 15 3 147 1 84 4 19 1 149 3 85 2 21 1 23 1 155 1 211 1 91 1 157 1 30 5 216 1 218 3 31 1 159 3 220 1 221 1 223 2 226 1 163 1 34 2 35 1 101 1 227 1 164 3 106 1 231 1 168 2 108 2 169 1 170 1 109 1 172 1 173 6 233 1 113 3 237 3 43 1 177 2 45 3 49 4 52 1 117 1 55 1 56 4 247 5 120 4 182 3 184 2 185 2 122 2 59 1 250 1 123 3 252 4 61 3 253 4 127 1 128 2 130 2 
189 1 190 1 131 1 195 2 67 1 71 1 72 2 73 1 199 4 8 1 202 2 9 2 77 1 203 2 78 1 84 2 19 1 149 3 20 1 21 1 23 1 24 3 155 1 25 2 211 1 157 1 216 1 31 1 96 4 97 2 220 1 221 1 223 2 226 1 163 1 35 1 101 2 227 1 106 1 231 1 108 2 169 1 170 1 172 1 173 4 233 1 236 2 113 4 43 1 49 4 178 1 52 1 243 1 117 1 179 4 56 4 120 8 182 3 184 2 185 3 249 1 250 1 123 4 253 2 186 4 126 1 129 2 64 1 255 1 
189 1 190 1 131 1 133 2 66 2 67 1 134 2 196 2 5 2 137 2 73 1 199 4 138 2 7 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 12 2 145 2 80 2 206 2 15 2 19 1 84 4 85 2 149 4 22 2 21 1 23 1 155 1 210 2 211 1 157 1 30 4 216 1 218 2 31 1 159 2 220 1 221 1 223 2 33 2 226 1 163 1 34 2 35 1 101 1 227 1 164 2 106 1 231 1 168 2 108 2 169 1 170 1 171 1 172 1 173 6 233 1 237 4 113 3 43 1 45 2 177 2 47 1 49 4 52 1 117 1 55 1 56 4 247 4 182 3 120 4 185 2 184 2 122 2 250 1 123 3 61 2 252 4 253 4 62 1 128 2 130 2 
131 1 133 2 135 1 134 2 5 2 138 2 8 1 141 2 12 3 145 2 15 3 19 1 149 3 21 1 23 1 155 1 157 1 30 5 31 1 159 3 163 1 34 2 35 1 164 3 168 2 170 1 169 1 172 1 173 6 43 1 44 1 45 3 177 2 47 1 49 4 52 1 55 1 56 4 182 4 185 3 184 2 59 1 61 3 62 1 64 1 190 1 189 1 192 2 67 1 196 2 73 1 199 4 201 2 202 2 77 1 203 2 78 1 80 3 206 2 84 4 85 2 211 1 91 1 93 1 216 1 218 3 220 1 221 1 223 2 226 1 101 2 227 1 106 1 107 1 231 1 108 2 109 1 233 1 237 3 113 3 117 1 247 5 120 4 250 1 122 2 123 3 252 4 253 4 127 1 128 2 130 2 
49 1 199 1 19 1 35 1 78 1 
189 1 190 1 131 1 133 2 192 2 67 1 134 2 135 1 196 2 5 2 73 1 199 4 138 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 145 2 80 3 12 3 206 2 15 3 84 4 19 1 149 3 85 2 21 1 23 1 155 1 211 1 91 1 93 1 157 1 30 5 216 1 218 3 31 1 159 3 220 1 221 1 223 2 226 1 163 1 34 2 101 1 35 1 227 1 164 3 106 1 231 1 168 2 108 2 169 1 170 1 109 1 173 6 233 1 113 3 237 3 43 1 177 2 45 3 47 1 49 4 52 1 117 1 55 1 56 4 247 5 120 4 182 3 184 2 185 2 122 2 59 1 250 1 123 3 252 4 61 3 253 4 62 1 127 1 128 2 130 2 
189 1 190 1 131 1 133 2 192 2 67 1 134 2 135 1 196 2 5 2 73 1 199 4 138 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 145 2 80 3 12 3 206 2 15 3 84 4 19 1 149 3 85 2 21 1 23 1 155 1 211 1 91 1 93 1 157 1 30 5 216 1 218 3 31 1 159 3 220 1 221 1 223 2 226 1 163 1 34 2 101 1 227 1 164 3 106 1 231 1 168 2 108 2 169 1 170 1 109 1 173 6 233 1 113 3 237 3 43 1 177 2 45 3 47 1 49 4 52 1 117 1 55 1 56 4 247 5 119 1 120 4 182 3 184 2 185 2 122 2 59 1 250 1 123 3 252 4 61 3 253 4 62 1 127 1 128 2 130 2 
131 1 133 2 135 1 134 2 5 2 137 2 138 5 7 2 8 4 141 2 12 3 145 2 15 3 18 1 19 1 149 9 151 1 21 1 22 2 23 1 155 1 157 1 30 5 31 1 159 3 33 2 163 1 34 2 35 1 164 3 168 2 169 1 170 1 171 1 172 1 173 6 43 1 45 3 177 2 47 1 49 4 52 4 55 4 56 4 182 6 185 2 184 2 59 1 61 3 62 1 190 4 189 1 192 2 66 2 67 1 196 2 73 1 199 4 200 1 201 2 202 5 77 1 203 2 78 1 80 3 206 5 83 1 84 6 85 5 87 1 210 2 211 4 91 1 216 1 218 3 220 1 221 1 223 2 226 1 101 1 227 1 106 1 231 1 108 2 109 1 233 1 237 5 113 3 117 1 247 5 120 6 250 1 122 2 123 3 252 4 253 6 127 1 128 2 130 2 
189 1 190 1 131 1 133 2 66 2 67 1 134 2 196 2 5 2 137 2 73 1 199 4 138 2 7 2 201 2 8 1 202 2 77 1 203 2 78 1 141 2 12 2 145 2 80 2 206 2 15 2 19 1 84 4 85 2 149 3 22 2 21 1 23 1 155 1 210 2 211 1 157 1 30 4 216 1 218 2 31 1 159 2 220 1 221 1 223 2 33 2 226 1 163 1 34 2 35 1 101 1 102 1 227 1 164 2 106 1 231 1 168 2 108 2 169 1 170 1 171 1 172 1 173 6 233 1 237 4 113 3 43 1 45 2 177 2 47 1 49 4 52 1 117 1 55 1 56 4 247 4 182 3 120 4 185 2 184 2 122 2 250 1 123 3 61 2 252 4 253 4 62 1 128 2 130 2 64 1 
120 1 241 1 161 1 
120 1 37 1 
120 1 173 1 215 1 40 1 176 1 43 1 223 1 
194 1 165 1 6 1 120 1 123 1 173 1 215 1 40 1 176 1 175 1 43 1 223 1 
120 1 123 1 173 1 104 1 43 1 223 1 
120 1 198 1 
120 1 198 1 
120 1 110 1 
120 1 198 1 
120 1 37 1 
120 1 37 1 
120 1 60 1 186 1 166 1 
120 1 96 1 11 1 
190 1 17 2 52 1 3 1 149 2 56 2 198 1 180 1 211 1 136 1 120 2 182 1 156 1 29 1 8 1 202 1 9 1 
154 1 
190 1 52 1 3 1 149 2 4 1 180 1 211 1 136 1 182 1 29 1 8 1 202 1 9 1 
182 1 190 1 206 1 138 1 82 1 193 1 8 1 85 1 149 2 202 1 55 1 
182 1 190 1 206 2 138 2 82 2 232 1 193 1 8 1 85 2 149 3 202 1 55 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 206 2 82 2 193 1 149 3 85 2 55 1 182 1 232 1 138 2 8 1 202 1 
0 1 189 1 190 1 133 2 193 1 67 1 134 2 196 2 5 2 7 2 138 1 75 1 8 1 201 2 202 1 203 2 141 2 144 1 142 2 12 2 80 2 145 2 205 2 81 2 14 1 206 1 82 1 15 2 84 4 149 3 85 1 86 1 30 4 216 1 217 1 218 2 159 2 223 2 99 1 32 2 34 2 101 1 164 2 229 1 231 1 167 1 168 2 108 2 169 1 173 6 113 3 237 2 43 1 177 2 44 1 45 2 51 1 116 2 117 1 55 1 56 4 58 1 247 4 120 4 182 2 185 1 184 2 122 2 123 3 252 4 61 2 253 4 128 2 130 2 
190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 95 2 130 1 
190 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 95 2 130 1 
182 1 190 1 206 1 138 1 82 1 232 1 193 1 8 1 85 1 149 2 202 1 55 1 42 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 95 2 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 107 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 189 1 193 1 194 2 66 1 67 1 134 1 196 1 197 1 5 1 6 2 138 2 201 1 8 1 202 2 203 1 141 1 13 1 12 1 145 1 80 1 206 2 82 2 15 1 149 3 85 2 89 1 30 2 214 1 215 1 218 1 159 1 220 1 223 1 34 1 164 1 165 2 168 1 169 1 232 1 173 2 40 1 176 1 235 2 175 3 237 1 43 1 177 1 44 1 45 1 46 1 241 3 118 1 55 1 56 2 247 2 182 4 120 3 184 1 122 1 123 2 61 1 252 2 130 1 
190 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 138 1 232 1 201 1 8 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 134 1 196 1 5 1 7 1 138 1 8 1 201 1 202 1 203 1 141 1 142 1 12 1 80 1 145 1 205 1 81 1 206 1 82 1 15 1 84 2 149 3 85 1 30 2 216 1 218 1 159 1 223 1 99 1 32 1 34 1 101 1 164 1 231 1 168 1 108 1 173 3 113 3 237 1 45 1 177 1 51 1 116 1 117 1 55 1 56 2 247 2 120 2 182 1 184 1 185 1 122 1 252 2 61 1 253 2 128 1 130 1 
190 1 206 1 82 1 116 1 193 1 149 2 85 1 55 1 182 1 232 1 138 1 8 1 202 1 
133 1 66 1 134 1 196 1 5 1 137 1 7 1 201 1 77 1 203 1 141 1 142 1 80 1 145 1 12 1 205 1 81 1 15 1 84 2 149 1 22 1 210 1 30 2 216 1 218 1 159 1 223 1 99 1 32 1 33 1 34 1 101 1 164 1 231 1 108 1 168 1 173 3 233 1 237 2 113 3 177 1 45 1 116 1 117 1 56 2 247 2 120 2 184 1 185 1 122 1 252 2 61 1 253 2 128 1 130 1 
190 1 133 1 193 1 134 1 196 1 5 1 7 1 138 1 8 1 201 1 202 1 203 1 141 1 142 1 12 1 80 1 145 1 205 1 81 1 206 1 82 1 15 1 84 2 149 3 85 1 30 2 216 1 218 1 159 1 223 1 99 1 32 1 34 1 101 1 164 1 107 1 231 1 168 1 108 1 173 3 113 3 237 1 177 1 45 1 51 1 116 1 117 1 55 1 56 2 247 2 120 2 182 1 184 1 185 1 122 1 252 2 61 1 253 2 128 1 130 1 
190 1 133 1 134 1 196 1 5 1 7 1 138 1 8 1 201 1 202 1 77 1 203 1 141 1 142 1 12 1 145 1 80 1 205 1 81 1 206 1 15 1 84 2 149 3 85 1 211 1 30 2 216 1 218 1 159 1 223 1 99 1 32 1 34 1 101 1 164 1 107 1 231 1 168 1 108 1 173 3 233 1 113 3 237 1 177 1 45 1 52 1 116 1 117 1 55 1 56 2 247 2 120 2 182 1 185 1 184 1 122 1 61 1 252 2 253 2 128 1 130 1 
33 1 190 1 193 1 66 1 164 1 134 1 196 1 168 1 137 1 138 1 232 1 8 1 201 1 202 1 237 2 45 1 177 1 141 1 12 1 145 1 80 1 206 1 15 1 82 1 85 1 149 2 22 1 55 1 56 2 210 1 247 2 182 1 122 1 30 2 61 1 252 2 218 1 159 1 130 1 
190 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 2 247 2 210 1 182 1 122 1 30 2 61 1 252 2 218 1 159 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
120 1 74 1 7 1 84 1 253 1 
120 1 74 1 84 1 253 1 128 1 
120 1 7 1 84 1 244 1 124 1 253 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 189 1 133 1 193 1 194 3 66 1 67 1 134 1 196 1 5 1 6 3 137 1 7 1 138 1 8 1 201 1 202 1 203 1 141 1 12 1 145 1 80 1 206 1 15 1 82 1 84 2 149 2 85 1 22 1 210 1 30 2 215 1 218 1 159 1 220 1 223 1 33 1 34 1 164 1 165 3 168 1 108 1 169 1 232 1 173 3 40 1 176 1 235 1 175 4 237 2 43 1 45 1 177 1 55 1 56 2 247 2 120 2 182 2 184 1 122 1 123 3 61 1 252 2 253 2 128 1 130 1 
190 1 133 1 193 1 164 1 134 1 196 1 198 1 107 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
33 1 190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 133 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 95 2 130 1 
33 1 190 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 95 2 130 1 
33 1 190 1 193 1 66 1 164 1 134 1 196 1 198 1 168 1 137 1 138 1 232 1 201 1 8 1 202 1 237 2 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 22 1 55 1 56 3 247 2 210 1 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 193 1 164 1 134 1 196 1 198 1 168 1 138 1 8 1 201 1 202 1 237 1 177 1 45 1 141 1 12 1 145 1 80 1 206 1 82 1 15 1 85 1 149 2 55 1 56 3 247 2 182 1 122 1 30 2 61 1 252 3 218 1 159 1 130 1 
190 1 189 1 225 1 34 1 193 1 194 2 36 1 67 1 165 2 5 1 6 2 169 1 173 2 8 1 111 1 202 1 9 1 40 1 175 3 176 1 203 1 235 1 43 1 204 1 48 1 50 1 82 1 241 3 149 2 152 1 245 1 182 2 120 4 212 1 185 1 184 1 123 2 94 1 187 1 220 1 223 1 
32 1 190 1 189 1 225 1 34 1 193 1 194 2 36 1 68 1 165 2 5 1 167 1 6 2 169 1 173 2 8 1 111 1 202 1 40 1 9 1 175 3 176 1 203 1 235 1 43 1 140 1 10 1 142 1 48 1 146 1 205 1 81 1 50 1 148 1 82 1 241 3 242 1 149 2 182 1 120 4 184 1 123 2 187 1 223 1 
190 1 192 1 193 1 164 1 135 1 198 1 74 1 138 1 8 1 202 1 237 1 45 1 80 1 12 1 206 1 15 1 82 1 84 1 207 1 149 2 85 1 55 1 247 1 120 1 182 1 91 1 59 1 30 1 61 1 253 1 218 1 159 1 
190 1 133 1 191 1 193 1 164 3 134 1 135 1 196 1 107 1 168 1 138 1 201 1 8 1 202 1 237 3 177 1 45 3 141 1 145 1 80 3 12 3 206 1 15 3 82 1 149 2 85 1 55 1 56 2 247 4 182 1 91 1 122 1 59 2 30 4 252 2 61 3 218 3 159 3 130 1 
190 1 206 1 82 1 15 1 193 1 85 1 149 2 164 1 55 1 135 1 247 1 182 1 91 1 138 1 59 1 30 1 8 1 61 1 218 1 202 1 159 1 237 1 45 1 12 1 80 1 
190 1 193 1 164 3 135 1 138 1 8 1 202 1 237 3 45 3 80 3 12 3 206 1 15 3 82 1 149 2 85 1 55 1 247 3 182 1 91 1 59 3 30 3 251 1 61 3 218 3 159 3 
190 1 193 1 164 1 135 1 138 1 8 1 202 1 237 1 45 1 80 1 12 1 206 1 15 1 82 1 149 2 85 1 55 1 247 1 182 1 91 1 59 1 30 1 61 1 218 1 159 1 222 1 
190 1 206 1 82 1 193 1 149 2 85 1 55 1 182 1 91 1 138 1 59 1 8 1 202 1 222 1 
188 1 132 1 149 1 254 1 
149 1 254 1 26 1 
149 1 76 2 70 1 57 1 
149 1 70 1 234 1 57 1 181 1 
254 1 88 1 
123 1 194 1 215 1 235 1 165 1 175 1 6 1 
123 1 194 1 235 1 165 1 175 1 6 1 
205 1 32 1 69 1 167 1 43 1 142 1 223 1 
169 1 189 1 43 1 223 1 
120 1 252 1 56 1 196 1 198 1 247 1 
159 1 247 1 
120 1 252 1 56 1 198 1 
191 1 252 1 159 1 160 1 56 1 196 1 247 2 
159 1 247 1 
211 1 
52 1 
52 1 
82 1 
82 1 
193 1 
190 1 239 1 224 1 2 1 52 1 53 1 149 2 90 1 211 1 182 1 158 1 8 1 202 1 9 1 222 1 
190 2 239 2 224 2 2 2 52 2 103 1 53 2 149 4 208 1 90 2 211 2 182 2 158 2 8 2 202 2 9 2 
190 1 239 1 224 1 2 1 52 1 53 1 149 2 208 1 90 1 211 1 182 1 158 1 8 1 202 1 9 1 
190 1 239 1 224 1 2 1 52 1 53 1 149 2 56 2 90 1 198 1 211 1 120 1 182 1 213 2 158 1 8 1 139 1 202 1 9 1 96 1 
228 1 
190 1 239 1 224 1 2 1 52 1 53 1 149 2 56 1 90 1 198 1 211 1 120 3 182 1 213 1 158 1 8 1 139 1 202 1 9 1 96 2 
190 1 239 1 224 1 2 1 52 1 103 1 53 1 149 2 90 1 211 1 182 1 158 1 8 1 202 1 9 1 
190 2 239 2 224 2 2 2 52 2 103 1 53 2 149 4 4 1 90 2 211 2 182 2 158 2 8 2 202 2 9 2 143 1 
120 2 183 1 241 2 198 1 
120 2 27 1 241 2 198 1 
99 1 32 1 190 1 224 1 34 1 2 1 101 1 228 1 5 1 231 1 173 2 8 1 139 1 202 1 9 1 77 1 113 2 203 1 44 1 142 1 238 1 205 1 81 1 239 1 52 1 53 1 241 2 149 3 117 1 208 1 56 1 90 1 211 1 120 2 182 2 183 1 213 1 184 1 27 1 185 1 158 1 216 1 223 1 
190 1 8 1 4 1 90 1 143 1 
189 1 190 1 224 1 34 1 2 1 228 1 194 3 67 1 165 3 5 1 6 3 169 1 173 2 8 1 139 1 202 1 9 1 40 1 175 4 235 1 176 1 203 1 43 1 44 1 239 1 52 1 53 1 241 2 149 2 56 1 90 1 211 1 120 3 182 3 183 1 213 1 184 1 27 1 123 3 158 1 215 1 186 1 96 1 220 1 223 1 
190 1 239 1 224 1 2 1 52 1 53 1 149 2 4 1 90 1 211 1 182 1 158 1 8 1 202 1 9 1 143 1 
190 1 178 1 52 1 243 1 149 2 179 2 56 2 24 1 166 1 198 1 211 1 120 2 182 1 249 1 8 1 202 1 126 1 9 1 236 1 96 1 
190 1 191 1 195 1 72 1 8 1 38 1 202 1 9 1 11 1 178 1 52 1 84 1 149 2 243 1 179 1 56 1 24 2 211 1 182 1 120 2 249 1 253 1 126 1 96 1 97 1 
97 1 
99 1 32 1 190 1 101 1 195 1 231 1 72 1 108 1 8 1 173 2 202 1 9 1 77 1 236 1 113 4 203 1 44 1 142 1 205 1 81 1 178 1 84 1 52 1 240 1 149 3 243 1 117 1 179 2 56 2 24 2 25 1 211 1 120 3 182 2 185 1 184 1 249 1 216 1 253 1 186 2 126 1 96 2 129 1 97 1 223 1 
178 1 249 1 243 1 4 1 126 1 24 1 
189 1 190 1 194 4 195 1 67 1 6 4 72 1 8 1 202 1 9 1 203 1 84 1 149 2 24 2 25 1 211 1 215 1 96 2 220 1 97 1 223 1 165 4 108 1 169 1 173 2 40 1 176 1 235 1 175 5 236 1 43 1 44 1 178 1 52 1 243 1 179 2 56 2 182 3 120 3 184 1 249 1 123 4 253 1 186 2 126 1 129 1 
190 1 189 1 194 2 67 1 165 2 6 2 169 1 173 1 8 1 202 1 9 1 40 1 236 1 175 3 235 1 176 1 203 1 43 1 44 1 178 1 52 1 149 2 243 1 179 1 56 1 24 1 25 1 211 1 120 1 182 3 184 1 249 1 123 2 215 1 186 1 126 1 96 1 129 1 97 1 220 1 223 1 
191 1 195 1 179 1 56 1 24 1 72 1 
25 1 198 1 
129 1 198 1 
190 1 195 1 72 1 8 1 202 1 9 1 178 1 52 1 84 1 149 2 243 1 179 1 56 1 24 2 211 1 182 1 120 2 249 1 253 1 126 1 96 1 97 1 
178 1 249 1 243 1 4 1 126 1 24 1 
190 1 166 1 198 1 8 1 174 1 202 1 9 1 236 1 52 1 240 1 149 2 243 1 179 2 56 2 24 1 246 1 211 1 182 1 120 2 126 1 96 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V ERROR javax.servlet.ServletException 137 54 3 
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.NullPointerException 54 3 149 
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.BarcodeFactory:createUSPS(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.BarcodeFactory:createCode128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.BarcodeFactory:createCode128C(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.BarcodeFactory:createEAN128(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.BarcodeFactory:createSSCC18(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V | ASSIGN | 4634 | = null
net.sourceforge.barbecue.BarcodeFactory:createShipmentIdentificationNumber(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode; | RETURN | 7554 | return null
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.BarcodeFactory:createCode128B(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.BarcodeServlet:matches(Ljava.lang.reflect.Method;Ljava.lang.String;)Z
net.sourceforge.barbecue.BarcodeFactory:createCode128A(Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String; | RETURN | 7086 | return null
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V | STATEMENT | 3355 | stmt -> ;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.Barcode:isDrawingText()Z
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 1 194 1 101 1 233 1 115 1 
33 1 158 2 234 1 
181 1 194 1 101 1 233 1 159 1 115 1 
76 1 222 1 150 1 7 1 
162 2 196 2 166 1 168 1 19 1 147 1 150 1 73 1 7 1 76 1 95 1 188 2 
0 1 181 1 143 1 162 3 196 1 166 1 168 1 147 1 150 1 6 1 152 1 29 1 114 1 76 1 205 2 34 1 233 2 123 1 125 1 188 1 
0 1 181 1 143 1 162 3 196 1 166 1 168 1 147 1 150 1 152 1 29 1 114 1 76 1 205 2 34 1 233 2 123 1 125 1 188 1 
181 1 162 2 192 1 196 1 166 1 168 1 147 1 226 1 56 1 150 1 6 1 29 1 7 1 76 1 205 1 233 1 188 1 
181 1 162 2 192 1 196 1 166 1 168 1 147 1 226 1 150 1 6 1 29 1 7 1 155 1 76 1 205 1 233 1 188 1 
181 1 162 2 192 1 196 1 166 1 168 1 147 1 226 1 150 1 29 1 7 1 202 1 76 1 89 1 205 1 37 1 233 1 188 1 
181 1 162 2 192 1 196 1 166 1 168 1 147 1 226 1 150 1 6 1 29 1 7 1 202 1 76 1 89 1 205 1 37 1 233 1 188 1 
162 3 196 2 166 1 168 2 147 1 150 1 116 1 7 1 76 1 188 1 
162 3 76 1 99 1 166 1 144 2 168 2 150 1 239 1 188 1 7 1 
162 2 76 1 166 1 144 1 168 1 150 1 113 1 239 1 188 2 7 1 
162 2 76 1 166 1 144 1 168 1 150 1 227 1 239 1 188 1 7 1 
162 2 76 1 166 2 144 1 168 3 150 1 116 1 239 1 188 2 7 1 
162 4 144 2 166 2 213 1 168 2 27 1 150 1 152 1 239 1 7 1 76 1 205 1 34 1 121 1 233 1 188 1 
78 1 162 2 76 1 166 1 144 1 168 1 150 1 239 1 188 1 7 1 
82 1 162 3 144 1 166 1 168 1 150 1 152 1 238 1 239 1 7 1 76 1 205 1 34 4 184 1 232 1 121 1 233 1 188 1 
162 2 76 1 166 1 144 1 168 1 36 1 150 1 28 1 239 1 188 1 7 1 
0 1 162 3 144 1 166 1 168 1 150 1 152 1 114 1 239 1 7 1 76 1 205 1 34 1 121 1 233 1 123 1 125 1 188 1 
162 3 213 1 144 1 166 1 168 1 150 1 152 1 239 1 7 1 62 1 76 1 205 1 34 2 121 1 233 1 188 1 
242 3 74 1 130 1 
242 1 
197 1 3 1 129 1 87 1 90 4 137 1 94 1 140 1 142 1 99 1 235 1 102 1 148 1 111 2 217 1 182 1 154 1 76 1 222 1 22 4 157 1 54 1 23 1 160 1 
2 2 3 1 126 1 4 4 127 3 128 2 5 3 131 2 9 4 132 1 134 2 137 1 13 2 136 2 14 1 142 1 144 1 145 1 146 2 151 1 152 1 153 1 154 1 22 4 23 1 161 2 24 1 162 4 164 2 165 2 168 2 167 4 29 1 171 1 172 6 34 2 178 1 177 2 180 2 43 2 181 1 46 2 183 1 49 2 186 1 54 1 53 1 188 3 189 1 191 4 197 1 198 1 57 4 201 2 62 1 63 2 203 3 66 2 206 1 209 2 71 2 72 1 213 1 216 4 217 1 76 1 219 2 77 2 221 2 85 1 86 2 227 2 228 1 90 4 94 1 233 2 96 1 98 2 99 1 100 4 102 1 104 2 105 2 106 2 110 2 111 14 116 1 239 1 115 2 117 2 240 2 121 1 122 1 245 2 
2 2 191 4 197 1 3 1 126 1 57 4 4 4 128 2 127 3 5 3 131 2 201 2 9 4 132 1 62 1 63 2 134 2 66 2 136 2 13 2 137 1 14 1 206 1 209 2 71 2 142 1 72 1 213 1 144 1 146 2 145 1 216 4 151 1 152 1 217 1 153 1 154 1 77 2 219 2 76 1 221 2 22 4 23 1 161 2 24 1 162 3 164 2 165 2 167 4 168 2 85 1 86 2 29 1 227 2 172 6 228 1 88 1 90 4 34 2 94 1 233 2 96 1 177 2 178 1 98 2 181 1 43 2 180 2 99 1 100 4 102 1 105 2 104 2 106 2 111 4 46 2 115 2 239 1 116 1 117 2 183 1 240 2 49 2 121 1 122 1 53 1 54 1 245 2 246 1 188 3 
2 3 191 5 197 1 3 1 126 1 4 4 57 5 127 3 128 3 5 3 131 3 9 4 132 1 62 1 134 2 63 2 13 3 137 1 206 1 209 2 70 1 71 3 142 1 72 1 213 1 144 1 146 2 145 1 216 4 151 1 152 1 217 1 153 1 75 1 154 1 219 2 77 3 76 1 221 2 22 4 223 2 23 1 161 2 162 3 164 3 165 2 167 4 168 2 85 1 86 2 29 1 227 2 172 6 30 1 228 1 90 4 91 1 34 2 94 1 233 2 177 2 178 1 98 2 41 1 181 1 43 2 99 1 100 3 102 1 104 2 106 2 111 4 115 2 239 1 116 1 117 2 183 1 240 3 49 2 119 1 121 1 122 1 54 1 53 1 245 2 188 3 
142 1 90 1 3 1 22 1 54 1 
2 3 191 5 197 1 3 1 126 1 4 4 57 5 127 3 128 3 5 3 131 3 9 4 62 1 132 1 134 2 63 2 13 3 137 1 206 1 209 2 70 1 71 3 142 1 72 1 213 1 144 1 146 2 145 1 216 4 151 1 152 1 217 1 153 1 75 1 219 2 77 3 76 1 221 2 22 4 223 2 23 1 161 2 24 1 162 3 164 3 165 2 167 4 168 2 85 1 86 2 29 1 227 2 172 6 228 1 90 4 91 1 34 2 94 1 233 2 96 1 177 2 178 1 98 2 41 1 181 1 43 2 44 1 99 1 100 3 102 1 104 2 106 2 111 4 115 2 239 1 116 1 117 2 183 1 240 3 49 2 119 1 121 1 122 1 54 1 53 1 245 2 188 3 
2 3 191 5 197 1 126 1 4 4 57 5 127 3 128 3 5 3 131 3 9 4 62 1 132 1 134 2 63 2 13 3 137 1 206 1 209 2 70 1 71 3 142 1 72 1 213 1 144 1 146 2 145 1 216 4 151 1 152 1 217 1 153 1 75 1 219 2 77 3 76 1 221 2 22 4 223 2 23 1 161 2 24 1 162 3 164 3 165 2 167 4 168 2 85 1 86 2 29 1 227 2 172 6 228 1 90 4 91 1 34 2 94 1 233 2 96 1 177 2 178 1 98 2 41 1 181 1 43 2 44 1 99 1 100 3 102 1 104 2 106 2 111 4 115 2 239 1 116 1 117 2 183 1 240 3 49 2 119 1 121 1 52 1 122 1 54 1 53 1 245 2 188 3 
2 4 3 1 126 1 4 6 128 4 127 3 5 3 131 4 9 6 132 1 11 1 134 7 137 1 13 4 136 2 14 1 142 1 18 1 144 6 145 1 146 2 149 1 151 1 152 1 153 1 154 1 20 1 22 4 23 1 161 2 24 1 162 13 164 4 165 2 168 7 167 4 29 1 172 6 34 2 178 1 177 2 41 1 181 1 43 2 180 2 46 2 183 1 49 7 53 6 54 1 188 8 55 1 191 6 197 1 57 6 201 2 62 1 63 7 67 1 66 2 206 1 209 2 70 2 71 4 72 1 213 1 216 4 217 1 218 1 75 2 76 6 77 4 219 2 221 2 223 2 85 1 86 2 227 2 228 1 90 4 91 1 94 6 233 2 96 1 97 1 98 2 99 1 100 6 102 1 104 2 105 2 106 2 111 6 239 6 116 1 115 2 117 2 240 4 119 2 121 1 122 1 245 2 
2 3 191 5 197 1 3 1 126 1 4 4 57 5 127 3 128 3 5 3 131 3 9 4 62 1 132 1 134 3 63 3 13 3 137 1 206 1 209 2 70 1 71 3 142 1 72 1 213 1 144 2 146 2 145 1 216 4 151 1 152 1 217 1 153 1 75 1 154 1 219 2 77 3 76 1 221 2 22 4 223 2 23 1 161 2 24 1 162 4 164 3 165 2 167 4 168 4 27 1 85 1 86 2 29 1 227 2 172 6 228 1 88 1 90 4 34 2 94 1 233 2 96 1 177 2 178 1 98 2 181 1 43 2 44 1 99 1 100 3 102 1 104 2 106 2 111 4 115 2 239 1 116 1 117 2 183 1 240 3 49 3 119 1 121 1 122 1 54 1 53 1 245 2 188 4 
2 3 191 5 197 1 3 1 126 1 4 4 57 5 127 3 128 3 5 3 131 3 9 4 62 1 132 1 134 2 63 2 13 3 137 1 206 1 209 2 70 1 71 3 142 1 72 1 213 1 144 1 146 2 145 1 216 4 151 1 152 1 217 1 153 1 75 1 154 1 219 2 77 3 76 1 221 2 22 4 223 2 23 1 161 2 24 1 162 3 164 3 165 2 167 4 168 2 85 1 86 2 29 1 227 2 172 6 228 1 88 1 90 4 34 2 94 1 233 2 96 1 177 2 178 1 98 2 181 1 43 2 44 1 99 1 100 3 102 1 104 2 106 2 111 4 115 2 239 1 116 1 117 2 183 1 240 3 49 2 119 1 121 1 122 1 54 1 53 1 245 2 188 3 
142 1 99 1 197 1 102 1 3 1 217 1 154 1 90 4 137 1 22 4 54 1 23 1 
2 2 3 1 126 1 4 4 127 3 128 2 5 3 131 2 9 4 10 1 132 1 134 2 137 1 13 2 136 2 14 1 142 1 143 1 145 1 146 2 147 1 151 1 152 1 153 1 154 1 22 4 23 1 161 2 24 1 162 3 164 2 163 1 165 2 168 2 167 4 25 1 29 1 172 6 34 2 178 1 177 2 180 2 43 2 181 1 45 2 46 2 47 2 183 1 49 2 185 2 54 1 53 1 188 3 191 4 197 1 196 1 57 4 58 1 201 2 62 1 63 2 64 2 65 1 66 2 206 1 210 1 209 2 71 2 72 1 213 1 215 2 216 4 217 1 219 2 76 1 77 2 220 1 221 2 85 1 86 2 227 2 228 1 88 1 231 1 90 4 94 1 233 2 96 1 98 2 100 4 102 1 104 2 105 2 237 1 106 2 111 4 115 2 116 1 117 2 240 2 122 1 243 1 245 2 246 1 
244 1 
2 3 3 1 4 4 126 1 128 3 127 3 5 3 131 3 9 4 132 1 134 2 137 1 13 3 142 1 144 1 145 1 146 2 151 1 152 1 153 1 154 1 22 4 23 1 161 2 24 1 162 3 164 3 165 2 168 2 167 4 29 1 172 6 34 3 178 1 177 2 41 1 43 2 181 1 44 1 183 1 49 2 53 1 54 1 188 3 191 5 197 1 57 5 62 2 63 2 206 1 209 2 70 1 71 3 72 1 213 1 216 4 217 1 218 1 75 1 76 1 77 3 219 2 221 2 223 2 85 1 86 2 227 2 228 1 88 1 90 4 91 1 94 1 233 2 96 1 98 2 99 1 100 3 102 1 104 2 106 2 111 4 116 1 239 1 115 2 117 2 240 3 119 1 121 1 122 1 245 2 
111 1 59 1 171 1 
111 1 8 1 
181 1 192 1 193 1 200 1 226 1 111 1 5 1 48 1 172 1 12 1 37 1 233 1 
181 1 192 1 12 1 226 1 111 1 233 1 172 1 
111 1 8 1 
181 1 233 1 69 1 111 1 5 1 172 1 
111 1 31 1 
111 1 187 1 
111 1 8 1 
111 1 187 1 
111 1 187 1 
175 1 35 1 176 1 111 1 
241 1 111 1 179 1 
40 1 162 2 195 1 144 1 168 1 108 1 216 2 111 2 112 1 170 1 239 1 8 1 32 1 76 1 92 2 94 1 188 1 
139 1 
40 1 162 2 195 1 144 1 168 1 108 1 170 1 239 1 32 1 76 1 94 1 222 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 49 1 240 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 230 2 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
162 2 196 1 168 1 147 1 76 1 134 1 63 1 49 1 94 1 138 1 53 1 141 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 230 2 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 31 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 218 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 2 146 1 147 1 104 1 216 3 46 1 117 1 76 1 77 1 49 1 240 1 221 1 53 1 188 1 
2 1 191 2 190 1 192 1 193 2 196 2 200 2 126 1 57 2 128 1 5 2 131 1 134 2 63 2 202 2 12 1 13 1 206 1 138 1 209 1 211 1 71 1 146 1 19 1 147 1 216 2 155 1 76 1 219 1 77 1 81 1 162 3 164 1 165 1 168 2 167 2 226 1 27 1 86 1 29 1 227 1 171 3 172 2 94 1 37 3 233 1 177 1 98 1 43 1 181 1 100 1 105 1 104 1 106 1 111 3 48 2 117 1 240 1 49 2 122 1 53 1 245 1 188 4 247 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 1 146 1 147 1 105 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 53 1 188 1 
162 3 196 2 168 1 147 1 76 1 134 2 63 2 49 2 94 1 138 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
162 3 196 2 168 1 147 1 76 1 134 2 63 2 49 2 94 1 138 1 53 1 188 1 
2 2 191 4 196 1 126 1 4 4 57 4 58 1 127 3 128 2 5 3 131 2 201 2 10 1 9 4 62 1 64 2 134 1 63 1 65 1 13 2 210 1 209 2 71 2 143 1 215 2 146 2 147 1 19 1 216 4 152 1 76 1 219 2 77 2 220 1 221 2 161 2 162 3 163 1 164 2 165 2 168 1 167 4 25 1 85 1 86 2 29 1 227 2 172 6 228 1 231 1 34 1 94 1 233 2 177 2 98 2 181 1 43 2 100 2 237 1 104 2 45 2 106 2 111 4 47 2 115 2 117 2 49 1 240 2 185 2 122 1 53 1 243 1 245 2 188 2 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 1 146 1 147 1 105 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 191 2 196 1 57 2 128 1 131 1 8 1 134 1 63 1 66 1 136 1 13 1 209 1 138 1 71 1 146 1 147 1 216 3 77 1 76 1 221 1 162 2 164 1 165 1 168 1 167 3 86 1 31 1 230 2 94 1 177 1 98 1 180 1 43 1 100 2 104 1 105 1 46 1 117 1 49 1 240 1 53 1 188 1 
2 1 191 2 196 1 4 2 57 2 127 3 128 1 131 1 201 1 9 2 62 1 64 1 134 1 63 1 13 1 209 1 71 1 143 1 215 1 146 1 147 1 216 2 152 1 76 1 219 1 77 1 221 1 161 1 162 3 163 1 164 1 165 1 168 1 167 2 85 1 86 1 227 1 172 3 228 1 34 1 94 1 233 1 177 1 98 1 43 1 100 1 104 1 45 1 106 1 111 2 47 1 115 1 117 1 49 1 240 1 185 1 53 1 245 1 188 1 
162 2 196 1 168 1 147 1 45 1 76 1 134 1 63 1 49 1 94 1 138 1 53 1 188 1 
2 1 191 2 4 2 57 2 127 3 128 1 131 1 201 1 9 2 62 1 64 1 66 1 13 1 136 1 209 1 71 1 215 1 146 1 216 2 152 1 219 1 77 1 221 1 161 1 162 1 163 1 164 1 165 1 167 2 85 1 86 1 227 1 172 3 228 1 34 1 233 1 177 1 98 1 180 1 43 1 99 1 100 2 104 1 105 1 45 1 106 1 111 2 47 1 46 1 115 1 117 1 240 1 185 1 121 1 245 1 
2 1 191 2 196 1 4 2 57 2 127 3 128 1 131 1 201 1 9 2 62 1 64 1 134 1 63 1 13 1 209 1 71 1 143 1 215 1 146 1 147 1 216 2 152 1 218 1 76 1 219 1 77 1 221 1 161 1 162 3 163 1 164 1 165 1 168 1 167 2 85 1 86 1 227 1 172 3 228 1 34 1 94 1 233 1 177 1 98 1 43 1 100 1 104 1 45 1 106 1 111 2 47 1 115 1 117 1 49 1 240 1 185 1 53 1 245 1 188 1 
2 1 191 2 4 2 57 2 127 3 128 1 131 1 201 1 9 2 62 1 64 1 134 1 63 1 13 1 209 1 71 1 144 1 215 1 146 1 216 2 152 1 218 1 76 1 219 1 77 1 221 1 161 1 162 3 163 1 164 1 165 1 168 1 167 2 85 1 86 1 227 1 172 3 228 1 34 1 94 1 233 1 177 1 98 1 43 1 99 1 100 1 104 1 45 1 106 1 111 2 47 1 239 1 115 1 117 1 49 1 240 1 185 1 121 1 53 1 245 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 2 57 2 128 1 86 1 131 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 105 1 147 1 104 1 216 2 46 1 117 1 77 1 76 1 49 1 240 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 1 146 1 147 1 105 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 31 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 2 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 1 146 1 104 1 147 1 105 1 216 2 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
4 1 111 1 201 1 16 1 9 1 
161 1 4 1 111 1 16 1 9 1 
107 1 51 1 4 1 111 1 201 1 9 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 191 2 192 1 193 3 196 1 200 3 126 1 4 2 57 2 128 1 5 3 131 1 201 1 9 2 134 1 63 1 202 1 12 1 66 1 13 1 136 1 206 1 138 1 209 1 71 1 146 1 147 1 216 2 77 1 76 1 219 1 221 1 161 1 162 2 164 1 165 1 168 1 167 2 226 1 86 1 29 1 227 1 172 3 94 1 37 4 233 1 177 1 98 1 43 1 181 1 180 1 100 2 105 1 104 1 106 1 111 2 46 1 48 3 115 1 117 1 49 1 240 1 122 1 53 1 245 1 188 2 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 218 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 31 1 8 1 230 2 63 1 134 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 1 146 1 147 1 105 1 104 1 216 3 117 1 76 1 77 1 240 1 49 1 221 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 230 2 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 167 3 168 1 57 2 128 1 86 1 131 1 8 1 63 1 134 1 66 1 13 1 136 1 94 1 138 1 209 1 177 1 71 1 98 1 43 1 180 1 100 2 146 1 147 1 105 1 104 1 216 3 46 1 117 1 76 1 77 1 240 1 49 1 53 1 188 1 
2 1 162 2 164 1 191 2 165 1 196 1 168 1 167 3 57 2 128 1 86 1 131 1 8 1 63 1 134 1 13 1 94 1 209 1 177 1 71 1 98 1 43 1 100 1 146 1 147 1 104 1 216 3 117 1 76 1 77 1 49 1 240 1 53 1 188 1 
63 1 134 1 162 2 76 1 49 1 196 1 168 1 147 1 94 1 53 1 188 1 
0 1 162 2 193 2 192 1 195 1 196 1 200 2 168 1 199 1 226 1 56 1 126 1 5 2 29 1 227 1 172 2 171 3 202 1 34 1 37 3 206 1 94 1 233 1 39 1 15 1 42 1 181 1 103 1 147 1 106 1 111 4 114 1 48 2 219 1 76 1 21 1 122 1 123 1 125 1 245 1 188 2 
162 2 83 1 193 2 192 1 195 1 196 1 200 2 168 1 199 1 226 1 126 1 28 1 5 2 60 1 227 1 172 2 171 3 173 1 64 1 202 1 65 1 36 1 37 3 94 1 233 1 39 1 15 1 42 1 181 1 215 1 103 1 147 1 106 1 111 4 47 1 48 2 76 1 219 1 21 1 185 1 122 1 124 1 245 1 188 1 
2 1 162 2 191 1 164 1 196 1 168 1 4 1 57 1 128 1 131 1 8 1 9 1 134 1 63 1 13 1 94 1 38 1 70 1 71 1 16 1 100 1 147 1 111 1 75 1 77 1 76 1 240 1 49 1 119 1 223 1 53 1 188 1 
2 3 162 2 191 4 164 3 165 1 196 1 167 2 168 1 57 4 128 3 86 1 131 3 134 1 63 1 13 3 94 1 209 1 177 1 70 1 71 3 98 1 43 1 100 3 146 1 104 1 147 1 216 2 218 1 75 2 117 1 77 3 76 1 240 3 49 1 119 1 221 1 158 1 53 1 188 1 
2 1 162 2 164 1 191 1 100 1 196 1 168 1 147 1 57 1 128 1 131 1 75 1 63 1 134 1 76 1 77 1 49 1 240 1 119 1 13 1 94 1 53 1 70 1 71 1 188 1 
2 3 162 2 164 3 191 3 100 3 196 1 168 1 147 1 57 3 128 3 131 3 75 3 63 1 134 1 76 1 77 3 49 1 240 3 119 1 13 3 94 1 53 1 80 1 70 1 71 3 188 1 
2 1 162 2 191 1 164 1 196 1 168 1 57 1 128 1 131 1 134 1 63 1 13 1 94 1 70 1 71 1 100 1 147 1 75 1 78 1 77 1 76 1 240 1 49 1 119 1 53 1 188 1 
162 2 196 1 168 1 147 1 75 1 78 1 76 1 134 1 63 1 49 1 119 1 94 1 53 1 188 1 
212 1 162 1 236 1 84 1 
162 1 236 1 79 1 
133 1 162 1 93 2 73 1 
133 1 162 1 204 1 120 1 73 1 
236 1 61 1 
202 1 193 1 12 1 200 1 37 1 5 1 48 1 
202 1 193 1 200 1 37 1 5 1 48 1 
181 1 47 1 229 1 64 1 65 1 185 1 233 1 
181 1 126 1 122 1 233 1 
240 1 165 1 167 1 57 2 156 1 216 1 158 1 
240 1 57 1 
165 1 167 1 57 1 111 1 216 1 31 1 8 1 
240 1 57 1 
167 1 216 1 111 1 8 1 
239 1 
144 1 
144 1 
196 1 
147 1 
196 1 
162 2 17 1 225 1 195 1 144 1 214 1 168 1 109 1 111 1 216 2 239 1 8 1 76 1 118 1 50 1 241 1 68 2 207 1 94 1 188 1 
135 1 
26 1 111 2 171 2 8 1 
111 2 171 2 8 1 224 1 
162 3 163 1 225 1 195 1 168 1 26 1 85 1 127 2 227 1 172 2 171 2 228 1 62 1 64 1 174 1 135 1 34 1 68 1 94 1 207 1 208 1 233 1 17 1 144 1 215 1 214 1 19 1 106 1 109 1 216 1 111 2 152 1 47 1 239 1 219 1 76 1 118 1 50 1 185 1 121 1 245 1 224 1 188 2 
76 1 50 1 94 1 222 1 169 1 
162 2 193 3 192 1 225 1 195 1 200 3 168 1 226 1 26 1 126 1 5 3 227 1 29 1 172 2 171 2 202 1 12 1 135 1 68 1 176 1 37 4 94 1 207 1 206 1 233 1 181 1 17 1 144 1 214 1 19 1 106 1 109 1 216 1 111 3 48 3 239 1 219 1 76 1 118 1 50 1 241 1 122 1 245 1 224 1 188 3 
162 2 17 1 195 1 144 1 214 1 168 1 109 1 239 1 78 1 76 1 118 1 50 1 207 1 94 1 188 1 
1 1 162 4 17 2 195 2 144 2 214 2 168 2 109 2 239 2 76 2 118 2 50 2 207 2 94 2 208 1 188 2 
162 2 17 1 195 1 144 1 214 1 168 1 109 1 239 1 76 1 118 1 50 1 207 1 94 1 208 1 188 1 
162 2 17 1 225 1 195 1 144 1 214 1 168 1 109 1 111 3 216 1 239 1 8 1 76 1 118 1 50 1 241 2 68 1 207 1 94 1 188 1 
1 1 162 2 17 1 195 1 144 1 214 1 168 1 109 1 239 1 76 1 118 1 50 1 207 1 94 1 188 1 
1 1 162 4 17 2 195 2 144 2 214 2 168 2 109 2 169 1 239 2 76 2 118 2 50 2 207 2 94 2 222 1 188 2 
162 2 17 1 195 1 144 1 214 1 168 1 109 1 169 1 239 1 76 1 118 1 50 1 207 1 94 1 222 1 188 1 

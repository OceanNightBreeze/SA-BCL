#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
net.sourceforge.barbecue.CompositeModuleTest:testAllSubModulesAreDrawn()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testReportedWidthIsSumOfSubModuleWidths()V PASSED
net.sourceforge.barbecue.CompositeModuleTest:testGetSymbolConcatenatesChildModuleSymbols()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingResolutionOverridesDefaultResolution()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingHeightThatIsToSmallLeavesHeightUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBoundsAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testWidthAndHeightAreNotZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testGetDataReturnsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testAllSizesAreActualSize()V PASSED
net.sourceforge.barbecue.BarcodeTest:testLabelIsData()V PASSED
net.sourceforge.barbecue.BarcodeTest:testConstructingWithNoDataThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeWidthCannotBeSetBelowOne()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingDoesNotAffectBounds()V PASSED
net.sourceforge.barbecue.BarcodeTest:testBarcodeIsDrawnAtOriginForZeroZeroDraw()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingColorsChangesPaintedColors()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testPaintingLeavesColorUnchanged()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionCannotBeSetNegativeOrZero()V PASSED
net.sourceforge.barbecue.BarcodeTest:testResolutionIsDefaultInHeadlessMode()V PASSED
net.sourceforge.barbecue.BarcodeTest:testSettingFontChangesDrawnFont()V PASSED
net.sourceforge.barbecue.BarcodeTest:testDrawingNullModuleReturnsSizeOfZero()V PASSED
net.sourceforge.barbecue.Modulo10Test:testInvalidCharactersThrowsException()V PASSED
net.sourceforge.barbecue.Modulo10Test:testCheckDigitCalculatedUsingMod10()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingResolutionChangesDefaultResolution()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testGettingBarcodeWithNoTypeCreatesCode128Optimal()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testSettingTypeToUCC128WithNoAppIdThrowsException()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testCheckSumParameterIsUsedForCode39Barcodes()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletForcesHeadlessModeByDefault()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsIgnoredIfHeadless()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testGettingUCC128BarcodeReturnsCorrectType()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testServletNameReturnsBarbecue()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testSettingWidthChangesDefault()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testDrawTextParameterIsNotIgnoredIfNotHeadless()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testValueIsRequired()V PASSED
net.sourceforge.barbecue.BarcodeServletTest:testGetReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testPostReturnsBarcodeImage()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BarcodeServletTest:testCanGetAllBarcodeTypes()V ERROR java.lang.IllegalArgumentException 
net.sourceforge.barbecue.BlankModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForDifferentBarSpecs()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreEqualIfEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashCodesAreNotEqualsIfNotEquals()V PASSED
net.sourceforge.barbecue.ModuleTest:testHashcodeIsSumOfAscendingMultiplicationOfBars()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawingEmptyDrawsNothing()V PASSED
net.sourceforge.barbecue.ModuleTest:testDrawReturnsCorrectWidth()V PASSED
net.sourceforge.barbecue.ModuleTest:testBarsAreDrawnCorrectly()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsComparesBarWidths()V PASSED
net.sourceforge.barbecue.ModuleTest:testEqualsFailsForWrongClass()V PASSED
net.sourceforge.barbecue.ModuleTest:testToStringIsBarDefinitions()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testGetSymbolReturnsEmptyString()V PASSED
net.sourceforge.barbecue.SeparatorModuleTest:testNoArgumentConstructorDefaultsToWidthOfOne()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.twoOfFive.Std2of5BarcodeTest:testInvalidCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndB()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitIsNotShownInText()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsSameForAAndBInHeadlessMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBarcodeWidthIsShorterForCInHeadlesMode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleEncodingsAreConstant()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAAndBSetsEncodeIndividualCharacters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForASetIsInASet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForBSetIsInBSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCheckDigitForCSetIsInCSet()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMultipleCheckDigitCalculationsAreSame()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCodeCCheckDigitIsInBSetForDigitsOnly()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPreAmbleIsQuietZoneAndStartChar()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPostAmbleIsStopCharAndQuietZone()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testQuietZoneWidthIsAtLeast10BarWidths()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testStartCharDrawnAsFourTwoTwoFourTwoEight()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testPureCCodePrepends0IfOddLength()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsBackToBForLetters()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToAForControlChars()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpacesEncodedUsingOptimal()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCompressedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testBCharacterSetEncodedBarcodeIsScannable()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsPoint25InchesIfCalculatedHeightIsSmallerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBToCWithOddNumberOfCCharsAndMixedAlphaNum()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testMinimumHeightIsCalculatedIfBiggerThanPoint25Inches()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSizeCalculationIsSameForDrawnAndNotDrawnBarcode()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingDoesNotSwapToCForLessThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCodeCForGroupsOf4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingSwapsToCForMoreThan4Digits()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testOptimalEncodingShiftsToBForOddDigitsAtBoundary()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testComplexOptimalBarcodeUsesCorrectShiftsAndChanges()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testAlphaOnlyDataCanBeEncodedWithoutThrowingException()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCSetEncodesDigitPairs()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromAToB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDefaultCharSetIsOptimal()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanShiftFromBToA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromAtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromBtoC()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoA()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testCanCodeChangeFromCtoB()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testDrawPaintsBars()V PASSED
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest:testSpaceIsEncoded()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testDrawMakesCorrectCallbacksForDefaultMode()V PASSED
net.sourceforge.barbecue.linear.LinearBarcodeTest:testBarcodeWithNoTextDoesNotTouchGraphicsOutsideOfBoundsForNonOriginDraw()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testPreAmbleIsStartC()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testBarcodeIncludesMod10CheckDigitAndEncodingAlsoIncludesCode128ymbologyCheckDigit()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testConstructingWithNoAppIDThrowsException()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testLabelIsAIInBracketsFollowedByDataWithChecksum()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCheckDigitCalculatedUsingStandardCode128Algorithm()V PASSED
net.sourceforge.barbecue.linear.ean.UCCEAN128BarcodeTest:testCalculateChecksumReturnsNullForNoCheckDigitConstructor()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testSettingNonAWTModeWithNoResolutionUsesHeadlessEnvironmentDefaultResolution()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testNonAWTModeAlwaysReturnsNonAWTEnvironment()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testDefaultEnvironmentCanBeOverridden()V PASSED
net.sourceforge.barbecue.env.EnvironmentFactoryTest:testHeadlessEnvironmentReturnedOnHeadlessMachine()V PASSED
net.sourceforge.barbecue.env.NonAWTEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarDrawsRectangle()V FAILED junit.framework.AssertionFailedError 
net.sourceforge.barbecue.output.GraphicsOutputTest:testTextIsNotDrawnIfFontIsNull()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testDrawBarUsingBackgroundColourActuallyDrawsWithBackgroundColour()V PASSED
net.sourceforge.barbecue.output.GraphicsOutputTest:testBeginThenEndDrawRestoresoriginalGraphicsColour()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCSetHasCorrectConstants()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCharPositionsAreCorrect()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForIndex()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectIndexReturnedForChar()V PASSED
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:testCorrectModuleReturnedForKey()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testDefaultFontIsNull()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.HeadlessEnvironmentTest:testAlwaysReturnsDefaultResolution()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testResolutionIsNeverZero()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testDefaultFontIsAvailable()V PASSED
net.sourceforge.barbecue.env.DefaultEnvironmentTest:testAlwaysReturnsResolutionFromToolkit()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPreAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testPostAmbleIsEmpty()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testWidthCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testNullAndEmptyDataRejected()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartAndStopCharsAreShownInLabelAsOriginalCharsEvenThoughEncodedAsABCD()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSeparatorAddedBetweenModules()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testExtendedStartStopCharsAreAccepted()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testStartStopCharsMustBeFirstAndLastChars()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testAAndCUsedAsDefaultStartAndStopCharsIfDataContainsNoAlphas()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testSpacesInDataAreIgnoredForEncodingButPreservedInTextOutput()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testBarcodeCannotContainCharsOutsideCodabarSet()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testEncodingIsCorrect()V PASSED
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:testChecksumIsNull()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testDrawPaintsCorrectBars()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCalculateMod43()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPostAmbleIsStopCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testPreAmbleIsStartCharOnly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumAddedIfRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testChecksumNotAddedIfNotRequired()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testWidthIsCalculatedCorrectly()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotUseAsteriskCharacterInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testSeparatorIsAppendedToCheckSum()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCannotConstructBarcodeWithExtendedCharactersInBasicMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testCanEncodeExtendedASCIICharactersInFullASCIIMode()V PASSED
net.sourceforge.barbecue.linear.code39.Code39BarcodeTest:testEncodingIsCorrect()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
net.sourceforge.barbecue.linear.code128.Accumulator:Accumulator(I)V
net.sourceforge.barbecue.linear.codabar.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:isShiftOrCode(C)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertWidth(Ljava.lang.String;I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:convertToMillimetres(DI)D
net.sourceforge.barbecue.Barcode:Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsInteger(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.Integer;
net.sourceforge.barbecue.Barcode:getPreferredSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.env.DefaultEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:getBarWidth()D
net.sourceforge.barbecue.output.LabelLayout:setTextLayout(Ljava.awt.font.TextLayout;)V
net.sourceforge.barbecue.SeparatorModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeFactory:createCode39(Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkShift(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:padDataToEvenLength()V
net.sourceforge.barbecue.linear.code39.ModuleFactory:initBaseSet()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModule(Ljava.lang.String;I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:toggleDrawingColor()V
net.sourceforge.barbecue.BarcodeTest:isSameColor(Ljava.awt.Color;Ljava.awt.Color;)Z
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getExtendedCharacter(C)Ljava.lang.String;
net.sourceforge.barbecue.GraphicsMock:GraphicsMock()V
net.sourceforge.barbecue.output.CenteredLabelLayout:calculate()V
net.sourceforge.barbecue.Barcode:setDrawingText(Z)V
net.sourceforge.barbecue.Barcode:beautify(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:setBarWidth(I)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:addChar(C)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:validateData()V
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.FontMetrics;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.GraphicsMock:updateMax(II)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:validateBasicChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getTextX()F
net.sourceforge.barbecue.GraphicsMock:init()V
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode(I)V
net.sourceforge.barbecue.BarcodeServlet:getParameterAsBoolean(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;Z)Z
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getOutputStream()Ljavax.servlet.ServletOutputStream;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServlet:doRequest(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.AbstractOutput:AbstractOutput(Ljava.awt.Font;ZDLjava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundHeight()I
net.sourceforge.barbecue.BarcodeImageHandler:getImage(Lnet.sourceforge.barbecue.Barcode;)Ljava.awt.image.BufferedImage;
net.sourceforge.barbecue.output.GraphicsOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModuleForIndex(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.ShiftModule:ShiftModule([I)V
net.sourceforge.barbecue.output.LabelLayout:getBackgroundX()I
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCannotConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:hasOutput()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.CharBuffer:clear()V
net.sourceforge.barbecue.GraphicsMock:getRects()Ljava.util.List;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:replaceTraditionalStartStopWithModern()V
net.sourceforge.barbecue.BarcodeImageHandler:writePNG(Lnet.sourceforge.barbecue.Barcode;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.Module:toString()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:getX()I
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:validateData()V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encode(Ljava.util.List;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.codabar.ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayoutFactory:createCenteredLayout(III)Lnet.sourceforge.barbecue.output.LabelLayout;
net.sourceforge.barbecue.linear.code128.CharBuffer:isFull()Z
net.sourceforge.barbecue.BlankModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getCharacterSet()I
net.sourceforge.barbecue.output.SizingOutput:drawText(Ljava.lang.String;Lnet.sourceforge.barbecue.output.LabelLayout;)I
net.sourceforge.barbecue.Barcode:drawModule(Lnet.sourceforge.barbecue.Module;Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.BarcodeServletTest.ServletOutputStreamMock:write(I)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.SeparatorModule:SeparatorModule(I)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getMod10CheckDigit(Ljava.lang.String;Z)Ljava.lang.String;
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:getContentType()Ljava.lang.String;
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPostamble()Z
net.sourceforge.barbecue.BarcodeException:BarcodeException(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:DataOnlyCode128(Lnet.sourceforge.barbecue.linear.code128.Code128BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.output.SizingOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.linear.code128.Code128Barcode:shiftMode()I
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.NullOutput:drawBar(IIIIZ)I
net.sourceforge.barbecue.BarcodeServlet:doPost(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.GraphicsMock:fillRect(IIII)V
net.sourceforge.barbecue.Module:Module([I)V
net.sourceforge.barbecue.Module:setSymbol(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;I)V
net.sourceforge.barbecue.env.EnvironmentFactoryTest.UnsupportedEnvironment:getResolution()I
net.sourceforge.barbecue.Barcode:paintComponent(Ljava.awt.Graphics;)V
net.sourceforge.barbecue.Barcode:setBarHeight(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactoryTest:makeDoubleChar(I)Ljava.lang.String;
net.sourceforge.barbecue.Barcode:invalidateSize()V
net.sourceforge.barbecue.linear.code128.Accumulator:getValue()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.DefaultEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.GraphicsOutput:endDraw(II)V
net.sourceforge.barbecue.CompositeModule:size()I
net.sourceforge.barbecue.Barcode:calculateSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.BarcodeServlet:getBarcode(Ljava.lang.String;Ljava.lang.String;Ljava.lang.String;Z)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.env.NonAWTEnvironment:NonAWTEnvironment(I)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:initC()V
net.sourceforge.barbecue.CompositeModule:getModule(I)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:getPreAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:Code128Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.output.LabelLayout:LabelLayout(IIII)V
net.sourceforge.barbecue.BarcodeServlet:getMethod(Ljava.lang.String;)Ljava.lang.reflect.Method; | CONDITION | 8916 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServletTest.BarcodeServletMock:getBarcode()Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.Barcode:getBounds(Ljava.awt.Rectangle;)Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.ModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.code128.Code128Barcode:clearShift()V
net.sourceforge.barbecue.env.NonAWTEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.linear.code128.Code128Barcode:encodeData()[Lnet.sourceforge.barbecue.Module; | CONDITION | 8370 | if (x) -> if (!x)
net.sourceforge.barbecue.BarcodeServlet:getRequiredParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:beginDraw()V
net.sourceforge.barbecue.CompositeModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.CompositeModuleTest.ModuleMock:wasDrawn()Z
net.sourceforge.barbecue.linear.code39.ModuleFactory:initExtendedSet()V
net.sourceforge.barbecue.Barcode:getHeight()I
net.sourceforge.barbecue.BarcodeServlet:isType(Ljava.lang.String;[Ljava.lang.String;)Z
net.sourceforge.barbecue.linear.code128.Code128Barcode:checkCodeChange(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.env.EnvironmentFactory:getEnvironment()Lnet.sourceforge.barbecue.env.Environment;
net.sourceforge.barbecue.linear.LinearBarcode:LinearBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.twoOfFive.Std2of5ModuleFactory:isValid(Ljava.lang.String;)Z
net.sourceforge.barbecue.output.LabelLayout:getTextY()F
net.sourceforge.barbecue.BarcodeServlet:getServletName()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initB()V | CONSTANT | 13907 | 1 -> 2
net.sourceforge.barbecue.env.EnvironmentFactory:setDefaultEnvironment(Lnet.sourceforge.barbecue.env.Environment;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.BlankModule:BlankModule(I)V
net.sourceforge.barbecue.Barcode:getSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.output.GraphicsOutput:GraphicsOutput(Ljava.awt.Graphics2D;Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:CodabarBarcode(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:CharBuffer(I)V
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;ZZ)V
net.sourceforge.barbecue.Barcode:getBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.linear.code39.Code39Barcode:Code39Barcode(Ljava.lang.String;Z)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:updateCheckSum(Ljava.lang.String;)V
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:getParameter(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128BarcodeTest.DataOnlyCode128:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isGotPreamble()Z
net.sourceforge.barbecue.env.EnvironmentFactory:determineCurrentEnvironment()V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:getCode()I
net.sourceforge.barbecue.Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.env.HeadlessEnvironment:getResolution()I
net.sourceforge.barbecue.CompositeModule:CompositeModule()V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getModuleForIndex(II)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code128.Code128Barcode:isControl(C)Z
net.sourceforge.barbecue.GraphicsMock:updateMin(II)V
net.sourceforge.barbecue.Barcode:draw(Ljava.awt.Graphics2D;II)V
net.sourceforge.barbecue.BarcodeFactory:createUCC128(Ljava.lang.String;Ljava.lang.String;)Lnet.sourceforge.barbecue.Barcode;
net.sourceforge.barbecue.output.GraphicsOutput:drawBar(IIIIZ)I | OPERATOR | 3864 | * -> -
net.sourceforge.barbecue.GraphicsMock:setColor(Ljava.awt.Color;)V
net.sourceforge.barbecue.env.EnvironmentFactory:setHeadlessMode()V
net.sourceforge.barbecue.BarcodeImageHandler:writeImage(Lnet.sourceforge.barbecue.Barcode;Ljava.lang.String;Ljava.io.OutputStream;)V
net.sourceforge.barbecue.linear.code39.ModuleFactory:getModule(Ljava.lang.String;)Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.output.SizingOutput:SizingOutput(Ljava.awt.Font;Ljava.awt.Color;Ljava.awt.Color;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:digitGroupEndIsNext(ILjava.lang.String;)Z
net.sourceforge.barbecue.env.EnvironmentFactoryTest.ErrorEnvironment:getResolution()I
net.sourceforge.barbecue.BarcodeServlet:doGet(Ljavax.servlet.http.HttpServletRequest;Ljavax.servlet.http.HttpServletResponse;)V
net.sourceforge.barbecue.linear.code128.ModuleFactory:getIndex(Ljava.lang.String;I)I
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:checkStartStop(CI)V
net.sourceforge.barbecue.Module:hashCode()I
net.sourceforge.barbecue.linear.LinearBarcode:drawTextLabel(Lnet.sourceforge.barbecue.output.Output;III)I
net.sourceforge.barbecue.Module:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.CompositeModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.linear.LinearBarcodeTest;Ljava.lang.String;Z)V
net.sourceforge.barbecue.BlankModule:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateMod43(Ljava.lang.String;)I
net.sourceforge.barbecue.Module:draw(Lnet.sourceforge.barbecue.output.Output;IIII)I
net.sourceforge.barbecue.linear.code128.ModuleFactory:getKeys(I)Ljava.util.List;
net.sourceforge.barbecue.linear.code39.Code39Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.SizingOutput:endDraw(II)V
net.sourceforge.barbecue.linear.code128.Accumulator:increment()V
net.sourceforge.barbecue.linear.code128.CharBuffer:size()I
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeExtendedChars(Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isCalculatedCheckDigit()Z
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:isEncodedData()Z
net.sourceforge.barbecue.CompositeModuleTest:concat([Lnet.sourceforge.barbecue.Module;)Ljava.lang.String;
net.sourceforge.barbecue.linear.code39.ModuleFactory:getIndex(Ljava.lang.String;)I
net.sourceforge.barbecue.Barcode:getWidth()I
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;IIZ)I
net.sourceforge.barbecue.BarcodeServletTest.HttpServletResponseMock:setContentType(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CharBuffer:toString()Ljava.lang.String;
net.sourceforge.barbecue.linear.LinearBarcode:draw(Lnet.sourceforge.barbecue.output.Output;IIII)Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.twoOfFive.Std2of5Barcode:Std2of5Barcode(Ljava.lang.String;)V
net.sourceforge.barbecue.Module:equals(Ljava.lang.Object;)Z
net.sourceforge.barbecue.linear.code39.Code39Barcode:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:widthInBars()I
net.sourceforge.barbecue.Barcode:getMinimumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.ModuleFactory:initA()V
net.sourceforge.barbecue.CompositeModuleTest:getTestDrawingEnvironment()Lnet.sourceforge.barbecue.output.Output;
net.sourceforge.barbecue.linear.codabar.CodabarBarcode:addDefaultStartStopIfRequired()V
net.sourceforge.barbecue.linear.code39.Code39Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.env.EnvironmentFactory:setNonAWTMode()V
net.sourceforge.barbecue.GraphicsMock:getColor()Ljava.awt.Color;
net.sourceforge.barbecue.Module:widthInBars()I
net.sourceforge.barbecue.BarcodeServlet:getParameter(Ljavax.servlet.http.HttpServletRequest;Ljava.lang.String;)Ljava.lang.String;
net.sourceforge.barbecue.env.EnvironmentFactoryTest.TestEnvironment:getResolution()I
net.sourceforge.barbecue.GraphicsMock:getColors()Ljava.util.List;
net.sourceforge.barbecue.Barcode:setResolution(I)V
net.sourceforge.barbecue.BarcodeServlet:outputBarcodeImage(Ljavax.servlet.http.HttpServletResponse;Lnet.sourceforge.barbecue.Barcode;)V
net.sourceforge.barbecue.output.GraphicsOutput:beginDraw()V
net.sourceforge.barbecue.linear.codabar.CodabarBarcodeTest:assertCanConstruct(Ljava.lang.String;)V
net.sourceforge.barbecue.GraphicsMock:getModifiedBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Barcode:getResolution()I
net.sourceforge.barbecue.linear.code128.Accumulator:add(I)V
net.sourceforge.barbecue.output.CenteredLabelLayout:CenteredLabelLayout(III)V
net.sourceforge.barbecue.SeparatorModule:getSymbol()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:getLabel()Ljava.lang.String;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundWidth()I
net.sourceforge.barbecue.env.HeadlessEnvironment:getDefaultFont()Ljava.awt.Font;
net.sourceforge.barbecue.output.LabelLayout:getBackgroundY()I
net.sourceforge.barbecue.linear.code128.Code128Barcode:getSymbolWidth(I)D
net.sourceforge.barbecue.Barcode:getActualSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code128.Code128Barcode:containsShiftOrChange(Ljava.lang.String;)Z
net.sourceforge.barbecue.Barcode:getData()Ljava.lang.String;
net.sourceforge.barbecue.linear.code128.Code128Barcode:calculateMinimumBarHeight(I)I
net.sourceforge.barbecue.Barcode:getY()I
net.sourceforge.barbecue.Barcode:setFont(Ljava.awt.Font;)V
net.sourceforge.barbecue.linear.code128.Code128Barcode:getPostAmble()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.CompositeModule:add(Lnet.sourceforge.barbecue.Module;)V
net.sourceforge.barbecue.GraphicsMock:getTextBounds()Ljava.awt.Rectangle;
net.sourceforge.barbecue.Modulo10:getMod10CheckDigit(Ljava.lang.String;II)I
net.sourceforge.barbecue.linear.LinearBarcodeTest.BarcodeMock:encodeData()[Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.BarcodeServletTest:assertCanGenerateBarcodeInServlet(Ljava.lang.String;)V
net.sourceforge.barbecue.linear.code128.CodeChangeModule:CodeChangeModule([II)V
net.sourceforge.barbecue.Barcode:getMaximumSize()Ljava.awt.Dimension;
net.sourceforge.barbecue.linear.code39.Code39Barcode:calculateChecksum()Lnet.sourceforge.barbecue.Module;
net.sourceforge.barbecue.linear.code39.ModuleFactory:hasModule(Ljava.lang.String;Z)Z
net.sourceforge.barbecue.BarcodeServletTest.HttpServletRequestMock:setParameters(Ljava.util.Map;)V
net.sourceforge.barbecue.BarcodeTest.BarcodeMock:BarcodeMock(Lnet.sourceforge.barbecue.BarcodeTest;Ljava.lang.String;)V
net.sourceforge.barbecue.linear.ean.UCCEAN128Barcode:UCCEAN128Barcode(Ljava.lang.String;Ljava.lang.String;Z)V
net.sourceforge.barbecue.env.NonAWTEnvironment:getResolution()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 144 1 205 1 179 1 128 1 47 1 
112 1 144 1 205 1 179 1 47 1 
127 1 192 1 177 2 
100 2 214 1 154 1 2 1 103 1 140 2 219 3 8 1 133 2 245 1 11 2 
100 1 2 1 103 1 140 2 107 1 89 1 219 2 130 1 47 1 8 1 133 4 34 1 228 1 245 1 11 2 98 1 
100 1 2 1 103 1 140 1 107 1 89 1 219 1 64 1 47 1 8 1 133 3 34 1 228 1 148 1 119 1 245 1 11 1 232 1 
100 1 2 1 103 1 140 1 107 1 130 1 89 1 219 1 47 1 8 1 133 3 34 1 228 2 245 1 11 1 194 1 
100 1 8 1 103 1 133 2 2 1 140 1 230 1 11 1 219 1 245 1 
100 1 2 1 103 1 140 1 107 1 89 1 219 1 47 1 203 1 143 1 241 1 8 1 133 3 34 1 228 4 10 1 245 1 11 1 
100 1 8 1 156 1 103 1 133 2 2 1 140 1 27 1 11 1 219 1 245 1 
8 1 2 1 84 1 245 1 
100 2 12 1 2 1 103 1 140 1 28 1 219 1 8 1 133 2 245 1 11 1 
100 1 2 1 103 1 140 1 107 1 89 2 219 1 64 1 47 2 144 1 8 1 133 3 34 1 228 1 148 1 119 1 11 1 162 1 97 1 232 1 
100 1 2 1 103 1 140 1 107 1 89 2 219 1 64 1 47 2 144 1 8 1 133 3 34 1 228 1 148 1 119 1 11 1 162 1 232 1 
100 1 24 1 39 1 2 1 103 1 140 1 218 1 89 1 219 1 47 1 144 1 8 1 133 2 245 1 11 1 162 1 97 1 
100 1 24 1 213 1 39 1 2 1 103 1 140 1 89 1 219 1 47 1 144 1 8 1 133 2 245 1 11 1 162 1 97 1 
100 1 24 1 39 1 2 1 103 1 165 1 140 1 89 1 219 1 47 1 21 1 144 1 8 1 133 2 245 1 11 1 162 1 209 1 
100 1 24 1 39 1 2 1 103 1 165 1 140 1 89 1 219 1 47 1 21 1 144 1 8 1 133 2 245 1 11 1 162 1 209 1 97 1 
100 1 214 1 2 1 103 1 140 1 219 2 8 1 133 3 245 1 11 2 
100 1 2 1 140 1 157 2 166 1 219 2 225 1 8 1 133 3 245 1 
100 2 8 1 133 2 2 1 140 1 157 1 219 1 245 1 225 1 233 1 
100 1 2 1 140 1 157 1 219 1 75 1 225 1 8 1 133 2 245 1 
195 3 22 1 237 1 
195 1 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 117 1 9 1 244 1 151 4 172 1 211 4 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 117 1 9 1 244 1 151 4 172 1 211 4 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 9 1 244 1 151 4 172 1 211 4 
125 1 178 2 126 1 179 2 62 1 182 2 129 1 183 4 130 1 186 1 131 1 8 1 133 3 134 1 9 1 193 3 194 2 14 4 196 1 15 1 198 2 18 1 75 2 201 2 76 1 144 1 78 4 147 1 207 2 149 1 151 4 211 4 214 1 26 1 215 1 216 1 85 1 157 1 87 4 158 2 219 2 225 1 93 8 228 3 94 4 37 1 162 1 164 4 100 3 102 2 105 1 41 1 43 1 235 2 45 1 166 1 107 1 108 1 47 2 167 1 168 4 169 1 242 2 49 1 243 1 118 1 51 2 244 1 172 1 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 117 1 9 1 244 1 151 4 172 1 211 4 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 117 1 9 1 244 1 151 4 172 1 211 4 
124 2 125 1 126 1 0 3 3 2 130 1 131 1 7 2 132 2 8 1 133 3 134 1 9 1 138 1 16 2 17 2 19 4 20 2 142 1 144 1 146 3 150 2 151 4 26 1 157 1 158 4 159 2 30 3 35 2 162 1 163 1 164 3 41 1 43 1 166 1 45 1 47 2 167 1 169 1 49 1 52 2 56 1 172 1 173 3 59 3 179 2 62 1 181 2 184 5 183 6 186 1 187 3 67 2 194 1 71 3 196 1 197 3 198 2 75 2 76 1 204 1 80 1 82 1 81 1 211 4 214 1 215 1 85 1 216 1 87 3 219 2 220 3 225 1 227 2 93 14 228 2 94 4 95 1 231 2 100 3 234 2 101 5 105 1 107 1 235 4 110 1 108 1 113 2 240 3 244 1 246 1 122 2 
137 1 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 117 1 9 1 244 1 151 4 172 1 211 4 
125 1 41 1 117 1 85 1 9 1 244 1 45 1 151 4 131 1 108 1 172 1 211 4 
125 1 45 1 151 1 172 1 211 1 
125 1 41 1 85 1 45 1 166 1 108 1 131 1 117 1 9 1 151 4 172 1 211 4 
125 1 41 1 85 1 45 1 166 1 108 1 131 1 91 1 117 1 9 1 151 4 211 4 
125 1 41 1 85 1 45 1 166 1 131 1 108 1 239 1 117 1 9 1 244 1 151 4 172 1 211 4 
93 1 72 1 142 1 
93 1 200 1 
93 1 175 1 
93 1 175 1 
93 1 175 1 
144 1 24 1 39 1 60 1 93 1 183 1 47 1 
164 1 144 1 93 1 183 1 47 1 121 1 
164 1 24 1 39 1 60 1 165 1 183 1 47 1 144 1 92 1 161 1 93 1 36 1 
93 1 200 1 
93 1 200 1 
93 1 63 1 
78 1 93 1 222 1 
90 1 32 1 14 1 93 1 
100 1 178 1 199 1 157 1 200 1 219 1 6 1 225 1 77 1 8 1 65 1 133 2 93 2 66 2 134 1 135 1 94 2 
104 1 
100 1 178 1 84 1 199 1 157 1 219 1 225 1 77 1 8 1 65 1 133 2 134 1 135 1 
59 1 124 1 126 1 179 1 0 1 3 1 181 1 183 3 184 2 186 1 7 1 132 1 8 1 187 1 133 3 134 1 67 1 11 1 194 1 70 1 71 1 197 1 198 1 16 1 17 1 74 1 19 2 75 1 20 1 146 1 150 1 87 3 158 2 159 1 219 1 221 1 29 1 220 1 223 1 30 1 35 1 93 2 34 1 228 1 227 1 94 2 95 1 231 1 100 1 234 1 101 2 103 1 235 2 107 1 47 1 116 1 122 1 173 1 176 1 
100 1 103 1 219 1 223 1 7 1 8 1 115 1 133 2 134 1 227 1 95 1 11 1 231 1 
59 1 124 1 126 1 0 1 179 1 3 1 181 1 4 1 183 3 184 2 186 1 132 1 187 1 188 1 133 1 67 1 194 1 70 1 71 1 197 1 198 1 16 1 17 1 74 1 19 2 75 1 20 1 146 2 150 1 155 1 87 3 158 2 159 1 221 1 29 1 220 1 223 1 160 1 30 1 35 1 228 1 93 2 94 2 234 1 101 2 235 2 166 1 107 1 47 1 169 1 170 1 116 1 173 1 122 1 176 1 
59 1 124 1 126 1 179 1 0 1 3 1 181 1 183 3 184 2 186 1 132 1 7 1 8 1 187 1 133 3 134 1 67 1 11 1 194 1 70 1 71 1 197 1 198 1 16 1 17 1 74 1 19 2 75 1 20 1 146 1 150 1 87 3 158 2 159 1 219 1 221 1 29 1 220 1 223 1 30 1 35 1 93 2 34 1 228 1 227 1 94 2 229 1 95 1 231 1 100 1 234 1 101 2 103 1 235 2 107 1 47 1 116 1 122 1 173 1 176 1 
59 1 124 1 126 1 179 1 0 1 3 1 181 1 183 3 184 2 186 1 132 1 7 1 187 1 8 1 133 3 134 1 67 1 194 1 70 1 71 1 197 1 16 1 198 1 17 1 74 1 19 2 75 1 20 1 146 1 150 1 157 1 87 3 158 2 159 1 219 1 221 1 29 1 220 1 223 1 30 1 225 1 35 1 93 2 228 1 227 1 94 2 229 1 95 1 231 1 100 1 234 1 101 2 235 2 107 1 166 1 47 1 169 1 116 1 122 1 173 1 176 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 30 1 160 1 132 1 7 1 187 1 8 1 188 1 133 2 227 1 134 1 94 2 95 1 67 1 11 1 231 1 100 1 71 1 101 2 197 1 103 1 16 1 17 1 19 2 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 35 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 35 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 35 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 35 1 94 2 67 1 95 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 2 170 1 115 1 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 35 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
93 1 106 1 235 1 158 1 29 1 
234 1 93 1 106 1 235 1 158 1 
93 1 235 1 158 1 29 1 210 1 202 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 60 1 179 1 0 1 3 1 181 1 4 1 183 3 184 2 132 1 7 1 187 1 8 1 188 1 133 2 134 1 67 1 11 1 71 1 197 1 16 1 198 1 17 1 19 2 75 1 20 1 144 1 146 2 150 1 209 1 24 1 155 1 26 1 216 1 158 2 159 1 219 1 220 1 29 1 30 1 160 1 92 3 161 3 35 1 93 2 227 1 36 3 94 2 95 1 162 1 231 1 100 2 164 3 234 1 39 1 101 2 103 1 105 1 165 4 235 2 47 1 170 1 115 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 229 1 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 63 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 63 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
100 1 103 1 219 1 7 2 8 1 115 1 133 3 134 1 227 2 95 1 11 2 231 2 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
100 1 103 1 219 1 7 2 8 1 115 1 133 3 134 1 227 2 95 1 11 2 231 2 
59 2 124 2 126 1 179 2 0 2 3 2 181 2 183 6 184 4 186 1 132 2 7 1 8 1 187 2 133 3 134 1 67 2 136 1 11 1 194 1 13 1 70 2 71 2 197 2 198 2 16 2 17 2 74 1 19 4 75 2 20 2 144 1 146 2 150 2 25 1 216 1 87 3 158 4 159 2 219 1 28 1 221 2 29 2 220 2 223 2 30 2 224 1 226 1 35 2 93 4 34 1 228 1 227 1 94 4 95 1 162 1 231 1 38 1 164 3 100 2 234 2 101 4 103 1 105 1 235 4 107 1 47 2 48 1 116 2 50 1 53 1 122 2 173 2 176 2 
59 1 124 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 1 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 4 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 188 1 133 2 227 1 134 1 94 2 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 19 2 170 1 115 1 146 2 150 1 122 1 173 1 
100 1 8 1 103 1 133 2 227 1 134 1 95 1 11 1 219 1 231 1 7 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 88 2 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
100 1 103 1 73 1 219 1 7 1 8 1 115 1 133 2 134 1 227 1 95 1 11 1 231 1 
59 1 124 1 0 1 3 1 184 2 159 1 88 2 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 1 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 229 1 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 155 1 0 1 3 1 184 2 159 1 219 1 220 1 30 1 132 1 7 1 187 1 8 1 133 2 35 1 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 146 2 150 1 122 1 173 1 
59 1 124 1 60 1 0 1 3 1 181 1 184 2 183 2 132 1 7 2 187 1 8 1 133 3 134 1 67 1 11 2 71 1 197 1 16 1 198 1 17 1 19 2 75 1 20 1 142 3 144 1 146 1 150 1 209 2 152 1 24 1 213 1 26 1 216 1 86 1 159 1 28 1 219 2 220 1 30 1 92 2 161 2 227 2 93 3 36 2 94 2 95 1 162 1 231 2 98 1 100 4 164 2 39 1 101 2 103 1 105 1 165 3 47 1 114 1 170 1 115 1 54 1 122 1 173 1 
59 1 124 1 0 1 3 1 184 2 159 1 219 1 220 1 160 1 30 1 132 1 7 1 187 1 8 1 133 2 227 1 134 1 94 3 95 1 67 1 11 1 231 1 100 1 101 2 71 1 103 1 197 1 16 1 17 1 200 1 19 3 170 1 115 1 146 1 150 1 122 1 173 1 
153 1 24 1 178 1 156 1 180 1 216 1 27 1 181 1 183 2 219 1 221 1 31 1 8 1 161 2 92 2 133 2 134 1 93 4 36 2 190 1 191 1 11 1 164 2 100 1 70 1 39 1 103 1 105 1 165 3 198 1 44 1 75 1 47 1 20 1 238 1 142 3 144 1 116 1 50 1 83 1 120 1 209 1 176 1 57 1 
24 1 178 1 26 1 180 1 216 1 181 1 183 2 218 1 219 1 64 1 31 1 8 1 161 2 92 2 133 2 228 1 134 1 93 4 36 2 11 1 162 1 232 1 164 2 100 2 39 1 103 1 105 1 165 3 198 1 44 1 75 1 20 1 47 1 238 1 142 3 144 1 119 1 148 1 120 1 209 1 57 1 
59 1 0 1 184 1 158 1 219 1 220 1 30 1 7 1 187 1 8 1 133 2 93 1 134 1 227 1 95 1 11 1 231 1 100 1 101 1 71 1 197 1 103 1 106 1 235 1 200 1 111 1 113 1 146 1 80 1 82 1 173 1 246 1 
59 3 124 1 0 3 3 1 184 4 159 1 219 1 220 3 30 3 132 1 7 1 187 3 8 1 133 2 35 1 134 1 227 1 94 2 229 1 67 1 95 1 11 1 231 1 100 1 101 4 71 3 197 3 103 1 16 1 17 1 19 2 146 3 80 2 82 1 150 1 122 1 173 3 246 1 177 1 
59 1 0 1 184 1 219 1 220 1 30 1 7 1 187 1 8 1 133 2 134 1 227 1 95 1 11 1 231 1 100 1 101 1 71 1 197 1 103 1 146 1 80 1 82 1 173 1 246 1 
59 3 0 3 184 3 219 1 220 3 30 3 7 1 187 3 8 1 133 2 134 1 227 1 95 1 11 1 231 1 100 1 101 3 71 3 197 3 103 1 146 3 79 1 80 3 82 1 173 3 246 1 
59 1 0 1 184 1 219 1 220 1 30 1 7 1 187 1 8 1 133 2 134 1 227 1 230 1 95 1 11 1 231 1 100 1 101 1 71 1 197 1 103 1 146 1 80 1 82 1 173 1 246 1 
100 1 103 1 219 1 7 1 8 1 133 2 134 1 227 1 80 1 230 1 95 1 11 1 231 1 246 1 
133 1 208 1 109 1 247 1 
40 1 133 1 109 1 
212 2 139 1 154 1 133 1 
139 1 154 1 133 1 171 1 96 1 
109 1 123 1 
164 1 60 1 165 1 92 1 161 1 36 1 
70 1 236 1 221 1 47 1 144 1 116 1 50 1 
164 1 161 1 92 1 165 1 36 1 209 1 
144 1 105 1 216 1 47 1 
94 1 184 2 19 1 159 1 173 1 99 1 177 1 
184 1 173 1 
93 1 94 1 184 1 200 1 19 1 159 1 
184 1 173 1 
93 1 94 1 200 1 19 1 
225 1 
157 1 
157 1 
11 1 
103 1 
11 1 
58 1 93 2 200 1 142 2 
42 1 93 2 200 1 142 2 
58 1 178 1 126 1 1 1 61 1 181 1 157 1 87 2 183 2 5 1 186 1 219 1 28 1 221 1 225 1 8 1 33 1 133 3 93 2 134 1 228 1 94 1 68 1 69 1 194 1 100 2 70 1 42 1 198 1 107 1 74 1 141 1 75 1 46 1 20 1 47 1 142 2 145 1 206 1 169 1 116 1 174 1 176 1 
8 1 145 1 84 1 134 1 55 1 
58 1 24 1 178 1 60 1 26 1 1 1 61 1 216 1 181 1 157 1 183 2 219 1 28 1 225 1 8 1 161 3 92 3 33 1 133 2 93 3 134 1 36 3 94 1 68 1 69 1 162 1 164 3 100 3 39 1 14 1 105 1 165 4 42 1 198 1 75 1 46 1 20 1 47 1 142 2 144 1 206 1 145 1 78 1 209 1 174 1 
100 1 178 1 61 1 157 1 219 1 141 1 225 1 145 1 8 1 206 1 33 1 133 2 134 1 69 1 174 1 
100 1 178 1 1 1 61 1 157 1 200 1 219 1 46 1 225 1 145 1 8 1 206 1 33 1 78 2 133 2 93 3 134 1 94 1 69 1 174 1 
100 1 178 1 61 1 157 1 217 1 219 1 225 1 206 1 145 1 8 1 33 1 133 2 134 1 69 1 174 1 
100 2 178 2 84 1 61 2 157 2 217 1 219 2 225 2 206 2 145 2 8 2 33 2 133 4 134 2 55 1 69 2 174 2 
100 1 178 1 61 1 157 1 219 1 225 1 145 1 8 1 206 1 33 1 133 2 134 1 230 1 69 1 174 1 
100 2 178 2 61 2 157 2 217 1 219 2 141 1 225 2 206 2 145 2 8 2 33 2 133 4 134 2 69 2 174 2 
100 1 178 1 84 1 61 1 157 1 219 1 225 1 206 1 145 1 8 1 33 1 133 2 134 1 55 1 69 1 174 1 
100 1 178 1 1 2 61 1 157 1 200 1 219 1 46 1 225 1 145 1 8 1 206 1 33 1 78 1 133 2 93 1 134 1 94 2 69 1 174 1 
68 1 
24 1 178 1 60 1 26 1 216 1 157 1 183 1 219 1 28 1 225 1 8 1 161 2 92 2 133 2 93 1 134 1 36 2 94 1 37 1 193 1 162 1 164 2 100 3 39 1 14 1 102 1 105 1 165 3 198 1 75 1 201 1 47 1 144 1 168 1 242 1 78 1 147 1 243 1 207 1 149 1 209 1 
168 1 94 1 51 1 182 1 193 1 177 1 
207 1 200 1 
102 1 200 1 
178 1 182 1 157 1 158 1 219 1 225 1 8 1 133 2 134 1 93 2 94 1 37 1 193 2 100 1 235 1 168 1 242 1 147 1 78 1 243 1 51 1 149 1 
178 1 127 1 182 1 157 1 158 1 219 1 222 1 225 1 8 1 133 2 134 1 93 2 94 1 37 1 193 2 100 1 235 1 168 1 242 1 147 1 78 1 243 1 51 1 149 1 177 1 
242 1 
178 1 126 1 179 1 182 1 157 1 87 4 183 2 185 1 158 1 28 1 186 1 219 1 221 1 225 1 8 1 133 3 93 3 134 1 228 1 94 2 37 1 193 2 194 1 100 2 70 1 14 2 102 1 198 1 235 1 107 1 74 1 75 1 201 1 47 1 168 2 169 1 242 1 78 2 147 1 243 1 207 1 116 1 51 1 149 1 176 1 
147 1 84 1 243 1 37 1 149 1 193 1 
24 1 178 1 60 1 26 1 179 1 216 1 182 1 157 1 183 2 158 1 219 1 28 1 225 1 8 1 161 4 92 4 133 2 93 3 134 1 36 4 94 2 37 1 193 2 162 1 164 4 100 3 39 1 14 2 102 1 105 1 165 5 198 1 235 1 75 1 201 1 47 1 144 1 168 2 242 1 78 2 147 1 243 1 207 1 51 1 149 1 209 1 
147 1 84 1 243 1 37 1 149 1 193 1 
178 1 157 1 185 1 219 1 225 1 8 1 32 1 133 2 134 1 93 2 94 2 189 1 193 1 100 1 200 1 201 1 168 2 147 1 78 1 243 1 23 1 
100 1 178 1 157 1 200 1 219 1 201 1 225 1 168 2 8 1 32 1 78 1 147 1 133 2 93 2 243 1 134 1 94 2 37 1 149 1 193 1 

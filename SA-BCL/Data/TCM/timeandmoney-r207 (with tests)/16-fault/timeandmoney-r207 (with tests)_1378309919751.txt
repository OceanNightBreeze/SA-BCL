#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (102,239) (102,239) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (102,239) (102,239) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (102,239) (102,239) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (102,239) (102,239) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 51 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 17 221 190 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (41,195) 94 233 (30,225) (30,225) 51 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 239 1 102 1 13 1 6 1 82 1 36 1 280 1 281 1 135 1 160 1 
112 1 239 1 102 1 13 1 6 1 82 1 36 1 280 1 281 1 135 1 160 1 
112 1 239 1 102 1 13 1 6 1 82 1 36 1 280 1 281 1 135 1 160 1 
112 1 239 1 102 1 13 1 6 1 82 1 36 1 280 1 281 1 135 1 160 1 
300 2 253 2 13 1 330 1 82 4 83 1 135 4 118 3 137 1 260 3 293 1 196 1 218 1 6 1 324 1 210 1 56 1 160 1 
13 1 82 2 281 1 280 1 135 2 118 1 291 1 84 1 293 1 6 1 346 1 29 1 324 1 210 1 56 1 160 1 
300 1 13 2 82 3 280 1 135 3 118 2 137 1 260 1 6 1 210 1 56 1 160 2 298 1 
300 4 253 2 330 1 82 9 83 1 280 1 135 9 118 5 137 3 260 7 6 1 7 1 338 1 210 1 160 2 359 1 13 2 321 1 196 1 293 1 218 1 324 1 56 1 298 1 
300 4 253 2 330 1 82 9 83 1 280 1 135 9 118 5 137 3 260 7 6 1 7 1 338 1 210 1 160 2 359 1 13 2 321 1 196 1 293 1 218 1 324 1 56 1 298 1 
292 1 262 1 43 1 
299 1 234 2 43 1 
222 2 269 2 25 2 247 2 81 1 233 1 94 2 195 2 
222 3 348 2 326 2 81 1 175 1 1 1 117 1 333 1 85 1 306 1 205 1 25 3 24 1 230 1 64 1 180 1 233 1 89 1 122 2 46 1 189 1 187 1 241 1 240 1 47 1 94 2 100 2 166 1 195 2 269 2 247 2 108 1 78 2 251 1 58 1 110 1 252 1 
30 1 233 1 94 1 195 1 
222 1 269 1 60 1 223 1 25 1 18 1 289 1 179 1 71 1 262 1 357 1 337 1 97 1 43 1 
222 1 223 1 71 1 94 1 97 2 43 1 195 1 269 1 25 1 18 2 247 1 179 1 262 1 337 1 357 1 
347 1 204 1 18 1 65 1 97 1 
347 1 266 1 18 2 65 1 74 1 262 1 97 2 43 1 
347 1 18 1 97 1 
30 1 18 1 65 1 225 1 233 1 94 1 97 1 195 1 
43 1 
347 1 266 1 18 2 65 1 262 1 96 1 97 2 43 1 
347 2 59 3 349 1 225 1 302 1 61 2 257 2 43 2 65 2 335 1 232 1 121 2 233 1 68 4 262 2 286 1 70 1 30 1 162 2 188 1 32 1 266 1 94 1 95 1 97 5 50 2 51 1 195 1 344 1 18 5 272 1 
222 2 187 1 326 1 241 1 240 1 175 1 176 1 165 1 353 1 166 1 85 1 195 1 269 1 205 1 25 2 247 1 180 1 78 1 122 1 252 1 
292 1 81 1 
222 2 81 2 2 1 94 1 195 1 269 2 25 2 247 1 171 1 
176 1 244 1 203 1 
222 1 187 1 326 1 240 1 241 1 81 1 175 1 166 1 85 1 25 1 205 1 180 1 10 1 78 1 122 1 252 1 
222 3 269 3 25 3 247 3 81 1 94 1 165 1 195 3 
222 1 269 1 214 1 25 1 247 1 179 1 195 1 
222 1 269 1 25 1 247 1 179 1 2 1 94 1 171 1 195 1 
222 4 223 1 348 1 326 1 81 1 175 1 2 1 353 1 117 1 333 1 85 1 306 1 205 1 25 4 230 1 64 1 27 1 180 1 179 1 233 1 337 1 357 1 89 1 46 1 122 1 187 1 241 1 240 1 47 1 71 1 94 2 165 1 97 1 100 2 166 1 195 3 269 3 18 1 247 3 108 1 198 1 78 1 58 1 252 1 
60 1 222 2 269 2 25 2 247 1 81 1 200 1 165 1 195 1 
222 3 223 1 71 1 2 1 94 1 165 2 97 1 353 1 43 1 195 3 269 3 25 3 18 1 247 3 179 1 357 1 337 1 198 1 140 1 
222 2 176 1 2 1 94 1 165 1 203 1 195 2 269 2 25 2 247 2 
222 1 187 1 326 1 240 1 241 1 81 1 175 1 166 1 85 1 25 1 205 1 180 1 78 1 122 1 252 1 
326 1 175 1 81 1 229 1 179 1 78 1 122 1 131 1 
348 4 176 2 117 1 333 1 203 2 136 1 306 2 230 1 64 1 232 1 263 1 89 1 162 1 341 1 244 2 49 1 100 2 217 1 197 1 76 1 104 1 108 1 251 2 276 1 
222 1 269 1 25 1 247 1 179 1 337 1 41 1 195 1 
60 1 222 5 81 1 200 1 193 1 329 1 2 1 94 1 165 2 353 1 195 4 269 5 25 5 247 4 
222 2 269 2 214 1 25 2 247 2 179 1 41 1 195 2 
63 1 157 1 
63 1 157 1 
31 1 19 1 
31 1 19 1 
31 1 19 1 
63 1 294 1 157 1 
63 1 294 1 157 1 
31 1 63 2 215 1 19 1 157 2 238 1 
63 1 267 1 157 1 
63 1 294 1 157 1 
63 1 119 1 157 1 
63 1 119 1 157 1 
63 1 119 1 157 1 
340 2 279 1 290 1 317 1 97 2 343 2 43 1 63 2 18 2 129 3 35 2 235 1 209 1 208 2 139 1 169 2 157 2 57 1 238 1 
222 2 149 1 81 1 202 1 63 1 25 2 231 1 208 1 157 1 237 1 141 1 267 1 290 1 97 1 316 1 343 1 127 1 195 2 269 2 18 1 247 2 129 1 35 1 169 1 
293 1 196 1 324 1 
293 1 346 1 324 1 
277 1 196 2 346 1 324 3 20 1 132 1 
277 1 278 1 196 1 346 1 324 2 132 1 
277 2 196 1 346 1 324 2 132 1 
59 2 347 1 113 1 133 1 225 1 254 1 255 1 61 1 228 1 43 1 65 4 232 1 121 1 68 1 233 1 234 1 262 1 237 1 30 1 266 1 164 2 94 1 97 5 342 1 50 1 195 1 18 5 104 1 272 1 219 1 79 1 
59 2 347 3 113 1 225 1 254 1 61 1 227 2 228 1 43 1 204 2 65 4 232 1 121 1 68 1 233 1 234 1 262 1 309 1 237 1 30 1 266 1 94 1 97 5 342 1 50 1 195 1 18 5 104 1 272 1 345 1 219 1 79 1 
59 2 299 1 113 1 225 1 133 1 254 1 255 1 61 1 228 2 43 2 136 1 65 2 232 1 121 1 233 1 68 3 262 1 234 3 237 1 30 1 162 1 32 1 164 1 94 1 97 3 50 1 195 1 18 3 104 1 219 1 79 2 
59 4 299 2 113 2 133 1 254 1 61 1 255 1 228 4 43 3 136 2 65 3 232 2 121 1 68 5 262 1 234 6 237 2 339 1 162 2 32 1 288 1 164 2 97 4 50 1 18 4 104 2 250 1 219 1 79 4 
292 1 180 1 297 1 
180 1 318 1 
274 1 
241 1 180 1 
205 1 241 1 180 3 152 1 297 2 21 1 
205 1 241 1 180 1 
180 1 366 1 
162 1 188 1 348 7 302 1 49 2 116 1 362 1 306 3 335 1 232 1 76 3 156 2 28 1 9 1 109 1 251 4 186 1 
162 1 188 1 348 7 302 1 49 2 116 1 362 1 306 3 335 1 232 1 76 3 156 2 28 1 9 1 109 1 251 4 186 1 
162 1 188 1 348 7 302 1 49 2 116 1 362 1 306 3 154 1 335 1 232 1 76 3 156 2 28 1 9 1 109 1 251 4 186 1 
221 1 348 6 302 1 116 2 117 1 306 3 230 1 156 1 9 1 28 1 89 1 265 1 159 1 186 1 188 1 49 1 15 1 100 2 17 1 76 2 145 1 108 1 251 3 172 1 
348 9 302 1 116 1 117 1 306 4 230 1 335 1 232 2 182 1 156 1 28 1 9 1 89 1 311 1 162 2 188 1 49 2 362 1 100 2 51 1 76 3 108 1 109 1 251 5 
326 1 224 1 256 1 82 2 280 1 135 2 118 1 86 1 260 1 355 1 6 1 122 1 210 1 312 1 160 1 240 1 13 1 48 1 126 1 98 1 166 1 293 1 196 1 346 1 170 1 78 1 324 2 296 1 56 1 20 1 
326 1 224 1 82 3 280 1 135 3 118 1 86 1 260 2 355 1 122 1 210 1 312 1 160 1 240 1 13 1 48 1 126 1 98 1 166 1 293 1 196 1 54 1 144 1 346 1 170 1 78 1 324 2 147 1 56 1 20 1 
326 1 82 2 280 1 135 2 118 1 86 1 260 2 355 1 122 1 210 1 312 1 240 1 48 1 126 1 166 1 196 1 293 1 144 1 346 1 170 1 78 1 324 2 147 1 56 1 20 1 
325 1 326 1 240 1 241 1 134 1 175 1 13 1 82 1 14 1 280 2 135 1 166 1 86 2 270 1 101 1 355 2 180 1 54 1 78 1 122 1 170 2 80 1 160 1 
326 1 224 1 82 1 280 1 135 1 86 1 355 1 6 1 122 1 312 1 160 1 240 1 13 1 48 1 126 1 98 1 166 1 293 1 196 1 346 1 170 1 78 1 324 2 147 1 296 1 20 1 
268 1 
222 1 223 1 325 1 0 1 326 2 134 1 175 2 331 1 177 2 42 1 138 1 180 1 179 1 337 1 241 1 240 1 289 1 97 3 99 1 50 1 53 1 18 3 55 1 59 2 347 2 60 1 199 1 61 1 23 1 352 1 25 1 307 1 121 1 68 2 357 1 122 2 313 1 266 1 360 1 71 1 166 1 269 1 364 1 272 1 78 2 219 1 
347 2 60 1 222 1 313 1 223 1 266 1 93 1 199 1 289 1 71 1 360 1 96 1 97 3 177 2 269 1 25 1 18 3 138 1 179 1 55 1 357 1 337 1 
347 1 222 1 60 1 223 1 199 1 177 3 43 1 25 1 45 1 138 1 179 1 262 1 337 1 357 1 313 1 266 1 289 1 360 1 71 1 97 3 96 1 269 1 18 3 55 1 
222 1 60 1 347 2 223 1 173 1 199 1 177 3 43 1 25 1 45 1 138 1 179 1 262 1 337 1 357 1 313 1 266 1 93 1 289 1 360 1 71 1 96 1 97 3 269 1 18 3 55 1 
222 1 223 1 173 2 225 1 331 2 177 2 43 1 138 1 233 1 179 1 337 1 93 2 289 1 94 1 97 3 96 1 50 1 99 1 195 1 18 3 55 1 347 3 60 1 59 1 199 1 303 1 61 1 23 2 115 1 25 1 307 1 121 1 68 1 207 1 262 1 357 1 211 1 30 1 313 1 266 1 163 1 71 1 360 1 269 1 272 1 
59 1 60 1 222 1 223 1 0 1 199 1 61 1 23 1 331 1 177 2 25 1 307 1 121 1 138 1 68 1 179 1 337 1 357 1 313 1 289 1 360 1 71 1 97 2 99 1 50 1 269 1 18 2 272 1 55 1 
59 1 222 1 60 1 223 1 225 1 199 1 303 1 61 1 23 2 331 2 115 1 177 2 43 1 307 1 25 1 138 1 121 1 233 1 207 1 68 1 179 1 262 1 337 1 357 1 30 1 313 1 289 1 360 1 71 1 94 1 97 2 99 1 50 1 195 1 269 1 18 2 272 1 55 1 
59 1 222 1 60 1 223 1 225 1 199 1 303 1 61 1 23 2 331 2 115 1 177 2 43 1 307 1 25 1 138 1 121 1 233 1 207 1 68 1 179 1 262 1 337 1 357 1 30 1 313 1 289 1 360 1 71 1 94 1 97 2 99 1 50 1 195 1 269 1 18 2 272 1 55 1 
59 1 222 1 60 1 223 1 225 1 199 1 61 1 23 2 331 2 177 2 354 1 43 1 25 1 138 1 121 1 233 1 207 1 68 1 179 1 262 1 337 1 357 1 30 1 313 1 289 1 360 1 71 1 94 1 97 2 99 1 50 1 195 1 269 1 18 2 272 1 55 1 39 1 148 1 
222 1 223 1 173 1 225 1 331 2 177 3 43 1 45 1 138 1 233 1 179 1 337 1 93 1 289 1 94 1 97 2 50 1 99 1 195 1 18 2 55 1 347 1 60 1 59 1 199 1 303 1 61 1 23 2 115 1 25 1 307 1 121 1 68 1 207 1 262 1 357 1 30 1 313 1 163 1 71 1 360 1 269 1 272 1 
222 1 223 1 173 1 225 1 331 2 177 3 43 1 45 1 138 1 233 1 179 1 337 1 93 1 289 1 94 1 97 2 50 1 99 1 195 1 18 2 55 1 347 1 60 1 59 1 199 1 303 1 61 1 23 2 115 1 25 1 307 1 121 1 68 1 207 1 262 1 357 1 30 1 313 1 163 1 71 1 360 1 269 1 272 1 
59 1 60 1 222 1 223 1 0 1 199 1 61 1 23 1 331 1 177 2 25 1 121 1 138 1 68 1 179 1 337 1 357 1 313 1 289 1 360 1 71 1 97 2 99 1 50 1 269 1 18 2 272 1 55 1 148 1 
348 6 302 1 81 2 176 1 117 1 203 1 333 1 306 3 230 1 64 1 335 1 232 1 156 1 89 1 162 1 188 1 341 1 244 1 49 2 362 1 100 2 292 1 76 2 109 1 108 1 251 3 
348 12 113 2 81 1 176 6 1 1 117 2 332 1 333 2 203 2 306 5 136 1 230 2 64 1 26 1 232 2 179 1 89 2 123 1 162 1 192 1 244 6 49 1 15 2 100 4 363 1 17 2 76 1 104 2 249 1 131 1 108 2 251 7 58 1 
222 2 348 2 326 1 81 1 175 1 1 1 353 1 117 1 85 1 203 1 333 1 44 1 306 1 205 1 25 2 230 1 64 1 261 1 336 1 180 1 10 1 122 1 89 1 187 1 241 1 240 1 192 1 165 1 166 1 100 2 195 1 269 1 247 1 78 1 108 1 251 1 58 1 252 1 
222 3 326 3 81 2 175 1 176 7 1 1 178 1 333 3 85 2 136 2 230 3 335 1 87 1 232 3 180 2 89 3 46 2 188 1 187 2 240 2 241 2 192 1 244 7 49 4 100 6 195 1 247 1 104 2 109 1 108 3 147 1 251 10 58 1 252 2 348 20 113 2 302 1 353 1 117 3 203 7 306 10 25 3 205 2 64 3 156 1 28 4 122 3 162 3 361 2 165 1 362 1 166 2 128 1 269 1 73 2 76 8 323 2 78 3 37 2 
222 1 348 2 325 1 326 8 175 2 134 1 1 1 256 1 117 2 333 2 306 1 25 1 230 2 64 2 180 3 122 8 89 2 90 1 91 1 189 2 92 1 240 2 241 2 124 1 341 1 165 1 166 2 100 4 195 1 269 1 247 1 248 1 146 1 275 1 78 7 108 2 147 1 251 1 58 1 
222 1 348 3 113 1 176 1 2 1 117 1 203 1 333 1 136 1 306 2 25 1 230 1 64 1 232 1 89 1 212 1 162 1 192 1 244 1 94 1 49 1 100 2 195 1 269 1 247 1 76 1 104 1 108 1 251 1 
348 2 176 1 341 1 244 1 100 2 117 1 203 1 333 1 64 1 230 1 232 1 76 1 104 1 263 1 28 1 89 1 108 1 251 2 
162 1 348 2 176 1 341 1 244 1 49 1 100 2 117 1 203 1 333 1 136 1 306 2 64 1 230 1 217 1 76 1 89 1 108 1 
162 1 348 4 113 1 176 2 341 1 244 2 49 1 100 2 117 1 203 2 333 1 306 2 136 1 64 1 230 1 232 1 76 2 104 1 28 1 89 1 108 1 251 2 
348 2 176 1 244 1 100 2 117 1 203 1 333 1 64 1 230 1 232 1 248 1 76 1 104 1 263 1 28 1 89 1 108 1 251 2 
162 1 348 2 176 1 244 1 49 1 100 2 117 1 203 1 333 1 136 1 306 2 64 1 230 1 248 1 217 1 76 1 89 1 108 1 
162 1 348 4 113 1 176 2 244 2 49 1 100 2 117 1 203 2 333 1 306 2 136 1 64 1 230 1 232 1 248 1 76 2 104 1 28 1 89 1 108 1 251 2 
162 1 348 4 113 1 176 2 244 2 49 1 100 2 117 1 203 2 333 1 306 2 136 1 64 1 230 1 232 1 76 2 104 1 28 1 89 1 108 1 251 2 
222 1 348 2 326 1 81 1 175 1 1 1 117 1 85 1 333 1 306 1 205 1 25 1 64 1 230 1 180 1 46 1 122 1 89 1 187 1 241 1 240 1 166 1 100 2 78 1 108 1 251 1 58 1 252 1 
348 1 326 1 81 1 175 1 242 1 100 2 117 1 229 1 333 1 306 1 64 1 230 1 179 1 131 1 108 1 78 1 122 1 89 1 58 1 
348 4 113 1 176 2 117 1 333 1 203 2 136 1 306 2 230 1 64 1 232 1 28 1 89 1 162 1 192 1 244 2 49 1 100 2 104 1 76 2 108 1 251 2 
222 1 348 4 326 1 113 1 176 2 256 1 117 1 203 2 85 1 333 1 306 2 136 1 205 1 25 1 64 1 230 1 232 1 180 1 28 1 46 1 122 1 89 1 162 1 187 1 240 1 241 1 244 2 49 1 166 1 100 2 76 2 104 1 323 1 78 1 108 1 251 2 252 1 
222 1 348 3 113 1 176 1 2 1 117 1 3 1 333 1 203 1 306 1 136 1 25 1 230 1 64 1 232 1 28 1 89 1 162 1 192 1 244 1 94 1 100 2 195 1 269 1 247 1 76 1 104 1 108 1 251 2 
221 2 348 25 113 3 301 1 350 1 150 4 117 2 332 1 306 13 136 3 308 1 230 2 232 3 182 1 183 1 28 2 184 1 89 2 162 3 190 1 49 3 15 3 100 4 320 2 17 2 271 1 130 1 76 5 104 3 168 1 108 2 251 12 
221 2 348 26 113 3 301 1 350 2 150 4 117 3 306 12 136 2 230 3 232 3 182 1 183 1 28 2 184 1 89 3 265 2 11 1 162 2 213 1 190 1 315 1 49 2 100 6 15 2 320 1 17 2 271 2 130 1 76 4 104 3 108 3 251 14 111 1 
221 3 348 41 113 4 301 1 302 1 350 1 150 4 117 3 332 1 306 21 136 4 308 1 230 3 335 1 232 5 156 1 182 1 183 1 28 3 184 1 89 3 310 1 265 1 11 1 162 5 188 1 213 1 190 1 315 1 49 4 362 1 15 4 100 6 320 1 17 3 271 2 130 1 76 7 104 4 109 1 108 3 251 20 111 1 
221 3 348 38 113 4 301 1 302 1 350 1 150 4 117 4 332 1 306 18 136 3 308 1 230 4 335 1 232 5 156 1 182 1 183 1 28 2 184 1 89 4 310 1 265 2 11 1 162 4 188 1 213 1 190 1 315 1 49 4 362 1 15 4 100 8 320 1 17 3 271 2 130 1 76 6 104 4 109 1 108 4 251 20 111 1 
221 2 348 53 113 5 301 1 302 3 350 1 150 4 117 3 332 1 306 25 136 5 230 3 335 3 232 8 156 3 182 1 183 1 184 1 28 5 89 3 265 2 11 1 162 8 188 3 213 1 190 1 315 1 49 8 362 3 15 3 100 6 320 1 363 1 17 3 271 1 130 1 104 5 76 13 109 3 108 3 251 28 111 1 
222 2 348 2 326 2 351 1 1 1 40 1 117 1 333 1 306 1 25 2 230 1 64 1 180 1 122 2 89 1 90 1 189 2 240 1 241 1 314 1 192 1 166 1 100 2 269 2 216 1 75 1 275 1 108 1 78 2 251 1 58 1 
22 1 326 2 224 1 240 1 243 1 48 1 256 1 166 1 86 1 293 1 196 1 346 1 324 2 78 2 122 2 147 1 358 1 312 1 20 1 
326 1 224 1 240 1 243 1 48 1 114 1 166 1 86 1 293 1 196 1 346 1 324 2 78 1 122 1 147 1 312 1 20 1 
22 1 325 1 326 1 240 1 241 1 175 1 134 1 166 1 319 1 86 1 101 1 180 1 78 1 122 1 
22 1 326 1 224 1 240 1 243 1 48 1 166 1 86 1 293 1 196 1 346 1 324 2 78 1 122 1 147 1 358 1 312 1 20 1 
62 1 
59 1 292 1 68 1 262 1 286 1 43 1 344 1 
299 1 59 1 347 1 61 1 43 2 307 1 121 1 68 1 234 1 262 1 266 1 97 1 50 1 18 1 272 1 106 1 365 1 
326 3 175 1 328 1 226 2 228 6 43 8 136 2 232 2 180 10 234 12 185 1 286 1 240 3 241 3 191 1 97 5 50 4 344 1 16 2 53 1 18 5 103 2 104 2 107 2 295 2 297 2 21 1 347 5 299 6 59 8 113 2 256 1 61 4 201 2 257 2 153 1 305 1 205 3 121 4 68 9 262 2 264 2 357 2 122 3 162 2 266 3 318 3 166 4 73 2 272 4 78 3 219 2 366 2 79 6 
59 1 299 1 221 1 190 1 61 1 228 1 50 1 15 1 43 1 17 1 121 1 272 1 68 1 234 2 79 1 
30 1 162 1 59 1 188 1 225 1 302 1 303 1 61 1 94 1 97 1 257 2 50 1 51 1 195 1 18 1 335 1 232 1 121 1 233 1 68 2 272 1 
59 1 121 1 68 1 272 1 262 1 61 1 50 1 286 1 43 1 344 1 
59 5 299 5 162 2 113 2 257 2 228 5 43 5 136 2 73 1 232 2 104 2 68 5 234 10 295 1 79 5 
347 1 18 1 266 1 262 1 97 1 43 1 
347 4 59 2 325 1 326 4 175 2 134 1 328 2 61 2 352 1 42 1 305 1 5 1 121 2 180 1 68 2 122 4 32 1 266 2 240 1 241 1 97 3 166 1 50 2 143 1 53 2 18 3 272 1 78 4 219 2 
222 3 348 1 326 1 81 1 175 1 117 1 85 1 333 1 306 1 25 3 205 1 64 1 230 1 233 1 180 1 89 1 122 1 46 1 187 1 240 1 241 1 47 1 94 2 100 2 166 1 195 2 269 2 247 2 108 1 78 1 58 1 252 1 
299 2 59 2 61 1 228 2 50 1 43 4 53 1 121 1 272 1 68 1 156 1 234 4 262 2 79 2 219 1 
206 1 35 1 208 1 
206 1 35 1 208 1 
149 1 174 1 35 1 208 1 317 1 
206 1 35 1 208 1 
35 1 208 1 304 1 
35 1 208 1 304 1 
35 1 208 1 304 1 
35 1 208 1 
63 1 157 1 
162 1 188 1 348 8 302 1 49 2 362 1 100 4 117 2 306 4 230 2 335 1 232 1 76 3 156 1 28 1 89 2 108 2 109 1 251 4 265 1 
162 1 188 1 348 6 302 1 49 2 362 1 306 3 292 1 335 1 232 1 76 2 156 1 109 1 251 3 
162 1 348 4 113 1 49 1 100 2 117 1 306 2 136 1 230 1 232 1 76 2 104 1 28 1 89 1 108 1 251 2 220 1 
17 1 306 1 221 1 348 2 251 1 15 1 
348 26 113 2 302 2 117 1 332 1 136 2 306 13 230 1 335 2 26 1 232 5 156 1 28 2 89 1 265 1 162 5 188 2 49 5 362 1 15 2 100 2 51 1 17 2 363 1 104 2 76 7 109 1 108 1 251 13 
306 1 348 1 15 1 
17 1 348 1 251 1 
162 1 348 6 113 1 49 2 117 1 100 2 306 3 136 1 73 1 230 1 232 1 104 1 76 3 28 1 108 1 89 1 251 3 220 1 
221 1 348 13 113 2 117 2 306 7 136 2 230 2 232 2 182 1 28 1 89 2 265 1 11 1 162 2 213 1 190 1 49 2 315 1 15 1 100 4 17 1 104 2 76 3 108 2 251 6 111 1 
162 1 188 1 348 6 302 1 49 1 306 3 335 1 232 1 76 2 28 1 251 3 
188 1 348 3 302 1 49 1 362 1 100 2 117 1 306 2 230 1 76 2 28 1 109 1 89 1 108 1 251 1 265 1 159 1 
162 2 188 2 348 10 302 2 49 3 117 1 100 2 51 1 306 5 230 1 335 1 232 2 76 5 182 1 28 2 108 1 89 1 251 5 
348 2 100 2 117 1 230 1 232 1 104 1 76 1 182 1 28 1 89 1 108 1 251 2 
162 1 348 4 113 1 49 1 100 2 117 1 306 2 136 1 230 1 232 1 76 2 104 1 182 1 28 1 89 1 108 1 251 2 
188 1 348 3 302 1 49 1 100 6 117 3 306 2 308 1 230 3 76 2 182 1 28 1 89 3 108 3 265 1 251 1 159 1 
221 1 348 15 302 2 117 4 306 8 308 1 230 4 335 1 232 2 182 1 28 3 89 4 265 1 159 1 162 2 188 2 49 3 362 1 15 1 100 8 51 1 17 1 76 6 145 1 108 4 109 1 251 7 220 1 
221 1 348 12 113 2 117 3 306 5 136 1 230 3 232 2 182 1 28 1 89 3 265 2 11 1 162 1 213 1 190 1 49 2 315 1 15 1 100 6 17 1 104 2 76 3 108 3 251 7 111 1 
221 1 348 12 113 2 117 4 306 5 136 1 230 4 232 2 182 1 28 1 89 4 265 2 11 1 162 1 213 1 190 1 315 1 49 2 15 1 100 8 17 1 104 2 76 3 108 4 251 7 220 1 111 1 
221 1 348 19 113 2 302 1 117 3 306 10 136 2 230 3 335 1 232 3 156 1 182 1 28 1 89 3 265 1 11 1 162 3 188 1 213 1 190 1 49 3 315 1 362 1 15 1 100 6 17 1 104 2 76 4 109 1 108 3 251 9 220 1 111 1 
221 1 348 12 113 2 117 4 306 5 136 1 230 4 232 2 182 1 28 1 89 4 265 2 11 1 162 1 213 1 190 1 49 2 315 1 15 1 100 8 17 1 104 2 76 3 108 4 251 7 220 1 111 1 
221 1 348 12 113 2 117 3 306 5 136 1 230 3 232 2 182 1 28 1 89 3 265 2 11 1 162 1 213 1 190 1 49 2 315 1 15 1 100 6 17 1 104 2 76 3 108 3 251 7 111 1 
221 1 348 13 113 2 117 2 306 7 136 2 230 2 232 2 182 1 28 1 89 2 265 1 11 1 162 2 213 1 190 1 49 2 315 1 15 1 100 4 17 1 104 2 76 3 108 2 251 6 111 1 
221 1 348 18 113 2 302 1 117 4 306 8 136 1 230 4 335 1 232 3 156 1 182 1 28 2 89 4 265 2 11 1 162 2 188 1 213 1 190 1 315 1 49 3 362 1 15 1 100 8 17 1 104 2 76 5 109 1 108 4 251 10 220 1 111 1 
221 1 348 16 113 3 117 4 306 7 136 2 230 4 308 1 232 3 182 1 28 3 89 4 265 2 11 1 162 2 213 1 190 1 315 1 49 3 15 1 100 8 17 1 104 3 76 6 108 4 251 9 111 1 
162 1 188 3 348 7 302 3 49 3 362 1 306 4 335 1 232 1 76 6 28 3 109 2 251 3 
221 1 348 18 113 2 302 1 117 4 306 8 136 1 230 4 308 1 335 1 232 3 156 1 182 1 28 1 89 4 265 2 11 1 162 2 188 1 213 1 190 1 315 1 49 3 362 1 15 1 100 8 17 1 104 2 76 4 109 1 108 4 251 10 111 1 
222 1 269 1 60 1 25 1 81 1 67 1 200 1 
60 1 222 1 81 1 200 1 245 1 269 1 25 1 4 1 66 1 67 1 284 1 158 1 
325 1 292 1 326 1 240 1 241 1 134 1 175 1 180 1 122 1 78 1 166 1 
222 2 326 1 241 1 240 1 81 1 175 1 165 1 166 1 85 1 195 1 269 1 205 1 25 2 247 1 180 1 78 1 122 1 252 1 
222 2 326 1 241 2 240 1 81 1 71 1 328 1 165 1 166 1 16 1 85 1 195 1 269 2 205 2 25 2 247 2 179 1 180 3 337 1 78 1 122 1 366 1 252 1 
222 2 287 1 326 2 241 2 240 1 81 1 71 1 328 1 165 1 166 1 72 1 16 1 85 1 195 1 269 2 205 2 25 2 247 2 179 1 180 3 337 1 78 2 122 2 366 1 
347 1 326 3 241 1 240 1 175 1 328 1 125 1 97 2 166 1 318 1 72 1 43 1 16 1 205 1 18 2 180 4 262 1 357 1 88 1 78 3 122 3 366 1 297 1 
347 1 326 3 241 1 240 1 175 1 328 1 97 2 166 1 318 1 72 1 43 1 16 1 205 1 18 2 180 4 262 1 357 1 264 1 78 3 122 3 366 1 297 1 
326 1 240 1 124 1 122 1 78 1 166 1 
326 7 175 2 256 1 258 1 205 1 180 3 122 7 90 1 12 1 91 1 189 1 92 1 240 2 241 2 124 1 166 3 142 1 146 1 78 6 147 1 21 1 
222 2 326 1 81 2 176 1 40 1 333 2 85 1 230 2 335 1 232 1 180 1 46 1 89 2 187 1 188 1 240 1 241 1 192 1 244 1 49 2 100 4 195 1 247 1 108 2 109 1 251 3 252 1 348 6 302 1 256 1 117 2 203 1 306 3 25 2 205 1 64 2 156 1 122 1 162 1 165 1 362 1 166 1 269 1 76 2 323 1 37 1 78 1 
59 1 347 2 326 1 175 1 61 2 201 1 226 1 43 1 305 1 65 1 121 2 68 1 180 2 262 1 264 1 357 1 122 1 286 1 266 1 97 3 50 2 318 1 344 1 18 3 272 2 78 1 107 1 297 1 
326 2 241 1 240 1 124 1 256 1 166 2 153 1 205 1 180 2 78 2 122 2 297 1 21 1 
325 1 326 4 240 1 241 1 134 1 175 1 180 1 256 1 77 1 122 4 78 4 166 1 72 1 
12 1 326 2 241 1 240 1 328 1 151 1 258 1 166 2 128 1 205 1 356 1 180 1 78 2 122 2 
293 1 326 1 240 1 175 1 346 1 324 1 122 1 78 1 166 1 312 1 
216 1 326 2 240 1 241 1 180 1 256 1 122 2 78 2 147 1 166 1 90 1 
91 1 325 1 92 1 326 5 241 2 240 2 134 1 175 1 328 1 256 1 166 2 180 3 77 1 78 4 122 5 90 1 
91 1 325 1 326 5 241 2 240 2 134 1 175 1 328 1 256 1 166 2 155 1 180 3 77 1 78 4 122 5 90 1 
222 2 287 1 326 1 241 1 240 1 81 1 175 1 165 1 166 1 85 1 195 1 269 1 205 1 25 2 247 1 180 1 78 1 122 1 
12 1 326 1 241 1 240 1 328 1 258 1 166 2 142 1 205 1 180 1 78 1 122 1 21 1 
222 1 269 1 25 1 314 1 351 1 75 1 105 1 34 1 52 1 
322 1 33 1 105 1 
161 1 81 1 105 1 34 1 52 1 
161 2 223 1 81 1 71 1 33 1 34 2 97 2 43 1 52 2 65 1 18 2 322 1 179 1 262 1 105 1 357 1 337 1 69 1 198 1 
292 1 118 1 210 1 56 1 
13 1 82 1 135 1 118 1 210 1 56 1 160 1 
355 1 280 1 135 1 
13 1 194 1 82 1 135 1 167 1 6 1 285 1 56 1 210 1 160 1 
260 1 253 1 13 1 82 2 135 2 118 1 210 1 56 1 160 1 
300 1 293 1 196 1 218 1 13 1 6 1 82 1 324 1 135 1 118 1 160 1 
13 1 6 1 82 1 135 1 118 1 210 1 160 1 
13 1 6 1 82 1 135 1 210 2 56 1 160 1 
13 2 82 2 135 2 118 1 246 1 259 1 334 1 6 1 210 1 160 2 
300 1 13 1 82 3 135 3 118 2 137 1 260 2 6 1 7 1 338 1 210 1 56 1 160 1 
13 1 82 2 135 2 118 1 260 1 196 1 293 1 273 1 6 1 346 1 324 2 210 1 56 1 20 1 160 1 
300 1 253 1 13 2 330 1 82 4 135 4 118 2 137 1 260 2 6 1 210 1 56 1 160 2 
13 1 6 1 82 1 135 1 118 1 210 1 56 1 160 1 
300 1 13 1 194 2 82 3 135 3 118 2 137 1 260 2 167 1 285 1 210 2 56 2 160 1 
13 1 82 2 135 2 118 1 321 1 260 1 120 1 6 1 283 1 210 1 56 1 160 1 
13 1 194 1 82 1 135 1 6 1 8 1 285 1 56 1 210 1 160 1 
327 1 38 2 236 1 118 2 
13 1 6 1 82 1 135 1 282 1 160 1 
260 1 13 1 6 1 7 1 82 2 135 2 118 1 210 1 56 1 160 1 
181 1 
13 1 6 1 82 1 135 1 118 1 210 1 56 1 160 1 
260 1 13 1 6 1 7 1 82 3 135 3 118 1 210 1 56 1 291 1 160 1 
137 1 300 1 194 1 118 1 
118 1 210 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (56,149) (56,149) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (56,149) (56,149) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (56,149) (56,149) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (56,149) (56,149) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 111 224 140 266 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 111 224 140 (88,218) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 111 224 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 111 224 140 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 111 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 116 84 193 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 116 84 193 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 116 84 193 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 116 84 193 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 116 84 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 111 204 44 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 50 179 128 232 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 67 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 111 224 140 266 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 111 17 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 111 17 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 111 17 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 111 17 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 111 224 140 (88,218) (88,218) 67 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 111 17 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 291 1 267 2 223 1 277 1 217 2 79 3 305 3 163 1 23 1 122 1 47 1 62 2 
16 1 149 1 79 1 161 1 305 1 267 1 163 1 122 1 171 1 62 1 56 1 
16 1 149 1 79 1 161 1 305 1 267 1 163 1 122 1 171 1 62 1 56 1 
16 1 149 1 79 1 161 1 305 1 267 1 163 1 122 1 171 1 62 1 56 1 
16 1 149 1 79 1 161 1 305 1 267 1 163 1 122 1 171 1 62 1 56 1 
64 2 126 1 291 1 267 1 223 1 250 1 107 1 217 3 79 4 305 4 43 1 163 1 120 1 23 1 46 2 47 3 62 1 189 1 
1 1 69 1 267 1 169 1 223 1 250 1 217 1 79 2 118 1 305 2 161 1 163 1 23 1 122 1 62 1 189 1 
126 1 267 2 223 1 13 1 277 1 163 1 23 1 62 2 64 4 246 1 291 3 105 1 250 1 107 1 109 1 217 5 79 9 305 9 43 1 120 1 122 1 47 7 46 2 189 1 
126 1 267 2 223 1 13 1 277 1 163 1 23 1 62 2 64 4 246 1 291 3 105 1 250 1 107 1 109 1 217 5 79 9 305 9 43 1 120 1 122 1 47 7 46 2 189 1 
145 1 102 1 88 1 218 1 140 1 224 1 298 1 111 1 
306 1 
145 1 175 1 102 2 244 1 155 1 306 1 34 1 298 2 
145 2 241 2 206 1 102 5 27 1 244 1 167 2 293 1 294 1 34 1 298 5 275 1 37 1 175 2 59 2 234 1 306 1 141 1 183 1 
266 1 140 1 224 1 111 1 
88 1 140 1 224 1 111 1 
24 1 0 1 102 1 30 1 249 1 34 1 298 1 174 1 132 1 94 1 159 1 138 1 235 1 306 1 
224 1 111 1 
145 1 175 1 102 1 22 1 298 1 
145 1 175 1 102 2 244 1 306 1 34 1 212 1 298 2 
175 1 102 1 298 1 
231 1 306 1 83 2 
140 1 224 1 111 1 
306 1 34 1 237 1 
158 1 71 1 32 1 
153 1 242 1 158 2 71 2 195 1 219 1 
158 1 71 1 
158 1 71 1 
153 1 195 1 
153 1 195 1 
153 1 195 1 
158 1 71 1 143 1 
158 1 71 1 143 1 
158 1 71 1 143 1 
158 1 135 1 71 1 
158 1 135 1 71 1 
158 1 135 1 71 1 
87 1 100 1 57 1 173 1 158 1 102 1 71 1 283 1 33 1 298 1 111 1 
100 2 87 3 102 2 264 1 2 1 71 2 33 1 148 1 298 2 257 1 302 1 57 2 173 2 158 2 282 1 283 2 19 2 219 1 306 1 
43 1 250 1 189 1 
69 1 250 1 189 1 
262 1 99 1 69 1 43 2 188 1 189 3 
99 1 262 2 69 1 43 1 189 2 
262 1 99 1 69 1 43 1 220 1 189 2 
124 2 127 1 89 1 4 2 54 2 11 1 55 1 12 1 275 1 59 1 231 1 233 1 234 3 21 1 145 4 144 1 241 1 166 1 102 5 27 2 167 1 244 1 29 1 34 1 298 5 112 1 40 1 175 1 258 1 82 1 306 2 83 3 
124 2 127 2 88 1 89 1 4 2 10 1 11 1 55 1 224 1 275 1 59 1 231 1 234 3 22 3 140 1 144 1 145 5 241 1 205 1 166 1 102 6 27 2 167 1 244 1 168 3 34 1 298 6 111 1 112 1 40 1 175 4 216 1 218 1 306 3 82 1 83 3 
124 2 127 1 89 1 4 2 54 1 11 1 55 1 59 1 231 2 234 3 21 1 141 1 145 2 144 1 241 1 102 3 166 1 167 1 27 2 34 1 298 3 112 1 40 1 258 1 306 3 83 4 
124 4 127 2 129 1 89 2 4 4 54 2 11 2 55 2 59 1 231 3 234 5 21 1 141 1 144 1 145 3 241 1 102 4 166 2 167 1 27 4 34 1 213 1 298 4 112 2 40 1 178 1 258 1 306 4 83 7 
92 1 268 1 165 1 
86 1 103 1 
103 1 236 1 237 1 
103 1 192 1 261 1 
103 1 61 1 
103 1 261 1 
25 1 103 3 192 1 236 2 261 1 72 1 
65 1 125 1 243 2 3 3 194 1 272 1 55 1 197 3 299 7 112 1 301 2 228 1 15 1 58 1 304 1 18 4 81 1 164 1 
154 1 125 1 3 3 194 1 7 1 197 2 228 1 58 1 18 3 164 2 98 1 101 1 243 1 299 6 110 1 75 1 38 2 301 1 304 1 77 1 119 1 123 1 48 1 187 1 
154 1 125 1 3 4 194 1 7 1 55 2 197 3 226 1 228 1 15 1 18 5 164 1 65 1 208 1 243 1 67 1 110 1 299 9 112 2 38 2 301 2 304 1 81 1 123 1 
65 1 125 1 243 2 3 3 194 1 55 1 197 3 299 7 112 1 301 2 228 1 15 1 58 1 304 1 18 4 81 1 164 1 
65 1 125 1 243 2 3 3 194 1 55 1 197 3 299 7 112 1 301 2 228 1 15 1 58 1 304 1 18 4 81 1 164 1 
286 1 190 1 50 2 103 1 245 1 247 2 267 1 31 1 130 2 172 1 295 1 39 1 199 1 179 2 78 2 79 1 42 1 117 1 305 1 122 2 184 1 62 1 261 1 239 2 
50 1 267 1 130 1 276 1 163 1 62 1 239 1 63 1 142 1 285 1 69 1 247 1 209 1 250 1 295 1 179 1 215 1 78 1 79 1 43 1 305 1 122 1 184 1 260 1 188 1 189 2 
50 1 267 1 223 1 130 1 276 1 163 1 23 1 62 1 239 1 142 1 285 1 69 1 247 1 209 1 250 1 295 1 113 1 217 1 179 1 215 1 78 1 79 2 43 1 305 2 47 1 122 1 184 1 260 1 188 1 189 2 
50 1 267 1 223 1 130 1 276 1 199 1 23 1 62 1 239 1 63 1 142 1 285 1 69 1 247 1 209 1 250 1 295 1 217 1 179 1 78 1 79 3 43 1 305 3 121 1 122 1 47 2 184 1 260 1 188 1 189 2 
50 1 223 1 130 1 276 1 23 1 239 1 63 1 142 1 69 1 247 1 250 1 295 1 217 1 179 1 78 1 79 2 305 2 43 1 121 1 122 1 47 2 184 1 260 1 188 1 189 2 
95 1 
50 2 275 1 59 1 160 1 234 1 162 1 239 2 144 1 240 1 241 1 286 1 288 1 103 1 102 2 167 1 27 1 244 1 245 2 295 1 298 2 255 1 175 2 179 2 117 1 184 1 261 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
288 1 175 1 102 2 244 1 155 1 162 1 298 2 
241 1 288 1 102 1 59 1 167 1 162 1 298 1 275 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
288 1 102 1 162 1 298 1 
241 1 288 1 102 1 59 1 167 1 162 1 298 1 275 1 
154 2 193 1 3 10 89 2 7 2 270 1 197 2 55 2 11 2 226 1 14 1 228 1 281 1 60 1 18 9 101 1 166 2 248 2 296 1 110 2 299 19 112 2 300 1 301 1 75 2 38 4 116 1 119 2 123 2 187 2 84 1 152 1 
154 2 193 1 3 10 89 2 7 2 270 1 197 2 55 2 11 2 226 1 14 1 228 1 281 1 60 1 18 9 101 1 166 2 248 2 296 1 110 2 299 19 112 2 300 1 301 1 75 2 38 4 116 1 119 2 123 2 187 2 84 1 152 1 
154 2 193 1 3 10 89 2 7 2 270 1 197 2 55 2 11 2 226 1 14 1 228 1 281 1 60 1 18 9 101 1 166 2 248 2 296 1 110 2 299 19 112 2 300 1 301 1 75 2 38 4 116 1 119 2 123 2 187 2 84 1 152 1 
154 2 193 1 3 10 89 2 7 2 270 1 197 2 55 2 11 2 226 1 14 1 228 1 281 1 60 1 18 9 101 1 166 2 248 2 296 1 110 2 299 19 112 2 300 1 301 1 75 2 38 4 116 1 119 2 123 2 187 2 84 1 152 1 
154 3 193 1 3 8 89 2 7 3 270 1 197 2 55 2 11 1 226 1 14 1 228 1 281 1 60 2 18 10 101 2 166 2 248 2 296 1 110 3 299 18 112 1 300 1 301 1 38 6 75 2 116 1 119 2 123 3 84 2 187 2 152 1 
257 1 100 1 57 1 173 1 158 1 71 1 283 1 219 1 148 1 156 1 
32 1 36 1 
100 1 57 1 173 1 200 1 158 1 71 1 283 1 106 1 8 1 
93 1 143 1 
131 1 242 1 135 1 
100 1 87 2 102 1 264 1 71 1 33 1 148 1 298 1 257 1 302 1 57 1 173 1 158 1 282 1 283 1 19 1 219 1 306 1 
100 1 87 2 102 1 264 1 71 1 33 1 148 1 298 1 257 1 302 1 57 1 173 1 158 1 282 1 283 1 19 1 219 1 306 1 
100 1 87 2 102 1 264 1 71 1 33 1 148 1 298 1 257 1 302 1 57 1 173 1 158 1 282 1 283 1 19 1 219 1 306 1 
242 1 93 1 143 1 
242 1 93 1 143 1 
131 1 135 1 
131 1 242 1 135 1 
227 1 45 1 
145 1 87 1 100 1 102 1 264 1 127 1 71 1 32 1 36 1 12 1 298 1 111 1 227 1 57 1 173 1 158 1 233 1 283 1 44 1 45 1 19 1 204 1 
50 2 154 1 3 1 52 1 7 1 9 1 230 1 94 2 134 1 137 1 18 1 239 2 97 1 24 2 287 1 103 1 292 1 249 2 211 1 251 1 295 1 110 1 299 2 76 1 38 2 39 2 150 1 179 2 184 1 123 1 261 1 
50 1 286 1 103 1 245 1 130 1 172 1 295 1 157 1 179 1 117 1 182 1 184 1 261 1 239 1 
50 1 69 1 70 1 209 1 250 1 130 1 295 1 157 1 179 1 43 1 184 1 185 1 260 1 188 1 63 1 239 1 142 1 189 2 
50 2 69 1 70 1 209 1 250 1 130 1 295 1 157 1 113 1 179 2 43 1 184 1 185 1 260 1 188 1 63 1 239 2 142 1 189 2 
50 1 289 1 69 1 70 1 209 1 250 1 130 1 295 1 179 1 43 1 184 1 260 1 188 1 63 1 239 1 142 1 189 2 
26 1 
241 1 206 1 167 1 27 1 294 1 34 1 275 1 59 1 234 1 306 1 
124 5 166 2 27 5 89 2 4 5 55 2 11 2 74 2 112 2 231 5 180 1 234 5 96 1 306 5 83 10 
102 1 175 1 244 1 306 1 34 1 298 1 
50 4 128 2 275 1 59 2 232 1 160 1 234 2 141 1 239 4 144 2 240 1 241 2 286 1 103 1 102 3 167 2 27 2 244 2 245 2 295 1 255 2 298 3 256 1 114 1 175 4 179 4 117 1 184 1 261 1 
191 1 275 1 279 1 59 1 231 1 234 1 241 1 102 1 27 1 167 1 244 1 34 1 298 1 175 1 306 2 83 1 49 1 
86 2 51 1 50 1 124 3 192 1 265 1 89 1 4 3 5 1 11 1 55 1 275 2 59 2 231 3 234 4 235 1 139 1 239 1 144 1 241 2 166 1 102 2 103 3 27 3 28 1 244 1 167 2 245 1 295 2 298 2 72 1 74 1 112 1 175 2 179 1 41 1 180 1 306 3 221 1 184 1 83 6 261 1 
124 5 89 2 4 5 270 1 55 2 11 2 275 2 14 1 281 1 59 2 231 3 234 8 96 1 144 1 241 2 102 1 166 2 244 1 167 2 27 5 34 2 255 1 297 1 298 1 296 1 74 2 112 2 75 1 175 1 119 1 259 1 306 5 83 6 187 1 152 1 
241 1 65 1 102 1 125 1 27 1 167 1 67 1 88 1 194 1 224 1 55 1 298 1 111 1 275 1 112 1 74 2 214 1 59 1 218 1 234 2 140 1 
206 1 27 1 234 1 294 1 306 1 34 1 237 1 
266 1 140 1 224 1 111 1 
144 1 241 1 124 2 243 1 27 2 167 1 4 2 34 2 255 1 275 1 59 1 231 2 234 1 306 4 83 4 
227 1 100 1 283 1 271 1 148 1 
100 1 283 1 6 1 
100 1 283 1 6 1 
100 1 283 1 6 1 
100 1 283 1 210 1 
100 1 283 1 210 1 
100 1 283 1 210 1 
100 1 283 1 
158 1 71 1 
125 2 154 2 3 10 194 2 89 2 7 2 270 1 55 5 11 1 197 9 226 1 14 1 15 1 228 4 281 1 18 14 101 1 65 2 166 2 67 1 243 1 296 1 299 24 110 2 112 4 75 1 38 4 301 5 119 1 81 1 123 2 187 1 152 1 
125 1 154 3 3 7 194 1 89 2 7 3 270 1 55 3 11 1 197 4 226 1 14 1 15 1 228 1 281 1 18 10 101 1 65 1 166 2 243 1 296 1 254 1 299 17 110 3 112 2 75 1 38 6 301 3 119 1 81 1 123 3 187 1 152 1 
125 1 154 3 3 10 194 1 89 2 7 3 270 1 55 3 11 2 197 4 226 1 14 1 15 1 228 1 281 1 18 9 101 1 65 1 166 2 243 1 254 1 296 1 299 19 110 3 112 3 75 1 38 6 301 3 119 1 81 1 123 3 187 1 152 1 
125 1 154 3 3 7 194 1 89 2 7 3 270 1 55 3 11 1 197 5 226 1 14 1 15 1 228 2 281 1 18 10 101 1 65 1 166 2 243 1 254 1 296 1 299 17 110 3 112 2 75 1 38 6 301 3 119 1 81 1 123 3 187 1 152 1 
125 2 154 2 3 10 194 2 89 2 7 2 270 1 55 5 11 1 197 9 226 1 14 1 15 1 228 4 281 1 18 14 101 1 65 2 166 2 67 1 243 1 296 1 299 24 110 2 112 4 75 1 38 4 301 5 119 1 81 1 123 2 187 1 152 1 
154 1 3 6 89 2 7 1 270 1 55 2 11 2 197 2 226 1 14 1 228 1 281 1 18 6 166 2 296 1 299 12 110 1 112 2 75 1 38 2 301 1 119 1 123 1 187 1 152 1 
125 1 154 4 3 8 194 1 89 2 7 4 270 1 55 3 11 1 197 5 226 1 14 1 15 1 228 2 281 1 18 10 101 2 65 1 166 2 243 1 296 1 254 1 299 18 110 4 112 2 75 1 38 8 301 3 119 1 81 1 123 4 187 1 152 1 
154 4 3 7 89 3 7 4 270 1 55 3 11 2 197 6 226 1 14 1 228 3 281 1 18 9 284 1 101 2 166 3 296 1 299 16 110 4 112 2 75 1 38 8 301 3 119 1 123 4 187 1 152 1 
65 1 125 3 3 4 194 3 197 6 55 1 299 7 112 1 301 3 15 1 228 3 18 3 81 2 
125 1 154 4 3 8 194 1 89 2 7 4 270 1 55 3 11 1 197 4 226 1 14 1 15 1 228 1 281 1 18 10 284 1 101 2 65 1 166 2 243 1 296 1 299 18 110 4 112 2 75 1 38 8 301 3 119 1 81 1 123 4 187 1 152 1 
65 1 154 1 125 2 67 1 3 5 194 2 7 1 197 5 55 2 110 1 226 1 299 10 112 2 38 2 301 3 228 2 18 5 123 1 
154 1 89 1 7 1 55 1 197 1 226 1 110 1 299 2 38 2 228 1 18 2 123 1 
154 1 166 1 3 2 89 1 7 1 11 1 197 2 55 1 226 1 110 1 299 4 112 1 301 1 38 2 228 1 18 2 123 1 
101 1 154 3 125 1 3 2 194 1 7 3 197 2 299 3 226 1 110 3 38 6 301 1 228 1 18 1 123 3 48 1 284 1 
154 4 125 2 3 8 194 2 7 4 55 2 197 6 226 1 228 3 15 1 18 7 284 1 98 1 101 1 65 1 67 1 254 1 110 4 299 15 112 2 75 1 38 8 301 3 119 1 81 1 123 4 187 1 48 1 
101 1 65 1 154 2 125 1 243 1 3 4 194 1 7 2 55 1 197 3 299 8 110 2 112 1 301 2 38 4 228 1 15 1 18 4 81 1 123 2 
112 1 301 2 65 1 15 1 125 1 243 1 3 3 194 1 18 3 81 1 55 1 197 2 237 1 299 6 
154 1 166 1 3 2 89 1 7 1 11 1 197 2 55 1 254 1 110 1 299 4 112 1 301 1 38 2 228 1 18 2 123 1 
75 1 3 1 18 1 119 1 187 1 299 2 
125 2 154 1 3 13 194 2 89 2 7 1 11 2 55 5 197 7 15 1 228 2 203 1 18 13 20 1 101 1 65 2 166 2 67 1 243 1 108 1 299 26 110 1 112 5 75 2 301 5 38 2 119 2 81 1 123 1 
75 1 3 1 299 1 
18 1 119 1 299 1 
154 1 166 1 3 3 89 1 7 1 55 1 197 3 11 1 254 1 110 1 299 6 112 1 38 2 301 2 228 1 180 1 18 3 123 1 
154 1 3 6 89 2 7 1 270 1 55 2 11 2 197 2 226 1 14 1 228 1 281 1 18 6 166 2 296 1 299 12 110 1 112 2 75 1 38 2 301 1 119 1 123 1 187 1 152 1 
65 1 125 1 3 3 194 1 55 1 197 2 299 6 112 1 301 1 228 1 18 3 
101 1 125 1 154 1 3 2 194 1 7 1 197 2 299 3 110 1 301 1 38 2 228 1 15 1 18 1 81 1 123 1 48 1 
24 1 263 1 91 1 269 1 104 1 249 1 147 1 35 1 174 1 115 1 94 1 177 1 
24 1 263 1 174 1 94 1 91 1 249 1 147 1 
50 4 286 1 207 1 103 1 245 1 170 1 295 1 113 1 179 4 117 1 184 1 239 4 261 1 
50 2 192 1 103 1 128 1 295 2 229 1 179 2 151 1 181 1 184 1 186 1 239 2 238 1 261 1 
50 1 179 1 245 1 69 1 250 1 184 1 295 1 260 1 239 1 189 1 
50 2 113 1 103 1 179 2 52 1 251 1 184 1 295 1 261 1 63 1 239 2 
286 1 50 5 207 1 103 3 245 1 128 1 251 1 295 2 113 1 133 1 179 4 201 1 117 1 184 2 239 5 261 2 
286 1 50 5 207 1 103 3 68 1 245 1 128 1 251 1 295 2 113 1 133 1 179 4 117 1 184 2 239 5 261 2 
17 1 111 1 
17 1 111 1 
17 1 111 1 
86 1 50 1 192 1 88 1 128 1 90 1 53 1 224 1 198 1 61 1 235 1 140 1 236 1 239 1 103 4 102 2 34 1 295 1 298 2 111 1 175 1 179 1 218 1 306 1 184 1 261 1 
86 1 50 1 51 1 102 2 103 1 88 1 128 1 34 1 224 1 298 2 111 1 175 1 179 1 218 1 235 1 140 1 306 1 239 1 
50 1 179 1 184 1 295 1 239 1 225 1 
50 6 192 1 225 1 278 1 133 1 201 1 239 6 103 3 245 2 251 1 295 3 72 1 39 1 303 1 113 1 179 5 151 1 181 1 184 2 261 2 
17 1 111 1 
86 1 50 1 51 1 125 1 265 1 88 1 194 1 5 1 224 1 55 1 275 2 59 2 234 4 235 1 140 1 239 1 145 1 241 2 65 1 206 1 102 3 103 1 67 1 27 3 167 2 244 1 245 1 294 1 34 2 298 3 111 1 112 2 74 2 114 1 175 2 179 1 41 1 218 1 306 2 
286 1 50 1 103 1 179 1 245 1 117 1 184 1 295 1 261 1 237 1 239 1 
17 1 111 1 
50 1 192 1 103 1 128 1 295 2 72 1 278 1 179 1 151 1 181 1 184 1 239 1 261 1 
50 2 192 1 103 2 295 2 225 1 72 1 113 1 179 2 236 1 221 1 184 1 239 2 261 1 
217 1 79 1 305 1 267 1 223 1 163 1 23 1 62 1 
64 1 291 1 267 1 223 2 253 1 73 1 176 1 217 3 79 4 118 1 305 4 23 2 47 2 62 1 
246 1 267 1 223 1 217 1 280 1 202 1 79 2 305 2 163 1 47 1 23 1 62 1 
217 1 79 3 118 2 305 3 267 1 136 1 223 1 163 1 23 1 253 2 62 1 73 1 
222 2 217 2 80 1 274 1 
79 1 305 1 267 1 163 1 196 1 62 1 
217 1 79 2 305 2 267 1 223 1 163 1 23 1 47 1 62 1 13 1 
290 1 
217 1 79 1 305 1 267 1 223 1 163 1 23 1 62 1 
217 1 223 1 23 1 237 1 
217 1 79 1 305 1 267 1 223 1 23 1 62 1 
247 1 305 1 122 1 
267 1 223 1 273 1 253 1 73 1 217 1 79 3 305 3 118 2 163 1 23 1 62 1 
217 1 79 2 305 2 267 1 223 1 23 1 47 1 46 1 62 1 
64 1 126 1 267 1 250 1 217 1 79 1 305 1 43 1 163 1 62 1 189 1 
217 1 79 1 305 1 267 1 223 1 163 1 62 1 
79 1 305 1 267 1 223 2 163 1 23 1 62 1 
66 1 267 2 223 1 252 1 217 1 79 2 305 2 163 1 62 2 85 1 
64 1 291 1 267 1 223 1 109 1 13 1 217 2 79 3 305 3 163 1 23 1 47 2 62 1 
69 1 267 1 146 1 223 1 250 1 217 1 79 2 305 2 43 1 163 1 23 1 47 1 62 1 188 1 189 2 
64 1 291 1 267 2 223 1 107 1 217 2 79 4 305 4 163 1 23 1 46 1 47 2 62 2 
267 1 223 1 13 1 217 1 79 3 305 3 118 1 163 1 47 1 23 1 62 1 
64 1 176 1 217 1 291 1 
217 1 223 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 307 122 125 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 131 362 158 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 60 155 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 60 155 357 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 131 166 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 183 119 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 267 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 375 56 130 274 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 375 56 130 274 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 375 56 130 274 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 131 362 158 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 267 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 131 166 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 131 362 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 131 334 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (128,219) 204 188 (93,132) (93,132) 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 353 2 107 1 352 1 44 4 26 2 356 2 187 2 366 1 262 2 12 1 193 2 14 1 142 1 314 1 148 1 246 1 339 5 341 6 320 1 270 1 63 1 343 9 82 1 21 3 162 2 163 9 182 1 
0 1 107 1 352 1 44 4 353 2 26 2 356 2 187 2 366 1 262 2 12 1 193 2 14 1 142 1 314 1 148 1 246 1 339 5 341 6 320 1 270 1 63 1 343 9 82 1 21 3 162 2 163 9 182 1 
0 1 107 1 352 1 44 5 353 2 26 2 356 2 187 2 366 1 262 2 12 1 193 2 14 1 142 1 314 1 148 1 246 1 339 6 341 7 320 1 270 1 63 1 343 10 82 1 21 4 162 2 163 10 182 1 
0 1 107 1 352 1 44 3 353 1 26 2 356 2 187 2 366 1 262 2 193 2 14 1 142 1 314 1 148 1 246 1 339 4 341 4 320 1 270 1 63 1 343 7 82 1 21 2 162 2 163 7 182 1 
353 2 44 2 356 1 26 1 314 1 148 1 246 1 339 3 341 3 63 1 343 4 21 1 262 1 162 1 12 1 193 1 163 4 182 1 
26 1 356 1 314 1 246 1 187 1 339 1 224 1 270 1 63 1 343 2 52 1 366 1 162 1 262 1 264 1 163 2 
352 1 44 1 26 2 314 1 246 1 187 1 339 2 341 1 63 1 343 3 21 1 162 2 163 3 
353 2 352 1 44 4 356 1 26 2 314 1 148 1 246 1 187 1 339 5 341 7 5 1 63 1 82 1 343 9 21 3 262 1 162 2 12 1 193 1 14 1 163 9 182 1 95 1 
353 2 352 1 44 4 356 1 26 2 314 1 148 1 246 1 187 1 339 5 341 7 5 1 63 1 82 1 343 9 21 3 262 1 162 2 12 1 193 1 14 1 163 9 182 1 95 1 
99 1 
288 2 256 1 147 1 
188 1 45 1 39 2 204 2 11 2 128 2 323 2 350 2 
165 1 45 1 257 1 236 1 86 1 279 1 301 1 3 1 304 1 283 1 4 1 188 1 138 1 190 1 116 1 11 2 141 1 217 1 265 2 218 1 176 1 289 2 128 2 151 1 19 2 297 1 179 2 201 1 203 1 344 1 299 1 39 3 204 2 226 2 24 1 323 3 350 2 
188 1 204 1 128 1 132 1 
256 1 16 1 327 1 85 1 128 1 223 1 295 1 237 1 188 1 37 1 204 1 39 1 10 1 11 1 160 1 132 1 348 1 93 1 323 1 
256 1 327 1 85 2 128 2 223 1 295 1 237 2 188 1 37 1 204 2 39 1 10 1 11 1 160 1 132 1 93 1 323 1 350 1 
69 1 85 1 30 1 237 1 77 1 
69 1 256 1 134 1 327 1 85 2 30 1 237 2 282 1 
85 1 30 1 237 1 
69 1 188 1 204 1 85 1 128 1 132 1 93 1 237 1 
256 1 
69 1 256 1 134 1 327 1 85 2 30 1 120 1 237 2 
69 2 32 1 256 1 134 1 207 1 291 2 292 1 72 1 327 1 85 5 35 1 198 1 153 1 237 5 200 2 284 1 171 1 215 2 30 2 
289 1 165 1 128 1 167 1 279 1 3 1 179 1 201 1 203 1 140 1 344 1 299 1 39 2 116 1 216 1 11 1 226 1 218 1 323 2 350 1 
99 1 
145 1 45 2 204 1 39 2 293 1 11 2 128 1 323 2 350 1 
271 1 167 1 212 1 
164 1 289 1 165 1 45 1 279 1 3 1 179 1 201 1 203 1 344 1 39 1 116 1 299 1 226 1 323 1 218 1 
45 1 140 1 204 1 39 3 11 3 128 3 323 3 350 3 
135 1 39 1 11 1 128 1 223 1 323 1 350 1 
145 1 39 1 204 1 11 1 293 1 128 1 223 1 323 1 350 1 
45 1 85 1 86 1 236 1 279 1 237 1 3 1 283 1 188 1 138 1 4 1 91 1 140 1 10 1 11 3 141 1 289 1 293 1 18 1 151 1 295 1 19 1 297 1 201 1 203 1 344 1 204 2 299 1 160 1 350 3 105 1 165 1 301 1 304 1 116 1 216 1 218 1 265 2 128 3 223 2 179 1 37 1 39 4 226 1 323 4 
45 1 140 1 16 1 39 2 11 2 128 1 361 1 323 2 350 1 
354 1 256 1 85 1 293 1 18 1 128 3 237 1 295 1 223 1 140 2 37 1 204 1 39 3 10 1 216 1 11 3 160 1 323 3 350 3 
271 1 140 1 39 2 204 1 11 2 293 1 128 2 167 1 323 2 350 2 
289 1 165 1 45 1 279 1 3 1 179 1 201 1 203 1 344 1 39 1 116 1 299 1 226 1 323 1 218 1 
289 1 165 1 45 1 2 1 279 1 179 1 329 1 203 1 344 1 39 1 116 1 299 1 226 1 323 1 218 1 
106 1 257 2 108 1 184 1 236 1 86 1 167 2 212 2 283 1 4 1 92 1 9 1 141 1 335 1 265 2 151 2 19 4 225 1 297 1 271 2 159 1 374 1 375 1 181 1 
39 1 160 1 11 1 128 1 223 1 323 1 219 1 350 1 
45 1 336 1 16 1 293 1 128 4 361 1 178 1 140 2 39 5 204 1 11 5 216 1 323 5 350 4 
135 1 39 2 11 2 128 2 219 1 223 1 323 2 350 2 
202 1 232 1 
202 1 232 1 
272 1 364 1 
272 1 364 1 
272 1 364 1 
202 1 232 1 233 1 
202 1 232 1 7 1 
70 1 202 2 232 2 272 1 364 1 197 1 
202 1 232 1 233 1 
202 1 232 1 233 1 
255 1 202 1 232 1 
255 1 202 1 232 1 
255 1 202 1 232 1 
96 2 232 2 256 1 85 2 87 1 220 2 197 1 49 2 237 2 249 1 302 1 154 2 90 3 169 1 202 2 298 1 322 2 40 1 367 1 
45 1 232 1 85 1 237 1 90 1 115 1 170 1 7 1 11 2 192 1 240 1 96 1 195 1 244 1 220 1 128 2 249 1 154 1 202 1 39 2 322 1 228 1 323 2 350 2 
356 1 262 1 193 1 
356 1 262 1 264 1 
277 1 47 1 262 3 193 2 264 1 248 1 
277 1 262 2 193 1 196 1 264 1 248 1 
277 1 262 2 193 1 264 1 248 2 
69 4 102 1 71 1 134 1 256 2 184 1 85 5 327 1 209 2 111 1 237 5 115 1 284 2 171 1 215 1 30 1 56 1 288 3 195 1 291 1 124 1 147 1 150 1 153 3 200 1 129 2 225 1 62 1 374 1 345 2 228 1 375 1 
69 7 102 2 256 5 134 1 184 3 85 9 327 1 111 2 237 9 305 1 115 4 284 6 171 1 285 1 30 6 215 2 56 3 77 5 288 9 144 1 146 1 124 1 291 2 147 3 268 5 35 1 317 1 153 8 200 2 129 6 225 3 157 1 374 3 345 6 375 3 
69 2 102 1 71 1 256 3 184 1 327 1 85 3 111 1 209 1 237 3 115 1 284 2 215 1 56 1 288 4 291 1 147 2 35 1 153 3 200 1 225 1 129 2 62 1 374 1 345 2 375 1 
102 1 69 3 71 1 256 4 184 2 327 1 85 4 111 1 209 2 237 4 305 1 115 2 284 4 215 1 56 2 288 7 146 1 291 1 147 3 35 1 317 1 153 5 200 1 129 4 225 2 62 1 374 2 345 4 375 2 
99 1 
203 1 183 1 
61 1 
203 1 279 1 
303 1 243 1 203 3 299 1 118 2 279 1 
203 1 299 1 279 1 
203 1 109 1 
257 3 234 1 208 1 360 1 259 1 177 1 151 2 19 5 51 1 73 1 225 1 189 1 75 2 9 2 374 1 55 1 335 3 
257 3 234 1 208 1 360 1 259 1 177 1 151 2 19 5 51 1 73 1 225 1 189 1 75 2 9 2 374 1 55 1 335 3 
257 3 234 1 208 1 360 1 259 1 177 1 151 2 19 5 51 1 73 1 225 1 189 1 308 1 75 2 9 2 374 1 55 1 335 3 
1 3 257 15 234 1 184 3 208 2 185 1 360 2 236 1 259 5 51 1 73 1 4 1 189 2 74 1 75 3 9 5 55 2 141 1 335 10 265 2 56 3 57 1 149 1 177 1 151 14 19 29 250 4 297 1 225 4 273 1 374 4 180 1 375 3 349 1 
257 4 234 1 208 1 360 1 236 2 259 1 51 1 4 2 189 1 75 2 8 1 9 3 141 2 55 1 335 4 265 4 149 1 177 1 151 3 81 1 19 7 225 1 297 2 374 1 
356 1 26 1 235 1 47 1 187 1 113 1 328 1 117 1 262 2 193 1 264 1 218 1 368 1 194 1 289 1 314 1 246 1 339 1 372 1 247 1 341 1 179 1 63 1 343 2 344 1 23 1 226 1 162 1 163 2 101 1 
356 1 26 1 235 1 47 1 187 1 113 1 328 1 262 2 193 1 310 1 264 1 218 1 194 1 289 1 314 1 339 1 372 1 247 1 80 1 341 2 179 1 63 1 38 1 343 3 344 1 23 1 226 1 162 1 163 3 101 1 
356 1 47 1 187 1 113 1 328 1 262 2 193 1 264 1 218 1 194 1 289 1 314 1 339 1 372 1 247 1 341 2 80 1 179 1 63 1 38 1 343 2 344 1 23 1 226 1 163 2 
26 1 187 2 279 1 116 1 214 1 332 1 310 1 218 1 143 1 289 1 247 2 372 2 340 1 179 1 203 1 342 1 344 1 343 1 23 2 226 1 162 1 163 1 276 1 
356 1 26 1 235 1 47 1 187 1 113 1 328 1 262 2 193 1 264 1 218 1 368 1 194 1 289 1 246 1 372 1 247 1 179 1 38 1 343 1 344 1 23 1 226 1 162 1 163 1 101 1 
325 1 
134 3 85 5 327 3 279 1 237 5 50 1 284 2 10 1 11 1 333 1 191 2 143 1 288 2 289 2 242 1 291 1 16 1 147 2 58 1 340 1 153 2 295 1 200 1 203 1 344 1 160 1 161 1 67 2 348 1 68 1 102 1 103 1 104 4 256 4 258 1 307 1 365 2 171 1 116 2 174 2 30 6 215 1 175 1 218 1 313 2 369 2 127 1 315 1 316 2 223 1 179 2 37 1 39 1 226 2 323 1 
103 1 104 2 134 1 256 2 85 3 327 2 237 3 50 1 10 1 174 1 11 1 30 2 120 1 16 1 58 1 223 1 295 1 37 1 39 1 160 1 161 1 348 1 68 1 323 1 
103 1 104 3 256 2 16 1 58 1 327 2 85 2 295 1 223 1 237 2 50 1 37 1 39 1 10 1 161 1 160 1 11 1 67 1 348 1 68 1 323 1 
103 1 104 3 134 1 256 3 85 3 327 3 237 3 50 1 10 1 174 1 11 1 30 2 120 1 16 1 58 1 316 1 223 1 295 1 37 1 39 1 160 1 161 1 348 1 67 1 68 1 323 1 
230 1 134 3 327 4 85 5 237 5 50 1 281 1 188 1 284 1 10 1 11 1 191 2 93 1 242 1 291 1 16 1 58 1 147 2 17 1 295 1 153 1 200 1 204 1 161 1 160 1 348 1 67 3 68 1 103 1 104 5 256 4 307 1 171 1 365 2 174 4 30 7 215 1 120 1 122 1 313 2 266 1 369 2 128 1 316 4 223 1 37 1 39 1 132 1 323 1 
134 2 327 3 85 4 237 4 50 1 284 1 10 1 11 1 191 2 333 1 288 2 242 1 291 1 16 1 58 1 147 2 295 1 153 1 200 1 160 1 161 1 348 1 67 2 68 1 103 1 104 4 256 4 307 1 171 1 365 2 174 2 215 1 30 4 313 2 369 2 316 2 223 1 37 1 39 1 323 1 
103 1 104 4 134 2 256 3 85 4 327 3 237 4 50 1 307 1 284 1 365 2 171 1 10 1 174 2 30 4 215 1 11 1 191 2 122 1 313 2 242 1 266 1 369 2 291 1 16 1 147 2 58 1 17 1 316 2 153 1 223 1 295 1 200 1 37 1 39 1 160 1 161 1 67 2 348 1 68 1 323 1 
103 1 104 4 134 2 256 3 85 4 327 3 237 4 50 1 307 1 284 1 365 2 171 1 10 1 174 2 30 4 215 1 11 1 191 2 122 1 313 2 242 1 266 1 369 2 291 1 16 1 147 2 58 1 17 1 316 2 153 1 223 1 295 1 200 1 37 1 39 1 160 1 161 1 67 2 348 1 68 1 323 1 
103 1 104 2 324 1 256 2 85 2 327 2 136 1 237 2 50 1 307 1 284 1 171 1 10 1 76 1 215 1 11 1 191 1 122 1 313 1 125 1 291 1 16 1 58 1 153 1 223 1 295 1 200 1 37 1 39 1 160 1 161 1 348 1 68 1 323 1 
103 1 104 5 134 2 256 3 85 4 327 3 237 4 50 1 281 1 307 1 284 1 365 2 171 1 10 1 174 3 215 1 11 1 30 5 191 2 122 1 313 2 242 1 266 1 369 2 291 1 16 1 147 2 58 1 17 1 316 3 153 1 223 1 295 1 200 1 37 1 39 1 160 1 161 1 67 3 348 1 68 1 323 1 
103 1 104 5 134 2 256 3 85 4 327 3 237 4 50 1 281 1 307 1 284 1 365 2 171 1 10 1 174 3 215 1 11 1 30 5 191 2 122 1 313 2 242 1 266 1 369 2 291 1 16 1 147 2 58 1 17 1 316 3 153 1 223 1 295 1 200 1 37 1 39 1 160 1 161 1 67 3 348 1 68 1 323 1 
103 1 104 2 256 2 85 2 327 2 136 1 237 2 50 1 307 1 284 1 171 1 10 1 76 1 215 1 11 1 191 1 313 1 291 1 16 1 58 1 153 1 223 1 295 1 200 1 37 1 39 1 161 1 160 1 348 1 68 1 323 1 
283 1 4 1 297 1 99 1 92 1 236 1 86 1 141 1 265 2 
45 1 1 3 257 8 184 1 236 2 86 1 259 1 167 8 212 8 89 1 304 1 283 2 4 2 9 1 141 2 335 2 265 4 56 2 176 1 57 1 287 1 370 1 59 1 151 6 19 14 250 3 319 1 297 2 225 2 271 4 374 1 375 2 349 1 
164 1 165 1 45 1 257 1 86 1 236 1 279 1 3 1 168 1 283 1 304 1 4 1 140 1 116 1 11 1 216 1 141 1 218 1 265 2 176 1 289 1 370 1 128 1 151 1 19 2 179 1 297 1 201 1 203 1 271 1 344 1 299 1 39 2 275 1 226 1 227 1 323 2 350 1 
45 1 234 1 184 2 236 3 86 3 279 2 51 1 3 2 283 3 4 3 138 2 140 1 9 4 330 2 11 1 141 3 13 1 335 8 56 2 289 3 151 9 19 18 297 3 201 2 203 2 344 2 299 2 66 2 350 1 165 2 257 9 208 1 360 1 259 4 167 7 212 7 304 1 75 1 116 1 309 1 216 1 265 6 218 2 176 1 123 2 126 2 370 1 177 1 128 1 179 3 225 3 271 7 38 1 373 1 39 3 374 3 226 3 375 2 323 3 
231 1 257 1 236 2 86 2 210 1 279 3 238 1 362 1 283 2 304 1 4 2 190 1 140 1 92 1 116 2 117 1 11 1 141 2 218 2 265 4 176 1 143 1 289 4 371 1 128 1 151 1 340 1 19 2 179 4 297 2 203 3 158 1 344 3 299 1 39 1 252 1 131 1 226 4 254 1 323 1 350 1 
257 1 184 1 236 1 86 1 167 1 212 1 283 1 4 1 9 1 11 1 141 1 335 1 265 2 56 1 370 1 293 1 128 1 151 2 152 1 19 3 297 1 225 1 271 1 204 1 39 1 374 1 375 1 323 1 350 1 
257 2 86 1 236 1 259 1 167 1 212 1 19 2 283 1 297 1 4 1 225 1 271 1 92 1 159 1 141 1 335 1 375 1 265 2 
184 1 86 1 236 1 167 1 212 1 151 2 19 2 283 1 297 1 4 1 271 1 92 1 9 1 374 1 141 1 335 1 265 2 181 1 
257 2 184 1 86 1 236 1 259 1 167 2 151 2 212 2 19 4 283 1 297 1 4 1 225 1 271 2 92 1 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
231 1 257 2 86 1 236 1 259 1 167 1 212 1 19 2 283 1 297 1 4 1 225 1 271 1 159 1 141 1 335 1 375 1 265 2 
231 1 184 1 86 1 236 1 167 1 212 1 151 2 19 2 283 1 297 1 4 1 271 1 9 1 374 1 141 1 335 1 265 2 181 1 
231 1 257 2 184 1 86 1 236 1 259 1 167 2 151 2 212 2 19 4 283 1 297 1 4 1 225 1 271 2 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
257 2 184 1 86 1 236 1 259 1 167 2 151 2 212 2 19 4 283 1 297 1 4 1 225 1 271 2 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
165 1 45 1 257 1 86 1 236 1 279 1 3 1 283 1 304 1 138 1 4 1 116 1 141 1 218 1 265 2 176 1 289 1 151 1 19 2 179 1 297 1 201 1 203 1 344 1 299 1 39 1 226 1 323 1 
165 1 45 1 257 1 2 1 86 1 236 1 279 1 283 1 304 1 329 1 4 1 116 1 141 1 218 1 265 2 176 1 289 1 151 1 19 2 179 1 297 1 203 1 344 1 299 1 39 1 226 1 83 1 323 1 
257 2 184 1 370 1 86 1 236 1 259 1 167 2 151 2 212 2 19 4 283 1 297 1 4 1 225 1 271 2 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
165 1 257 2 184 1 86 1 236 1 259 1 167 2 212 2 279 1 3 1 283 1 138 1 4 1 9 1 117 1 141 1 335 2 218 1 265 2 56 1 289 1 126 1 151 2 19 4 225 1 179 1 297 1 201 1 271 2 203 1 344 1 299 1 39 1 374 1 226 1 375 1 323 1 
257 2 184 1 236 1 86 1 259 1 167 1 212 1 283 1 4 1 11 1 141 1 335 1 265 2 56 1 370 1 293 1 128 1 151 1 199 1 19 3 297 1 225 1 271 1 204 1 39 1 374 1 375 1 323 1 350 1 
1 1 257 6 357 1 184 2 186 1 236 2 259 1 280 1 114 1 4 2 9 1 286 1 141 2 335 2 265 4 15 1 56 2 57 1 222 1 151 7 81 1 19 13 250 2 155 1 297 2 225 2 374 2 375 2 349 1 
1 2 257 4 357 1 236 1 151 4 60 1 19 8 81 1 280 2 250 2 114 2 155 2 297 1 4 1 274 1 141 1 15 1 265 2 349 2 
1 1 257 7 84 1 357 1 184 1 186 1 236 2 259 1 280 2 114 1 4 2 9 1 286 1 141 2 335 2 265 4 15 1 56 2 57 1 151 6 81 1 19 13 250 2 155 1 297 2 225 2 374 1 375 2 349 1 
1 1 257 7 84 1 357 1 184 1 186 1 236 2 259 1 280 2 114 1 4 2 9 1 286 1 141 2 335 2 265 4 15 1 56 2 57 1 151 6 81 1 19 13 250 2 155 1 297 2 225 2 374 1 375 2 349 1 
1 3 257 11 234 1 184 2 357 1 208 1 360 1 236 1 259 2 280 2 51 1 114 1 4 1 75 1 9 3 141 1 335 5 265 2 15 1 56 2 57 1 177 1 59 1 151 10 60 1 81 1 19 21 250 3 155 1 297 1 225 3 374 3 274 1 375 2 349 2 
96 1 169 1 202 1 232 1 29 1 322 1 367 1 220 1 197 1 154 1 
7 1 192 1 
96 1 202 1 232 1 347 1 322 1 220 1 253 1 42 1 154 1 
96 1 232 1 256 1 85 1 87 1 220 1 197 1 49 1 237 1 249 1 302 1 154 1 90 2 169 1 202 1 298 1 322 1 367 1 
96 1 232 1 256 1 85 1 87 1 220 1 197 1 49 1 237 1 249 1 302 1 154 1 90 2 169 1 202 1 298 1 322 1 367 1 
96 1 232 1 256 1 85 1 87 1 220 1 197 1 49 1 237 1 249 1 302 1 154 1 90 2 169 1 202 1 298 1 322 1 367 1 
70 1 351 1 233 1 
70 1 351 1 233 1 
255 1 98 1 
70 1 255 1 98 1 
170 1 244 1 
69 1 45 1 232 1 85 1 49 1 237 1 90 1 115 1 170 1 7 1 11 2 192 1 240 1 96 1 195 1 244 1 220 1 128 2 79 1 154 1 202 1 298 1 39 2 322 1 228 1 323 2 350 2 
351 1 233 1 
70 1 255 1 98 1 
257 1 166 1 278 1 46 1 86 1 236 1 210 1 279 2 238 1 283 1 304 1 4 1 190 2 331 1 11 2 141 1 218 1 265 2 176 1 289 2 370 1 371 1 151 1 19 2 179 2 297 1 203 2 344 2 299 1 39 2 252 1 131 1 226 2 254 1 323 2 41 1 
289 2 356 1 235 1 97 1 47 1 337 1 372 1 328 1 179 2 344 1 38 1 117 1 53 1 262 2 226 2 193 1 264 1 218 1 194 1 
289 1 356 1 235 1 359 1 47 1 372 1 328 1 179 1 38 1 344 1 53 1 262 2 226 1 193 1 264 1 218 1 194 1 
289 1 337 1 279 1 372 1 340 1 179 1 203 1 344 1 116 1 332 1 226 1 121 1 218 1 143 1 
289 1 356 1 235 1 97 1 47 1 337 1 372 1 328 1 179 1 344 1 38 1 53 1 262 2 226 1 193 1 264 1 218 1 194 1 
54 1 
99 1 
288 1 242 1 134 1 256 2 291 1 369 1 147 1 327 1 85 1 237 1 153 1 200 1 284 1 365 1 171 1 30 1 215 1 
289 1 291 1 279 1 200 1 303 1 179 1 156 1 203 1 344 2 299 1 171 1 116 1 215 1 226 1 119 1 218 1 183 1 
102 1 1 1 256 1 327 1 188 1 284 2 171 1 215 1 93 1 312 1 291 1 315 1 128 1 318 1 153 2 200 1 250 1 129 1 204 1 274 1 345 1 65 1 132 1 349 1 
267 1 291 1 208 1 85 1 360 1 17 1 128 1 318 2 153 2 237 1 200 1 51 1 188 1 225 1 284 1 204 1 171 1 374 1 215 1 132 1 93 1 
256 1 291 1 292 1 72 1 327 1 153 1 200 1 284 1 171 1 215 1 
288 10 256 5 184 2 147 5 318 2 153 5 225 2 129 5 284 5 345 5 374 2 66 1 375 2 56 2 312 1 
256 1 134 1 327 1 85 1 30 1 237 1 
229 2 102 2 134 2 258 1 85 3 279 1 237 3 139 1 284 2 171 1 116 2 172 1 215 2 30 4 218 1 143 1 289 4 291 2 127 1 35 1 315 2 153 2 340 1 200 2 179 4 203 1 344 1 22 1 226 4 
165 1 45 1 236 1 86 1 279 1 301 1 3 1 304 1 283 1 4 1 188 1 138 1 116 1 11 2 141 1 265 2 218 1 289 1 128 2 151 1 19 1 297 1 179 1 201 1 203 1 344 1 39 3 204 2 299 1 226 1 323 3 350 2 
288 4 102 1 256 4 291 1 147 2 327 2 315 1 153 1 200 1 129 2 75 1 284 2 171 1 345 2 215 1 
96 1 322 1 28 1 
96 1 169 1 170 1 322 1 137 1 
96 1 322 1 28 1 
96 1 322 1 28 1 
96 1 322 1 294 1 
96 1 322 1 294 1 
96 1 322 1 294 1 
96 1 322 1 
202 1 232 1 
257 3 234 1 208 1 149 1 360 1 236 2 259 1 177 1 151 3 19 6 51 1 225 1 297 2 4 2 75 1 9 2 374 1 141 2 335 3 265 4 
99 1 
257 2 184 1 236 1 259 1 112 1 151 2 19 4 297 1 4 1 225 1 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
1 1 257 1 151 1 19 2 349 1 250 1 
1 2 257 11 234 1 184 2 208 2 360 2 236 1 259 4 89 1 51 2 4 1 75 1 9 4 141 1 335 8 56 2 265 2 57 1 267 1 149 1 177 1 151 10 59 1 19 21 250 2 225 5 297 1 374 5 375 2 
151 1 19 1 250 1 
1 1 257 1 19 1 
257 3 184 1 236 1 259 1 112 1 151 3 19 6 4 1 297 1 225 1 9 2 374 1 66 1 141 1 375 1 335 3 265 2 56 1 
1 1 257 1 236 1 151 1 81 1 19 2 250 1 297 1 4 1 274 1 141 1 265 2 349 1 
225 1 257 1 374 1 151 1 19 2 51 1 
257 1 234 1 208 1 360 1 149 1 236 1 259 1 177 1 151 2 88 1 19 3 297 1 4 1 9 1 141 1 335 2 265 2 
267 1 257 4 208 1 360 1 236 1 259 2 151 4 81 1 19 8 51 1 4 1 297 1 225 2 9 2 374 2 141 1 335 4 265 2 
257 2 236 1 259 1 81 1 19 2 297 1 4 1 225 1 141 1 375 1 335 1 265 2 
257 2 184 1 236 1 259 1 151 2 81 1 19 4 297 1 4 1 225 1 9 1 374 1 141 1 335 2 375 1 265 2 56 1 
257 1 208 1 149 1 360 1 236 3 259 1 151 2 88 1 19 3 81 1 297 3 4 3 9 1 286 1 141 3 335 2 265 6 
1 3 257 14 234 1 184 3 208 2 185 1 360 2 236 5 259 5 112 1 88 1 51 2 4 5 74 1 75 1 9 6 286 1 141 5 335 11 265 10 56 3 57 1 149 2 177 1 151 16 81 1 19 30 250 4 297 5 225 5 273 1 374 5 375 3 349 1 
25 1 1 1 206 1 33 1 257 6 184 1 236 1 151 4 81 1 19 10 250 1 225 2 297 1 4 1 9 1 374 1 274 1 130 1 141 1 335 1 375 2 56 2 265 2 349 1 
1 1 25 1 206 1 257 8 184 1 236 2 259 1 112 1 4 2 9 1 141 2 335 2 265 4 56 3 57 1 33 1 151 5 19 13 81 1 250 2 297 2 225 3 274 1 374 1 130 1 375 3 349 1 
1 1 257 6 234 1 208 2 360 2 236 2 259 1 112 1 51 2 4 2 75 1 9 3 141 2 335 4 265 4 267 1 177 1 151 5 19 11 81 1 250 1 225 3 297 2 374 3 274 1 349 1 
1 1 257 6 234 1 208 2 360 2 236 2 259 3 112 1 51 2 4 2 75 1 9 4 141 2 335 7 265 4 267 1 177 1 151 5 19 11 81 1 250 1 225 3 297 2 374 3 274 1 349 1 
25 1 1 1 206 1 33 1 257 6 184 1 236 1 151 4 81 1 19 10 250 1 225 2 297 1 4 1 9 1 374 1 274 1 130 1 141 1 335 1 375 2 56 2 265 2 349 1 
1 1 257 1 236 1 151 1 81 1 19 2 250 1 297 1 4 1 274 1 141 1 265 2 349 1 
1 1 257 1 236 2 112 1 151 1 81 1 19 2 250 1 297 2 4 2 274 1 141 2 265 4 349 1 
1 1 257 1 236 2 151 1 81 1 19 2 250 1 297 2 4 2 274 1 286 1 141 2 265 4 349 1 
267 1 257 5 234 1 208 2 360 2 177 1 259 3 151 4 19 9 51 2 225 3 75 1 9 4 374 3 335 7 
1 1 257 1 236 2 151 1 81 1 19 2 250 1 297 2 4 2 274 1 286 1 141 2 265 4 349 1 
45 1 39 1 16 1 11 1 361 1 323 1 260 1 
45 1 290 1 16 1 221 1 361 1 260 1 296 1 64 1 39 1 239 1 11 1 323 1 
179 1 289 1 99 1 116 1 226 1 
289 1 165 1 45 1 128 1 279 1 3 1 179 1 203 1 140 1 344 1 299 1 39 2 116 1 11 1 226 1 323 2 218 1 350 1 
229 1 289 1 43 1 165 1 45 1 109 1 128 1 279 2 223 1 3 1 179 1 203 3 140 1 344 1 299 2 39 2 10 1 160 1 11 2 226 1 323 2 218 1 350 2 
229 1 165 1 43 1 45 1 2 1 109 1 279 2 140 1 10 1 11 2 218 1 289 2 128 1 223 1 179 2 203 3 344 1 321 1 39 2 299 2 160 1 226 2 323 2 350 2 
229 1 43 1 256 1 358 1 109 1 85 2 327 1 279 1 237 2 188 1 30 1 118 1 93 1 218 1 94 1 289 1 128 1 295 1 179 1 203 4 344 1 204 1 299 1 132 1 226 1 183 1 
229 1 43 1 256 1 109 1 85 2 327 1 279 1 237 2 306 1 188 1 30 1 118 1 93 1 218 1 289 1 128 1 295 1 179 1 203 4 344 1 204 1 299 1 132 1 226 1 183 1 
179 1 289 1 205 1 344 1 226 1 218 1 
289 3 371 1 210 2 279 3 362 1 303 1 179 3 213 1 203 3 158 1 344 4 116 2 299 2 252 1 117 1 131 1 226 3 254 2 218 2 
45 1 234 1 46 1 236 2 86 2 279 1 3 1 51 1 283 2 138 1 4 2 140 1 330 1 9 2 11 1 141 2 335 2 289 1 151 2 19 4 297 2 201 1 203 1 344 1 299 1 350 1 165 1 257 2 208 1 360 1 167 1 212 1 75 1 117 1 265 4 218 1 126 1 370 1 128 1 177 1 179 1 225 1 271 1 39 2 374 1 226 1 323 2 
69 1 256 1 134 1 208 1 72 1 360 1 327 1 85 3 48 1 237 3 51 1 306 1 188 1 284 2 116 1 171 2 172 1 215 2 30 2 118 1 93 1 311 1 289 1 78 1 267 1 291 2 292 1 128 1 318 2 153 3 295 1 200 2 225 1 179 1 203 2 204 1 374 2 132 1 226 1 183 1 
289 1 205 1 279 1 61 1 303 1 179 1 156 1 203 1 344 2 299 1 118 1 226 1 218 1 
289 4 279 1 340 1 179 4 203 1 100 1 344 1 321 1 116 1 117 1 226 4 218 1 143 1 
229 1 289 2 371 1 210 1 279 1 179 2 203 1 344 2 299 1 252 1 309 1 226 2 254 1 218 1 
179 1 289 1 356 1 344 1 116 1 262 1 226 1 264 1 218 1 194 1 
289 2 166 1 371 1 210 1 279 2 179 2 203 2 344 2 38 1 299 1 117 1 252 1 226 2 131 1 218 1 254 1 
289 2 371 1 210 1 279 2 362 1 179 2 203 2 344 2 116 1 299 1 117 1 252 1 226 2 131 1 218 1 254 1 
289 2 371 1 210 1 279 2 179 2 203 2 344 2 116 1 299 1 117 1 252 1 226 2 131 1 334 1 218 1 254 1 
289 1 165 1 45 1 2 1 128 1 279 1 179 1 203 1 140 1 344 1 299 1 39 2 116 1 11 1 226 1 323 2 218 1 350 1 
229 1 289 1 210 1 279 1 303 1 179 1 213 1 203 1 344 2 299 1 226 1 254 1 218 1 
39 1 278 1 331 1 11 1 263 1 376 1 323 1 41 1 31 1 
326 1 27 1 263 1 
45 1 269 1 263 1 376 1 31 1 
69 1 326 1 256 1 27 1 85 2 327 1 237 2 188 1 363 1 10 1 263 1 93 1 31 1 269 1 18 1 128 1 223 1 295 1 37 1 204 1 160 1 132 1 376 1 
99 1 
63 1 26 1 314 1 343 1 162 1 339 1 163 1 
187 1 247 1 163 1 
26 1 314 1 300 1 246 1 339 1 20 1 270 2 63 1 6 1 343 3 162 1 163 3 
63 1 353 1 26 1 314 1 343 2 162 1 339 1 163 2 341 1 
44 1 26 1 356 1 246 1 339 1 343 1 162 1 262 1 193 1 163 1 182 1 
26 1 314 1 343 1 246 1 162 1 339 1 163 1 
63 1 26 1 314 2 343 1 246 1 162 1 163 1 
34 1 26 2 314 1 246 1 339 1 36 1 343 2 261 1 162 2 163 2 
44 1 26 1 314 1 246 1 339 2 341 2 63 1 343 3 82 1 21 1 162 1 14 1 163 3 
26 1 356 1 314 1 245 1 47 1 246 1 339 1 341 1 63 1 343 2 262 2 162 1 193 1 264 1 163 2 
353 1 44 1 26 2 314 1 246 1 339 2 341 2 63 1 343 4 21 1 162 2 12 1 163 4 
63 1 26 1 314 1 343 1 246 1 162 1 339 1 163 1 
44 1 26 1 314 2 300 1 211 1 339 3 341 2 270 1 20 1 63 2 343 4 21 1 162 1 163 4 
241 1 26 1 314 1 246 1 339 1 341 1 5 1 63 1 343 2 346 1 162 1 163 2 
270 2 20 2 63 1 26 1 314 1 343 3 300 1 246 1 338 1 162 1 339 1 163 3 
173 1 110 1 339 2 133 2 
355 1 26 1 343 1 246 1 162 1 163 1 
63 1 26 1 314 1 82 1 343 2 246 1 162 1 339 1 163 2 341 1 
251 1 
63 1 26 1 314 1 343 1 246 1 162 1 339 1 163 1 
270 1 63 1 26 1 82 1 314 1 343 3 246 1 162 1 339 1 163 3 341 1 
44 1 21 1 211 1 339 1 
314 1 339 1 

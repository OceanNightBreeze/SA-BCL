#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (150,268) (150,268) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (150,268) (150,268) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (150,268) (150,268) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (150,268) (150,268) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (43,323) 217 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (43,323) 217 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (52,356) (224,287) (224,287) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 61 172 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 65 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 151 247 234 83 168 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 151 247 234 83 168 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 151 247 234 83 168 116 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 151 247 232 83 168 116 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (52,356) (52,356) 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 363 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (52,356) (224,287) (224,287) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (52,356) (224,287) (224,287) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (52,356) (224,287) (224,287) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 61 172 335 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 349 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 351 29 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 228 301 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 151 247 234 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 151 247 232 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 151 247 234 83 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 151 247 234 83 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 351 29 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 228 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
320 1 198 2 173 1 59 2 339 1 323 1 21 2 241 3 260 1 112 1 342 1 328 3 136 1 
198 1 320 1 328 1 178 1 59 1 333 1 241 1 150 1 268 1 112 1 43 1 
198 1 320 1 328 1 178 1 59 1 333 1 241 1 150 1 268 1 112 1 43 1 
198 1 320 1 328 1 178 1 59 1 333 1 241 1 150 1 268 1 112 1 43 1 
198 1 320 1 328 1 178 1 59 1 333 1 241 1 150 1 268 1 112 1 43 1 
283 1 320 1 198 1 173 1 59 1 273 1 339 1 21 3 241 4 259 1 260 2 325 2 342 3 328 4 358 1 75 1 136 1 253 1 
320 1 198 1 68 1 173 1 59 1 21 1 339 1 241 2 70 1 49 1 41 1 112 1 328 2 333 1 75 1 253 1 
198 1 320 1 212 1 328 1 217 1 59 1 323 1 241 1 
198 1 320 1 212 1 328 1 217 1 59 1 323 1 241 1 
321 1 1 1 199 1 256 1 155 1 257 1 354 1 219 1 305 1 147 1 237 1 223 1 222 1 372 1 
216 1 
300 1 321 2 155 2 100 1 237 1 18 1 19 1 216 1 
199 1 1 1 321 5 3 1 69 2 227 1 245 1 354 1 300 2 115 1 89 5 305 1 30 2 252 1 361 1 256 1 257 1 155 5 159 1 262 2 216 2 194 1 193 4 103 1 81 1 219 1 45 2 316 2 147 1 237 2 195 1 18 1 317 2 371 1 19 2 222 1 223 1 372 1 
300 1 288 1 216 1 
200 2 364 1 216 1 
354 2 199 2 257 2 219 1 305 2 239 1 222 2 372 2 
295 1 0 1 199 3 20 2 242 1 133 1 174 1 298 1 327 2 246 1 354 3 302 1 53 1 303 1 304 2 305 2 279 1 57 1 308 1 209 1 95 1 36 1 38 1 156 1 257 2 365 1 187 1 63 1 286 2 163 1 192 1 164 2 219 1 239 1 222 2 130 1 372 2 
354 1 199 1 256 1 257 1 219 1 305 1 147 1 222 1 223 1 372 1 
1 1 296 1 199 2 256 2 257 2 132 1 276 1 42 1 216 1 354 2 300 1 219 1 305 1 147 1 334 1 222 1 223 1 372 1 
1 1 199 2 321 1 256 2 257 2 155 1 132 1 276 1 216 1 300 1 354 2 219 1 305 2 147 1 334 1 223 1 222 2 372 2 
114 1 321 1 155 1 237 1 19 1 
300 1 321 2 155 2 237 1 18 1 19 1 27 1 216 1 
321 1 155 1 19 1 
199 2 257 2 258 1 343 1 354 2 305 1 222 1 239 2 372 1 
231 1 274 1 161 1 
199 1 20 1 38 1 365 1 163 1 327 1 246 1 192 1 354 1 53 1 304 1 57 1 239 1 35 1 36 1 95 1 
199 2 20 1 231 1 38 1 257 1 365 1 163 1 192 1 246 1 327 1 66 1 354 2 53 1 304 1 305 1 57 1 117 1 95 1 36 1 372 1 
288 1 239 1 
66 1 354 3 199 3 257 3 305 3 222 1 239 1 372 3 
354 1 199 1 256 1 257 1 305 1 147 1 372 1 
343 1 354 1 199 1 256 1 257 1 305 1 258 1 222 1 372 1 
105 1 199 2 131 1 256 1 257 2 132 1 258 1 276 1 66 1 354 2 305 2 334 1 117 1 222 1 372 2 
66 1 354 2 199 2 257 2 214 1 305 1 239 1 42 1 372 1 
66 1 105 1 354 1 199 1 256 1 257 1 132 1 124 1 305 1 334 1 276 1 117 1 372 1 
66 1 354 2 199 2 231 1 257 2 305 2 258 1 161 1 222 1 372 2 
199 1 20 1 38 1 365 1 163 1 327 1 246 1 192 1 354 1 53 1 304 1 57 1 239 1 36 1 95 1 
199 1 20 1 186 1 38 1 365 1 327 1 246 1 192 1 354 1 128 1 53 1 304 1 57 1 239 1 95 1 
318 1 295 1 0 1 272 1 353 1 274 2 242 1 111 1 174 1 151 1 302 1 30 1 180 1 183 1 209 1 308 2 120 1 231 2 63 2 262 1 161 2 286 2 164 4 289 1 
354 1 199 1 256 1 257 1 132 1 305 1 153 1 372 1 
199 5 257 5 214 1 258 1 42 1 66 2 354 5 250 1 305 4 251 1 117 1 222 1 239 1 372 4 
354 2 199 2 256 1 257 2 305 2 147 1 153 1 372 2 
44 1 205 1 119 1 
58 1 338 1 184 1 281 1 205 2 119 2 
205 1 119 1 
205 1 119 1 
184 1 281 1 
184 1 281 1 
184 1 281 1 
225 1 205 1 119 1 
225 1 205 1 119 1 
225 1 205 1 119 1 
370 1 205 1 119 1 
370 1 205 1 119 1 
370 1 205 1 119 1 
350 2 121 1 321 2 224 1 155 2 261 2 64 2 216 1 215 2 72 1 52 1 80 1 9 2 287 1 
350 1 172 1 77 1 199 1 321 1 155 1 257 1 61 1 175 1 261 1 64 1 215 1 72 1 354 1 9 1 305 1 336 1 372 1 
60 2 249 1 358 1 75 2 70 1 
358 1 75 1 253 1 
75 1 70 1 253 1 
91 1 60 1 249 1 358 2 75 3 70 1 
60 1 249 1 358 1 26 1 75 2 70 1 
197 1 106 1 321 5 200 3 240 2 69 1 111 1 151 1 175 1 247 1 300 1 89 2 30 1 11 1 336 1 14 1 77 1 310 1 155 5 364 1 78 1 159 1 368 2 262 1 216 2 193 3 45 1 345 2 316 1 237 4 18 1 19 1 
106 1 321 9 200 9 69 2 297 1 243 1 111 3 151 3 175 4 247 3 114 5 300 1 115 1 89 6 30 3 31 1 11 2 14 2 155 9 157 1 364 3 159 1 341 1 368 6 262 3 216 5 193 8 45 2 345 6 236 5 316 2 346 1 237 7 18 1 19 6 
197 1 199 1 1 1 321 3 240 1 200 4 69 1 111 1 175 1 151 1 247 1 354 1 300 1 115 1 89 2 305 1 30 1 11 1 14 1 310 1 256 1 257 1 155 3 364 2 368 2 262 1 216 3 193 3 219 1 45 1 316 1 345 2 147 1 237 2 222 1 223 1 372 1 
321 4 1 1 175 2 89 4 11 1 14 1 193 3 345 3 346 1 147 1 237 3 197 1 199 1 240 2 200 5 69 1 297 1 111 1 151 2 247 2 300 1 354 1 115 1 30 1 305 1 310 1 256 1 155 4 257 1 364 2 157 1 368 3 262 2 216 3 45 1 219 1 316 1 223 1 222 1 372 1 
277 1 
291 1 38 1 288 1 
38 1 62 1 
38 1 95 1 
291 2 210 1 38 3 365 1 107 1 95 1 
38 1 365 1 95 1 
38 1 167 1 
138 1 272 3 108 1 63 4 227 1 176 1 262 1 275 1 152 1 164 7 248 1 30 1 180 2 195 1 371 1 308 3 118 1 170 2 
48 1 295 1 272 13 108 1 111 3 176 1 227 3 174 1 151 3 275 1 152 2 247 3 248 7 302 1 74 1 30 5 180 6 361 1 94 1 209 1 308 17 138 2 366 4 63 17 189 1 262 5 286 2 102 1 164 34 47 3 195 1 371 3 269 1 170 1 196 1 
293 1 295 2 272 4 108 1 174 2 176 1 227 1 152 1 302 2 248 1 30 1 180 3 209 2 308 4 138 1 63 5 189 1 262 1 286 4 164 9 84 1 195 1 371 1 170 2 
138 1 272 3 108 1 63 4 227 1 176 1 262 1 275 1 152 1 164 7 248 1 30 1 180 2 195 1 371 1 308 3 170 2 
138 1 272 3 108 1 63 4 227 1 176 1 262 1 275 1 152 1 164 7 248 1 30 1 180 2 195 1 371 1 308 3 170 2 
198 1 20 1 23 1 241 1 203 2 177 1 112 2 246 1 327 1 328 1 53 1 134 2 304 1 206 1 182 1 32 2 57 1 95 1 59 1 38 1 101 1 144 1 85 1 
198 1 320 1 86 1 20 1 4 1 241 1 70 1 203 1 112 1 327 1 246 1 328 1 91 1 134 1 304 1 357 1 358 1 32 1 75 2 92 1 54 1 253 1 57 1 59 1 37 1 313 1 
198 1 320 1 173 1 86 1 20 1 21 1 4 1 241 2 70 1 203 1 112 1 327 1 246 1 328 2 91 1 134 1 304 1 358 1 32 1 75 2 92 1 54 1 253 1 337 1 57 1 59 1 37 1 339 1 313 1 342 1 
198 1 173 1 86 1 20 1 21 1 4 1 241 3 70 1 203 1 112 1 327 1 246 1 328 3 91 1 134 1 304 1 357 1 358 1 32 1 182 1 75 2 54 1 253 1 185 1 57 1 59 1 37 1 339 1 313 1 342 2 
173 1 20 1 21 1 4 1 241 2 70 1 203 1 112 1 327 1 246 1 328 2 91 1 134 1 304 1 357 1 32 1 358 1 75 2 54 1 185 1 253 1 57 1 339 1 313 1 342 2 
319 1 
270 2 271 2 321 4 322 1 132 1 87 1 50 1 177 1 276 1 327 2 326 1 89 2 53 2 332 2 11 1 334 1 280 2 57 1 95 1 13 2 190 1 193 2 143 1 145 1 18 3 19 6 290 1 20 2 296 1 199 1 200 2 69 1 244 1 246 1 354 1 304 2 360 2 254 2 256 1 155 4 38 1 257 1 364 2 159 1 367 1 42 1 216 1 369 2 165 1 82 1 45 1 316 1 85 1 
270 1 290 1 321 2 296 1 199 1 256 1 155 2 257 1 132 1 100 1 190 1 244 1 87 1 276 1 42 1 354 1 165 1 334 1 18 1 19 2 
290 1 13 1 321 1 296 1 199 1 256 1 155 1 257 1 132 1 190 1 244 1 87 1 276 1 42 1 369 1 354 1 165 1 334 1 
290 1 270 1 271 1 199 1 296 1 321 2 132 1 244 1 87 1 276 1 354 1 334 1 13 1 256 1 257 1 155 2 100 1 190 1 42 1 369 1 165 1 18 1 19 2 
270 4 271 4 1 1 321 4 132 1 87 1 276 1 329 1 89 1 135 1 332 2 334 1 280 2 13 2 100 1 190 1 140 1 193 1 145 1 147 1 18 3 348 1 19 7 290 1 199 2 296 1 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 155 4 257 2 364 2 159 1 42 1 216 1 369 2 165 1 82 1 264 1 219 1 45 1 316 1 222 1 223 1 372 1 
270 2 271 2 1 1 321 3 132 1 87 1 276 1 50 1 89 1 332 2 334 1 280 2 13 2 190 1 193 1 145 1 147 1 18 2 19 4 290 1 199 2 296 1 200 2 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 257 2 155 3 364 2 159 1 42 1 216 1 369 2 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
270 2 271 2 1 1 321 3 132 1 87 1 276 1 329 1 89 1 332 2 334 1 280 2 13 2 190 1 140 1 193 1 145 1 147 1 348 1 18 2 19 4 290 1 296 1 199 2 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 155 3 257 2 364 2 159 1 42 1 216 1 369 2 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
270 2 271 2 1 1 321 3 132 1 87 1 276 1 329 1 89 1 332 2 334 1 280 2 13 2 190 1 140 1 193 1 145 1 147 1 348 1 18 2 19 4 290 1 296 1 199 2 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 155 3 257 2 364 2 159 1 42 1 216 1 369 2 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
290 1 321 1 296 1 199 1 256 1 155 1 257 1 132 1 190 1 244 1 87 1 276 1 42 1 65 1 354 1 165 1 334 1 
270 3 271 3 1 1 321 3 132 1 87 1 276 1 329 1 89 1 135 1 332 2 334 1 280 2 13 3 190 1 140 1 193 1 145 1 147 1 348 1 18 2 19 5 290 1 296 1 199 2 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 155 3 257 2 364 2 159 1 42 1 216 1 369 3 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
270 3 271 3 1 1 321 3 132 1 87 1 276 1 329 1 89 1 135 1 332 2 334 1 280 2 13 3 190 1 140 1 193 1 145 1 147 1 348 1 18 2 19 5 290 1 296 1 199 2 69 1 244 1 354 2 300 1 305 1 360 2 254 2 256 2 155 3 257 2 364 2 159 1 42 1 216 1 369 3 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
270 2 271 2 1 1 321 3 132 1 87 1 276 1 50 1 89 1 332 2 334 1 13 2 190 1 193 1 142 2 147 1 18 2 19 4 290 1 199 2 296 1 200 2 69 1 244 1 354 2 300 1 305 1 360 2 256 2 257 2 155 3 159 1 79 1 126 2 42 1 216 1 369 2 165 1 82 1 219 1 45 1 316 1 222 1 223 1 372 1 
351 1 295 2 0 2 199 1 20 8 242 2 174 2 177 1 246 2 327 7 354 1 53 2 302 2 357 1 304 8 303 1 305 1 183 1 93 1 33 1 56 1 337 1 57 2 209 2 308 1 95 2 257 1 38 3 156 2 63 1 312 1 286 4 66 1 164 2 166 1 238 1 372 1 130 1 85 1 
272 1 295 1 0 1 199 1 274 1 242 1 111 1 174 1 151 1 247 1 354 1 302 1 305 1 30 1 180 1 209 1 308 2 231 1 257 1 258 1 63 1 285 1 161 1 262 1 286 2 164 3 222 1 67 1 372 1 
295 1 0 1 272 2 108 1 274 1 242 1 176 1 174 1 227 1 302 1 30 1 180 2 183 1 209 1 308 3 231 1 63 3 161 1 262 1 286 2 164 6 195 1 288 1 371 1 239 2 170 1 
272 2 295 2 0 1 274 13 242 2 111 1 226 1 174 2 151 3 113 1 247 3 248 1 302 2 303 1 74 2 30 1 180 1 308 7 209 2 231 13 366 4 63 10 160 1 285 1 262 3 161 4 286 4 102 1 344 1 164 17 47 3 239 1 130 1 
352 1 0 1 295 1 20 1 199 2 242 1 174 1 246 1 327 1 354 2 90 1 53 1 302 1 304 1 303 1 305 1 57 1 117 1 95 1 36 1 35 1 209 1 308 1 98 1 38 1 257 1 365 1 63 1 285 1 161 1 163 1 286 2 192 1 66 1 164 2 239 1 372 1 130 1 
0 3 272 8 274 7 227 1 176 1 174 3 327 3 10 1 53 1 180 4 181 2 279 2 57 2 95 2 96 2 231 7 63 10 285 1 286 6 192 2 66 1 195 1 239 2 295 3 20 3 199 3 108 1 109 2 242 3 111 2 151 2 246 2 247 2 354 3 302 3 248 4 357 1 303 1 304 3 30 3 305 1 117 1 308 10 209 3 36 2 257 1 38 2 365 2 158 1 161 7 262 3 163 2 162 2 164 20 220 1 371 1 170 1 130 1 372 1 
272 1 0 1 295 1 231 1 274 1 63 2 242 1 174 1 151 1 161 1 262 1 286 2 164 2 248 1 302 1 183 1 209 1 289 1 
272 1 0 1 295 1 231 1 353 1 274 1 242 1 111 1 174 1 161 1 286 2 164 2 302 1 30 1 180 1 183 1 209 1 308 2 
272 2 0 1 295 1 231 2 274 2 63 2 242 1 111 1 174 1 151 1 161 2 262 1 286 2 247 1 164 4 248 1 302 1 30 1 180 1 183 1 308 2 209 1 
272 1 0 1 295 1 231 1 274 1 63 2 242 1 174 1 151 1 161 1 262 1 286 2 164 2 248 1 302 1 238 1 209 1 289 1 
272 1 0 1 295 1 231 1 353 1 274 1 242 1 111 1 174 1 161 1 286 2 164 2 302 1 30 1 180 1 238 1 209 1 308 2 
272 2 0 1 295 1 231 2 274 2 63 2 242 1 111 1 174 1 151 1 161 2 262 1 286 2 247 1 164 4 248 1 302 1 30 1 180 1 238 1 308 2 209 1 
272 2 0 1 295 1 231 2 274 2 63 2 242 1 111 1 174 1 151 1 161 2 262 1 286 2 247 1 164 4 248 1 302 1 30 1 180 1 308 2 209 1 
0 1 295 1 20 1 199 1 242 1 174 1 246 1 327 1 354 1 53 1 302 1 303 1 304 1 279 1 57 1 95 1 36 1 209 1 308 1 38 1 365 1 63 1 163 1 286 2 192 1 164 2 239 1 130 1 
0 1 295 1 20 1 199 1 242 1 174 1 246 1 327 1 354 1 53 1 302 1 303 1 304 1 57 1 95 1 209 1 308 1 186 1 38 1 365 1 63 1 40 1 286 2 192 1 164 2 128 1 239 1 130 1 
272 2 0 1 295 1 231 2 274 2 63 2 242 1 111 1 285 1 174 1 151 1 161 2 262 1 286 2 247 1 164 4 248 1 302 1 30 1 180 1 308 2 209 1 
272 2 0 1 295 1 20 1 199 1 274 2 242 1 111 1 151 1 174 1 246 1 327 1 247 1 354 1 248 1 302 1 304 1 30 1 180 1 181 1 279 1 57 1 337 1 308 2 36 1 95 1 209 1 231 2 38 1 365 1 63 2 161 2 262 1 163 1 286 2 192 1 164 4 
272 1 295 1 0 1 199 1 274 1 242 1 111 1 174 1 151 1 247 1 354 1 248 1 302 1 30 1 305 1 308 1 209 1 231 1 257 1 258 1 63 2 285 1 262 1 161 1 286 2 164 3 235 1 222 1 372 1 
295 2 272 6 5 1 111 3 174 2 151 3 247 3 302 2 248 3 74 1 30 3 180 3 116 1 209 2 76 1 308 10 282 1 211 1 125 1 366 2 63 9 191 2 262 3 286 4 102 1 164 19 46 2 47 1 84 1 168 1 
295 1 125 2 366 2 63 6 6 1 151 1 174 1 262 1 234 1 286 2 102 2 247 1 164 11 83 1 302 1 46 2 47 2 84 1 116 1 168 2 76 1 209 1 308 5 
295 2 272 3 5 1 6 1 111 2 174 2 151 4 247 4 302 2 248 2 74 2 30 2 180 1 116 1 208 1 209 2 76 1 308 13 282 1 125 2 366 5 63 14 191 1 234 1 262 4 286 4 102 3 164 27 83 1 46 3 47 3 84 1 168 1 
295 2 272 5 5 1 6 1 111 3 174 2 151 4 247 4 302 2 248 2 74 2 30 3 180 3 116 1 208 1 209 2 76 1 308 15 282 1 125 2 366 5 63 14 191 1 234 1 262 4 286 4 102 3 164 29 83 1 46 3 47 3 84 1 168 1 
295 1 272 10 108 1 6 1 111 5 227 1 176 1 174 1 151 6 113 2 247 6 302 1 248 4 74 2 30 6 180 6 359 1 116 1 209 1 76 1 308 19 232 1 125 1 366 4 63 22 234 1 262 7 286 2 102 2 164 41 83 1 46 2 47 4 84 1 195 1 168 1 371 1 170 1 
350 1 52 1 9 1 356 1 261 1 64 1 
350 1 363 1 9 1 261 1 64 1 
61 1 
350 1 121 1 321 1 224 1 155 1 261 1 64 1 216 1 215 2 72 1 52 1 80 1 9 1 287 1 
350 1 121 1 321 1 224 1 155 1 261 1 64 1 216 1 215 2 72 1 52 1 80 1 9 1 287 1 
350 1 121 1 321 1 224 1 155 1 261 1 64 1 216 1 215 2 72 1 52 1 80 1 9 1 287 1 
188 1 
188 1 
349 1 
349 1 
34 1 137 1 
350 1 121 1 172 1 77 1 321 1 155 1 61 1 175 1 261 1 64 1 215 1 80 1 9 1 237 1 335 1 336 1 
188 1 
349 1 
351 1 0 1 295 1 20 2 199 2 242 1 174 1 327 2 28 1 29 1 354 2 302 1 304 2 303 1 278 1 207 1 209 1 308 1 257 2 156 2 63 1 312 1 285 1 286 2 16 1 164 2 130 1 
20 1 38 1 201 1 110 1 101 1 177 1 246 1 327 1 53 1 304 1 32 1 57 1 95 1 85 1 
86 1 20 1 70 1 110 1 71 1 313 1 246 1 327 1 91 1 357 1 304 1 358 1 32 1 75 2 347 1 54 1 253 1 57 1 
86 1 20 2 70 1 110 1 71 1 313 1 246 1 327 2 91 1 357 1 304 2 358 1 32 1 75 2 347 1 54 1 253 1 57 1 337 1 
86 1 20 1 70 1 71 1 313 1 327 1 246 1 331 1 91 1 357 1 304 1 358 1 32 1 75 2 54 1 253 1 57 1 
255 1 
69 1 159 1 216 1 193 1 300 1 81 1 89 1 45 1 316 1 252 1 
200 10 364 5 368 5 111 2 151 2 262 2 162 1 216 5 194 1 193 5 247 2 89 5 345 5 30 2 317 2 
300 1 321 1 155 1 18 1 19 1 216 1 
294 1 322 1 20 4 321 3 22 2 69 2 177 1 246 1 327 4 115 1 89 2 179 1 53 2 304 4 11 2 362 1 57 1 95 1 38 1 155 3 159 1 367 1 193 2 143 2 45 2 316 2 18 2 19 4 85 1 
193 1 300 1 89 1 81 1 252 1 288 1 216 1 
321 1 200 1 69 1 300 1 89 1 280 1 254 1 155 1 364 1 159 1 216 2 193 1 45 1 145 1 316 1 18 1 19 1 
20 1 69 1 159 1 246 1 327 1 301 1 53 1 45 1 304 1 316 1 228 1 57 1 
200 4 69 1 6 1 111 2 151 2 247 2 89 4 30 2 359 1 364 2 232 1 366 1 159 1 368 5 234 1 262 2 216 2 193 6 102 1 83 1 45 1 345 5 316 1 47 1 
199 1 321 1 1 1 69 1 227 1 354 1 329 1 89 2 30 1 305 1 361 1 256 1 155 1 257 1 159 1 262 2 194 1 193 2 45 1 219 1 316 1 147 1 195 1 317 2 371 1 223 1 222 1 372 1 
295 1 0 1 20 1 199 3 242 1 133 1 174 1 327 1 246 1 354 3 53 1 302 1 304 1 305 2 279 1 57 1 308 1 209 1 36 1 95 1 257 2 38 1 365 1 286 2 163 1 192 1 164 1 219 1 239 1 222 2 130 1 372 2 
200 4 364 2 69 1 159 1 368 2 216 4 193 1 300 2 143 1 89 2 45 1 345 2 316 1 11 1 170 1 
51 1 9 1 2 1 64 1 137 1 
9 1 39 1 64 1 
9 1 39 1 64 1 
9 1 39 1 64 1 
9 1 265 1 64 1 
9 1 265 1 64 1 
9 1 265 1 64 1 
9 1 64 1 
205 1 119 1 
295 1 272 5 63 5 174 1 227 2 262 2 286 2 164 10 302 1 248 2 30 2 180 3 84 1 361 1 195 1 371 2 209 1 308 5 
295 1 272 1 63 2 174 1 151 1 262 1 286 2 164 2 302 1 248 1 84 1 209 1 
272 2 295 1 63 2 111 1 174 1 151 1 262 1 286 2 247 1 164 4 302 1 248 1 30 1 180 1 84 1 308 2 209 1 
213 1 295 3 272 2 189 1 5 1 63 1 174 3 227 1 286 6 164 3 302 3 248 1 180 1 84 1 371 1 308 2 209 3 
295 5 272 12 108 1 5 1 111 3 227 3 176 1 174 5 151 3 247 3 302 5 248 5 74 1 30 5 180 7 94 1 308 18 209 5 213 1 189 2 366 4 63 16 262 5 286 10 102 1 164 34 47 3 146 1 84 1 195 2 371 3 269 1 170 1 196 1 
272 2 295 1 108 1 227 1 174 1 151 1 176 1 247 1 302 1 74 1 30 1 180 2 308 5 209 1 366 2 63 6 262 2 286 2 102 1 164 11 83 1 47 1 84 1 195 1 371 1 170 1 
295 2 272 3 108 1 227 1 176 1 174 2 151 1 247 1 302 2 248 1 74 1 30 1 180 2 308 5 209 2 366 2 63 6 262 2 286 4 102 1 164 11 83 1 47 1 146 1 84 1 195 1 371 1 170 1 
295 1 63 3 366 1 6 1 151 1 174 1 262 1 234 1 286 2 102 1 247 1 164 5 83 1 302 1 47 1 84 1 209 1 308 2 
272 1 295 1 232 1 63 6 366 1 6 1 111 1 151 2 174 1 262 2 234 1 286 2 102 1 247 2 164 10 83 1 302 1 30 1 180 1 47 1 359 1 84 1 209 1 308 4 
272 2 295 1 108 1 227 1 174 1 151 1 176 1 247 1 302 1 74 1 30 1 180 2 308 5 209 1 366 2 63 6 262 2 286 2 102 1 164 11 83 1 47 1 84 1 195 1 371 1 170 1 
295 1 272 2 6 1 111 2 174 1 151 2 247 2 248 1 302 1 30 2 180 1 359 1 308 6 209 1 232 1 366 1 63 6 234 1 262 2 286 2 102 1 164 12 83 1 47 1 84 1 
295 2 63 3 366 1 6 1 151 1 174 2 262 1 234 1 286 4 102 1 247 1 164 5 83 1 302 2 47 1 146 1 84 1 209 2 308 2 
295 4 272 6 5 1 6 1 111 2 174 4 151 3 247 3 248 3 302 4 30 2 180 3 359 1 308 7 209 4 232 1 366 1 63 9 189 2 234 1 262 3 286 8 102 1 164 16 83 1 47 1 84 1 
272 6 108 1 63 3 176 2 227 3 262 1 164 7 248 3 30 1 180 3 195 1 371 3 308 4 
295 2 63 3 5 1 366 1 6 1 151 1 174 2 262 1 234 1 286 4 102 1 247 1 164 5 83 1 302 2 47 1 84 1 209 2 308 2 
272 3 295 2 108 1 63 4 189 1 174 2 176 1 227 1 262 1 286 4 164 8 248 1 302 2 30 1 180 2 195 1 371 1 308 4 209 2 170 1 
164 6 272 2 30 1 180 2 108 1 63 3 195 1 227 1 176 1 288 1 262 1 371 1 308 3 170 1 
272 2 295 1 63 2 111 1 174 1 151 1 262 1 286 2 247 1 164 4 302 1 248 1 30 1 180 1 146 1 308 2 209 1 
272 2 366 2 63 3 111 1 151 1 262 1 102 1 247 1 164 7 248 1 74 1 30 1 180 1 47 1 308 4 
272 9 295 2 108 1 111 2 227 2 176 1 151 2 174 2 247 2 113 1 248 4 302 2 74 1 30 3 180 5 308 12 209 2 213 1 63 11 366 2 189 2 262 3 286 4 344 1 164 23 47 2 195 1 371 2 170 1 
164 1 366 1 308 1 
164 1 47 1 63 1 
295 1 272 3 63 3 111 1 174 1 151 1 262 1 286 2 162 1 247 1 164 6 302 1 248 1 30 1 180 2 146 1 209 1 308 3 
295 1 272 2 6 1 111 2 174 1 151 2 247 2 248 1 302 1 30 2 180 1 359 1 308 6 209 1 232 1 366 1 63 6 234 1 262 2 286 2 102 1 164 12 83 1 47 1 84 1 
272 2 63 3 227 1 262 1 164 6 248 1 30 1 180 1 195 1 371 1 308 3 
213 1 272 2 295 1 108 1 63 1 189 1 227 1 176 1 174 1 286 2 164 3 248 1 302 1 180 1 371 1 308 2 209 1 
354 1 199 1 257 1 214 1 55 1 239 1 42 1 
154 1 199 1 257 1 214 1 202 1 42 1 141 1 88 1 354 1 267 1 55 1 239 1 
20 4 38 1 177 1 246 1 327 4 299 1 53 1 304 4 169 1 337 1 57 1 95 1 85 1 
20 2 38 1 22 1 365 1 233 1 327 2 246 2 17 1 304 2 104 1 220 1 266 1 57 1 95 1 
20 1 53 1 304 1 75 1 70 1 54 1 253 1 57 1 246 1 327 1 
29 1 351 1 20 2 357 1 304 2 337 1 327 2 
351 1 20 5 38 3 22 1 177 1 327 4 246 2 53 1 304 5 93 1 56 1 169 1 337 1 57 2 95 2 85 1 
351 1 20 5 38 3 22 1 177 1 327 4 246 2 53 1 304 5 306 1 56 1 169 1 337 1 57 2 95 2 85 1 
20 1 53 1 38 1 304 1 288 1 57 1 177 1 95 1 246 1 85 1 327 1 
199 2 20 1 38 1 257 1 365 1 192 1 246 1 327 1 66 1 354 2 53 1 304 1 305 1 57 1 239 1 95 1 36 1 372 1 
20 1 199 2 22 1 132 1 327 1 246 1 354 2 304 1 305 2 334 1 57 1 36 1 95 2 256 1 257 2 38 3 365 2 192 1 66 1 315 1 167 1 239 1 372 1 
20 2 199 2 22 1 132 1 327 2 246 1 299 1 354 2 304 2 305 2 334 1 57 1 95 2 186 1 256 1 257 2 38 3 365 2 192 1 66 1 315 1 167 1 239 1 372 1 
291 1 20 3 321 2 22 1 327 3 246 1 299 1 300 1 53 1 304 3 307 1 57 1 95 1 15 1 38 4 155 2 365 1 62 1 216 1 263 1 315 1 167 1 19 1 
291 1 321 2 20 3 155 2 38 4 365 1 22 1 62 1 324 1 216 1 246 1 327 3 263 1 299 1 300 1 53 1 167 1 315 1 304 3 19 1 57 1 95 1 
20 1 166 1 304 1 57 1 246 1 327 1 
351 1 20 7 156 1 38 3 365 1 107 1 233 1 327 6 246 3 17 1 166 1 53 2 357 1 304 7 93 1 33 1 56 1 337 1 221 1 57 2 95 2 
0 2 272 2 274 1 174 2 176 1 227 1 327 1 181 1 180 2 279 1 337 1 57 1 95 1 96 1 231 1 63 3 285 1 286 4 192 1 16 1 66 1 195 1 239 2 295 2 20 1 199 2 108 1 242 2 246 1 354 2 302 2 304 1 305 1 30 1 36 1 209 2 308 3 257 1 38 1 365 1 161 1 262 1 163 1 164 6 371 1 372 1 170 1 
171 1 291 1 321 3 20 1 69 2 324 1 327 1 300 1 89 1 53 1 304 1 252 1 362 1 230 1 155 3 139 1 38 2 159 2 62 1 216 1 193 1 263 1 81 1 45 2 316 2 237 1 18 1 19 2 
20 1 166 1 304 1 228 1 57 1 246 1 327 1 
199 2 20 1 186 1 38 1 257 1 365 1 192 1 246 1 327 1 66 1 354 2 53 1 304 1 305 1 57 1 239 1 95 1 372 1 
20 1 38 1 22 1 365 1 107 1 233 1 327 1 246 2 17 1 304 1 221 1 57 1 95 1 
292 1 122 1 199 1 257 1 28 1 354 1 8 1 278 1 207 1 
292 1 340 1 12 1 
292 1 122 1 355 1 8 1 239 1 
292 1 105 1 199 1 321 1 1 1 132 1 24 1 276 1 354 1 300 1 355 1 8 1 305 1 334 1 12 1 122 1 256 2 257 1 155 1 340 1 216 1 219 1 147 1 237 1 222 1 223 1 372 1 
198 1 320 1 328 1 173 1 59 1 21 1 339 1 241 1 
198 1 173 2 59 1 339 2 21 3 311 1 241 4 49 1 260 1 204 1 342 2 328 4 218 1 136 1 
320 1 198 1 212 1 173 1 59 1 99 1 339 1 311 1 241 1 328 1 129 1 
320 1 198 1 173 1 59 1 21 1 339 1 123 1 241 3 49 2 204 2 328 3 218 1 
330 2 149 1 21 2 229 1 
127 1 198 1 320 1 328 1 59 1 241 1 
342 1 198 1 320 1 328 2 173 1 59 1 21 1 339 1 241 2 97 1 
73 1 
198 1 320 1 328 1 173 1 59 1 21 1 339 1 241 1 
173 1 21 1 339 1 288 1 
198 1 328 1 173 1 59 1 21 1 339 1 241 1 
241 1 203 1 112 1 
320 1 198 1 173 1 284 1 59 1 21 1 339 1 241 3 49 2 204 1 328 3 218 1 
342 1 198 1 328 2 173 1 59 1 21 1 339 1 241 2 325 1 
198 1 320 1 328 1 273 1 59 1 21 1 358 1 241 1 75 1 260 1 253 1 
198 1 320 1 328 1 173 1 59 1 21 1 241 1 
198 1 320 1 328 1 173 2 59 1 339 1 241 1 
198 2 320 1 328 2 173 1 309 1 59 2 21 1 241 2 25 1 148 1 
320 1 198 1 173 1 59 1 339 1 21 2 241 3 260 1 342 2 328 3 314 1 136 1 97 1 
320 1 198 1 173 1 59 1 21 1 339 1 241 2 70 1 7 1 342 1 328 2 91 1 358 1 75 2 253 1 
283 1 320 1 198 2 173 1 59 2 339 1 21 2 241 4 260 1 325 1 342 2 328 4 136 1 
342 1 198 1 320 1 328 3 173 1 59 1 21 1 339 1 241 3 49 1 97 1 
21 1 311 1 260 1 136 1 
173 1 21 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (113,199) 307 (175,183) (175,183) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (113,199) 307 (175,183) (175,183) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (113,199) 307 (175,183) (175,183) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (113,199) 307 (175,183) (175,183) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (65,326) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (91,278,310) (13,163,335) (13,163,335) (13,163,335) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 263 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 130 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 192 333 153 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 285 (185,230) (185,230) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (91,278,310) (91,278,310) (91,278,310) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 217 269 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 256 284 66 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 6 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 192 333 153 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 192 88 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 20 1 307 1 175 1 281 1 183 1 22 1 122 1 32 1 79 1 113 1 
240 1 20 1 307 1 175 1 281 1 183 1 22 1 122 1 32 1 79 1 113 1 
240 1 20 1 307 1 175 1 281 1 183 1 22 1 122 1 32 1 79 1 113 1 
240 1 20 1 307 1 175 1 281 1 183 1 22 1 122 1 32 1 79 1 113 1 
164 1 166 1 157 1 44 1 76 2 137 1 79 4 32 4 107 1 366 1 20 1 173 2 212 3 281 1 22 1 226 3 112 1 227 1 
240 1 26 1 166 1 137 1 79 2 32 2 122 1 364 1 221 1 366 1 295 1 20 1 212 1 281 1 22 1 227 1 
166 1 157 1 76 1 137 1 79 3 32 3 122 1 20 1 199 1 212 2 281 2 22 2 226 1 
164 1 166 1 76 4 32 9 79 9 107 1 199 1 173 2 330 1 226 7 112 1 227 1 274 1 157 3 44 1 254 1 137 1 122 1 366 1 20 1 212 5 281 2 22 2 372 1 
164 1 166 1 76 4 32 9 79 9 107 1 199 1 173 2 330 1 226 7 112 1 227 1 274 1 157 3 44 1 254 1 137 1 122 1 366 1 20 1 212 5 281 2 22 2 372 1 
130 1 57 1 368 1 
287 2 82 1 368 1 
28 2 67 2 131 2 243 2 262 1 338 2 352 1 33 2 
239 1 1 1 73 1 242 2 101 1 324 1 28 3 285 1 243 2 77 1 33 2 148 1 35 2 36 1 247 1 224 1 131 2 273 2 12 1 352 1 289 1 115 1 151 1 121 1 337 2 338 3 363 2 230 1 207 1 279 1 258 1 186 1 47 1 67 2 124 1 262 1 370 1 
41 1 345 1 28 1 67 1 131 1 243 1 362 1 338 1 352 1 33 1 
50 1 301 1 60 1 41 1 156 1 28 1 74 1 243 1 256 1 338 1 80 1 297 1 57 1 368 1 
301 1 60 1 41 1 156 2 28 1 74 2 243 1 338 1 33 1 80 1 297 1 67 1 131 1 57 1 368 1 
171 1 347 1 21 1 156 1 74 1 
347 1 21 1 156 2 74 2 57 1 141 1 368 1 317 1 
21 1 156 1 74 1 
41 1 345 1 156 1 74 1 28 1 243 1 362 1 293 1 338 1 33 1 347 1 67 1 131 1 352 1 
368 1 
59 1 347 1 21 1 156 2 74 2 57 1 368 1 317 1 
3 1 144 2 359 1 156 5 74 5 75 2 169 1 317 1 339 2 160 1 347 2 21 2 319 1 123 1 57 1 38 1 368 1 149 1 39 1 
130 1 262 1 
323 1 126 1 28 2 243 2 338 2 33 1 67 1 131 1 262 2 
61 1 65 1 114 1 
115 1 242 1 324 1 28 1 285 1 77 1 338 1 363 1 208 1 207 1 186 1 262 1 273 1 12 1 370 1 289 1 
51 1 323 1 284 1 193 1 28 5 243 5 256 1 338 5 33 4 67 4 131 1 10 1 142 2 262 1 
109 1 41 1 28 2 67 2 243 2 362 1 338 2 33 2 
115 1 242 1 324 1 28 2 285 1 243 1 77 1 338 2 363 1 33 1 207 1 186 1 65 1 67 1 10 1 142 1 273 1 12 1 370 1 289 1 
28 3 67 3 131 1 243 3 262 1 142 1 338 3 33 3 
41 1 28 1 67 1 243 1 362 1 338 1 33 1 
41 1 323 1 126 1 28 1 67 1 131 1 243 1 338 1 33 1 
239 1 301 1 1 1 73 1 242 1 101 1 323 1 324 1 28 4 74 1 285 1 243 3 77 1 33 3 80 1 148 1 35 1 36 1 224 1 131 2 10 1 273 1 12 1 352 1 289 1 115 1 60 1 41 1 156 1 337 2 338 4 363 1 230 1 207 1 46 1 279 1 186 1 297 1 67 3 124 1 262 1 320 1 142 1 370 1 
284 1 28 2 67 1 243 2 262 1 142 1 256 1 338 2 33 1 
301 1 60 1 323 1 41 1 156 1 74 1 28 3 243 3 338 3 33 3 196 1 80 1 297 1 67 3 131 1 368 1 10 1 142 2 320 1 
61 1 323 1 28 2 243 2 338 2 33 2 65 1 67 2 131 1 142 1 
115 1 242 1 324 1 28 1 285 1 77 1 338 1 363 1 207 1 186 1 262 1 273 1 370 1 12 1 289 1 
242 1 324 1 28 1 334 1 205 1 77 1 338 1 363 1 207 1 186 1 262 1 273 1 370 1 12 1 289 1 
201 1 326 1 
41 1 297 1 109 1 28 1 67 1 243 1 338 1 33 1 
313 1 155 1 
313 1 155 1 
25 1 140 1 
25 1 140 1 
25 1 140 1 
202 1 313 1 155 1 
313 1 155 1 43 1 
150 1 313 2 25 1 155 2 140 1 45 1 
202 1 313 1 155 1 
202 1 313 1 155 1 
313 1 155 1 303 1 
313 1 155 1 303 1 
313 1 155 1 303 1 
72 1 283 1 74 1 28 2 243 2 33 2 222 1 58 1 134 1 229 1 311 1 313 1 155 1 156 1 43 1 120 1 138 1 338 2 294 1 209 1 64 1 67 2 262 1 70 1 
150 1 72 2 313 2 155 2 90 1 156 2 74 2 346 1 138 3 231 1 294 2 222 2 110 1 348 1 161 1 368 1 58 1 215 2 311 2 
366 1 112 1 227 1 
366 1 295 1 227 1 
366 3 295 1 112 2 162 1 228 1 54 1 
366 2 295 1 112 1 162 1 54 1 292 1 
366 2 295 1 112 1 162 2 54 1 
144 1 345 1 28 1 74 5 75 1 243 1 195 1 169 1 5 1 33 1 287 1 55 1 347 4 131 1 225 1 57 1 149 1 134 1 39 2 352 1 152 1 315 1 356 1 251 1 41 1 156 5 93 1 362 1 317 1 338 1 293 1 339 1 21 1 67 1 368 1 71 2 216 1 
144 1 345 1 28 1 74 5 75 1 243 1 195 1 169 1 33 1 287 1 171 2 55 1 347 4 131 1 225 1 57 1 149 1 134 1 39 2 352 1 152 1 315 1 357 1 251 1 154 2 41 1 156 5 93 1 317 1 362 1 293 1 338 1 339 1 21 3 211 1 67 1 368 1 216 1 
144 1 345 1 28 1 74 3 75 1 243 1 195 1 169 3 5 1 33 1 287 3 82 1 347 2 131 1 57 1 225 1 134 1 352 1 39 2 152 2 356 1 315 1 251 1 41 1 156 3 181 1 93 2 362 1 338 1 293 1 339 1 67 1 123 1 368 2 71 1 216 1 343 1 
144 1 74 4 75 1 195 1 169 5 5 1 287 6 82 2 347 3 57 1 225 1 134 2 39 4 152 4 356 1 315 2 250 1 251 2 156 4 181 2 93 4 210 1 339 1 123 1 368 3 282 1 71 2 343 2 216 2 
130 1 12 1 49 1 
217 1 12 1 
298 1 
207 1 12 1 370 1 
203 1 12 1 
12 1 370 1 
207 1 103 1 249 1 12 3 370 1 49 2 
239 3 322 3 180 1 251 1 277 1 168 1 94 2 170 1 184 1 35 7 296 1 198 1 305 1 47 4 111 1 343 1 312 2 
239 3 322 3 180 1 251 1 277 1 168 1 94 2 170 1 184 1 35 7 296 1 198 1 305 1 47 4 111 1 343 1 312 2 
239 3 322 3 180 1 251 1 277 1 168 1 94 2 170 1 184 1 35 7 296 1 198 1 305 1 200 1 47 4 111 1 343 1 312 2 
239 11 0 1 322 7 73 1 194 3 168 1 147 1 245 1 35 22 198 1 36 1 223 1 224 1 111 4 271 1 11 1 312 3 315 3 89 1 316 4 251 3 181 3 277 1 337 2 94 1 184 1 47 11 124 1 216 3 343 3 
239 4 241 1 322 4 73 2 168 1 245 1 35 9 36 2 198 1 305 1 224 2 111 1 312 3 180 1 251 1 182 1 277 1 337 4 94 2 184 1 296 1 47 5 124 2 343 1 
353 1 13 1 91 1 335 1 79 1 32 1 122 1 127 1 108 1 20 1 8 1 281 1 22 1 342 1 163 1 
242 1 166 1 32 3 79 3 218 1 127 1 83 1 8 1 112 1 226 2 227 1 228 1 273 1 289 1 353 1 355 1 91 1 335 1 137 1 122 1 363 1 366 2 295 1 186 1 212 1 341 1 281 1 22 1 342 1 163 1 
242 1 166 1 32 2 79 2 218 1 127 1 83 1 8 1 226 2 112 1 228 1 227 1 273 1 289 1 353 1 355 1 91 1 335 1 137 1 122 1 363 1 366 2 295 1 186 1 212 1 
242 1 324 1 145 1 32 1 79 1 127 2 7 1 8 2 273 1 12 1 289 1 353 2 291 1 253 1 122 2 363 1 233 1 318 1 186 1 341 1 281 1 22 1 370 1 
242 1 32 1 79 1 218 1 127 1 8 1 112 1 227 1 228 1 273 1 289 1 353 1 13 1 355 1 91 1 335 1 122 1 363 1 366 2 295 1 20 1 186 1 281 1 22 1 342 1 163 1 
276 1 
50 1 242 2 144 1 324 2 243 1 53 2 287 2 106 1 7 1 57 1 149 1 12 1 289 1 60 1 16 2 156 5 117 1 118 1 256 1 338 1 339 1 297 1 340 1 21 6 299 2 261 1 300 4 301 1 74 5 165 1 28 1 75 1 169 2 80 1 267 1 82 2 308 1 225 1 270 2 273 2 133 1 39 2 354 1 41 1 361 2 317 3 363 2 233 1 97 1 186 1 187 2 368 2 370 1 371 2 191 1 
50 1 301 1 59 1 60 1 354 1 41 1 156 3 74 3 28 1 118 1 243 1 317 1 256 1 338 1 80 1 106 1 187 1 297 1 21 2 261 1 300 2 191 1 
50 1 301 1 59 1 60 1 354 1 41 1 156 3 74 3 28 1 118 1 243 1 317 1 256 1 338 1 80 1 106 1 297 1 21 1 57 1 368 1 261 1 300 3 371 1 191 1 
301 1 50 1 28 1 74 3 243 1 53 1 106 1 80 1 57 1 59 1 354 1 60 1 41 1 156 3 118 1 317 1 338 1 256 1 297 1 187 1 21 2 368 1 261 1 300 3 191 1 371 1 
50 1 301 1 345 1 74 3 28 2 243 2 53 1 33 1 106 1 80 1 197 1 131 1 57 1 352 1 354 1 59 1 60 1 41 2 156 3 118 1 362 1 317 1 293 1 256 1 338 2 297 1 187 1 21 2 67 1 368 1 261 1 300 2 191 1 
50 1 144 1 243 1 53 2 106 1 287 2 57 1 149 1 60 1 16 2 156 4 117 1 118 1 338 1 256 1 339 1 297 1 21 4 261 1 299 2 300 4 301 1 28 1 74 4 75 1 169 1 80 1 82 2 267 1 308 1 270 2 39 1 354 1 41 1 361 2 317 2 187 2 368 2 191 1 371 2 
301 1 50 1 144 1 28 1 74 4 75 1 243 1 53 2 169 1 106 1 80 1 82 2 172 1 308 1 57 1 270 2 149 1 39 1 354 1 60 1 290 1 16 2 41 1 156 4 117 1 118 1 361 2 317 2 338 1 256 1 339 1 235 1 187 2 297 1 21 4 368 1 299 2 261 1 300 4 371 2 191 1 
301 1 50 1 144 1 28 1 74 4 75 1 243 1 53 2 169 1 106 1 80 1 82 2 172 1 308 1 57 1 270 2 149 1 39 1 354 1 60 1 290 1 16 2 41 1 156 4 117 1 118 1 361 2 317 2 338 1 256 1 339 1 235 1 187 2 297 1 21 4 368 1 299 2 261 1 300 4 371 2 191 1 
50 1 301 1 60 1 354 1 41 1 156 2 74 2 28 1 118 1 243 1 256 1 338 1 80 1 106 1 297 1 261 1 263 1 300 2 191 1 
301 1 50 1 345 1 28 2 74 2 243 2 53 1 33 1 106 1 80 1 131 1 248 1 57 1 352 1 354 1 60 1 41 2 156 2 118 1 362 1 293 1 338 2 256 1 297 1 187 1 21 1 67 1 368 1 261 1 300 3 191 1 371 1 
301 1 50 1 345 1 28 2 74 2 243 2 53 1 33 1 106 1 80 1 131 1 248 1 57 1 352 1 354 1 60 1 41 2 156 2 118 1 362 1 293 1 338 2 256 1 297 1 187 1 21 1 67 1 368 1 261 1 300 3 191 1 371 1 
50 1 144 1 243 1 53 2 106 1 287 2 57 1 149 1 60 1 156 4 117 1 118 1 338 1 256 1 339 1 297 1 21 4 261 1 300 4 301 1 28 1 74 4 75 1 169 1 80 1 267 1 270 2 39 1 354 1 41 1 361 2 92 2 317 2 187 2 236 1 188 2 368 1 191 1 371 2 
201 1 130 1 
239 6 1 1 322 2 302 1 73 2 101 2 194 3 148 1 35 14 36 2 223 1 306 1 111 1 224 2 312 1 114 11 15 1 315 2 116 1 61 4 316 3 89 1 251 2 181 1 336 1 121 1 337 4 65 11 47 8 124 2 262 1 216 2 343 1 
239 1 321 1 1 1 242 1 73 1 101 1 324 1 28 2 285 1 243 1 77 1 33 1 286 1 148 1 35 2 36 1 306 1 224 1 10 1 273 1 12 1 289 1 115 1 61 1 204 1 337 2 121 1 363 1 338 2 207 1 208 1 186 1 47 1 67 1 124 1 262 1 142 1 370 1 
239 10 1 1 322 8 242 3 101 3 102 2 324 1 285 2 243 1 244 1 148 3 198 1 111 4 10 1 12 2 289 2 114 7 115 2 61 7 251 3 121 1 337 6 338 3 207 2 296 1 65 7 67 1 214 1 124 3 262 2 343 3 216 2 73 3 28 3 77 2 168 1 218 1 219 1 33 1 35 20 36 3 305 1 306 1 174 2 224 3 273 3 312 4 315 2 180 1 181 2 94 1 363 3 230 2 98 2 185 2 186 2 47 10 142 1 370 2 
344 1 239 1 1 1 242 3 73 1 101 1 324 2 28 1 243 1 33 1 148 1 35 2 108 1 36 1 7 1 224 1 273 3 12 1 289 1 201 1 151 1 153 1 333 1 337 2 121 1 338 1 363 3 139 1 233 1 186 1 47 1 67 1 124 1 142 1 370 1 192 1 
239 2 322 1 73 1 101 1 323 1 28 1 243 1 33 1 148 1 35 3 36 1 328 1 306 1 131 1 224 1 312 1 114 1 315 1 61 1 251 1 181 1 337 2 338 1 65 1 47 1 67 1 124 1 216 1 343 1 
201 1 
201 1 
201 1 
322 1 61 1 73 1 101 1 251 1 337 2 139 1 148 1 35 2 36 1 65 1 47 2 111 1 224 1 124 1 272 1 114 1 216 1 
239 2 322 1 2 1 61 1 73 1 101 1 181 1 337 2 139 1 148 1 35 2 36 1 65 1 224 1 124 1 312 1 114 1 343 1 
239 2 322 2 315 1 61 2 73 1 101 1 251 1 181 1 337 2 139 1 148 1 35 4 36 1 65 2 47 2 111 1 224 1 124 1 312 1 343 1 114 2 216 1 
239 2 322 2 315 1 61 2 73 1 101 1 251 1 181 1 337 2 148 1 35 4 36 1 65 2 47 2 111 1 224 1 124 1 312 1 343 1 114 2 216 1 
239 1 1 1 242 1 73 1 101 1 324 1 28 1 285 1 77 1 148 1 35 2 36 1 224 1 273 1 12 1 289 1 115 1 121 1 337 2 363 1 338 1 230 1 207 1 186 1 47 1 124 1 262 1 370 1 
239 1 1 1 242 1 73 1 101 1 324 1 28 1 77 1 148 1 35 2 36 1 224 1 273 1 12 1 289 1 14 1 334 1 205 1 121 1 337 2 363 1 338 1 207 1 186 1 47 1 124 1 262 1 370 1 
239 2 322 2 315 1 61 2 73 1 101 1 251 1 181 1 337 2 148 1 35 4 36 1 306 1 65 2 47 2 111 1 224 1 124 1 312 1 343 1 114 2 216 1 
185 1 108 1 285 1 230 1 
239 1 322 1 73 1 101 1 323 1 28 1 243 1 33 1 148 1 35 3 36 1 306 1 111 1 131 1 224 1 114 1 315 1 61 1 251 1 181 1 337 2 338 1 48 1 47 2 65 1 67 1 124 1 343 1 216 1 
239 7 241 1 322 2 73 2 194 1 146 1 78 1 35 13 36 2 223 1 9 1 329 1 224 2 111 1 312 1 315 2 316 2 89 1 251 2 181 2 19 1 337 4 96 1 47 6 124 2 100 1 264 1 216 2 343 2 
239 7 241 1 322 2 73 2 194 1 146 1 78 1 35 13 36 2 223 1 9 1 329 1 224 2 111 1 312 1 315 2 316 2 89 1 251 2 181 2 19 1 337 4 96 1 47 6 124 2 100 1 264 1 216 2 343 2 
239 24 241 1 322 13 143 1 73 2 104 1 194 4 146 1 78 1 168 1 245 1 35 50 198 1 36 2 305 1 223 2 329 3 224 2 111 7 132 1 309 1 312 6 315 7 180 1 116 2 316 4 89 2 251 8 181 7 19 1 119 1 94 1 337 4 96 1 296 1 47 26 124 2 69 1 100 1 264 1 216 7 343 8 
239 7 241 1 322 3 73 2 194 1 78 1 35 13 36 2 223 1 9 1 329 1 224 2 111 1 312 2 315 2 316 2 89 1 251 2 181 2 19 1 337 4 96 1 47 6 213 1 124 2 100 1 264 1 216 2 343 2 
239 11 322 2 241 1 143 1 73 3 104 1 194 2 146 1 78 1 245 2 35 24 36 3 223 2 111 1 329 3 224 3 132 1 309 1 312 1 315 3 316 2 251 3 181 2 19 2 119 1 337 6 96 2 47 13 124 3 69 1 100 1 264 1 343 2 216 3 
150 1 222 1 313 1 72 1 155 1 90 1 348 1 23 1 311 1 294 1 
43 1 229 1 
222 1 313 1 72 1 155 1 52 1 56 1 4 1 311 1 294 1 
202 1 17 1 
257 1 45 1 303 1 
150 1 72 1 313 1 155 1 90 1 156 1 74 1 346 1 138 2 294 1 222 1 110 1 348 1 161 1 368 1 58 1 215 1 311 1 
150 1 72 1 313 1 155 1 90 1 156 1 74 1 346 1 138 2 294 1 222 1 110 1 348 1 161 1 368 1 58 1 215 1 311 1 
150 1 72 1 313 1 155 1 90 1 156 1 74 1 346 1 138 2 294 1 222 1 110 1 348 1 161 1 368 1 58 1 215 1 311 1 
202 1 17 1 45 1 
202 1 17 1 45 1 
257 1 303 1 
257 1 45 1 303 1 
283 1 70 1 
72 1 283 1 28 2 74 1 243 2 33 2 222 1 347 1 110 1 331 1 134 1 229 1 311 1 313 1 155 1 156 1 43 1 120 1 338 2 138 1 294 1 209 1 64 1 67 2 215 1 262 1 70 1 
238 1 344 1 239 1 1 1 24 1 242 2 73 1 101 1 28 2 243 2 220 1 148 1 35 2 36 1 306 1 224 1 350 1 273 2 12 1 289 1 151 2 158 1 337 2 121 1 338 2 363 2 186 1 47 1 124 1 370 1 192 1 
278 1 108 1 242 1 91 1 8 1 68 1 342 1 310 1 273 1 363 1 218 1 
355 1 242 1 91 1 218 1 363 1 366 2 295 1 186 1 189 1 8 1 112 1 227 1 228 1 342 1 273 1 310 1 289 1 
242 1 324 1 291 1 363 1 233 1 7 1 186 1 8 1 68 1 260 1 273 1 12 1 370 1 289 1 
355 1 242 1 91 1 218 1 363 1 278 1 366 2 295 1 186 1 8 1 68 1 112 1 227 1 228 1 342 1 273 1 310 1 289 1 
29 1 
160 1 130 1 319 1 57 1 368 1 169 1 39 1 
144 1 74 1 75 1 169 1 287 1 82 1 308 1 57 1 149 1 39 1 16 1 156 1 317 1 339 1 21 1 368 2 299 1 
242 1 144 1 217 1 324 1 75 1 255 1 363 1 207 1 339 1 186 1 269 1 149 1 273 1 249 1 12 1 370 1 289 1 
125 1 143 1 144 2 74 1 266 1 75 2 194 1 30 2 169 8 287 6 82 3 223 1 225 1 57 2 132 1 149 2 309 1 39 5 152 5 315 2 316 1 251 2 156 1 181 2 119 1 93 5 317 1 97 1 159 1 339 2 21 1 69 1 368 5 216 2 343 2 
144 1 345 1 28 1 74 1 75 1 243 1 30 2 168 1 169 2 33 1 198 1 172 1 131 1 149 1 39 2 352 1 40 1 251 2 41 1 156 1 362 1 338 1 293 1 159 1 339 1 296 1 67 1 343 1 
144 1 75 1 169 1 339 1 160 1 319 1 57 1 368 1 149 1 39 1 
152 5 315 2 251 2 102 1 181 2 93 5 30 2 169 5 287 10 159 1 82 5 368 5 39 5 216 2 343 2 
156 1 21 1 74 1 57 1 368 1 317 1 
242 4 144 2 324 2 165 1 74 3 75 2 169 2 7 1 129 1 225 2 176 2 149 1 273 4 133 1 12 1 39 2 289 1 156 3 95 1 317 2 363 4 97 2 233 1 339 2 186 1 21 4 123 1 367 1 370 1 
239 1 1 1 73 1 242 1 101 1 324 1 28 3 285 1 243 2 77 1 33 2 148 1 35 1 36 1 224 1 131 2 273 1 352 1 12 1 289 1 115 1 337 2 363 1 338 3 230 1 207 1 279 1 186 1 67 2 124 1 262 1 370 1 
152 2 144 1 75 1 93 2 94 1 169 1 287 4 97 1 82 2 339 1 225 1 57 2 368 4 149 1 39 2 
222 1 62 1 311 1 
232 1 222 1 90 1 70 1 311 1 
222 1 62 1 311 1 
222 1 62 1 311 1 
222 1 167 1 311 1 
222 1 167 1 311 1 
222 1 167 1 311 1 
222 1 311 1 
313 1 155 1 
239 4 241 1 322 2 73 1 194 1 168 1 35 8 36 1 198 1 305 1 223 1 224 1 312 2 180 1 251 1 316 1 94 1 337 2 296 1 47 4 124 1 69 1 343 1 
239 5 241 1 322 3 73 2 194 1 168 1 35 11 198 1 36 2 305 1 223 1 224 2 111 1 312 2 315 1 180 1 316 2 89 1 251 2 94 1 337 4 296 1 63 1 47 6 124 2 69 1 343 1 216 1 
239 10 241 1 322 4 73 3 143 1 194 1 168 1 245 1 35 19 198 1 36 3 305 1 223 1 111 1 224 3 132 1 309 1 312 3 315 2 180 1 316 1 251 3 181 2 119 1 94 1 337 6 296 1 63 1 47 9 124 3 69 1 216 2 343 3 
239 7 241 1 322 5 73 3 143 1 194 1 168 1 245 1 35 17 198 1 36 3 305 1 223 1 111 2 224 3 132 1 309 1 312 3 315 2 180 1 316 1 251 3 181 1 119 1 94 1 337 6 296 1 63 1 47 10 124 3 69 1 216 2 343 2 
239 4 241 1 322 2 73 1 194 1 168 1 35 8 36 1 198 1 305 1 223 1 224 1 312 2 180 1 251 1 316 1 94 1 337 2 296 1 47 4 124 1 69 1 343 1 
239 6 241 1 322 2 73 1 143 1 194 1 35 12 36 1 223 1 111 1 224 1 132 1 309 1 312 1 315 2 316 1 251 2 181 2 119 1 337 2 47 6 124 1 69 1 216 2 343 2 
239 8 241 1 322 5 143 1 73 4 194 1 168 1 245 2 35 18 198 1 36 4 305 1 223 1 111 2 224 4 132 1 309 1 312 3 315 2 180 1 316 1 251 3 181 1 119 1 94 1 337 8 296 1 63 1 47 10 124 4 69 1 216 2 343 2 
239 7 241 1 322 6 143 1 73 4 194 1 245 2 35 16 36 4 223 1 9 1 111 3 224 4 132 1 309 1 312 3 315 3 316 1 251 3 181 2 119 1 337 8 47 9 124 4 69 1 216 3 343 2 
239 4 322 6 180 1 251 1 168 3 35 7 198 3 296 1 305 2 47 3 111 3 343 1 312 3 
239 8 241 1 322 4 143 1 73 4 194 1 168 1 245 2 35 18 198 1 36 4 305 1 223 1 9 1 111 1 224 4 132 1 309 1 312 3 315 2 180 1 316 1 251 3 181 1 119 1 94 1 337 8 296 1 47 10 124 4 69 1 216 2 343 2 
239 4 322 3 73 2 180 1 251 1 94 1 337 4 168 1 245 1 35 8 296 1 36 2 198 1 305 1 47 4 111 1 224 2 124 2 343 1 312 2 
239 3 322 2 180 1 251 1 94 1 168 1 35 6 198 1 296 1 305 1 130 1 47 3 312 2 343 1 
239 2 322 2 315 1 73 1 251 1 181 1 337 2 35 4 36 1 63 1 47 2 224 1 111 1 124 1 312 1 343 1 216 1 
239 4 315 1 322 2 316 2 89 1 251 1 181 1 194 1 35 7 223 1 47 3 111 1 312 1 343 1 216 1 
239 12 322 9 73 2 194 2 168 2 245 2 35 23 198 2 36 2 305 1 111 4 224 2 312 5 275 1 315 2 15 1 180 1 116 1 251 3 89 1 316 2 181 2 94 1 337 4 296 1 47 11 124 2 216 2 343 3 
239 1 35 1 316 1 
35 1 47 1 194 1 
239 3 315 1 322 3 73 1 251 1 102 1 181 1 337 2 35 6 36 1 63 1 47 3 224 1 111 1 124 1 216 1 343 1 312 2 
239 6 241 1 322 2 73 1 143 1 194 1 35 12 36 1 223 1 111 1 224 1 132 1 309 1 312 1 315 2 316 1 251 2 181 2 119 1 337 2 47 6 124 1 69 1 216 2 343 2 
239 3 322 2 251 1 168 1 35 6 296 1 198 1 47 3 111 1 343 1 312 1 
275 1 239 2 322 2 73 1 180 1 168 1 337 2 245 1 35 3 198 1 36 1 305 1 47 1 111 1 224 1 124 1 312 1 
239 5 241 1 322 5 73 1 40 1 251 2 337 2 168 2 35 10 36 1 198 2 296 1 47 5 224 1 111 2 124 1 312 3 343 2 
241 1 322 1 73 1 251 1 337 2 35 2 36 1 47 2 224 1 111 1 124 1 216 1 
239 2 322 2 241 1 315 1 73 1 251 1 181 1 337 2 35 4 36 1 47 2 224 1 111 1 124 1 312 1 343 1 216 1 
275 1 239 2 241 1 322 2 73 3 337 6 168 1 245 1 35 3 36 3 198 1 47 1 9 1 224 3 111 1 124 3 312 1 
239 18 241 1 322 12 73 5 194 3 168 3 245 2 147 1 35 34 198 3 36 5 305 1 223 1 9 1 224 5 111 5 271 1 11 1 312 7 275 1 315 3 180 1 316 4 89 1 251 5 181 3 94 1 337 10 296 2 63 1 47 16 124 5 216 3 343 5 
284 1 66 1 256 1 
365 1 178 1 6 1 349 1 105 1 
233 1 7 1 242 1 186 1 130 1 324 1 273 1 12 1 370 1 363 1 289 1 
115 1 242 1 324 1 28 2 243 1 77 1 338 2 363 1 33 1 207 1 186 1 67 1 262 1 142 1 273 1 12 1 370 1 289 1 
242 1 28 2 243 2 77 1 33 2 176 1 273 1 12 3 289 1 115 1 60 1 314 1 41 1 203 1 363 1 338 2 207 2 186 1 297 1 67 1 262 1 142 1 370 2 
242 2 28 2 243 2 77 1 33 2 176 1 273 2 12 3 289 1 60 1 314 1 358 1 41 1 203 1 205 1 363 2 338 2 207 2 186 1 297 1 67 1 262 1 142 1 370 2 
242 3 217 1 324 1 74 2 80 1 57 1 176 1 273 3 12 4 289 1 314 1 358 1 203 1 156 2 136 1 363 3 207 1 186 1 21 1 280 1 368 1 370 1 49 1 
314 1 358 1 242 3 203 1 324 1 156 2 217 1 74 2 363 3 80 1 207 1 186 1 37 1 21 1 57 1 176 1 368 1 273 3 370 1 12 4 49 1 289 1 
242 1 186 1 360 1 273 1 363 1 289 1 
242 2 153 1 332 1 333 1 324 2 363 2 207 1 108 1 186 2 273 2 85 1 249 1 177 1 370 1 12 1 192 1 289 1 
24 1 73 1 101 1 28 1 243 1 337 2 338 1 33 1 148 1 108 1 36 1 306 1 67 1 224 1 124 1 142 1 
242 1 144 2 324 1 217 1 74 3 75 2 169 1 80 1 347 1 37 1 57 1 149 2 273 1 39 1 12 2 156 3 135 1 317 1 363 1 206 1 234 1 339 2 160 1 21 2 319 1 368 1 367 1 49 1 
242 1 360 1 255 1 363 1 207 1 186 1 298 1 273 1 249 1 370 1 12 1 49 1 289 1 
242 1 324 1 252 1 363 1 34 1 207 1 233 1 108 1 186 2 85 1 273 1 177 1 12 1 370 1 289 1 
242 2 252 1 363 2 34 1 207 1 186 2 214 1 176 1 273 2 85 1 177 1 370 1 12 1 289 1 
355 1 366 1 295 1 242 1 186 1 324 1 227 1 273 1 363 1 289 1 
242 1 108 1 273 1 363 1 218 1 
108 1 242 1 324 1 273 1 363 1 
88 1 108 1 242 1 324 1 273 1 363 1 192 1 
242 1 324 1 28 2 243 1 205 1 77 1 338 2 363 1 33 1 207 1 186 1 67 1 262 1 142 1 273 1 12 1 370 1 289 1 
242 1 332 1 363 1 207 1 186 2 176 1 273 1 85 1 249 1 177 1 370 1 12 1 289 1 
81 1 42 1 262 1 369 1 325 1 
301 1 60 1 41 1 27 1 156 2 74 2 42 2 325 2 80 1 128 1 81 1 246 1 347 1 297 1 57 1 368 1 262 1 369 2 320 1 
238 1 81 1 28 1 42 1 350 1 243 1 158 1 325 1 338 1 
128 1 246 1 81 1 
130 1 212 1 166 1 137 1 
212 1 166 1 281 1 22 1 137 1 32 1 79 1 
353 1 122 1 32 1 
20 1 99 1 212 1 166 1 268 1 281 1 22 1 137 1 351 1 32 3 79 3 364 2 
173 1 212 1 166 1 281 1 226 1 22 1 137 1 32 2 79 2 
164 1 76 1 79 1 32 1 366 1 20 1 212 1 281 1 22 1 112 1 227 1 
20 1 212 1 166 1 281 1 22 1 32 1 79 1 
20 1 166 2 281 1 22 1 137 1 32 1 79 1 
86 1 265 1 20 1 212 1 166 1 281 2 190 1 22 2 32 2 79 2 
166 1 157 1 254 1 76 1 137 1 79 3 32 3 20 1 212 2 281 1 22 1 226 2 274 1 
166 1 137 1 79 2 32 2 304 1 366 2 295 1 20 1 212 1 281 1 22 1 112 1 226 1 228 1 227 1 
166 1 157 1 76 1 137 1 79 4 32 4 107 1 20 1 173 1 212 2 281 2 22 2 226 2 
20 1 212 1 166 1 281 1 22 1 137 1 32 1 79 1 
166 2 157 1 76 1 137 2 79 4 32 4 364 1 212 3 268 1 281 1 226 2 22 1 351 1 237 1 
327 1 179 1 20 1 212 1 166 1 330 1 281 1 226 1 22 1 137 1 32 2 79 2 
166 1 137 1 79 3 32 3 364 2 288 1 20 1 212 1 268 1 281 1 22 1 351 2 
18 1 259 2 212 2 84 1 
87 1 20 1 281 1 22 1 32 1 79 1 
20 1 212 1 166 1 281 1 226 1 22 1 137 1 32 2 79 2 274 1 
31 1 
20 1 212 1 166 1 281 1 22 1 137 1 32 1 79 1 
166 1 137 1 79 3 32 3 364 1 20 1 212 1 281 1 226 1 22 1 274 1 
212 1 157 1 76 1 237 1 
212 1 166 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (36,145) (36,145) 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (117,254) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 229 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 229 158 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (39,314,350) (108,111,159) (108,111,159) (108,111,159) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 312 50 268 214 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 312 50 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 312 50 112 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 312 50 268 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 312 50 268 257 213 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 312 50 268 257 213 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 312 50 268 257 334 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 312 50 64 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 312 50 64 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 312 50 268 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 137 22 130 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 234 (90,368) (90,368) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (39,314,350) (39,314,350) (39,314,350) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (36,145) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 322 149 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 137 22 130 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 137 340 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 16 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 215 2 216 4 121 9 284 1 26 2 307 1 353 1 332 1 57 1 311 2 241 6 33 1 87 1 34 1 288 9 313 1 106 1 181 2 155 1 184 1 250 5 44 2 319 3 114 2 188 2 230 1 120 1 
0 1 215 2 216 4 121 9 284 1 26 2 307 1 353 1 332 1 57 1 311 2 241 6 33 1 87 1 34 1 288 9 313 1 106 1 181 2 155 1 184 1 250 5 44 2 319 3 114 2 188 2 230 1 120 1 
0 1 215 2 216 5 121 10 284 1 26 2 307 1 353 1 332 1 57 1 311 2 241 7 33 1 87 1 34 1 288 10 313 1 106 1 181 2 155 1 184 1 250 6 44 2 319 4 114 2 188 2 230 1 120 1 
215 2 216 3 121 7 284 1 26 2 307 1 353 1 332 1 57 1 311 2 241 4 33 1 87 1 34 1 288 7 313 1 106 1 181 2 155 1 184 1 250 4 44 2 319 2 114 1 188 2 230 1 120 1 
0 1 181 1 216 2 121 4 284 1 250 3 319 1 44 1 26 1 353 1 114 2 311 1 188 1 230 1 241 3 87 1 120 1 288 4 
215 1 181 1 121 2 207 1 250 1 44 1 26 1 332 1 311 1 230 1 115 1 176 1 87 1 120 1 313 1 288 2 
215 1 216 1 121 3 250 2 44 2 26 2 319 1 307 1 230 1 241 1 87 1 120 1 288 3 
215 1 0 1 94 1 216 4 121 9 284 1 26 2 307 1 353 1 309 1 311 1 241 7 33 1 87 1 288 9 181 1 184 1 250 5 319 3 44 2 114 2 188 1 230 1 120 1 
215 1 0 1 94 1 216 4 121 9 284 1 26 2 307 1 353 1 309 1 311 1 241 7 33 1 87 1 288 9 181 1 184 1 250 5 319 3 44 2 114 2 188 1 230 1 120 1 
16 1 
295 1 211 1 354 2 
261 2 29 1 82 2 220 2 70 2 206 1 92 2 196 2 
261 2 343 1 234 1 306 1 264 1 265 2 169 1 196 2 122 1 9 1 123 1 29 1 10 1 150 1 82 3 220 2 152 2 127 2 177 1 358 1 88 1 294 1 37 1 361 1 275 1 205 1 206 1 336 2 185 1 276 1 46 1 47 1 135 2 70 3 90 1 92 2 21 1 
261 1 82 1 220 1 68 1 70 1 206 1 347 1 92 1 196 1 299 1 
295 1 61 1 41 1 251 1 347 1 238 1 42 1 82 1 269 1 70 1 366 1 92 1 302 1 367 1 
261 1 295 1 61 1 41 2 251 1 347 1 238 1 196 1 220 1 82 1 269 1 70 1 92 1 302 1 367 2 
345 1 200 1 270 1 41 1 367 1 
295 1 262 1 345 1 270 1 41 2 301 1 251 1 367 2 
270 1 41 1 367 1 
291 1 261 1 345 1 206 1 41 1 347 1 196 1 299 1 68 1 220 1 82 1 70 1 92 1 367 1 
295 1 
295 1 345 1 270 1 225 1 41 2 301 1 251 1 367 2 
315 2 36 1 295 1 182 1 345 2 335 2 41 5 249 2 251 1 145 1 161 1 172 1 83 1 270 2 12 1 301 1 20 1 367 5 289 1 
16 1 
261 1 196 1 29 2 82 2 220 1 70 2 92 2 244 1 75 1 
165 1 117 1 260 1 
343 1 156 1 234 1 306 1 205 1 336 1 265 1 169 1 122 1 29 1 135 1 47 1 82 1 70 1 358 1 88 1 
343 1 234 1 78 1 306 1 205 1 336 1 265 1 169 1 122 1 196 1 97 1 47 1 135 1 220 1 82 2 70 2 117 1 92 1 358 1 88 1 
261 1 29 1 78 1 82 3 220 3 70 3 92 3 196 3 
82 1 220 1 70 1 347 1 92 1 196 1 299 1 
261 1 82 1 220 1 70 1 347 1 92 1 196 1 244 1 75 1 
343 1 261 2 234 1 78 1 306 1 265 1 169 1 347 1 238 1 122 1 196 3 97 1 29 1 10 1 150 1 82 4 220 3 269 1 152 2 127 1 177 1 358 1 88 1 294 1 37 1 275 1 61 1 205 1 206 1 336 1 185 1 41 1 276 1 46 1 47 1 135 1 70 4 90 1 231 1 92 3 118 1 302 1 367 1 75 1 
29 1 82 2 220 1 78 1 70 2 92 2 42 1 196 1 258 1 
261 1 295 1 235 1 78 2 61 1 41 1 238 1 347 1 196 3 97 1 220 3 82 3 269 1 70 3 92 3 231 1 302 1 367 1 75 1 
261 1 78 1 196 2 220 2 82 2 165 1 70 2 117 1 92 2 75 1 
343 1 234 1 306 1 205 1 336 1 265 1 169 1 122 1 29 1 135 1 47 1 82 1 70 1 88 1 358 1 
303 1 343 1 306 1 205 1 336 1 265 1 122 1 66 1 29 1 135 1 47 1 82 1 70 1 88 1 358 1 
107 1 254 1 
82 1 220 1 61 1 70 1 3 1 347 1 92 1 196 1 
261 1 192 1 78 2 42 1 196 4 97 1 55 1 29 1 220 4 82 5 70 5 92 5 258 1 75 1 
82 2 220 2 70 2 3 1 347 1 92 2 196 2 299 1 
236 1 267 1 
236 1 267 1 
209 1 151 1 
209 1 151 1 
209 1 151 1 
236 1 4 1 267 1 
202 1 236 1 267 1 
209 1 151 1 69 1 236 2 170 1 267 2 
236 1 4 1 267 1 
236 1 4 1 267 1 
236 1 239 1 267 1 
236 1 239 1 267 1 
236 1 239 1 267 1 
76 2 295 1 203 1 236 2 95 1 41 2 362 2 267 2 81 1 255 2 162 1 278 3 30 2 69 1 84 1 13 2 280 1 367 2 142 1 
143 1 76 1 236 1 196 2 267 1 349 1 29 1 220 2 82 2 86 1 101 1 13 1 59 1 202 1 41 1 362 1 255 1 278 1 70 2 187 1 280 1 92 2 367 1 327 1 
181 1 311 1 188 1 
181 1 311 1 176 1 
181 3 188 2 176 1 266 1 348 1 99 1 
147 1 181 2 188 1 176 1 266 1 99 1 
181 2 188 1 176 1 266 2 99 1 
143 1 25 2 345 4 54 1 172 2 8 1 286 1 352 1 86 1 354 2 270 1 102 1 103 1 12 3 245 1 315 1 180 2 295 1 335 1 249 1 41 5 317 2 251 1 43 1 297 1 226 1 229 1 301 1 20 1 367 5 327 1 
143 2 25 2 345 5 54 1 172 2 8 1 286 1 352 1 354 2 200 3 270 4 102 1 12 3 245 1 315 2 295 2 296 1 335 2 41 7 249 2 317 2 251 1 161 1 252 1 43 1 19 3 229 1 301 1 91 1 20 1 367 7 
315 1 345 1 335 1 41 2 249 1 43 1 161 1 297 1 226 1 229 1 12 1 367 2 
315 1 335 1 158 1 41 1 249 1 43 1 161 1 297 1 226 1 229 1 12 1 367 1 
16 1 
365 1 358 1 
304 1 
358 1 88 1 
363 1 47 1 132 2 358 3 88 1 351 1 
47 1 358 1 88 1 
80 1 358 1 
233 2 263 2 194 4 195 1 54 3 9 8 148 1 11 1 102 3 127 14 160 1 318 5 110 1 276 6 49 1 73 2 74 1 259 2 
233 2 263 2 194 4 195 1 54 3 9 8 148 1 11 1 102 3 127 14 160 1 318 7 110 1 276 6 49 3 73 2 74 1 259 2 
233 2 263 2 194 4 195 1 54 3 9 8 148 1 11 1 102 3 58 1 127 14 160 1 318 5 110 1 276 6 49 1 73 2 74 1 259 2 
93 4 233 3 263 3 194 5 195 1 54 6 9 21 148 2 8 3 286 3 150 1 11 1 102 6 152 2 127 40 245 3 247 1 292 1 294 1 360 1 275 1 274 1 185 1 160 1 318 12 110 2 276 19 186 1 323 1 49 7 300 1 73 2 74 1 259 3 190 3 
281 1 233 2 263 2 194 5 195 1 54 3 9 9 148 1 150 2 102 3 104 1 152 4 127 16 294 2 275 2 185 2 318 7 160 1 110 1 276 7 323 1 49 2 73 2 74 1 259 2 
215 1 39 1 121 1 108 1 237 1 159 1 44 1 26 1 320 1 111 1 85 1 32 1 230 1 14 1 288 1 
215 1 343 1 121 3 193 1 265 1 237 1 348 1 122 1 26 1 199 1 85 1 311 1 32 1 241 2 176 1 87 1 288 3 293 1 181 2 39 1 336 1 250 1 133 1 108 1 320 1 44 1 111 1 135 1 188 1 120 1 
215 1 343 1 121 2 193 1 265 1 237 1 122 1 348 1 199 1 32 1 311 1 241 2 176 1 87 1 288 2 181 2 39 1 336 1 250 1 133 1 108 1 320 1 135 1 188 1 120 1 
343 1 215 2 121 1 282 1 265 1 237 2 122 1 26 1 98 1 27 1 32 2 88 1 358 1 288 1 154 1 293 1 205 1 336 1 320 2 44 1 253 1 135 1 116 1 
215 1 343 1 121 1 193 1 265 1 237 1 122 1 348 1 26 1 85 1 311 1 32 1 176 1 288 1 181 2 39 1 336 1 133 1 159 1 108 1 320 1 44 1 111 1 135 1 188 1 230 1 
23 1 
144 1 329 1 238 1 98 1 330 1 149 1 198 1 12 2 335 1 205 2 61 1 336 2 249 1 253 1 298 1 256 1 211 1 70 1 301 2 20 1 302 1 119 1 214 1 343 1 265 2 347 1 122 1 172 2 31 1 82 1 354 1 268 1 269 1 270 3 312 1 222 1 88 1 358 1 315 1 178 1 41 4 43 1 42 1 135 2 322 1 89 1 324 2 366 1 92 1 50 1 367 4 
61 1 41 2 238 1 347 1 42 1 298 1 256 1 330 1 89 1 82 1 269 1 70 1 324 2 366 1 92 1 312 1 119 1 302 1 367 2 
232 1 347 1 238 1 330 1 82 1 269 1 270 1 295 1 61 1 225 1 41 3 251 1 42 1 298 1 256 1 89 1 70 1 324 3 301 1 92 1 366 1 302 1 119 1 367 3 
61 1 41 2 238 1 347 1 42 1 298 1 256 1 330 1 89 1 82 1 269 1 70 1 324 2 366 1 92 1 312 1 119 1 302 1 50 1 367 2 
61 1 225 1 41 3 238 1 347 1 42 1 112 1 298 1 256 1 330 1 82 1 89 1 269 1 70 1 270 1 324 2 301 1 366 1 92 1 312 1 119 1 302 1 50 1 367 3 
144 1 329 1 347 1 238 1 172 1 330 1 31 1 82 1 354 1 268 1 269 1 270 1 12 1 312 1 222 1 315 1 178 1 335 1 61 1 249 1 41 3 42 1 298 1 256 1 211 1 89 1 70 1 324 2 301 1 366 1 20 1 92 1 302 1 119 1 50 1 367 3 
144 1 329 1 347 1 238 1 172 1 330 1 31 1 82 1 268 1 269 1 270 1 12 1 312 1 222 1 315 1 60 1 178 1 61 1 335 1 41 3 249 1 42 1 298 1 256 1 211 1 257 1 89 1 70 1 324 2 213 1 301 1 92 1 366 1 20 1 302 1 119 1 50 1 367 3 
144 1 329 1 347 1 238 1 172 1 330 1 31 1 82 1 268 1 269 1 270 1 12 1 312 1 222 1 315 1 60 1 178 1 61 1 335 1 41 3 249 1 42 1 298 1 256 1 211 1 257 1 89 1 70 1 324 2 213 1 301 1 92 1 366 1 20 1 302 1 119 1 50 1 367 3 
344 1 144 1 79 1 347 1 238 1 172 1 330 1 82 1 354 1 268 1 269 1 270 1 12 1 126 1 312 1 222 1 315 1 334 1 61 1 335 1 41 3 249 1 42 1 208 1 298 1 256 1 257 1 89 1 70 1 324 2 301 1 92 1 366 1 20 1 302 1 119 1 50 1 367 3 
61 1 41 2 238 1 347 1 42 1 64 1 298 1 256 1 330 1 89 1 82 1 269 1 70 1 324 2 366 1 92 1 312 1 119 1 302 1 50 1 367 2 
61 1 41 2 238 1 347 1 42 1 64 1 298 1 256 1 330 1 89 1 82 1 269 1 70 1 324 2 366 1 92 1 312 1 119 1 302 1 50 1 367 2 
344 1 144 1 347 1 238 1 172 1 330 1 82 1 354 1 268 1 269 1 270 1 12 1 126 1 312 1 222 1 315 1 335 1 61 1 249 1 41 3 42 1 208 1 298 1 256 1 89 1 70 1 324 2 301 1 366 1 20 1 92 1 302 1 119 1 50 1 367 3 
107 1 16 1 
93 3 328 1 264 1 54 2 9 8 8 2 29 1 10 1 150 2 152 4 127 12 177 2 128 1 245 2 247 1 294 2 360 1 275 2 185 2 318 1 276 4 18 1 46 1 45 1 138 1 165 3 49 1 117 10 260 10 190 3 
343 1 234 1 78 1 306 1 265 1 264 1 169 1 122 1 196 1 97 1 9 1 29 1 173 1 10 1 150 1 82 2 220 1 152 2 127 2 358 1 88 1 177 1 128 1 294 1 38 1 156 1 275 1 205 1 336 1 185 1 276 1 277 1 46 1 47 1 135 1 165 1 70 2 92 1 
343 1 234 1 78 1 306 1 265 1 169 1 194 1 54 1 122 1 196 1 97 1 9 3 8 1 10 2 150 2 82 2 220 1 355 1 152 4 127 5 358 1 88 1 177 2 128 1 245 1 246 1 294 2 275 2 205 1 336 1 185 2 318 1 276 2 134 1 46 1 337 1 47 1 135 1 165 2 70 2 90 1 117 2 92 1 260 2 368 1 
343 1 78 1 265 3 264 1 196 1 122 1 98 1 9 1 10 1 150 1 82 1 220 1 14 1 152 2 127 2 358 1 177 1 88 1 294 1 130 1 107 1 275 1 205 2 336 3 185 1 109 1 276 1 253 1 46 1 135 3 137 1 70 1 92 1 72 1 21 1 22 1 
261 1 194 1 196 1 54 1 6 1 8 1 9 1 10 1 286 1 150 1 220 1 82 1 102 1 152 2 127 3 177 1 128 1 245 1 294 1 275 1 185 1 318 1 276 2 165 1 70 1 117 1 92 1 260 1 75 1 
107 1 
107 1 
107 1 
294 1 275 1 185 1 54 1 9 2 10 1 150 1 165 1 164 1 117 1 72 1 152 2 127 2 177 1 245 1 260 1 
294 1 131 1 275 1 185 1 318 1 194 1 276 2 10 1 286 1 150 1 165 1 102 1 117 1 72 1 152 2 127 2 177 1 260 1 
294 1 275 1 185 1 54 1 8 1 9 2 10 1 150 1 165 1 117 1 72 1 152 2 127 2 177 1 245 1 260 1 
294 1 275 1 185 1 54 1 8 1 9 2 10 1 150 1 165 1 117 1 152 2 127 2 177 1 245 1 260 1 
343 1 234 1 306 1 264 1 265 1 169 1 122 1 9 1 29 1 10 1 150 1 82 1 152 2 127 2 88 1 358 1 177 1 294 1 275 1 205 1 336 1 185 1 276 1 46 1 47 1 135 1 70 1 90 1 
303 1 343 1 306 1 264 1 265 1 122 1 9 1 29 1 10 1 150 1 82 1 152 2 127 2 88 1 358 1 177 1 294 1 275 1 205 1 336 1 185 1 276 1 46 1 66 1 47 1 135 1 70 1 141 1 
294 1 275 1 185 1 54 1 8 1 9 2 10 1 150 1 165 1 117 1 152 2 127 2 128 1 177 1 245 1 260 1 
234 1 90 1 14 1 368 1 
261 1 196 1 54 1 8 1 9 2 10 1 286 1 150 1 220 1 82 1 102 1 152 2 127 3 177 1 128 1 245 1 294 1 275 1 62 1 185 1 276 1 70 1 117 1 92 1 75 1 260 1 
281 1 2 1 146 1 54 1 100 1 9 3 8 1 331 1 150 2 333 1 152 4 127 4 245 1 201 1 294 2 275 2 185 2 276 1 136 1 139 1 
294 1 201 2 281 1 275 1 185 1 54 1 146 1 276 1 100 1 8 1 9 3 331 1 150 1 136 1 333 2 105 1 152 2 127 4 245 1 
281 1 2 1 146 2 54 1 100 1 9 4 8 1 331 1 286 1 150 2 333 1 102 1 105 1 152 4 127 8 245 1 201 1 294 2 275 2 185 2 276 4 136 1 
281 1 2 1 146 2 54 1 100 1 9 4 8 1 331 1 286 1 150 2 333 1 102 1 105 1 152 4 127 8 245 1 201 1 294 2 275 2 185 2 276 4 136 1 
281 1 233 2 263 2 194 2 146 2 54 3 100 1 8 1 9 10 331 1 286 1 150 1 333 1 102 3 105 1 152 2 127 18 245 1 201 1 294 1 275 1 185 1 160 2 318 3 276 8 136 1 49 1 73 2 74 2 259 2 
255 1 76 1 125 1 236 1 357 1 13 1 267 1 362 1 342 1 
59 1 202 1 
255 1 162 1 76 1 69 1 236 1 95 1 13 1 267 1 362 1 248 1 
76 1 295 1 203 1 236 1 95 1 41 1 362 1 267 1 81 1 255 1 162 1 278 2 30 1 69 1 84 1 280 1 13 1 367 1 
76 1 295 1 203 1 236 1 95 1 41 1 362 1 267 1 81 1 255 1 162 1 278 2 30 1 69 1 84 1 280 1 13 1 367 1 
76 1 295 1 203 1 236 1 95 1 41 1 362 1 267 1 81 1 255 1 162 1 278 2 30 1 69 1 84 1 280 1 13 1 367 1 
4 1 170 1 153 1 
4 1 170 1 153 1 
124 1 239 1 
124 1 170 1 239 1 
187 1 101 1 
143 1 76 1 345 1 346 1 236 1 267 1 349 1 196 2 29 1 30 1 82 2 220 2 84 1 86 1 101 1 13 1 59 1 202 1 41 1 362 1 255 1 278 1 70 2 187 1 92 2 367 1 327 1 
4 1 153 1 
124 1 170 1 239 1 
343 1 52 1 265 2 264 1 122 1 9 1 10 1 150 1 82 2 356 1 152 2 127 2 358 1 88 1 177 1 128 1 294 1 157 1 275 1 336 2 185 1 63 1 109 1 276 1 46 1 135 2 137 1 279 1 70 2 92 2 21 2 
39 1 135 1 85 1 56 1 32 1 265 1 336 1 14 1 133 1 350 1 314 1 
343 1 181 2 39 1 193 1 336 1 265 1 133 1 348 1 122 1 350 1 210 1 135 1 85 1 311 1 188 1 32 1 176 1 
343 1 223 1 282 1 205 1 336 1 265 1 122 1 253 1 98 1 135 1 56 1 32 1 358 1 88 1 
343 1 181 2 39 1 193 1 336 1 265 1 133 1 348 1 122 1 350 1 135 1 56 1 85 1 311 1 188 1 32 1 176 1 314 1 
243 1 
16 1 
329 1 172 1 31 1 354 1 270 1 12 1 315 1 178 1 295 2 335 1 249 1 41 1 251 1 211 1 301 1 20 1 367 1 
191 1 343 2 25 2 77 1 265 1 238 1 54 1 122 1 171 1 172 3 8 1 354 4 270 2 12 2 272 1 88 1 358 4 245 1 246 1 315 2 295 2 40 1 205 1 335 2 132 1 336 1 41 2 249 2 317 2 43 1 363 1 135 1 47 1 211 2 140 1 301 1 365 2 20 2 326 1 367 2 341 1 
93 1 24 1 25 5 53 1 217 1 54 2 197 1 218 1 172 5 7 1 8 2 286 2 198 1 354 6 270 1 102 2 12 8 245 2 247 1 315 2 224 1 295 5 335 2 41 1 249 2 317 5 251 2 43 1 211 3 212 1 301 1 140 2 20 2 367 1 190 1 
261 1 263 1 347 1 195 1 54 2 196 1 172 2 7 1 82 1 220 1 102 1 12 2 315 1 60 1 291 1 335 1 206 1 249 1 41 1 299 1 68 1 70 1 140 2 20 1 92 1 367 1 73 1 259 1 
315 1 295 1 335 1 12 1 249 1 251 1 20 1 145 1 172 1 
25 1 295 1 317 1 54 1 172 2 8 1 211 1 354 2 245 1 
295 1 270 1 41 1 301 1 251 1 367 1 
343 1 167 1 265 2 122 1 98 1 172 1 149 1 198 1 270 2 12 1 358 1 88 1 315 2 335 2 205 2 336 2 249 2 41 2 161 1 43 1 253 1 135 2 322 1 301 1 20 1 367 2 
261 2 343 1 234 1 306 1 265 1 169 1 196 2 122 1 29 1 10 1 150 1 82 3 220 2 152 2 127 1 88 1 358 1 177 1 294 1 37 1 275 1 205 1 336 1 206 1 185 1 276 1 46 1 135 1 47 1 70 3 90 1 92 2 
315 1 233 1 25 2 295 4 335 1 249 1 317 2 251 2 43 1 172 2 198 1 211 2 354 4 12 1 20 1 
255 1 227 1 13 1 
255 1 95 1 17 1 101 1 13 1 
255 1 227 1 13 1 
255 1 227 1 13 1 
255 1 168 1 13 1 
255 1 168 1 13 1 
255 1 168 1 13 1 
255 1 13 1 
236 1 267 1 
233 1 263 2 194 4 195 1 54 3 9 9 150 2 102 3 152 4 127 17 294 2 275 2 185 2 160 1 318 7 276 8 323 1 49 3 73 2 259 2 74 1 
16 1 
1 1 294 1 275 1 185 1 54 1 8 1 9 2 150 1 152 2 127 2 245 1 
93 2 360 1 318 1 276 4 54 1 9 3 8 1 286 1 49 1 102 1 127 7 245 1 247 1 190 1 
93 2 233 1 263 2 194 4 195 1 54 5 8 2 9 13 286 1 150 1 102 4 152 2 127 23 245 2 360 1 294 1 275 1 185 1 318 8 160 1 276 10 18 1 45 1 323 1 49 4 73 2 259 2 74 1 190 2 
93 1 127 1 276 1 
9 1 127 1 190 1 
318 1 276 3 54 1 8 1 9 3 286 1 49 1 102 1 127 6 246 1 245 1 
93 1 281 1 217 1 53 1 194 1 54 2 218 1 9 6 8 2 286 1 150 2 102 1 152 4 127 11 245 2 247 1 294 2 224 1 275 2 185 2 318 2 276 5 323 1 212 1 49 1 190 1 
263 1 194 1 318 2 54 1 276 3 9 3 49 1 102 1 127 6 73 1 259 1 
294 1 263 1 275 1 185 1 318 2 194 1 160 1 276 2 9 1 150 1 323 1 310 1 49 1 152 2 127 3 259 1 74 1 
294 1 281 1 263 2 275 1 185 1 194 3 318 5 195 1 276 5 54 2 9 5 150 1 49 2 102 2 152 2 127 10 73 1 259 2 
294 1 281 1 275 1 185 1 54 1 9 2 150 1 152 2 127 2 245 1 
294 1 281 1 275 1 185 1 54 1 8 1 9 2 150 1 152 2 127 2 245 1 
294 3 281 1 2 1 263 1 275 3 185 3 194 1 318 2 276 2 9 1 150 3 323 1 310 1 49 1 152 6 127 3 259 1 
93 3 1 1 233 1 281 1 2 1 263 2 194 4 195 1 54 5 9 16 8 2 286 2 150 4 102 5 152 8 127 31 245 2 247 1 292 1 294 4 275 4 274 1 185 4 160 1 318 8 276 15 323 1 49 4 300 1 73 2 259 2 74 1 190 3 
93 1 233 1 281 1 263 2 194 4 195 1 54 3 218 1 9 8 150 1 102 3 152 2 127 15 247 1 294 1 275 1 185 1 160 1 318 5 276 7 49 1 73 2 74 1 259 2 190 1 
93 2 1 1 233 1 281 1 263 2 194 4 195 1 54 4 218 1 9 10 8 1 150 2 102 3 152 4 127 18 245 1 247 1 294 2 360 1 275 2 185 2 160 1 318 6 276 8 49 2 73 2 259 2 74 1 190 1 
93 1 1 1 233 1 281 1 263 2 217 1 53 1 194 5 195 1 54 5 218 1 9 13 8 2 286 1 150 3 102 4 152 6 127 24 245 2 247 1 294 3 224 1 275 3 185 3 160 1 318 7 276 11 323 1 212 1 49 2 73 2 259 2 74 1 190 1 
93 1 1 1 233 1 281 1 263 2 217 1 53 1 194 4 195 1 54 5 218 1 9 13 8 2 286 1 150 3 102 4 152 6 127 24 245 2 247 1 294 3 224 1 275 3 185 3 160 1 318 7 276 11 323 1 49 3 212 1 73 2 259 2 74 1 190 1 
93 1 233 1 281 1 263 2 194 4 195 1 54 3 218 1 9 8 150 1 102 3 152 2 127 15 247 1 294 1 275 1 185 1 160 1 318 5 276 7 49 1 73 2 74 1 259 2 190 1 
93 1 281 1 217 1 53 1 194 1 54 2 218 1 9 6 8 2 286 1 150 2 102 1 152 4 127 11 245 2 247 1 294 2 224 1 275 2 185 2 318 2 276 5 323 1 212 1 49 1 190 1 
93 1 1 1 281 1 217 1 53 1 194 1 54 2 218 1 9 6 8 2 286 1 150 3 102 1 152 6 127 11 245 2 247 1 294 3 224 1 275 3 185 3 318 1 276 5 323 1 212 1 190 1 
93 1 281 1 2 1 217 1 53 1 194 2 54 3 218 1 9 9 8 3 286 1 150 4 102 1 152 8 127 14 245 3 247 1 294 4 224 1 275 4 185 4 318 5 276 5 323 2 49 3 212 1 190 1 
263 3 160 1 194 3 318 6 276 4 54 1 9 3 49 3 102 1 127 7 73 1 74 2 259 3 
93 1 281 1 2 1 217 1 53 1 194 1 54 2 218 1 9 6 8 2 286 1 150 3 102 1 152 6 127 11 245 2 247 1 294 3 224 1 275 3 185 3 318 1 276 5 323 1 212 1 190 1 
65 1 29 1 82 1 70 1 92 1 42 1 258 1 
283 1 42 1 65 1 29 1 228 1 82 1 175 1 70 1 325 1 92 1 287 1 258 1 
135 1 205 1 265 1 336 1 16 1 
343 1 78 1 306 1 205 1 336 1 265 1 169 1 196 1 122 1 29 1 47 1 135 1 220 1 82 2 70 2 92 1 358 1 88 1 
343 1 78 1 306 1 265 1 169 1 347 1 122 1 196 2 80 1 29 1 82 2 220 1 271 1 88 2 358 3 61 1 336 1 316 1 135 1 47 2 70 2 92 2 302 1 
343 1 78 1 306 1 265 2 347 1 122 1 196 2 80 1 29 1 82 2 220 1 271 1 88 2 358 3 359 1 61 1 336 2 316 1 66 1 135 2 47 2 70 2 92 2 302 1 
261 1 265 1 347 1 238 1 196 1 82 1 220 1 270 1 271 1 221 1 358 2 291 1 295 1 132 1 336 1 206 1 41 2 251 1 299 1 135 1 68 1 70 1 365 1 92 1 367 2 
343 1 295 1 77 1 205 1 336 3 265 3 132 1 316 1 41 2 251 1 238 1 80 1 122 1 47 1 135 3 270 1 271 1 365 1 88 1 367 2 358 4 359 1 
343 1 135 1 113 1 265 1 336 1 122 1 
343 2 130 1 183 1 205 2 336 2 265 2 122 1 5 1 363 1 321 1 135 2 47 1 137 1 14 1 88 1 358 1 22 1 
294 1 78 1 275 1 52 1 185 1 196 1 10 1 150 1 220 1 82 1 70 1 14 1 152 2 92 1 128 1 177 1 
77 1 167 1 345 1 265 1 238 1 145 1 171 1 172 1 270 2 12 1 272 1 358 2 315 2 36 1 295 1 205 1 335 2 336 1 132 1 249 2 41 3 251 1 135 1 365 1 301 1 20 2 326 1 367 3 
343 2 132 1 336 1 265 1 122 1 363 1 113 1 135 1 47 1 14 1 88 1 358 2 341 1 
129 1 343 2 51 1 205 1 336 1 265 1 122 1 5 1 253 1 321 1 47 1 135 1 14 1 358 1 88 1 
129 1 343 2 273 1 51 1 336 2 265 2 122 1 5 1 321 1 135 2 47 1 271 1 88 1 358 1 
343 1 181 1 135 1 193 1 311 1 205 1 265 1 336 1 176 1 122 1 
135 1 265 1 336 1 14 1 133 1 
135 1 205 1 265 1 336 1 14 1 
135 1 137 1 205 1 265 1 336 1 340 1 14 1 
343 1 78 1 306 1 205 1 336 1 265 1 196 1 122 1 66 1 29 1 47 1 135 1 220 1 82 2 70 2 92 1 358 1 88 1 
343 2 183 1 336 1 265 1 122 1 5 1 363 1 321 1 135 1 47 1 271 1 88 1 358 1 
157 1 347 1 28 1 29 1 174 2 67 1 82 1 279 1 356 1 70 1 92 1 15 1 
261 1 345 1 347 1 196 1 285 1 174 1 220 1 82 1 290 1 291 1 295 1 204 1 206 1 41 1 251 1 299 1 68 1 70 1 92 1 367 1 
67 1 15 1 
285 1 174 1 204 1 
16 1 
121 1 250 1 87 1 26 1 44 1 120 1 288 1 
215 1 320 1 288 1 
121 3 250 1 44 1 26 1 219 1 48 1 230 1 87 1 166 1 288 3 313 2 120 1 
114 1 121 2 241 1 250 1 87 1 26 1 44 1 120 1 288 2 
181 1 216 1 121 1 311 1 188 1 230 1 284 1 250 1 26 1 44 1 288 1 
121 1 230 1 250 1 26 1 44 1 120 1 288 1 
121 1 230 1 87 1 26 1 44 1 120 2 288 1 
121 2 250 1 44 2 26 2 308 1 339 1 230 1 364 1 120 1 288 2 
216 1 121 3 184 1 250 2 44 1 26 1 319 1 230 1 33 1 241 2 87 1 120 1 288 3 
181 2 121 2 250 1 348 1 44 1 26 1 96 1 188 1 311 1 230 1 241 1 176 1 87 1 120 1 288 2 
0 1 216 1 121 4 250 2 44 2 26 2 319 1 114 1 230 1 241 2 87 1 120 1 288 4 
121 1 230 1 250 1 87 1 26 1 44 1 120 1 288 1 
216 1 121 4 250 3 219 1 44 1 26 1 319 1 241 2 87 2 189 1 166 1 313 1 120 2 288 4 
121 2 250 1 44 1 26 1 309 1 230 1 241 1 71 1 242 1 87 1 120 1 288 2 
305 1 121 3 250 1 44 1 26 1 219 2 230 1 87 1 166 1 288 3 313 2 120 1 
179 1 338 2 163 1 250 2 
240 1 121 1 230 1 26 1 44 1 288 1 
184 1 121 2 241 1 230 1 250 1 87 1 26 1 44 1 120 1 288 2 
35 1 
121 1 230 1 250 1 87 1 26 1 44 1 120 1 288 1 
121 3 184 1 250 1 44 1 26 1 241 1 230 1 87 1 288 3 313 1 120 1 
216 1 250 1 189 1 319 1 
250 1 120 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (177,240) 375 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (177,240) 375 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 345 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 321 153 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 284 25 89 174 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 16 (11,228) (11,228) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (103,115,155,351) (103,115,155,351) 225 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (103,115,155,351) (103,115,155,351) (98,223,303,313) (98,223,303,313) (98,223,303,313) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 2 2 1 122 1 103 6 240 1 317 3 343 1 177 1 67 2 9 1 154 1 366 1 11 1 128 2 255 2 130 1 155 2 93 1 228 1 332 2 159 4 16 4 351 9 115 2 98 1 292 1 336 9 62 1 
1 2 2 1 122 1 103 6 240 1 317 3 343 1 177 1 67 2 9 1 154 1 366 1 11 1 128 2 130 1 255 2 155 2 93 1 228 1 332 2 159 4 16 4 351 9 115 2 98 1 292 1 336 9 62 1 
1 2 2 1 122 1 103 7 240 1 317 4 343 1 177 1 67 2 9 1 154 1 366 1 11 1 128 2 130 1 255 2 155 2 93 1 228 1 332 2 159 5 16 5 351 10 115 2 98 1 292 1 336 10 62 1 
1 2 2 1 122 1 103 4 240 1 317 2 343 1 177 1 67 2 9 1 154 1 366 1 11 1 128 2 130 1 255 1 155 2 228 1 332 2 159 3 16 3 351 7 115 2 98 1 292 1 336 7 62 1 
255 2 1 1 2 1 155 1 103 3 93 1 228 1 317 1 332 1 159 2 16 2 115 1 351 4 67 1 98 1 366 1 336 4 11 1 
1 1 295 1 122 1 155 1 341 1 228 1 332 1 114 1 115 1 351 2 292 1 366 1 336 2 11 1 128 1 
155 2 103 1 228 1 317 1 159 1 16 1 115 2 351 3 177 1 366 1 336 3 11 1 128 1 
177 1 155 1 375 1 366 1 336 1 351 1 115 1 
177 1 155 1 375 1 366 1 336 1 351 1 115 1 
12 1 311 1 199 1 
357 1 238 2 199 1 
78 1 203 2 339 2 191 2 265 2 88 1 219 2 28 2 
143 1 339 3 191 2 340 1 39 1 86 1 108 1 88 1 245 1 178 1 111 1 326 1 219 2 252 1 129 1 277 1 132 2 308 1 73 1 76 1 284 2 229 1 201 1 78 1 116 1 203 3 265 2 139 1 290 2 79 1 165 1 166 2 25 2 315 1 28 2 236 1 120 1 
203 1 339 1 191 1 265 1 88 1 179 1 331 1 219 1 150 1 28 1 
339 2 191 2 4 1 150 1 322 1 88 1 179 2 248 1 70 1 219 1 306 1 12 1 348 1 331 1 199 1 287 1 203 2 265 1 117 1 268 1 28 1 
191 1 339 1 12 1 306 2 4 1 199 1 203 1 322 1 287 1 265 1 117 2 179 1 219 1 70 1 28 1 
306 1 187 1 117 1 330 1 141 1 
12 1 226 1 306 2 187 1 117 2 199 1 141 1 205 1 
306 1 117 1 141 1 
191 1 339 1 306 1 331 1 150 1 203 1 187 1 88 1 265 1 117 1 179 1 248 1 219 1 28 1 
199 1 
12 1 306 2 187 1 117 2 215 1 199 1 141 1 205 1 
12 1 306 5 256 1 210 1 367 2 270 2 149 1 318 1 193 1 214 1 77 1 199 1 285 1 195 2 187 2 117 5 60 1 141 2 205 1 
78 1 311 1 
191 2 339 2 260 1 38 1 203 2 78 1 20 1 265 1 179 1 219 1 28 1 
188 1 213 1 355 1 
339 1 277 1 76 1 284 1 229 1 201 1 78 1 203 1 116 1 245 1 274 1 290 1 25 1 236 1 129 1 120 1 
277 1 191 1 339 2 198 1 213 1 76 1 284 1 229 1 201 1 116 1 6 1 203 2 245 1 290 1 219 1 25 1 120 1 28 1 236 1 129 1 
191 5 339 5 348 1 145 1 198 2 260 1 36 1 38 1 286 1 6 1 203 5 78 1 265 1 179 1 219 4 28 4 
203 2 339 2 191 2 179 1 68 1 219 2 150 1 28 2 
78 1 203 3 339 3 191 3 265 1 198 1 219 3 28 3 
203 1 339 1 191 1 179 1 219 1 150 1 28 1 
191 1 339 1 260 1 203 1 20 1 265 1 179 1 219 1 28 1 
339 4 191 3 340 1 63 1 4 1 39 1 86 1 322 1 6 1 245 1 88 1 178 1 179 1 111 1 326 1 219 3 70 1 252 1 129 1 277 1 306 1 132 1 308 1 198 1 260 1 76 1 284 1 229 1 201 1 78 1 116 1 203 4 287 1 265 2 117 1 139 1 290 1 166 2 25 1 58 1 315 1 120 1 28 3 236 1 
191 2 339 2 348 1 198 1 38 1 203 2 286 1 78 1 179 1 219 1 28 1 
191 3 339 3 306 1 198 2 63 1 260 1 4 1 199 1 6 1 203 3 322 1 287 1 265 1 117 1 179 1 125 1 219 3 70 1 28 3 
191 2 339 2 198 1 260 1 213 1 203 2 265 1 219 2 355 1 28 2 
339 1 277 1 76 1 284 1 229 1 201 1 78 1 203 1 116 1 245 1 290 1 25 1 236 1 129 1 120 1 
339 1 277 1 284 1 229 1 201 1 78 1 203 1 116 1 245 1 140 1 290 1 189 1 25 1 236 1 120 1 
340 1 30 1 123 1 213 2 39 1 151 1 178 1 111 1 326 1 220 1 252 2 132 4 156 1 227 1 186 1 188 2 266 1 373 1 80 1 165 2 234 1 166 2 315 1 355 2 
287 1 203 1 339 1 191 1 179 1 219 1 68 1 28 1 
231 1 100 1 
231 1 100 1 
244 1 360 1 
244 1 360 1 
244 1 231 1 360 1 100 1 
288 1 231 1 100 1 
288 1 231 1 100 1 
288 1 231 1 100 1 
231 1 100 1 64 1 
231 1 352 1 100 1 
244 1 231 2 360 1 242 1 100 2 200 1 
231 1 100 1 64 1 
231 1 100 1 64 1 
191 2 339 2 144 1 102 1 172 1 3 1 37 1 7 1 43 1 276 1 219 2 254 1 306 1 158 1 78 1 203 2 231 1 117 1 163 1 162 1 352 1 23 1 100 1 28 2 
237 1 306 2 358 1 32 1 258 1 37 2 158 2 200 1 199 1 7 2 364 1 43 2 231 2 117 2 162 1 163 3 302 1 100 2 46 2 
1 1 67 1 332 1 
1 1 341 1 332 1 
137 1 67 2 83 1 341 1 332 3 376 1 
137 1 67 1 211 1 341 1 332 2 376 1 
137 2 67 1 341 1 332 2 376 1 
357 1 144 1 238 3 30 1 102 1 210 2 172 1 270 1 193 1 84 2 151 1 362 1 195 1 42 2 87 1 152 1 306 5 12 1 256 3 280 1 367 1 135 1 199 2 230 2 19 1 187 4 117 5 80 1 234 1 141 1 205 1 168 1 
357 2 238 6 29 1 30 2 102 4 210 4 270 2 214 1 193 1 84 4 151 2 195 2 216 4 152 2 306 8 12 1 256 6 280 2 367 2 330 4 199 4 230 4 263 1 19 1 187 6 117 8 310 1 353 1 55 1 80 2 234 2 141 5 205 1 27 1 168 2 
357 2 238 4 102 1 30 1 210 2 270 1 214 1 84 2 151 1 362 1 195 1 42 1 87 1 152 1 12 1 306 3 256 3 367 1 280 1 199 3 230 2 187 2 117 3 80 1 234 1 168 1 
357 2 238 4 29 1 102 2 30 1 210 2 270 1 214 1 84 2 151 1 195 1 362 1 42 1 87 1 152 1 306 3 256 3 367 1 280 1 199 2 230 2 187 2 117 3 310 1 55 1 80 1 234 1 168 1 
116 1 311 1 164 1 
116 1 321 1 
319 1 
116 1 277 1 229 1 
116 1 307 1 
116 1 229 1 
116 3 277 1 66 1 164 2 272 1 229 1 
278 2 224 1 131 1 132 7 156 3 227 2 368 1 15 1 53 1 41 1 370 1 80 1 99 1 119 1 252 3 234 1 165 4 
278 2 224 1 131 1 132 7 156 3 227 2 368 1 15 1 53 1 41 1 370 1 80 1 99 1 119 1 252 3 234 1 165 4 
278 2 224 1 131 1 132 7 156 3 227 2 368 1 15 1 94 1 53 1 41 1 370 1 80 1 99 1 119 1 252 3 234 1 165 4 
0 1 30 3 340 1 147 1 39 1 41 1 151 3 326 1 252 15 278 3 224 1 328 1 131 1 132 31 280 3 156 10 368 1 227 5 15 2 53 2 262 4 160 3 370 5 233 1 99 2 80 4 119 2 166 2 165 16 234 4 294 1 315 1 81 1 61 1 
356 1 340 2 39 2 41 1 326 2 252 4 278 2 132 9 131 1 156 4 227 3 368 1 15 1 53 1 370 1 80 1 99 1 119 1 234 1 166 4 165 5 167 1 294 1 315 2 
1 1 103 1 212 1 146 1 296 1 105 1 341 1 83 1 271 1 67 1 325 1 366 1 11 1 128 1 49 1 155 1 228 1 332 2 284 1 201 1 351 2 115 1 118 1 289 1 290 1 25 1 336 2 59 1 120 1 
1 1 103 2 212 1 146 1 296 1 83 1 105 1 341 1 67 1 365 1 344 1 325 1 11 1 128 1 49 1 155 1 228 1 332 2 284 1 201 1 351 3 115 1 371 1 118 1 290 1 25 1 336 3 59 1 120 1 
49 1 1 1 146 1 103 2 83 1 341 1 105 1 228 1 332 2 284 1 201 1 351 2 371 1 67 1 365 1 118 1 290 1 325 1 25 1 59 1 336 2 11 1 120 1 128 1 
359 1 361 1 344 1 325 2 128 2 49 2 155 1 13 1 282 1 284 1 96 1 229 1 201 1 351 1 115 1 116 1 118 2 290 1 25 1 314 1 336 1 120 1 236 1 
1 1 212 1 146 1 296 1 105 1 341 1 83 1 271 1 67 1 365 1 325 1 366 1 128 1 49 1 155 1 332 2 284 1 201 1 351 1 115 1 118 1 290 1 25 1 336 1 59 1 120 1 
101 1 
191 1 339 1 238 2 192 1 193 1 194 1 298 1 4 1 195 1 8 1 152 1 70 1 112 1 12 1 306 5 348 1 256 2 72 2 13 1 74 1 157 2 261 2 350 2 309 1 199 2 201 1 116 1 203 1 117 5 25 2 268 1 205 3 120 1 357 2 169 1 210 2 270 1 320 1 173 1 322 1 179 1 324 1 47 1 181 2 367 1 183 2 284 2 333 4 229 1 96 1 287 1 290 2 141 6 235 2 236 2 
169 1 191 1 339 1 306 3 348 1 157 1 215 1 333 2 4 1 298 1 173 1 287 1 203 1 322 1 117 3 179 1 324 1 70 1 268 1 47 1 141 2 205 1 
169 1 191 1 339 1 306 2 348 1 261 1 333 3 4 1 298 1 173 1 287 1 203 1 322 1 117 2 179 1 324 1 70 1 268 1 47 1 
169 1 339 1 191 1 215 1 173 1 298 1 4 1 322 1 179 1 324 1 70 1 47 1 306 3 348 1 157 1 261 1 333 3 350 1 203 1 287 1 117 3 268 1 141 2 205 1 
339 2 191 2 193 1 4 1 298 1 150 1 195 1 8 1 248 1 301 1 70 1 112 1 12 2 306 5 348 1 256 1 72 2 157 4 261 3 350 4 199 2 203 2 265 1 117 5 268 1 205 3 28 1 169 1 357 2 210 1 270 1 215 1 173 1 363 1 322 1 88 1 179 2 324 1 219 1 47 1 181 2 367 1 183 2 331 1 333 5 95 1 52 1 185 1 287 1 141 7 235 2 
339 1 191 1 238 2 193 1 4 1 298 1 195 1 8 1 70 1 112 1 306 4 12 1 348 1 256 1 72 2 157 2 261 2 350 2 309 1 199 2 203 1 117 4 268 1 205 2 169 1 357 2 210 1 270 1 173 1 322 1 179 1 324 1 47 1 181 2 367 1 183 2 333 4 287 1 141 4 235 2 
357 2 169 1 339 1 191 1 210 1 270 1 193 1 173 1 298 1 4 1 195 1 322 1 8 1 179 1 324 1 301 1 70 1 112 1 47 1 181 2 12 1 306 4 348 1 256 1 72 2 367 1 183 2 157 2 261 2 350 2 333 4 95 1 52 1 199 1 203 1 287 1 117 4 268 1 141 4 205 2 235 2 
357 2 169 1 339 1 191 1 210 1 270 1 193 1 173 1 298 1 4 1 195 1 322 1 8 1 179 1 324 1 301 1 70 1 112 1 47 1 181 2 12 1 306 4 348 1 256 1 72 2 367 1 183 2 157 2 261 2 350 2 333 4 95 1 52 1 199 1 203 1 287 1 117 4 268 1 141 4 205 2 235 2 
169 1 191 1 339 1 306 2 348 1 333 2 4 1 298 1 173 1 287 1 203 1 322 1 117 2 179 1 345 1 324 1 70 1 268 1 47 1 
357 2 169 1 339 1 191 1 210 1 270 1 193 1 173 1 298 1 4 1 195 1 363 1 322 1 8 1 179 1 324 1 301 1 70 1 112 1 47 1 181 2 12 1 306 4 348 1 256 1 72 2 367 1 183 2 157 3 261 3 95 1 333 5 350 3 52 1 199 1 203 1 287 1 117 4 268 1 141 5 205 2 235 2 
357 2 169 1 339 1 191 1 210 1 270 1 193 1 173 1 298 1 4 1 195 1 363 1 322 1 8 1 179 1 324 1 301 1 70 1 112 1 47 1 181 2 12 1 306 4 348 1 256 1 72 2 367 1 183 2 157 3 261 3 95 1 333 5 350 3 52 1 199 1 203 1 287 1 117 4 268 1 141 5 205 2 235 2 
169 1 191 1 339 1 238 2 210 1 270 1 193 1 35 1 173 1 298 1 4 1 195 1 322 1 179 1 324 1 70 1 112 1 47 1 48 2 12 1 306 4 348 1 256 1 72 2 367 1 369 2 183 2 157 2 261 2 350 2 333 4 309 1 199 1 203 1 287 1 117 4 268 1 141 4 205 2 
340 1 213 1 39 1 41 1 178 1 111 1 326 1 220 1 252 3 278 1 131 1 132 6 156 2 368 1 227 2 53 1 78 2 188 1 311 1 99 1 80 1 166 2 165 3 234 1 355 1 315 1 
0 2 340 2 30 3 241 1 213 13 39 2 151 1 323 1 178 1 275 1 111 2 326 2 252 7 328 1 132 17 308 1 156 2 280 3 227 1 51 1 262 4 160 3 370 1 78 1 188 13 204 1 79 1 80 3 166 4 165 10 234 1 315 2 355 4 
339 2 191 1 340 1 39 1 273 1 6 1 245 1 274 1 178 1 111 1 219 1 326 1 69 1 252 1 129 1 277 1 132 2 308 1 51 1 198 1 76 1 284 1 229 1 201 1 78 1 116 1 203 2 264 1 290 1 79 1 25 1 166 2 165 1 120 1 236 1 355 1 315 1 28 1 
191 1 339 3 340 3 151 2 6 1 245 2 111 3 252 10 308 1 156 8 198 1 76 2 201 2 78 2 203 3 116 2 22 2 79 1 80 3 25 3 166 6 165 10 206 2 28 1 315 3 120 2 355 7 30 2 33 1 213 7 39 3 41 1 176 1 85 2 86 2 365 1 178 3 45 2 326 3 219 1 129 2 278 1 277 2 131 1 132 20 280 2 368 1 227 4 51 1 284 3 53 1 229 2 370 4 188 7 290 3 99 1 234 3 337 1 236 1 
290 1 24 1 284 1 25 1 236 1 
191 1 339 1 340 1 30 1 213 1 39 1 151 1 178 1 111 1 219 1 326 1 252 2 132 3 156 1 280 1 227 1 51 1 260 1 203 1 188 1 265 1 80 1 166 2 165 1 234 1 190 1 355 1 315 1 28 1 
132 2 340 1 30 1 156 1 213 1 39 1 370 1 188 1 178 1 266 1 111 1 80 1 326 1 220 1 166 2 165 2 355 1 315 1 
132 2 340 1 156 1 227 1 213 1 39 1 151 1 186 1 188 1 178 1 111 1 326 1 220 1 166 2 234 1 252 2 355 1 315 1 
30 1 340 1 213 2 39 1 151 1 178 1 111 1 326 1 220 1 252 2 132 4 280 1 156 2 227 1 370 1 188 2 80 1 165 2 166 2 234 1 315 1 355 2 
24 1 
24 1 
24 1 
30 1 340 1 213 2 39 1 151 1 178 1 111 1 326 1 252 2 132 4 280 1 156 2 227 1 370 1 188 2 80 1 165 2 166 2 234 1 315 1 355 2 
339 1 340 1 39 1 86 1 245 1 178 1 111 1 326 1 252 1 129 1 277 1 132 2 308 1 76 1 284 1 229 1 201 1 78 1 116 1 203 1 290 1 79 1 165 1 25 1 166 2 120 1 236 1 315 1 
339 1 340 1 39 1 245 1 178 1 111 1 346 1 326 1 252 1 277 1 132 2 308 1 284 1 229 1 201 1 78 1 116 1 203 1 140 1 290 1 79 1 189 1 165 1 25 1 166 2 120 1 236 1 315 1 
30 1 340 1 213 2 39 1 151 1 178 1 111 1 326 1 252 2 132 4 280 1 156 2 51 1 227 1 370 1 188 2 80 1 165 2 166 2 234 1 315 1 355 2 
339 1 30 1 340 1 213 2 39 1 151 1 86 1 245 1 178 1 111 1 326 1 252 2 129 1 277 1 132 4 156 2 280 1 227 1 76 1 284 1 229 1 201 1 370 1 116 1 203 1 188 2 289 1 290 1 80 1 234 1 165 2 25 1 166 2 206 1 355 2 120 1 315 1 
191 1 339 1 340 1 30 1 213 1 39 1 151 1 178 1 111 1 219 1 326 1 252 1 132 3 156 1 280 1 51 1 257 1 260 1 370 1 203 1 265 1 188 1 80 1 234 1 166 2 165 2 315 1 28 1 355 1 
356 1 340 2 82 1 30 1 39 2 175 2 151 1 246 1 326 2 252 4 127 1 222 1 71 1 132 8 280 1 156 1 370 1 80 1 166 4 165 4 234 1 26 1 207 1 121 2 315 2 
356 1 340 2 82 1 30 1 39 2 175 2 151 1 246 1 326 2 252 4 127 1 222 1 71 1 132 8 280 1 156 2 227 1 370 1 80 1 166 4 165 4 234 1 26 1 207 1 121 2 315 2 
356 1 30 1 82 1 340 1 39 1 175 2 151 1 41 2 246 1 326 1 252 8 127 1 71 1 278 2 132 18 131 2 280 1 156 4 368 2 227 3 53 2 370 1 99 2 80 3 166 2 165 10 234 3 26 1 121 1 315 1 
356 1 82 1 340 2 30 2 39 2 175 2 151 2 246 1 326 2 252 6 127 2 71 1 132 12 50 1 280 2 156 4 227 2 370 2 80 2 166 4 165 6 234 2 26 1 207 1 121 1 315 2 
356 1 340 1 82 1 30 1 39 1 175 2 151 1 246 2 326 1 252 4 127 1 71 1 132 8 280 1 80 1 166 2 165 4 234 1 26 1 121 2 315 1 
7 1 43 1 231 1 32 1 110 1 258 1 100 1 37 1 158 1 200 1 
352 1 3 1 
7 1 43 1 21 1 231 1 100 1 283 1 126 1 37 1 158 1 
288 1 40 1 
31 1 242 1 64 1 
237 1 306 1 358 1 32 1 258 1 37 1 158 1 200 1 199 1 7 1 364 1 43 1 117 1 231 1 162 1 163 2 100 1 46 1 
237 1 306 1 358 1 32 1 258 1 37 1 158 1 200 1 199 1 7 1 364 1 43 1 117 1 231 1 162 1 163 2 100 1 46 1 
237 1 306 1 358 1 32 1 258 1 37 1 158 1 200 1 199 1 7 1 364 1 43 1 117 1 231 1 162 1 163 2 100 1 46 1 
288 1 242 1 40 1 
288 1 242 1 40 1 
31 1 64 1 
31 1 242 1 64 1 
254 1 276 1 
339 2 191 2 144 1 102 1 172 1 3 1 37 1 364 1 7 1 43 1 276 1 46 1 219 2 305 1 254 1 306 1 158 1 78 1 203 2 187 1 117 1 231 1 163 1 352 1 23 1 100 1 28 2 
143 2 339 2 191 2 340 1 39 1 178 1 90 1 111 1 217 1 250 1 326 1 252 1 132 2 308 1 51 1 75 1 284 2 184 1 229 1 201 1 334 1 116 1 203 2 290 2 79 1 166 2 165 1 25 2 377 1 120 1 315 1 
49 1 1 1 182 1 296 1 83 1 341 1 105 1 281 1 133 1 332 2 284 2 201 1 67 1 365 1 289 1 290 2 25 2 59 1 120 1 
49 1 1 1 296 1 83 1 341 1 92 1 105 1 281 1 332 2 284 1 201 1 67 1 365 1 290 1 25 1 59 1 120 1 
49 1 182 1 91 1 359 1 13 1 284 1 229 1 96 1 201 1 116 1 290 1 25 1 120 1 236 1 
49 1 1 1 182 1 296 1 83 1 341 1 105 1 281 1 133 1 332 2 284 1 201 1 67 1 365 1 290 1 25 1 59 1 120 1 
267 1 
12 1 256 1 210 1 311 1 318 1 199 1 285 1 
357 1 238 1 210 1 270 1 193 1 195 1 8 1 181 1 306 1 12 1 256 1 367 1 199 2 117 1 141 1 235 1 205 1 
277 1 367 1 270 1 193 1 284 1 321 1 229 1 201 1 195 1 116 1 5 1 66 1 290 1 153 1 25 1 120 1 236 1 
357 3 316 2 238 6 209 1 30 2 239 1 210 5 270 2 193 2 320 1 84 5 151 2 195 2 107 1 109 1 152 1 347 1 306 1 328 1 12 2 256 8 367 2 280 2 329 1 262 1 199 5 230 5 160 1 18 1 117 1 80 2 234 2 141 1 293 1 205 1 
339 1 316 2 191 1 210 2 270 1 297 1 193 1 150 1 195 1 107 1 88 1 179 1 248 1 219 1 306 1 131 1 256 2 367 1 331 1 95 1 53 1 203 1 265 1 117 1 99 1 80 2 234 1 28 1 
12 1 210 1 256 1 367 1 270 1 318 1 193 1 199 1 285 1 195 1 
357 5 316 2 238 10 30 2 210 5 256 5 280 2 84 5 199 5 230 5 151 2 107 1 22 1 80 2 234 2 
12 1 306 1 117 1 199 1 141 1 205 1 
210 2 192 1 270 2 214 1 193 1 194 1 320 2 174 1 195 2 300 1 89 2 152 2 221 1 306 3 256 2 367 2 13 1 284 4 229 1 96 1 201 1 116 1 117 3 290 4 25 4 141 4 205 2 120 1 236 2 
339 3 191 2 340 1 39 1 86 1 88 1 245 1 178 1 111 1 326 1 219 2 252 1 129 1 277 1 132 1 308 1 76 1 284 1 229 1 201 1 78 1 203 3 116 1 265 2 139 1 290 1 166 2 25 1 315 1 236 1 28 2 120 1 
357 2 278 1 238 4 12 2 210 2 256 1 367 1 270 1 193 1 320 1 84 2 199 4 230 2 195 1 152 1 
7 1 43 1 378 1 
7 1 43 1 378 1 
7 1 43 1 378 1 
7 1 97 1 43 1 
254 1 7 1 43 1 32 1 342 1 
7 1 97 1 43 1 
7 1 97 1 43 1 
7 1 43 1 
231 1 100 1 
356 1 0 1 340 1 30 1 39 1 41 1 326 1 252 5 278 1 328 1 131 1 132 11 156 2 280 1 227 2 368 1 53 1 262 2 160 1 99 1 80 2 234 1 166 2 165 6 293 1 315 1 
356 1 0 1 340 2 30 1 39 2 41 1 326 2 252 5 278 1 328 1 131 1 132 11 280 1 156 3 227 2 368 1 259 1 53 1 262 2 160 1 370 1 99 1 80 2 234 1 166 4 165 6 293 1 315 2 
356 1 340 3 209 1 30 2 39 3 41 1 151 2 109 1 326 3 252 10 347 1 278 1 328 1 131 1 132 19 280 2 156 4 368 1 227 3 259 1 53 1 262 1 160 1 370 1 18 1 99 1 80 3 166 6 165 9 234 3 293 1 294 1 315 3 
356 1 340 3 209 1 30 2 39 3 41 1 151 1 109 1 326 3 252 7 347 1 278 1 328 1 131 1 132 17 280 2 156 5 368 1 227 3 259 1 53 1 262 1 160 1 370 2 18 1 99 1 80 3 166 6 165 10 234 2 293 1 294 1 315 3 
356 1 0 1 340 1 30 1 39 1 41 1 326 1 252 5 278 1 328 1 131 1 132 11 156 2 280 1 227 2 368 1 53 1 262 2 160 1 99 1 80 2 234 1 166 2 165 6 293 1 315 1 
356 1 340 1 209 1 30 2 39 1 151 2 109 1 326 1 252 6 347 1 328 1 132 12 280 2 156 2 227 1 262 1 160 1 370 1 18 1 80 2 166 2 165 6 234 2 293 1 315 1 
356 1 340 4 209 1 30 2 39 4 41 1 151 1 109 1 326 4 252 8 347 1 278 1 328 1 131 1 132 18 280 2 156 5 368 1 227 3 259 1 53 1 262 1 160 1 370 2 18 1 99 1 80 3 166 8 165 10 234 2 293 1 294 2 315 4 
356 1 340 4 209 1 30 3 39 4 151 2 109 1 326 4 252 7 347 1 328 1 132 16 280 3 156 6 227 3 262 1 160 1 370 3 18 1 80 3 166 8 165 9 234 2 293 1 207 1 294 2 315 4 
132 7 131 1 156 6 368 1 227 3 53 3 41 2 370 3 99 3 80 1 252 4 234 1 165 3 
356 1 340 4 209 1 30 2 39 4 41 1 151 1 109 1 326 4 252 8 347 1 278 1 328 1 131 1 132 18 280 2 156 4 368 1 227 3 53 1 262 1 160 1 370 1 18 1 99 1 80 3 166 8 165 10 234 2 293 1 207 1 294 2 315 4 
278 1 131 1 132 8 340 2 156 3 227 2 368 1 39 2 53 1 41 1 370 1 80 1 99 1 326 2 234 1 252 4 165 4 166 4 294 1 315 2 
278 1 131 1 132 6 156 2 368 1 227 2 53 1 41 1 311 1 99 1 80 1 252 3 165 3 234 1 
340 1 30 1 132 4 156 2 280 1 227 1 259 1 39 1 151 1 370 1 80 1 326 1 252 2 234 1 166 2 165 2 315 1 
0 1 328 1 132 7 30 1 280 1 156 2 227 1 262 2 151 1 160 1 370 1 80 1 234 1 252 4 165 3 
0 1 30 2 340 2 39 2 243 1 41 1 151 2 323 1 275 1 326 2 252 12 278 1 131 1 132 23 156 9 280 2 368 1 227 5 53 2 262 2 160 2 370 4 99 2 80 3 165 11 234 3 166 4 294 2 315 2 
132 1 252 1 262 1 
132 1 165 1 160 1 
340 1 132 6 30 1 280 1 156 3 227 2 259 1 39 1 151 1 370 1 22 1 80 1 326 1 166 2 252 3 165 3 234 1 315 1 
356 1 340 1 209 1 30 2 39 1 151 2 109 1 326 1 252 6 347 1 328 1 132 12 280 2 156 2 227 1 262 1 160 1 370 1 18 1 80 2 166 2 165 6 234 2 293 1 315 1 
131 1 132 6 156 2 227 1 53 1 370 1 80 1 99 1 165 3 234 1 252 3 
132 3 340 1 156 2 227 1 368 1 53 1 243 1 39 1 41 1 370 1 99 1 326 1 165 1 252 2 166 2 294 1 315 1 
356 1 340 1 132 10 131 1 156 5 227 3 297 1 39 1 53 2 370 2 99 2 80 2 326 1 166 2 165 5 252 5 234 2 315 1 
356 1 340 1 30 1 132 2 156 1 39 1 370 1 80 1 326 1 166 2 165 2 315 1 
356 1 340 1 30 1 132 4 156 2 280 1 227 1 39 1 151 1 370 1 80 1 326 1 252 2 234 1 166 2 165 2 315 1 
356 1 132 3 340 3 156 2 227 1 243 1 39 3 53 1 370 1 99 1 326 3 252 2 166 6 165 1 294 1 207 1 315 3 
356 1 0 1 340 5 30 3 243 1 39 5 41 1 151 3 326 5 252 18 278 1 328 1 131 2 132 34 280 3 156 12 368 1 227 7 259 1 53 3 262 4 160 3 370 5 233 1 99 3 80 5 166 10 165 16 234 5 294 2 207 1 61 1 81 1 315 5 
191 1 339 1 348 1 38 1 286 1 203 1 78 1 179 1 312 1 
338 1 253 1 191 1 339 1 348 1 148 1 134 1 38 1 78 1 286 1 203 1 179 1 54 1 312 1 
116 1 13 1 290 1 311 1 284 1 25 1 229 1 96 1 201 1 120 1 236 1 
277 1 191 1 339 2 198 1 76 1 284 1 229 1 201 1 78 1 116 1 203 2 245 1 290 1 219 1 25 1 120 1 28 1 236 1 
339 2 191 2 245 1 89 1 179 1 219 1 70 1 277 2 307 1 198 1 76 1 284 1 229 2 201 1 78 1 203 2 116 3 287 1 136 1 290 1 25 1 28 2 120 1 
339 2 191 2 106 1 245 1 89 1 179 1 219 1 70 1 277 2 307 1 198 1 284 2 229 2 201 1 78 1 203 2 116 3 287 1 136 1 290 2 189 1 25 2 28 2 120 1 
208 1 4 1 106 1 321 1 89 1 277 1 306 2 307 1 12 1 284 3 229 1 199 1 201 1 202 1 116 4 136 1 117 2 290 3 164 1 25 3 141 1 120 1 236 1 
277 1 12 1 307 1 306 2 284 3 65 1 4 1 106 1 321 1 199 1 229 1 201 1 136 1 116 4 117 2 89 1 290 3 164 1 25 3 141 1 236 1 120 1 
290 1 124 1 284 1 25 1 201 1 120 1 
143 1 277 1 14 1 284 7 229 2 201 2 116 3 66 1 365 1 196 1 289 1 290 7 180 1 124 1 10 1 218 1 250 1 25 6 327 1 236 2 120 3 
191 1 339 2 340 2 245 1 111 2 252 3 156 2 198 1 76 1 201 1 203 2 116 1 78 2 80 1 25 1 166 4 165 3 206 1 355 1 28 1 315 2 120 1 213 1 39 2 86 1 85 1 41 1 178 2 326 2 219 1 129 1 277 1 278 1 131 1 132 6 51 1 368 1 227 2 284 1 184 1 53 1 229 1 188 1 289 1 290 1 99 1 234 1 
210 1 104 1 270 2 318 1 193 2 65 1 4 1 321 1 195 2 221 1 12 1 306 3 256 1 367 2 284 1 199 1 285 1 116 2 187 1 117 3 290 1 56 1 291 1 164 1 25 1 141 2 205 1 236 1 
277 1 319 1 284 1 229 1 201 1 5 1 116 1 66 1 290 1 164 1 124 1 25 1 120 1 
13 1 349 1 284 4 106 1 96 1 229 1 201 1 116 1 289 1 290 4 25 4 120 1 236 1 
170 1 277 1 279 1 284 2 229 1 201 1 116 1 89 1 290 2 180 1 10 1 25 2 337 1 120 2 
1 1 290 1 341 1 105 1 332 1 284 1 25 1 201 1 120 1 236 1 
284 2 229 1 201 1 116 1 365 1 289 1 290 2 217 1 250 1 25 2 120 1 
13 1 14 1 349 1 284 5 96 1 229 2 201 2 116 3 196 1 89 1 289 1 290 5 250 1 25 4 236 1 120 2 
13 1 14 1 349 1 284 5 96 1 229 2 201 2 116 3 89 1 289 1 290 5 232 1 250 1 25 4 236 1 120 2 
277 1 191 1 339 2 198 1 284 1 229 1 201 1 78 1 116 1 203 2 245 1 290 1 189 1 219 1 25 1 120 1 28 1 236 1 
277 1 284 1 229 1 201 1 116 1 66 1 89 1 290 1 180 1 10 1 25 1 327 1 120 2 
78 1 299 1 335 1 44 1 57 1 
12 1 306 2 34 1 63 1 4 1 199 1 78 1 287 1 299 2 322 1 187 1 117 2 179 1 335 2 44 1 249 1 70 1 354 1 57 2 
191 1 339 1 75 1 203 1 335 1 90 1 44 1 57 1 377 1 
44 1 249 1 354 1 
311 1 228 1 11 1 
155 1 228 1 336 1 11 1 351 1 115 1 
325 1 336 1 128 1 
197 1 138 1 122 2 155 1 228 1 304 1 366 1 336 3 11 1 351 3 115 1 
255 1 103 1 155 1 228 1 336 2 11 1 351 2 115 1 
1 1 155 1 332 1 159 1 16 1 115 1 351 1 67 1 98 1 366 1 336 1 
155 1 228 1 366 1 336 1 351 1 115 1 
155 1 228 1 366 1 336 1 16 1 11 1 351 1 115 1 
269 1 113 1 155 2 228 1 366 1 336 2 142 1 351 2 115 2 
130 1 155 1 103 2 228 1 317 1 159 1 16 1 115 1 351 3 366 1 336 3 11 1 62 1 
225 1 103 1 155 1 341 1 332 1 366 1 336 1 351 2 115 1 
255 1 155 2 103 2 93 1 228 1 317 1 159 1 16 1 115 2 351 4 366 1 336 4 11 1 
155 1 228 1 366 1 336 1 11 1 351 1 115 1 
197 1 122 1 103 2 155 1 228 2 317 1 159 1 16 1 351 4 115 1 161 1 304 1 336 4 11 2 
223 1 103 1 155 1 303 1 313 1 366 1 336 1 351 2 115 1 
197 1 372 1 122 2 155 1 228 1 304 2 366 1 336 3 11 1 351 3 115 1 
247 1 374 2 251 1 16 2 
155 1 366 1 336 1 17 1 351 1 115 1 
130 1 103 1 155 1 228 1 366 1 336 2 11 1 351 2 115 1 
171 1 
155 1 228 1 366 1 336 1 11 1 351 1 115 1 
130 1 103 1 122 1 155 1 228 1 366 1 336 3 11 1 351 3 115 1 
161 1 317 1 159 1 16 1 
228 1 

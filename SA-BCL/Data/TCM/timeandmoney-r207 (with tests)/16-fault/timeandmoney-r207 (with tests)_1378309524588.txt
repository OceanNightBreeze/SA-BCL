#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) (137,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (137,310) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) (137,310) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (115,144,195,236) (115,144,195,236) (115,144,195,236) 304 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 302 12 81 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 63 163 320 325 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 63 163 320 325 170 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 184 295 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 271 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 271 159 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1145 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 304 1 115 1 195 1 
34 1 255 1 156 1 
231 2 255 1 173 1 
107 2 296 1 4 2 299 2 22 2 258 2 157 2 227 1 
122 2 4 3 169 1 172 1 9 1 243 2 49 1 244 1 291 1 55 1 296 1 17 1 299 2 89 1 19 1 59 1 22 3 258 2 92 1 311 1 260 1 149 1 312 1 65 1 28 2 154 1 157 2 30 1 217 1 107 2 185 1 224 1 225 2 227 1 333 1 39 2 121 1 
107 1 321 1 160 1 296 1 4 1 299 1 22 1 258 1 157 1 166 1 
4 2 287 1 296 1 299 1 90 1 209 1 255 1 22 2 258 2 24 1 147 1 98 1 157 1 107 1 160 1 321 2 109 1 34 1 223 1 166 1 38 1 
4 2 287 1 296 1 299 2 209 1 255 1 22 2 258 2 24 2 147 1 157 2 107 2 321 2 160 1 109 1 34 1 223 1 166 1 38 2 
218 1 64 1 267 1 24 1 38 1 
64 1 34 1 267 1 255 1 193 1 24 2 38 2 278 1 
267 1 24 1 38 1 
64 1 4 1 157 1 107 1 321 1 160 1 296 1 299 1 223 1 22 1 166 1 258 1 38 1 24 1 
255 1 
64 1 97 1 34 1 267 1 255 1 193 1 24 2 38 2 
64 2 125 1 264 2 267 2 315 1 203 1 87 1 272 2 136 2 294 1 178 1 322 1 34 1 255 1 58 1 193 1 38 5 24 5 93 1 
1 1 28 1 4 2 181 1 154 1 30 1 157 1 243 1 244 1 217 1 107 1 185 1 225 1 19 1 59 1 22 2 79 1 258 1 92 1 333 1 
156 1 227 1 
4 2 240 1 157 1 107 1 299 1 22 2 258 2 227 2 168 1 
1 1 161 1 86 1 
28 1 4 1 154 1 30 1 243 1 244 1 175 1 217 1 185 1 225 1 59 1 19 1 22 1 227 1 333 1 92 1 
107 3 299 1 4 3 22 3 79 1 258 3 157 3 227 1 
107 1 321 1 160 1 4 1 22 1 258 1 157 1 
107 1 321 1 4 1 299 1 240 1 22 1 258 1 157 1 168 1 
169 1 4 4 172 1 8 1 243 1 9 1 244 1 89 1 19 1 22 4 258 3 24 1 92 1 28 1 181 1 30 1 107 3 185 1 109 1 38 1 39 1 121 1 122 2 287 1 49 1 291 1 296 1 55 1 299 2 209 1 59 1 147 1 149 1 65 1 154 1 157 3 217 1 321 2 225 1 328 1 330 1 79 1 227 1 333 1 168 1 
107 1 98 1 4 2 266 1 22 2 258 2 157 1 79 1 227 1 
4 3 287 1 181 1 157 3 246 1 107 3 321 1 109 1 299 1 255 1 209 1 22 3 328 1 79 2 258 3 24 1 38 1 147 1 168 1 
1 1 4 2 157 2 107 2 161 1 299 1 22 2 79 1 258 2 168 1 
28 1 4 1 154 1 30 1 243 1 244 1 217 1 185 1 225 1 59 1 19 1 22 1 227 1 333 1 92 1 
28 1 4 1 30 1 243 1 182 1 244 1 217 1 111 1 225 1 59 1 19 1 22 1 227 1 333 1 92 1 
122 2 1 2 234 1 285 1 237 1 86 2 9 2 49 1 10 1 291 1 177 1 205 1 55 1 15 1 16 1 89 1 308 1 311 2 149 1 104 1 108 1 161 2 39 4 121 1 
107 1 321 1 250 1 4 1 22 1 258 1 157 1 147 1 
107 4 98 1 300 1 299 1 4 5 266 1 181 1 22 5 258 5 157 4 79 2 227 1 25 1 168 1 
107 2 321 1 160 1 250 1 4 2 22 2 258 2 157 2 
268 1 309 1 
268 1 309 1 
249 1 105 1 
249 1 105 1 
249 1 105 1 
128 1 268 1 309 1 
268 1 69 1 309 1 
249 1 268 2 309 2 105 1 95 1 88 1 
128 1 268 1 309 1 
128 1 268 1 309 1 
85 1 268 1 309 1 
85 1 268 1 309 1 
85 1 268 1 309 1 
197 1 4 1 198 1 200 2 130 2 131 2 45 2 133 1 50 1 54 1 296 1 299 1 301 1 22 1 258 1 24 2 309 2 268 2 157 1 72 1 183 2 107 1 321 1 160 1 223 1 190 1 166 1 38 2 
235 1 4 2 151 1 200 1 131 1 268 1 130 1 45 1 69 1 289 1 157 2 47 1 183 1 107 2 54 1 141 1 22 2 61 1 258 2 227 1 91 1 38 1 24 1 309 1 
214 1 326 1 317 1 
326 1 317 1 194 1 
214 2 222 1 100 1 286 1 317 3 194 1 
214 1 14 1 222 1 100 1 317 2 194 1 
214 1 100 1 222 2 317 2 194 1 
231 3 234 1 233 1 282 1 285 1 6 1 173 1 289 1 47 1 87 3 136 1 177 1 297 1 255 2 210 1 257 2 91 1 308 1 24 5 64 4 264 1 267 1 316 2 315 1 272 1 74 1 162 1 322 2 77 2 274 1 34 1 193 1 38 5 
230 1 231 9 234 3 233 1 285 3 171 1 6 2 173 3 289 4 87 8 136 2 293 1 177 3 178 1 255 5 211 1 308 3 24 9 64 7 264 2 267 6 316 6 315 1 272 2 73 1 218 5 74 2 162 3 322 6 77 6 274 3 34 1 114 5 331 1 193 1 38 9 
282 1 234 1 231 4 285 1 6 1 173 2 289 1 87 3 136 1 177 1 178 1 255 3 210 1 257 1 24 3 308 1 64 2 264 1 316 2 272 1 74 1 162 1 322 2 274 1 77 2 34 1 38 3 
231 7 282 1 234 2 285 2 171 1 6 1 173 3 289 2 87 5 136 1 177 2 178 1 255 4 210 1 257 2 24 4 308 2 64 3 264 1 316 4 272 1 73 1 74 1 162 2 322 4 77 4 274 2 34 1 331 1 38 4 
256 1 156 1 217 1 
75 1 217 1 
221 1 
19 1 217 1 
248 1 284 1 19 1 59 1 256 2 217 3 
19 1 59 1 217 1 
3 1 217 1 
127 1 285 1 314 1 237 2 9 3 241 1 270 1 103 1 48 1 13 2 251 1 16 3 187 1 18 1 308 1 311 4 39 7 
127 1 285 1 314 1 237 2 9 3 241 1 270 1 103 1 48 1 13 2 251 1 16 3 187 1 18 1 308 1 311 4 39 7 
283 1 127 1 285 1 314 1 237 2 9 3 241 1 270 1 103 1 48 1 13 2 251 1 16 3 187 1 18 1 308 1 311 4 39 7 
122 2 234 3 83 1 127 1 285 4 237 6 44 3 48 1 241 3 9 15 49 1 204 1 13 1 291 1 177 2 55 1 251 6 16 12 18 1 63 4 308 5 311 17 149 1 261 1 314 1 270 3 103 2 70 1 106 1 163 1 187 2 274 3 110 1 332 1 39 32 
122 4 126 1 127 1 285 1 237 3 9 4 48 1 241 1 49 2 13 2 291 2 55 2 16 4 251 1 308 1 311 5 149 2 314 1 103 1 270 1 106 1 187 1 39 9 228 1 
84 1 144 1 304 1 115 1 195 1 
84 1 144 1 115 1 195 1 137 1 
84 1 236 1 144 1 310 1 
84 1 144 1 115 1 195 1 137 1 
84 1 144 1 304 1 115 1 195 1 
318 1 
0 2 231 2 82 1 4 1 173 2 87 2 243 2 11 2 244 1 245 1 90 1 19 1 255 3 22 1 258 1 24 5 28 2 98 1 263 2 264 1 267 6 269 2 30 1 272 1 31 1 186 1 109 1 34 2 193 3 38 5 41 1 287 1 201 1 132 2 136 1 51 1 52 1 140 1 56 1 302 1 209 1 143 1 307 2 147 1 66 1 152 1 67 2 315 1 217 1 74 1 321 1 322 2 76 4 225 2 333 2 
82 1 4 1 287 1 11 1 245 1 51 1 52 1 90 1 209 1 255 2 22 1 258 1 24 3 147 1 97 1 98 1 66 1 267 2 321 1 109 1 76 2 34 2 193 1 38 3 
82 1 66 1 98 1 4 1 287 1 132 1 51 1 245 1 321 1 52 1 76 3 109 1 34 2 90 1 255 2 209 1 22 1 258 1 38 2 24 2 147 1 
82 1 4 1 287 1 132 1 11 1 245 1 51 1 52 1 90 1 209 1 255 3 22 1 258 1 24 3 147 1 97 1 98 1 66 1 263 1 267 2 321 1 109 1 76 3 34 3 193 1 38 3 
0 2 82 1 4 2 173 2 87 1 11 4 12 1 245 1 90 1 255 3 22 2 258 2 24 5 97 1 98 1 263 4 264 1 267 7 269 2 272 1 107 1 32 1 109 1 34 3 193 3 276 1 38 5 287 1 132 3 136 1 51 1 52 1 296 1 299 1 302 1 209 1 143 1 307 2 62 1 147 1 66 1 67 2 315 1 157 1 160 1 321 2 76 5 322 1 324 1 223 1 166 1 
0 2 231 2 82 1 4 1 287 1 132 2 173 2 87 1 11 2 136 1 51 1 245 1 52 1 302 1 90 1 143 1 209 1 255 4 307 2 22 1 258 1 24 4 147 1 66 1 98 1 263 2 264 1 267 4 67 2 315 1 269 2 272 1 31 1 321 1 322 1 109 1 76 4 34 3 193 2 38 4 
0 2 82 1 4 1 287 1 132 2 173 2 87 1 11 2 12 1 136 1 245 1 51 1 52 1 302 1 90 1 143 1 209 1 255 3 307 2 22 1 258 1 24 4 147 1 98 1 66 1 263 2 264 1 267 4 67 2 315 1 269 2 272 1 321 1 322 1 109 1 76 4 34 3 324 1 193 2 276 1 38 4 
0 2 82 1 4 1 287 1 132 2 173 2 87 1 11 2 12 1 136 1 245 1 51 1 52 1 302 1 90 1 143 1 209 1 255 3 307 2 22 1 258 1 24 4 147 1 98 1 66 1 263 2 264 1 267 4 67 2 315 1 269 2 272 1 321 1 322 1 109 1 76 4 34 3 324 1 193 2 276 1 38 4 
82 1 4 1 287 1 12 1 245 1 51 1 52 1 90 1 302 1 209 1 255 2 307 1 22 1 258 1 24 2 147 1 98 1 66 1 67 1 321 1 109 1 76 2 34 2 38 2 81 1 
0 2 82 1 4 1 287 1 132 3 173 2 87 1 11 3 12 1 136 1 245 1 51 1 52 1 302 1 90 1 143 1 209 1 255 3 307 2 22 1 258 1 62 1 24 4 147 1 98 1 66 1 264 1 263 3 67 2 267 5 315 1 269 2 272 1 321 1 322 1 109 1 76 5 324 1 34 3 193 2 276 1 38 4 
0 2 82 1 4 1 287 1 132 3 173 2 87 1 11 3 12 1 136 1 245 1 51 1 52 1 302 1 90 1 143 1 209 1 255 3 307 2 22 1 258 1 62 1 24 4 147 1 98 1 66 1 264 1 263 3 67 2 267 5 315 1 269 2 272 1 321 1 322 1 109 1 76 5 324 1 34 3 193 2 276 1 38 4 
231 2 82 1 4 1 287 1 132 2 87 1 11 2 136 1 51 1 245 1 52 1 142 2 253 2 302 1 90 1 209 1 255 3 307 2 22 1 258 1 24 4 147 1 66 1 98 1 263 2 264 1 267 4 67 2 315 1 272 1 31 1 321 1 322 1 109 1 76 4 34 3 193 2 119 1 38 4 
1 1 122 2 127 1 237 2 285 1 86 1 48 1 241 1 9 3 49 1 13 1 291 1 55 1 16 2 89 1 308 1 311 3 149 1 314 1 156 1 270 1 108 1 161 1 227 2 39 6 121 1 
122 4 1 13 232 1 234 3 237 1 285 1 44 3 86 13 9 7 49 2 204 2 176 1 291 2 177 1 55 2 251 1 16 2 89 2 21 1 63 4 308 3 311 10 260 1 149 2 65 1 265 1 219 1 161 4 163 1 274 3 227 1 39 17 121 1 
122 2 4 2 243 1 9 1 244 1 49 1 175 1 291 1 55 1 89 1 207 1 19 1 59 1 21 1 22 2 258 1 92 1 311 1 260 1 149 1 28 1 65 1 181 1 154 1 30 1 157 1 217 1 107 1 185 1 161 1 225 1 327 1 192 1 79 1 227 1 333 1 39 2 121 1 
1 7 234 2 2 1 4 3 237 4 172 2 174 2 86 7 241 1 9 10 243 3 244 2 13 1 177 2 251 4 16 8 89 3 19 2 21 1 22 3 258 1 23 2 92 2 260 1 180 1 96 1 28 3 181 1 30 2 270 1 107 1 185 2 274 2 188 2 39 20 121 3 122 6 127 1 285 3 48 1 49 3 291 3 55 3 59 2 303 2 60 1 308 3 311 10 149 3 65 1 314 1 154 2 157 1 217 2 161 7 225 3 79 1 227 2 333 1 
122 4 42 1 4 1 243 7 9 1 244 2 49 2 291 2 55 2 140 1 17 2 89 2 56 1 19 2 20 1 22 1 258 1 311 1 260 1 149 2 27 1 96 1 28 8 65 1 155 1 157 1 30 2 217 3 107 1 108 1 220 1 189 1 225 8 116 1 79 1 80 1 333 2 39 2 121 2 
1 1 122 2 234 1 4 1 237 1 285 1 86 1 9 2 49 1 291 1 177 1 55 1 16 1 299 1 89 1 21 1 22 1 258 1 212 1 308 1 311 1 149 1 157 1 107 1 161 1 274 1 39 3 168 1 121 1 
1 1 122 2 149 1 234 1 86 1 49 1 291 1 108 1 205 1 161 1 55 1 16 1 251 1 89 1 308 1 39 2 311 2 121 1 
1 1 122 2 149 1 237 1 285 1 86 1 104 1 9 2 49 1 291 1 108 1 177 1 161 1 55 1 16 1 89 1 39 2 121 1 
122 2 1 2 234 1 285 1 237 1 86 2 9 2 49 1 291 1 177 1 55 1 251 1 16 2 89 1 308 1 311 2 149 1 108 1 161 2 274 1 39 4 121 1 
1 1 122 2 149 1 234 1 86 1 49 1 291 1 205 1 161 1 220 1 55 1 16 1 251 1 89 1 308 1 39 2 311 2 121 1 
1 1 122 2 149 1 285 1 86 1 104 1 9 2 49 1 291 1 177 1 161 1 220 1 55 1 89 1 39 2 121 1 
1 2 122 2 149 1 234 1 285 1 86 2 9 2 49 1 291 1 177 1 161 2 220 1 55 1 274 1 89 1 308 1 39 4 311 2 121 1 
122 2 1 2 234 1 285 1 237 1 86 2 9 2 49 1 291 1 177 1 55 1 251 1 16 2 89 1 308 1 311 2 149 1 161 2 274 1 39 4 121 1 
122 2 4 1 172 1 243 1 9 1 244 1 49 1 291 1 55 1 89 1 19 1 59 1 22 1 92 1 311 1 260 1 149 1 28 1 65 1 154 1 30 1 217 1 185 1 225 1 227 1 333 1 39 2 121 1 
122 2 4 1 243 1 9 1 244 1 49 1 291 1 55 1 89 1 19 1 59 1 22 1 92 1 311 1 260 1 26 1 149 1 28 1 65 1 30 1 182 1 217 1 111 1 225 1 227 1 333 1 39 2 121 1 
122 2 1 2 234 1 285 1 237 1 86 2 9 2 49 1 291 1 177 1 55 1 251 1 16 2 89 1 21 1 308 1 311 2 149 1 161 2 274 1 39 4 121 1 
1 2 122 2 234 1 4 1 237 1 285 1 172 1 86 2 174 1 9 2 243 1 244 1 49 1 291 1 177 1 55 1 16 2 251 1 89 1 59 1 19 1 22 1 308 1 92 1 311 2 149 1 28 1 154 1 30 1 155 1 217 1 185 1 161 2 274 1 225 1 39 4 121 1 
122 2 1 1 234 1 4 1 285 1 239 1 86 1 9 1 49 1 291 1 177 1 55 1 16 1 251 1 299 1 89 1 21 1 22 1 258 1 308 1 311 2 149 1 157 1 107 1 161 1 274 1 39 3 168 1 121 1 
122 4 234 2 170 1 129 1 237 1 285 1 44 1 9 5 49 2 204 1 291 2 292 1 138 1 177 1 55 2 16 2 251 1 252 1 63 2 308 2 311 6 149 2 29 1 163 1 274 2 325 1 78 1 39 11 228 1 
122 2 149 1 170 1 44 1 29 2 9 3 49 1 320 1 291 1 292 1 55 1 163 2 325 2 78 1 63 2 311 2 39 5 228 1 
122 4 234 2 170 1 237 1 285 1 44 1 7 1 9 5 49 2 204 1 291 2 292 1 138 1 177 1 55 2 16 1 252 1 63 2 308 2 311 6 149 2 29 1 163 1 274 2 325 1 78 1 39 11 228 1 
122 4 234 2 170 1 237 1 285 1 44 1 7 1 9 6 49 2 204 1 291 2 292 2 138 1 177 1 55 2 16 1 252 1 63 2 308 2 311 7 149 2 29 1 163 1 274 2 325 1 78 1 39 13 228 1 
122 2 234 1 170 1 127 1 285 1 237 1 44 1 241 1 9 6 48 1 49 1 204 1 13 1 291 1 292 1 55 1 16 1 63 3 308 2 311 7 149 1 314 1 29 1 270 1 320 1 163 2 274 1 325 1 78 1 39 13 228 1 
200 1 254 1 268 1 131 1 45 1 46 1 290 1 309 1 183 1 95 1 
69 1 61 1 
5 1 200 1 268 1 131 1 45 1 305 1 37 1 309 1 183 1 
197 1 4 1 198 1 200 1 130 2 131 1 45 1 133 1 50 1 54 1 296 1 299 1 301 1 22 1 258 1 309 1 24 1 268 1 157 1 72 1 183 1 107 1 321 1 160 1 223 1 190 1 166 1 38 1 
197 1 4 1 198 1 200 1 130 2 131 1 45 1 133 1 50 1 54 1 296 1 299 1 301 1 22 1 258 1 309 1 24 1 268 1 157 1 72 1 183 1 107 1 321 1 160 1 223 1 190 1 166 1 38 1 
197 1 4 1 198 1 200 1 130 2 131 1 45 1 133 1 50 1 54 1 296 1 299 1 301 1 22 1 258 1 309 1 24 1 268 1 157 1 72 1 183 1 107 1 321 1 160 1 223 1 190 1 166 1 38 1 
128 1 57 1 88 1 
128 1 57 1 88 1 
85 1 242 1 
85 1 242 1 88 1 
235 1 151 1 
235 1 4 2 198 1 200 1 131 1 130 1 45 1 289 1 47 1 141 1 22 2 61 1 258 2 24 1 309 1 91 1 64 1 151 1 268 1 69 1 157 2 183 1 107 2 190 1 227 1 167 1 38 1 
128 1 57 1 
85 1 242 1 88 1 
122 2 4 2 9 1 243 2 244 1 49 1 291 1 55 1 17 2 89 1 19 1 20 1 21 1 306 1 22 2 258 2 311 1 260 1 149 1 27 1 28 2 65 1 101 1 30 1 319 1 217 1 33 1 225 2 164 1 39 2 121 1 
214 1 96 1 28 2 286 1 317 2 30 1 155 1 243 2 158 1 244 1 71 1 135 1 53 1 273 1 225 2 326 1 194 1 40 1 213 1 
214 1 96 1 28 1 286 1 317 2 30 1 243 1 158 1 71 1 244 1 135 1 53 1 273 1 225 1 326 1 194 1 94 1 
28 1 216 1 30 1 243 1 158 1 244 1 217 1 140 1 56 1 225 1 19 1 333 1 146 1 40 1 
214 1 96 1 28 1 286 1 317 2 30 1 243 1 158 1 244 1 71 1 135 1 53 1 273 1 225 1 326 1 194 1 40 1 213 1 
153 1 
322 1 125 1 34 1 255 1 203 1 156 1 87 1 
0 1 231 1 264 1 267 1 315 1 173 1 269 1 272 1 87 1 136 1 322 1 34 1 255 2 143 1 193 1 24 1 38 1 
234 1 231 6 284 1 199 1 285 1 173 3 243 1 87 4 244 2 136 2 177 1 255 3 303 1 59 1 19 1 308 1 24 2 259 1 262 1 99 1 28 1 102 1 264 2 267 2 316 3 315 2 30 1 272 2 217 3 74 1 75 2 322 3 109 1 274 1 77 3 225 1 36 1 193 1 38 2 277 1 333 1 
231 6 234 2 238 1 285 2 44 1 173 3 87 8 136 2 177 2 139 1 255 5 145 1 24 1 63 1 308 2 264 2 267 1 316 5 315 2 272 2 320 1 186 1 74 1 162 3 163 1 322 5 77 5 274 2 34 2 112 1 35 1 165 1 193 1 117 1 38 1 
83 1 4 1 285 1 241 1 87 2 136 1 296 1 299 1 22 1 258 1 24 1 308 2 264 1 314 1 315 1 157 1 270 1 272 1 107 1 321 1 160 1 162 2 322 2 324 1 223 1 35 1 166 1 38 1 
125 1 264 1 315 1 203 1 272 1 87 1 136 1 322 1 34 1 255 1 
234 2 231 10 285 2 316 5 173 5 87 5 177 2 162 2 322 5 274 2 77 5 303 1 255 5 35 1 308 2 
34 1 267 1 255 1 193 1 24 1 38 1 
41 1 243 3 87 1 244 1 136 2 295 1 178 1 140 1 56 1 19 1 24 3 148 1 215 1 28 3 152 1 264 2 267 4 315 1 30 1 272 2 217 1 184 1 74 1 186 2 322 2 225 3 193 2 333 2 38 3 
122 2 4 3 169 1 172 1 9 1 243 1 49 1 244 1 291 1 296 1 55 1 299 2 89 1 59 1 19 1 22 3 258 2 92 1 149 1 65 1 28 1 154 1 157 2 30 1 217 1 107 2 185 1 225 1 227 1 333 1 39 1 121 1 
231 4 264 1 316 2 315 1 173 2 272 1 87 1 136 1 13 1 74 1 186 1 322 2 77 2 34 2 255 4 
45 1 120 1 183 1 
235 1 298 1 254 1 45 1 183 1 
45 1 120 1 183 1 
45 1 120 1 183 1 
275 1 45 1 183 1 
275 1 45 1 183 1 
275 1 45 1 183 1 
45 1 183 1 
268 1 309 1 
122 4 149 2 127 1 285 1 314 1 237 2 9 4 48 1 270 1 241 1 49 2 13 1 106 1 291 2 55 2 251 1 16 3 308 1 39 8 311 4 
127 1 237 2 314 1 285 1 156 1 9 3 48 1 270 1 241 1 13 1 16 2 308 1 311 3 39 6 
122 2 149 1 234 1 150 1 237 1 285 1 9 2 49 1 291 1 177 1 55 1 16 1 274 1 308 1 311 2 39 4 
234 1 285 1 44 1 9 4 204 1 177 1 163 1 274 1 63 2 308 1 39 7 311 3 
122 4 123 1 234 2 232 1 83 1 127 1 285 4 237 7 44 2 241 4 48 1 9 16 49 2 204 1 13 1 291 2 177 2 55 2 16 12 251 5 308 4 63 2 311 14 149 2 314 2 265 1 270 4 106 2 274 2 39 30 
9 1 63 1 39 1 
44 1 39 1 311 1 
149 1 122 2 234 1 150 1 285 1 237 1 9 3 49 1 291 1 177 1 55 1 251 2 16 3 274 1 303 1 308 1 39 6 311 3 
122 2 234 2 237 1 238 1 285 2 44 1 9 6 49 1 291 1 177 2 55 1 251 1 16 2 63 1 308 2 311 6 149 1 320 1 163 1 274 2 112 1 165 1 117 1 39 12 228 1 
314 1 285 1 237 1 9 3 270 1 241 1 16 2 251 1 308 1 311 3 39 6 
123 1 122 2 149 1 127 1 237 1 241 1 270 1 9 2 48 1 49 1 106 1 291 1 55 1 251 1 16 2 311 1 39 3 
149 1 122 2 83 1 237 3 314 1 285 2 270 2 241 2 9 5 49 1 291 1 55 1 16 5 251 2 308 2 311 5 39 10 228 1 
122 2 149 1 234 1 49 1 291 1 55 1 251 1 16 1 308 1 311 2 39 2 228 1 
122 2 149 1 234 1 237 1 285 1 9 2 49 1 291 1 177 1 55 1 16 2 251 1 274 1 308 1 311 2 39 4 228 1 
123 1 122 6 149 3 237 1 9 2 270 1 241 1 49 3 106 1 291 3 55 3 16 2 251 1 252 1 39 3 311 1 228 1 
122 8 234 3 127 1 237 5 285 3 44 3 241 2 48 1 9 13 49 4 204 1 13 1 291 4 177 2 55 4 251 4 16 9 252 1 63 4 308 4 311 14 261 1 149 4 150 1 314 1 270 2 70 1 106 1 163 1 274 3 110 1 39 27 228 1 
122 2 234 1 127 1 285 1 237 2 44 1 241 1 9 5 48 1 49 1 204 1 13 1 291 1 55 1 16 2 63 2 308 2 311 6 149 1 314 1 270 1 320 1 163 1 274 1 39 11 228 1 
122 4 127 1 285 1 237 2 44 1 9 4 48 1 241 1 49 2 13 1 291 2 55 2 16 2 308 1 63 1 311 4 149 2 150 1 314 1 270 1 320 1 163 1 39 8 228 1 
122 6 234 2 127 1 238 1 285 3 237 4 44 1 241 1 48 1 9 10 49 3 13 1 291 3 177 2 55 3 251 1 16 5 63 1 308 3 311 9 149 3 150 1 314 1 270 1 320 1 106 1 163 1 274 2 112 1 165 1 117 1 39 19 228 1 
122 6 234 2 127 1 237 2 238 1 285 2 44 1 241 1 48 1 9 7 49 3 13 1 291 3 177 1 55 3 251 2 16 4 63 1 308 3 311 10 149 3 150 1 314 1 270 1 320 1 106 1 163 1 274 2 112 1 165 1 117 1 39 17 228 1 
122 2 234 1 127 1 285 1 237 2 44 1 241 1 9 5 48 1 49 1 204 1 13 1 291 1 55 1 16 2 63 2 308 2 311 6 149 1 314 1 270 1 320 1 163 1 274 1 39 11 228 1 
122 2 234 2 237 1 238 1 285 2 44 1 9 6 49 1 291 1 177 2 55 1 251 1 16 2 63 1 308 2 311 6 149 1 320 1 163 1 274 2 112 1 165 1 117 1 39 12 228 1 
122 8 234 2 127 1 238 1 285 2 237 3 44 1 241 1 48 1 9 8 49 4 13 1 291 4 177 1 55 4 251 2 16 5 63 1 308 3 311 10 149 4 150 1 314 1 270 1 320 1 106 2 163 1 274 2 112 1 165 1 117 1 39 18 228 1 
122 6 234 2 238 1 285 1 44 1 9 4 49 3 291 3 177 1 55 3 16 2 251 2 252 1 63 1 308 2 311 7 149 3 320 1 106 1 163 1 274 2 112 1 165 1 117 1 39 11 228 1 
127 2 285 1 237 3 314 1 9 4 48 1 270 3 241 3 16 6 251 3 308 1 39 7 311 3 
122 8 234 2 127 1 238 1 285 2 237 3 44 1 241 1 48 1 9 8 49 4 13 1 291 4 177 1 55 4 251 1 16 4 252 1 63 1 308 3 311 10 149 4 314 1 270 1 320 1 106 2 163 1 274 2 112 1 165 1 117 1 39 18 228 1 
271 1 
159 1 281 1 323 1 191 1 134 1 271 1 
140 1 28 1 56 1 225 1 19 1 30 1 156 1 243 1 244 1 333 1 217 1 
28 1 4 2 157 1 30 1 243 1 244 1 217 1 107 1 185 1 225 1 19 1 59 1 22 2 79 1 258 1 227 1 92 1 333 1 
3 1 215 1 28 1 4 2 288 1 157 1 30 1 243 1 244 1 217 3 107 2 321 1 185 1 225 1 209 1 19 2 59 2 22 2 79 1 258 2 227 1 92 1 147 1 
229 1 3 1 215 1 28 2 4 2 288 1 157 1 30 1 243 2 244 1 217 3 107 2 321 1 111 1 225 2 209 1 19 2 59 2 22 2 79 1 258 2 227 1 92 1 147 1 
3 1 4 1 288 1 243 1 244 1 296 1 179 1 299 1 59 1 19 1 255 1 256 1 22 1 258 1 24 2 28 1 215 1 267 1 157 1 30 1 217 4 107 1 321 1 160 1 75 1 109 1 34 1 223 1 225 1 226 1 166 1 38 2 
4 1 243 1 296 1 299 1 255 1 22 1 258 1 259 1 24 2 28 1 215 1 267 1 157 1 217 1 107 1 321 1 160 1 75 1 109 1 34 1 223 1 225 1 166 1 38 2 
28 1 42 1 225 1 30 1 243 1 244 1 
196 1 42 1 96 1 28 7 284 1 155 1 30 2 243 6 244 3 217 3 17 1 206 1 189 1 225 7 59 1 19 2 113 1 20 1 116 1 80 1 333 2 
1 1 122 4 4 2 127 1 285 1 237 2 172 1 86 1 174 1 9 3 241 1 48 1 243 1 244 1 49 2 13 1 291 2 55 2 16 2 89 2 19 1 59 1 21 1 306 1 22 2 258 1 23 1 308 1 92 1 311 3 149 2 28 1 314 1 154 1 30 1 157 1 155 1 270 1 217 1 107 1 185 1 161 1 225 1 79 1 227 2 39 6 121 2 
83 1 4 1 243 1 241 1 87 4 255 2 22 1 258 1 259 1 24 3 262 1 28 1 102 1 264 2 267 2 272 2 270 1 107 1 109 1 34 2 35 1 193 1 277 1 38 3 125 1 285 2 203 1 136 2 296 1 299 1 308 2 148 1 64 1 314 1 315 2 157 1 217 1 321 1 160 1 75 1 162 2 322 5 223 1 225 1 166 1 333 1 
42 1 28 2 284 1 155 1 30 1 243 2 244 2 217 2 225 2 59 1 19 1 256 1 36 1 
229 1 28 4 155 1 30 1 243 4 244 1 217 1 140 1 56 1 225 4 19 1 333 1 280 1 
313 1 215 1 28 2 30 1 243 2 244 2 217 1 206 1 225 2 59 1 19 1 113 1 60 1 118 1 
28 1 225 1 326 1 317 1 30 1 243 1 244 1 333 1 194 1 135 1 
28 2 96 1 101 1 155 1 30 1 243 2 244 1 217 1 225 2 19 1 20 1 
215 1 28 5 155 1 30 2 243 4 244 2 217 3 140 1 56 1 225 5 189 1 19 2 20 1 80 1 333 1 280 1 
124 1 215 1 28 5 155 1 30 2 243 4 244 2 217 3 140 1 56 1 225 5 189 1 19 2 20 1 333 1 280 1 
28 1 4 2 157 1 30 1 243 1 244 1 217 1 107 1 111 1 225 1 19 1 59 1 22 2 79 1 258 1 227 1 92 1 333 1 
196 1 215 1 28 1 284 1 30 1 243 1 244 2 217 1 206 1 225 1 59 1 19 1 113 1 
208 1 68 1 329 1 227 1 279 1 
4 1 43 1 287 1 202 1 247 1 296 1 299 1 208 1 209 1 255 1 22 1 258 1 24 2 147 1 64 1 68 1 157 1 107 1 160 1 321 2 109 1 34 1 223 1 328 1 329 1 166 1 38 2 279 1 
4 1 319 1 33 1 208 1 164 1 22 1 329 1 258 1 279 1 
43 1 202 1 329 1 

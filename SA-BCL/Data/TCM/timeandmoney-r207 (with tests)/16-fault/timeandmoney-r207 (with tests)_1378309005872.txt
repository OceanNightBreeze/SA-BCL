#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 259 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 353 91 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 139 315 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 353 59 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 353 59 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 139 315 10 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
231 1 46 6 112 2 71 1 234 2 21 9 97 1 159 1 237 1 240 1 300 2 354 1 241 1 243 2 191 2 164 4 63 1 101 1 252 2 253 1 309 9 339 5 170 1 42 1 316 3 262 2 345 1 45 1 
231 1 46 6 112 2 71 1 234 2 21 9 97 1 159 1 237 1 300 2 240 1 354 1 241 1 243 2 191 2 164 4 63 1 101 1 252 2 253 1 309 9 339 5 170 1 42 1 316 3 262 2 345 1 45 1 
231 1 46 7 112 2 71 1 234 2 21 10 97 1 159 1 237 1 300 2 240 1 354 1 241 1 243 2 191 2 164 5 63 1 101 1 252 2 253 1 309 10 339 6 170 1 42 1 316 4 262 2 345 1 45 1 
231 1 46 4 112 2 71 1 234 2 21 7 97 1 159 1 237 1 300 2 240 1 354 1 241 1 243 2 191 2 164 3 63 1 101 1 252 1 309 7 339 4 170 1 42 1 316 2 262 2 345 1 45 1 
46 3 234 1 252 2 21 4 253 1 309 4 97 1 159 1 339 3 300 1 42 1 316 1 241 1 262 1 345 1 191 1 243 1 164 2 
63 1 112 1 234 1 194 1 21 2 309 2 339 1 159 1 237 1 299 1 42 1 6 1 262 1 345 1 243 1 191 1 
46 1 112 1 234 2 21 3 309 3 159 1 339 2 170 1 42 1 316 1 262 2 345 1 164 1 
46 7 47 1 112 1 71 1 234 2 21 9 97 1 159 1 300 1 354 1 241 1 243 1 191 1 164 4 62 1 252 2 253 1 309 9 339 5 170 1 42 1 316 3 262 2 345 1 
46 7 47 1 112 1 71 1 234 2 21 9 97 1 159 1 300 1 354 1 241 1 243 1 191 1 164 4 62 1 252 2 253 1 309 9 339 5 170 1 42 1 316 3 262 2 345 1 
102 1 336 1 291 1 
248 1 102 1 107 2 
32 2 235 1 169 2 89 2 15 2 12 2 86 1 167 2 
207 1 2 1 294 1 4 1 135 2 5 1 176 1 212 1 76 1 235 1 26 1 272 1 214 2 215 1 29 1 119 1 244 1 31 1 32 3 220 1 99 1 65 1 223 1 12 3 86 1 167 2 310 2 169 2 184 1 171 1 89 2 342 1 15 2 150 1 260 2 290 1 263 2 
32 1 69 1 169 1 89 1 15 1 74 1 12 1 86 1 167 1 17 1 
204 1 32 1 102 1 74 1 336 1 12 1 167 1 67 1 326 1 227 1 185 1 140 1 81 1 303 1 
32 1 102 1 74 1 336 1 12 1 167 1 67 2 169 1 227 1 185 1 140 2 89 1 15 1 81 1 303 1 
126 1 140 1 266 1 56 1 67 1 
27 1 102 1 140 2 266 1 56 1 336 1 317 1 67 2 
140 1 56 1 67 1 
32 1 266 1 74 1 86 1 12 1 167 1 67 1 69 1 169 1 140 1 89 1 15 1 289 1 17 1 
102 1 
27 1 102 1 189 1 140 2 266 1 56 1 336 1 67 2 
48 1 154 1 134 2 349 1 266 2 74 1 158 2 27 1 140 5 352 1 56 2 276 4 82 1 32 1 331 2 221 1 180 1 305 2 102 2 165 2 282 2 336 2 12 1 86 1 167 1 13 1 67 5 69 1 169 1 311 1 369 1 89 1 15 1 186 1 16 5 289 1 90 1 17 1 
32 3 235 1 84 1 169 3 89 1 15 3 12 3 167 3 
32 1 69 1 169 1 15 1 74 1 12 1 167 1 
32 1 257 1 169 1 89 1 104 1 15 1 74 1 12 1 167 1 
207 1 2 1 4 1 74 1 135 1 5 1 176 1 76 1 235 1 26 1 272 1 214 2 118 1 215 1 54 1 29 1 140 1 81 1 244 1 31 1 303 1 32 4 220 1 99 1 84 1 104 1 65 1 12 4 86 1 167 3 67 1 310 1 184 1 169 3 227 1 88 1 171 1 185 1 89 2 342 1 15 3 260 1 290 1 263 1 
204 1 32 2 235 1 169 1 84 1 274 1 15 1 12 2 167 2 
32 3 84 2 102 1 104 1 74 1 12 3 167 3 67 1 169 3 227 1 258 1 185 1 118 1 54 1 89 1 140 1 15 3 81 1 303 1 
32 2 84 1 104 1 175 1 12 2 167 2 169 2 89 1 30 1 15 2 
32 1 99 1 135 1 5 1 12 1 176 1 310 1 235 1 184 1 215 1 171 1 342 1 244 1 263 1 31 1 
32 1 99 1 135 1 35 1 93 1 12 1 176 1 310 1 235 1 184 1 215 1 342 1 244 1 263 1 31 1 
207 1 2 1 175 2 295 1 75 1 76 1 115 1 214 2 29 1 30 2 55 1 119 2 220 1 305 1 100 1 333 1 65 2 34 1 165 1 128 1 68 2 168 1 260 4 290 1 
32 1 227 1 169 1 362 1 15 1 74 1 12 1 167 1 
235 1 291 1 
32 2 104 1 12 2 167 2 235 2 257 1 169 1 89 1 15 1 
30 1 175 1 68 1 
32 1 109 1 99 1 135 1 5 1 12 1 176 1 310 1 235 1 184 1 215 1 171 1 342 1 244 1 263 1 31 1 
32 2 99 1 84 1 135 1 5 1 12 2 176 1 167 1 310 1 184 1 169 1 171 1 215 1 54 1 30 1 342 1 15 1 244 1 31 1 263 1 
204 1 32 5 84 2 104 1 20 1 12 5 167 5 114 1 235 1 169 4 274 1 54 1 89 1 15 4 
32 2 69 1 169 2 362 1 15 2 74 1 12 2 167 2 
37 1 335 1 105 1 
37 1 335 1 105 1 
37 1 268 1 105 1 
37 1 268 1 105 1 
37 1 268 1 105 1 
37 1 105 1 
37 1 105 1 
153 1 174 1 
153 1 174 1 
153 1 174 1 
37 1 335 1 105 1 
37 1 218 1 105 1 
96 1 153 1 37 2 233 1 105 2 174 1 
179 2 60 2 205 2 102 1 18 1 105 2 66 2 351 2 67 2 137 3 308 1 96 1 78 1 37 2 370 1 140 2 202 1 143 1 144 1 
293 1 205 1 351 1 137 1 235 1 160 1 140 1 218 1 144 1 32 2 122 1 278 1 60 1 124 1 66 1 105 1 12 2 167 2 67 1 169 2 37 1 38 1 228 1 15 2 
300 1 191 1 243 1 
194 1 191 1 243 1 
332 1 300 2 229 1 194 1 357 1 243 3 
332 1 300 1 194 1 357 1 183 1 243 2 
332 1 300 1 194 1 357 2 243 2 
293 1 110 1 19 2 266 4 158 1 27 1 140 5 55 1 275 1 178 1 56 1 276 3 358 1 331 1 248 1 180 1 247 2 305 1 102 2 124 1 333 1 165 1 282 1 336 1 337 1 67 5 365 1 38 1 340 2 107 3 16 2 372 1 
92 3 266 5 95 1 138 1 140 6 55 1 56 4 275 1 276 3 331 1 180 1 102 3 333 1 336 1 282 1 337 1 12 1 67 6 69 1 340 2 107 3 15 1 16 2 289 1 17 1 19 2 74 1 158 1 27 1 358 1 32 1 248 1 305 1 124 2 126 3 165 1 86 1 167 1 365 1 87 1 169 1 89 1 
110 1 266 2 19 2 158 1 140 3 55 1 178 1 275 1 276 3 331 1 221 1 248 2 247 1 305 1 102 3 124 1 333 1 336 1 165 1 282 1 337 1 67 3 365 1 340 2 107 4 16 2 
110 1 19 4 266 3 158 1 28 1 140 4 55 2 178 1 275 2 276 5 331 1 221 1 248 3 247 2 305 2 102 4 124 2 333 2 336 1 165 2 282 1 337 1 36 1 67 4 365 1 340 4 107 7 16 4 43 1 
342 1 244 1 
99 1 328 2 342 1 355 1 148 1 156 1 244 2 
328 1 244 1 291 1 
322 1 244 1 
156 1 
99 1 342 1 244 1 
73 1 244 1 
292 1 48 1 305 1 349 1 65 3 34 3 295 2 165 1 94 1 366 1 225 2 25 1 270 1 119 4 260 7 301 1 82 1 
292 1 48 1 305 1 349 1 65 3 34 3 295 2 165 1 94 1 366 1 225 2 25 1 270 1 119 4 260 7 301 1 82 1 
292 1 48 1 305 1 349 1 65 3 34 3 295 2 165 1 94 1 366 1 225 2 24 1 25 1 270 1 119 4 260 7 301 1 82 1 
292 1 133 4 207 1 48 2 2 1 349 2 295 5 22 3 94 2 25 1 270 1 214 2 29 1 55 3 119 16 275 3 190 1 301 2 82 1 220 1 305 4 333 3 65 15 34 10 165 4 283 1 285 1 225 3 366 5 226 1 341 1 288 1 260 31 261 1 
292 1 207 1 2 1 48 1 321 1 349 1 295 2 94 1 270 1 214 2 29 1 352 1 119 5 301 1 82 1 220 1 305 2 193 1 65 4 34 3 165 2 366 1 225 1 260 9 
46 1 347 1 112 1 234 1 208 1 135 1 21 2 296 1 159 1 300 1 191 1 277 1 243 2 31 1 360 1 194 1 281 1 255 1 310 1 309 2 339 1 184 1 229 1 42 1 199 1 230 1 262 1 345 1 152 1 263 1 
46 2 347 1 112 1 234 1 208 1 135 1 21 3 296 1 159 1 271 1 300 1 120 1 191 1 277 1 243 2 31 1 194 1 281 1 255 1 310 1 309 3 339 1 184 1 229 1 199 1 262 1 345 1 152 1 263 1 131 1 
46 2 347 1 112 1 208 1 135 1 21 2 296 1 159 1 300 1 120 1 277 1 243 2 191 1 31 1 194 1 281 1 310 1 309 2 339 1 184 1 229 1 199 1 345 1 263 1 131 1 
112 2 234 1 208 2 135 1 350 1 21 1 296 2 157 1 327 1 271 1 215 1 57 1 244 1 31 1 281 2 14 1 310 1 309 1 184 1 342 1 343 1 262 1 263 1 
347 1 112 1 234 1 208 1 135 1 21 1 296 1 300 1 191 1 277 1 243 2 31 1 360 1 194 1 281 1 255 1 310 1 309 1 184 1 229 1 42 1 199 1 262 1 152 1 263 1 131 1 
182 1 
264 1 135 2 158 1 27 1 215 2 140 2 56 2 276 1 142 1 57 1 244 2 31 3 99 1 331 1 180 1 147 1 282 1 67 2 14 1 365 1 310 2 184 2 368 1 196 1 197 1 342 2 16 1 371 1 263 2 
204 1 72 1 74 1 326 1 27 1 189 1 140 3 56 2 81 1 163 2 121 1 303 1 32 1 123 1 166 1 12 1 167 1 67 3 129 1 227 1 185 1 40 1 
204 1 72 1 74 1 326 1 116 1 27 1 189 1 140 3 56 1 81 1 163 3 121 1 303 1 32 1 102 1 166 1 336 1 12 1 167 1 67 3 129 1 227 1 185 1 40 1 
204 1 72 1 74 1 210 1 326 1 116 1 27 1 189 1 140 3 56 2 81 1 163 3 121 1 303 1 32 1 123 1 102 1 166 1 336 1 12 1 167 1 67 3 129 1 227 1 185 1 40 1 
204 1 210 4 324 2 269 1 326 1 329 2 140 5 141 2 56 7 276 1 58 1 331 1 180 1 102 5 336 5 282 1 12 1 67 5 227 1 185 1 16 1 72 1 74 1 158 1 116 4 27 3 189 1 81 1 163 6 121 1 303 1 302 1 32 1 304 1 246 2 123 4 248 2 363 1 85 1 166 1 167 1 129 1 40 1 201 1 
204 1 210 2 324 2 326 1 329 2 140 4 141 2 56 4 276 1 331 1 180 1 102 2 282 1 336 1 12 1 67 4 227 1 185 1 107 2 16 1 72 1 74 1 158 1 116 2 27 2 81 1 163 4 121 1 303 1 304 1 32 1 246 2 248 2 123 2 363 1 166 1 167 1 129 1 314 1 40 1 
204 1 72 1 74 1 210 2 324 2 269 1 158 1 326 1 116 2 27 2 329 2 141 2 140 4 56 4 276 1 81 1 163 4 121 1 303 1 302 1 304 1 32 1 331 1 246 2 123 2 248 2 180 1 102 1 363 1 85 1 336 1 166 1 282 1 12 1 167 1 67 4 129 1 227 1 185 1 40 1 16 1 
204 1 72 1 74 1 210 2 324 2 269 1 158 1 326 1 116 2 27 2 329 2 141 2 140 4 56 4 276 1 81 1 163 4 121 1 303 1 302 1 304 1 32 1 331 1 246 2 123 2 248 2 180 1 102 1 363 1 85 1 336 1 166 1 282 1 12 1 167 1 67 4 129 1 227 1 185 1 40 1 16 1 
204 1 32 1 72 1 267 1 74 1 166 1 12 1 167 1 67 2 129 1 227 1 326 1 185 1 40 1 140 2 81 1 163 2 121 1 303 1 
204 1 72 1 74 1 210 3 324 2 269 1 158 1 326 1 116 3 27 2 329 2 141 2 140 4 56 5 276 1 81 1 163 5 121 1 303 1 302 1 304 1 32 1 331 1 246 2 248 2 180 1 123 3 102 1 363 1 85 1 336 1 282 1 166 1 12 1 167 1 67 4 129 1 227 1 185 1 40 1 16 1 201 1 
204 1 72 1 74 1 210 3 324 2 269 1 158 1 326 1 116 3 27 2 329 2 141 2 140 4 56 5 276 1 81 1 163 5 121 1 303 1 302 1 304 1 32 1 331 1 246 2 248 2 180 1 123 3 102 1 363 1 85 1 336 1 282 1 166 1 12 1 167 1 67 4 129 1 227 1 185 1 40 1 16 1 201 1 
204 1 210 2 326 1 329 2 140 4 141 2 56 4 276 1 331 1 180 1 102 1 282 1 11 2 336 1 12 1 67 4 227 1 185 1 107 2 16 1 72 1 74 1 158 1 116 2 27 2 161 2 81 1 163 4 121 1 303 1 32 1 123 2 363 1 166 1 167 1 129 1 314 1 40 1 203 1 
220 1 207 1 2 1 305 1 333 1 34 1 175 1 128 1 366 1 68 1 76 1 115 1 214 2 30 1 29 1 119 2 260 2 290 1 
220 1 207 1 2 1 34 1 175 1 65 2 295 1 75 1 165 1 68 1 76 1 115 1 214 2 30 1 29 1 55 1 260 2 290 1 
207 1 2 1 175 2 295 1 76 1 115 1 214 2 29 1 30 2 55 1 119 2 275 1 220 1 305 1 333 1 34 2 65 2 165 1 68 2 366 1 260 4 290 1 
220 1 207 1 2 1 305 1 333 1 34 1 175 1 128 1 366 1 68 1 213 1 76 1 214 2 30 1 29 1 119 2 260 2 290 1 
220 1 207 1 2 1 34 1 175 1 65 2 295 1 75 1 165 1 68 1 213 1 76 1 214 2 30 1 29 1 55 1 260 2 290 1 
207 1 2 1 175 2 295 1 213 1 76 1 214 2 29 1 30 2 55 1 119 2 275 1 220 1 305 1 333 1 34 2 65 2 165 1 68 2 366 1 260 4 290 1 
207 1 2 1 175 2 295 1 76 1 214 2 29 1 30 2 55 1 119 2 275 1 220 1 305 1 333 1 34 2 65 2 165 1 68 2 366 1 260 4 290 1 
207 1 2 1 4 1 135 1 5 1 176 1 212 1 76 1 235 1 214 2 272 1 215 1 29 1 119 1 244 1 31 1 32 1 99 1 220 1 65 1 12 1 310 1 184 1 171 1 342 1 260 2 290 1 263 1 
207 1 2 1 135 1 93 1 176 1 212 1 76 1 235 1 214 2 272 1 215 1 29 1 119 1 244 1 31 1 32 1 99 1 220 1 65 1 35 1 251 1 12 1 310 1 184 1 342 1 260 2 290 1 263 1 
207 1 2 1 175 2 295 1 76 1 214 2 29 1 30 2 55 1 119 2 275 1 220 1 305 1 333 1 34 2 65 2 165 1 68 2 366 1 41 1 260 4 290 1 
207 1 2 1 175 2 4 1 295 1 135 1 5 1 51 1 176 1 76 1 214 2 30 2 29 1 55 1 119 2 275 1 244 1 31 1 32 1 99 1 220 1 305 1 333 1 65 2 34 2 165 1 12 1 366 1 68 2 310 1 184 1 171 1 342 1 260 4 230 1 290 1 263 1 
207 1 2 1 175 1 76 1 214 2 29 1 30 1 55 1 275 1 119 2 32 1 220 1 305 1 306 1 333 1 104 1 65 1 34 1 165 1 12 1 167 1 366 1 68 1 169 1 89 1 41 1 15 1 260 3 290 1 
292 1 207 1 2 1 48 1 349 1 175 1 295 2 76 1 115 1 235 2 270 1 214 2 30 1 29 1 119 3 82 1 220 1 305 1 34 2 65 3 165 1 225 1 68 1 260 6 290 1 291 1 
133 3 207 2 2 2 175 4 295 1 22 3 212 1 76 2 235 1 98 1 272 1 214 4 29 2 30 11 55 1 162 1 119 8 275 2 80 1 220 2 305 2 333 2 34 2 65 6 364 1 165 1 366 1 68 11 226 1 41 1 260 14 290 1 261 1 
109 1 207 1 2 1 49 1 50 1 175 1 135 1 5 1 176 1 212 1 76 1 235 1 214 2 272 1 215 1 54 1 29 1 119 1 244 1 31 1 32 2 145 1 99 1 84 1 220 1 65 1 12 2 167 1 310 1 184 1 169 1 171 1 41 1 342 1 15 1 260 2 290 1 263 1 
32 1 220 1 84 1 207 1 2 1 65 1 135 1 12 1 167 1 310 1 76 1 169 1 272 1 214 2 259 1 215 1 54 1 41 1 29 1 15 1 260 1 290 1 263 1 
264 1 207 2 2 2 3 1 135 7 212 1 213 1 272 1 214 4 215 2 57 1 142 1 220 2 99 1 147 1 65 1 12 1 14 1 184 3 106 1 286 1 342 3 15 1 150 2 230 1 290 2 76 2 115 1 29 2 119 1 244 4 31 4 32 1 84 1 167 1 310 7 169 1 367 1 312 1 196 1 260 2 131 1 263 6 
207 1 2 1 175 1 295 1 76 1 214 2 30 1 29 1 55 1 275 1 119 1 32 1 220 1 305 1 333 1 104 1 34 1 65 2 165 1 12 1 167 1 68 1 169 1 313 1 89 1 41 1 15 1 260 3 290 1 
133 2 207 2 265 1 2 2 91 1 321 1 295 1 22 1 236 1 214 4 29 2 353 1 177 1 55 1 119 4 275 1 242 1 220 2 305 1 10 1 333 1 65 5 34 2 165 1 366 1 226 1 315 1 260 9 261 1 
207 2 265 1 133 2 2 2 321 1 295 1 22 2 236 2 214 4 139 1 29 2 55 1 119 6 275 1 242 2 220 2 305 1 10 1 333 1 34 1 65 8 250 1 165 1 285 1 226 2 315 2 173 1 260 14 
133 2 207 2 265 1 2 2 321 1 295 1 22 1 236 1 214 4 29 2 353 1 177 1 55 1 119 4 275 1 242 1 59 1 220 2 305 1 10 1 333 1 65 5 34 2 165 1 366 1 226 1 315 1 260 9 261 1 
133 2 207 2 265 1 2 2 321 1 295 1 22 1 236 1 214 4 29 2 353 1 177 1 55 1 119 4 275 1 242 1 59 1 220 2 305 1 10 1 333 1 65 5 34 2 165 1 366 1 226 1 315 1 260 9 261 1 
292 1 133 4 207 2 265 1 48 1 319 1 2 2 349 1 321 1 295 6 22 4 236 2 98 2 270 1 214 4 139 1 29 2 55 5 119 23 275 6 242 1 82 1 220 2 280 1 305 7 10 1 333 6 65 19 34 11 250 1 165 6 285 1 225 1 366 5 226 2 315 1 173 1 260 42 261 2 
179 1 60 1 205 1 102 1 105 1 66 1 351 1 67 1 137 2 308 1 96 1 78 1 37 1 370 1 140 1 202 1 143 1 144 1 
179 1 60 1 205 1 102 1 105 1 66 1 351 1 67 1 137 2 308 1 96 1 78 1 37 1 370 1 140 1 202 1 143 1 144 1 
179 1 60 1 205 1 102 1 105 1 66 1 351 1 67 1 137 2 308 1 96 1 78 1 37 1 370 1 140 1 202 1 143 1 144 1 
233 1 335 1 127 1 
233 1 335 1 127 1 
23 1 268 1 
23 1 233 1 268 1 
278 1 228 1 
293 1 205 1 266 1 351 1 137 1 235 1 117 1 160 1 140 1 218 1 32 2 122 1 278 1 179 1 60 1 124 1 12 2 66 1 105 1 167 2 67 1 169 2 37 1 38 1 228 1 370 1 15 2 
96 1 205 1 60 1 37 1 249 1 202 1 66 1 105 1 351 1 308 1 
122 1 218 1 
83 1 205 1 60 1 37 1 238 1 66 1 105 1 351 1 108 1 
335 1 127 1 
23 1 233 1 268 1 
207 1 2 1 135 2 212 1 76 1 214 2 272 1 29 1 119 1 244 1 31 1 32 2 220 1 146 1 65 1 12 2 167 2 338 1 310 2 256 1 184 1 106 1 312 1 172 1 41 1 342 1 150 2 200 1 260 2 290 1 263 2 
347 1 192 1 125 1 194 1 135 2 296 1 310 2 184 1 300 1 229 1 230 1 44 1 191 1 243 2 152 1 277 1 31 1 131 1 263 2 
359 1 347 1 125 1 194 1 135 1 296 1 310 1 184 1 300 1 229 1 191 1 243 2 152 1 277 1 131 1 263 1 31 1 
192 1 135 1 14 1 296 1 310 1 184 1 327 1 215 1 342 1 344 1 57 1 244 1 31 1 263 1 
347 1 192 1 125 1 194 1 135 1 296 1 310 1 184 1 300 1 229 1 44 1 191 1 243 2 152 1 277 1 31 1 131 1 263 1 
187 1 
154 1 102 1 16 1 276 1 336 1 13 1 291 1 
324 1 158 1 27 1 140 1 56 1 276 1 304 1 331 1 246 1 248 1 180 1 102 2 282 1 336 1 67 1 107 1 16 1 
132 2 0 1 134 2 135 2 322 3 52 2 328 2 215 1 53 1 140 5 55 2 56 5 275 2 276 9 99 1 331 4 180 4 102 8 333 2 336 2 282 4 13 1 67 5 149 1 184 1 340 6 185 2 287 2 107 12 342 1 16 8 230 1 70 1 154 1 111 2 19 6 113 2 158 4 27 3 355 1 244 6 31 2 248 6 305 2 165 2 254 2 365 2 310 2 197 1 369 2 263 2 
206 1 133 1 134 1 19 4 22 1 158 2 27 1 139 1 140 1 55 1 56 1 275 1 276 5 331 2 180 2 248 3 305 1 102 4 333 1 250 1 282 2 165 1 336 1 67 1 226 1 340 4 107 6 173 1 16 2 
48 1 134 2 349 1 74 1 158 1 140 1 352 1 276 2 82 1 32 1 331 1 180 1 305 2 85 1 282 1 165 1 12 1 86 1 167 1 67 1 69 1 169 1 369 1 89 1 15 1 16 2 289 1 17 1 
331 1 180 1 154 1 102 1 282 1 336 1 13 1 158 1 16 1 276 1 
248 5 305 2 134 2 102 5 333 2 19 5 165 2 340 5 369 1 287 1 107 10 55 2 275 2 16 5 276 5 
27 1 102 1 140 1 56 1 336 1 67 1 
264 1 135 2 158 1 27 1 215 2 53 1 140 1 56 2 276 1 142 1 57 1 244 2 31 3 99 1 331 1 180 1 147 1 282 1 67 1 14 1 365 1 310 2 184 2 368 1 196 1 197 1 342 2 16 1 371 1 263 2 
207 1 2 1 4 1 135 1 5 1 176 1 76 1 235 1 26 1 272 1 214 2 215 1 29 1 244 1 31 1 32 3 220 1 99 1 65 1 12 3 86 1 167 2 310 1 169 2 184 1 171 1 89 2 15 2 342 1 260 1 290 1 263 1 
331 1 248 2 180 1 102 4 19 2 282 1 336 2 225 1 365 1 158 1 340 2 197 1 107 4 16 2 276 1 
318 1 205 1 66 1 
318 1 205 1 66 1 
205 1 66 1 323 1 
205 1 66 1 323 1 
205 1 66 1 323 1 
205 1 66 1 
37 1 105 1 
318 1 205 1 66 1 
278 1 205 1 217 1 66 1 308 1 
292 1 220 2 207 2 2 2 48 1 305 1 349 1 65 4 34 3 295 2 165 1 285 1 225 1 366 1 270 1 214 4 29 2 119 4 260 8 82 1 
292 1 48 1 305 1 349 1 65 3 34 2 295 2 165 1 225 1 270 1 119 3 260 6 291 1 82 1 
220 1 207 1 2 1 305 1 333 1 65 2 34 2 295 1 165 1 195 1 366 1 214 2 29 1 55 1 275 1 119 2 260 4 
133 2 305 1 333 1 65 4 34 2 295 1 165 1 22 1 366 1 226 1 55 1 119 3 275 1 260 7 261 1 
292 1 133 2 207 2 48 2 2 2 349 2 295 5 22 2 211 1 98 1 270 1 214 4 29 2 55 2 275 2 119 11 80 1 82 1 220 2 305 3 333 2 34 9 65 12 165 3 285 2 225 1 366 4 260 23 261 1 
133 1 65 1 260 1 
119 1 260 1 22 1 
220 1 207 1 2 1 305 1 333 1 65 3 34 3 295 2 165 1 195 1 366 1 214 2 287 1 29 1 55 1 275 1 119 3 260 6 
220 1 280 1 207 1 133 1 319 1 2 1 305 2 333 2 321 1 34 2 65 6 295 1 250 1 165 2 22 1 366 1 226 1 214 2 139 1 29 1 55 2 173 1 275 2 119 6 260 12 
48 1 305 1 349 1 65 3 34 2 295 1 165 1 366 1 119 3 260 6 82 1 
292 1 220 1 207 1 48 1 2 1 349 1 34 2 65 2 295 1 211 1 285 1 366 1 270 1 214 2 29 1 119 1 260 3 
220 1 207 1 2 1 48 2 305 2 321 1 349 2 34 5 65 5 295 3 165 2 366 2 214 2 29 1 352 1 119 5 260 10 82 1 
220 1 207 1 2 1 305 1 333 1 321 1 34 1 366 1 214 2 29 1 119 2 260 2 
220 1 207 1 2 1 305 1 333 1 321 1 65 2 34 2 295 1 165 1 366 1 214 2 29 1 55 1 275 1 119 2 260 4 
220 3 207 3 2 3 48 1 321 1 349 1 65 2 34 2 295 1 285 1 211 1 366 1 214 6 29 3 177 1 119 1 260 3 
292 1 133 4 207 5 48 3 2 5 349 3 321 1 295 7 211 1 22 3 270 1 214 10 29 5 177 1 55 3 119 16 275 3 190 1 82 2 220 5 305 5 333 3 65 18 34 12 165 5 283 1 285 2 195 1 225 1 366 5 226 1 341 1 260 34 261 1 
226 1 220 1 133 1 207 1 2 1 214 2 139 1 29 1 321 1 65 1 119 1 260 2 22 1 
220 2 207 2 133 2 2 2 305 1 333 1 321 1 34 1 65 2 22 1 195 1 366 1 226 1 214 4 139 1 29 2 275 1 119 3 260 5 261 1 
220 2 207 2 133 1 2 2 305 1 333 1 321 1 34 1 65 5 295 1 250 1 165 1 285 1 22 1 226 1 214 4 139 1 29 2 55 1 173 1 275 1 119 3 260 8 
133 1 207 2 2 2 319 1 321 1 295 1 22 1 214 4 139 1 29 2 55 1 119 7 275 2 220 2 280 1 305 2 333 2 65 4 34 2 250 1 165 1 285 1 366 1 226 1 173 1 260 11 
226 1 220 1 133 1 207 1 2 1 214 2 139 1 29 1 321 1 65 1 119 1 260 2 22 1 
220 1 280 1 207 1 133 1 319 1 2 1 305 2 333 2 321 1 34 2 65 6 295 1 250 1 165 2 22 1 366 1 226 1 214 2 139 1 29 1 55 2 173 1 275 2 119 6 260 12 
220 3 207 3 133 1 2 3 305 1 333 1 321 1 34 1 65 5 295 1 250 1 165 1 285 1 22 1 195 1 226 1 214 6 139 1 29 3 55 1 173 1 275 1 119 3 260 8 
220 3 207 3 133 1 2 3 305 1 333 1 321 1 34 2 65 5 295 2 250 1 165 1 285 1 22 1 226 1 214 6 139 1 29 3 55 1 173 1 177 1 275 1 119 3 260 8 
292 1 48 3 305 1 349 3 65 4 34 6 295 3 165 1 366 3 270 2 119 3 260 7 82 1 
220 3 207 3 133 1 2 3 305 1 333 1 321 1 34 1 65 5 295 1 250 1 165 1 285 1 22 1 226 1 214 6 139 1 29 3 55 1 173 1 177 1 275 1 119 3 260 8 
32 1 204 1 235 1 1 1 274 1 12 1 167 1 
245 1 204 1 32 1 1 1 232 1 320 1 222 1 12 1 167 1 188 1 235 1 274 1 
310 1 184 1 215 1 342 1 135 1 57 1 244 1 14 1 31 1 291 1 263 1 
32 2 99 1 84 1 135 1 12 2 176 1 167 1 310 1 235 1 169 1 184 1 215 1 171 1 342 1 15 1 244 1 31 1 263 1 
73 1 135 1 74 2 176 1 235 1 356 1 244 3 31 1 303 1 32 1 84 1 99 2 9 1 12 1 167 1 310 1 184 1 169 1 227 1 130 1 171 1 15 1 342 2 263 1 
73 1 135 1 74 2 176 1 235 1 356 1 244 3 31 1 303 1 32 1 84 1 99 2 9 1 35 1 12 1 167 1 310 1 184 1 169 1 227 1 130 1 15 1 342 2 263 1 
99 1 9 1 102 1 334 1 73 1 135 3 336 1 322 1 67 2 310 3 77 1 184 1 328 1 215 1 185 1 239 1 140 2 342 1 56 1 356 1 244 4 31 1 263 3 
99 1 9 1 102 1 334 1 73 1 135 3 336 1 322 1 67 2 254 1 310 3 184 1 328 1 215 1 185 1 140 2 342 1 56 1 356 1 244 4 31 1 263 3 
310 1 184 1 39 1 135 1 31 1 263 1 
99 1 3 1 147 1 103 1 135 6 310 6 106 1 367 1 184 2 286 1 215 2 342 2 150 1 230 1 355 1 142 1 244 3 131 1 263 5 31 3 
207 2 2 2 48 1 175 1 4 1 135 1 5 1 51 1 176 1 270 1 214 4 219 1 220 2 99 1 65 3 12 2 225 1 68 1 184 1 15 1 342 1 230 1 290 2 292 1 349 1 295 2 76 2 235 2 29 2 30 1 119 3 244 1 31 1 82 1 32 2 84 1 305 1 34 2 165 1 167 1 310 1 256 1 169 1 171 1 41 1 260 6 263 1 
132 1 154 1 111 1 266 1 135 1 322 1 158 2 52 1 328 1 27 1 215 1 53 1 140 3 56 2 276 1 244 2 331 2 180 2 102 1 336 1 282 2 13 1 67 3 254 1 310 1 185 1 16 1 263 1 
0 1 99 1 135 1 156 1 310 1 184 1 328 1 39 1 342 1 355 1 244 2 263 1 31 2 
33 1 334 1 135 4 14 1 310 4 184 1 215 1 342 1 230 1 57 1 244 1 31 1 263 4 
264 1 99 1 9 1 147 1 307 1 135 2 310 2 184 1 196 1 342 1 142 1 244 1 263 2 31 2 
310 1 184 1 347 1 215 1 194 1 135 1 191 1 243 1 31 1 263 1 
135 2 310 2 106 1 184 1 342 1 230 1 200 1 244 1 263 2 131 1 31 1 
33 1 9 1 3 1 135 5 14 1 310 5 106 1 184 2 215 1 286 1 342 2 230 1 57 1 244 3 263 4 31 2 
33 1 9 1 3 1 135 5 209 1 14 1 310 5 106 1 184 2 215 1 342 2 230 1 57 1 244 3 263 4 31 2 
32 2 99 1 84 1 135 1 35 1 12 2 176 1 167 1 310 1 235 1 169 1 184 1 215 1 342 1 15 1 244 1 31 1 263 1 
99 1 9 1 147 1 103 1 135 1 310 1 184 1 342 1 355 1 142 1 244 1 263 1 31 2 
32 1 7 1 181 1 273 1 172 1 146 1 12 1 167 1 338 1 
297 1 7 1 61 1 
7 1 235 1 181 1 273 1 284 1 
7 1 61 1 181 2 102 1 266 1 155 1 74 1 336 1 284 2 67 2 297 1 235 1 227 1 185 1 273 2 118 1 140 2 81 1 303 1 
339 1 159 1 345 1 291 1 
309 1 339 1 159 1 234 1 21 1 262 1 345 1 
309 1 112 1 281 1 
279 1 63 2 64 1 234 1 21 3 309 3 339 1 159 1 42 1 216 1 262 1 345 1 
309 2 46 1 339 1 159 1 234 1 252 1 21 2 262 1 345 1 
234 1 21 1 309 1 339 1 300 1 42 1 241 1 262 1 243 1 191 1 164 1 
309 1 339 1 159 1 234 1 42 1 21 1 262 1 
309 1 159 2 234 1 42 1 21 1 262 1 345 1 
8 1 361 1 234 2 21 2 136 1 309 2 339 1 159 1 42 1 262 2 
46 2 71 1 234 1 21 3 309 3 159 1 339 2 42 1 354 1 316 1 262 1 345 1 164 1 
46 1 194 1 234 1 21 2 309 2 339 1 159 1 298 1 229 1 300 1 42 1 262 1 345 1 243 2 191 1 
46 2 234 2 252 1 21 4 253 1 309 4 159 1 339 2 42 1 316 1 262 2 345 1 164 1 
309 1 339 1 159 1 234 1 42 1 21 1 262 1 345 1 
46 2 63 1 64 1 234 1 21 4 224 1 309 4 159 2 339 3 216 1 316 1 262 1 345 2 164 1 
330 1 46 1 47 1 234 1 21 2 309 2 339 1 159 1 42 1 151 1 262 1 345 1 
346 1 63 2 64 2 234 1 21 3 309 3 339 1 159 1 42 1 216 1 262 1 345 1 
339 1 348 1 325 1 
309 1 198 1 234 1 42 1 21 1 262 1 
309 2 46 1 339 1 159 1 234 1 42 1 354 1 21 2 262 1 345 1 
79 1 
309 1 339 1 159 1 234 1 42 1 21 1 262 1 345 1 
309 3 46 1 339 1 159 1 63 1 234 1 42 1 354 1 21 3 262 1 345 1 
339 1 316 1 224 1 164 1 
339 1 159 1 

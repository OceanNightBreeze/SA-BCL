#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 286 (62,203) (62,203) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 286 (62,203) (62,203) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 286 (62,203) (62,203) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 286 (62,203) (62,203) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 221 56 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 221 56 113 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 221 3 282 120 (23,104) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (68,256) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (68,256) 237 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (68,256) 237 326 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 123 4 265 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 123 4 265 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 123 4 265 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 123 4 265 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 123 4 265 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 123 245 247 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 221 6 73 315 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 221 56 197 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 221 56 45 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 123 107 147 181 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 221 3 282 120 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 123 107 147 181 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 221 3 282 120 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 221 56 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 221 56 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 221 220 79 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 221 220 79 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 221 220 79 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 221 220 79 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 221 220 79 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 123 245 247 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 221 56 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 259 292 280 316 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 123 107 147 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 259 292 280 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 221 6 0 100 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 259 292 280 (17,105) (17,105) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 123 107 147 323 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 221 6 0 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 221 6 73 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 221 6 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 123 185 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 221 84 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 123 107 156 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 221 317 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 259 292 280 (17,105) (17,105) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 221 6 0 199 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 259 292 280 (17,105) (17,105) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 149 (188,210) (188,210) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 149 1 192 1 194 3 218 3 250 1 155 1 268 2 234 1 81 1 142 1 44 2 210 1 
268 1 35 1 62 1 72 1 286 1 194 1 203 1 218 1 142 1 155 1 44 1 
268 1 35 1 62 1 72 1 286 1 194 1 203 1 218 1 142 1 155 1 44 1 
268 1 35 1 62 1 72 1 286 1 194 1 203 1 218 1 142 1 155 1 44 1 
268 1 35 1 62 1 72 1 286 1 194 1 203 1 218 1 142 1 155 1 44 1 
192 3 149 2 115 1 194 4 218 4 250 2 153 1 312 1 99 1 226 2 230 1 268 1 81 1 142 1 44 1 144 1 
188 1 72 1 194 2 218 2 311 1 96 1 155 1 312 1 99 1 268 1 142 1 202 1 44 1 143 1 210 1 
241 1 149 4 192 7 115 1 194 9 218 9 216 1 250 4 153 1 222 1 312 1 155 1 99 1 226 2 230 1 78 1 268 2 234 1 81 3 142 1 44 2 144 1 
241 1 149 4 192 7 115 1 194 9 218 9 216 1 250 4 153 1 222 1 312 1 155 1 99 1 226 2 230 1 78 1 268 2 234 1 81 3 142 1 44 2 144 1 
21 1 290 1 293 1 26 1 179 1 154 1 97 1 285 1 319 1 166 1 260 1 67 1 170 1 288 1 
225 1 
21 1 290 1 293 1 26 1 154 1 179 2 97 1 76 1 223 1 225 1 285 1 10 1 319 1 166 1 260 1 67 2 170 1 288 1 171 1 
85 2 172 1 87 2 290 1 175 1 292 1 3 2 293 1 176 1 214 1 179 5 97 1 223 2 225 2 233 5 107 2 67 5 239 5 21 1 305 1 26 1 280 1 154 1 27 2 251 1 156 1 76 1 316 1 285 1 160 2 319 1 320 1 166 1 260 1 170 1 262 1 171 2 288 2 
138 1 225 1 223 1 
198 1 
59 1 285 2 21 1 319 2 260 2 26 2 154 2 97 2 
130 1 132 1 133 1 55 1 221 1 56 1 97 3 102 1 269 2 303 2 302 1 111 1 240 1 21 1 74 1 26 2 279 1 154 2 157 2 284 1 158 1 77 1 285 2 318 1 319 2 260 3 201 1 83 1 207 1 
285 1 21 1 290 1 319 1 166 1 260 1 26 1 154 1 97 1 170 1 
71 1 290 1 95 1 5 1 53 1 154 1 179 1 97 1 225 1 223 1 260 1 16 1 67 1 128 1 
71 1 290 1 5 1 26 1 53 1 154 1 179 2 97 1 225 1 223 1 285 1 319 1 260 1 67 2 128 1 
25 1 67 1 179 1 171 1 288 1 
67 2 179 2 225 1 223 1 171 1 76 1 314 1 288 1 
67 1 179 1 171 1 
59 2 285 1 319 1 150 1 260 2 26 1 271 1 154 2 97 2 
104 1 217 1 209 1 
111 1 240 1 279 1 55 1 97 1 157 1 284 1 158 1 77 1 59 1 102 1 269 1 260 1 82 1 303 1 302 1 
59 1 138 1 
111 1 240 1 193 1 279 1 54 1 26 1 55 1 154 1 97 2 284 1 157 1 77 1 158 1 102 1 319 1 269 1 104 1 260 2 303 1 302 1 
285 1 59 1 319 3 260 3 54 1 26 3 154 3 97 3 
290 1 319 1 166 1 260 1 26 1 154 1 97 1 
285 1 290 1 319 1 150 1 260 1 271 1 26 1 154 1 97 1 
130 1 290 1 5 1 133 1 54 1 53 1 55 1 221 1 56 1 179 1 97 4 102 1 269 1 64 1 67 1 302 1 303 1 111 1 240 1 113 1 21 1 71 1 150 1 193 1 74 1 279 1 26 3 154 3 284 1 157 1 77 1 158 1 285 2 319 3 201 1 260 4 83 1 128 1 
59 1 46 1 319 1 95 1 260 2 26 1 54 1 154 2 97 2 
290 1 71 1 150 1 193 1 5 1 54 2 26 3 53 1 179 1 154 3 97 3 225 1 285 1 319 3 64 1 260 3 324 1 67 1 128 1 
150 1 54 1 217 1 26 2 154 2 97 2 285 1 319 2 104 1 260 2 
111 1 240 1 279 1 55 1 97 1 157 1 284 1 158 1 77 1 59 1 102 1 269 1 260 1 303 1 302 1 
111 1 240 1 290 1 279 1 55 1 178 1 97 1 157 1 284 1 158 1 77 1 31 1 159 1 59 1 269 1 260 1 303 1 
120 1 130 1 3 1 23 1 264 1 74 1 221 1 83 1 282 1 
290 1 319 1 80 1 260 1 53 1 26 1 154 1 97 1 
46 1 150 1 193 1 95 1 54 2 26 4 135 1 154 5 97 5 285 1 59 1 319 4 260 5 42 1 
290 1 319 2 80 1 166 1 260 2 26 2 154 2 97 2 
114 1 256 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 
236 1 68 1 
236 1 68 1 
236 1 68 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 
114 1 256 1 237 1 252 1 
114 1 256 1 237 1 67 1 179 1 326 1 252 1 
230 1 32 1 70 2 143 1 99 2 
230 1 312 1 99 1 
312 1 143 1 99 1 
32 1 230 2 47 1 70 1 143 1 99 3 
32 1 230 1 161 1 70 1 143 1 99 2 
174 1 116 1 179 4 225 1 223 1 76 1 34 1 40 1 300 1 67 4 288 3 171 1 
276 1 25 1 179 4 283 1 76 1 225 1 223 1 34 1 40 1 15 1 67 4 288 3 171 2 
86 1 87 1 290 1 174 1 293 1 266 1 179 3 97 1 223 1 225 2 233 1 300 1 107 1 67 3 239 2 147 1 21 1 116 1 26 1 154 1 27 1 30 1 285 1 198 2 160 1 34 1 319 1 166 1 323 1 260 1 126 1 125 1 170 1 262 1 288 2 
86 1 87 1 174 1 266 1 179 2 225 1 233 1 300 1 107 1 67 2 239 2 147 1 116 1 27 1 30 1 198 2 160 1 122 1 34 1 323 1 125 1 126 1 262 1 288 1 
183 1 
240 1 138 1 308 1 
146 1 240 1 
240 1 55 1 
111 1 240 3 61 1 308 2 55 1 75 1 
111 1 240 1 55 1 
255 1 240 1 
263 1 165 1 123 1 4 1 265 1 
263 1 123 1 4 1 265 1 
263 1 123 1 4 1 265 1 
263 1 123 1 4 1 265 1 
263 1 123 1 4 1 265 1 
92 1 218 1 55 1 9 2 229 1 268 1 269 1 182 1 303 1 240 1 112 1 306 2 243 2 274 1 194 1 279 1 155 2 157 1 158 1 77 1 325 1 44 1 169 1 
47 1 218 1 9 1 99 2 230 1 268 1 269 1 238 1 142 1 303 1 143 1 272 1 243 1 306 1 194 1 279 1 312 1 155 1 28 1 157 1 77 1 33 1 258 1 322 1 44 1 261 1 
47 1 218 2 9 1 99 2 230 1 268 1 269 1 139 1 238 1 142 1 303 1 143 1 272 1 188 1 192 1 243 1 306 1 194 2 279 1 312 1 155 1 28 1 157 1 77 1 258 1 322 1 44 1 261 1 210 1 
47 1 218 3 9 1 99 2 230 1 268 1 269 1 232 1 303 1 143 1 272 1 188 1 243 1 306 1 192 2 194 3 279 1 312 1 155 1 28 1 157 1 77 1 33 1 258 1 322 1 44 1 169 1 261 1 210 1 
188 1 47 1 192 2 306 1 243 1 194 2 279 1 218 2 312 1 28 1 155 1 99 2 157 1 9 1 77 1 230 1 33 1 232 1 269 1 322 1 143 1 261 1 303 1 210 1 
90 1 
86 2 87 1 2 1 95 1 5 1 7 1 179 5 97 1 11 2 269 2 109 2 16 1 20 1 190 2 112 1 273 1 275 1 191 1 279 1 27 1 29 1 198 2 204 2 126 1 128 1 131 1 211 1 290 1 50 1 214 1 53 1 55 1 223 1 225 2 228 2 229 1 60 4 233 2 67 5 239 2 303 2 304 2 240 1 71 1 249 1 154 1 76 3 157 2 158 2 77 1 160 1 168 2 167 1 260 1 171 6 
131 1 2 1 290 1 95 1 5 1 53 1 179 3 97 1 10 1 60 2 109 1 16 1 67 3 273 1 71 1 191 1 249 1 154 1 76 1 260 1 128 1 171 2 
131 1 2 1 290 1 95 1 5 1 53 1 179 3 97 1 223 1 225 1 228 1 10 1 60 3 16 1 67 3 273 1 71 1 191 1 249 1 154 1 76 1 260 1 171 1 128 1 
131 1 2 1 290 1 95 1 5 1 53 1 179 3 97 1 228 1 10 1 60 3 109 1 16 1 67 3 273 1 71 1 191 1 249 1 154 1 76 1 260 1 168 1 128 1 171 2 
1 1 86 2 87 1 2 1 93 1 95 1 5 1 179 5 97 2 10 1 11 2 12 1 109 4 16 1 110 1 21 1 273 1 190 2 191 1 275 1 26 1 27 1 29 1 285 1 204 2 128 1 131 1 290 2 293 1 214 1 53 1 296 1 225 1 223 1 228 2 60 4 233 1 67 5 239 1 304 2 71 1 249 1 154 2 76 3 160 1 319 1 166 1 168 4 260 2 170 1 171 7 
86 2 87 1 2 1 95 1 5 1 179 4 97 1 11 2 109 2 16 1 20 1 273 1 190 2 191 1 275 1 27 1 29 1 198 2 204 2 128 1 131 1 290 1 214 1 53 1 225 2 223 1 228 2 60 4 233 1 67 4 239 1 304 2 71 1 249 1 154 1 76 2 160 1 260 1 168 2 171 4 
1 1 86 2 131 1 87 1 2 1 290 1 93 1 95 1 214 1 5 1 53 1 179 4 296 1 97 1 225 1 223 1 228 2 11 2 60 4 233 1 109 2 16 1 67 4 239 1 304 2 190 2 273 1 275 1 71 1 191 1 249 1 154 1 27 1 76 2 29 1 160 1 168 2 260 1 204 2 171 4 128 1 
1 1 86 2 131 1 87 1 2 1 290 1 93 1 95 1 214 1 5 1 53 1 179 4 296 1 97 1 225 1 223 1 228 2 11 2 60 4 233 1 109 2 16 1 67 4 239 1 304 2 190 2 273 1 275 1 71 1 191 1 249 1 154 1 27 1 76 2 29 1 160 1 168 2 260 1 204 2 171 4 128 1 
131 1 87 1 2 1 290 1 95 1 214 1 5 1 53 1 179 4 296 1 97 1 225 1 223 1 228 2 11 2 60 4 233 1 180 1 109 2 16 1 67 4 239 1 190 2 273 1 275 1 71 1 191 1 151 1 249 1 24 1 154 1 27 1 76 2 198 2 160 1 36 2 168 2 260 1 124 2 171 4 128 1 
1 1 86 2 131 1 87 1 2 1 290 1 93 1 95 1 214 1 5 1 53 1 179 4 296 1 97 1 225 1 223 1 228 3 11 2 60 5 233 1 109 3 16 1 67 4 239 1 110 1 304 2 190 2 273 1 275 1 71 1 191 1 249 1 27 1 154 1 76 2 29 1 160 1 260 1 168 3 204 2 128 1 171 5 
1 1 86 2 131 1 87 1 2 1 290 1 93 1 95 1 214 1 5 1 53 1 179 4 296 1 97 1 225 1 223 1 228 3 11 2 60 5 233 1 109 3 16 1 67 4 239 1 110 1 304 2 190 2 273 1 275 1 71 1 191 1 249 1 27 1 154 1 76 2 29 1 160 1 260 1 168 3 204 2 128 1 171 5 
131 1 87 1 2 1 290 1 95 1 214 1 5 1 53 1 179 4 97 1 225 1 223 1 228 2 11 2 60 4 233 1 180 1 109 2 16 1 67 4 239 1 20 1 190 2 273 1 275 1 191 1 71 1 249 1 27 1 154 1 76 2 198 2 160 1 36 2 168 2 260 1 124 2 171 4 128 1 
130 1 269 1 245 1 123 1 247 1 257 1 74 1 83 1 303 1 157 1 158 1 
147 1 130 1 150 1 74 1 26 1 154 1 97 1 101 1 285 1 319 1 123 1 107 1 323 1 260 1 127 1 83 1 
130 1 138 1 292 1 105 1 264 1 259 1 280 1 74 1 17 1 83 1 
130 1 101 1 6 1 73 1 74 1 221 1 83 1 315 1 
130 1 193 1 54 1 26 1 74 1 197 1 221 1 56 1 154 1 97 1 101 1 319 1 260 1 83 1 
130 1 193 1 54 1 26 1 74 1 221 1 56 1 154 1 97 1 157 1 158 1 101 1 269 1 319 1 260 1 83 1 303 1 45 1 
147 1 130 1 181 1 123 1 264 1 107 1 74 1 83 1 
120 1 130 1 3 1 264 1 74 1 221 1 83 1 282 1 
147 1 130 1 123 1 264 1 107 1 323 1 74 1 83 1 
147 1 130 1 181 1 123 1 257 1 107 1 74 1 83 1 
120 1 130 1 3 1 257 1 74 1 221 1 83 1 282 1 
147 1 130 1 123 1 257 1 107 1 323 1 74 1 83 1 
147 1 130 1 123 1 107 1 323 1 74 1 83 1 
111 1 130 1 240 1 74 1 279 1 55 1 221 1 56 1 97 1 157 1 284 1 158 1 77 1 102 1 269 1 260 1 201 1 83 1 303 1 302 1 
111 1 130 1 240 1 74 1 279 1 55 1 221 1 56 1 178 1 97 1 157 1 284 1 158 1 227 1 77 1 159 1 269 1 260 1 83 1 303 1 
147 1 130 1 101 1 123 1 107 1 323 1 74 1 83 1 
111 1 147 1 130 1 240 1 74 1 279 1 55 1 97 1 157 1 284 1 77 1 102 1 269 1 37 1 123 1 139 1 107 1 323 1 260 1 201 1 83 1 303 1 302 1 
147 1 130 1 150 1 74 1 26 1 154 1 97 1 101 1 285 1 319 1 123 1 38 1 107 1 323 1 260 1 83 1 
79 1 244 1 277 1 294 1 220 1 221 1 83 1 145 1 
79 1 244 1 277 1 294 1 220 1 221 1 83 1 145 1 
79 1 244 1 277 1 294 1 220 1 221 1 83 1 145 1 
79 1 244 1 277 1 294 1 220 1 221 1 83 1 145 1 
79 1 244 1 277 1 294 1 220 1 221 1 83 1 145 1 
130 1 245 1 247 1 309 1 74 1 154 2 97 2 297 1 101 1 123 1 106 1 260 2 83 1 208 1 
240 1 112 1 243 1 279 1 55 1 157 1 77 1 158 1 229 1 269 1 65 1 140 1 325 1 303 1 
189 1 47 1 243 1 279 1 8 1 312 1 28 1 99 2 157 1 77 1 230 1 33 1 269 1 258 1 140 1 143 1 303 1 261 1 
189 1 47 1 243 1 279 1 8 1 312 1 28 1 99 2 157 2 77 1 230 1 33 1 269 2 139 1 258 1 140 1 143 1 303 2 261 1 
189 1 47 1 243 1 279 1 312 1 313 1 28 1 99 2 157 1 77 1 230 1 33 1 269 1 258 1 143 1 303 1 261 1 
253 1 
172 1 87 1 214 1 27 1 223 1 225 1 160 1 320 1 233 1 239 1 
86 1 198 2 147 1 107 1 323 1 266 1 125 1 239 2 225 1 
67 1 179 1 225 1 223 1 171 1 76 1 
87 2 212 1 214 1 50 2 7 1 55 1 179 3 229 1 269 4 233 2 63 2 14 1 67 3 239 2 303 4 240 1 112 1 195 1 279 1 27 2 157 4 76 2 77 1 158 2 160 2 167 1 126 2 262 1 171 4 
172 1 138 1 233 1 320 1 239 1 225 1 223 1 
86 1 87 1 214 1 179 1 225 2 223 1 233 1 67 1 239 1 304 1 27 1 29 1 76 1 198 1 160 1 204 1 171 1 
85 1 86 2 87 2 48 1 214 2 266 2 55 1 179 2 225 2 231 1 61 1 269 1 233 2 107 1 141 1 67 2 239 3 184 1 303 1 111 1 146 2 147 1 240 4 308 1 279 2 119 1 27 2 76 1 157 1 158 1 77 1 198 4 160 2 321 1 323 1 43 1 125 2 126 1 84 1 128 1 171 2 
0 1 85 1 86 3 87 1 291 1 3 2 214 1 6 1 266 5 98 1 225 3 233 6 235 1 107 2 239 4 185 1 147 2 117 1 27 1 282 2 198 6 199 1 160 1 323 2 125 5 
85 2 1 1 87 1 290 1 292 1 3 1 293 1 176 1 214 1 179 1 97 1 233 2 107 2 67 1 239 2 21 1 280 1 26 1 27 1 154 1 156 1 316 1 285 1 160 1 319 1 166 1 260 1 170 1 
130 1 133 1 55 1 221 1 56 1 97 3 102 1 269 1 303 1 302 1 111 1 240 1 21 1 26 2 279 1 74 1 154 2 157 1 284 1 158 1 77 1 285 2 319 2 260 3 201 1 83 1 
86 2 87 1 214 1 50 1 4 1 266 2 27 1 223 2 225 4 198 4 160 1 233 1 125 2 239 2 126 1 
57 1 52 1 310 1 219 1 187 1 
52 1 224 1 187 1 
52 1 224 1 187 1 
52 1 224 1 187 1 
173 1 52 1 187 1 
173 1 52 1 187 1 
173 1 52 1 187 1 
52 1 187 1 
114 1 256 1 
316 1 292 1 259 1 280 1 
147 1 277 1 123 1 107 1 83 1 
147 1 277 1 123 1 107 1 323 1 83 1 
292 1 277 1 259 1 280 1 83 1 
0 1 100 1 13 1 277 1 6 1 221 1 205 1 83 3 
292 1 105 1 259 1 280 1 287 1 17 1 83 2 
138 1 292 1 105 1 259 1 280 1 17 1 
147 1 123 1 107 1 323 1 83 1 205 1 
0 1 6 1 221 1 
6 1 73 1 221 1 
6 1 221 1 
123 1 185 1 
221 1 84 1 
0 1 199 1 277 1 6 1 221 1 83 1 
123 1 107 1 156 1 
317 1 221 1 
0 1 199 1 277 1 6 1 221 1 83 1 
0 1 199 1 277 1 6 1 221 1 83 2 205 1 
0 1 199 1 277 1 6 1 221 1 83 1 
0 1 199 1 277 1 6 1 221 1 83 1 
0 1 199 1 277 1 6 1 221 1 83 1 
0 1 199 1 277 1 6 1 221 1 83 1 
0 1 199 1 277 1 6 1 221 1 205 1 83 2 
0 1 199 1 277 1 13 1 6 1 221 1 83 2 
292 1 105 1 259 1 280 1 17 1 
0 1 199 1 277 1 13 1 6 1 221 1 83 2 
59 1 46 1 148 1 95 1 260 1 154 1 97 1 
148 1 46 1 89 1 95 1 154 1 97 1 59 1 162 1 164 1 270 1 260 1 18 1 
254 1 240 1 229 1 112 1 269 4 163 1 139 1 279 1 55 1 303 4 157 4 77 1 158 1 
111 1 240 1 94 1 177 1 118 1 279 2 55 1 157 2 77 1 269 2 63 1 200 1 303 2 289 1 
269 1 279 1 312 1 143 1 28 1 303 1 99 1 157 1 77 1 158 1 
240 1 298 1 33 1 269 2 139 1 279 1 55 1 295 1 303 2 157 2 77 1 
240 3 112 1 307 1 279 2 55 2 157 5 158 1 77 2 229 1 298 1 269 4 163 1 63 1 139 1 66 1 303 5 
240 3 112 1 307 1 279 2 281 1 55 2 157 5 158 1 77 2 229 1 298 1 269 4 163 1 63 1 139 1 303 5 
240 1 229 1 112 1 138 1 269 1 279 1 55 1 303 1 157 1 77 1 158 1 
111 1 240 1 279 1 54 1 26 1 55 1 154 1 97 2 284 1 157 1 158 1 77 1 59 1 102 1 319 1 269 1 260 2 303 1 
111 2 240 3 290 1 49 1 5 1 53 1 279 1 54 1 26 1 55 2 154 2 97 2 284 1 157 1 77 1 255 1 59 1 102 1 319 2 269 1 63 1 260 2 303 1 
290 2 49 1 5 1 54 1 53 1 55 2 97 2 59 1 269 1 63 1 303 1 111 2 240 3 26 1 279 1 154 2 157 1 284 1 77 1 31 1 159 1 255 1 319 2 260 2 
49 1 55 1 179 2 223 1 225 1 269 3 63 1 67 2 303 3 19 1 146 1 111 1 240 4 242 1 308 1 279 1 157 3 77 1 158 1 254 1 255 1 171 1 128 1 
111 1 146 1 240 4 49 1 308 1 279 1 55 1 179 2 225 1 223 1 157 3 158 1 77 1 254 1 255 1 231 1 269 3 63 1 67 2 303 3 128 1 171 1 
269 1 279 1 303 1 157 1 267 1 77 1 
111 1 240 3 307 1 94 1 51 1 177 1 248 1 279 3 55 2 267 1 157 7 158 2 77 2 298 1 318 1 33 1 61 1 269 6 139 1 66 1 303 7 
130 2 292 1 54 1 55 1 97 2 101 1 102 1 269 1 105 1 139 1 17 1 303 1 302 1 111 1 240 1 309 1 278 1 280 1 74 2 26 1 279 1 154 1 157 1 284 1 77 1 319 1 37 1 259 1 260 2 201 1 83 2 
172 1 87 2 214 2 179 3 225 1 223 1 231 1 233 1 269 1 14 1 67 3 239 1 184 1 303 1 146 1 240 2 308 1 119 1 27 2 157 1 76 1 158 1 160 2 320 1 43 1 288 1 171 2 128 1 
111 1 240 2 48 1 308 1 279 2 55 1 267 1 157 2 77 1 61 1 269 2 139 1 303 2 
290 1 54 1 55 1 97 2 59 1 269 1 303 1 111 1 240 1 26 1 279 1 154 1 157 1 284 1 77 1 158 1 159 1 31 1 319 1 260 2 
111 1 240 1 94 1 177 1 248 1 279 2 55 1 157 1 77 1 61 1 269 1 63 1 303 1 
59 1 88 1 103 1 196 1 136 1 
88 2 290 1 71 1 5 1 196 2 53 1 179 2 225 1 223 1 136 1 59 1 137 1 103 2 64 1 108 1 67 2 206 1 128 1 288 1 
103 1 106 1 260 1 196 1 154 1 97 1 297 1 136 1 208 1 
137 1 108 1 136 1 
188 1 268 1 194 1 218 1 142 1 44 1 210 1 
91 1 188 2 192 2 149 1 194 4 218 4 250 1 311 1 58 1 268 1 81 1 301 1 44 1 210 2 
188 1 192 1 22 1 194 2 218 2 152 1 222 1 268 1 142 1 44 1 210 1 
91 2 188 1 246 1 194 3 218 3 311 2 268 1 301 1 142 1 44 1 210 1 
149 2 213 1 215 2 69 1 
268 1 194 1 218 1 142 1 186 1 44 1 
188 1 241 1 268 1 192 1 194 2 218 2 142 1 44 1 210 1 
134 1 
188 1 268 1 194 1 218 1 142 1 44 1 210 1 
188 1 138 1 210 1 
188 1 268 1 194 1 218 1 44 1 210 1 
218 1 155 1 9 1 
188 1 91 1 268 1 39 1 194 3 301 1 218 3 142 1 311 2 44 1 210 1 
188 1 268 1 192 1 194 2 218 2 44 1 210 1 226 1 
149 1 194 1 218 1 250 1 153 1 312 1 99 1 230 1 268 1 142 1 44 1 
188 1 268 1 194 1 218 1 142 1 44 1 
188 1 268 1 149 1 194 1 218 1 142 1 44 1 210 1 
129 1 188 1 194 2 218 2 121 1 268 2 142 1 41 1 44 2 
188 1 241 1 192 2 149 1 194 3 218 3 250 1 268 1 78 1 81 1 142 1 44 1 210 1 
188 1 47 1 192 1 194 2 218 2 312 1 99 2 230 1 268 1 299 1 142 1 143 1 44 1 210 1 
188 1 192 2 149 1 194 4 218 4 250 1 226 1 268 2 81 1 142 1 44 2 144 1 210 1 
241 1 188 1 268 1 192 1 194 3 218 3 142 1 311 1 44 1 210 1 
58 1 149 1 81 1 250 1 
188 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 33 (95,210) (95,210) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 33 (95,210) (95,210) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 33 (95,210) (95,210) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 33 (95,210) (95,210) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 321 (105,269,319) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 79 274 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 79 274 98 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 155 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 238 121 23 296 229 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 220 108 127 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 220 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (125,252) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 190 29 85 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 190 29 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 119 332 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 79 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 238 121 23 296 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
63 1 263 1 116 1 270 2 144 1 244 2 210 1 106 1 334 1 251 1 195 1 33 1 34 1 60 1 202 1 95 1 
263 1 116 1 63 1 270 2 144 1 244 2 210 1 106 1 334 1 251 1 195 1 33 1 34 1 60 1 202 1 95 1 
263 1 116 1 63 1 270 2 144 1 244 2 210 1 106 1 334 1 251 1 195 1 33 1 34 1 60 1 202 1 95 1 
263 1 116 1 63 1 270 2 144 1 244 2 210 1 106 1 334 1 251 1 195 1 33 1 34 1 60 1 202 1 95 1 
263 1 63 1 270 4 208 2 124 3 144 1 230 1 244 4 106 1 149 1 327 1 232 2 334 1 249 1 195 1 12 1 33 1 16 3 
263 1 116 1 118 1 270 2 144 1 21 1 230 1 244 2 25 1 106 1 334 1 251 1 195 1 12 1 16 1 202 1 
263 1 116 1 270 3 124 1 144 2 230 1 244 3 291 1 327 1 232 1 334 2 12 1 16 2 
116 1 208 2 124 7 291 1 244 9 299 1 249 1 12 1 14 1 16 5 263 1 63 1 270 9 144 2 230 1 187 1 24 1 106 1 149 1 232 4 327 3 334 2 195 1 33 1 
116 1 208 2 124 7 291 1 244 9 299 1 249 1 12 1 14 1 16 5 263 1 63 1 270 9 144 2 230 1 187 1 24 1 106 1 149 1 232 4 327 3 334 2 195 1 33 1 
273 1 154 1 137 1 
273 1 341 1 261 2 
131 2 42 1 228 2 184 2 221 2 83 2 178 2 292 1 
115 1 114 1 117 1 205 2 42 1 162 1 207 1 240 2 120 1 165 1 1 1 4 1 83 3 292 1 295 1 87 1 131 3 88 1 214 1 10 1 216 1 254 2 133 1 221 2 11 1 178 2 262 2 140 1 228 2 316 1 184 2 322 1 193 1 69 1 72 1 159 1 37 2 
131 1 42 1 335 1 182 1 228 1 184 1 221 1 5 1 83 1 178 1 
42 1 5 1 170 1 83 2 298 1 131 2 221 1 178 1 18 1 313 1 182 2 20 1 228 1 184 2 273 1 324 1 26 1 335 1 27 1 154 1 344 1 
18 1 42 1 228 2 182 2 184 2 273 1 5 1 83 2 170 1 324 1 298 2 131 2 26 2 335 1 27 1 221 2 154 1 178 2 344 1 
298 1 250 1 26 1 169 1 94 1 
298 2 250 1 26 2 141 1 81 1 273 1 154 1 94 1 
298 1 250 1 26 1 
42 1 182 1 228 1 184 1 5 1 83 1 298 1 131 1 26 1 335 1 27 1 221 1 178 1 94 1 
273 1 
298 2 250 1 26 2 141 1 273 1 154 1 94 1 225 1 
206 2 181 1 141 1 318 1 273 1 22 1 298 5 326 1 107 2 148 1 6 1 26 5 250 2 174 1 154 1 136 1 200 1 94 2 17 2 
137 1 292 1 
228 1 184 2 83 2 292 2 191 1 131 2 221 1 178 1 201 1 
278 1 252 1 146 1 
114 1 140 1 266 1 165 1 1 1 316 1 83 1 322 1 292 1 295 1 131 1 88 1 216 1 254 1 37 1 262 1 
114 1 140 1 165 1 1 1 316 1 228 1 184 1 83 2 322 1 278 1 295 1 88 1 131 2 216 1 254 1 178 1 236 1 37 1 262 1 96 1 
131 3 228 3 221 1 184 3 83 3 178 3 292 1 96 1 
131 1 335 1 182 1 228 1 184 1 83 1 178 1 
191 1 131 1 182 1 228 1 184 1 221 1 83 1 178 1 201 1 
165 1 240 2 1 1 2 1 4 1 170 1 83 4 88 1 10 1 254 1 11 1 178 3 262 1 96 1 18 1 182 2 184 3 271 1 191 1 26 1 37 1 114 1 115 1 42 1 205 1 207 1 120 1 292 1 298 1 295 1 131 4 216 1 221 2 133 1 140 1 228 3 316 1 322 1 324 1 69 1 73 1 72 1 159 1 236 1 344 1 
78 1 131 2 20 1 228 1 184 2 83 2 178 1 292 1 96 1 
18 1 308 1 182 1 228 3 2 1 184 3 273 1 83 3 170 1 324 1 298 1 191 1 131 3 26 1 221 1 178 3 236 1 344 1 96 2 
278 1 191 1 131 2 252 1 228 2 184 2 221 1 83 2 178 2 96 1 
114 1 140 1 165 1 1 1 316 1 83 1 322 1 292 1 295 1 131 1 88 1 216 1 254 1 37 1 262 1 
114 1 164 1 165 1 1 1 316 1 186 1 83 1 322 1 292 1 295 1 131 1 88 1 254 1 37 1 262 1 
115 1 238 1 205 4 207 1 240 2 120 1 125 1 293 1 211 1 86 1 51 1 52 1 10 1 252 2 133 1 11 1 311 1 146 2 278 2 193 2 194 1 70 1 72 2 157 1 
18 1 131 1 182 1 228 1 184 1 134 1 83 1 178 1 
78 1 100 1 20 1 228 4 184 5 83 5 292 1 191 1 329 1 131 5 221 1 178 4 236 1 96 2 
131 2 335 1 182 1 228 2 134 1 184 2 83 2 178 2 
319 1 30 1 
319 1 30 1 
269 1 321 1 
269 1 321 1 
269 1 321 1 
239 1 319 1 30 1 
319 1 30 1 105 1 
269 1 319 1 321 1 30 1 
239 1 319 1 30 1 
239 1 319 1 30 1 
338 1 319 1 30 1 
338 1 319 1 30 1 
338 1 319 1 30 1 
79 1 58 1 319 1 30 1 274 1 47 1 
298 1 26 1 98 1 79 1 58 1 319 1 30 1 274 1 47 1 
63 1 195 1 106 1 
118 1 195 1 106 1 
63 2 265 1 118 1 301 1 195 3 3 1 
63 1 265 1 118 1 301 1 195 2 171 1 
63 1 265 1 118 1 301 2 195 2 
238 1 160 1 203 1 42 1 206 1 121 1 5 1 83 1 298 5 6 1 131 1 250 1 221 1 136 1 257 1 177 1 260 1 178 1 17 1 94 4 181 2 227 1 182 1 228 1 141 1 184 1 102 1 273 1 107 1 331 1 26 5 194 1 335 1 27 1 75 2 154 1 
238 1 160 1 203 1 42 1 206 1 121 1 5 1 169 2 83 1 298 5 6 1 131 1 250 3 221 1 136 1 257 1 260 1 178 1 17 1 94 4 181 2 227 1 315 1 141 1 182 1 228 1 184 1 273 1 275 2 189 1 107 1 331 1 26 5 194 1 335 1 27 1 154 1 
160 1 238 1 42 1 206 1 121 1 5 1 83 1 298 3 131 1 6 1 221 1 177 1 257 1 178 1 260 1 94 2 17 1 227 1 181 2 182 1 228 1 184 1 102 1 273 1 107 1 326 1 331 1 26 3 335 1 27 1 194 1 154 1 75 1 
160 1 238 1 206 1 121 1 298 2 6 1 257 1 177 1 260 1 17 1 94 1 227 1 181 2 102 1 107 1 326 1 331 1 26 2 194 1 75 1 155 1 
101 1 322 1 137 1 
161 1 322 1 
307 1 
295 1 322 1 
295 1 330 1 165 1 132 1 101 2 322 3 
295 1 165 1 322 1 
54 1 322 1 
205 7 19 1 311 3 287 1 122 1 320 1 242 1 294 2 52 1 193 4 194 1 302 1 109 1 72 3 304 1 157 2 39 1 
205 7 19 1 311 3 287 1 122 1 320 1 242 1 294 2 52 1 193 4 194 1 302 1 109 1 72 3 304 1 157 2 39 1 
19 1 205 7 311 3 287 1 122 1 320 1 242 1 294 2 52 1 193 4 194 1 302 1 109 1 110 1 72 3 304 1 157 2 39 1 
238 2 205 11 311 2 121 2 229 1 320 2 103 1 242 1 23 1 231 2 293 1 294 1 296 1 130 1 52 1 193 7 194 2 199 2 304 1 72 4 157 1 
115 2 205 9 207 2 240 4 120 2 80 1 122 1 242 1 294 2 300 1 52 1 302 1 219 1 11 2 304 1 19 1 311 4 320 1 193 5 194 1 109 1 72 4 157 3 39 1 
116 1 43 1 118 1 123 1 1 1 124 1 3 1 244 2 172 1 254 1 135 1 12 1 16 1 262 1 63 1 263 1 310 1 270 2 316 1 272 1 144 1 230 1 106 1 334 1 333 1 195 2 233 1 283 1 31 1 37 1 
116 1 43 1 118 1 123 1 1 1 124 2 3 1 244 3 172 1 212 1 254 1 135 1 12 1 16 1 262 1 63 1 310 1 270 3 316 1 272 1 144 1 230 1 106 1 192 1 334 1 333 1 195 2 151 1 233 1 37 1 
116 1 43 1 118 1 123 1 1 1 124 2 3 1 244 2 172 1 212 1 254 1 135 1 12 1 16 1 262 1 63 1 270 2 316 1 230 1 106 1 192 1 333 1 195 2 233 1 37 1 
116 2 114 1 43 2 1 1 316 1 270 1 144 1 322 1 244 1 172 2 295 1 248 1 334 1 150 1 151 1 254 1 233 2 305 1 62 1 138 1 37 1 262 1 112 1 
116 1 43 1 118 1 123 1 1 1 3 1 244 1 172 1 212 1 254 1 135 1 262 1 63 1 263 1 310 1 270 1 316 1 272 1 144 1 106 1 334 1 333 1 195 2 233 1 283 1 37 1 
218 1 
160 1 1 1 241 2 83 1 170 1 6 2 247 1 248 1 250 6 91 2 254 2 258 2 261 2 17 1 262 2 18 1 97 1 181 2 20 1 182 1 184 1 273 3 104 1 277 1 107 1 279 1 26 5 28 2 37 2 40 2 114 2 41 2 206 1 209 1 295 1 298 5 131 1 220 1 136 1 138 1 226 1 313 1 141 3 317 1 316 1 67 1 322 1 324 1 336 2 152 1 341 2 340 4 154 2 234 1 344 1 
241 1 83 1 170 1 298 3 131 1 250 2 225 1 18 1 97 1 226 1 313 1 141 1 20 1 67 1 182 1 184 1 273 2 104 1 324 1 279 1 26 3 340 2 154 2 344 1 
18 1 97 1 226 1 313 1 182 1 67 1 20 1 184 1 273 2 170 1 83 1 104 1 324 1 298 2 279 1 131 1 26 2 28 1 154 2 340 3 344 1 
241 1 83 1 170 1 298 3 131 1 250 2 258 1 225 1 18 1 97 1 226 1 313 1 141 1 20 1 67 1 182 1 184 1 273 2 104 1 324 1 279 1 26 3 28 1 340 3 154 2 344 1 
42 1 241 1 5 1 83 2 170 1 298 3 131 2 250 2 55 1 221 1 258 1 178 1 225 1 18 1 97 1 226 1 313 1 228 1 20 1 67 1 141 1 182 2 184 2 273 3 104 1 324 1 279 1 26 3 335 1 27 1 340 2 154 3 344 1 
241 2 170 1 83 1 6 1 250 4 91 2 258 2 261 2 17 1 18 1 97 1 181 1 182 1 20 1 184 1 273 4 104 1 277 1 107 1 279 1 26 4 28 2 40 2 41 2 206 1 209 1 298 4 131 1 220 1 136 1 226 1 313 1 67 1 141 2 324 1 336 2 154 3 340 4 341 2 344 1 
42 1 206 1 5 1 83 2 170 1 298 2 6 1 131 2 221 1 136 1 256 1 178 1 17 1 18 1 97 1 226 1 313 1 181 1 228 1 20 1 67 1 182 2 184 2 273 3 104 1 277 1 324 1 107 1 279 1 26 2 335 1 27 1 340 2 154 3 344 1 237 1 
42 1 206 1 5 1 83 2 170 1 298 2 6 1 131 2 221 1 136 1 256 1 178 1 17 1 18 1 97 1 226 1 313 1 181 1 228 1 20 1 67 1 182 2 184 2 273 3 104 1 277 1 324 1 107 1 279 1 26 2 335 1 27 1 340 2 154 3 344 1 237 1 
41 1 206 1 127 1 83 1 170 1 298 2 6 1 131 1 92 1 220 1 136 1 224 1 17 1 18 1 97 1 226 1 313 1 181 1 20 1 67 1 182 1 184 1 273 2 104 1 276 1 324 1 107 1 279 1 26 2 336 1 108 1 340 2 154 2 344 1 
42 1 206 1 241 1 5 1 83 2 170 1 84 1 298 2 6 1 131 2 250 1 221 1 136 1 256 1 258 1 178 1 17 1 18 1 97 1 226 1 313 1 181 1 228 1 20 1 67 1 182 2 184 2 273 3 104 1 277 1 324 1 107 1 279 1 26 2 335 1 27 1 28 1 340 3 154 3 344 1 237 1 
42 1 206 1 241 1 5 1 83 2 170 1 84 1 298 2 6 1 131 2 250 1 221 1 136 1 256 1 258 1 178 1 17 1 18 1 97 1 226 1 313 1 181 1 228 1 20 1 67 1 182 2 184 2 273 3 104 1 277 1 324 1 107 1 279 1 26 2 335 1 27 1 28 1 340 3 154 3 344 1 237 1 
41 1 206 1 83 1 170 1 298 2 6 1 131 1 220 1 136 1 224 1 17 1 18 1 97 1 226 1 313 1 181 1 67 1 20 1 182 1 184 1 273 2 104 1 276 1 324 1 279 1 107 1 26 2 336 1 340 2 154 2 344 1 
115 1 205 6 207 1 240 2 120 1 122 1 292 2 294 1 52 1 252 1 10 1 302 1 133 1 11 1 137 1 19 1 311 2 146 1 278 1 193 3 194 1 70 1 109 1 72 3 157 2 39 1 
115 2 238 2 117 1 205 14 207 2 240 4 120 2 121 2 4 1 128 1 242 1 292 1 293 1 130 1 90 1 52 1 10 2 252 4 133 1 11 2 15 1 311 2 64 1 65 1 103 1 146 11 231 3 278 11 193 8 194 2 199 3 72 6 157 1 
115 1 117 1 205 1 207 1 240 2 120 1 228 1 184 1 83 1 131 1 90 1 193 1 252 1 10 1 282 1 71 1 133 1 11 1 178 1 236 1 96 1 
238 2 240 6 165 2 1 2 4 1 83 3 242 4 90 1 88 2 10 3 252 7 254 3 176 2 11 3 178 1 262 3 96 1 19 1 184 1 278 7 193 10 194 3 109 1 284 1 37 3 285 2 39 1 114 1 115 3 204 2 117 1 286 1 205 20 207 3 120 3 122 1 121 2 292 2 293 2 294 1 212 1 295 2 131 3 52 3 302 1 216 2 57 2 133 3 140 2 311 8 228 1 316 2 146 7 322 2 69 2 153 1 72 10 157 4 236 1 
114 2 115 2 117 1 205 2 207 2 240 4 120 2 1 2 4 1 83 1 212 1 295 2 173 1 89 1 131 1 214 2 248 1 10 2 254 7 133 2 11 2 178 1 262 8 138 1 96 1 309 1 314 1 228 1 316 2 184 1 322 3 188 1 193 1 281 1 70 1 72 1 31 1 235 1 37 8 
115 1 238 1 205 3 207 1 240 2 120 1 121 1 83 1 293 1 90 1 131 1 52 1 252 1 10 1 221 1 133 1 11 1 178 1 311 1 228 1 184 1 146 1 278 1 191 1 193 1 194 1 72 2 157 1 113 1 
115 1 238 1 205 2 311 1 207 1 120 1 240 2 146 1 242 1 211 1 278 1 193 2 252 1 10 1 194 1 70 1 133 1 11 1 
115 1 205 2 311 1 207 1 120 1 240 2 146 1 293 1 278 1 51 1 52 1 252 1 10 1 70 1 133 1 11 1 72 2 157 1 
115 1 238 1 205 4 311 2 207 1 120 1 240 2 121 1 146 2 242 1 293 1 278 2 52 1 193 2 252 2 10 1 194 1 70 1 133 1 72 2 11 1 157 1 
115 1 238 1 205 2 311 1 207 1 120 1 240 2 146 1 242 1 211 1 278 1 173 1 193 2 252 1 10 1 194 1 133 1 11 1 
115 1 205 2 311 1 207 1 120 1 240 2 146 1 293 1 278 1 173 1 51 1 52 1 252 1 10 1 133 1 11 1 72 2 157 1 
115 1 238 1 205 4 311 2 207 1 120 1 240 2 121 1 146 2 242 1 293 1 278 2 173 1 52 1 193 2 252 2 10 1 194 1 133 1 72 2 11 1 157 1 
115 1 238 1 205 4 311 2 207 1 120 1 240 2 121 1 146 2 242 1 293 1 278 2 52 1 193 2 252 2 10 1 194 1 133 1 72 2 11 1 157 1 
114 1 115 1 117 1 205 2 207 1 165 1 120 1 240 2 1 1 4 1 83 1 292 1 295 1 88 1 131 1 10 1 216 1 254 1 133 1 11 1 262 1 140 1 316 1 322 1 193 1 69 1 72 1 37 1 
114 1 115 1 117 1 205 2 164 1 207 1 165 1 120 1 240 2 1 1 4 1 83 1 292 1 295 1 88 1 131 1 10 1 254 1 133 1 11 1 262 1 316 1 186 1 322 1 193 1 72 1 32 1 37 1 
115 1 238 1 205 4 311 2 207 1 120 1 240 2 121 1 146 2 242 1 293 1 278 2 90 1 52 1 193 2 252 2 10 1 194 1 133 1 72 2 11 1 157 1 
238 1 115 1 205 4 207 1 165 1 120 1 240 2 1 1 121 1 83 1 242 1 293 1 295 1 88 1 131 1 52 1 252 2 10 1 216 1 176 1 254 1 133 1 11 1 262 1 140 1 311 2 316 1 146 2 322 1 278 2 193 2 194 1 69 1 72 2 31 1 157 1 37 1 
115 1 238 1 205 3 207 1 163 1 240 2 120 1 121 1 83 1 242 1 293 1 90 1 131 1 52 1 10 1 252 1 221 1 133 1 11 1 178 1 311 1 228 1 184 1 146 1 278 1 191 1 193 2 194 1 72 1 
115 2 238 1 205 9 207 2 240 4 120 2 121 1 46 1 242 1 293 1 85 1 130 1 300 1 52 1 11 2 59 1 180 1 311 2 312 1 103 1 143 1 147 1 231 2 193 4 194 1 29 1 199 1 72 5 157 1 
115 2 238 1 205 9 207 2 240 4 120 2 121 1 46 1 242 1 293 1 85 1 130 1 300 1 52 1 11 2 59 1 180 1 311 2 312 1 103 1 143 1 147 1 231 2 193 4 194 1 29 1 199 1 72 5 157 1 
115 2 238 6 205 42 207 2 240 4 120 2 122 1 121 6 242 5 293 5 294 1 85 1 297 1 130 2 300 1 52 6 302 1 219 1 11 2 59 1 19 1 311 11 65 2 185 1 103 2 143 1 147 2 231 4 190 1 328 1 193 23 194 7 109 1 29 1 199 4 72 19 156 1 111 1 157 6 39 1 
115 2 238 1 205 9 207 2 240 4 120 2 121 1 46 1 242 1 293 1 85 1 130 1 300 1 52 1 11 2 59 1 180 1 311 2 103 1 143 1 147 1 231 2 280 1 193 4 194 1 29 1 199 1 72 5 157 1 
115 3 238 2 205 18 207 3 240 6 120 3 121 2 242 1 293 1 85 1 297 1 300 1 52 1 219 2 11 3 59 2 311 2 185 1 143 1 103 2 147 2 231 2 190 1 328 1 193 10 194 2 29 2 199 2 72 8 156 1 111 1 157 1 
115 1 117 1 205 2 207 1 120 1 240 2 1 1 4 1 83 2 295 1 90 1 131 2 214 2 10 1 56 1 254 2 133 1 255 1 11 1 262 2 309 1 316 1 184 2 322 1 193 1 198 1 339 1 74 1 72 1 235 1 37 2 
63 1 118 1 43 1 310 1 99 1 1 1 123 1 316 1 3 1 168 1 106 1 212 1 195 2 337 1 254 2 135 1 31 1 37 2 262 2 
63 1 118 1 43 1 310 1 99 1 123 1 1 1 316 1 126 1 3 1 106 1 212 1 195 2 254 1 135 1 37 1 262 1 
114 1 43 1 1 1 316 1 322 1 295 1 248 1 337 1 254 1 342 1 37 1 262 1 138 1 112 1 
63 1 118 1 43 1 310 1 99 1 1 1 123 1 316 1 3 1 168 1 106 1 212 1 195 2 337 1 254 1 135 1 37 1 262 1 
306 1 
6 1 181 1 318 1 273 1 154 1 137 1 200 1 
206 1 298 1 6 1 250 1 91 1 136 1 261 1 17 1 181 1 141 1 273 2 277 1 107 1 26 1 341 1 154 1 40 1 
114 1 107 1 332 1 206 1 119 1 1 1 316 1 254 1 136 1 262 1 37 1 17 1 
238 4 206 1 121 4 293 4 297 1 130 1 6 11 52 4 175 2 136 1 257 8 260 8 261 3 17 1 181 7 65 1 185 1 103 1 231 2 107 1 328 1 194 4 199 2 341 3 156 1 111 1 
42 1 206 1 5 1 83 1 298 1 131 1 6 2 52 1 175 2 302 1 253 1 221 1 136 1 256 1 178 1 17 1 66 1 181 2 182 1 228 1 184 1 107 1 26 1 335 1 194 2 27 1 109 1 39 1 
206 1 181 1 318 1 273 1 107 1 6 1 136 1 154 1 200 1 17 1 
238 1 194 1 181 2 121 1 257 1 260 1 
298 1 26 1 250 1 141 1 273 1 154 1 
114 2 160 2 206 2 166 2 1 1 295 1 298 3 247 1 6 2 250 4 248 1 254 4 136 1 17 2 262 4 138 1 264 1 181 2 316 1 317 1 141 2 145 1 322 1 326 1 107 2 26 3 152 2 343 1 37 4 
115 1 114 1 205 1 42 1 207 1 240 2 165 1 120 1 1 1 4 1 83 3 292 1 295 1 131 3 88 1 10 1 216 1 254 1 221 2 133 1 11 1 178 2 262 1 140 1 228 2 316 1 184 2 322 1 69 1 72 1 37 1 159 1 
160 1 206 1 181 1 273 1 107 1 6 1 152 1 136 1 154 1 257 1 17 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
79 1 58 1 
319 1 30 1 
115 1 205 8 207 1 240 2 120 1 122 1 294 1 300 1 52 1 302 1 11 1 19 1 311 2 103 1 231 1 193 4 194 1 109 1 199 1 72 4 111 1 157 2 39 1 
115 2 238 1 205 11 0 1 207 2 240 4 120 2 122 1 121 1 242 1 294 1 130 1 300 1 52 1 302 1 11 2 19 1 311 3 103 1 231 2 193 6 194 2 109 1 199 1 72 5 111 1 157 2 39 1 
115 3 238 2 205 19 0 1 207 3 240 6 120 3 122 1 121 2 242 1 293 2 294 1 297 1 300 1 52 3 302 1 219 1 11 3 19 1 311 4 185 1 103 1 231 1 328 1 193 9 194 3 109 1 199 1 72 10 156 1 111 1 157 3 39 1 
115 3 238 2 205 17 0 1 207 3 240 6 120 3 122 1 121 2 242 2 293 1 294 1 297 1 300 1 52 2 302 1 219 1 11 3 19 1 311 5 185 1 103 1 231 1 328 1 193 10 194 3 109 1 199 1 72 7 156 1 111 1 157 3 39 1 
115 1 205 8 207 1 240 2 120 1 122 1 294 1 300 1 52 1 302 1 11 1 19 1 311 2 103 1 231 1 193 4 194 1 109 1 199 1 72 4 111 1 157 2 39 1 
115 1 238 2 205 12 207 1 240 2 120 1 121 2 242 1 293 2 297 1 300 1 52 2 11 1 311 2 185 1 103 1 231 1 328 1 193 6 194 2 199 1 72 6 156 1 111 1 157 1 
115 4 238 2 205 18 0 1 207 4 240 8 120 4 122 1 121 2 242 2 293 1 294 1 297 1 300 1 52 2 302 1 219 2 11 4 19 1 311 5 185 1 103 1 231 1 328 1 193 10 194 3 109 1 199 1 72 8 156 1 111 1 157 3 39 1 
115 4 238 3 205 16 207 4 240 8 120 4 121 3 46 1 242 3 293 2 297 1 300 1 52 2 219 2 11 4 311 6 185 1 103 1 231 1 328 1 193 9 194 3 199 1 72 7 156 1 111 1 157 3 
205 7 19 2 311 6 122 1 242 3 52 1 193 3 194 1 302 3 109 3 72 4 157 3 39 1 
115 4 238 2 205 18 207 4 240 8 120 4 122 1 121 2 46 1 242 1 293 1 294 1 297 1 300 1 52 2 302 1 219 2 11 4 19 1 311 4 185 1 103 1 231 1 328 1 193 10 194 3 109 1 199 1 72 8 156 1 111 1 157 3 39 1 
115 2 205 8 19 1 311 3 207 2 120 2 240 4 122 1 242 1 294 1 52 1 193 4 194 1 302 1 109 1 219 1 72 4 11 2 157 2 39 1 
19 1 205 6 311 2 122 1 294 1 193 3 52 1 194 1 302 1 109 1 72 3 137 1 157 2 39 1 
115 1 238 1 205 4 0 1 311 2 207 1 120 1 240 2 121 1 242 1 293 1 52 1 193 2 194 1 72 2 11 1 157 1 
238 1 205 7 311 2 121 1 103 1 242 1 231 2 293 1 130 1 52 1 193 3 194 1 199 1 72 4 157 1 
238 2 115 2 205 23 207 2 120 2 240 4 122 1 121 2 242 4 293 2 294 1 130 1 246 1 52 3 302 2 219 2 11 2 19 1 311 9 64 1 65 1 231 2 193 11 194 3 109 2 199 2 72 12 157 5 39 1 
205 1 72 1 231 1 
205 1 193 1 199 1 
115 1 238 1 205 6 0 1 207 1 311 3 240 2 120 1 121 1 242 1 293 1 193 3 52 1 194 1 11 1 72 3 285 1 157 2 
115 1 238 2 205 12 207 1 240 2 120 1 121 2 242 1 293 2 297 1 300 1 52 2 11 1 311 2 185 1 103 1 231 1 328 1 193 6 194 2 199 1 72 6 156 1 111 1 157 1 
205 6 311 2 242 1 193 3 52 1 194 1 302 1 109 1 72 3 157 1 39 1 
115 1 19 1 205 3 311 2 207 1 120 1 240 2 122 1 242 1 246 1 193 1 302 1 109 1 219 1 72 2 11 1 157 1 
115 1 205 10 207 1 311 5 240 2 120 1 242 2 300 1 193 5 52 2 194 2 253 1 302 2 109 2 11 1 72 5 157 3 39 1 
115 1 238 1 205 2 207 1 311 1 120 1 240 2 242 1 300 1 193 2 194 1 11 1 
115 1 238 1 205 4 311 2 207 1 120 1 240 2 121 1 242 1 293 1 300 1 52 1 193 2 194 1 72 2 11 1 157 1 
115 3 205 3 207 3 311 2 120 3 240 6 46 1 242 1 246 1 300 1 193 1 302 1 109 1 219 1 72 2 11 3 157 1 
238 1 115 3 205 5 0 1 207 3 120 3 240 6 121 1 103 1 46 1 23 1 231 1 296 1 300 1 193 4 194 1 199 2 11 3 72 1 
78 1 131 1 20 1 184 1 83 1 49 1 292 1 
78 1 268 1 20 1 184 1 83 1 48 1 49 1 292 1 68 1 131 1 53 1 61 1 
295 1 114 1 248 1 1 1 316 1 254 1 322 1 137 1 138 1 262 1 37 1 
114 1 165 1 1 1 228 1 316 1 184 1 83 2 322 1 292 1 295 1 88 1 131 2 216 1 254 1 178 1 37 1 262 1 96 1 
18 1 165 2 1 1 166 1 182 1 228 1 316 1 184 2 170 1 83 2 322 3 292 1 295 2 213 1 88 1 131 2 54 1 216 1 254 1 178 2 37 1 262 1 96 1 
18 1 267 1 165 2 1 1 166 1 182 1 228 1 316 1 184 2 186 1 170 1 83 2 322 3 292 1 295 2 213 1 88 1 131 2 54 1 254 2 178 2 37 2 262 2 96 1 
161 1 42 1 45 1 165 1 166 1 1 1 5 1 83 1 298 2 295 1 131 1 213 1 250 1 54 1 254 1 93 1 221 1 178 1 262 1 101 1 182 1 228 1 316 1 184 1 273 1 322 4 324 1 26 2 335 1 27 1 154 1 37 1 
161 1 42 1 165 1 166 1 1 1 5 1 83 1 298 2 295 1 131 1 213 1 250 1 54 1 254 1 221 1 178 1 262 1 101 1 182 1 228 1 316 1 184 1 273 1 322 4 325 1 324 1 26 2 335 1 27 1 154 1 37 1 
89 1 1 1 316 1 254 1 262 1 37 1 
114 2 309 1 314 1 165 1 1 3 316 2 322 3 188 1 212 1 295 2 89 1 330 1 214 1 9 1 281 1 254 6 31 1 13 1 37 7 262 7 38 1 
240 4 165 1 1 1 83 2 90 1 88 1 252 1 10 2 176 1 254 1 11 2 178 1 262 1 96 1 19 1 184 1 278 1 193 3 194 1 109 1 31 1 37 1 39 1 204 1 115 2 205 6 207 2 120 2 122 1 292 2 294 1 295 1 131 2 52 1 56 1 302 1 216 1 133 2 140 1 311 2 228 1 316 1 146 1 322 1 69 1 72 3 157 2 
161 1 82 1 5 1 83 1 6 4 250 2 253 1 175 2 254 1 178 1 262 1 94 1 17 2 101 1 181 5 182 1 184 1 273 2 107 2 26 3 194 2 27 1 197 1 109 1 200 1 37 1 39 1 114 1 42 1 206 2 289 1 298 3 131 1 52 2 302 1 221 1 136 2 66 1 141 1 228 1 318 1 322 2 324 1 325 1 335 1 154 2 343 1 
89 1 119 1 1 1 316 1 254 1 262 1 37 1 
114 1 267 1 1 1 316 1 322 1 295 1 8 1 248 1 254 4 31 1 37 4 262 4 138 1 
165 1 166 1 1 2 316 1 322 1 323 1 295 1 254 2 13 1 284 1 223 1 37 2 262 2 38 1 
114 1 118 1 195 1 1 1 316 1 254 1 135 1 262 1 37 1 106 1 
309 1 1 1 316 1 322 1 212 1 295 1 198 1 254 2 31 1 37 2 262 2 
114 1 309 1 166 1 1 2 316 2 322 3 188 1 295 2 8 1 248 1 281 1 254 4 31 1 138 1 37 5 262 5 
114 1 309 1 166 1 1 2 316 2 322 3 295 2 8 1 248 1 281 1 254 4 31 1 35 1 138 1 37 5 262 5 
114 1 165 1 1 1 228 1 316 1 184 1 186 1 83 2 322 1 292 1 295 1 88 1 131 2 254 1 178 1 37 1 262 1 96 1 
165 1 166 1 1 2 316 1 322 1 295 1 330 1 9 1 254 1 13 1 37 1 262 1 38 1 
215 1 196 1 292 1 50 1 77 1 
42 1 288 1 2 1 5 1 83 1 170 1 50 1 298 2 131 1 215 1 221 1 178 1 259 1 94 1 18 1 228 1 182 2 184 1 273 1 324 1 26 2 335 1 27 1 196 1 154 1 36 1 344 1 77 1 
184 1 83 1 131 1 215 1 196 1 339 1 255 1 74 1 77 1 
288 1 196 1 36 1 
12 1 230 1 137 1 16 1 
334 1 270 1 12 1 144 1 230 1 244 1 16 1 
116 1 270 1 172 1 
263 1 167 1 270 3 142 1 144 1 244 3 230 1 334 1 251 2 12 1 16 1 158 1 
334 1 208 1 270 2 124 1 12 1 144 1 230 1 244 2 16 1 
63 1 263 1 232 1 249 1 334 1 195 1 270 1 144 1 244 1 16 1 106 1 
263 1 334 1 270 1 144 1 230 1 244 1 16 1 
263 1 334 1 270 1 12 1 144 1 230 2 244 1 
263 1 270 2 144 2 230 1 244 2 129 1 334 2 217 1 76 1 16 1 
263 1 270 3 124 2 144 1 230 1 244 3 299 1 327 1 232 1 334 1 12 1 14 1 16 2 
263 1 63 1 118 1 270 2 124 1 144 1 3 1 230 1 244 2 243 1 106 1 334 1 195 2 12 1 16 1 
263 1 270 4 208 1 124 2 144 2 230 1 244 4 149 1 327 1 232 1 334 2 12 1 16 2 
263 1 334 1 270 1 12 1 144 1 230 1 244 1 16 1 
179 1 142 1 270 4 124 2 144 1 230 2 244 4 327 1 232 1 334 1 251 1 12 2 16 3 158 1 
263 1 270 2 183 1 124 1 144 1 230 1 244 2 187 1 334 1 12 1 222 1 16 1 
263 1 7 1 334 1 251 2 142 2 270 3 12 1 144 1 230 1 244 3 16 1 158 1 
303 1 290 2 16 2 139 1 
263 1 334 1 270 1 144 1 244 1 245 1 
263 1 299 1 334 1 270 2 124 1 12 1 144 1 230 1 244 2 16 1 
44 1 
263 1 334 1 270 1 12 1 144 1 230 1 244 1 16 1 
263 1 299 1 334 1 251 1 270 3 124 1 12 1 144 1 230 1 244 3 16 1 
232 1 327 1 179 1 16 1 
230 1 16 1 

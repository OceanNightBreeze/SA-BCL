#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 359 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 70 307 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 165 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 321 7 60 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 321 7 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 321 7 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 321 7 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 321 7 60 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 70 (28,234) 222 172 (143,368) 48 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 360 43 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 70 (235,357) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 70 (28,234) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 70 (28,234) 222 172 (143,368) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 70 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 68 279 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
107 1 265 2 125 1 284 3 323 2 152 9 347 6 248 1 325 1 250 1 200 1 114 1 10 1 272 2 133 1 71 5 358 4 260 9 161 2 333 2 103 1 80 1 104 1 338 2 185 1 262 1 243 1 168 2 
107 1 265 2 125 1 284 3 152 9 323 2 347 6 248 1 325 1 250 1 200 1 114 1 10 1 272 2 133 1 71 5 358 4 260 9 161 2 333 2 103 1 80 1 104 1 338 2 185 1 262 1 243 1 168 2 
107 1 265 2 125 1 284 4 152 10 323 2 347 7 248 1 325 1 250 1 200 1 114 1 10 1 272 2 133 1 71 6 358 5 260 10 161 2 333 2 103 1 80 1 104 1 338 2 185 1 262 1 243 1 168 2 
107 1 265 2 125 1 284 2 152 7 323 1 347 4 248 1 325 1 250 1 200 1 114 1 10 1 272 2 133 1 71 4 358 3 260 7 161 2 333 2 103 1 80 1 104 1 338 2 185 1 243 1 168 2 
10 1 272 1 71 3 125 1 358 2 284 1 260 4 333 1 161 1 103 1 152 4 323 2 80 1 347 3 338 1 262 1 200 1 168 1 
10 1 272 1 265 1 71 1 40 1 260 2 160 1 333 1 103 1 152 2 104 1 365 1 338 1 243 1 200 1 168 1 
10 1 272 2 265 1 71 2 358 1 260 3 284 1 103 1 152 3 347 1 338 2 185 1 200 1 
265 1 125 1 284 3 152 9 323 2 347 7 302 1 225 1 200 1 114 1 10 1 272 2 133 1 71 5 358 4 260 9 161 1 333 1 103 1 80 1 338 2 185 1 262 1 168 1 
265 1 125 1 284 3 152 9 323 2 347 7 302 1 225 1 200 1 114 1 10 1 272 2 133 1 71 5 358 4 260 9 161 1 333 1 103 1 80 1 338 2 185 1 262 1 168 1 
267 1 359 1 16 1 
267 1 77 1 261 2 
363 2 345 1 182 2 232 2 131 2 58 1 50 2 86 2 
56 1 189 1 83 1 193 1 58 1 86 3 87 2 28 1 299 1 61 1 345 1 129 2 348 2 65 1 131 3 327 1 67 1 96 1 274 1 257 1 13 1 156 1 232 2 361 1 362 1 363 2 236 2 182 2 81 1 239 1 366 1 82 1 163 1 105 1 47 1 140 2 50 2 
363 1 182 1 89 1 30 1 232 1 14 1 131 1 58 1 50 1 86 1 
169 1 294 1 267 1 58 1 86 2 346 1 64 1 89 2 30 1 131 2 136 1 137 1 74 1 14 1 232 1 99 1 16 1 78 1 363 1 182 1 50 2 
169 1 294 2 267 1 58 1 86 2 346 2 64 1 89 2 30 1 131 2 74 1 232 2 14 1 99 1 16 1 78 1 363 2 182 2 50 2 
294 1 151 1 346 1 155 1 224 1 
294 2 151 1 346 2 267 1 116 1 224 1 16 1 244 1 
294 1 151 1 346 1 
294 1 14 1 232 1 99 1 58 1 86 1 363 1 182 1 346 1 89 1 30 1 224 1 131 1 50 1 
267 1 
294 2 151 1 346 2 267 1 369 1 224 1 16 1 244 1 
287 1 294 5 217 1 25 1 267 1 268 2 12 2 247 2 174 1 16 1 151 2 121 1 346 5 195 1 199 1 224 2 314 1 244 1 253 1 
219 1 11 1 191 1 136 1 232 4 319 2 86 5 363 1 182 4 345 1 79 1 131 5 50 5 328 1 
182 2 223 1 89 1 30 1 232 2 131 2 50 2 86 2 
345 1 359 1 
205 1 232 1 86 2 363 1 182 1 345 2 131 2 50 2 328 1 
75 1 94 1 309 1 
280 1 83 1 257 1 86 1 362 1 87 1 28 1 299 1 61 1 345 1 348 1 163 1 82 1 47 1 131 1 140 1 
219 1 83 1 257 1 232 1 319 1 86 2 362 1 28 1 87 1 61 1 299 1 182 1 348 1 82 1 163 1 47 1 131 2 140 1 94 1 50 1 
363 1 345 1 182 3 232 3 131 3 319 1 50 3 86 3 
182 1 89 1 30 1 232 1 131 1 50 1 86 1 
363 1 182 1 205 1 89 1 232 1 131 1 50 1 86 1 328 1 
56 1 193 1 58 1 319 1 61 1 64 1 65 1 328 1 202 1 257 1 13 1 74 1 156 1 78 1 163 1 82 1 339 1 169 1 294 1 219 1 83 1 86 4 87 1 28 1 299 1 345 1 346 1 348 1 89 2 129 1 131 4 96 1 274 1 232 3 37 1 361 1 362 1 363 2 182 3 236 2 366 1 239 1 47 1 140 1 50 3 
345 1 182 1 11 1 136 1 232 1 131 2 50 2 319 1 86 2 
169 1 294 1 219 1 267 1 330 1 232 3 74 1 319 2 86 3 78 1 363 1 182 3 346 1 64 1 89 1 131 3 50 3 328 1 202 1 
232 2 75 1 319 1 86 2 363 1 182 2 131 2 50 2 94 1 328 1 
83 1 257 1 86 1 362 1 87 1 28 1 299 1 61 1 345 1 348 1 163 1 82 1 47 1 131 1 140 1 
83 1 257 1 181 1 86 1 235 1 362 1 87 1 299 1 61 1 345 1 348 1 163 1 82 1 131 1 140 1 
56 1 220 1 193 1 149 1 129 4 90 1 132 1 66 1 67 2 94 2 309 2 203 1 204 1 13 2 72 1 156 1 361 1 75 2 236 2 335 1 239 1 366 1 240 1 187 1 
182 1 223 1 89 1 232 1 131 1 50 1 86 1 78 1 
127 1 320 1 
127 1 320 1 
355 1 109 1 
355 1 109 1 
355 1 109 1 
127 1 158 1 320 1 
127 1 158 1 320 1 
127 1 308 1 320 1 
178 1 355 1 127 2 259 1 109 1 320 2 
127 1 158 1 320 1 
127 1 281 1 320 1 
127 1 281 1 320 1 
127 1 281 1 320 1 
294 1 59 1 320 1 86 2 297 1 345 1 127 1 346 1 324 1 251 1 131 2 306 1 308 1 180 1 353 1 115 1 35 1 232 2 41 1 138 1 182 2 44 1 292 1 50 2 
294 2 123 1 267 1 295 1 5 1 58 1 86 1 320 2 177 1 127 2 346 2 89 1 324 2 30 1 198 1 131 1 251 1 69 1 180 2 34 1 353 2 115 2 232 1 14 1 99 1 363 1 182 1 292 2 212 1 275 1 50 1 
333 1 161 1 168 1 
333 1 40 1 168 1 
161 2 45 1 271 1 226 1 40 1 168 3 
161 1 271 1 226 1 40 1 216 1 168 2 
161 1 271 1 226 2 40 1 168 2 
294 5 141 2 142 1 267 2 268 1 247 1 174 1 110 1 59 1 151 1 346 5 195 2 224 4 305 1 132 1 254 1 350 1 287 3 203 1 230 1 310 2 288 1 12 1 311 2 77 1 16 1 261 3 138 1 44 1 335 1 240 1 244 1 
294 8 267 4 268 2 247 2 174 1 110 2 59 4 151 5 346 8 304 4 153 1 195 4 179 1 224 6 305 2 132 2 33 1 350 1 287 6 203 2 310 4 288 2 98 1 155 4 12 2 311 4 208 1 77 2 16 1 261 6 121 1 335 2 19 1 240 2 244 1 
294 3 141 1 142 1 267 3 268 1 247 1 110 1 59 1 346 3 195 2 224 2 305 1 132 1 287 3 203 1 230 1 288 1 310 2 12 1 311 2 16 1 77 2 261 4 121 1 335 1 240 1 
294 3 141 1 142 1 267 2 268 1 247 1 110 1 59 2 346 3 195 2 179 1 305 1 224 2 132 1 33 1 287 3 203 1 230 1 310 2 288 1 98 1 12 1 311 2 77 2 261 4 121 1 335 1 240 1 
82 1 163 1 362 1 
252 1 362 1 
70 1 359 1 
317 1 362 1 
173 1 
82 1 362 1 
70 1 82 1 163 1 146 1 307 1 362 1 
203 1 341 1 171 1 340 1 145 1 13 2 72 2 210 1 111 1 176 1 364 1 196 1 129 5 90 3 132 1 67 3 167 2 
203 1 341 1 171 1 340 1 145 1 13 2 72 2 210 1 111 1 176 1 364 1 196 1 129 5 90 3 132 1 67 3 167 2 
203 1 341 1 340 1 171 1 145 1 13 2 72 2 210 1 111 1 176 1 364 1 196 1 129 5 90 3 139 1 132 1 67 3 167 2 
111 2 176 1 129 1 165 1 67 1 167 1 
56 2 57 1 340 1 341 1 145 1 193 2 111 1 176 1 129 7 196 1 90 4 132 1 67 4 203 1 95 1 13 3 72 3 156 2 210 1 236 4 364 1 239 2 277 1 167 2 
265 1 2 1 87 1 61 1 152 2 300 1 347 1 128 1 303 1 348 1 200 1 10 1 228 1 272 1 257 1 71 1 356 1 40 1 260 2 333 1 161 1 103 1 102 1 237 1 45 1 184 1 338 1 140 1 166 1 168 2 
265 1 2 1 87 1 61 1 152 3 300 1 128 1 29 1 347 2 303 1 348 1 349 1 227 1 200 1 228 1 272 1 257 1 71 1 40 1 260 3 333 1 161 1 103 1 102 1 45 1 237 1 338 1 140 1 166 1 168 2 
265 1 87 1 61 1 152 2 300 1 128 1 347 2 303 1 348 1 349 1 227 1 200 1 257 1 71 1 40 1 260 2 161 1 333 1 103 1 102 1 237 1 45 1 140 1 166 1 168 2 
272 1 265 2 245 1 257 1 318 1 209 1 260 1 362 1 87 1 61 1 299 1 152 1 102 2 237 2 128 2 29 1 348 1 82 1 338 1 164 1 140 1 278 1 264 1 
265 1 2 1 87 1 61 1 152 1 300 1 128 1 303 1 348 1 349 1 10 1 228 1 272 1 257 1 356 1 40 1 260 1 333 1 161 1 102 1 237 1 45 1 338 1 140 1 166 1 168 2 
255 1 
55 1 294 2 268 1 247 1 174 1 318 1 126 1 270 1 87 2 61 1 286 1 299 2 151 2 9 1 346 2 348 2 195 2 249 1 305 1 154 1 287 2 257 1 12 1 209 1 362 1 213 1 82 1 242 1 140 2 276 1 293 1 51 1 244 1 
270 1 229 1 55 1 294 2 151 2 346 2 369 1 244 1 154 1 
270 1 55 1 294 1 346 1 27 1 159 1 154 1 
294 2 55 1 229 1 159 1 27 1 270 1 151 2 346 2 46 1 369 1 244 1 154 1 
55 1 294 2 267 1 282 1 268 1 247 1 174 1 58 1 126 2 147 1 86 1 270 1 151 3 346 2 89 1 195 1 30 1 249 2 131 1 154 1 229 2 287 1 289 1 12 1 232 1 14 1 99 1 16 1 363 1 182 1 46 2 369 1 215 1 49 1 242 1 50 1 51 1 244 1 
294 1 55 1 287 1 268 1 12 1 247 1 174 1 126 1 270 1 346 1 195 1 249 1 242 1 276 1 51 1 154 1 
55 1 294 1 267 1 282 1 268 1 247 1 174 1 58 1 126 2 147 1 86 1 270 1 346 1 89 1 195 1 30 1 249 2 131 1 154 1 287 1 289 1 12 1 232 1 14 1 99 1 16 1 363 1 182 1 242 1 50 1 51 1 
55 1 294 1 267 1 282 1 268 1 247 1 174 1 58 1 126 2 147 1 86 1 270 1 346 1 89 1 195 1 30 1 249 2 131 1 154 1 287 1 289 1 12 1 232 1 14 1 99 1 16 1 363 1 182 1 242 1 50 1 51 1 
55 1 294 1 144 1 267 1 4 1 282 1 268 1 247 1 174 1 58 1 126 2 86 1 270 1 346 1 89 1 195 1 30 1 249 2 131 1 154 1 287 1 12 1 232 1 14 1 99 1 16 1 363 1 182 1 312 1 50 1 51 1 
55 1 294 1 267 1 282 1 268 1 247 1 174 1 58 1 126 2 27 1 147 1 86 1 270 1 151 1 346 1 89 1 195 1 30 1 249 2 131 1 154 1 229 1 287 1 289 1 12 1 232 1 14 1 99 1 16 1 159 1 363 1 182 1 46 1 215 1 242 1 50 1 51 1 
55 1 294 1 267 1 282 1 268 1 247 1 174 1 58 1 126 2 27 1 147 1 86 1 270 1 151 1 346 1 89 1 195 1 30 1 249 2 131 1 154 1 229 1 287 1 289 1 12 1 232 1 14 1 99 1 16 1 159 1 363 1 182 1 46 1 215 1 242 1 50 1 51 1 
287 1 294 1 55 1 144 1 268 1 12 1 247 1 174 1 126 1 270 1 346 1 195 1 249 1 276 1 51 1 154 1 
56 1 340 1 341 1 145 1 193 1 345 1 196 1 129 4 90 2 66 1 132 1 94 1 67 2 309 1 203 1 72 2 13 2 156 1 75 1 359 1 361 1 236 2 364 1 239 1 366 1 167 1 
56 2 124 1 1 1 192 1 193 2 110 2 283 1 345 1 129 14 90 2 132 1 94 11 67 8 309 11 203 2 96 1 36 1 72 1 13 6 156 2 361 2 75 4 233 1 210 1 118 3 236 4 335 2 239 2 366 1 313 1 105 1 240 1 53 3 
56 1 280 1 219 1 83 1 193 1 319 1 86 2 28 1 87 1 61 1 299 1 345 1 348 1 129 2 131 2 67 1 96 1 257 1 13 1 156 1 232 1 75 1 361 1 15 1 233 1 362 1 182 1 236 2 239 1 366 1 82 1 163 1 367 1 47 1 105 1 140 1 21 1 50 1 
56 3 145 1 193 3 110 2 319 1 61 2 196 1 65 2 326 2 67 9 203 3 257 2 72 4 13 9 156 3 75 7 210 4 335 2 163 2 82 2 263 2 167 1 219 1 341 1 340 1 83 2 86 3 298 1 87 3 28 2 299 1 345 1 349 1 348 3 129 18 90 8 131 3 132 3 94 7 309 7 96 1 231 1 232 1 38 1 361 3 100 2 233 1 362 2 236 6 182 1 364 1 366 3 239 3 368 2 105 1 47 2 240 2 140 3 50 1 
0 1 56 2 318 1 193 2 319 1 61 3 66 1 67 1 257 4 13 1 156 2 290 1 209 1 120 1 17 1 81 1 82 3 163 1 20 1 218 1 24 1 296 1 344 1 86 1 87 6 299 2 349 1 129 2 348 7 131 1 96 1 232 1 361 2 362 4 42 1 236 4 182 1 366 2 239 2 184 1 105 1 140 7 50 1 316 1 
56 1 193 1 110 1 86 1 129 3 90 1 131 1 132 1 94 1 67 1 309 1 328 1 203 1 72 1 13 2 156 1 232 1 75 1 361 1 332 1 233 1 363 1 182 1 236 2 335 1 239 1 366 1 240 1 50 1 
56 1 203 1 220 1 156 1 75 1 361 1 193 1 210 1 236 2 335 1 129 2 366 1 239 1 90 1 66 1 94 1 67 2 309 1 
56 1 204 1 72 1 13 2 156 1 75 1 361 1 193 1 236 2 129 2 366 1 239 1 90 1 240 1 66 1 132 1 94 1 309 1 
56 1 110 1 193 1 129 4 90 2 66 1 132 1 67 2 94 2 309 2 203 1 13 2 72 1 156 1 361 1 75 2 210 1 236 2 335 1 239 1 366 1 240 1 
56 1 203 1 220 1 156 1 75 1 361 1 193 1 210 1 42 1 236 2 335 1 129 2 366 1 239 1 90 1 94 1 67 2 309 1 
56 1 204 1 72 1 13 2 156 1 75 1 361 1 193 1 42 1 236 2 129 2 366 1 239 1 90 1 240 1 132 1 94 1 309 1 
56 1 110 1 193 1 129 4 90 2 132 1 67 2 94 2 309 2 203 1 13 2 72 1 156 1 361 1 75 2 210 1 42 1 236 2 335 1 239 1 366 1 240 1 
56 1 110 1 193 1 129 4 90 2 132 1 67 2 94 2 309 2 203 1 13 2 72 1 156 1 361 1 75 2 210 1 236 2 335 1 239 1 366 1 240 1 
56 1 83 1 193 1 86 1 28 1 87 1 61 1 299 1 345 1 129 2 65 1 348 1 131 1 67 1 96 1 257 1 13 1 156 1 361 1 362 1 236 2 366 1 239 1 82 1 163 1 105 1 47 1 140 1 
56 1 83 1 193 1 86 1 87 1 61 1 299 1 345 1 129 2 348 1 131 1 67 1 96 1 257 1 13 1 156 1 181 1 361 1 235 1 362 1 334 1 236 2 366 1 239 1 82 1 163 1 105 1 140 1 
56 1 110 1 193 1 129 4 90 2 132 1 67 2 94 2 309 2 203 1 13 2 72 1 156 1 361 1 75 2 233 1 210 1 236 2 335 1 239 1 366 1 240 1 
56 1 83 1 193 1 110 1 86 1 28 1 87 1 61 1 129 4 65 1 348 1 90 2 131 1 132 1 94 2 67 2 309 2 203 1 257 1 72 1 13 2 156 1 75 2 361 1 210 1 362 1 236 2 335 1 184 1 366 1 239 1 163 1 82 1 240 1 47 1 140 1 263 1 
56 1 193 1 110 1 86 1 129 3 90 1 131 1 132 1 67 2 94 1 309 1 328 1 203 1 13 1 156 1 232 1 361 1 75 1 233 1 210 1 157 1 363 1 182 1 236 2 335 1 239 1 366 1 240 1 50 1 
56 1 236 2 57 1 239 1 130 1 156 1 193 1 321 1 60 1 7 1 
56 1 236 2 57 1 239 1 130 1 156 1 193 1 321 1 60 1 7 1 
56 1 236 2 57 1 239 1 130 1 156 1 193 1 321 1 60 1 7 1 
56 1 236 2 57 1 239 1 130 1 156 1 193 1 321 1 60 1 7 1 
56 1 236 2 57 1 239 1 130 1 156 1 193 1 321 1 60 1 7 1 
150 1 158 1 
281 1 259 1 186 1 
329 1 180 1 115 1 353 1 123 1 320 1 177 1 127 1 292 1 212 1 
41 1 308 1 
180 1 353 1 115 1 127 1 292 1 91 1 315 1 285 1 320 1 
294 1 123 1 267 1 295 1 5 1 58 1 86 1 320 1 177 1 127 1 346 1 89 1 324 2 30 1 198 1 131 1 251 1 69 1 180 1 34 1 353 1 115 1 232 1 14 1 99 1 363 1 182 1 292 1 212 1 275 1 50 1 
294 1 123 1 267 1 295 1 5 1 58 1 86 1 320 1 177 1 127 1 346 1 89 1 324 2 30 1 198 1 131 1 251 1 69 1 180 1 34 1 353 1 115 1 232 1 14 1 99 1 363 1 182 1 292 1 212 1 275 1 50 1 
294 1 123 1 267 1 295 1 5 1 58 1 86 1 320 1 177 1 127 1 346 1 89 1 324 2 30 1 198 1 131 1 251 1 69 1 180 1 34 1 353 1 115 1 232 1 14 1 99 1 363 1 182 1 292 1 212 1 275 1 50 1 
150 1 259 1 158 1 
150 1 259 1 158 1 
281 1 186 1 
281 1 259 1 186 1 
35 1 306 1 
294 1 295 1 59 1 86 2 320 1 297 1 345 1 127 1 346 1 324 1 93 1 224 1 131 2 306 1 308 1 180 1 353 1 115 1 35 1 232 2 41 1 138 1 182 2 44 1 292 1 275 1 50 2 
56 1 108 1 193 1 343 1 86 2 344 1 87 2 61 1 62 1 63 1 348 2 129 2 131 2 67 1 96 1 257 1 13 1 156 1 361 1 233 1 101 1 362 1 236 2 81 2 239 1 366 1 82 1 20 1 105 1 140 2 50 2 
2 1 257 1 40 1 6 1 87 2 333 1 161 1 61 1 45 1 183 1 128 1 303 1 349 1 348 2 184 1 140 2 113 1 166 1 168 2 
2 1 257 1 40 1 87 1 333 1 161 1 61 1 45 1 128 1 303 1 349 1 348 1 370 1 140 1 113 1 166 1 168 2 
257 1 221 1 318 1 209 1 362 1 87 1 61 1 299 1 183 1 128 1 348 1 82 1 140 1 278 1 
2 1 257 1 40 1 6 1 87 1 333 1 161 1 61 1 45 1 183 1 128 1 303 1 349 1 348 1 140 1 113 1 166 1 168 2 
273 1 
287 1 267 1 195 1 199 1 359 1 16 1 253 1 
294 1 267 2 268 1 247 1 174 1 8 1 151 1 346 1 195 1 287 1 97 1 12 1 77 1 16 1 261 1 242 1 244 1 
317 2 143 1 268 1 247 1 174 1 172 1 146 1 222 1 87 1 299 1 61 1 151 1 348 1 305 1 287 1 70 1 206 1 257 2 12 1 234 1 362 3 163 1 82 1 48 1 140 1 
294 1 190 1 124 1 267 6 84 1 268 2 247 2 174 2 110 4 151 1 346 1 195 8 92 1 132 4 287 12 203 4 310 8 36 1 12 2 360 1 311 8 16 1 118 2 77 5 261 10 43 1 335 4 214 1 313 1 240 4 106 4 244 1 53 2 
294 1 23 1 341 1 268 1 247 1 174 1 58 1 147 1 86 1 346 1 89 1 196 1 195 2 30 1 131 1 132 1 287 2 203 2 352 1 12 1 14 1 232 1 99 1 363 1 182 1 364 1 106 2 50 1 
287 1 267 1 268 1 12 1 247 1 174 1 16 1 195 1 199 1 253 1 
287 5 23 1 203 2 310 5 267 5 100 1 110 2 311 5 77 5 261 10 335 2 195 5 240 2 106 2 132 2 
294 1 151 1 346 1 267 1 16 1 244 1 
294 3 266 2 268 2 247 2 174 1 318 1 194 1 87 4 61 1 286 1 299 2 151 4 9 2 346 3 348 4 195 2 305 2 287 2 257 1 12 2 209 1 362 1 211 1 121 1 82 1 213 1 241 1 140 4 244 2 
56 1 83 1 193 1 58 1 86 3 87 1 28 1 299 1 61 1 345 1 129 1 348 1 65 1 131 3 96 1 274 1 257 1 13 1 156 1 232 2 361 1 362 1 363 2 236 2 182 2 366 1 239 1 163 1 82 1 47 1 140 1 50 2 
287 1 310 2 267 4 268 1 12 1 247 1 174 1 311 2 77 2 16 2 261 4 9 1 195 2 305 1 167 1 
353 1 292 1 207 1 
353 1 292 1 207 1 
353 1 292 1 35 1 73 1 31 1 
353 1 292 1 207 1 
353 1 292 1 246 1 
353 1 292 1 246 1 
353 1 292 1 246 1 
353 1 292 1 
127 1 320 1 
56 2 203 1 95 1 340 1 341 1 145 1 13 3 72 2 156 2 193 2 210 1 236 4 364 1 129 6 239 2 196 1 90 3 132 1 67 3 167 1 
203 1 340 1 341 1 145 1 13 2 72 2 359 1 364 1 196 1 129 4 90 2 132 1 67 2 167 1 
56 1 203 1 72 1 13 2 156 1 76 1 193 1 110 1 210 1 236 2 335 1 239 1 129 4 90 2 240 1 132 1 67 2 
203 1 124 1 36 1 72 1 13 4 110 1 118 2 210 1 335 1 129 7 90 2 240 1 132 1 67 3 53 1 
56 2 1 1 341 2 340 1 145 1 110 2 193 2 196 2 129 21 90 9 132 3 67 10 32 1 203 3 95 2 36 1 13 11 72 5 156 2 210 4 118 2 236 4 364 1 335 2 239 2 313 1 240 2 53 2 167 1 
129 1 13 1 118 1 
129 1 67 1 53 1 
56 1 203 1 13 3 72 2 156 1 76 1 193 1 100 1 110 1 210 1 236 2 335 1 239 1 129 6 90 3 240 1 132 1 67 3 
56 2 57 1 124 1 84 1 193 2 110 2 129 13 90 3 92 1 132 2 67 7 95 1 203 2 13 6 72 1 156 2 360 1 210 2 118 1 43 1 236 4 335 2 239 2 214 1 240 2 53 1 
203 1 364 1 129 2 13 1 132 1 67 1 
56 1 95 1 341 1 340 1 145 1 72 1 13 2 156 1 193 1 210 1 236 2 196 1 129 3 239 1 90 2 67 1 32 1 
56 1 203 2 57 1 352 1 341 1 72 2 13 4 156 1 193 1 210 2 236 2 364 1 239 1 196 1 129 8 90 4 132 2 67 4 
56 1 203 1 57 1 156 1 193 1 210 1 236 2 335 1 239 1 129 2 90 1 67 2 
56 1 203 1 57 1 72 1 13 2 156 1 193 1 110 1 210 1 236 2 335 1 239 1 129 4 90 2 240 1 132 1 67 2 
56 3 95 1 188 1 57 1 341 1 13 2 72 1 156 3 193 3 210 1 236 6 129 3 239 3 196 1 90 2 67 1 32 1 
56 5 188 1 57 1 124 1 341 2 340 1 145 1 193 5 110 3 196 2 129 30 90 11 132 5 67 14 32 1 95 2 203 5 256 1 36 1 13 16 72 6 156 5 117 1 76 1 118 4 210 5 236 10 364 2 335 3 239 5 18 1 240 3 53 3 167 1 
56 1 203 1 57 1 124 1 341 1 340 1 145 1 72 2 13 3 156 1 193 1 118 1 236 2 43 1 364 1 196 1 239 1 129 6 90 2 132 1 67 3 53 1 167 1 
56 2 57 1 124 1 341 1 340 1 145 1 193 2 110 1 196 1 129 9 90 3 132 1 67 5 203 2 36 1 72 2 13 4 156 2 76 1 118 2 210 1 43 1 236 4 364 1 335 1 239 2 53 1 167 1 
56 4 57 1 124 1 84 1 193 4 110 2 129 14 90 3 92 1 132 2 67 7 203 2 95 2 13 7 72 1 156 4 76 1 360 1 210 2 118 1 43 1 236 8 335 2 239 4 214 1 240 2 53 1 
56 2 57 1 124 1 84 1 193 2 110 2 129 10 90 1 92 1 132 1 67 6 203 2 13 4 72 1 156 2 76 1 360 1 118 1 43 1 236 4 335 2 239 2 214 1 240 1 53 1 
56 1 203 1 57 1 124 1 341 1 340 1 145 1 72 2 13 3 156 1 193 1 118 1 236 2 43 1 364 1 196 1 239 1 129 6 90 2 132 1 67 3 53 1 167 1 
56 2 57 1 124 1 84 1 193 2 110 2 129 13 90 3 92 1 132 2 67 7 95 1 203 2 13 6 72 1 156 2 360 1 210 2 118 1 43 1 236 4 335 2 239 2 214 1 240 2 53 1 
56 3 57 1 124 1 84 1 193 3 110 2 129 11 90 1 92 1 132 1 67 6 203 2 95 1 13 5 72 1 156 3 360 1 76 1 118 1 43 1 236 6 335 2 239 3 214 1 240 1 53 1 
56 3 188 1 57 1 124 1 84 1 193 3 110 2 129 11 90 3 92 1 132 1 67 6 203 2 95 1 13 5 72 2 156 3 360 1 210 1 118 1 43 1 236 6 335 2 239 3 214 1 240 1 53 1 
203 3 352 1 340 1 341 2 145 1 13 4 72 4 210 3 364 2 129 9 196 2 90 7 132 3 67 5 167 1 
56 3 188 1 57 1 124 1 84 1 193 3 110 2 129 11 90 1 92 1 132 1 67 6 203 2 95 1 13 5 72 1 156 3 360 1 118 1 43 1 236 6 335 2 239 3 214 1 240 1 53 1 
345 1 354 1 11 1 136 1 131 1 50 1 86 1 
354 1 11 1 342 1 136 1 331 1 291 1 86 1 345 1 88 1 337 1 131 1 50 1 
83 1 257 1 232 1 319 1 86 2 235 1 362 1 87 1 299 1 61 1 345 1 182 1 348 1 82 1 163 1 131 2 140 1 50 1 
0 1 266 1 3 1 257 2 146 1 362 1 87 1 120 1 61 1 348 1 163 1 82 1 140 1 
87 1 61 1 299 1 257 1 348 1 82 1 318 1 359 1 140 1 209 1 362 1 
83 1 257 1 232 1 319 1 86 2 362 1 87 1 28 1 299 1 61 1 345 1 182 1 348 1 82 1 163 1 131 2 140 1 50 1 
266 1 83 1 319 1 86 2 148 1 28 1 87 1 61 1 345 1 64 1 348 1 89 1 131 2 252 1 257 1 232 2 362 3 78 1 182 1 163 2 82 2 140 1 50 2 
170 1 266 1 83 1 319 1 86 2 148 1 87 2 61 1 345 1 64 1 348 2 89 1 131 2 252 1 257 1 232 2 235 1 362 3 78 1 182 1 163 2 82 2 140 2 50 2 
87 1 294 1 151 1 70 1 317 1 266 1 346 1 348 1 357 1 140 1 362 1 
87 1 294 1 151 1 70 1 317 1 266 1 346 1 348 1 140 1 234 1 362 1 
87 1 61 1 24 1 257 1 348 1 140 1 
0 1 218 1 24 1 3 1 257 3 290 1 146 1 296 1 362 3 87 5 120 1 299 2 61 2 349 1 184 1 348 6 163 1 82 2 20 1 140 6 
56 2 145 1 108 1 193 2 319 1 61 1 65 1 196 1 67 2 203 1 257 1 72 2 13 2 156 2 75 1 163 1 82 1 263 1 167 1 83 1 340 1 341 1 86 2 28 1 87 1 345 1 348 1 129 4 90 2 131 2 132 1 94 1 309 1 232 1 361 2 233 1 362 1 236 4 182 1 364 1 184 1 366 2 239 2 368 1 47 1 140 1 50 1 
294 1 70 1 317 1 143 1 268 1 12 1 247 1 172 1 174 1 234 1 222 1 362 1 87 1 299 1 151 1 211 1 346 1 348 1 224 1 140 1 
24 1 70 1 206 1 257 2 146 1 362 1 87 1 61 1 348 1 163 1 82 1 140 1 
170 1 257 1 318 1 209 1 119 1 362 1 87 4 299 1 61 1 348 4 184 1 82 1 140 4 
0 1 266 1 257 2 362 1 298 1 87 2 120 1 61 1 17 1 348 2 163 1 82 1 140 2 316 1 
87 1 333 1 61 1 299 1 257 1 303 1 348 1 140 1 40 1 168 1 
257 1 101 1 362 1 87 2 61 1 184 1 348 2 349 1 82 1 20 1 140 2 
218 1 266 1 257 2 318 1 296 1 209 1 119 1 362 3 87 4 299 1 61 2 348 5 184 1 82 2 20 1 140 5 
218 1 266 1 257 2 318 1 209 1 119 1 362 3 87 4 299 1 322 1 61 2 348 5 184 1 82 2 20 1 140 5 
336 1 258 2 343 1 68 1 
294 1 351 1 279 1 346 1 336 1 258 2 224 1 343 1 68 1 54 1 
336 1 258 1 343 1 68 1 
351 1 279 1 258 1 
103 1 71 1 359 1 200 1 
103 1 152 1 272 1 71 1 338 1 200 1 260 1 
102 1 265 1 260 1 
10 1 103 1 152 3 272 1 104 2 71 1 162 1 338 1 26 1 175 1 200 1 260 3 
103 1 323 1 152 2 272 1 347 1 71 1 338 1 200 1 260 2 
10 1 272 1 71 1 358 1 260 1 161 1 333 1 152 1 80 1 338 1 168 1 
10 1 152 1 272 1 71 1 338 1 200 1 260 1 
10 1 103 1 152 1 272 1 338 1 200 2 260 1 
10 1 272 2 71 1 260 2 152 2 301 1 338 2 197 1 200 1 52 1 
10 1 272 1 133 1 71 2 358 1 260 3 284 1 103 1 152 3 347 2 338 1 200 1 114 1 
10 1 272 1 71 1 269 1 40 1 260 2 161 1 333 1 103 1 152 2 45 1 347 1 338 1 200 1 168 2 
10 1 272 2 71 2 358 1 260 4 284 1 103 1 152 4 323 1 347 2 338 2 262 1 200 1 
10 1 103 1 152 1 272 1 71 1 338 1 200 1 260 1 
122 1 272 1 71 3 26 1 358 1 260 4 284 1 103 2 152 4 104 1 347 2 162 1 338 1 200 2 
10 1 272 1 71 1 85 1 260 2 152 2 103 1 347 1 338 1 225 1 200 1 201 1 
10 1 103 1 152 3 272 1 104 2 238 1 71 1 162 2 338 1 26 1 200 1 260 3 
135 2 112 1 71 2 22 1 
10 1 152 1 272 1 134 1 338 1 260 1 
10 1 103 1 152 2 272 1 347 1 71 1 338 1 200 1 260 2 114 1 
39 1 
10 1 103 1 152 1 272 1 71 1 338 1 200 1 260 1 
10 1 103 1 152 3 272 1 104 1 347 1 71 1 338 1 200 1 260 3 114 1 
122 1 71 1 358 1 284 1 
71 1 200 1 

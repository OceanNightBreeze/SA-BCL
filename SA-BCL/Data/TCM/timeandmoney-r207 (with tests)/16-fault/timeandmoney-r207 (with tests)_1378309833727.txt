#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 33 182 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 33 182 0 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 225 35 48 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 82 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 225 35 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 225 35 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 33 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (143,165,198,202) (143,165,198,202) 23 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
91 1 198 2 8 1 71 1 101 1 142 1 143 1 202 2 165 3 206 1 283 3 87 1 307 2 
91 1 211 1 96 1 214 1 8 1 101 3 141 1 142 1 145 1 143 6 307 5 66 2 26 1 198 2 314 1 229 2 112 1 71 4 235 1 38 1 165 9 202 2 242 1 85 2 87 2 283 9 206 1 331 2 
91 1 211 1 96 1 214 1 8 1 101 3 141 1 142 1 145 1 143 6 307 5 66 2 26 1 198 2 314 1 229 2 112 1 71 4 235 1 38 1 165 9 202 2 242 1 85 2 87 2 283 9 206 1 331 2 
91 1 211 1 96 1 214 1 8 1 101 4 141 1 142 1 145 1 143 7 307 6 66 2 26 1 198 2 314 1 229 2 112 1 71 5 235 1 38 1 165 10 202 2 242 1 85 2 87 2 283 10 206 1 331 2 
91 1 96 1 214 1 8 1 101 2 141 1 142 1 145 1 143 4 307 4 66 2 26 1 198 2 314 1 229 2 112 1 71 3 235 1 38 1 165 7 202 2 242 1 85 1 87 2 283 7 206 1 331 2 
91 1 66 1 26 1 211 1 198 1 8 1 229 1 71 2 101 1 143 3 202 1 165 4 38 1 85 2 206 1 283 4 307 3 331 1 
91 1 198 1 8 1 112 1 229 1 141 1 202 1 165 2 304 1 206 1 283 2 244 1 87 1 307 1 124 1 331 1 
91 1 49 1 211 1 214 1 8 1 101 3 142 1 143 7 307 5 66 1 26 1 198 2 71 4 229 1 235 1 280 1 165 9 202 2 38 1 85 2 87 1 283 9 206 1 331 1 
91 1 49 1 211 1 214 1 8 1 101 3 142 1 143 7 307 5 66 1 26 1 198 2 71 4 229 1 235 1 280 1 165 9 202 2 38 1 85 2 87 1 283 9 206 1 331 1 
108 1 266 1 46 1 65 1 156 1 70 1 300 1 106 1 122 1 305 1 329 1 226 1 248 1 263 1 
269 1 
156 1 300 2 241 1 269 1 62 1 246 1 139 1 226 2 
46 1 251 2 133 1 210 4 136 1 212 1 177 1 100 1 257 1 106 1 300 5 303 1 305 1 61 1 62 1 226 5 263 1 310 1 152 4 266 1 108 1 265 1 65 1 24 2 155 1 156 2 70 1 269 1 109 1 29 1 231 1 236 1 241 2 122 1 245 1 329 1 246 1 248 1 
269 1 246 1 73 1 
199 2 130 1 269 1 
266 2 108 2 65 2 106 2 70 2 305 1 88 1 263 2 
126 1 2 1 178 1 9 2 140 2 180 1 294 1 57 1 103 1 255 1 297 1 106 2 301 2 261 1 305 1 186 1 263 3 21 1 266 3 108 2 190 1 65 2 195 1 27 2 70 2 228 1 272 1 75 1 161 1 116 1 78 1 36 1 238 1 88 1 208 1 44 1 172 2 
266 1 108 1 46 1 65 1 106 1 70 1 122 1 305 1 248 1 263 1 
264 1 22 1 266 1 191 1 46 1 70 1 269 1 59 1 300 1 15 1 246 1 262 1 226 1 263 1 
264 1 108 1 266 1 65 1 191 1 46 1 70 1 269 1 106 1 300 2 15 1 246 1 262 1 226 2 263 1 
156 1 300 1 241 1 72 1 226 1 
156 1 300 2 241 1 69 1 269 1 62 1 246 1 226 2 
300 1 241 1 226 1 
266 2 108 1 65 1 70 2 184 1 106 1 168 1 88 2 263 2 
285 1 259 1 137 1 
21 1 266 1 195 1 27 1 9 1 140 1 116 1 294 1 161 1 78 1 103 1 297 1 119 1 186 1 88 1 263 1 
21 1 266 2 65 1 195 1 27 1 70 1 137 1 9 1 140 1 161 1 116 1 294 1 78 1 103 1 220 1 297 1 106 1 186 1 247 1 263 2 
88 1 73 1 
220 1 108 1 266 3 65 3 106 3 70 3 88 1 263 3 
266 1 46 1 65 1 106 1 70 1 248 1 263 1 
266 1 108 1 46 1 65 1 184 1 106 1 70 1 168 1 263 1 
126 1 46 1 286 1 180 1 9 1 140 1 294 1 57 1 103 1 56 1 220 1 297 1 106 3 300 1 301 1 186 1 305 1 15 1 262 1 226 1 263 4 21 1 264 1 108 2 266 4 190 1 65 3 191 1 195 1 27 1 70 3 228 1 75 1 161 1 116 1 78 1 36 1 238 1 168 1 88 1 208 1 247 1 44 1 172 2 
220 1 22 1 266 2 65 1 106 1 70 2 88 1 218 1 263 2 
264 1 108 1 266 3 46 1 65 3 191 1 70 3 269 1 270 1 220 2 56 1 300 1 106 3 168 1 15 1 262 1 247 1 226 1 263 3 
108 1 266 2 65 2 70 2 137 1 220 1 259 1 106 2 168 1 263 2 
21 1 266 1 195 1 27 1 9 1 140 1 116 1 294 1 161 1 78 1 103 1 297 1 186 1 88 1 263 1 
21 1 266 1 195 1 27 1 9 1 140 1 116 1 161 1 103 1 297 1 240 1 204 1 186 1 88 1 263 1 
126 1 2 2 285 2 3 1 251 1 175 1 137 2 57 1 259 2 301 4 306 1 63 1 24 1 190 2 30 1 75 1 36 1 275 1 238 1 203 1 37 1 208 1 330 1 172 2 
266 1 46 1 191 1 65 1 5 1 106 1 70 1 263 1 
22 1 266 5 108 1 65 4 70 5 218 1 220 2 80 1 106 4 168 1 88 1 247 1 170 1 263 5 
266 2 46 1 65 2 5 1 106 2 70 2 248 1 263 2 
146 1 150 1 77 1 
173 1 120 1 290 1 150 2 216 1 77 2 
150 1 77 1 
150 1 77 1 
173 1 216 1 
173 1 216 1 
173 1 216 1 
187 1 150 1 77 1 
187 1 150 1 77 1 
187 1 150 1 77 1 
45 1 150 1 77 1 
45 1 150 1 77 1 
45 1 150 1 77 1 
174 1 182 1 317 1 150 1 33 1 77 1 
0 1 174 1 182 1 300 1 317 1 150 1 33 1 226 1 77 1 
66 1 131 1 271 2 304 1 229 2 
66 1 229 1 331 1 
304 1 229 1 331 1 
66 2 131 1 81 1 271 1 304 1 229 3 
66 1 131 1 271 1 304 1 229 2 309 1 
156 3 269 1 177 1 32 1 179 1 296 1 300 4 241 1 123 1 62 1 246 1 226 4 284 1 
156 3 6 1 177 1 269 1 291 1 72 1 296 1 298 1 300 4 241 2 123 1 62 1 246 1 226 4 
46 1 130 1 251 1 210 1 100 1 179 1 257 1 106 1 300 3 305 1 226 3 263 1 152 2 266 1 108 1 265 1 65 1 67 1 156 2 155 1 70 1 269 2 32 1 318 1 76 1 199 2 275 1 118 1 122 1 123 1 329 1 246 1 328 1 284 1 248 1 
251 2 100 1 179 1 257 1 106 1 263 1 265 1 108 1 266 1 196 1 269 3 32 1 199 4 275 2 118 2 122 1 123 1 284 2 46 1 130 2 210 1 289 1 300 4 305 1 226 4 152 4 65 1 67 2 156 3 155 1 70 1 318 1 76 2 325 1 328 2 246 1 329 1 248 1 
258 1 
103 1 197 1 73 1 
103 1 113 1 
103 1 161 1 
166 1 
21 1 103 1 161 1 
103 1 43 1 
190 3 24 1 2 2 251 1 175 3 28 1 231 1 181 1 55 1 162 1 239 1 223 1 301 5 121 2 148 1 37 4 61 1 310 1 
190 1 175 1 28 1 138 1 162 2 239 1 121 1 301 1 37 1 
126 1 2 4 251 2 133 1 175 2 181 1 55 1 57 1 223 1 301 9 61 1 310 1 24 2 190 5 231 1 75 1 34 1 162 1 36 1 239 1 121 1 37 3 40 1 172 2 
190 3 24 1 2 2 251 1 175 3 28 1 231 1 181 1 55 1 162 1 239 1 223 1 301 5 121 2 37 4 61 1 310 1 
24 1 2 2 190 4 251 1 175 3 28 1 231 1 181 1 55 1 162 1 239 1 223 1 121 2 301 6 37 4 61 1 310 1 
193 1 27 1 198 1 213 1 99 2 31 2 273 1 9 1 140 1 161 1 116 1 234 2 103 1 104 1 163 1 297 1 320 1 202 1 165 1 186 1 87 2 283 1 19 1 
127 1 93 1 99 1 140 1 9 1 297 1 60 1 186 1 304 1 66 1 27 1 198 1 31 1 229 2 234 1 233 1 81 1 324 1 165 1 202 1 205 1 283 1 206 1 87 1 42 1 331 1 
91 1 127 1 93 1 8 1 99 1 140 1 9 1 297 1 143 1 60 1 186 1 304 1 307 1 66 1 27 1 198 1 31 1 111 1 229 2 234 1 233 1 81 1 165 2 202 1 205 1 283 2 206 1 87 1 42 1 331 1 
91 1 127 1 8 1 99 1 140 1 9 1 297 1 143 2 60 1 186 1 304 1 307 1 66 1 27 1 198 1 31 1 229 2 234 1 233 1 320 1 81 1 324 1 165 3 202 1 326 1 205 1 283 3 87 1 42 1 331 1 
91 1 8 1 99 1 140 1 9 1 297 1 143 2 60 1 186 1 304 1 307 1 66 1 27 1 31 1 229 2 234 1 81 1 324 1 165 2 326 1 205 1 87 1 283 2 42 1 331 1 
110 1 
300 1 27 1 177 1 140 1 9 1 226 1 116 1 
249 1 46 1 252 1 215 1 139 1 59 1 300 3 107 1 62 1 15 1 262 1 226 3 263 1 264 1 266 1 22 1 191 1 154 1 70 1 114 1 79 2 241 2 
264 1 249 1 90 1 22 1 266 1 46 1 191 1 252 1 70 1 269 1 215 1 139 1 114 1 79 3 59 1 300 3 241 1 107 1 62 1 15 1 246 1 262 1 226 3 263 1 
249 1 90 1 46 1 252 1 215 1 139 1 102 1 59 1 300 3 107 1 62 1 15 1 262 1 226 3 263 1 264 1 266 1 22 1 191 1 154 1 70 1 269 1 114 1 79 3 241 2 246 1 
249 1 46 1 252 1 48 1 177 1 215 1 139 1 102 2 59 1 300 3 225 1 107 1 62 1 15 1 262 1 226 3 263 1 264 1 22 1 266 1 191 1 154 2 70 1 313 1 114 1 35 1 79 2 241 3 
264 1 249 1 22 1 266 1 46 1 191 1 252 1 70 1 177 1 215 1 114 1 79 2 59 1 300 2 107 1 15 1 262 1 226 2 263 1 
264 1 249 1 22 1 266 1 46 1 191 1 252 1 70 1 177 1 313 1 215 1 114 1 79 2 59 1 300 2 225 1 107 1 15 1 262 1 226 2 263 1 
264 1 249 1 22 1 266 1 46 1 191 1 252 1 70 1 177 1 313 1 215 1 114 1 79 2 59 1 300 2 225 1 107 1 15 1 262 1 226 2 263 1 
264 1 249 1 22 1 266 1 46 1 191 1 252 1 70 1 177 1 215 1 114 1 79 2 59 1 256 1 82 1 300 2 107 1 15 1 262 1 226 2 263 1 
249 1 90 1 46 1 252 1 177 1 215 1 102 1 59 1 300 2 225 1 107 1 15 1 262 1 226 2 263 1 264 1 266 1 22 1 191 1 154 1 70 1 313 1 114 1 79 3 35 1 241 1 
249 1 90 1 46 1 252 1 177 1 215 1 102 1 59 1 300 2 225 1 107 1 15 1 262 1 226 2 263 1 264 1 266 1 22 1 191 1 154 1 70 1 313 1 114 1 79 3 35 1 241 1 
264 1 249 1 22 1 266 1 46 1 191 1 252 1 70 1 177 1 215 1 114 1 79 2 59 1 300 2 107 1 15 1 262 1 226 2 263 1 
126 2 92 1 2 1 47 1 140 8 9 7 220 1 103 3 57 2 104 1 255 1 297 2 105 1 106 1 301 2 302 1 186 2 188 1 263 1 266 1 65 1 190 1 193 1 194 1 27 8 70 1 111 1 30 1 272 2 230 1 116 2 75 2 161 2 36 2 238 2 324 1 208 2 172 4 44 1 
126 1 2 1 251 1 7 1 57 1 106 1 301 1 263 1 108 1 266 1 65 1 70 1 75 1 36 1 117 1 275 1 238 1 168 1 208 1 328 1 172 2 
126 1 2 2 285 1 251 1 175 2 137 1 55 1 57 1 259 1 223 1 301 5 61 1 310 1 24 1 190 3 30 1 73 1 231 1 75 1 36 1 238 1 121 1 37 2 208 1 88 1 172 2 
126 2 2 8 285 11 251 2 132 3 137 11 181 1 57 2 255 1 13 1 259 3 301 14 147 1 24 1 190 6 75 2 36 2 117 1 275 2 238 1 322 1 203 1 37 1 39 1 243 1 88 1 208 2 328 2 44 1 332 1 172 4 89 3 
126 1 2 1 140 1 9 1 53 1 294 1 103 1 57 1 220 1 255 1 297 1 144 1 259 1 106 1 301 2 186 1 263 2 21 1 153 1 266 2 65 1 190 1 195 1 27 1 70 1 161 1 116 1 75 1 78 1 117 1 36 1 119 1 238 1 88 1 208 1 247 1 172 2 44 1 
2 9 250 2 4 2 251 3 175 2 97 2 9 1 180 2 103 2 255 1 106 1 259 5 14 1 186 2 263 3 21 2 266 3 190 8 24 2 195 2 27 1 116 1 36 3 117 1 275 2 276 1 121 1 37 2 203 1 208 3 44 1 126 3 285 6 137 6 140 1 294 2 55 1 220 1 57 3 297 2 223 1 301 17 61 1 310 1 65 1 70 1 231 1 75 3 161 2 78 2 238 3 169 2 88 1 247 1 328 2 172 6 
126 1 2 2 285 1 251 1 137 1 30 1 181 1 75 1 57 1 36 1 275 1 238 1 259 1 301 2 37 1 208 1 172 2 63 1 
126 1 24 1 190 2 285 1 175 1 137 1 30 1 75 1 57 1 36 1 238 1 259 1 301 2 37 1 203 1 306 1 208 1 172 2 
126 1 2 2 285 1 251 1 137 1 30 1 75 1 57 1 36 1 275 1 238 1 259 1 301 2 208 1 328 1 172 2 
126 1 2 2 285 1 251 1 137 1 181 1 75 1 57 1 36 1 275 1 238 1 259 1 301 2 37 1 302 1 208 1 172 2 63 1 
126 1 24 1 190 2 285 1 175 1 137 1 75 1 57 1 36 1 238 1 259 1 301 2 37 1 302 1 203 1 306 1 208 1 172 2 
126 1 2 2 285 1 251 1 137 1 75 1 57 1 36 1 275 1 238 1 259 1 301 2 302 1 208 1 328 1 172 2 
126 1 2 2 285 1 251 1 137 1 75 1 57 1 36 1 275 1 238 1 259 1 301 2 208 1 328 1 172 2 
126 1 2 1 180 1 140 1 9 1 294 1 103 1 57 1 255 1 297 1 301 2 186 1 263 1 21 1 266 1 190 1 195 1 27 1 161 1 116 1 75 1 78 1 36 1 238 1 88 1 208 1 172 2 44 1 
126 1 2 1 140 1 9 1 103 1 57 1 255 1 297 1 301 2 186 1 263 1 21 1 266 1 190 1 195 1 27 1 161 1 116 1 75 1 36 1 238 1 240 1 204 1 282 1 88 1 208 1 172 2 44 1 
126 1 2 2 285 1 251 1 137 1 75 1 57 1 117 1 36 1 275 1 238 1 259 1 301 2 208 1 328 1 172 2 
126 1 2 2 285 1 251 1 137 1 180 1 140 1 9 1 294 1 103 1 57 1 297 1 259 1 301 2 186 1 263 1 21 1 266 1 195 1 27 1 111 1 161 1 75 1 78 1 275 1 36 1 238 1 169 1 208 1 328 1 172 2 
126 1 2 2 285 1 251 1 137 1 57 1 106 1 301 3 18 1 263 1 108 1 266 1 190 1 24 1 65 1 70 1 75 1 36 1 117 1 275 1 238 1 168 1 203 1 208 1 328 1 172 2 
126 2 2 21 94 1 251 7 132 4 134 1 98 1 10 1 54 1 217 1 181 5 57 2 13 2 299 1 301 30 147 2 227 1 24 1 190 9 159 1 75 2 34 1 36 2 275 7 278 2 164 1 83 1 201 1 203 1 37 5 39 2 41 1 328 7 172 4 89 4 
126 1 2 9 94 1 251 2 132 2 134 1 98 2 10 1 217 1 57 1 299 1 301 16 227 2 24 1 190 7 75 1 34 1 36 1 275 2 277 1 278 2 164 1 201 1 83 1 203 1 39 2 41 1 328 2 172 2 89 2 
126 2 2 22 94 1 251 7 132 4 134 1 98 1 10 1 54 1 217 1 181 5 57 2 13 2 299 1 301 34 147 2 227 1 24 2 190 12 75 2 34 1 36 2 275 7 277 1 278 3 164 1 83 1 201 1 203 2 37 5 39 2 41 1 328 7 172 4 89 4 
126 2 2 22 94 1 251 7 132 4 134 1 98 1 10 1 54 1 217 1 181 5 57 2 13 2 299 1 301 34 147 2 227 1 24 2 190 12 75 2 34 1 36 2 275 7 277 1 278 3 164 1 83 1 201 1 203 2 37 5 39 2 41 1 328 7 172 4 89 4 
126 1 2 24 94 1 251 8 132 4 134 1 175 2 98 1 10 1 217 1 181 6 55 1 57 1 13 2 299 1 223 1 301 39 147 2 61 1 310 1 227 1 24 3 190 15 231 1 75 1 34 1 36 1 275 7 277 1 278 3 164 1 121 1 83 1 201 1 203 2 37 8 39 2 41 1 328 7 172 2 89 4 
126 1 2 1 287 1 47 1 140 2 9 2 103 1 57 1 255 1 297 1 301 2 185 1 186 1 16 1 263 2 266 2 190 1 194 1 27 2 70 2 272 2 74 1 161 1 75 1 117 1 36 1 238 1 208 1 207 1 172 2 44 1 
193 1 267 1 27 1 99 1 273 1 9 1 140 1 161 1 116 1 219 1 103 1 104 1 297 1 186 1 
127 1 66 1 27 1 176 1 229 2 99 1 9 1 140 1 219 1 297 1 81 1 324 1 84 1 304 1 186 1 205 1 42 1 331 1 
127 1 66 1 27 2 176 1 229 2 99 1 111 1 9 2 140 2 219 1 297 1 81 1 324 1 84 1 304 1 186 1 205 1 42 1 331 1 
127 1 66 1 27 1 268 1 176 1 229 2 99 1 9 1 140 1 297 1 81 1 324 1 304 1 205 1 186 1 42 1 331 1 
64 1 
236 1 177 1 
199 2 152 2 275 1 67 1 130 1 118 1 251 1 269 1 328 1 
300 1 241 1 269 1 62 1 246 1 226 1 
68 1 27 1 177 1 140 1 9 1 116 1 
152 1 236 1 210 1 269 1 109 1 246 1 73 1 
177 1 
27 1 177 1 140 1 9 1 116 1 
177 1 
300 1 177 1 313 1 226 1 
126 1 140 1 9 1 180 1 294 1 103 1 57 1 297 1 106 2 301 1 305 1 186 1 263 3 21 1 266 3 108 2 190 1 65 2 195 1 27 1 70 2 228 1 75 1 116 1 161 1 78 1 36 1 238 1 88 1 208 1 44 1 172 2 
177 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
317 1 33 1 
150 1 77 1 
2 4 24 2 190 4 251 2 133 1 175 1 231 1 181 1 301 8 37 2 61 1 310 1 
126 1 57 1 2 2 275 1 36 1 251 1 301 2 37 1 181 1 172 2 75 1 34 1 
126 1 190 2 24 1 2 2 251 1 34 1 75 1 181 1 57 1 36 1 275 1 301 4 203 1 37 1 328 1 172 2 
126 3 192 1 190 2 2 1 175 1 293 1 231 1 54 1 34 1 75 3 181 1 57 3 36 3 301 3 37 2 61 1 172 6 
126 5 1 1 2 19 251 6 132 4 175 4 293 1 54 1 181 6 55 1 57 5 13 1 183 1 223 1 301 38 147 1 61 3 310 2 192 2 190 19 24 5 231 3 75 5 34 1 36 5 275 4 121 1 167 1 37 10 203 3 86 1 39 1 328 4 172 10 89 4 
126 2 24 1 190 4 2 3 192 1 251 1 175 2 231 1 181 1 75 2 55 1 57 2 36 2 223 1 121 1 301 7 37 3 61 1 310 1 172 4 
190 3 2 2 24 1 251 1 175 2 73 1 231 1 55 1 223 1 121 1 301 5 37 2 61 1 310 1 
126 1 1 1 2 2 251 1 75 1 57 1 36 1 275 1 301 2 328 1 172 2 
190 2 2 6 251 2 132 2 181 2 13 1 275 2 147 1 301 8 37 2 39 1 328 2 89 2 
126 2 2 13 251 4 133 1 132 2 175 5 293 1 181 5 55 1 57 2 13 1 223 1 301 25 147 1 61 4 310 2 24 2 190 12 192 2 231 4 75 2 275 2 36 2 322 1 121 1 37 10 328 2 89 2 172 4 
190 1 132 1 301 1 
2 1 301 1 89 1 
190 1 2 3 250 1 251 1 181 1 275 1 301 4 37 1 328 1 
126 1 2 6 190 2 94 1 251 2 132 1 134 1 10 1 181 1 34 1 75 1 57 1 275 2 36 1 164 1 83 1 301 8 37 1 39 1 328 2 172 2 89 1 
2 3 24 1 190 3 251 1 175 1 231 1 181 1 301 6 37 2 61 1 310 1 
126 1 2 1 190 2 192 1 175 1 293 1 231 1 181 1 75 1 55 1 57 1 36 1 223 1 301 3 37 2 61 1 172 2 
126 1 2 3 251 1 132 1 175 2 55 1 57 1 223 1 301 7 61 1 310 1 24 1 190 4 231 1 75 1 34 1 36 1 121 1 83 1 37 2 39 1 89 1 172 2 
126 2 1 1 2 11 94 1 251 4 132 2 134 1 10 1 181 2 57 2 13 1 301 20 147 1 190 9 24 3 34 1 75 2 36 2 275 4 164 1 83 1 37 2 203 3 39 1 328 4 172 4 89 2 
126 2 1 1 2 6 251 2 94 1 132 1 134 1 10 1 181 1 57 2 301 8 190 2 75 2 34 1 36 2 275 2 164 1 83 1 37 1 39 1 328 2 89 1 172 4 
126 2 1 1 2 6 251 2 94 1 132 1 134 1 10 1 57 2 301 10 190 4 24 1 75 2 34 1 36 2 275 2 164 1 83 1 203 1 39 1 328 2 89 1 172 4 
126 1 2 3 251 1 132 1 175 2 55 1 57 1 223 1 301 7 61 1 310 1 24 1 190 4 231 1 75 1 34 1 36 1 121 1 83 1 37 2 39 1 89 1 172 2 
126 1 2 6 190 2 94 1 251 2 132 1 134 1 10 1 181 1 34 1 75 1 57 1 275 2 36 1 164 1 83 1 301 8 37 1 39 1 328 2 172 2 89 1 
126 2 1 1 2 6 251 2 94 1 132 1 134 1 10 1 57 2 301 10 190 4 24 1 75 2 34 1 36 2 275 2 164 1 83 1 203 1 39 1 328 2 172 4 89 1 
126 2 2 6 251 2 94 1 132 1 134 1 10 1 54 1 181 1 57 2 301 10 24 1 190 4 34 1 75 2 36 2 275 2 164 1 83 1 37 1 203 1 39 1 328 2 172 4 89 1 
190 4 24 1 2 3 251 1 175 3 231 3 181 3 55 2 223 1 301 7 37 6 61 3 310 1 
126 2 2 6 251 2 94 1 132 1 134 1 10 1 54 1 57 2 301 10 190 4 24 1 34 1 75 2 36 2 275 2 164 1 83 1 203 1 39 1 328 2 172 4 89 1 
266 1 22 1 311 1 70 1 88 1 263 1 218 1 
22 1 266 1 311 1 288 1 70 1 315 1 218 1 222 1 279 1 17 1 88 1 263 1 
193 1 27 4 253 1 316 1 111 1 9 4 140 4 116 1 161 1 104 1 103 1 297 1 186 1 
21 1 129 1 157 1 27 2 160 1 9 2 140 2 161 1 103 1 297 1 224 1 281 1 186 2 20 1 
297 1 27 1 304 1 186 1 205 1 229 1 140 1 9 1 331 1 116 1 
103 1 297 1 47 1 324 1 27 2 186 1 111 1 74 1 140 2 9 2 161 1 
92 1 193 1 27 5 47 1 253 1 111 1 9 4 140 5 116 1 161 2 104 1 103 3 297 2 224 1 186 2 188 1 
92 1 193 1 27 5 47 1 253 1 111 1 9 4 140 5 232 1 116 1 161 2 104 1 103 3 297 2 224 1 186 2 
103 1 104 1 297 1 193 1 27 1 186 1 73 1 140 1 9 1 161 1 116 1 
21 1 266 2 65 1 195 1 27 1 70 1 9 1 140 1 161 1 116 1 78 1 103 1 220 1 297 1 106 1 186 1 88 1 263 2 
21 2 266 2 46 1 191 1 65 1 195 1 27 1 70 2 254 1 9 1 140 1 161 2 78 1 103 3 220 1 297 1 106 2 224 1 186 1 15 1 88 1 43 1 263 2 
21 2 266 2 46 1 191 1 65 1 195 1 27 2 70 2 316 1 254 1 9 2 140 2 161 2 103 3 220 1 297 1 106 2 224 1 204 1 186 1 15 1 88 1 43 1 263 2 
21 1 128 1 27 3 197 1 269 1 316 1 113 1 254 1 9 3 140 3 116 1 161 1 274 1 103 4 297 1 300 2 241 1 224 1 186 1 246 1 262 1 226 2 43 1 
21 1 27 3 197 1 269 1 51 1 316 1 113 1 254 1 9 3 140 3 116 1 161 1 103 4 297 1 300 2 241 1 224 1 186 1 246 1 262 1 226 2 43 1 
297 1 27 1 186 1 230 1 140 1 9 1 
21 1 92 1 157 1 158 1 47 1 27 7 272 1 111 1 230 1 115 1 9 6 140 7 116 2 161 2 103 3 297 2 105 1 324 1 186 3 20 1 188 1 
2 2 4 1 251 1 175 2 180 1 9 1 103 1 259 1 106 1 186 1 263 2 21 1 266 2 24 1 190 3 195 1 27 1 111 1 36 2 117 1 121 1 37 2 208 2 126 2 285 1 287 1 137 1 140 1 294 1 55 1 220 1 57 2 297 1 223 1 301 5 61 1 310 1 65 1 70 1 231 1 75 2 161 1 78 1 238 2 169 1 88 1 172 4 
156 1 68 1 27 1 135 1 197 1 51 1 177 2 113 1 9 1 140 1 116 1 103 2 58 1 300 3 241 2 62 1 262 1 226 3 209 1 
21 1 95 1 158 1 27 1 197 1 230 1 9 1 140 1 161 1 103 1 297 1 258 1 186 1 
21 1 266 2 65 1 195 1 27 1 70 1 9 1 140 1 161 1 116 1 103 1 220 1 297 1 106 1 204 1 186 1 88 1 263 2 
21 1 157 1 158 1 27 1 115 1 9 1 140 1 161 1 103 1 297 1 224 1 186 2 20 1 
11 1 221 1 321 1 88 1 308 1 
46 1 50 1 292 1 300 1 106 1 305 1 226 1 263 1 108 1 266 1 65 1 25 1 156 1 70 1 269 1 321 1 122 1 246 1 329 1 248 1 
266 1 70 1 11 1 321 1 185 1 16 1 207 1 308 1 263 1 
25 1 321 1 50 1 
91 1 165 1 202 1 198 1 8 1 283 1 206 1 307 1 
91 2 198 1 112 1 8 2 71 1 101 1 200 1 143 2 323 1 165 4 202 1 283 4 307 3 171 1 
91 1 143 1 49 1 312 1 165 2 202 1 198 1 8 1 151 1 283 2 206 1 307 1 
91 1 200 2 323 1 165 3 202 1 198 1 8 1 112 2 283 3 206 1 307 1 125 1 
295 1 260 1 52 2 307 2 
189 1 165 1 202 1 198 1 283 1 206 1 
91 1 143 1 165 2 202 1 198 1 214 1 8 1 283 2 206 1 307 1 
319 1 
91 1 165 1 202 1 198 1 8 1 283 1 206 1 307 1 
91 1 8 1 307 1 73 1 
91 1 165 1 202 1 198 1 8 1 283 1 307 1 
87 1 31 1 283 1 
91 1 198 1 112 2 8 1 200 1 323 1 202 1 165 3 327 1 206 1 283 3 307 1 
91 1 143 1 165 2 202 1 198 1 85 1 8 1 283 2 307 1 
66 1 38 1 165 1 202 1 198 1 229 1 71 1 283 1 206 1 307 1 331 1 
91 1 165 1 202 1 198 1 283 1 206 1 307 1 
91 2 165 1 202 1 198 1 8 1 283 1 206 1 
91 1 198 2 12 1 237 1 202 2 165 2 149 1 206 1 283 2 307 1 
91 1 198 1 214 1 8 1 71 1 101 1 235 1 143 2 202 1 165 3 206 1 283 3 307 2 
23 1 143 1 165 2 202 1 198 1 304 1 283 1 206 1 229 1 
91 1 198 2 211 1 8 1 71 1 101 1 143 2 202 2 165 4 85 1 206 1 283 4 307 2 
91 1 143 1 165 3 202 1 198 1 214 1 8 1 112 1 283 3 206 1 307 1 
71 1 307 1 171 1 101 1 
91 1 307 1 

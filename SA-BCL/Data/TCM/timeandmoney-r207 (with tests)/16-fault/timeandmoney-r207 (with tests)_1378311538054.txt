#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (33,50) 164 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (33,50) 164 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (25,122) 339 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (194,261) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (92,117,255) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (194,261) (194,261) 299 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 198 139 101 259 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 291 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 328 176 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (25,122) (25,122) (143,244) 310 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (25,122) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (25,122) (25,122) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 193 242 144 155 62 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 193 242 144 155 62 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 193 242 144 155 62 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (194,261) (194,261) 299 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 323 165 31 85 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (25,122) 339 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 193 242 144 155 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 193 242 144 155 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 193 242 144 155 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 53 (96,199) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 53 (96,199) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 53 (8,238) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (194,261) (194,261) 299 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 53 (8,238) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (194,261) (194,261) 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
37 1 204 1 110 9 68 1 208 1 91 1 114 9 272 1 47 1 166 6 212 1 75 2 23 2 276 2 50 1 215 1 29 1 97 2 192 2 98 2 297 4 345 1 32 3 33 1 57 1 12 1 322 1 303 2 
37 1 204 1 110 9 68 1 208 1 91 1 114 9 272 1 47 1 166 6 212 1 75 2 23 2 276 2 50 1 215 1 97 2 29 1 192 2 98 2 297 4 345 1 32 3 33 1 57 1 12 1 322 1 303 2 
37 1 204 1 110 10 68 1 208 1 91 1 114 10 272 1 47 1 166 7 212 1 75 2 23 2 276 2 50 1 215 1 97 2 29 1 192 2 98 2 297 5 345 1 32 4 33 1 57 1 12 1 322 1 303 2 
37 1 204 1 110 7 68 1 91 1 114 7 272 1 47 1 166 4 212 1 75 2 23 2 276 2 50 1 215 1 97 2 29 1 192 2 98 1 297 3 345 1 32 2 33 1 57 1 12 1 322 1 303 2 
204 1 110 4 68 1 98 2 208 1 297 2 91 1 114 4 32 1 47 1 166 3 322 1 23 1 276 1 303 1 215 1 97 1 192 1 
39 1 110 2 68 1 91 1 114 2 265 1 142 1 47 1 12 1 322 1 23 1 75 1 276 1 303 1 192 1 29 1 
110 3 68 1 297 1 91 1 114 3 32 1 47 1 33 1 166 1 322 1 23 2 75 1 276 2 
164 1 110 1 68 1 23 1 276 1 114 1 33 1 
164 1 110 1 68 1 23 1 276 1 114 1 33 1 
332 1 287 1 291 1 
198 1 
87 2 76 2 352 1 
87 1 31 1 207 1 245 1 308 1 165 2 323 2 167 2 76 1 122 1 352 1 339 1 
87 1 76 1 352 1 261 1 
227 1 312 1 343 1 257 1 264 1 69 1 92 1 332 1 321 1 117 1 334 1 121 1 287 1 255 1 
87 1 92 1 76 1 
284 1 334 1 157 1 150 1 255 1 
87 1 194 1 157 1 150 1 261 1 332 1 334 2 76 1 336 1 286 1 287 1 352 1 255 2 
334 1 157 1 255 1 
87 1 194 1 334 1 76 1 150 1 352 1 255 1 261 1 
287 1 
87 1 194 1 157 1 150 1 230 1 261 1 332 1 334 2 76 1 286 1 287 1 352 1 255 2 
87 1 88 1 269 1 157 2 156 1 329 1 261 1 288 2 332 2 49 1 334 5 168 2 233 1 76 1 123 1 235 2 148 1 194 1 55 2 150 2 129 1 299 1 181 1 131 3 13 4 183 2 286 1 287 2 352 1 135 1 255 5 
291 1 
87 1 312 1 263 1 264 1 222 1 11 1 321 1 267 1 121 1 76 1 
165 1 323 1 31 1 80 1 167 1 
87 1 76 3 337 1 
76 1 
87 1 263 1 76 1 11 1 
87 1 80 1 76 1 11 1 
312 1 7 1 264 1 69 1 222 1 321 1 121 1 76 1 337 1 
80 1 
87 1 76 1 11 1 
165 1 323 1 31 1 167 1 
165 1 323 1 31 1 167 1 
311 1 102 1 285 2 104 1 81 1 280 1 151 1 71 1 
35 1 76 1 
87 1 312 1 7 1 80 1 264 1 69 1 229 1 11 1 222 1 321 1 76 3 121 1 337 1 327 1 
76 1 
324 1 273 1 
324 1 273 1 
247 1 324 1 203 1 273 1 
247 1 324 1 203 1 273 1 
247 1 203 1 
302 1 324 1 273 1 
302 1 324 1 273 1 
302 1 324 1 273 1 
89 1 247 1 324 2 203 1 221 1 273 2 
324 1 84 1 273 1 
324 1 128 1 273 1 
324 1 128 1 273 1 
324 1 128 1 273 1 
305 2 111 1 240 1 316 1 42 1 140 2 282 2 221 1 273 2 348 2 187 1 63 2 334 2 189 1 324 2 24 1 249 3 287 1 255 2 
305 1 316 1 186 1 140 1 141 1 306 1 282 1 273 1 213 1 34 1 224 1 334 1 63 1 324 1 249 1 190 1 76 2 84 1 255 1 
303 1 192 1 97 1 
303 1 265 1 192 1 
146 1 14 1 45 1 265 1 97 2 192 3 
146 1 14 1 64 1 265 1 97 1 192 2 
146 1 14 2 265 1 97 1 192 2 
87 1 269 1 156 1 157 1 306 1 288 1 261 1 262 1 332 1 334 5 290 2 76 1 235 1 173 1 193 1 194 1 54 2 55 1 127 1 242 1 150 4 219 1 198 4 61 2 248 1 225 2 131 2 13 3 183 1 133 1 286 1 287 3 352 1 255 5 
87 1 269 1 157 3 156 1 306 1 288 1 261 1 262 1 74 2 332 1 334 5 290 2 76 1 235 1 173 1 193 1 194 1 54 2 55 1 127 1 242 1 150 4 220 1 198 4 284 2 61 2 131 2 13 3 183 1 133 1 286 1 287 3 351 1 352 1 255 5 
87 1 269 1 306 1 261 1 288 1 332 1 262 1 334 3 76 1 290 2 235 1 148 1 193 1 194 1 54 2 55 1 127 1 242 1 150 2 219 1 198 4 248 1 61 2 225 1 131 2 13 3 183 1 133 1 287 3 352 1 255 3 
269 1 18 1 306 1 288 1 262 1 334 2 290 2 235 1 148 1 193 1 54 2 55 1 127 1 242 1 150 1 219 1 198 4 61 2 248 1 225 1 131 2 13 3 183 1 133 1 287 2 255 2 
30 1 118 1 291 1 
30 1 191 1 
174 1 
179 1 30 1 
179 1 30 3 118 2 113 1 169 1 2 1 
179 1 30 1 2 1 
109 1 30 1 
269 1 6 3 344 1 19 2 196 1 115 7 260 2 73 1 275 4 301 1 49 1 119 1 183 1 94 3 233 1 134 1 123 1 
269 1 6 3 344 1 19 2 196 1 115 7 260 2 73 1 275 4 301 1 49 1 119 1 183 1 94 3 233 1 134 1 123 1 
269 1 6 3 344 1 206 1 19 2 196 1 115 7 260 2 73 1 275 4 301 1 49 1 119 1 183 1 94 3 233 1 134 1 123 1 
269 4 19 5 115 31 260 3 163 1 72 1 73 5 275 16 49 2 309 1 119 2 233 2 94 10 123 1 311 1 292 4 193 3 124 1 6 15 344 2 296 1 81 1 280 1 242 3 127 3 196 1 151 1 10 1 56 3 301 1 285 2 183 4 134 1 36 1 
269 1 19 3 115 9 260 2 73 1 275 5 49 1 119 1 94 4 233 1 123 1 311 2 6 4 216 1 295 1 344 1 81 2 280 2 196 1 151 2 301 1 285 4 183 1 36 1 
110 2 68 1 158 1 91 1 45 1 114 2 47 1 165 1 166 1 274 1 23 1 75 1 276 1 167 1 27 1 97 1 192 2 9 1 177 1 265 1 59 1 300 1 103 1 320 1 322 1 323 1 303 1 65 1 252 1 326 1 
256 1 110 3 270 1 158 1 91 1 45 1 114 3 47 1 165 1 166 2 274 1 23 1 75 1 276 1 167 1 27 1 97 1 192 2 9 1 265 1 59 1 300 1 103 1 320 1 322 1 323 1 303 1 182 1 65 1 326 1 
110 2 270 1 158 1 91 1 45 1 114 2 47 1 165 1 166 2 274 1 75 1 167 1 27 1 192 2 97 1 9 1 265 1 59 1 300 1 320 1 322 1 323 1 303 1 182 1 65 1 
256 1 110 1 114 1 165 1 3 1 274 1 93 1 23 1 75 2 276 1 167 1 27 2 95 1 338 1 30 1 31 1 59 2 320 1 60 1 179 1 323 1 65 2 108 1 
110 1 68 1 270 1 158 1 45 1 114 1 165 1 274 1 23 1 75 1 276 1 167 1 27 1 97 1 192 2 9 1 177 1 265 1 59 1 300 1 103 1 320 1 323 1 303 1 65 1 326 1 
283 1 
86 1 156 1 157 2 2 1 288 1 165 2 3 1 274 2 334 2 167 2 95 1 235 1 293 1 30 2 31 2 55 1 218 1 320 3 179 2 323 2 131 1 13 1 133 1 251 1 286 1 106 1 85 1 353 1 255 2 
227 1 257 1 184 1 157 2 69 1 230 1 162 1 92 1 331 1 117 1 333 1 334 3 121 1 312 1 343 1 342 1 264 1 241 1 126 2 321 1 286 1 255 3 
227 1 257 1 258 1 184 1 157 1 69 1 230 1 162 1 92 1 331 1 332 1 117 1 334 3 121 1 312 1 343 1 342 1 264 1 241 1 126 3 321 1 286 1 287 1 255 3 
227 1 257 1 258 1 184 1 157 2 69 1 230 1 162 1 92 1 331 1 117 1 333 1 334 3 26 1 121 1 312 1 343 1 342 1 264 1 241 1 126 3 321 1 286 1 255 3 
87 1 227 1 184 1 41 1 139 1 230 1 92 1 5 1 235 1 312 1 194 1 314 1 54 2 195 2 317 1 101 1 55 1 241 1 246 2 321 1 13 1 286 3 287 1 255 5 257 1 258 2 157 7 156 1 69 1 159 2 261 1 162 1 288 1 332 1 331 1 117 1 333 4 334 5 26 4 76 1 121 1 79 2 342 1 343 1 126 4 264 1 347 1 131 1 352 1 
227 1 257 1 184 1 139 1 41 1 156 1 159 1 69 1 162 1 288 1 92 1 331 1 117 1 334 2 121 1 235 1 279 1 312 1 343 1 342 1 54 1 195 1 55 1 241 1 264 1 126 2 198 1 246 1 321 1 131 1 13 1 287 1 255 2 
227 1 257 1 258 2 184 1 139 1 41 1 157 4 156 1 159 2 69 1 162 1 288 1 92 1 332 1 331 1 117 1 333 2 334 4 26 2 121 1 5 1 235 1 79 2 312 1 343 1 342 1 54 2 195 2 317 1 101 1 55 1 264 1 241 1 126 4 246 2 321 1 131 1 13 1 286 2 287 1 255 4 
87 1 227 1 184 1 41 1 139 1 92 1 5 1 235 1 312 1 194 1 54 2 195 2 317 1 101 1 55 1 241 1 246 2 321 1 13 1 286 2 287 1 255 4 257 1 258 2 156 1 157 4 69 1 159 2 261 1 288 1 162 1 331 1 332 1 117 1 333 2 334 4 26 2 76 1 121 1 79 2 342 1 343 1 126 4 264 1 131 1 352 1 
227 1 257 1 184 1 139 1 209 1 156 1 259 1 159 1 69 1 116 1 162 1 288 1 92 1 331 1 117 1 334 2 121 1 235 1 312 1 343 1 342 1 149 1 101 1 55 1 264 1 241 1 126 2 198 1 246 1 321 1 131 1 13 1 255 2 
87 1 227 1 184 1 41 1 139 1 92 1 5 1 235 1 312 1 194 1 54 2 195 2 317 1 101 1 55 1 241 1 246 2 321 1 13 1 286 2 287 1 255 4 257 1 258 3 157 5 156 1 69 1 159 2 261 1 162 1 288 1 331 1 332 1 117 1 333 3 334 4 26 3 76 1 121 1 79 2 342 1 343 1 126 5 264 1 347 1 131 1 352 1 
87 1 227 1 184 1 41 1 139 1 92 1 5 1 235 1 312 1 194 1 54 2 195 2 317 1 101 1 55 1 241 1 246 2 321 1 13 1 286 2 287 1 255 4 257 1 258 3 157 5 156 1 69 1 159 2 261 1 162 1 288 1 331 1 332 1 117 1 333 3 334 4 26 3 76 1 121 1 79 2 342 1 343 1 126 5 264 1 347 1 131 1 352 1 
87 1 227 1 184 1 139 1 43 2 92 1 235 1 312 1 279 1 194 1 149 1 55 1 241 1 198 2 246 2 321 1 13 1 286 2 287 1 255 4 257 1 258 2 156 1 157 4 69 1 159 2 261 1 288 1 162 1 116 2 331 1 332 1 117 1 333 2 334 4 26 2 76 1 121 1 342 1 343 1 126 4 264 1 131 1 352 1 
311 1 269 1 280 1 81 1 19 1 196 1 115 2 151 1 260 1 71 1 102 1 275 2 301 1 49 1 285 2 104 1 94 1 233 1 291 1 123 1 
311 1 328 1 292 1 6 1 280 1 81 1 176 1 115 2 151 1 56 1 71 1 275 1 285 2 104 1 132 1 
311 1 6 1 313 1 80 1 280 1 81 1 115 2 151 1 71 1 48 1 275 1 285 2 104 1 200 1 132 1 226 1 
311 1 6 1 31 1 80 1 280 1 81 1 115 1 151 1 244 1 71 1 165 1 285 2 323 1 104 1 200 1 132 1 167 1 25 1 310 1 122 1 
311 1 313 1 0 1 31 1 280 1 81 1 271 1 115 1 151 1 71 1 165 1 275 1 285 2 104 1 323 1 167 1 
87 1 269 1 115 2 71 1 275 1 76 1 311 1 193 1 6 1 81 1 280 1 242 1 127 1 151 1 11 1 285 2 104 1 132 1 183 1 254 1 
311 1 193 1 269 1 280 1 81 1 82 1 115 1 151 1 71 1 102 1 275 1 285 2 104 1 
311 1 6 1 280 1 81 1 127 1 115 1 151 1 71 1 102 1 22 1 285 2 104 1 183 1 
311 1 193 1 269 1 6 1 280 1 81 1 127 1 242 1 115 2 151 1 71 1 102 1 275 1 285 2 104 1 183 1 
311 1 193 1 269 1 280 1 81 1 271 1 82 1 115 1 151 1 71 1 275 1 285 2 104 1 
311 1 6 1 280 1 81 1 271 1 127 1 115 1 151 1 71 1 22 1 285 2 104 1 183 1 
311 1 193 1 269 1 6 1 280 1 81 1 271 1 127 1 242 1 115 2 151 1 71 1 275 1 285 2 104 1 183 1 
311 1 193 1 269 1 6 1 280 1 81 1 127 1 242 1 151 1 115 2 71 1 275 1 285 2 104 1 183 1 
165 1 323 1 31 1 167 1 122 1 
165 1 323 1 31 1 167 1 171 1 
311 1 193 1 269 1 6 1 280 1 81 1 127 1 242 1 115 2 151 1 71 1 275 1 285 2 104 1 132 1 183 1 
165 1 323 1 167 1 25 1 252 1 122 1 
311 1 87 1 269 1 193 1 6 1 280 1 81 1 127 1 242 1 115 2 151 1 71 1 11 1 211 1 275 1 285 2 104 1 132 1 183 1 76 1 
269 3 154 1 228 1 19 3 44 1 115 19 163 1 73 3 275 9 94 6 172 2 311 2 292 2 193 3 6 10 124 1 295 1 315 1 81 2 280 2 125 1 242 3 127 3 243 1 151 2 56 1 285 4 223 2 62 1 183 3 
311 1 269 1 193 1 292 2 154 1 6 5 40 1 155 1 295 1 315 2 280 1 81 1 242 1 44 1 115 11 151 1 56 2 163 2 144 1 275 6 285 2 62 2 172 2 
269 4 154 1 40 1 155 1 228 1 19 1 44 1 115 27 163 3 144 1 73 2 275 14 94 3 172 3 311 2 292 5 193 4 6 13 124 2 295 1 315 2 81 2 280 2 242 4 127 2 243 1 151 2 56 3 285 4 223 1 62 1 250 1 183 2 
269 4 154 1 40 1 155 1 228 1 19 3 44 1 115 29 163 3 144 1 73 2 275 14 94 5 172 3 311 2 292 5 193 4 6 15 124 2 295 1 315 2 81 2 280 2 242 4 127 3 243 1 151 2 56 3 285 4 223 1 62 1 250 1 183 3 
269 8 154 1 40 1 155 1 19 7 44 1 70 1 115 52 260 1 163 2 144 1 73 7 275 27 49 1 233 1 94 14 172 4 170 2 123 1 311 2 292 4 193 7 6 25 124 2 294 1 295 1 315 1 81 2 280 2 242 7 127 7 243 1 196 1 346 1 151 2 56 4 301 1 285 4 223 1 62 1 183 8 36 1 
305 1 175 1 187 1 63 1 42 1 324 1 140 1 282 1 221 1 273 1 
186 1 84 1 
236 1 305 1 137 1 63 1 324 1 140 1 282 1 147 1 273 1 
305 1 111 1 316 1 42 1 140 1 282 1 221 1 273 1 348 1 187 1 334 1 63 1 189 1 324 1 24 1 249 2 287 1 255 1 
305 1 111 1 316 1 42 1 140 1 282 1 221 1 273 1 348 1 187 1 334 1 63 1 189 1 324 1 24 1 249 2 287 1 255 1 
305 1 111 1 316 1 42 1 140 1 282 1 221 1 273 1 348 1 187 1 334 1 63 1 189 1 324 1 24 1 249 2 287 1 255 1 
302 1 266 1 89 1 
302 1 266 1 89 1 
128 1 67 1 
89 1 128 1 67 1 
224 1 141 1 
305 1 111 1 186 1 140 1 141 1 306 1 150 1 282 1 1 1 273 1 213 1 34 1 224 1 348 1 63 1 334 1 324 1 249 1 76 2 190 1 84 1 255 1 
302 1 266 1 
89 1 128 1 67 1 
0 1 207 2 115 2 71 1 330 1 165 2 274 1 275 1 145 1 167 2 340 1 311 1 312 2 6 1 313 1 30 1 280 1 239 1 81 1 264 2 197 1 151 1 320 1 179 1 321 2 285 2 323 2 104 1 132 1 202 1 200 1 
237 1 270 1 9 1 158 1 45 1 265 1 289 1 165 2 59 1 320 1 274 1 103 1 323 2 303 1 167 2 252 1 52 1 97 1 192 2 
270 1 185 1 9 1 158 1 45 1 265 1 289 1 165 1 59 1 103 1 274 1 320 1 323 1 303 1 167 1 97 1 192 2 
30 1 31 1 165 1 59 1 3 1 320 1 274 1 179 1 93 1 323 1 167 1 95 1 52 1 153 1 
237 1 270 1 9 1 158 1 45 1 265 1 289 1 165 1 59 1 320 1 103 1 274 1 323 1 303 1 167 1 52 1 97 1 192 2 
100 1 
332 1 131 1 13 1 287 1 291 1 129 1 329 1 
54 1 195 1 41 1 156 1 55 1 198 1 288 1 131 1 13 1 287 1 235 1 
269 1 231 1 2 1 143 1 274 1 232 1 96 1 191 2 235 2 193 1 54 3 55 2 242 1 198 6 320 2 323 1 61 3 201 1 13 4 253 1 286 1 287 3 255 2 113 1 156 2 157 2 288 2 165 1 118 1 334 2 335 1 167 1 168 1 290 3 343 1 30 4 31 1 127 1 179 1 131 3 133 1 268 1 183 1 
269 2 155 1 40 1 156 1 70 1 163 1 288 1 144 1 290 5 235 1 292 1 193 2 54 2 55 1 242 2 127 2 346 1 56 1 198 4 61 5 131 4 13 6 183 2 287 2 
87 1 269 1 194 1 156 1 55 1 261 1 288 1 299 1 49 1 334 1 131 1 13 2 183 1 233 1 168 2 76 1 5 1 352 1 123 1 255 1 235 1 
156 1 55 1 129 1 329 1 288 1 332 1 131 1 13 1 287 1 235 1 
193 1 269 1 54 2 242 1 127 1 198 4 61 2 131 2 13 2 168 1 183 1 290 2 287 2 
87 1 194 1 157 1 261 1 332 1 334 1 76 1 286 1 287 1 352 1 255 1 
293 1 31 2 157 2 156 1 55 1 218 1 210 1 288 1 165 2 323 2 334 1 131 1 167 2 13 1 133 1 286 1 85 1 255 1 235 1 
87 1 165 1 323 1 31 1 167 1 76 1 122 1 352 1 339 1 
54 2 156 1 55 1 218 1 260 1 198 4 288 1 332 2 61 2 131 2 13 1 133 1 290 2 287 4 235 1 
305 1 140 1 77 1 
305 1 140 1 77 1 
305 1 140 1 77 1 
305 1 187 1 140 1 15 1 141 1 
136 1 305 1 140 1 
136 1 305 1 140 1 
136 1 305 1 140 1 
305 1 140 1 
324 1 273 1 
311 2 269 1 6 4 280 2 81 2 19 2 196 1 115 8 151 2 260 1 73 1 275 4 301 1 285 4 49 1 183 1 94 3 233 1 36 1 123 1 
269 1 6 3 19 2 196 1 115 6 260 1 301 1 275 3 49 1 233 1 94 2 183 1 291 1 123 1 
311 1 193 1 269 1 6 2 280 1 81 1 19 1 127 1 242 1 20 1 151 1 115 4 73 1 275 2 285 2 183 1 94 2 
292 2 193 1 269 1 6 4 124 1 19 1 127 1 242 1 115 7 56 1 163 1 73 1 275 3 183 1 94 2 
328 1 269 3 19 5 115 23 260 1 161 1 73 4 275 11 49 2 233 2 94 9 170 1 123 1 311 2 193 2 292 2 124 1 6 12 280 2 81 2 242 2 127 2 196 1 151 2 56 2 301 1 285 4 183 3 36 2 
292 1 6 1 115 1 
275 1 115 1 56 1 
311 1 193 1 269 1 6 3 81 1 280 1 242 1 127 1 19 2 151 1 20 1 115 6 73 1 275 3 285 2 201 1 94 3 183 1 
269 2 155 1 40 1 19 1 115 12 70 1 163 1 73 1 144 1 275 6 94 2 311 1 292 1 193 2 6 6 295 1 81 1 280 1 242 2 127 2 151 1 346 1 56 1 285 2 183 2 
269 1 6 3 19 1 115 6 73 1 275 3 49 1 183 1 233 1 94 2 123 1 
311 1 6 2 280 1 81 1 19 1 196 1 115 3 151 1 161 1 73 1 275 1 301 1 49 1 285 2 94 2 233 1 36 1 
311 1 269 2 6 5 295 1 81 1 280 1 19 3 151 1 115 10 299 1 73 2 275 5 285 2 49 2 233 2 94 5 183 2 123 1 
311 1 193 1 269 1 295 1 280 1 81 1 151 1 115 2 73 1 275 2 285 2 94 1 
311 1 193 1 269 1 6 2 295 1 280 1 81 1 19 1 127 1 242 1 151 1 115 4 73 1 275 2 285 2 183 1 94 2 
311 3 6 2 228 1 295 1 280 3 81 3 19 1 115 3 151 3 161 1 73 1 275 1 285 6 49 1 233 1 94 2 36 1 
269 5 228 1 19 7 20 1 115 34 260 1 161 1 163 1 72 1 73 5 275 16 49 3 233 3 94 12 123 2 311 5 292 4 193 3 6 18 124 1 295 1 296 1 81 5 280 5 242 3 127 3 196 1 10 1 151 5 56 3 301 1 285 10 183 5 36 2 
269 2 155 1 19 2 115 11 260 1 163 1 275 6 49 1 94 2 233 1 123 1 311 1 292 2 193 1 6 5 124 1 295 1 81 1 280 1 242 1 196 1 151 1 56 1 301 1 285 2 183 1 
269 2 155 1 19 2 115 11 20 1 260 1 163 1 73 1 275 6 49 1 233 1 94 3 123 1 311 2 292 2 193 1 6 5 124 1 295 1 81 2 280 2 242 1 196 1 151 2 56 1 301 1 285 4 183 1 
311 1 269 1 193 1 292 1 6 2 40 1 155 1 295 1 280 1 81 1 242 1 151 1 115 5 56 1 163 1 144 1 275 3 285 2 
269 3 155 1 40 1 19 3 20 1 115 17 70 1 260 1 163 1 73 2 144 1 275 10 49 1 233 1 94 5 123 1 311 3 292 1 193 2 6 7 295 1 81 3 280 3 242 2 127 1 196 1 151 3 346 1 56 1 301 1 285 6 183 2 36 1 
269 2 155 1 19 2 115 11 260 1 163 1 275 6 49 1 94 2 233 1 123 1 311 1 292 2 193 1 6 5 124 1 295 1 81 1 280 1 242 1 196 1 151 1 56 1 301 1 285 2 183 1 
269 2 155 1 40 1 19 1 115 12 70 1 163 1 73 1 144 1 275 6 94 2 311 1 292 1 193 2 6 6 295 1 81 1 280 1 242 2 127 2 151 1 346 1 56 1 285 2 183 2 
311 2 269 1 193 1 292 1 6 2 40 1 155 1 295 1 280 2 81 2 242 1 151 2 20 1 115 5 56 1 163 1 144 1 275 3 285 4 
269 3 155 1 40 1 228 1 19 3 70 1 115 16 163 1 73 3 144 1 275 9 94 6 311 4 292 1 193 3 6 7 295 1 81 4 280 4 242 3 127 2 346 1 151 4 56 1 285 8 183 2 36 2 
269 1 6 4 19 3 196 2 115 7 73 3 301 1 275 3 49 3 183 1 233 3 94 6 123 1 
311 2 269 1 193 1 292 1 6 2 40 1 155 1 228 1 295 1 280 2 81 2 242 1 151 2 115 5 56 1 163 1 144 1 275 3 285 4 
58 1 312 1 321 1 7 1 267 1 264 1 69 1 
312 1 7 1 281 1 264 1 69 1 46 1 58 1 321 1 267 1 105 1 277 1 350 1 
3 1 165 1 320 1 274 1 179 1 30 1 323 1 31 1 167 1 95 1 291 1 
199 1 165 1 179 1 320 1 274 1 30 1 323 1 31 1 167 1 76 1 337 1 2 1 53 1 
199 1 165 1 179 1 320 1 274 1 30 1 323 1 167 1 76 1 278 1 337 1 2 1 53 1 
165 1 179 1 320 1 274 1 30 1 8 1 323 1 167 1 76 1 278 1 337 1 2 1 53 1 
109 1 343 1 30 4 31 1 238 1 99 1 157 1 2 1 165 3 332 1 179 1 320 1 274 1 323 3 118 1 334 2 167 3 51 1 287 1 278 1 66 1 255 2 191 1 
109 1 343 1 30 4 31 1 157 1 2 1 165 3 332 1 179 1 320 1 274 1 323 3 118 1 334 2 167 3 51 1 287 1 278 1 66 1 96 1 255 2 191 1 
165 1 320 1 274 1 323 1 167 1 307 1 
30 3 270 1 31 2 207 1 113 1 160 1 307 1 21 1 2 1 165 6 179 2 274 2 320 3 323 7 145 1 167 7 252 1 251 1 234 1 106 1 107 1 
76 1 337 1 
87 1 269 1 156 2 157 2 210 1 329 1 231 1 261 1 288 2 143 1 165 1 332 2 49 1 118 1 334 3 167 1 168 2 233 1 76 1 96 1 123 1 191 1 235 2 343 1 194 1 30 2 31 1 55 2 150 1 129 1 299 1 323 1 131 3 13 4 183 2 268 1 286 1 287 2 352 1 255 3 
174 1 30 2 113 1 307 1 2 1 165 1 179 1 274 1 320 2 323 1 118 1 167 1 253 1 
30 1 31 1 83 1 165 4 3 1 320 1 179 1 274 1 323 4 167 4 51 1 252 1 95 1 
86 1 30 1 2 1 165 2 179 1 274 1 320 2 323 2 167 2 251 1 278 1 106 1 214 1 353 1 
165 1 320 1 274 1 323 1 31 1 303 1 167 1 158 1 265 1 192 1 
30 1 270 1 330 1 165 2 179 1 274 1 320 1 323 2 145 1 167 2 252 1 
30 3 31 1 160 1 83 1 3 1 165 4 179 2 274 2 320 2 323 5 145 1 167 5 252 1 278 1 95 1 107 1 
38 1 30 3 31 1 160 1 83 1 3 1 165 4 179 2 274 2 320 2 323 5 145 1 167 5 252 1 278 1 95 1 
165 1 179 1 320 1 274 1 30 1 8 1 323 1 31 1 167 1 76 1 337 1 2 1 53 1 
30 1 113 1 21 1 2 1 165 1 179 1 274 1 320 2 323 1 167 1 251 1 106 1 278 1 
188 1 152 1 
180 1 4 1 325 1 
340 1 312 1 239 1 264 1 197 1 222 1 152 1 321 1 188 1 325 2 121 1 
87 1 227 1 257 1 261 1 92 1 332 1 334 2 188 1 4 1 76 1 121 1 340 1 312 1 343 1 194 1 239 1 264 1 150 1 197 1 152 1 130 1 321 1 180 1 325 2 287 1 352 1 16 1 255 2 
322 1 91 1 291 1 47 1 
110 1 322 1 23 1 276 1 91 1 114 1 47 1 
75 1 65 1 114 1 
304 1 110 3 68 1 112 1 90 1 91 1 114 3 47 1 12 2 23 1 322 1 276 1 
110 2 166 1 322 1 23 1 98 1 276 1 91 1 114 2 47 1 
110 1 68 1 23 1 276 1 303 1 297 1 114 1 215 1 192 1 97 1 
110 1 68 1 23 1 276 1 91 1 114 1 47 1 
110 1 68 1 322 1 23 1 276 1 91 2 114 1 
341 1 205 1 110 2 68 1 91 1 114 2 47 1 298 1 23 2 276 2 
110 3 68 1 297 1 91 1 114 3 32 1 47 1 57 1 212 1 166 2 322 1 23 1 276 1 
110 2 68 1 217 1 91 1 45 1 114 2 265 1 47 1 166 1 322 1 23 1 276 1 303 1 192 2 97 1 
110 4 68 1 98 1 208 1 297 1 91 1 114 4 32 1 47 1 166 2 322 1 23 2 276 2 
110 1 68 1 322 1 23 1 276 1 91 1 114 1 47 1 
78 1 110 4 112 1 90 1 297 1 91 2 114 4 32 1 47 2 12 1 166 2 322 2 23 1 276 1 
110 2 68 1 318 1 91 1 114 2 47 1 166 1 23 1 322 1 276 1 120 1 28 1 
17 1 110 3 68 1 112 1 90 2 91 1 114 3 47 1 12 2 23 1 322 1 276 1 
138 1 178 1 47 1 
110 1 68 1 23 1 276 1 319 1 114 1 
110 2 166 1 212 1 68 1 322 1 23 1 276 1 91 1 114 2 47 1 
349 1 
110 1 68 1 322 1 23 1 276 1 91 1 114 1 47 1 
110 3 68 1 91 1 114 3 47 1 12 1 166 1 212 1 23 1 322 1 276 1 
110 1 166 1 297 1 114 1 32 1 
91 1 47 1 

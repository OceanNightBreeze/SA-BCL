#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (64,147) (64,147) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (64,147) (64,147) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (64,147) (64,147) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (64,147) (64,147) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 200 85 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 200 141 180 5 (82,123) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 200 116 219 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 200 116 219 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 200 116 219 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 200 116 219 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 200 116 219 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 259 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 143 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 200 302 166 19 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 200 85 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 200 141 180 90 161 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 200 85 243 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 200 141 180 5 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 200 141 180 5 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 200 85 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 200 162 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 200 162 181 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 200 162 181 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 200 162 181 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 200 162 181 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 200 85 243 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 57 121 174 (167,291) (167,291) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 57 121 174 (167,291) (167,291) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 143 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 200 302 222 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 200 302 166 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 200 302 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 200 141 180 90 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 200 302 222 14 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 200 141 93 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 57 121 174 (167,291) (167,291) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 200 141 93 345 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 200 141 180 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 200 141 180 90 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 57 121 174 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 200 302 222 223 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 200 141 93 (167,291) (167,291) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
233 1 227 1 147 1 165 1 124 1 358 1 24 1 175 1 136 1 294 1 64 1 
233 1 227 1 147 1 165 1 124 1 358 1 24 1 175 1 136 1 294 1 64 1 
233 1 227 1 147 1 165 1 124 1 358 1 24 1 175 1 136 1 294 1 64 1 
233 1 227 1 147 1 165 1 124 1 358 1 24 1 175 1 136 1 294 1 64 1 
233 1 215 1 265 1 67 1 306 1 56 2 274 1 244 1 114 3 227 4 209 1 273 1 165 4 136 1 89 2 61 3 294 1 278 1 
233 1 53 1 142 1 67 1 187 1 306 1 4 1 175 1 24 1 244 1 114 1 227 2 273 1 165 2 136 1 294 1 
114 2 313 1 233 2 227 3 265 1 165 3 67 1 89 1 24 1 136 2 61 1 244 1 294 1 
233 2 67 1 24 1 274 1 146 1 209 1 165 9 278 1 262 1 215 1 265 3 306 1 16 1 56 2 244 1 331 1 114 5 313 1 227 9 273 1 89 4 136 2 61 7 294 1 
233 2 67 1 24 1 274 1 146 1 209 1 165 9 278 1 262 1 215 1 265 3 306 1 16 1 56 2 244 1 331 1 114 5 313 1 227 9 273 1 89 4 136 2 61 7 294 1 
305 1 45 1 143 1 
305 1 198 1 287 2 
355 1 272 2 264 2 32 2 276 2 197 1 9 2 112 2 
205 1 44 1 46 1 125 1 150 1 31 2 276 2 260 1 238 1 9 2 354 1 326 1 355 1 264 2 32 3 216 2 279 1 356 1 153 1 197 1 17 1 18 1 177 1 85 1 286 1 156 1 112 3 272 2 86 1 200 1 247 1 293 1 63 1 202 1 183 1 21 1 41 2 
185 1 272 1 264 1 32 1 276 1 197 1 91 1 310 1 9 1 112 1 
185 1 296 1 305 1 32 1 45 1 321 1 112 1 300 1 272 1 7 1 149 1 315 1 363 1 10 1 
264 1 185 1 296 1 305 1 32 1 45 1 321 2 112 1 300 1 272 1 149 1 276 1 315 2 9 1 363 1 
22 1 288 1 173 1 315 1 321 1 
22 1 288 1 196 1 305 1 192 1 45 1 315 2 321 2 
288 1 315 1 321 1 
22 1 185 1 264 1 32 1 197 1 321 1 188 1 310 1 112 1 272 1 276 1 315 1 91 1 9 1 
305 1 
22 1 288 1 196 1 305 1 172 1 45 1 315 2 321 2 
22 2 196 1 343 1 305 1 80 1 45 1 253 1 321 5 346 1 163 1 275 2 269 2 178 1 288 2 301 1 8 1 315 5 335 1 42 2 
355 1 143 1 
355 1 185 1 264 1 32 2 234 1 190 1 112 2 272 2 276 1 316 1 9 1 
271 1 82 1 100 1 
326 1 355 1 205 1 32 1 216 1 44 1 252 1 125 1 177 1 112 1 86 1 31 1 183 1 202 1 41 1 21 1 
326 1 205 1 32 2 216 1 44 1 125 1 177 1 112 2 271 1 272 1 86 1 31 1 276 1 338 1 319 1 202 1 183 1 9 1 21 1 41 1 
355 1 264 1 32 5 26 1 112 5 145 1 272 5 164 1 7 1 276 4 316 1 319 2 338 1 9 4 
185 1 272 2 32 2 276 2 39 1 310 1 9 2 112 2 
355 1 264 1 272 3 32 3 276 3 319 1 9 3 112 3 
185 1 272 1 32 1 276 1 310 1 9 1 112 1 
264 1 185 1 32 1 190 1 112 1 272 1 276 1 316 1 9 1 
205 1 185 1 296 1 44 1 46 1 125 1 321 1 300 1 150 1 98 1 149 1 31 1 352 1 276 3 260 1 238 1 9 3 354 1 326 1 355 1 264 2 32 4 216 1 279 1 197 1 17 1 18 1 177 1 286 1 156 1 112 4 272 3 86 1 316 1 315 1 247 1 319 1 338 1 63 1 202 1 183 1 363 1 21 1 41 1 
355 1 272 2 164 1 32 2 7 1 276 1 319 1 9 1 112 2 
264 1 296 1 185 1 305 1 32 3 321 1 112 3 300 1 272 3 98 1 149 1 276 3 316 1 315 1 101 1 338 1 319 2 9 3 363 1 
271 1 272 2 264 1 32 2 82 1 276 2 316 1 319 1 9 2 112 2 
326 1 355 1 205 1 32 1 216 1 44 1 125 1 177 1 112 1 86 1 31 1 183 1 202 1 41 1 21 1 
355 1 185 1 32 1 216 1 44 1 234 1 125 1 177 1 112 1 86 1 117 1 31 1 261 1 183 1 202 1 41 1 21 1 
82 1 279 2 141 1 123 1 3 1 5 1 322 1 17 1 156 1 286 1 271 1 200 1 148 1 150 1 100 1 99 1 260 1 180 1 238 1 78 1 63 1 354 2 
185 1 272 1 32 1 149 1 276 1 39 1 9 1 112 1 
240 1 68 1 
240 1 68 1 
1 1 211 1 
1 1 211 1 
1 1 211 1 
240 1 68 1 176 1 
240 1 68 1 176 1 
1 1 240 2 15 1 211 1 50 1 68 2 
240 1 68 1 298 1 
240 1 68 1 176 1 
240 1 68 1 311 1 
240 1 68 1 311 1 
240 1 68 1 311 1 
321 1 207 1 68 1 189 1 298 1 72 1 276 2 194 1 9 2 355 1 32 2 81 1 240 1 55 1 360 1 225 1 224 1 309 1 112 2 245 1 272 2 315 1 230 1 203 1 
171 1 305 1 240 2 15 1 321 2 189 2 68 2 207 3 360 2 299 1 309 1 245 2 158 1 88 1 37 1 194 2 315 2 135 1 290 2 
273 1 306 1 278 1 
273 1 142 1 306 1 
71 1 273 3 142 1 317 1 278 2 84 1 
71 1 273 2 350 1 142 1 278 1 84 1 
71 1 273 2 142 1 278 1 84 2 
22 4 141 1 45 1 321 5 163 1 275 1 348 2 323 1 301 3 99 1 78 1 79 2 196 1 305 2 218 1 131 1 55 1 198 1 225 1 83 2 155 1 285 1 269 1 287 3 178 2 288 1 315 5 248 1 90 1 180 1 203 1 42 1 
22 2 185 1 45 1 321 2 188 1 6 1 256 1 30 1 276 1 9 1 264 1 32 1 305 1 173 1 197 1 310 1 112 1 288 1 272 1 315 2 91 1 
22 2 185 1 141 1 45 1 321 3 188 1 275 1 348 1 301 3 276 1 8 1 99 1 78 1 9 1 79 2 264 1 32 1 305 3 131 1 55 1 197 1 198 2 155 1 285 1 83 2 310 1 269 1 112 1 287 4 178 2 272 1 315 3 248 1 90 1 91 1 180 1 42 1 
22 1 141 1 321 2 275 1 348 1 301 3 8 1 99 1 78 1 263 1 79 2 305 2 131 1 55 1 198 2 83 2 155 1 285 1 269 1 287 4 178 2 315 2 248 1 90 1 180 1 42 1 
344 1 125 1 143 1 
125 1 214 1 
0 1 
125 1 202 1 21 1 
266 1 125 1 
125 1 202 1 
297 1 344 2 159 1 125 3 202 1 21 1 
200 1 116 1 193 1 219 1 
200 1 116 1 193 1 219 1 
200 1 116 1 210 1 193 1 219 1 
200 1 116 1 193 1 219 1 
200 1 116 1 193 1 219 1 
233 1 44 1 142 1 67 1 186 1 24 1 144 1 254 1 165 2 31 1 278 1 151 1 152 1 216 1 306 1 108 1 244 1 133 1 177 1 114 1 227 2 273 2 136 1 59 1 61 1 317 1 294 1 41 1 204 1 120 1 
92 1 233 1 44 1 142 1 67 1 186 1 24 1 144 1 254 1 165 3 31 1 278 1 151 1 13 1 152 1 216 1 34 1 306 1 108 1 244 1 177 1 114 1 227 3 273 2 136 1 59 1 317 1 61 2 41 1 120 1 
92 1 44 1 142 1 67 1 186 1 24 1 144 1 165 2 31 1 278 1 151 1 13 1 152 1 216 1 108 1 306 1 244 1 177 1 114 1 227 2 273 2 61 2 317 1 41 1 120 1 
151 2 233 1 65 1 216 1 44 1 34 1 125 1 108 2 24 2 47 1 237 1 69 1 177 1 144 2 227 1 86 1 115 1 165 1 31 1 130 1 136 1 202 1 41 1 
92 1 233 1 44 1 142 1 186 1 24 1 144 1 254 1 165 1 31 1 278 1 151 1 152 1 216 1 306 1 108 1 133 1 177 1 227 1 273 2 136 1 59 1 317 1 294 1 41 1 120 1 
330 1 
296 1 185 1 44 1 45 2 125 1 321 3 47 1 163 1 275 1 300 1 7 1 149 1 31 2 301 1 259 1 195 1 10 1 51 1 196 1 305 2 32 1 216 2 33 1 280 1 177 1 269 1 112 1 113 1 178 1 272 1 86 2 288 2 115 1 20 2 315 3 249 1 248 1 250 1 363 1 62 1 202 1 41 2 42 1 
185 1 296 1 45 2 321 3 300 1 7 1 149 1 104 1 10 1 51 1 196 1 32 1 305 2 172 1 280 1 112 1 113 1 272 1 288 2 315 3 20 2 250 1 62 1 363 1 
340 1 185 1 296 1 45 3 321 3 300 1 7 1 149 1 10 1 51 1 196 1 32 1 305 3 172 1 280 1 112 1 113 1 288 1 272 1 315 3 20 3 250 1 62 1 363 1 
340 1 185 1 296 1 45 3 321 3 300 1 7 1 149 1 104 1 10 1 51 1 196 1 32 1 305 3 172 1 280 1 283 1 112 1 113 1 272 1 288 2 315 3 20 3 250 1 62 1 363 1 
185 1 45 8 235 2 321 5 95 2 275 1 7 1 149 1 104 4 105 1 10 1 51 1 12 1 196 3 241 2 280 1 106 1 198 2 283 4 112 1 113 1 288 7 20 6 119 1 250 1 62 1 340 4 296 1 206 1 163 1 300 1 301 1 170 2 305 8 32 1 217 1 172 1 269 1 178 1 272 1 314 1 315 5 363 1 42 1 
185 1 45 5 235 2 321 4 95 2 275 1 7 1 149 1 104 2 10 1 51 1 196 2 241 2 280 1 198 2 283 2 112 1 287 2 113 1 288 4 246 1 20 4 119 1 250 1 62 1 340 2 296 1 163 1 300 1 301 1 170 2 305 6 32 1 217 1 269 1 178 1 272 1 315 4 363 1 42 1 
340 2 185 1 296 1 45 5 235 2 321 4 95 2 163 1 275 1 300 1 7 1 301 1 149 1 104 2 10 1 51 1 12 1 196 2 170 2 32 1 305 5 217 1 241 2 280 1 106 1 198 2 283 2 269 1 112 1 113 1 178 1 288 4 272 1 314 1 315 4 20 4 119 1 250 1 62 1 363 1 42 1 
340 2 185 1 296 1 45 5 235 2 321 4 95 2 163 1 275 1 300 1 7 1 301 1 149 1 104 2 10 1 51 1 12 1 196 2 170 2 32 1 305 5 217 1 241 2 280 1 106 1 198 2 283 2 269 1 112 1 113 1 178 1 288 4 272 1 314 1 315 4 20 4 119 1 250 1 62 1 363 1 42 1 
340 2 185 1 296 1 45 5 321 4 163 1 275 1 300 1 7 1 301 1 149 1 74 1 104 2 103 1 10 1 51 1 196 2 239 2 170 2 32 1 305 5 241 2 280 1 283 2 308 1 269 1 287 2 112 1 199 2 113 1 178 1 288 4 272 1 314 1 315 4 20 4 119 1 250 1 62 1 363 1 42 1 
340 3 185 1 296 1 45 6 235 2 206 1 321 4 95 2 163 1 275 1 300 1 7 1 301 1 149 1 104 3 10 1 12 1 51 1 196 2 170 2 32 1 305 6 217 1 241 2 106 1 280 1 198 2 283 3 269 1 112 1 113 1 178 1 272 1 288 5 314 1 315 4 20 5 119 1 250 1 62 1 363 1 42 1 
340 3 185 1 296 1 45 6 235 2 206 1 321 4 95 2 163 1 275 1 300 1 7 1 301 1 149 1 104 3 10 1 12 1 51 1 196 2 170 2 32 1 305 6 217 1 241 2 106 1 280 1 198 2 283 3 269 1 112 1 113 1 178 1 272 1 288 5 314 1 315 4 20 5 119 1 250 1 62 1 363 1 42 1 
340 2 185 1 296 1 45 5 321 4 163 1 275 1 300 1 7 1 301 1 149 1 104 2 103 1 10 1 51 1 196 2 239 2 170 2 32 1 305 5 241 2 280 1 283 2 269 1 287 2 112 1 199 2 113 1 178 1 288 4 272 1 246 1 315 4 20 4 119 1 250 1 62 1 363 1 42 1 
121 1 93 1 141 1 174 1 322 1 143 1 17 1 156 1 286 1 29 1 200 1 150 1 49 1 260 1 291 1 238 1 63 1 167 1 
279 1 17 1 156 1 286 1 27 1 271 1 200 1 179 1 150 1 19 1 100 1 302 1 260 1 166 1 238 1 63 1 354 1 
169 1 32 1 279 1 46 1 17 1 85 1 112 1 156 1 286 1 362 1 272 1 200 1 179 1 150 1 276 1 260 1 238 1 338 1 319 1 63 1 9 1 354 1 
205 1 141 1 44 1 46 1 125 1 161 1 96 1 150 2 31 1 276 1 100 1 260 2 238 2 9 1 354 2 326 1 32 2 216 1 82 1 279 2 282 1 17 2 110 1 177 1 286 2 156 2 112 2 271 1 272 1 86 1 200 1 179 1 58 1 247 1 90 1 180 1 319 1 338 1 202 1 183 1 63 2 21 1 41 1 
216 1 243 1 17 1 85 1 156 1 286 1 86 1 200 1 150 1 31 1 260 1 238 1 182 1 63 1 41 1 
264 1 32 1 94 1 141 1 17 1 112 1 156 1 286 1 272 1 200 1 179 1 150 1 276 1 316 1 260 1 90 1 180 1 238 1 9 1 63 1 
200 1 141 1 150 1 5 1 260 1 322 1 180 1 238 1 17 1 63 1 286 1 156 1 
82 1 279 2 3 1 322 1 17 1 156 1 286 1 29 1 271 1 150 1 49 1 100 1 99 1 260 1 238 1 78 1 63 1 354 2 
200 1 141 1 150 1 260 1 90 1 322 1 180 1 238 1 17 1 63 1 286 1 156 1 
200 1 141 1 150 1 5 1 260 1 180 1 238 1 17 1 63 1 182 1 286 1 156 1 
82 1 279 2 3 1 17 1 156 1 286 1 29 1 271 1 150 1 49 1 100 1 99 1 260 1 238 1 78 1 182 1 63 1 354 2 
200 1 141 1 150 1 260 1 90 1 180 1 238 1 17 1 63 1 182 1 286 1 156 1 
200 1 141 1 150 1 260 1 90 1 180 1 238 1 17 1 63 1 286 1 156 1 
205 1 44 1 46 1 125 1 31 1 150 1 260 1 238 1 354 1 326 1 355 1 216 1 32 1 279 1 17 1 177 1 85 1 112 1 156 1 286 1 86 1 200 1 247 1 202 1 183 1 63 1 21 1 41 1 
185 1 44 1 234 1 46 1 125 1 31 1 150 1 260 1 261 1 238 1 354 1 355 1 216 1 32 1 279 1 242 1 17 1 177 1 112 1 156 1 286 1 86 1 117 1 202 1 183 1 63 1 21 1 41 1 
200 1 179 1 141 1 150 1 260 1 90 1 180 1 238 1 17 1 63 1 286 1 156 1 
205 1 141 1 44 1 125 1 31 1 150 1 260 1 238 1 326 1 216 1 32 1 17 1 177 1 112 1 156 1 286 1 200 1 58 1 247 1 90 1 180 1 183 1 202 1 63 1 21 1 41 1 204 1 
264 1 32 1 141 1 17 1 112 1 156 1 286 1 272 1 200 1 179 1 150 1 276 1 316 1 118 1 260 1 90 1 180 1 238 1 9 1 63 1 
279 1 328 1 329 1 17 1 162 1 286 1 128 1 200 1 351 1 260 1 238 1 181 1 63 1 354 1 
279 1 328 1 329 1 17 1 162 1 286 1 128 1 200 1 351 1 260 1 238 1 181 1 63 1 354 1 
279 1 328 1 329 1 17 1 162 1 286 1 128 1 200 1 351 1 260 1 238 1 181 1 63 1 354 1 
279 1 328 1 329 1 17 1 162 1 286 1 128 1 200 1 351 1 260 1 238 1 181 1 63 1 354 1 
279 1 328 1 329 1 17 1 162 1 286 1 128 1 200 1 351 1 260 1 238 1 181 1 63 1 354 1 
184 1 171 1 245 1 240 1 15 1 194 1 135 1 68 1 189 1 360 1 
245 1 54 1 240 1 194 1 68 1 189 1 102 1 360 1 134 1 
81 1 298 1 
267 1 176 1 
50 1 359 1 311 1 
171 1 305 1 240 1 15 1 321 1 189 1 68 1 207 2 360 1 299 1 309 1 245 1 158 1 37 1 315 1 194 1 135 1 290 1 
171 1 305 1 240 1 15 1 321 1 189 1 68 1 207 2 360 1 299 1 309 1 245 1 158 1 37 1 315 1 194 1 135 1 290 1 
171 1 305 1 240 1 15 1 321 1 189 1 68 1 207 2 360 1 299 1 309 1 245 1 158 1 37 1 315 1 194 1 135 1 290 1 
50 1 267 1 176 1 
50 1 267 1 176 1 
359 1 311 1 
50 1 359 1 311 1 
72 1 224 1 
22 1 321 1 68 1 189 1 207 1 299 1 298 1 72 1 276 2 194 1 9 2 355 1 32 2 81 1 240 1 55 1 35 1 360 1 225 1 224 1 112 2 245 1 272 2 315 1 290 1 230 1 203 1 
32 2 122 1 281 1 243 1 17 1 85 1 112 2 156 1 286 1 272 2 200 1 179 1 150 1 260 1 60 1 238 1 295 1 63 1 
92 1 152 1 216 2 44 1 142 1 306 1 177 1 144 1 254 1 273 2 349 1 289 1 31 2 317 1 303 1 278 1 41 2 204 1 120 1 
92 1 152 1 216 1 44 1 142 1 306 1 177 1 144 1 254 1 129 1 273 2 31 1 317 1 303 1 278 1 41 1 120 1 
216 1 44 1 125 1 47 1 177 1 144 1 86 1 115 1 349 1 31 1 130 1 202 1 41 1 168 1 
92 1 152 1 216 1 44 1 142 1 306 1 177 1 144 1 254 1 273 2 349 1 289 1 31 1 317 1 303 1 278 1 41 1 120 1 
75 1 
178 1 305 1 80 1 301 1 45 1 253 1 143 1 
196 1 305 2 217 1 45 1 235 1 321 1 198 1 95 1 163 1 275 1 269 1 287 1 178 1 288 1 301 1 315 1 42 1 
44 1 141 1 321 2 275 2 99 1 277 1 52 1 196 1 198 3 287 6 333 1 288 2 334 1 159 1 248 1 202 1 21 1 296 1 344 1 125 4 161 1 163 2 28 1 301 4 31 1 78 1 214 2 79 3 216 1 305 3 357 1 83 3 177 2 269 2 270 1 178 3 86 1 315 2 90 1 180 1 42 2 41 1 
141 2 45 2 321 1 163 2 275 2 27 1 301 8 257 1 324 1 258 1 99 2 302 1 353 1 78 2 79 5 196 1 305 5 14 1 33 1 107 1 221 2 222 1 307 1 198 3 83 5 269 2 287 6 178 5 288 1 87 1 315 1 248 1 90 2 180 2 42 2 
121 1 93 1 185 1 141 2 345 1 321 1 188 1 163 1 275 1 301 2 276 1 99 1 9 1 264 1 32 1 106 1 197 1 221 2 174 1 310 1 269 1 112 1 178 2 272 1 87 1 315 1 91 1 42 1 
80 1 305 1 253 1 45 1 163 1 275 1 269 1 178 1 301 1 42 1 
79 2 305 2 141 1 198 2 83 2 287 4 178 2 301 2 99 1 90 1 180 1 78 1 
288 1 196 1 305 1 45 1 315 1 321 1 
140 2 44 2 125 2 321 3 47 1 48 1 163 1 275 2 25 1 31 4 301 2 8 1 213 1 195 1 304 1 196 2 216 4 33 2 109 1 177 3 269 2 332 1 178 2 86 2 288 4 115 1 228 1 315 3 249 1 248 2 202 2 21 1 42 2 41 4 
205 1 44 1 46 1 125 1 31 1 150 1 276 2 260 1 238 1 9 2 354 1 326 1 355 1 264 2 216 1 32 3 279 1 197 1 17 1 18 1 177 1 112 3 156 1 286 1 86 1 272 2 247 1 63 1 183 1 202 1 41 1 21 1 
79 1 305 2 33 1 45 1 198 1 163 1 275 1 269 1 287 2 178 1 301 1 248 1 42 1 
245 1 38 1 360 1 
245 1 38 1 360 1 
171 1 245 1 72 1 360 1 312 1 
245 1 38 1 360 1 
245 1 137 1 360 1 
245 1 137 1 360 1 
245 1 137 1 360 1 
245 1 360 1 
240 1 68 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
328 1 14 1 279 1 222 1 17 2 36 1 286 2 27 1 200 1 302 1 260 2 238 2 63 2 354 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
328 1 14 1 279 1 222 1 17 2 286 2 36 1 27 1 200 1 302 1 260 2 238 2 63 2 354 1 
328 1 14 1 279 1 222 1 17 2 286 2 27 1 200 1 302 1 260 2 238 2 231 1 63 2 354 1 
121 1 29 1 57 1 49 1 174 1 291 1 167 1 
328 1 14 1 279 1 222 1 17 2 286 2 27 1 200 1 302 1 260 2 238 2 231 1 63 2 354 1 
121 1 29 1 57 1 49 1 174 1 154 1 260 2 291 1 238 2 17 2 63 2 167 1 286 2 
121 1 93 1 29 1 200 1 141 1 49 1 174 1 291 1 143 1 167 1 
200 1 141 1 260 1 90 1 180 1 238 1 17 1 63 1 286 1 36 1 
200 1 279 1 302 1 222 1 354 1 27 1 
200 1 279 1 302 1 166 1 354 1 27 1 
279 1 354 1 27 1 
200 1 302 1 
200 1 279 1 141 1 90 1 161 1 180 1 354 1 
200 1 279 1 14 1 328 1 302 1 222 1 260 1 238 1 17 1 63 1 354 1 27 1 286 1 
93 1 200 1 141 1 
121 1 279 1 174 1 154 1 17 1 111 1 286 1 29 1 57 1 49 1 260 1 291 1 238 1 63 1 167 1 354 1 
121 1 93 1 29 1 200 1 141 1 49 1 174 1 345 1 
200 1 328 1 141 1 260 1 180 1 238 1 17 1 63 1 286 1 
200 1 328 1 141 1 260 1 90 1 180 1 238 1 17 1 63 1 286 1 
121 1 328 1 174 1 17 2 286 2 29 1 57 1 49 1 260 2 238 2 231 1 63 2 
279 1 328 1 222 1 223 1 17 3 286 3 36 1 27 1 200 1 302 1 260 3 238 3 63 3 231 1 354 1 
355 1 272 1 32 1 164 1 97 1 7 1 112 1 
355 1 32 1 23 1 220 1 208 1 191 1 112 1 272 1 164 1 97 1 7 1 336 1 
86 1 115 1 216 1 44 1 31 1 125 1 47 1 143 1 177 1 202 1 41 1 
355 1 205 1 32 2 216 1 44 1 125 1 177 1 112 2 272 1 86 1 31 1 276 1 319 1 202 1 183 1 9 1 21 1 41 1 
232 1 205 1 140 1 185 1 44 1 125 3 31 1 149 1 276 1 9 2 355 1 216 1 32 2 266 1 177 1 112 2 272 2 319 1 183 1 202 2 363 1 41 1 21 2 
232 1 140 1 185 2 44 1 234 1 125 3 31 1 149 1 276 1 9 2 355 1 216 1 32 2 266 1 177 1 112 2 272 2 117 1 319 1 183 1 202 2 363 1 41 1 21 2 
232 1 296 1 140 1 305 1 216 3 266 1 44 1 45 1 344 1 125 4 321 2 268 1 226 1 177 1 86 1 288 1 31 3 315 2 214 1 202 1 21 1 11 1 41 3 
232 1 296 1 140 1 305 1 216 3 266 1 44 1 45 1 344 1 125 4 321 2 268 1 177 1 86 1 288 1 31 3 315 2 277 1 214 1 202 1 21 1 41 3 
327 1 216 1 44 1 31 1 177 1 41 1 
327 1 92 1 216 7 44 2 125 3 126 1 25 1 177 3 86 2 31 6 325 1 159 1 76 1 213 1 293 1 138 1 337 1 202 2 204 1 41 7 21 1 
121 1 93 1 205 1 141 1 44 1 125 1 29 1 150 2 31 1 49 1 276 1 260 2 238 2 9 1 167 1 326 1 32 2 216 1 174 1 282 1 17 2 177 1 286 2 156 2 112 2 272 1 200 1 179 1 58 1 247 1 291 1 295 1 319 1 202 1 183 1 63 2 21 1 204 1 41 1 
22 1 296 1 45 1 253 1 344 1 125 2 321 3 163 2 275 2 28 1 301 1 31 1 277 1 214 1 196 1 305 1 80 1 216 1 269 2 178 1 86 1 333 1 288 2 334 1 228 1 315 3 42 2 41 1 
0 1 327 1 52 1 216 1 44 1 344 1 125 2 177 2 31 1 159 1 202 1 41 1 21 1 
216 4 44 1 125 1 47 1 268 1 177 1 86 1 115 1 31 4 139 1 202 1 41 4 204 1 
140 1 342 1 216 2 44 1 125 1 109 1 25 1 177 2 31 2 213 1 304 1 202 1 41 2 21 1 
86 1 216 1 273 1 44 1 142 1 31 1 306 1 177 1 120 1 41 1 
92 1 216 2 44 1 132 1 125 1 177 1 31 2 325 1 202 1 204 1 41 2 
140 1 216 5 44 2 125 3 47 1 177 2 86 1 115 1 31 4 325 1 337 1 138 1 139 1 202 2 41 5 204 1 
140 1 216 5 44 2 125 3 236 1 47 1 177 2 86 1 115 1 31 4 325 1 138 1 139 1 202 2 41 5 204 1 
185 1 44 1 234 1 125 1 31 1 276 1 9 1 355 1 216 1 32 2 177 1 112 2 86 1 272 1 117 1 319 1 183 1 202 1 41 1 21 1 
140 1 216 1 44 1 125 1 126 1 25 1 177 2 31 1 159 1 213 1 202 1 41 1 21 1 
355 1 2 1 361 1 127 1 70 1 
22 1 355 1 296 1 185 1 305 1 45 1 2 1 321 2 361 2 70 2 127 2 300 1 157 1 149 1 98 1 315 2 292 1 318 1 363 1 
122 1 32 1 281 1 2 1 361 1 70 1 112 1 272 1 60 1 
157 1 2 1 292 1 
114 1 67 1 143 1 244 1 
114 1 233 1 227 1 165 1 67 1 136 1 244 1 
227 1 108 1 24 1 
114 1 233 1 227 3 53 2 251 1 165 3 67 1 136 1 77 1 244 1 294 1 339 1 
114 1 233 1 227 2 165 2 67 1 136 1 61 1 56 1 244 1 
114 1 233 1 227 1 273 1 165 1 306 1 89 1 136 1 274 1 278 1 294 1 
114 1 233 1 227 1 165 1 136 1 244 1 294 1 
233 1 227 1 165 1 67 1 136 1 244 2 294 1 
43 1 233 2 284 1 244 1 347 1 114 1 227 2 165 2 136 2 294 1 
233 1 265 1 67 1 244 1 331 1 114 2 146 1 227 3 165 3 136 1 89 1 61 2 294 1 
233 1 142 1 67 1 306 1 244 1 114 1 227 2 273 2 165 2 212 1 136 1 317 1 61 1 294 1 278 1 
114 2 233 2 227 4 215 1 265 1 165 4 67 1 89 1 136 2 61 2 56 1 244 1 294 1 
114 1 233 1 227 1 165 1 67 1 136 1 244 1 294 1 
233 1 53 1 251 1 265 1 67 2 244 2 114 3 227 4 165 4 136 1 89 1 201 1 61 2 339 1 
160 1 233 1 341 1 67 1 244 1 114 1 227 2 165 2 136 1 61 1 294 1 262 1 
233 1 53 2 251 2 67 1 244 1 114 1 227 3 255 1 165 3 136 1 294 1 339 1 
114 2 73 1 66 1 40 2 
233 1 227 1 165 1 136 1 294 1 320 1 
114 1 233 1 227 2 165 2 67 1 136 1 61 1 244 1 294 1 331 1 
229 1 
114 1 233 1 227 1 165 1 67 1 136 1 244 1 294 1 
114 1 233 1 227 3 53 1 165 3 67 1 136 1 61 1 244 1 294 1 331 1 
114 1 265 1 89 1 201 1 
114 1 244 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 65 (173,303) 207 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (210,242) 247 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 65 322 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 65 (173,303) 207 42 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (210,242) 247 77 3 (210,242) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (34,164) (103,215) (103,215) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (52,149,222) (124,275,277) (124,275,277) (124,275,277) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (52,149,222) (124,275,277) (124,275,277) (124,275,277) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (52,149,222) (124,275,277) (124,275,277) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (52,149,222) (124,275,277) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (210,242) 247 77 269 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 65 322 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (210,242) 247 29 328 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (210,242) 247 77 3 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (210,242) 247 29 269 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (210,242) 247 29 328 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (210,242) 247 77 3 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (210,242) 247 29 269 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (210,242) 247 29 269 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 65 (173,303) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 86 64 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (210,242) 247 29 269 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 65 (173,303) (173,303) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (210,242) 247 29 269 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 258 337 98 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 258 337 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 258 337 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 258 337 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 258 337 98 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (34,164) (34,164) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (52,149,222) (52,149,222) (52,149,222) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (52,149,222) (52,149,222) (52,149,222) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (52,149,222) (52,149,222) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 65 (173,303) 207 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 176 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
187 3 282 1 119 1 259 1 234 1 263 3 311 2 200 1 54 1 182 1 18 2 157 1 280 2 
206 1 118 1 255 1 119 1 209 2 259 2 263 9 311 5 219 1 7 1 54 1 182 1 18 2 280 2 136 2 187 9 282 4 138 1 68 1 71 1 234 3 193 2 334 1 200 1 336 1 203 1 156 2 157 6 
206 1 118 1 255 1 119 1 209 2 259 2 263 9 311 5 219 1 7 1 54 1 182 1 18 2 280 2 136 2 187 9 282 4 138 1 68 1 71 1 234 3 193 2 334 1 200 1 336 1 203 1 156 2 157 6 
206 1 118 1 255 1 119 1 209 2 259 2 263 10 311 6 219 1 7 1 54 1 182 1 18 2 280 2 136 2 187 10 282 5 138 1 68 1 71 1 234 4 193 2 334 1 200 1 336 1 203 1 156 2 157 7 
206 1 118 1 255 1 119 1 209 1 259 2 263 7 311 4 219 1 7 1 54 1 182 1 18 2 280 2 136 2 187 7 282 3 138 1 68 1 234 2 193 2 334 1 200 1 336 1 203 1 156 2 157 4 
136 1 187 4 206 1 282 2 119 1 209 2 234 1 71 1 263 4 193 1 311 3 200 1 203 1 182 1 156 1 18 1 157 3 280 1 
136 1 187 2 118 1 119 1 141 1 259 1 263 2 193 1 311 1 219 1 130 1 200 1 182 1 60 1 18 1 280 1 
206 1 119 1 209 2 259 1 263 9 311 5 129 1 54 1 182 1 18 2 280 2 136 1 282 4 187 9 138 1 67 1 234 3 71 1 193 1 334 1 200 1 203 1 156 1 157 7 
206 1 119 1 209 2 259 1 263 9 311 5 129 1 54 1 182 1 18 2 280 2 136 1 282 4 187 9 138 1 67 1 234 3 71 1 193 1 334 1 200 1 203 1 156 1 157 7 
143 1 168 1 147 1 292 1 10 1 270 1 114 1 80 1 271 1 56 1 183 1 316 1 276 1 117 1 
105 1 
85 1 270 2 10 1 145 1 235 1 14 1 147 2 105 1 
163 4 309 2 85 2 120 1 257 1 48 1 168 1 94 2 172 1 174 2 270 5 10 2 271 1 56 1 273 1 316 1 183 1 317 2 276 1 14 1 15 1 105 2 20 1 327 1 143 1 145 2 291 1 147 5 292 1 333 1 237 1 31 5 33 2 114 1 335 1 80 1 244 2 117 1 
176 1 145 1 105 1 
186 1 4 2 105 1 
213 1 114 2 56 2 316 2 183 1 168 2 117 2 276 2 
207 1 65 1 109 1 332 2 168 1 170 1 148 1 114 1 56 1 183 1 316 1 303 1 276 1 117 1 159 1 
114 1 80 1 143 1 271 1 56 1 316 1 183 1 168 1 117 1 276 1 
308 1 63 1 88 1 145 1 168 1 147 1 240 1 239 1 270 1 80 1 56 1 59 1 117 1 105 1 
63 1 88 1 145 1 168 1 147 2 240 1 239 1 270 2 114 1 80 1 56 1 316 1 276 1 117 1 105 1 
85 1 270 1 10 1 81 1 147 1 
85 1 38 1 270 2 10 1 145 1 14 1 147 2 105 1 
85 1 270 1 147 1 
211 1 213 2 168 2 114 1 56 2 316 1 117 2 276 1 162 1 
210 1 247 1 
322 1 148 1 65 1 332 1 
176 1 213 1 
148 1 65 1 114 1 36 1 56 1 332 1 168 1 318 1 117 1 276 1 
213 1 50 1 91 1 168 4 36 2 114 4 80 1 56 4 316 1 318 1 276 4 117 4 250 1 162 1 
114 2 230 1 80 1 143 1 56 2 168 2 117 2 276 2 
213 1 36 1 114 3 56 3 316 1 168 3 117 3 276 3 
114 1 80 1 143 1 56 1 168 1 117 1 276 1 
211 1 114 1 80 1 56 1 316 1 168 1 117 1 276 1 162 1 
63 1 207 1 65 1 88 1 332 1 168 3 147 1 239 1 240 1 148 1 270 1 36 1 114 3 80 1 56 3 183 1 316 2 318 1 303 1 276 3 117 3 82 1 42 1 162 1 
308 1 213 1 114 1 36 1 56 2 168 2 321 1 117 2 276 1 
63 1 88 1 168 3 147 1 240 1 239 1 270 1 36 2 114 3 80 1 56 3 316 1 57 1 318 1 276 3 117 3 82 1 162 1 105 1 
210 1 168 2 218 1 36 1 114 2 56 2 316 1 276 2 117 2 162 1 
148 1 65 1 332 1 
148 1 86 1 332 1 
210 1 212 2 139 2 287 1 232 1 94 1 3 1 77 1 78 1 242 1 199 2 79 1 299 1 202 1 247 1 41 1 
63 1 230 1 168 1 114 1 80 1 56 1 276 1 117 1 
177 1 245 1 205 1 
243 1 272 1 245 2 205 2 339 1 304 1 
245 1 205 1 
245 1 205 1 
272 1 304 1 
272 1 304 1 
272 1 304 1 
251 1 245 1 205 1 
251 1 245 1 205 1 
251 1 245 1 205 1 
245 1 310 1 205 1 
245 1 310 1 205 1 
245 1 310 1 205 1 
46 1 213 1 121 1 89 1 51 1 168 2 95 1 171 1 177 1 270 1 56 2 319 1 276 2 279 1 227 1 189 1 286 1 329 1 233 1 147 1 114 2 245 1 205 1 117 2 
84 1 46 1 286 2 288 1 290 1 51 2 95 3 147 2 96 2 294 1 293 1 243 1 270 2 116 1 245 2 205 2 279 2 105 1 227 2 
136 2 130 1 153 2 262 1 156 1 
136 1 193 1 156 1 
136 1 130 1 193 1 
136 3 130 1 298 1 153 1 262 1 156 2 
136 2 130 1 9 1 153 1 262 1 156 1 
163 3 85 1 87 1 122 2 256 1 89 1 94 1 171 1 4 3 174 1 131 2 269 1 270 5 10 4 317 1 319 1 14 1 17 2 105 2 186 1 20 1 22 1 145 1 331 1 191 1 29 1 147 5 31 2 77 1 33 1 197 1 244 1 
163 8 85 6 87 2 122 6 257 1 93 1 94 3 4 9 174 2 268 1 131 6 269 3 270 9 10 7 317 2 319 4 14 1 105 5 186 3 20 1 111 1 145 1 331 2 112 1 29 3 147 9 31 6 77 3 33 3 197 1 297 1 244 2 338 1 81 5 155 5 
163 3 87 1 256 1 122 2 257 1 94 1 4 4 174 1 10 2 270 3 269 1 131 2 317 1 319 1 17 1 105 3 186 2 145 1 331 1 191 1 147 3 29 1 31 2 77 1 33 1 244 1 
163 5 87 1 122 4 256 1 257 1 94 2 4 7 174 1 268 1 131 4 270 4 10 3 269 2 317 1 319 2 17 2 105 4 186 3 145 1 331 1 112 1 191 1 147 4 29 2 31 4 77 2 33 2 244 1 338 1 
208 1 
176 1 190 1 58 1 
190 1 70 1 
100 1 190 1 40 1 
190 1 305 1 
100 1 190 1 
100 1 179 1 190 3 225 1 58 2 40 1 
108 2 212 3 66 1 25 1 140 3 139 7 94 1 217 1 123 1 333 1 125 1 30 4 33 1 76 1 315 1 273 1 184 2 15 1 
212 3 217 2 5 1 125 1 320 1 184 1 16 1 15 1 185 1 108 1 139 6 140 2 25 1 287 1 232 1 30 3 333 1 76 1 199 2 79 1 37 1 152 1 202 1 249 1 
212 4 94 1 217 1 123 1 125 1 315 1 273 1 184 3 15 1 21 1 108 2 139 9 140 4 25 1 287 2 232 2 30 5 333 1 32 1 33 1 79 2 199 4 152 1 202 2 
108 2 212 3 25 1 140 3 139 7 94 1 217 1 123 1 333 1 125 1 30 4 33 1 76 1 315 1 273 1 184 2 15 1 
108 2 212 3 25 1 140 3 139 7 94 1 217 1 123 1 333 1 125 1 30 4 33 1 76 1 315 1 273 1 184 2 15 1 
324 1 187 1 164 1 165 2 47 2 259 2 215 1 332 1 263 1 8 1 148 1 150 2 103 1 18 1 280 1 
187 1 165 1 119 1 47 1 259 1 332 1 263 1 124 1 149 1 150 1 35 1 246 1 275 1 277 1 18 1 280 1 
187 1 165 1 119 1 47 1 259 1 332 1 263 1 124 1 266 1 149 1 150 1 35 1 275 1 277 1 18 1 280 1 
187 2 165 1 47 1 259 1 332 1 263 2 124 1 8 1 149 1 150 1 35 1 300 1 246 1 277 1 157 1 18 1 280 1 
187 1 165 1 149 1 47 1 150 1 300 1 259 1 246 1 332 1 263 1 277 1 157 1 
198 1 
163 2 254 4 85 6 88 1 90 2 92 1 2 2 168 1 4 2 174 1 270 5 14 3 278 2 104 1 105 2 106 1 20 1 186 2 24 2 285 1 110 1 194 1 31 2 117 1 308 1 126 1 313 1 55 1 56 1 317 1 59 1 134 1 63 1 330 1 142 2 145 1 331 1 332 2 147 5 236 2 240 1 239 1 75 2 148 2 80 1 244 1 158 1 
106 1 63 1 308 1 254 2 85 2 88 1 285 1 110 1 90 1 168 1 235 1 194 1 147 3 239 1 126 1 240 1 270 3 80 1 56 1 59 1 14 1 117 1 
106 1 63 1 308 1 254 3 85 1 24 1 88 1 285 1 110 1 145 1 168 1 235 1 194 1 147 3 239 1 126 1 240 1 270 3 80 1 56 1 59 1 14 1 117 1 105 1 
308 1 254 3 85 2 88 1 90 1 168 1 2 1 126 1 270 3 56 1 59 1 14 1 105 1 106 1 63 1 285 1 24 1 110 1 145 1 235 1 147 3 194 1 240 1 239 1 80 1 117 1 
163 1 254 4 85 7 88 1 90 4 92 1 167 1 2 4 168 2 174 1 270 5 271 1 183 1 276 1 14 3 278 2 105 1 106 1 20 1 186 2 285 1 24 2 110 1 194 1 292 1 31 1 296 1 114 1 301 1 117 2 308 1 216 1 126 1 220 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 145 1 235 1 147 5 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 4 85 4 88 1 90 2 92 1 168 2 2 2 4 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 20 1 106 1 186 2 285 1 24 2 110 1 194 1 292 1 31 1 114 1 117 2 308 1 126 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 330 1 145 1 147 4 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 4 85 4 88 1 90 2 92 1 168 2 2 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 20 1 106 1 186 2 285 1 24 2 110 1 194 1 292 1 31 1 296 1 114 1 301 1 117 2 308 1 216 1 126 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 145 1 147 4 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 4 85 4 88 1 90 2 92 1 168 2 2 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 20 1 106 1 186 2 285 1 24 2 110 1 194 1 292 1 31 1 296 1 114 1 301 1 117 2 308 1 216 1 126 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 145 1 147 4 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 4 85 4 88 1 90 2 92 1 168 2 2 2 4 2 264 1 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 20 1 106 1 281 1 285 1 24 2 110 1 194 1 292 1 31 1 114 1 117 2 307 2 308 1 45 1 216 1 126 1 127 2 56 2 316 1 317 1 59 1 63 1 143 1 142 2 145 1 147 4 239 1 240 1 80 2 244 1 
163 1 254 5 85 5 88 1 90 3 92 1 167 1 2 3 168 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 106 1 20 1 186 2 24 3 285 1 110 1 194 1 292 1 31 1 296 1 114 1 301 1 117 2 308 1 216 1 126 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 145 1 147 4 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 5 85 5 88 1 90 3 92 1 167 1 2 3 168 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 106 1 20 1 186 2 24 3 285 1 110 1 194 1 292 1 31 1 296 1 114 1 301 1 117 2 308 1 216 1 126 1 56 2 316 1 317 1 59 1 134 1 63 1 143 1 142 2 145 1 147 4 236 2 239 1 240 1 75 2 80 2 244 1 
163 1 254 4 85 4 88 1 90 2 92 1 168 2 2 2 4 2 174 1 270 4 271 1 183 1 276 1 278 2 14 2 105 1 20 1 106 1 285 1 24 2 110 1 194 1 292 1 31 1 114 1 117 2 307 2 45 1 308 1 126 1 127 2 56 2 316 1 317 1 59 1 63 1 143 1 142 2 330 1 145 1 147 4 239 1 240 1 80 2 244 1 
212 1 168 1 6 1 266 1 99 1 101 1 56 1 276 1 139 2 287 2 69 1 232 2 332 4 30 1 148 2 78 1 79 2 199 4 299 2 36 1 114 1 202 2 41 2 117 1 159 1 306 1 
210 1 212 2 168 1 94 1 269 1 56 1 316 1 13 1 276 1 323 1 139 3 287 1 232 1 29 1 30 1 33 1 77 1 79 1 199 2 114 1 299 1 202 1 247 1 41 1 117 1 162 1 
210 1 212 3 213 2 94 1 123 1 176 1 315 1 273 1 184 2 15 1 108 1 140 2 139 6 287 1 232 1 333 1 30 3 33 1 78 1 79 1 199 2 299 1 202 1 41 1 247 1 
79 1 199 2 299 1 287 1 232 1 202 1 41 1 13 1 161 1 
212 1 168 1 218 1 312 1 99 1 101 1 56 1 318 1 13 1 276 1 19 1 322 1 65 1 139 2 287 1 232 1 332 1 30 1 148 1 199 2 79 1 299 1 114 1 36 1 202 1 115 1 41 1 117 1 
212 1 139 1 287 1 232 1 27 1 332 1 168 1 148 1 79 1 199 2 36 1 114 1 299 1 101 1 56 1 202 1 318 1 41 1 276 1 117 1 13 1 
210 1 139 2 287 1 328 1 232 1 29 1 30 2 33 1 78 1 199 2 79 1 299 1 202 1 247 1 41 1 
210 1 212 2 139 2 287 1 232 1 94 1 3 1 77 1 78 1 199 2 79 1 299 1 202 1 247 1 41 1 
210 1 139 2 287 1 232 1 29 1 30 2 33 1 78 1 199 2 79 1 299 1 269 1 202 1 247 1 41 1 
210 1 139 2 287 1 328 1 232 1 6 1 29 1 30 2 33 1 199 2 79 1 299 1 202 1 247 1 41 1 
210 1 212 2 139 2 287 1 232 1 94 1 3 1 6 1 77 1 199 2 79 1 299 1 202 1 247 1 41 1 
210 1 139 2 287 1 232 1 6 1 29 1 30 2 33 1 199 2 79 1 299 1 269 1 202 1 247 1 41 1 
210 1 139 2 287 1 232 1 29 1 30 2 33 1 199 2 79 1 299 1 269 1 202 1 247 1 41 1 
148 1 65 1 332 1 303 1 
64 1 148 1 86 1 332 1 
210 1 139 2 287 1 232 1 29 1 30 2 33 1 199 2 79 1 299 1 269 1 202 1 247 1 41 1 13 1 
65 1 266 1 332 1 303 1 173 1 
210 1 139 2 287 1 232 1 168 1 28 1 29 1 30 2 33 1 199 2 79 1 269 1 299 1 114 1 56 1 202 1 316 1 247 1 41 1 117 1 276 1 13 1 162 1 
21 1 79 1 199 2 98 1 287 1 258 1 232 1 202 1 260 1 337 1 
21 1 79 1 199 2 98 1 287 1 258 1 232 1 202 1 260 1 337 1 
21 1 79 1 199 2 98 1 287 1 258 1 232 1 202 1 260 1 337 1 
21 1 79 1 199 2 98 1 287 1 258 1 232 1 202 1 260 1 337 1 
21 1 79 1 199 2 98 1 287 1 258 1 232 1 202 1 260 1 337 1 
294 1 84 1 243 1 178 1 286 1 245 1 51 1 205 1 279 1 227 1 
177 1 189 1 
295 1 284 1 286 1 154 1 245 1 51 1 205 1 279 1 227 1 
251 1 231 1 
221 1 310 1 339 1 
84 1 46 1 286 1 288 1 51 1 95 2 147 1 96 1 294 1 293 1 243 1 270 1 116 1 245 1 205 1 279 1 105 1 227 1 
84 1 46 1 286 1 288 1 51 1 95 2 147 1 96 1 294 1 293 1 243 1 270 1 116 1 245 1 205 1 279 1 105 1 227 1 
84 1 46 1 286 1 288 1 51 1 95 2 147 1 96 1 294 1 293 1 243 1 270 1 116 1 245 1 205 1 279 1 105 1 227 1 
251 1 231 1 339 1 
251 1 231 1 339 1 
221 1 310 1 
221 1 310 1 339 1 
329 1 233 1 
213 1 121 1 89 1 51 1 168 2 95 1 171 1 96 1 177 1 270 1 10 1 56 2 319 1 276 2 279 1 227 1 189 1 286 1 329 1 233 1 147 1 293 1 114 2 151 1 245 1 205 1 117 2 
212 1 139 2 287 1 232 1 261 1 332 2 168 2 30 1 128 1 79 1 199 2 299 1 99 1 101 1 39 1 201 1 56 2 202 1 41 1 117 2 13 1 159 2 306 1 
148 1 164 1 97 1 34 1 47 1 332 1 
97 1 149 1 47 1 35 1 222 1 246 1 52 1 332 1 
266 1 97 1 149 1 47 1 35 1 222 1 246 1 52 1 332 2 
149 1 47 1 35 1 214 1 246 1 52 1 332 1 
12 1 
20 1 163 1 327 1 145 1 172 1 174 1 31 1 244 1 317 1 105 1 
186 5 163 5 122 5 94 2 4 10 29 2 31 5 33 2 77 2 269 2 131 5 204 1 105 5 
85 1 270 1 145 1 147 1 14 1 105 1 
252 1 20 1 163 2 85 4 257 1 331 2 332 4 169 1 147 3 31 2 174 2 148 2 313 1 270 3 55 2 244 2 317 2 302 2 14 2 61 1 104 1 
163 1 176 1 327 1 145 1 172 1 105 1 31 1 
163 1 85 1 4 1 174 1 270 1 317 1 14 1 134 1 105 2 186 1 20 1 145 1 236 1 147 1 31 1 75 1 244 1 
20 1 148 1 244 1 1 1 317 1 332 1 174 1 
163 13 253 1 85 1 309 2 122 8 0 1 94 4 4 10 174 2 267 1 270 1 131 8 269 4 55 1 223 1 224 1 133 1 317 2 320 2 226 1 14 1 16 1 105 7 20 2 186 5 331 1 145 2 147 1 73 1 29 4 31 8 33 4 77 4 335 1 244 2 43 1 249 2 
163 2 309 2 120 1 168 1 94 1 174 1 270 1 271 1 273 1 56 1 317 1 183 1 316 1 276 1 15 1 20 1 143 1 147 1 333 1 292 1 31 2 33 2 296 1 114 1 335 1 80 1 244 1 117 1 
148 1 207 1 65 1 114 1 56 1 316 1 183 1 332 1 168 1 303 1 117 1 276 1 
186 1 20 1 163 1 331 1 145 1 4 2 31 1 174 1 131 1 55 1 244 1 317 1 105 2 
294 1 137 1 286 1 233 1 279 1 
286 1 279 1 74 1 
286 1 279 1 74 1 
286 1 279 1 74 1 
286 1 192 1 279 1 
286 1 192 1 279 1 
286 1 192 1 279 1 
286 1 279 1 
245 1 205 1 
21 1 120 1 212 5 140 5 25 2 139 10 287 1 232 1 94 2 333 2 30 5 33 2 79 1 199 2 202 1 273 1 184 3 15 2 
21 1 139 2 25 1 140 1 287 1 232 1 29 1 30 2 33 1 199 2 79 1 202 1 
21 1 212 2 140 2 139 4 25 1 287 1 232 1 94 1 29 1 30 2 77 1 33 1 199 2 79 1 269 1 202 1 184 1 
21 1 212 2 139 3 140 2 25 1 287 3 232 3 333 1 30 1 53 1 199 6 79 3 37 1 152 1 202 3 184 1 15 1 
120 1 212 8 94 2 123 1 53 1 315 1 273 1 180 1 320 1 184 3 16 1 15 2 185 1 21 1 25 3 140 6 139 15 287 4 232 4 30 7 333 2 33 2 79 4 199 8 37 1 152 1 202 4 249 1 
253 1 120 1 212 10 0 1 94 4 123 1 267 1 269 2 315 1 273 2 133 1 320 1 226 1 184 5 15 2 16 1 21 1 108 1 25 4 139 24 140 9 287 2 232 2 29 2 333 2 30 14 33 5 77 1 79 2 199 4 152 1 202 2 249 1 
253 1 212 7 0 1 94 2 123 1 267 1 269 2 315 1 273 1 180 1 133 1 320 1 226 1 184 3 15 1 16 1 21 1 108 1 25 1 139 17 140 4 287 3 232 3 29 2 333 1 30 10 33 3 77 1 79 3 199 6 152 1 202 3 249 1 
253 1 212 15 0 1 94 5 123 1 267 1 269 4 315 1 273 1 180 1 133 1 320 2 226 1 184 4 15 1 16 1 21 1 108 1 139 29 140 6 25 2 287 3 232 3 73 1 29 4 333 1 30 14 33 5 77 4 79 3 199 6 152 1 202 3 43 1 249 2 
253 1 212 12 0 1 94 4 123 1 267 1 269 4 315 1 273 1 180 1 133 1 320 2 226 1 184 4 15 1 16 1 21 1 108 1 139 27 140 7 25 3 287 3 232 3 73 1 29 4 333 1 30 15 33 5 77 3 79 3 199 6 152 1 202 3 43 1 249 2 
253 1 120 1 212 10 0 1 94 4 123 1 267 1 269 2 315 1 273 2 133 1 320 1 226 1 184 5 15 2 16 1 21 1 108 1 25 4 139 24 140 9 287 2 232 2 29 2 333 2 30 14 33 5 77 1 79 2 199 4 152 1 202 2 249 1 
253 1 212 11 0 1 94 4 267 1 269 4 133 1 320 2 226 1 184 2 16 1 21 1 139 22 140 4 25 2 287 1 232 1 73 1 29 4 30 11 33 4 77 4 79 1 199 2 202 1 43 1 249 2 
253 1 212 13 0 1 94 4 123 1 267 1 269 4 315 1 273 1 180 1 133 1 320 2 226 1 184 4 15 1 16 1 21 1 108 1 139 28 140 7 25 3 287 4 232 4 73 1 29 4 333 1 30 15 33 5 77 3 79 4 199 8 152 2 202 4 43 1 249 2 
212 4 94 1 53 1 269 1 320 2 226 1 184 1 16 1 21 1 139 7 140 1 287 2 232 2 73 1 29 1 30 3 33 1 77 1 79 2 199 4 202 2 249 1 
212 4 139 7 140 6 25 3 94 1 123 2 333 3 30 3 33 1 315 1 273 1 184 3 15 3 
212 4 94 1 53 1 269 1 320 2 226 1 184 1 16 1 21 1 139 7 140 1 287 2 232 2 73 1 29 1 30 3 33 1 77 1 79 2 199 4 202 2 249 1 
108 1 212 4 139 8 25 1 140 3 287 2 232 2 94 1 123 1 30 4 333 1 33 1 199 4 79 2 152 1 315 1 273 1 202 2 184 2 15 1 
33 1 176 1 108 1 212 3 139 6 140 2 315 1 273 1 94 1 184 2 123 1 30 3 333 1 15 1 
212 2 140 2 139 4 25 1 287 1 232 1 94 1 29 1 30 2 77 1 33 1 199 2 79 1 269 1 180 1 202 1 184 1 
212 6 25 1 140 2 139 12 94 2 73 1 29 2 30 6 33 2 77 2 269 2 184 1 320 2 43 1 16 1 249 2 
212 12 94 3 123 1 269 2 315 1 273 1 274 1 320 2 184 5 15 2 108 1 140 9 25 4 139 23 287 2 232 2 29 2 73 1 333 2 30 11 33 3 77 2 199 4 79 2 37 1 152 2 202 2 43 1 249 2 
212 1 139 1 320 1 
139 1 30 1 249 1 
212 3 139 6 25 1 140 3 287 1 232 1 94 1 29 1 30 3 33 1 77 1 79 1 199 2 269 1 202 1 180 1 204 1 184 2 
253 1 212 11 0 1 94 4 267 1 269 4 133 1 320 2 226 1 184 2 16 1 21 1 139 22 140 4 25 2 287 1 232 1 73 1 29 4 30 11 33 4 77 4 79 1 199 2 202 1 43 1 249 2 
212 3 139 6 140 2 25 1 94 1 30 3 333 1 33 1 273 1 184 1 15 1 
212 2 25 1 140 2 139 3 287 1 232 1 123 1 30 1 333 1 199 2 79 1 37 1 152 1 315 1 202 1 184 1 15 1 
308 1 188 1 213 1 56 1 168 1 117 1 321 1 
44 1 289 1 26 1 102 1 238 1 
148 1 266 1 229 1 11 1 332 4 
265 1 332 1 
148 1 332 1 
266 1 246 1 332 2 
148 1 266 1 332 2 
148 1 266 1 332 2 
176 1 148 1 332 1 
148 1 114 1 36 1 56 1 332 1 168 1 117 1 276 1 
114 1 36 1 56 1 332 1 302 1 168 1 117 1 276 1 
114 1 36 1 56 1 332 1 302 1 168 1 117 1 276 1 
270 1 332 1 302 1 147 1 
270 1 332 1 302 1 147 1 
144 1 332 1 
148 1 332 1 
287 1 232 1 261 1 332 1 168 1 266 1 79 1 199 2 36 1 114 1 299 1 56 1 202 1 41 1 276 1 117 1 13 1 
20 1 148 1 270 1 10 1 244 1 317 1 332 1 169 1 147 1 174 1 
144 1 332 1 
148 1 114 1 36 1 56 1 332 1 168 1 117 1 276 1 
332 1 302 1 
107 1 213 1 314 1 146 1 195 1 
63 1 107 2 283 1 326 1 213 1 88 1 145 1 146 1 147 2 195 2 239 1 240 1 10 1 270 2 314 2 80 1 82 1 105 1 228 1 
107 1 146 1 168 1 195 1 128 1 39 1 201 1 56 1 117 1 
326 1 146 1 228 1 
187 1 119 1 200 1 182 1 263 1 311 1 18 1 280 1 
23 1 187 4 282 1 234 1 263 4 72 1 311 3 219 1 175 1 200 2 182 2 157 2 18 1 280 1 
187 2 119 1 263 2 311 1 241 1 129 1 200 1 181 1 182 1 18 1 157 1 280 1 
187 3 119 1 263 3 72 2 311 1 219 2 175 1 200 1 182 1 248 1 18 1 280 1 
135 1 113 2 311 2 196 1 
187 1 119 1 49 1 263 1 18 1 280 1 
187 2 138 1 119 1 200 1 182 1 263 2 311 1 157 1 18 1 280 1 
62 1 
187 1 119 1 200 1 182 1 263 1 311 1 18 1 280 1 
176 1 200 1 182 1 311 1 
187 1 200 1 182 1 263 1 311 1 18 1 280 1 
187 1 150 1 259 1 
83 1 187 3 119 1 263 3 72 1 311 1 219 2 175 1 200 1 182 1 18 1 280 1 
187 2 209 1 200 1 182 1 263 2 311 1 157 1 18 1 280 1 
136 1 187 1 206 1 282 1 119 1 263 1 193 1 311 1 156 1 18 1 280 1 
187 1 119 1 200 1 263 1 311 1 18 1 280 1 
187 1 119 1 200 2 182 1 263 1 18 1 280 1 
187 2 325 1 119 1 166 1 263 2 311 1 200 1 18 2 160 1 280 2 
187 3 282 1 138 1 119 1 234 1 263 3 311 2 334 1 200 1 182 1 18 1 157 2 280 1 
136 2 187 2 119 1 263 2 193 1 311 1 130 1 298 1 200 1 132 1 182 1 156 1 18 1 157 1 280 1 
187 4 282 1 119 1 209 1 71 1 234 1 263 4 311 2 200 1 182 1 18 2 157 2 280 2 
187 3 138 1 119 1 263 3 311 1 219 1 200 1 182 1 157 1 18 1 280 1 
23 1 282 1 234 1 311 1 
200 1 311 1 

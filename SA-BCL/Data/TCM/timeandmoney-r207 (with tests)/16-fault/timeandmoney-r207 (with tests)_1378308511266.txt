#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) (89,224) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (89,224) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) (89,224) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (175,201,204,237) (175,201,204,237) (175,201,204,237) 92 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 183 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 208 17 108 75 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 208 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 208 17 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 208 180 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 208 17 108 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 208 17 108 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 286 264 125 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 286 264 125 147 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 286 226 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 286 226 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
25 1 
83 2 235 1 318 1 
182 1 123 2 128 2 22 2 144 1 177 2 273 2 243 2 
1 1 210 1 4 1 77 1 252 1 162 2 118 2 119 1 167 1 168 1 166 1 120 1 299 2 298 1 218 1 123 2 302 2 82 1 172 1 128 3 225 2 177 2 55 1 268 1 182 1 94 1 22 2 144 1 272 1 273 2 102 1 320 1 202 1 243 3 244 1 156 1 158 1 
321 1 113 1 123 1 124 1 128 1 22 1 144 1 177 1 273 1 243 1 
111 1 247 1 290 1 318 1 321 1 123 1 199 1 128 1 305 1 306 1 87 1 243 1 228 1 157 1 
111 1 22 1 290 1 273 1 318 1 321 1 123 1 128 1 305 2 306 1 177 1 87 1 243 1 157 2 228 1 
2 1 12 1 305 1 36 1 157 1 
111 1 2 1 41 1 12 1 305 2 318 1 14 1 157 2 
12 1 305 1 157 1 
113 1 2 1 22 1 144 1 273 1 321 1 124 1 123 1 128 1 305 1 177 1 243 1 157 1 74 1 
318 1 
111 1 2 1 12 1 205 1 305 2 318 1 14 1 157 2 
111 1 2 2 270 1 18 1 315 2 98 1 318 1 257 1 122 1 195 1 150 1 50 1 223 1 174 2 305 5 129 2 12 2 14 1 157 5 
25 1 
182 2 22 1 8 1 273 1 123 2 198 1 128 2 177 1 243 2 
260 1 253 1 45 1 
182 1 94 1 77 1 162 1 120 1 102 1 82 1 302 1 172 1 128 1 263 1 202 1 225 1 243 1 268 1 158 1 
94 1 77 1 22 1 162 1 99 1 253 1 102 1 120 1 123 1 82 1 302 1 33 1 172 1 202 1 128 2 225 1 177 1 243 2 268 1 158 1 
182 1 123 3 33 1 128 3 22 3 177 3 273 1 243 3 
321 1 113 1 123 1 128 1 22 1 177 1 243 1 
321 1 123 1 198 1 128 1 22 1 8 1 177 1 273 1 243 1 
210 1 4 1 77 1 290 1 162 1 118 2 168 1 166 1 120 1 299 1 298 1 218 1 123 3 82 1 302 1 172 1 304 1 128 4 305 1 225 1 306 1 87 1 177 3 55 1 268 1 228 1 182 1 94 1 314 1 22 3 144 1 272 1 273 2 99 1 102 1 320 1 321 1 198 1 33 1 202 1 243 4 156 1 158 1 157 1 
182 1 123 2 199 1 33 1 203 1 128 2 22 1 177 1 243 2 
114 1 290 1 22 3 314 1 273 1 99 1 318 1 321 1 123 3 198 1 33 2 128 3 305 1 306 1 177 3 87 1 243 3 157 1 228 1 
22 2 273 1 253 1 45 1 123 2 198 1 33 1 128 2 177 2 243 2 
182 1 94 1 77 1 162 1 120 1 102 1 82 1 302 1 172 1 128 1 202 1 225 1 243 1 268 1 158 1 
182 1 91 1 94 1 77 1 162 1 191 1 120 1 102 1 82 1 302 1 128 1 225 1 243 1 268 1 158 1 
4 1 115 1 212 1 252 2 118 2 253 2 166 1 168 2 299 4 45 2 217 1 218 1 260 2 307 1 55 1 185 1 231 1 139 1 142 1 272 1 320 1 30 1 104 1 69 1 
321 1 123 1 287 1 128 1 22 1 306 1 177 1 243 1 
182 1 22 4 163 1 273 1 99 1 123 5 222 1 199 1 198 1 33 2 203 1 128 5 177 4 243 5 
321 1 113 1 123 2 287 1 128 2 22 2 177 2 243 2 
0 1 117 1 
0 1 117 1 
160 1 254 1 
160 1 254 1 
160 1 254 1 
0 1 88 1 117 1 
0 1 88 1 117 1 
0 1 313 1 117 1 
0 2 160 1 241 1 117 2 254 1 274 1 
0 1 88 1 117 1 
0 1 86 1 117 1 
0 1 86 1 117 1 
0 1 86 1 117 1 
0 2 42 2 7 3 23 1 116 2 317 1 318 1 117 2 66 1 274 1 196 1 29 1 28 2 10 1 301 2 173 2 305 2 157 2 90 1 
0 1 42 1 7 1 116 1 117 1 297 1 123 2 301 1 303 1 173 1 128 2 305 1 177 2 182 1 187 1 313 1 22 2 233 1 278 1 275 1 196 1 240 1 243 2 157 1 
190 1 294 1 15 1 
190 1 15 1 73 1 
112 1 169 1 190 3 294 2 245 1 73 1 
112 1 169 1 81 1 190 2 294 1 73 1 
112 1 169 2 190 2 294 1 73 1 
111 1 2 4 212 1 215 1 297 1 171 2 126 1 303 1 83 3 50 2 174 1 129 1 12 1 305 5 130 2 307 1 52 1 14 1 136 2 137 1 271 1 315 1 235 1 318 2 278 1 195 1 322 1 104 1 69 1 150 3 157 5 209 1 
111 1 2 7 212 3 161 1 216 1 297 4 171 6 83 9 50 6 174 2 12 6 305 9 129 2 13 1 307 3 52 2 14 1 270 1 136 6 137 1 315 2 235 3 318 5 65 1 195 1 322 3 104 3 69 3 150 8 107 1 206 1 36 5 155 5 157 9 209 2 
111 1 113 1 2 2 212 1 297 1 123 1 124 1 126 1 171 2 50 2 83 4 128 1 174 1 129 1 305 3 130 1 177 1 307 1 52 1 270 1 136 2 271 1 22 1 144 1 315 1 235 2 273 1 318 3 321 1 322 1 69 1 104 1 150 3 243 1 74 1 157 3 209 1 
2 1 212 1 297 1 171 2 126 1 83 4 50 2 174 1 129 1 305 2 130 1 307 1 52 1 270 1 136 2 271 1 315 1 235 2 318 2 322 1 69 1 104 1 150 3 206 1 157 2 209 1 
25 1 
94 1 154 1 
326 1 
94 1 158 1 
5 1 94 3 164 2 268 1 101 1 158 1 
94 1 268 1 158 1 
94 1 11 1 
229 1 185 2 19 1 139 3 212 1 252 4 168 3 319 1 299 7 259 1 104 1 48 1 261 1 151 1 325 2 109 1 16 1 
229 1 185 2 19 1 139 3 212 1 252 4 168 3 319 1 299 7 259 1 104 1 48 1 261 1 151 1 325 2 109 1 16 1 
229 1 185 2 19 1 139 3 212 1 252 4 192 1 168 3 319 1 299 7 259 1 104 1 48 1 261 1 151 1 325 2 109 1 16 1 
246 1 4 1 212 4 291 1 252 16 118 2 168 15 299 31 218 1 47 3 259 1 219 1 48 2 261 2 307 3 16 1 229 5 185 5 19 1 139 10 62 4 272 1 193 1 319 2 320 1 322 3 69 3 104 4 70 1 151 2 325 3 109 1 284 1 286 1 
4 2 212 1 252 5 118 4 168 4 299 9 218 2 259 1 48 1 261 1 16 1 229 1 185 3 139 4 19 1 234 1 272 2 193 1 319 1 320 2 104 1 105 1 151 1 325 2 
92 1 201 1 204 1 9 1 237 1 
201 1 224 1 204 1 9 1 237 1 
175 1 9 1 237 1 89 1 
201 1 224 1 204 1 9 1 237 1 
92 1 201 1 204 1 9 1 237 1 
26 1 
247 1 76 1 77 1 162 2 165 1 256 1 82 2 262 1 174 1 12 2 87 1 179 1 14 1 183 1 94 1 195 1 199 1 209 1 288 1 40 1 289 1 290 1 293 1 120 1 123 1 302 2 50 2 128 1 305 3 129 1 225 2 306 1 53 1 228 1 312 1 134 2 315 1 321 1 150 2 242 1 243 1 158 1 157 3 
247 1 40 1 288 1 290 1 256 1 123 1 262 1 128 1 305 3 265 1 12 2 306 1 87 1 179 1 14 1 228 1 134 2 321 1 199 1 205 1 243 1 157 3 
247 1 111 1 40 1 288 1 290 1 256 1 123 1 262 1 128 1 12 1 305 3 306 1 87 1 179 1 14 1 228 1 134 3 141 1 318 1 321 1 199 1 205 1 243 1 157 3 
247 1 111 1 40 1 288 1 290 1 214 1 256 1 123 1 262 1 128 1 305 3 265 1 12 2 306 1 87 1 179 1 14 1 228 1 134 3 141 1 318 1 321 1 199 1 205 1 243 1 157 3 
247 1 75 1 76 1 40 1 288 1 290 1 214 2 256 1 123 1 220 1 50 1 262 1 174 1 128 1 129 1 12 3 305 3 265 2 306 1 87 1 179 1 14 1 228 1 134 2 17 1 315 1 195 1 321 1 150 1 199 1 205 1 242 1 108 1 243 1 208 1 157 3 
247 1 76 1 40 1 288 1 290 1 256 1 123 1 50 1 262 1 174 1 128 1 129 1 305 2 306 1 87 1 179 1 228 1 134 2 315 1 195 1 321 1 150 1 199 1 242 1 243 1 157 2 
247 1 76 1 40 1 288 1 290 1 256 1 123 1 220 1 50 1 262 1 174 1 128 1 305 2 129 1 306 1 87 1 179 1 228 1 134 2 17 1 315 1 321 1 195 1 150 1 199 1 242 1 243 1 208 1 157 2 
247 1 76 1 40 1 288 1 290 1 256 1 123 1 220 1 50 1 262 1 174 1 128 1 305 2 129 1 306 1 87 1 179 1 228 1 134 2 17 1 315 1 321 1 195 1 150 1 199 1 242 1 243 1 208 1 157 2 
247 1 40 1 288 1 290 1 256 1 123 1 50 1 262 1 174 1 128 1 305 2 129 1 266 1 306 1 87 1 179 1 180 1 228 1 134 2 315 1 321 1 195 1 27 1 150 1 199 1 242 1 243 1 208 1 157 2 
247 1 76 1 40 1 288 1 290 1 214 1 256 1 123 1 220 1 50 1 262 1 174 1 128 1 129 1 305 2 265 1 12 1 306 1 87 1 179 1 228 1 134 3 17 1 141 1 315 1 195 1 321 1 150 1 199 1 242 1 108 1 243 1 208 1 157 2 
247 1 76 1 40 1 288 1 290 1 214 1 256 1 123 1 220 1 50 1 262 1 174 1 128 1 129 1 305 2 265 1 12 1 306 1 87 1 179 1 228 1 134 3 17 1 141 1 315 1 195 1 321 1 150 1 199 1 242 1 108 1 243 1 208 1 157 2 
247 1 40 1 288 1 290 1 256 1 123 1 50 1 262 1 174 1 128 1 129 1 305 2 306 1 266 1 87 1 179 1 228 1 134 2 315 1 195 1 321 1 150 1 199 1 242 1 243 1 157 2 
320 1 218 1 4 1 231 1 272 1 25 1 118 2 55 1 166 1 
210 1 4 2 212 1 252 8 118 4 253 11 167 1 168 6 166 1 299 14 45 4 218 2 47 3 219 1 260 11 49 1 307 1 132 1 55 2 182 1 229 1 185 1 139 2 188 1 62 3 189 1 24 1 272 2 320 2 322 2 69 2 104 2 286 1 
210 1 4 1 77 1 162 1 252 1 118 2 120 1 166 1 168 1 167 1 45 1 299 2 123 1 218 1 302 1 82 1 172 1 263 1 128 2 225 1 177 1 268 1 55 1 182 1 188 1 94 1 22 1 272 1 99 1 102 1 320 1 103 1 197 1 149 1 33 1 202 1 243 2 158 1 
4 3 77 2 162 3 252 10 253 7 167 1 168 10 166 3 259 1 82 1 260 7 261 1 172 2 84 1 177 1 268 2 16 1 182 2 185 4 19 1 188 1 94 2 22 1 272 3 100 1 99 1 102 2 104 3 33 1 202 2 210 1 212 3 292 2 118 6 120 2 299 20 298 2 121 2 45 7 218 3 123 1 302 3 128 3 225 3 307 2 55 3 229 4 230 1 139 8 319 1 320 3 322 2 238 1 239 2 69 2 153 2 325 1 243 3 158 2 
210 1 4 2 289 1 77 2 162 8 252 1 293 1 118 4 120 2 166 2 167 1 168 1 299 2 123 1 218 2 302 7 82 2 128 1 225 8 177 1 55 2 269 1 181 1 57 1 231 1 94 3 22 1 95 1 272 2 236 1 279 1 320 2 238 1 33 1 106 1 34 1 243 1 244 2 158 2 
4 1 212 1 252 1 118 2 253 1 166 1 168 2 45 1 299 3 218 1 123 1 260 1 128 1 177 1 307 1 55 1 185 1 139 1 188 1 22 1 272 1 273 1 320 1 322 1 69 1 104 1 198 1 243 1 110 1 
229 1 139 1 231 1 4 1 252 2 272 1 118 2 253 1 166 1 45 1 299 2 320 1 218 1 30 1 260 1 69 1 104 1 55 1 
185 1 139 1 231 1 4 1 115 1 212 1 272 1 118 2 253 1 166 1 168 2 45 1 299 2 320 1 218 1 260 1 307 1 55 1 
229 1 185 1 139 2 231 1 4 1 212 1 252 2 272 1 118 2 253 2 168 2 166 1 45 2 299 4 320 1 218 1 322 1 260 2 69 1 104 1 307 1 55 1 
229 1 57 1 139 1 4 1 252 2 272 1 118 2 253 1 166 1 45 1 299 2 320 1 218 1 30 1 260 1 69 1 104 1 55 1 
57 1 185 1 139 1 4 1 115 1 212 1 272 1 118 2 253 1 166 1 168 2 45 1 299 2 320 1 218 1 260 1 307 1 55 1 
229 1 57 1 185 1 139 2 4 1 212 1 252 2 272 1 118 2 253 2 168 2 166 1 45 2 299 4 320 1 218 1 322 1 260 2 69 1 104 1 307 1 55 1 
229 1 185 1 139 2 4 1 212 1 252 2 272 1 118 2 253 2 168 2 166 1 45 2 299 4 320 1 218 1 322 1 260 2 69 1 104 1 307 1 55 1 
210 1 4 1 77 1 252 1 162 1 118 2 167 1 120 1 166 1 168 1 299 2 298 1 218 1 302 1 82 1 172 1 128 1 225 1 268 1 55 1 182 1 94 1 272 1 102 1 320 1 202 1 243 1 158 1 
210 1 4 1 77 1 252 1 162 1 295 1 118 2 167 1 120 1 166 1 168 1 299 2 218 1 302 1 82 1 128 1 225 1 268 1 55 1 182 1 91 1 94 1 191 1 272 1 102 1 320 1 243 1 158 1 
229 1 185 1 139 2 188 1 4 1 212 1 252 2 272 1 118 2 253 2 168 2 166 1 45 2 299 4 320 1 218 1 322 1 260 2 69 1 104 1 307 1 55 1 
4 1 212 1 77 1 252 2 162 1 118 2 253 2 168 2 120 1 166 1 45 2 299 4 298 1 218 1 260 2 302 1 172 1 128 1 225 1 307 1 268 1 55 1 229 1 185 1 139 2 94 1 272 1 236 1 102 1 320 1 322 1 104 1 69 1 239 1 202 1 243 1 158 1 
4 1 212 1 252 2 118 2 253 1 168 1 166 1 299 3 45 1 218 1 123 1 260 1 128 1 307 1 177 1 55 1 229 1 139 1 188 1 61 1 22 1 272 1 273 1 320 1 322 1 69 1 104 1 198 1 243 1 
4 2 212 1 252 4 118 4 168 5 299 9 218 2 47 1 125 1 219 1 170 1 127 1 264 1 307 1 229 1 185 1 139 2 63 1 62 2 272 2 147 1 320 2 322 1 105 1 69 1 104 1 31 1 35 1 286 1 
4 1 62 1 252 2 272 1 118 2 147 1 168 2 299 4 320 1 47 1 218 1 125 2 170 1 105 1 127 1 264 2 286 1 
4 2 212 1 252 4 118 4 168 5 299 9 218 2 47 1 125 1 219 1 170 1 127 1 264 1 307 1 229 1 184 1 185 1 139 2 63 1 62 2 272 2 147 1 320 2 322 1 105 1 69 1 104 1 31 1 286 1 
4 2 212 1 252 4 118 4 168 5 299 9 218 2 47 1 125 1 219 1 170 1 127 1 264 1 307 1 229 1 184 1 185 1 139 2 63 1 62 2 272 2 147 1 320 2 322 1 105 1 69 1 104 1 31 1 286 1 
4 1 212 1 252 5 118 2 168 4 299 9 218 1 47 1 125 1 259 1 170 1 127 1 261 1 264 1 16 1 185 1 139 1 19 1 62 1 272 1 147 1 319 1 320 1 104 1 105 1 325 1 286 1 
0 1 301 1 38 1 173 1 42 1 23 1 116 1 117 1 66 1 274 1 
187 1 313 1 
0 1 301 1 32 1 249 1 173 1 42 1 178 1 116 1 117 1 
0 1 42 1 7 2 23 1 116 1 317 1 318 1 117 1 66 1 274 1 196 1 28 1 10 1 301 1 173 1 305 1 157 1 90 1 
0 1 42 1 7 2 23 1 116 1 317 1 318 1 117 1 66 1 274 1 196 1 28 1 10 1 301 1 173 1 305 1 157 1 90 1 
0 1 42 1 7 2 23 1 116 1 317 1 318 1 117 1 66 1 274 1 196 1 28 1 10 1 301 1 173 1 305 1 157 1 90 1 
241 1 88 1 194 1 
241 1 88 1 194 1 
86 1 78 1 
241 1 86 1 78 1 
240 1 275 1 
0 1 2 1 42 1 7 1 116 1 117 1 297 1 123 2 301 1 303 1 173 1 128 2 176 1 305 1 177 2 90 1 182 1 187 1 313 1 233 1 22 2 278 1 275 1 28 1 240 1 243 2 157 1 
88 1 194 1 
241 1 86 1 78 1 
210 1 4 1 77 1 162 2 252 1 118 2 120 1 166 1 167 1 168 1 299 2 123 2 218 1 300 1 302 2 128 2 225 2 55 1 56 1 181 1 188 1 94 1 272 1 320 1 282 1 283 1 34 1 285 1 243 2 244 2 158 1 
3 1 60 1 211 1 20 1 190 2 77 1 162 2 294 1 145 1 236 1 120 1 238 1 221 1 302 2 225 2 15 1 227 1 245 1 73 1 
3 1 60 1 20 1 190 2 64 1 77 1 162 1 294 1 120 1 238 1 221 1 302 1 225 1 15 1 227 1 245 1 73 1 
58 1 60 1 94 1 289 1 77 1 162 1 96 1 293 1 145 1 120 1 82 1 302 1 225 1 158 1 
3 1 60 1 211 1 20 1 190 2 77 1 162 1 294 1 145 1 120 1 238 1 221 1 302 1 225 1 15 1 227 1 245 1 73 1 
138 1 
25 1 
111 1 76 1 80 1 50 1 83 1 174 1 129 1 12 1 305 1 14 1 315 1 235 1 318 2 195 1 323 1 150 1 157 1 
6 2 77 4 162 3 164 2 79 2 171 6 82 1 83 12 11 2 174 4 85 2 12 5 14 3 268 3 18 1 186 1 94 10 93 2 98 1 101 1 277 2 195 4 104 2 209 2 111 2 37 1 290 2 212 2 292 2 120 3 46 1 302 3 50 8 51 2 129 4 225 3 305 5 307 2 53 1 136 6 232 2 143 1 315 4 235 6 146 1 318 8 236 1 322 2 69 2 150 9 152 2 154 3 158 3 157 5 
111 2 159 1 251 1 212 2 296 1 258 1 47 1 171 5 83 6 50 5 174 2 305 1 12 1 129 2 226 1 307 2 53 1 14 1 311 1 136 5 93 1 62 1 315 2 235 3 318 5 67 1 195 2 322 2 69 2 104 2 150 8 152 2 286 1 209 1 157 1 
113 1 248 1 212 1 124 1 123 1 220 1 50 2 261 1 128 1 174 1 129 1 305 1 177 1 19 1 93 1 22 1 315 1 144 1 273 1 319 1 321 1 195 1 104 2 150 2 152 2 243 1 157 1 74 1 
111 1 18 1 315 1 98 1 318 1 195 1 50 1 150 1 174 1 129 1 
136 5 93 1 212 2 292 1 235 5 318 5 322 2 171 5 69 2 104 2 50 5 83 10 150 5 152 2 307 2 
111 1 305 1 12 1 318 1 14 1 157 1 
39 1 289 1 43 1 77 3 162 4 293 1 44 1 165 1 120 2 302 4 82 2 50 2 174 2 129 2 225 4 12 4 305 3 53 2 14 2 54 1 268 1 308 1 312 1 270 1 186 2 94 2 143 1 315 2 195 1 280 1 150 2 158 2 209 2 157 3 
210 1 4 1 77 1 162 1 118 2 168 1 120 1 166 1 299 1 298 1 218 1 123 2 302 1 82 1 172 1 128 3 225 1 177 2 268 1 55 1 182 1 94 1 22 2 144 1 272 1 273 2 102 1 320 1 202 1 243 3 156 1 158 1 
111 2 136 2 315 1 235 2 318 4 195 1 171 2 83 4 50 2 150 1 174 1 129 1 325 1 53 1 209 1 
301 1 200 1 173 1 
301 1 200 1 173 1 
301 1 173 1 66 1 275 1 310 1 
301 1 200 1 173 1 
301 1 173 1 97 1 
301 1 173 1 97 1 
301 1 173 1 97 1 
301 1 173 1 
0 1 117 1 
229 1 185 2 19 1 139 3 4 2 212 1 252 4 272 2 118 4 193 1 168 4 319 1 299 8 320 2 218 2 259 1 104 1 261 1 325 1 16 1 
25 1 
229 1 185 1 139 2 4 1 212 1 252 2 272 1 118 2 168 2 299 4 320 1 218 1 322 1 281 1 69 1 104 1 307 1 
47 1 62 1 252 1 286 1 168 1 299 2 
4 1 212 3 252 9 118 2 168 9 299 18 47 2 218 1 259 1 219 1 261 1 307 2 132 1 16 1 229 1 185 3 19 1 139 4 62 2 189 1 272 1 193 1 319 1 320 1 322 2 104 3 69 2 325 1 
62 1 168 1 299 1 
47 1 252 1 299 1 
229 1 185 2 4 1 139 3 212 1 292 1 252 3 272 1 118 2 168 3 299 6 320 1 218 1 322 1 281 1 69 1 104 1 307 1 
159 1 4 1 212 2 251 1 252 6 118 2 168 6 299 12 47 1 218 1 226 1 307 2 311 1 229 1 185 1 139 2 62 1 272 1 320 1 67 1 322 2 105 1 69 2 104 2 286 1 
229 1 185 1 19 1 139 2 212 1 252 3 168 3 319 1 299 6 104 1 261 1 
229 1 185 1 139 2 4 1 252 1 272 1 193 1 118 2 319 1 168 2 299 3 320 1 218 1 259 1 261 1 324 1 16 1 
229 2 185 3 4 1 139 5 19 1 248 1 212 2 252 5 272 1 118 2 319 2 168 5 299 10 320 1 218 1 105 1 104 2 261 2 
229 1 4 1 139 1 252 2 272 1 118 2 299 2 320 1 218 1 105 1 69 1 104 1 
229 1 185 1 139 2 4 1 212 1 252 2 272 1 118 2 168 2 299 4 320 1 218 1 322 1 105 1 69 1 104 1 307 1 
229 1 185 1 4 3 139 2 252 1 272 3 193 1 118 6 168 2 319 1 299 3 320 3 218 3 105 1 31 1 324 1 261 1 
246 1 4 5 291 1 212 5 252 16 118 10 168 18 299 34 218 5 47 3 259 1 219 1 261 3 307 3 16 1 229 5 185 7 19 2 139 12 62 4 272 5 193 2 319 3 320 5 322 3 281 1 105 1 69 3 104 5 31 1 324 1 325 1 284 1 286 1 
4 1 212 1 252 4 118 2 168 4 299 8 47 1 218 1 259 1 261 1 226 1 16 1 185 2 139 2 19 1 62 1 272 1 319 1 320 1 104 1 105 1 325 1 286 1 
4 2 212 1 252 6 118 4 168 5 299 11 218 2 47 1 259 1 219 1 261 1 226 1 16 1 229 1 185 2 19 1 139 3 62 2 272 2 319 1 320 2 322 1 281 1 105 1 69 1 104 2 325 1 286 1 
320 1 47 1 218 1 4 1 105 1 62 1 252 1 226 1 272 1 286 1 118 2 168 1 299 2 
159 1 4 3 212 2 251 1 252 10 118 6 168 7 299 17 47 1 218 3 259 1 261 1 226 1 307 1 16 1 311 1 229 2 185 2 19 1 139 4 62 1 272 3 193 1 319 1 320 3 67 1 322 2 281 1 105 1 69 2 104 3 325 1 286 1 
4 1 212 1 252 4 118 2 168 4 299 8 47 1 218 1 259 1 261 1 226 1 16 1 185 2 139 2 19 1 62 1 272 1 319 1 320 1 104 1 105 1 325 1 286 1 
320 1 47 1 218 1 4 1 105 1 62 1 252 1 226 1 272 1 286 1 118 2 168 1 299 2 
159 1 4 4 251 1 212 2 252 10 118 8 168 8 299 18 218 4 47 1 259 1 261 1 226 1 307 1 16 1 311 1 229 2 185 3 19 1 139 5 62 1 272 4 193 2 319 1 67 1 320 4 322 2 281 1 105 1 69 2 104 3 325 1 286 1 
159 1 4 4 251 1 212 2 252 9 118 8 168 7 299 16 218 4 47 1 226 1 307 2 311 1 229 3 185 3 139 6 62 1 272 4 193 2 67 1 320 4 322 3 105 1 69 3 104 3 31 1 286 1 
229 3 185 3 139 6 19 1 212 1 252 3 168 4 319 3 299 7 259 2 104 1 261 3 16 1 
159 1 4 4 251 1 212 2 252 10 118 8 168 8 299 18 218 4 47 1 259 1 261 1 226 1 307 1 16 1 311 1 229 1 185 3 19 1 139 4 62 1 272 4 193 2 319 1 67 1 320 4 322 2 105 1 69 2 104 3 31 1 325 1 286 1 
182 1 123 1 199 1 128 1 203 1 243 1 148 1 
182 1 135 1 59 1 140 1 213 1 148 1 123 1 199 1 203 1 128 1 243 1 72 1 
302 1 82 1 225 1 162 1 25 1 
182 1 94 1 77 1 22 1 162 1 102 1 120 1 123 1 82 1 302 1 33 1 128 2 202 1 225 1 177 1 243 2 268 1 158 1 
182 1 186 1 94 3 77 1 22 2 162 1 102 1 120 1 321 1 123 2 302 1 11 1 33 1 51 1 128 2 202 1 225 1 306 1 177 1 243 2 268 2 228 1 158 2 
182 1 186 1 94 3 77 1 22 2 162 2 191 1 102 1 120 1 321 1 123 2 302 2 11 1 33 1 51 1 128 2 225 2 306 1 177 1 131 1 243 2 268 2 228 1 158 2 
111 1 250 1 77 1 290 1 162 3 164 1 120 1 302 3 82 1 11 1 51 1 12 1 225 3 305 2 131 1 268 1 186 1 94 4 316 1 318 1 154 1 157 2 158 1 
111 1 186 1 94 4 290 1 77 1 162 3 164 1 318 1 277 1 120 1 82 1 302 3 11 1 51 1 305 2 225 3 12 1 131 1 154 1 268 1 158 1 157 2 
302 1 77 1 106 1 225 1 162 1 120 1 
77 3 162 7 44 1 120 2 302 6 82 2 225 7 268 1 54 1 269 1 94 3 95 1 101 1 236 1 279 1 238 1 106 1 34 1 327 1 244 1 158 2 
4 2 77 1 162 1 252 3 253 1 166 2 168 3 259 1 260 1 172 1 261 1 177 1 268 1 16 1 182 2 185 2 188 1 19 1 94 1 22 1 272 2 102 1 104 1 33 1 202 1 212 1 118 4 120 1 45 1 298 1 299 6 218 2 123 1 300 1 302 1 128 2 225 1 55 2 139 2 236 1 319 1 320 2 239 1 153 1 325 1 243 2 158 1 
111 1 2 1 290 1 162 1 164 1 79 1 302 1 82 1 50 1 174 2 129 2 305 3 225 1 85 1 12 2 14 1 18 1 232 1 143 1 94 2 315 2 98 1 318 1 277 1 195 2 150 1 154 1 157 3 
94 2 77 2 162 2 164 1 146 1 236 1 101 1 120 1 302 2 106 1 225 2 268 1 158 1 
302 4 82 1 94 1 289 1 77 1 225 4 162 4 293 1 131 1 133 1 236 1 120 1 158 1 
186 1 39 1 94 1 77 2 162 2 44 1 100 1 120 1 302 2 225 2 54 1 308 1 268 1 158 1 
221 1 302 1 82 1 190 1 77 1 225 1 162 1 15 1 120 1 73 1 
94 1 77 1 162 2 236 1 120 1 238 1 302 2 283 1 225 2 34 1 158 1 
186 1 289 1 94 3 77 2 162 5 95 1 293 1 236 1 120 2 82 1 302 4 225 5 34 1 133 1 158 2 269 1 
186 1 289 1 94 3 21 1 77 2 162 5 293 1 236 1 120 2 82 1 302 4 225 5 34 1 133 1 158 2 269 1 
182 1 94 1 77 1 22 1 162 1 191 1 102 1 120 1 123 1 82 1 302 1 33 1 128 2 225 1 177 1 243 2 268 1 158 1 
186 1 94 1 77 2 162 1 44 1 101 1 120 1 302 1 225 1 327 1 54 1 268 1 158 1 
123 1 282 1 128 1 285 1 207 1 243 1 267 1 276 1 56 1 
71 1 267 1 309 1 
182 1 68 1 207 1 267 1 276 1 
182 1 111 1 2 1 290 1 314 1 318 1 255 1 276 2 321 1 68 2 305 2 306 1 87 1 71 1 207 2 267 1 309 1 228 1 157 2 

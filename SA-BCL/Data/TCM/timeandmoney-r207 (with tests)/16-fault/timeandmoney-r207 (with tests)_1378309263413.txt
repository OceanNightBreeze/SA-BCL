#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (0,13) (0,13) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (0,13) (0,13) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (0,13) (0,13) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (0,13) (0,13) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (37,328) 108 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (143,216) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 131 (57,74,236) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (57,74,236) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (143,216) (143,216) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (143,216) (143,216) 194 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 305 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 131 221 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 175 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (85,200,266) (85,200,266) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (103,199) (154,260) (154,260) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 237 315 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 71 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 71 169 281 261 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 71 169 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 71 6 204 (132,288) (105,193) (105,193) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 71 6 204 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 131 (57,74,236) 229 334 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 18 327 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 305 69 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 305 (37,328) (37,328) (53,273) 278 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (37,328) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 139 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (37,328) (37,328) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (103,199) (103,199) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (103,199) (154,260) (154,260) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (103,199) (154,260) (154,260) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (103,199) (154,260) (154,260) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 237 315 183 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 71 158 316 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 71 6 204 (132,288) (132,288) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 71 169 281 172 123 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (143,216) (143,216) 194 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 71 6 204 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (37,328) 108 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 131 221 291 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 131 221 291 176 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 162 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 71 169 31 (87,101) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 14 (87,101) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 14 (38,44) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 71 169 281 156 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 71 169 31 (38,44) 305 (37,328) (37,328) (53,273) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 14 (38,44) 112 82 (53,273) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 71 169 281 172 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 71 6 204 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 71 169 277 177 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 71 158 316 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 71 158 173 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 71 158 148 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 71 169 31 (87,101) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 71 169 281 156 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (143,216) (143,216) 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 747 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
258 1 285 1 13 1 0 1 86 1 313 1 222 1 289 1 252 1 255 1 331 1 
258 1 285 1 13 1 0 1 86 1 313 1 222 1 289 1 252 1 255 1 331 1 
258 1 285 1 13 1 0 1 86 1 313 1 222 1 289 1 252 1 255 1 331 1 
258 1 285 1 13 1 0 1 86 1 313 1 222 1 289 1 252 1 255 1 331 1 
121 1 51 2 313 1 88 3 222 4 289 1 91 1 265 1 230 1 271 1 39 1 168 1 252 1 275 3 196 1 255 4 45 2 25 1 
285 1 258 1 313 1 88 1 222 2 289 1 32 1 127 1 224 1 230 1 168 1 215 1 252 1 196 1 255 2 25 1 
258 1 313 2 88 2 222 3 289 2 110 1 230 1 39 1 252 1 275 1 196 1 255 3 45 1 
121 1 51 2 88 5 289 2 91 1 295 1 168 1 252 1 23 1 255 9 25 1 179 1 258 1 313 2 222 9 110 1 265 1 230 1 271 1 39 3 275 7 196 1 45 4 240 1 
121 1 51 2 88 5 289 2 91 1 295 1 168 1 252 1 23 1 255 9 25 1 179 1 258 1 313 2 222 9 110 1 265 1 230 1 271 1 39 3 275 7 196 1 45 4 240 1 
243 1 162 1 308 1 
142 2 43 1 308 1 
29 1 227 2 
108 1 29 1 219 1 37 1 227 1 96 2 250 2 77 1 279 2 280 1 81 1 
29 1 216 1 227 1 
131 1 236 1 
57 1 227 1 
16 1 74 1 192 1 118 1 50 1 
243 1 16 2 74 2 192 1 149 1 308 1 242 1 118 1 
16 1 74 1 192 1 
29 1 16 1 74 1 143 1 216 1 118 1 227 1 
308 1 
243 1 16 2 74 2 192 1 149 1 308 1 36 1 118 1 
286 2 243 2 1 1 126 2 290 1 165 1 166 1 302 1 16 5 21 1 216 1 308 2 63 3 138 2 29 1 143 1 67 4 182 1 184 1 149 1 227 1 232 2 74 5 75 1 192 2 194 1 197 2 48 1 118 2 119 1 
140 1 31 1 181 1 318 1 111 1 292 1 207 1 164 1 12 1 71 1 96 1 250 1 305 1 214 1 169 1 44 1 279 1 280 1 
162 1 
111 1 164 1 151 1 12 1 227 1 298 1 59 1 239 1 62 1 
140 2 318 2 111 2 164 2 207 1 151 1 12 2 227 1 298 1 239 1 
84 1 140 1 239 1 111 1 318 1 164 1 12 1 
59 1 62 1 227 1 
140 1 181 1 318 1 111 1 207 1 164 1 12 1 227 1 297 1 299 1 231 1 57 1 239 1 62 1 104 1 
140 1 131 1 221 1 111 1 318 1 164 1 207 1 12 1 
140 1 181 1 318 1 111 1 207 1 164 1 12 1 299 1 231 1 57 1 239 1 175 1 104 1 
62 1 227 1 
96 1 250 1 279 1 280 1 
96 1 250 1 279 1 280 1 
311 1 76 1 41 2 58 1 133 1 8 1 218 1 26 1 
140 1 318 1 111 1 164 1 12 1 153 1 231 1 239 1 
140 1 318 1 111 1 207 1 164 1 151 1 12 1 227 1 298 1 239 1 62 1 
84 1 140 1 239 1 111 1 318 1 164 1 12 1 
73 1 200 1 
73 1 200 1 
85 1 129 1 
85 1 129 1 
85 1 129 1 
73 1 200 1 267 1 
73 1 200 1 267 1 
85 1 73 2 200 2 129 1 
73 1 200 1 266 1 
73 1 200 1 267 1 
73 1 200 1 7 1 
73 1 200 1 7 1 
73 1 200 1 7 1 
199 1 198 2 64 2 260 1 30 1 320 1 70 1 323 2 189 2 154 1 74 2 16 2 308 1 47 2 
140 1 198 1 64 1 30 1 315 1 92 1 111 1 318 1 164 1 12 1 323 1 209 1 189 1 74 1 16 1 213 1 237 1 47 1 
271 1 168 1 25 1 
168 1 32 1 25 1 
257 1 271 2 168 3 19 1 32 1 293 1 
271 1 168 2 19 1 32 1 293 1 94 1 
271 1 168 2 19 1 32 1 293 2 
286 1 243 1 1 1 5 1 126 1 125 1 92 1 246 1 9 1 93 1 165 1 209 1 15 1 16 5 17 1 213 1 308 2 63 2 138 1 310 2 142 3 220 2 145 1 67 3 149 1 74 5 235 2 192 1 43 1 79 1 197 1 118 4 
243 1 286 2 1 3 124 1 5 3 126 3 125 2 246 3 165 1 56 1 15 3 16 9 213 4 17 2 61 1 308 5 63 6 138 2 310 6 142 9 220 6 67 8 149 1 185 1 74 9 40 5 192 6 78 1 80 1 43 3 79 1 197 2 48 1 118 7 50 5 
243 1 286 1 1 1 5 1 126 1 125 1 246 1 93 1 16 3 15 1 17 1 213 1 308 3 63 2 138 1 310 2 142 4 220 2 145 1 67 3 74 3 235 1 43 2 197 1 48 1 118 2 
243 1 286 1 1 2 5 2 126 2 125 1 246 2 93 1 56 1 16 4 15 2 17 1 213 2 61 1 308 4 63 4 138 1 310 4 142 7 220 4 145 1 67 5 74 4 235 2 43 3 80 1 197 1 48 1 118 3 
162 1 90 1 
14 1 
28 1 
71 1 
71 1 261 1 169 1 281 1 
71 1 169 1 
170 1 
1 1 223 3 182 1 126 1 245 1 317 2 206 1 113 1 228 7 322 1 302 1 130 3 21 1 135 2 217 1 178 4 120 1 
1 1 223 3 182 1 126 1 245 1 317 2 206 1 113 1 228 7 322 1 302 1 130 3 21 1 135 2 217 1 178 4 120 1 
1 1 223 3 182 1 126 1 245 1 317 2 206 1 113 1 228 7 322 1 302 1 130 3 21 1 135 2 217 1 178 4 333 1 120 1 
1 4 5 3 3 1 245 2 126 4 246 3 206 2 8 1 302 2 211 1 15 3 97 1 130 10 21 2 60 1 217 1 135 5 218 1 178 16 26 1 137 1 107 1 65 3 314 1 182 1 223 15 317 3 113 5 322 1 228 31 114 4 76 1 41 2 120 1 
1 1 126 1 245 1 206 1 247 1 8 2 302 1 130 4 21 1 135 3 217 1 256 1 218 2 26 2 178 5 137 1 223 4 182 1 317 2 113 1 228 9 322 1 76 2 41 4 
88 1 160 1 289 1 292 1 128 1 96 1 210 1 250 1 214 1 168 2 252 1 255 2 22 1 25 1 257 1 258 1 141 1 313 1 222 2 32 1 34 1 35 1 268 1 230 1 271 1 155 1 275 1 238 1 196 1 279 1 
88 1 289 1 292 1 96 1 210 1 250 1 214 1 168 2 255 3 22 1 25 1 257 1 259 1 258 1 141 1 313 1 222 3 32 1 34 1 35 1 268 1 230 1 271 1 272 1 270 1 155 1 275 2 238 1 196 1 279 1 
88 1 292 1 96 1 210 1 250 1 214 1 168 2 255 2 25 1 257 1 258 1 141 1 222 2 32 1 34 1 35 1 268 1 230 1 272 1 270 1 271 1 155 1 275 2 196 1 279 1 
258 2 259 1 141 2 313 1 222 1 289 1 6 1 204 1 35 2 71 1 96 1 155 2 250 1 193 1 132 1 195 1 255 1 279 1 280 1 105 1 
289 1 292 1 128 1 96 1 210 1 250 1 214 1 168 2 252 1 255 1 22 1 25 1 257 1 258 1 141 1 313 1 222 1 32 1 34 1 35 1 268 1 271 1 272 1 155 1 238 1 279 1 
100 1 
286 1 180 1 67 1 6 1 204 1 149 1 165 1 71 1 248 1 74 2 16 2 96 2 17 1 250 2 192 2 197 1 279 2 280 2 63 1 332 1 138 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 2 74 2 131 1 236 1 191 1 192 1 149 1 36 1 186 1 334 1 
286 1 165 1 186 1 229 1 74 1 16 1 131 1 191 1 236 1 197 1 334 1 138 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
229 1 16 1 74 1 131 1 236 1 191 1 186 1 334 1 
286 1 165 1 186 1 229 1 74 1 16 1 131 1 191 1 236 1 197 1 334 1 138 1 
311 1 1 1 162 1 182 1 317 1 8 1 228 2 322 1 302 1 130 1 76 1 21 1 133 1 58 1 41 2 135 1 217 1 178 2 26 1 218 1 
65 1 311 1 161 1 223 1 8 1 228 2 114 1 76 1 18 1 58 1 41 2 327 1 178 1 26 1 218 1 
161 1 292 1 294 1 164 1 207 1 8 1 11 1 12 1 96 1 305 1 250 1 214 1 169 1 58 1 24 1 26 1 218 1 178 1 140 1 311 1 31 1 181 1 223 1 111 1 318 1 150 1 69 1 228 2 71 1 188 1 76 1 41 2 44 1 279 1 280 1 330 1 
161 1 53 1 292 1 164 1 207 1 8 1 12 1 96 1 305 1 250 1 214 1 169 1 58 1 26 1 218 1 140 1 311 1 31 1 181 1 223 1 111 1 318 1 150 1 37 1 228 1 71 1 76 1 41 2 44 1 328 1 279 1 278 1 280 1 
311 1 8 1 187 1 228 1 188 1 96 1 250 1 76 1 58 1 41 2 279 1 280 1 134 1 178 1 26 1 218 1 
311 1 1 1 146 1 161 1 223 1 5 1 126 1 246 1 8 1 228 2 227 1 15 1 76 1 58 1 41 2 178 1 26 1 218 1 62 1 
311 1 1 1 5 1 8 1 321 1 228 1 76 1 133 1 58 1 41 2 26 1 218 1 178 1 
311 1 223 1 126 1 246 1 8 1 208 1 228 1 76 1 133 1 58 1 41 2 26 1 218 1 
311 1 1 1 223 1 5 1 126 1 246 1 8 1 228 2 15 1 76 1 133 1 58 1 41 2 26 1 218 1 178 1 
311 1 1 1 5 1 8 1 321 1 187 1 228 1 76 1 58 1 41 2 26 1 218 1 178 1 
311 1 223 1 126 1 246 1 8 1 187 1 208 1 228 1 76 1 58 1 41 2 26 1 218 1 
311 1 1 1 223 1 5 1 126 1 246 1 8 1 187 1 228 2 15 1 76 1 58 1 41 2 26 1 218 1 178 1 
311 1 1 1 223 1 5 1 126 1 246 1 8 1 228 2 15 1 76 1 58 1 41 2 26 1 218 1 178 1 
96 1 250 1 279 1 280 1 37 1 
139 1 96 1 250 1 279 1 280 1 
311 1 1 1 161 1 223 1 5 1 126 1 246 1 8 1 228 2 15 1 76 1 58 1 41 2 26 1 218 1 178 1 
96 1 250 1 160 1 328 1 279 1 37 1 
311 1 1 1 161 1 223 1 5 1 126 1 246 1 8 1 228 2 227 1 15 1 76 1 58 1 41 2 178 1 157 1 26 1 218 1 62 1 
244 2 287 1 1 3 5 3 126 3 246 3 8 2 55 1 249 1 211 1 15 3 99 2 98 1 130 6 171 1 307 1 60 1 135 3 256 1 218 2 26 2 178 9 65 1 223 10 113 3 228 19 114 2 76 2 41 4 282 1 
244 1 287 1 202 1 1 3 5 3 126 2 54 1 246 2 8 3 55 2 249 1 15 3 99 4 98 2 130 4 307 1 60 2 135 2 256 1 218 3 26 3 178 14 137 2 65 2 223 12 113 2 226 1 228 26 72 1 114 2 76 3 116 1 41 6 49 1 
244 1 1 5 5 4 246 4 8 3 15 4 249 1 98 2 99 4 171 1 21 1 256 1 178 20 26 3 182 1 113 4 114 4 116 1 41 6 42 1 49 1 287 1 202 1 126 5 54 1 55 1 302 1 211 1 130 8 307 1 60 3 135 4 217 1 218 3 137 1 65 3 223 21 317 1 228 41 226 1 322 1 72 1 76 3 
244 1 202 1 287 1 1 5 5 4 126 4 54 1 246 3 8 4 55 1 302 1 249 1 211 1 15 4 99 4 98 2 130 7 171 1 307 1 21 1 60 3 217 1 135 4 256 1 218 4 26 4 178 20 137 2 65 3 182 1 223 18 317 1 113 3 322 1 226 1 228 38 72 1 114 4 76 4 116 1 42 1 41 8 49 1 
244 1 202 1 287 1 1 8 5 7 126 8 54 1 246 7 8 2 55 1 302 1 249 1 211 2 15 7 99 4 98 1 130 14 307 1 21 1 60 2 217 1 135 7 256 1 218 2 26 2 178 27 137 1 65 4 262 2 182 1 223 25 317 1 113 7 322 1 226 1 228 52 72 1 114 4 76 2 116 1 41 4 49 1 
199 1 189 1 198 1 64 1 103 1 323 1 
237 1 
189 1 198 1 64 1 263 1 323 1 
199 1 198 1 64 1 260 1 30 1 320 1 70 1 323 1 189 1 154 1 74 1 16 1 308 1 47 2 
199 1 198 1 64 1 260 1 30 1 320 1 70 1 323 1 189 1 154 1 74 1 16 1 308 1 47 2 
199 1 198 1 64 1 260 1 30 1 320 1 70 1 323 1 189 1 154 1 74 1 16 1 308 1 47 2 
300 1 
300 1 
312 1 
312 1 
284 1 251 1 
198 1 64 1 315 1 92 1 183 1 320 1 70 1 323 1 209 1 189 1 74 1 16 1 213 1 237 1 47 1 118 1 
300 1 
312 1 
158 1 161 1 205 1 164 2 8 1 12 2 96 2 303 1 250 2 58 1 134 1 26 1 218 1 178 1 311 1 144 1 109 1 316 1 223 1 111 2 150 1 228 2 71 1 188 1 76 1 41 2 279 2 81 2 
257 1 160 1 89 1 32 1 292 1 35 1 268 1 271 1 272 1 96 2 210 1 250 2 168 2 214 1 326 1 279 2 22 1 241 1 25 1 
257 1 32 1 292 1 35 1 268 1 95 1 271 1 272 1 96 1 210 1 250 1 168 2 214 1 326 1 279 1 22 1 25 1 
71 1 96 1 250 1 288 1 132 1 6 1 204 1 279 1 280 1 35 1 241 1 
257 1 89 1 32 1 292 1 35 1 268 1 271 1 272 1 96 1 210 1 250 1 168 2 214 1 326 1 279 1 22 1 241 1 25 1 
324 1 
243 1 162 1 67 1 184 1 308 1 63 1 119 1 
286 1 243 1 203 1 52 1 165 1 16 1 308 2 63 1 138 1 142 1 67 1 264 1 149 1 74 1 192 1 43 1 197 1 
286 1 123 1 165 1 71 1 96 1 250 1 169 1 197 1 279 1 172 1 280 1 281 1 138 1 
286 2 243 2 202 1 2 1 1 2 5 2 126 2 54 1 246 2 165 2 248 1 16 1 15 2 17 1 60 1 308 5 63 5 138 2 310 5 142 6 65 1 220 5 67 8 319 1 149 1 72 1 114 1 74 1 232 2 233 1 192 1 116 1 43 3 197 2 49 1 
286 1 29 1 143 1 1 1 67 2 182 1 126 1 269 1 165 1 227 1 302 1 74 1 16 1 232 2 21 1 216 1 194 1 197 1 63 1 138 1 
286 1 243 1 67 1 184 1 165 1 197 1 308 1 63 1 119 1 138 1 
310 5 142 10 201 1 220 5 1 2 5 2 67 5 126 2 246 2 15 2 43 5 308 5 63 5 
243 1 16 1 74 1 192 1 149 1 308 1 
286 1 204 1 6 1 165 1 248 1 96 2 16 1 250 2 17 1 63 1 138 1 106 1 180 1 67 1 149 1 71 1 74 1 192 2 197 1 279 2 280 2 332 1 
108 1 96 1 29 1 250 1 279 1 280 1 37 1 227 1 
286 1 243 1 142 2 220 1 67 1 165 1 248 1 17 1 43 1 197 1 308 2 63 1 138 1 
189 1 234 1 323 1 
189 1 234 1 323 1 
189 1 251 1 4 1 136 1 323 1 
189 1 234 1 323 1 
189 1 309 1 323 1 
189 1 309 1 323 1 
189 1 309 1 323 1 
189 1 323 1 
73 1 200 1 
1 1 182 1 223 4 317 1 126 1 8 2 113 1 228 8 322 1 302 1 130 3 76 2 41 4 21 1 135 2 217 1 178 4 26 2 218 2 137 1 
1 1 162 1 223 3 182 1 317 1 126 1 322 1 228 6 302 1 130 2 21 1 217 1 135 2 178 3 
1 1 223 2 5 1 126 1 246 1 8 1 113 1 228 4 15 1 115 1 130 2 76 1 41 2 135 1 26 1 218 1 178 2 
65 1 1 1 223 4 5 1 126 1 246 1 113 1 228 7 114 2 211 1 15 1 130 2 60 1 135 1 178 3 
1 3 5 2 126 3 246 2 8 2 302 2 15 2 211 1 130 9 18 1 21 2 217 1 135 5 178 11 26 2 218 2 137 2 65 2 262 1 182 1 223 12 317 1 113 4 322 1 228 23 114 2 76 2 41 4 46 1 
114 1 223 1 228 1 
65 1 178 1 228 1 
201 1 1 1 223 3 5 1 126 1 246 1 8 1 113 1 228 6 15 1 115 1 76 1 130 3 41 2 135 2 218 1 26 1 178 3 
202 1 1 2 5 2 126 2 54 1 246 2 8 1 15 2 130 2 60 1 135 1 256 1 218 1 26 1 178 6 65 1 223 6 113 1 228 12 114 1 72 1 76 1 116 1 41 2 49 1 
1 1 182 1 223 3 126 1 113 1 228 6 302 1 130 2 21 1 135 1 178 3 
223 2 8 1 113 1 228 3 322 1 302 1 130 2 76 1 21 1 41 2 135 1 217 1 46 1 178 1 26 1 218 1 137 1 
1 2 223 5 182 1 126 2 8 1 113 2 228 10 302 2 76 1 130 5 41 2 21 2 194 1 135 3 256 1 218 1 26 1 178 5 
1 1 5 1 8 1 113 1 228 2 76 1 130 1 41 2 256 1 26 1 218 1 178 2 
1 1 223 2 5 1 126 1 246 1 8 1 113 1 228 4 15 1 130 2 76 1 41 2 135 1 256 1 26 1 218 1 178 2 
223 2 8 3 113 1 228 3 302 1 76 3 130 2 171 1 41 6 21 1 46 1 135 1 256 1 26 3 218 3 178 1 137 1 
1 5 3 1 5 3 126 5 246 3 8 5 302 3 211 1 15 3 97 1 130 12 171 1 21 3 60 1 217 1 135 7 256 1 218 5 26 5 178 16 137 2 107 1 65 3 182 2 223 18 317 1 113 5 322 1 228 34 114 4 115 1 76 5 41 10 46 1 
1 1 126 1 54 1 8 1 302 1 130 2 21 1 60 1 217 1 135 2 256 1 218 1 26 1 178 4 65 1 223 4 182 1 317 1 228 8 322 1 114 1 76 1 41 2 
1 2 5 1 126 1 54 1 8 2 302 1 211 1 15 1 130 3 21 1 60 1 135 2 217 1 256 1 218 2 26 2 178 6 65 1 182 1 223 5 317 1 113 1 322 1 228 11 114 2 115 1 76 2 41 4 
202 1 1 3 5 2 126 3 54 1 246 2 8 3 302 1 15 2 130 4 21 1 60 1 217 1 135 3 256 1 218 3 26 3 178 9 137 1 65 1 182 1 223 10 317 1 113 1 322 1 228 19 72 1 114 1 115 1 76 3 116 1 41 6 49 1 
202 1 1 3 5 2 126 2 54 1 246 1 8 3 302 1 15 2 130 5 21 1 60 1 217 1 135 3 256 1 218 3 26 3 178 10 137 1 65 1 182 1 223 7 317 1 113 2 322 1 228 17 114 1 72 1 115 1 76 3 116 1 41 6 49 1 
1 1 126 1 54 1 8 1 302 1 130 2 21 1 60 1 217 1 135 2 256 1 218 1 26 1 178 4 65 1 223 4 182 1 317 1 228 8 322 1 114 1 76 1 41 2 
202 1 1 2 5 2 126 2 54 1 246 2 8 1 15 2 130 2 60 1 135 1 256 1 218 1 26 1 178 6 65 1 223 6 113 1 228 12 114 1 72 1 76 1 116 1 41 2 49 1 
202 1 1 3 5 2 126 2 54 1 246 1 8 4 302 1 15 2 130 5 21 1 60 1 217 1 135 3 256 1 218 4 26 4 178 10 137 2 65 1 182 1 223 8 317 1 113 2 322 1 228 18 72 1 114 1 115 1 76 4 116 1 41 8 49 1 
202 1 1 3 5 3 126 2 54 1 246 2 8 4 15 3 130 6 171 1 60 1 135 3 256 1 218 4 26 4 178 9 137 2 65 1 223 7 113 3 228 16 72 1 114 1 76 4 116 1 41 8 49 1 
1 1 223 4 182 1 126 1 113 3 228 7 322 1 302 3 130 6 21 3 217 2 135 3 178 3 
202 1 1 3 5 2 126 2 54 1 246 1 8 4 302 1 15 2 130 4 171 1 21 1 60 1 217 1 135 3 256 1 218 4 26 4 178 10 137 2 65 1 182 1 223 8 317 1 113 1 322 1 228 18 72 1 114 1 76 4 116 1 41 8 49 1 
131 1 221 1 291 1 
159 1 131 1 221 1 325 1 291 1 176 1 83 1 296 1 
71 1 96 1 250 1 162 1 6 1 204 1 279 1 280 1 
140 1 31 1 318 1 111 1 207 1 164 1 292 1 12 1 71 1 96 1 250 1 214 1 169 1 279 1 44 1 280 1 
140 1 31 1 318 1 111 1 207 1 164 1 292 1 12 1 71 1 96 1 250 1 214 1 169 1 279 1 44 1 174 1 
140 1 31 1 318 1 111 1 207 1 164 1 292 1 12 1 71 1 96 1 250 1 214 1 101 1 169 1 279 1 174 1 
14 1 96 1 16 1 74 1 250 1 87 1 279 1 174 1 
14 1 96 1 16 1 74 1 250 1 38 1 279 1 174 1 
96 1 250 1 214 1 276 1 279 1 292 1 
71 1 96 1 250 1 169 1 156 1 279 1 280 1 281 1 
160 1 161 1 53 1 292 1 164 1 207 1 8 1 12 1 303 1 96 1 250 1 305 1 214 1 169 1 58 1 26 1 218 1 140 1 311 1 31 1 111 1 318 1 37 1 71 1 76 1 41 2 279 1 328 1 44 1 
286 1 112 1 165 1 14 1 273 1 74 1 16 1 96 1 250 1 38 1 197 1 279 1 280 1 82 1 118 1 106 1 138 1 
71 1 96 1 250 1 169 1 276 1 172 1 279 1 281 1 
71 1 96 2 250 2 160 1 6 1 204 1 279 2 280 1 
71 1 96 1 250 1 306 1 169 1 277 1 279 1 177 1 
96 1 250 1 168 1 214 1 32 1 279 1 292 1 280 1 268 1 25 1 
71 1 158 1 272 1 96 2 250 2 160 1 316 1 279 2 
71 1 158 1 96 2 250 2 160 1 173 1 279 2 280 1 
71 1 158 1 96 2 250 2 160 1 279 2 148 1 280 1 
140 1 31 1 318 1 111 1 207 1 164 1 292 1 12 1 71 1 96 1 250 1 214 1 101 1 169 1 279 1 280 1 
71 1 96 1 250 1 169 1 156 1 279 1 174 1 281 1 
283 1 122 1 144 1 109 1 205 1 111 1 164 1 12 1 329 1 
304 1 274 1 122 1 
283 1 122 1 102 1 329 1 298 1 
283 1 243 1 29 1 143 1 122 1 68 1 227 1 299 1 231 1 74 1 16 1 304 1 274 1 57 1 102 1 216 1 239 1 329 1 308 1 118 1 104 1 
230 1 88 1 162 1 196 1 
230 1 313 1 88 1 222 1 289 1 196 1 255 1 
258 1 155 1 255 1 
313 1 88 1 222 3 289 1 127 2 152 1 230 1 252 1 254 1 253 1 255 3 196 1 
230 1 51 1 313 1 88 1 222 2 275 1 289 1 196 1 255 2 
313 1 88 1 222 1 289 1 265 1 271 1 168 1 252 1 255 1 45 1 25 1 
313 1 88 1 222 1 289 1 252 1 196 1 255 1 
230 1 313 1 222 1 289 1 252 1 196 2 255 1 
313 2 88 1 222 2 289 2 225 1 212 1 190 1 252 1 196 1 255 2 
313 1 88 2 222 3 289 1 230 1 39 1 252 1 275 2 196 1 255 3 45 1 240 1 179 1 
257 1 313 1 88 1 222 2 289 1 32 1 10 1 230 1 271 1 168 2 252 1 275 1 196 1 255 2 25 1 
121 1 51 1 313 2 88 2 222 4 289 2 230 1 39 1 252 1 275 2 196 1 255 4 45 1 
230 1 313 1 88 1 222 1 289 1 252 1 196 1 255 1 
313 1 88 3 222 4 289 1 33 1 127 1 152 1 230 2 39 1 275 2 253 1 196 2 255 4 45 1 
313 1 88 1 222 2 289 1 295 1 230 1 301 1 252 1 275 1 196 1 255 2 27 1 
230 1 313 1 88 1 222 3 289 1 252 1 253 2 196 1 255 3 117 1 127 2 152 1 
88 2 66 1 20 1 163 2 
313 1 222 1 289 1 252 1 147 1 255 1 
230 1 313 1 88 1 222 2 275 1 289 1 252 1 196 1 255 2 179 1 
167 1 
230 1 313 1 88 1 222 1 289 1 252 1 196 1 255 1 
313 1 88 1 222 3 289 1 127 1 230 1 275 1 252 1 255 3 196 1 179 1 
39 1 88 1 33 1 45 1 
88 1 196 1 

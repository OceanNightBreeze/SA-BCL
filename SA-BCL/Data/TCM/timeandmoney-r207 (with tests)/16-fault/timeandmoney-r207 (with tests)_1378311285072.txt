#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (7,178) 170 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (81,213,324) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 169 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 263 338 291 310 52 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (81,213,324) (81,213,324) 322 39 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 169 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 207 183 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (7,178) (7,178) (50,128) 308 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (7,178) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 218 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (7,178) (7,178) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 263 338 134 177 182 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 263 338 134 177 182 77 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 263 338 134 177 182 77 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 184 85 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (7,178) 170 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 263 338 291 310 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 263 338 134 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 263 338 134 177 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 263 338 134 177 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 28 67 133 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 28 67 133 193 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 61 (80,216) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 61 (80,216) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 61 (66,114) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 61 (66,114) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 226 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (0,18,21,138) (0,18,21,138) 40 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 223 9 127 5 0 6 46 1 298 1 10 2 138 9 14 1 18 2 153 4 96 2 94 1 155 1 23 1 21 2 22 1 317 3 273 1 108 1 163 2 31 2 171 2 173 1 115 1 283 1 175 1 76 1 
2 1 223 9 127 5 0 6 46 1 298 1 10 2 138 9 14 1 18 2 153 4 96 2 94 1 155 1 23 1 21 2 22 1 317 3 273 1 108 1 163 2 31 2 171 2 173 1 115 1 283 1 175 1 76 1 
2 1 223 10 127 6 0 7 46 1 298 1 10 2 138 10 14 1 18 2 153 5 96 2 94 1 155 1 23 1 21 2 22 1 317 4 273 1 108 1 163 2 31 2 171 2 173 1 115 1 283 1 175 1 76 1 
2 1 223 7 127 4 0 4 46 1 298 1 10 1 138 7 14 1 18 2 153 3 96 2 94 1 155 1 21 2 22 1 317 2 273 1 108 1 163 2 31 2 171 2 173 1 115 1 283 1 175 1 76 1 
223 4 0 3 127 3 317 1 273 1 298 1 10 2 163 1 138 4 31 1 171 1 173 1 175 1 18 1 153 2 23 1 22 1 21 1 
127 1 223 2 273 1 108 1 163 1 138 2 31 1 280 1 173 1 115 1 215 1 18 1 96 1 311 1 22 1 21 1 
223 3 127 2 0 1 317 1 273 1 138 3 173 1 18 2 153 1 96 1 76 1 22 1 21 2 
127 5 223 9 0 7 317 3 273 1 298 1 10 2 163 1 138 9 31 1 171 1 14 1 173 1 38 1 175 1 18 2 153 4 96 1 155 1 76 1 231 1 23 1 22 1 21 2 
127 5 223 9 0 7 317 3 273 1 298 1 10 2 163 1 138 9 31 1 171 1 14 1 173 1 38 1 175 1 18 2 153 4 96 1 155 1 76 1 231 1 23 1 22 1 21 2 
206 1 189 1 169 1 
90 2 288 1 189 1 
245 2 251 2 4 2 320 1 131 2 
251 1 294 2 199 1 4 1 320 1 7 1 131 1 300 2 70 1 209 1 170 1 245 1 282 1 332 2 
245 1 251 1 4 1 320 1 131 1 119 1 
245 1 81 1 213 1 28 1 
245 1 251 1 81 1 4 1 131 1 
64 1 192 1 324 1 140 1 330 1 
236 1 206 1 192 2 324 2 189 1 140 1 312 1 330 1 
192 1 324 1 140 1 
245 1 251 1 4 1 320 1 131 1 192 1 119 1 324 1 188 1 330 1 
189 1 
102 1 236 1 206 1 192 2 324 2 189 1 140 1 330 1 
293 1 159 1 236 1 319 1 206 1 324 5 189 1 13 1 111 1 330 2 141 2 140 2 53 2 16 1 146 1 334 1 192 5 122 2 195 1 
169 1 
251 1 245 2 252 1 4 1 131 1 156 1 
245 1 294 1 282 1 4 1 332 1 297 1 131 1 300 1 286 1 
251 1 245 3 4 3 131 3 286 1 
245 1 4 1 131 1 
245 1 251 1 252 1 4 1 131 1 156 1 
251 1 245 2 4 2 297 1 131 2 286 1 156 1 
245 2 4 1 67 1 131 1 28 1 286 1 
245 1 4 1 297 1 131 1 286 1 
245 1 251 1 4 1 131 1 156 1 
294 1 282 1 332 1 300 1 
294 1 282 1 332 1 300 1 
126 1 246 1 335 2 9 1 59 1 164 1 327 1 290 1 
245 1 203 1 4 1 131 1 
251 1 245 5 4 4 67 1 297 1 56 1 131 4 28 1 286 2 156 1 279 1 
245 1 4 1 131 1 
224 1 98 1 
224 1 98 1 
34 1 254 1 
34 1 254 1 
34 1 254 1 
112 1 224 1 98 1 
224 1 149 1 98 1 
34 1 254 1 224 2 98 2 121 1 87 1 
112 1 224 1 98 1 
112 1 224 1 98 1 
224 1 98 1 12 1 
224 1 98 1 12 1 
224 1 98 1 12 1 
161 2 224 2 181 1 8 2 84 1 324 2 325 3 137 1 189 1 72 1 51 1 227 2 259 2 89 1 331 1 307 2 192 2 98 2 121 1 
316 1 202 1 161 1 4 2 181 1 224 1 162 1 276 1 8 1 131 2 323 1 324 1 325 1 245 2 227 1 259 1 149 1 57 1 91 1 192 1 98 1 
171 1 163 1 31 1 
215 1 163 1 31 1 
171 2 215 1 107 1 217 1 250 1 31 3 
201 1 171 1 215 1 107 1 217 1 31 2 
171 1 215 1 217 1 107 2 31 2 
293 1 301 2 13 2 189 2 141 1 140 1 53 1 90 3 57 1 192 5 263 1 268 2 100 1 270 1 202 1 159 3 318 2 236 1 275 1 206 1 276 1 68 1 69 1 324 5 71 1 32 1 330 4 168 1 74 1 288 1 122 1 338 1 
251 1 4 1 188 1 189 4 13 4 258 4 16 1 90 6 192 8 95 1 263 2 97 1 268 4 24 1 270 1 206 1 276 4 32 2 214 1 119 1 288 2 122 2 293 1 131 1 140 5 141 2 53 2 145 1 159 6 236 1 318 4 64 4 320 1 68 2 324 8 69 2 330 6 168 2 329 1 245 1 74 2 338 2 
301 1 189 3 13 2 141 1 53 1 16 1 90 4 192 3 263 1 268 2 100 1 159 3 318 2 275 1 206 1 276 1 68 1 324 3 69 1 32 1 330 2 168 1 74 1 288 2 122 1 338 1 
251 1 4 1 188 1 13 2 189 3 16 1 90 4 192 3 263 1 95 1 97 1 268 2 100 1 24 1 275 1 276 2 206 1 32 1 119 1 288 2 122 1 131 1 301 1 141 1 53 1 159 3 318 2 320 1 68 1 69 1 324 3 330 2 168 1 245 1 74 1 338 1 
179 1 151 1 169 1 
151 1 118 1 
241 1 
272 1 151 1 
179 2 125 1 272 1 151 3 75 1 43 1 
125 1 272 1 151 1 
151 1 106 1 
1 1 69 1 184 1 185 1 29 1 303 1 328 3 167 3 30 1 244 1 35 4 37 1 147 2 44 1 120 1 99 2 
1 1 69 1 184 1 185 1 29 1 303 1 328 3 167 3 30 1 244 1 35 4 37 1 147 2 44 1 120 1 99 2 
1 1 69 1 184 1 185 1 29 1 303 1 328 3 167 3 30 1 244 1 142 1 35 4 37 1 147 2 44 1 120 1 99 2 
277 3 69 3 185 2 225 1 29 2 303 7 328 3 167 10 32 2 35 17 52 1 228 3 37 1 54 1 74 2 147 1 263 3 310 1 99 1 338 3 337 1 291 1 
221 1 126 2 185 1 184 1 303 2 143 1 147 2 99 3 101 1 69 1 29 1 164 2 327 2 167 4 328 4 30 1 244 1 35 6 37 1 335 4 120 1 44 1 290 2 
127 1 0 1 294 1 223 2 300 1 138 2 304 1 148 1 18 1 58 1 96 1 232 1 267 1 21 1 22 1 200 1 273 1 27 1 237 1 205 1 163 1 109 1 31 2 171 1 173 1 332 1 333 1 215 1 250 1 289 1 
127 1 294 1 223 3 0 2 130 1 300 1 138 3 304 1 15 1 18 1 58 1 96 1 232 1 267 1 21 1 200 1 25 1 273 1 27 1 237 1 205 1 163 1 109 1 31 2 171 1 173 1 332 1 215 1 250 1 289 1 
127 1 294 1 223 2 0 2 300 1 138 2 304 1 15 1 58 1 96 1 232 1 200 1 25 1 273 1 27 1 237 1 163 1 109 1 31 2 171 1 173 1 332 1 215 1 250 1 289 1 
223 1 294 1 200 2 130 1 300 1 165 1 138 1 211 1 282 1 332 1 260 1 18 1 96 2 289 2 232 2 21 1 269 1 
223 1 294 1 200 1 25 1 27 1 237 1 205 1 300 1 163 1 109 1 138 1 31 2 304 1 171 1 332 1 215 1 333 1 58 1 18 1 250 1 96 1 289 1 267 1 232 1 22 1 21 1 
124 1 
294 2 293 1 81 1 300 2 135 1 13 1 141 1 140 2 53 1 151 1 58 1 192 2 197 1 159 1 234 1 272 1 236 1 28 1 322 1 324 2 109 1 168 1 245 1 33 1 282 2 213 1 36 1 39 1 332 2 122 1 336 1 220 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 102 1 81 1 213 1 236 1 39 1 28 1 322 1 192 2 324 2 140 1 
197 1 293 1 81 1 28 1 322 1 324 1 141 1 245 1 33 1 53 1 213 1 39 1 192 1 122 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
245 1 197 1 33 1 81 1 213 1 39 1 28 1 322 1 192 1 324 1 
197 1 293 1 81 1 28 1 322 1 324 1 141 1 245 1 33 1 53 1 213 1 39 1 192 1 122 1 
126 1 9 1 69 1 184 1 164 1 303 1 327 1 167 2 328 1 30 1 169 1 244 1 246 1 35 3 147 1 74 1 335 2 59 1 44 1 120 1 99 1 290 1 
126 1 277 1 9 1 207 1 183 1 326 1 164 1 327 1 303 1 167 1 246 1 35 2 228 1 335 2 290 1 
126 1 315 1 4 1 5 1 297 1 131 1 9 1 326 1 164 1 303 1 327 1 167 1 245 1 246 1 35 2 306 1 284 1 335 2 286 1 290 1 
126 1 294 1 128 1 4 1 297 1 7 1 131 1 9 1 300 1 303 1 308 1 315 1 164 1 326 1 327 1 246 1 245 1 282 1 35 1 332 1 335 2 286 1 178 1 290 1 
158 1 126 1 294 1 9 1 300 1 164 1 327 1 167 1 246 1 35 1 282 1 332 1 284 1 335 2 123 1 290 1 
251 1 126 1 4 1 131 1 9 1 303 1 263 1 156 1 196 1 69 1 164 1 326 1 327 1 167 1 32 1 246 1 245 1 35 2 74 1 335 2 290 1 338 1 
126 1 204 1 9 1 69 1 164 1 327 1 167 1 246 1 35 1 335 2 59 1 263 1 290 1 
126 1 49 1 9 1 164 1 327 1 303 1 32 1 246 1 35 1 74 1 335 2 59 1 290 1 
126 1 9 1 69 1 164 1 303 1 327 1 167 1 32 1 246 1 35 2 74 1 335 2 59 1 263 1 290 1 338 1 
158 1 126 1 204 1 9 1 69 1 164 1 327 1 167 1 246 1 35 1 335 2 263 1 290 1 
158 1 126 1 49 1 9 1 164 1 327 1 303 1 32 1 246 1 35 1 74 1 335 2 290 1 
158 1 126 1 9 1 69 1 164 1 303 1 327 1 167 1 32 1 246 1 35 2 74 1 335 2 263 1 290 1 338 1 
126 1 9 1 69 1 164 1 303 1 327 1 167 1 32 1 246 1 35 2 74 1 335 2 263 1 290 1 338 1 
294 1 282 1 332 1 7 1 300 1 
294 1 282 1 332 1 218 1 300 1 
126 1 9 1 69 1 326 1 164 1 303 1 327 1 167 1 32 1 246 1 35 2 74 1 335 2 263 1 290 1 338 1 
294 1 332 1 148 1 7 1 300 1 178 1 
126 1 251 1 4 1 131 1 9 1 69 1 326 1 164 1 303 1 327 1 167 1 32 1 245 1 246 1 35 2 74 1 41 1 335 2 263 1 156 1 338 1 290 1 
126 2 182 1 225 1 303 10 228 2 143 1 263 3 99 3 198 1 314 2 274 1 277 1 69 3 29 3 164 2 208 1 327 2 167 9 328 6 32 3 281 1 35 19 172 1 74 3 335 4 77 1 79 2 337 1 290 2 338 3 
126 2 182 2 134 1 303 8 143 1 228 2 92 1 262 1 263 2 99 1 101 1 198 2 314 2 277 2 69 2 164 2 327 2 328 1 167 9 32 1 281 1 35 17 74 1 335 4 177 1 176 1 77 1 290 2 337 2 338 2 
182 1 184 1 92 1 262 1 263 5 99 4 198 2 101 1 274 1 277 3 29 4 208 1 30 1 32 4 281 1 35 41 120 1 44 1 290 3 126 3 225 2 134 1 303 20 143 1 228 5 147 1 314 4 233 1 160 1 69 6 164 3 327 3 328 8 167 21 244 1 74 4 335 6 177 1 176 1 77 1 338 5 337 3 79 1 
126 3 182 1 225 2 134 1 303 18 228 5 143 1 92 1 262 1 263 5 99 4 101 1 198 2 314 3 160 1 274 1 277 3 69 5 29 2 164 3 208 1 327 3 167 17 328 6 32 4 281 1 35 35 74 4 335 6 176 1 177 1 77 1 79 1 337 3 290 3 338 5 
126 1 182 1 184 1 225 2 134 1 303 17 228 4 143 1 147 1 92 1 262 1 263 6 99 6 198 1 314 2 277 4 69 7 29 4 164 1 327 1 30 1 167 21 328 10 244 1 32 5 281 1 35 38 73 2 74 5 335 2 176 1 177 1 44 1 120 1 77 1 337 2 290 1 338 6 
72 1 259 1 227 1 212 1 161 1 224 1 8 1 84 1 98 1 121 1 
316 1 149 1 
259 1 227 1 3 1 161 1 253 1 224 1 238 1 8 1 98 1 
161 1 181 1 224 1 8 1 84 1 324 1 325 2 137 1 189 1 72 1 51 1 227 1 259 1 331 1 307 1 192 1 98 1 121 1 
161 1 181 1 224 1 8 1 84 1 324 1 325 2 137 1 189 1 72 1 51 1 227 1 259 1 331 1 307 1 192 1 98 1 121 1 
161 1 181 1 224 1 8 1 84 1 324 1 325 2 137 1 189 1 72 1 51 1 227 1 259 1 331 1 307 1 192 1 98 1 121 1 
112 1 285 1 87 1 
112 1 285 1 87 1 
180 1 12 1 
180 1 87 1 12 1 
162 1 323 1 
4 2 224 1 129 1 8 1 131 2 137 1 259 1 227 1 307 1 149 1 91 1 57 1 192 1 98 1 202 1 316 1 161 1 276 1 162 1 323 1 324 1 325 1 330 1 245 2 
112 1 285 1 
180 1 87 1 12 1 
245 2 305 1 235 1 19 1 
294 2 25 1 237 1 300 2 163 1 109 1 31 2 256 1 304 1 171 1 332 2 215 1 148 1 58 1 250 1 154 1 287 1 289 1 267 1 
294 1 25 1 47 1 237 1 300 1 163 1 109 1 31 2 304 1 171 1 332 1 215 1 58 1 250 1 154 1 289 1 267 1 
294 1 282 1 332 1 300 1 287 1 289 1 266 1 211 1 
294 1 25 1 237 1 300 1 163 1 109 1 31 2 256 1 304 1 171 1 332 1 215 1 58 1 250 1 154 1 287 1 289 1 267 1 
62 1 
159 1 206 1 334 1 189 1 13 1 111 1 169 1 
88 1 293 1 159 1 53 1 104 1 122 1 13 1 141 1 
80 2 179 2 189 7 13 7 90 12 192 5 93 2 263 2 268 6 272 1 26 2 206 1 109 1 32 2 282 1 113 2 117 2 118 3 288 6 122 3 125 1 293 3 294 1 300 1 50 2 139 1 141 3 140 5 53 3 55 1 151 6 58 2 60 1 159 8 236 3 318 6 324 5 69 2 168 2 248 2 332 1 74 2 75 1 336 1 338 2 
293 2 134 1 189 5 13 5 140 1 141 2 228 1 53 2 90 6 92 1 262 1 192 1 263 2 268 5 271 1 159 8 236 1 318 5 206 2 277 1 324 1 69 2 110 2 166 1 168 1 32 2 116 1 74 2 177 1 176 1 288 3 122 2 336 1 337 1 338 2 
293 1 159 2 299 1 69 1 184 1 324 1 85 1 110 1 13 2 141 1 244 1 53 1 74 1 192 1 44 1 122 1 
293 1 159 1 206 1 111 1 13 1 189 1 141 1 53 1 334 1 122 1 
159 5 318 5 69 2 13 5 189 5 32 2 117 1 90 10 74 2 263 2 288 5 268 5 338 2 
236 1 206 1 192 1 324 1 189 1 140 1 
293 1 294 4 300 4 135 1 13 2 141 2 140 4 53 2 191 1 16 1 151 1 58 1 192 3 264 1 103 2 272 1 159 2 234 1 236 2 324 3 109 1 210 1 168 2 282 2 36 1 332 4 122 2 336 2 220 1 
245 1 251 1 170 1 294 1 282 1 4 1 332 1 320 1 7 1 131 1 300 1 
293 1 159 1 206 1 13 1 189 2 141 1 168 1 53 1 90 2 288 1 268 1 122 1 336 1 
259 1 161 1 239 1 
292 1 259 1 161 1 84 1 323 1 
259 1 161 1 239 1 
259 1 161 1 239 1 
259 1 161 1 240 1 
259 1 161 1 240 1 
259 1 161 1 240 1 
259 1 161 1 
224 1 98 1 
126 2 101 1 69 1 184 1 29 1 164 2 303 2 327 2 167 3 328 3 30 1 244 1 35 5 147 1 335 4 120 1 44 1 99 2 290 2 
184 1 69 1 303 1 30 1 328 2 167 2 169 1 244 1 35 3 147 1 120 1 44 1 99 2 
126 1 69 1 29 1 302 1 164 1 303 2 327 1 328 2 167 2 32 1 35 4 74 1 335 2 263 1 99 1 290 1 338 1 
277 1 225 1 69 1 29 1 303 4 167 3 328 2 32 1 228 2 35 7 74 1 263 1 99 1 337 1 338 1 
126 2 184 1 225 1 303 10 228 2 144 1 147 1 263 2 99 5 101 2 277 2 207 1 69 3 29 4 164 2 327 2 30 1 328 9 167 10 244 2 32 2 35 20 73 1 74 2 335 4 44 2 120 1 338 2 290 2 
35 1 228 1 303 1 
35 1 277 1 167 1 
126 1 69 1 29 1 164 1 302 1 327 1 303 3 167 3 328 3 32 1 35 6 117 1 74 1 335 2 263 1 99 2 290 1 338 1 
126 1 134 1 303 6 228 1 143 1 92 1 262 1 263 2 99 1 277 1 69 2 29 1 164 1 327 1 167 6 328 2 32 2 35 12 74 2 335 2 177 1 176 1 337 1 290 1 338 2 
35 1 69 1 184 1 167 1 
101 1 126 1 29 1 164 1 303 2 327 1 167 1 328 2 30 1 244 1 35 3 144 1 335 2 44 1 120 1 99 1 290 1 
126 1 85 1 184 1 69 2 29 2 164 1 327 1 303 3 328 4 167 4 244 1 143 1 35 7 74 1 335 2 44 1 99 2 290 1 
126 1 69 1 29 1 164 1 327 1 167 2 328 1 143 1 35 2 335 2 263 1 290 1 
126 1 69 1 29 1 164 1 303 2 327 1 328 2 167 2 32 1 143 1 35 4 74 1 335 2 263 1 99 1 290 1 338 1 
101 1 126 3 274 1 29 1 164 3 303 2 327 3 328 2 167 1 244 1 35 3 143 1 144 1 335 6 44 1 99 1 290 3 
126 3 274 1 277 3 69 3 225 1 29 1 164 3 302 1 327 3 303 5 328 1 167 9 32 1 35 14 143 1 228 3 74 1 54 1 335 6 263 3 310 1 338 3 290 3 337 1 291 1 
126 1 184 1 225 1 303 3 228 2 143 1 147 1 263 1 99 2 277 1 69 2 164 1 327 1 328 2 167 5 30 1 244 1 35 8 335 2 177 1 44 1 120 1 337 1 290 1 338 1 
126 2 184 1 225 1 302 1 303 3 228 2 143 1 147 1 263 1 99 2 277 1 69 2 29 1 164 2 327 2 30 1 167 5 328 3 244 1 35 8 335 4 177 1 44 1 120 1 337 1 290 2 338 1 
126 3 184 1 134 1 302 1 303 8 228 1 143 1 147 1 92 1 262 1 263 2 99 3 101 1 277 1 69 3 29 1 164 3 327 3 30 1 167 8 328 4 244 1 32 2 35 16 74 2 335 6 177 1 176 1 44 1 120 1 337 1 290 3 338 2 
126 1 277 1 69 2 134 1 164 1 327 1 303 4 328 1 167 6 32 1 143 1 228 1 35 10 74 1 92 1 335 2 262 1 176 1 177 1 263 2 99 1 338 2 290 1 337 1 
126 1 184 1 225 1 303 3 228 2 143 1 147 1 263 1 99 2 277 1 69 2 164 1 327 1 328 2 167 5 30 1 244 1 35 8 335 2 177 1 44 1 120 1 337 1 290 1 338 1 
126 1 134 1 303 6 228 1 143 1 92 1 262 1 263 2 99 1 277 1 69 2 29 1 164 1 327 1 167 6 328 2 32 2 35 12 74 2 335 2 177 1 176 1 337 1 290 1 338 2 
126 3 134 1 302 1 303 5 228 1 143 1 92 1 262 1 263 2 99 1 101 1 277 1 69 2 164 3 327 3 167 6 328 1 32 1 35 11 74 1 335 6 177 1 176 1 337 1 290 3 338 2 
126 4 134 1 303 7 228 1 143 1 92 1 262 1 263 3 99 3 101 2 274 1 277 1 69 3 29 3 164 4 327 4 167 9 328 6 32 2 35 16 74 2 335 8 177 1 176 1 337 1 290 4 338 3 
85 1 184 2 69 3 29 3 303 2 30 1 328 7 167 5 244 2 35 7 74 1 147 1 120 1 44 2 99 4 
126 3 134 1 303 5 228 1 143 1 92 1 262 1 263 2 99 1 101 1 274 1 277 1 69 2 164 3 327 3 167 6 328 1 32 1 35 11 74 1 335 6 177 1 176 1 337 1 290 3 338 2 
67 1 28 1 133 1 
295 1 229 1 67 1 28 1 133 1 193 1 20 1 63 1 
294 1 282 1 272 1 234 1 332 1 151 1 58 1 300 1 109 1 220 1 169 1 
125 1 294 1 272 1 4 1 131 1 300 1 109 1 245 1 282 1 332 1 151 1 216 1 58 1 286 1 61 1 
125 1 294 1 272 1 103 1 4 1 131 1 300 1 109 1 245 1 332 1 151 1 216 1 58 1 286 1 61 1 
125 1 294 1 272 1 103 1 4 1 131 1 300 1 109 1 245 1 114 1 332 1 151 1 58 1 286 1 61 1 
251 1 179 1 125 1 294 1 4 1 131 1 300 1 188 1 189 1 140 1 151 3 192 2 58 1 194 1 103 1 272 1 26 1 320 1 66 1 65 1 206 1 324 2 109 1 245 1 332 1 118 1 119 1 
251 1 179 1 80 1 125 1 294 1 4 1 131 1 300 1 188 1 189 1 140 1 151 3 192 2 58 1 103 1 272 1 26 1 320 1 65 1 206 1 324 2 109 1 245 1 332 1 118 1 119 1 
294 1 332 1 6 1 58 1 300 1 109 1 
125 1 199 1 294 7 296 1 272 2 25 1 105 1 6 1 82 1 300 7 109 2 282 2 247 1 332 6 148 1 150 1 151 3 58 3 230 1 75 1 157 1 
245 1 4 1 131 1 286 1 
80 1 179 1 293 2 294 1 300 1 50 1 189 1 13 1 141 2 140 2 53 2 151 2 192 3 93 1 159 1 236 1 26 1 206 1 324 3 210 1 111 1 330 1 282 1 248 1 332 1 334 1 118 1 122 2 
179 1 125 1 294 2 272 1 6 1 300 2 109 1 332 2 148 1 151 2 58 2 60 1 75 1 
294 4 282 1 272 1 234 1 174 1 332 4 48 1 148 1 151 1 58 1 300 4 109 1 220 1 
125 1 294 2 313 1 103 1 272 1 82 1 300 2 11 1 109 1 247 1 332 2 151 1 58 2 219 1 
294 1 282 1 332 1 215 1 237 1 58 1 300 1 163 1 109 1 31 1 
294 2 272 1 25 1 332 2 148 1 151 1 58 1 230 1 300 2 109 1 78 1 
294 5 103 1 234 1 272 2 300 5 109 2 282 1 174 1 332 4 148 1 150 1 151 3 58 2 230 1 157 1 220 1 
294 5 103 1 234 1 272 2 300 5 109 2 282 1 174 1 332 4 148 1 151 3 58 2 230 1 265 1 157 1 220 1 
125 1 294 1 272 1 4 1 131 1 300 1 109 1 245 1 282 1 114 1 332 1 151 1 58 1 286 1 61 1 
125 1 247 1 294 1 272 1 103 1 105 1 332 1 82 1 151 1 58 2 75 1 300 1 109 1 
245 1 305 1 235 1 17 1 309 1 19 1 257 1 
86 1 226 1 257 1 
17 1 309 1 152 1 257 1 
255 1 17 1 309 1 152 1 192 1 324 1 86 1 226 1 330 1 257 1 
127 1 173 1 273 1 169 1 
127 1 223 1 173 1 273 1 18 1 138 1 21 1 
200 1 223 1 96 1 
127 1 223 3 273 1 108 2 136 1 138 3 190 1 173 1 18 1 45 1 22 1 21 1 
127 1 0 1 223 2 173 1 273 1 18 1 10 1 138 2 21 1 
223 1 127 1 163 1 138 1 31 1 171 1 175 1 18 1 153 1 22 1 21 1 
127 1 223 1 273 1 18 1 138 1 21 1 22 1 
223 1 173 1 273 2 18 1 138 1 21 1 22 1 
127 1 223 2 273 1 187 1 243 1 138 2 278 1 18 2 22 1 21 2 
223 3 0 2 127 2 317 1 273 1 138 3 14 1 173 1 18 1 153 1 155 1 22 1 21 1 
0 1 223 1 40 1 215 1 18 1 138 2 21 1 22 1 31 1 
223 4 0 2 127 2 317 1 273 1 10 1 138 4 173 1 18 2 153 1 22 1 21 2 23 1 
127 1 223 1 173 1 273 1 18 1 138 1 21 1 22 1 
0 2 223 4 127 3 317 1 273 2 108 1 136 1 138 4 190 1 173 2 261 1 18 1 153 1 21 1 
222 1 127 1 223 2 0 1 273 1 83 1 138 2 173 1 38 1 18 1 22 1 21 1 
127 1 223 3 273 1 321 1 108 2 136 2 138 3 190 1 173 1 18 1 22 1 21 1 
127 2 42 2 132 1 242 1 
223 1 18 1 186 1 138 1 21 1 22 1 
127 1 0 1 223 2 14 1 173 1 273 1 18 1 138 2 21 1 22 1 
249 1 
127 1 223 1 173 1 273 1 18 1 138 1 21 1 22 1 
0 1 223 3 127 1 273 1 108 1 138 3 14 1 173 1 18 1 22 1 21 1 
127 1 317 1 261 1 153 1 
127 1 273 1 

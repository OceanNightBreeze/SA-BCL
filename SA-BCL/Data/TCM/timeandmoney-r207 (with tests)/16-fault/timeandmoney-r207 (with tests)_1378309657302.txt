#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (9,58) 81 (2,3) (2,3) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (9,58) 81 (2,3) (2,3) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (9,58) 81 (2,3) (2,3) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (9,58) 81 (2,3) (2,3) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (109,206) 30 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (126,232) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (14,67,177) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 57 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (126,232) (126,232) 144 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 196 8 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (14,67,177) (14,67,177) 283 104 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 57 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 136 293 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (109,206) (109,206) (200,281) 181 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 265 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (109,206) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 143 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (109,206) (109,206) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 244 286 301 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 244 286 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 244 286 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 244 286 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 244 286 301 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (92,134) (92,134) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 196 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (126,232) (126,232) 144 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (126,232) (126,232) 144 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (126,232) (126,232) 144 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 196 8 110 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 26 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 268 152 291 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (126,232) (126,232) 175 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 257 98 17 49 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (109,206) 30 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 233 64 230 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 233 64 230 280 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 118 (15,133) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 118 (15,133) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 118 (60,285) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (126,232) (126,232) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (126,232) (126,232) 175 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 118 (60,285) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 101 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
238 1 2 1 3 1 247 1 68 1 276 1 295 1 33 1 121 1 58 1 81 1 
238 1 2 1 3 1 247 1 68 1 276 1 295 1 33 1 121 1 58 1 81 1 
238 1 2 1 3 1 247 1 68 1 276 1 295 1 33 1 121 1 58 1 81 1 
238 1 2 1 3 1 247 1 68 1 276 1 295 1 33 1 121 1 58 1 81 1 
258 1 260 1 276 4 121 1 102 3 278 2 238 4 242 3 222 2 89 1 68 1 247 1 158 1 210 1 94 1 290 1 311 1 272 1 
258 1 276 2 147 1 295 1 121 1 102 1 238 2 68 1 247 1 111 1 176 1 33 1 290 1 311 1 315 1 272 1 
258 1 260 1 276 3 295 1 121 1 102 2 278 1 9 1 238 3 242 1 68 2 247 2 311 1 
258 1 260 3 145 1 276 9 261 1 295 1 121 1 102 5 278 4 9 1 238 9 221 1 242 7 89 1 222 2 66 1 68 2 247 2 210 1 158 1 94 1 290 1 311 1 272 1 
258 1 260 3 145 1 276 9 261 1 295 1 121 1 102 5 278 4 9 1 238 9 221 1 242 7 89 1 222 2 66 1 68 2 247 2 210 1 158 1 94 1 290 1 311 1 272 1 
65 1 57 1 100 1 
302 1 65 1 297 2 
129 2 239 2 142 2 174 2 216 2 160 1 228 2 
98 2 142 1 216 1 185 1 13 1 239 1 129 1 206 1 28 1 30 1 174 1 159 2 160 1 228 1 18 1 257 2 
129 1 239 1 142 1 174 1 216 1 232 1 160 1 228 1 
129 1 14 1 174 1 233 1 228 1 177 1 
129 1 239 1 142 1 14 1 174 1 216 1 228 1 
156 1 67 1 195 1 80 1 263 1 
62 1 65 1 156 2 67 2 100 1 195 1 80 1 83 1 
156 1 67 1 80 1 
129 1 239 1 142 1 156 1 174 1 67 1 216 1 232 1 195 1 160 1 228 1 126 1 
65 1 
65 1 156 2 67 2 100 1 195 1 80 1 83 1 54 1 
179 1 275 1 204 1 100 1 231 1 146 2 80 2 83 1 205 2 219 2 183 1 65 1 156 5 67 5 69 1 132 1 252 1 251 1 195 2 
57 1 
273 1 239 1 142 1 129 2 63 1 174 2 216 1 228 2 
98 1 129 1 239 1 174 1 159 1 5 1 216 1 228 1 18 1 257 1 124 1 
142 1 129 3 239 3 174 3 5 1 216 3 228 3 
129 1 239 1 174 1 216 1 228 1 
273 1 63 1 129 1 239 1 142 1 174 1 216 1 228 1 
273 1 142 1 129 2 239 2 174 2 5 1 216 2 228 2 124 1 
129 2 239 1 64 1 174 2 5 1 233 1 216 1 228 2 
129 1 239 1 174 1 5 1 216 1 228 1 124 1 
273 1 129 1 239 1 142 1 174 1 216 1 228 1 
98 1 159 1 18 1 257 1 
98 1 159 1 18 1 257 1 
105 1 157 1 250 1 70 1 32 2 113 1 84 1 235 1 
129 1 239 1 284 1 174 1 216 1 228 1 
273 1 142 1 5 2 233 1 216 4 124 1 11 1 239 4 129 5 64 1 174 5 228 5 55 1 
129 1 239 1 174 1 216 1 228 1 
192 1 
192 1 
182 1 150 1 
182 1 150 1 
192 1 182 1 150 1 
192 1 
192 1 
192 1 
192 1 
192 2 182 1 150 1 
192 1 
192 1 
192 1 
75 2 166 1 41 2 232 1 82 2 85 1 126 1 129 1 239 1 243 1 174 1 135 1 255 2 22 2 142 1 144 1 216 1 192 2 156 2 67 2 160 1 228 1 199 1 
75 1 41 1 216 1 46 1 8 1 82 1 25 1 236 1 129 1 239 1 192 1 156 1 174 1 67 1 196 1 228 1 255 1 199 1 22 1 
89 1 290 1 272 1 
147 1 290 1 272 1 
89 2 4 1 214 1 147 1 290 3 127 1 
89 1 4 1 147 1 290 2 254 1 127 1 
89 1 4 1 147 1 290 2 127 2 
0 1 201 1 116 2 204 3 42 1 232 1 80 1 46 1 205 1 83 1 126 1 129 1 239 1 282 1 174 1 93 1 252 2 289 1 20 1 179 1 142 1 294 2 100 1 215 2 216 1 146 1 59 1 297 3 219 1 189 1 302 1 65 2 303 1 156 5 67 5 195 4 160 1 228 1 
232 1 80 1 87 1 126 1 239 1 129 1 174 1 51 1 142 1 100 1 216 1 263 1 65 1 156 2 29 1 67 2 195 2 160 1 228 1 
0 1 275 1 116 1 204 1 232 1 42 1 205 1 46 1 126 1 129 1 239 1 282 1 174 1 93 1 252 2 20 1 142 1 294 1 100 1 215 1 216 1 146 1 59 1 219 1 297 2 302 1 65 2 156 3 303 1 67 3 195 2 160 1 228 1 
0 1 275 1 116 1 204 1 42 1 205 1 46 1 172 1 282 1 93 1 252 2 20 1 294 1 215 1 146 1 59 1 297 2 219 1 302 1 65 1 156 2 303 1 67 2 195 1 
36 1 57 1 151 1 
151 1 220 1 
271 1 
296 1 151 1 
36 2 164 1 296 1 103 1 151 3 61 1 
164 1 296 1 151 1 
308 1 151 1 
0 1 39 1 117 3 201 1 180 2 148 1 168 3 122 2 170 4 12 1 191 1 173 1 229 1 53 7 256 1 56 1 21 1 
0 1 39 1 117 3 201 1 180 2 148 1 168 3 122 2 170 4 12 1 191 1 173 1 229 1 53 7 256 1 56 1 21 1 
0 1 39 1 117 3 201 1 180 2 148 1 168 3 122 2 277 1 170 4 12 1 191 1 173 1 229 1 53 7 256 1 21 1 56 1 
162 1 0 4 39 2 117 15 201 4 77 3 165 1 42 3 122 3 168 8 170 16 84 1 12 1 241 1 173 2 93 3 16 1 95 1 53 31 256 1 21 1 56 1 180 3 148 2 189 3 191 5 105 1 153 1 157 1 32 2 31 1 112 4 113 1 229 2 
0 2 39 1 117 4 201 2 203 1 122 1 168 3 170 5 84 1 12 1 173 1 175 1 53 9 56 1 21 1 180 2 148 1 191 1 105 1 157 1 32 2 113 1 229 1 317 1 
37 1 276 2 6 1 121 1 234 1 238 2 242 1 240 1 89 1 247 1 130 1 290 2 253 1 138 1 257 1 258 1 98 1 214 1 295 1 147 1 102 1 298 1 187 1 68 1 305 1 159 1 309 1 311 1 35 1 272 1 
37 1 78 1 276 3 6 1 234 1 238 3 242 2 89 1 247 1 130 1 290 2 253 1 257 1 258 1 98 1 214 1 295 1 147 1 262 1 102 1 298 1 188 1 187 1 68 1 305 1 159 1 309 1 311 1 35 1 272 1 
37 1 78 1 276 2 6 1 234 1 238 2 242 2 89 1 130 1 290 2 257 1 258 1 98 1 214 1 295 1 147 1 102 1 188 1 187 1 305 1 159 1 309 1 311 1 35 1 272 1 
276 1 6 2 234 1 125 1 238 1 246 1 247 1 18 1 257 1 98 1 23 1 295 2 262 1 296 1 184 1 151 1 187 1 107 1 68 1 305 2 159 1 197 1 35 2 
37 1 98 1 214 1 78 1 276 1 147 1 295 1 234 1 121 1 6 1 298 1 187 1 238 1 89 1 130 1 68 1 247 1 305 1 159 1 309 1 290 2 253 1 138 1 35 1 257 1 272 1 
43 1 
204 1 233 1 234 1 80 2 123 1 205 1 83 1 129 1 283 1 14 1 174 1 252 1 177 1 18 2 257 2 179 1 98 2 146 1 217 1 296 1 219 1 151 1 184 1 190 1 104 1 187 1 156 2 303 1 67 2 159 2 197 1 228 1 34 1 161 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
233 1 80 1 83 1 123 1 104 1 190 1 129 1 283 1 14 1 156 2 174 1 67 2 228 1 54 1 177 1 
179 1 233 1 146 1 205 1 123 1 219 1 104 1 190 1 129 1 283 1 14 1 156 1 174 1 67 1 228 1 177 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
129 1 283 1 14 1 156 1 174 1 67 1 233 1 228 1 123 1 177 1 190 1 104 1 
179 1 233 1 146 1 205 1 123 1 219 1 104 1 190 1 129 1 283 1 14 1 156 1 174 1 67 1 228 1 177 1 
0 1 39 1 57 1 180 1 122 1 168 1 170 2 235 1 84 1 12 1 105 1 157 1 70 1 250 1 32 2 113 1 53 2 229 1 56 1 21 1 
202 1 117 1 293 1 77 1 170 1 235 1 84 1 105 1 157 1 250 1 32 2 113 1 112 1 136 1 53 2 
140 1 259 1 115 1 117 1 202 1 5 1 216 1 170 1 235 1 84 1 124 1 105 1 239 1 129 1 157 1 174 1 250 1 32 2 113 1 228 1 53 2 313 1 
202 1 117 1 5 1 84 1 235 1 124 1 281 1 129 1 239 1 206 1 174 1 250 1 53 1 18 1 257 1 98 1 259 1 181 1 216 1 105 1 109 1 157 1 159 1 32 2 113 1 228 1 
140 1 98 1 73 1 170 1 235 1 84 1 265 1 105 1 157 1 250 1 159 1 32 2 113 1 53 1 18 1 257 1 
273 1 0 1 202 1 201 1 117 1 42 1 170 1 84 1 235 1 239 1 129 1 174 1 250 1 93 1 53 2 142 1 216 1 189 1 105 1 108 1 157 1 32 2 113 1 228 1 
0 1 170 1 235 1 84 1 48 1 105 1 157 1 70 1 250 1 93 1 32 2 113 1 53 1 
201 1 117 1 235 1 84 1 189 1 105 1 267 1 157 1 70 1 250 1 32 2 113 1 53 1 
0 1 117 1 201 1 42 1 170 1 235 1 84 1 189 1 105 1 157 1 70 1 250 1 93 1 32 2 113 1 53 2 
0 1 73 1 170 1 235 1 84 1 48 1 105 1 157 1 250 1 93 1 32 2 113 1 53 1 
73 1 201 1 117 1 235 1 84 1 189 1 105 1 267 1 157 1 250 1 32 2 113 1 53 1 
0 1 73 1 117 1 201 1 42 1 170 1 235 1 84 1 189 1 105 1 157 1 250 1 93 1 32 2 113 1 53 2 
0 1 117 1 201 1 42 1 170 1 235 1 84 1 189 1 105 1 157 1 250 1 93 1 32 2 113 1 53 2 
98 1 206 1 159 1 18 1 257 1 
98 1 143 1 159 1 18 1 257 1 
0 1 117 1 201 1 202 1 42 1 170 1 235 1 84 1 189 1 105 1 157 1 250 1 93 1 32 2 113 1 53 2 
98 1 240 1 206 1 109 1 159 1 257 1 
273 1 0 1 202 1 201 1 117 1 42 1 170 1 84 1 235 1 239 1 129 1 174 1 250 1 93 1 53 2 142 1 216 1 189 1 105 1 157 1 32 2 113 1 198 1 228 1 
301 1 105 1 244 1 208 1 157 1 286 1 32 2 113 1 84 1 317 1 
301 1 105 1 244 1 208 1 157 1 286 1 32 2 113 1 84 1 317 1 
301 1 105 1 244 1 208 1 157 1 286 1 32 2 113 1 84 1 317 1 
301 1 105 1 244 1 208 1 157 1 286 1 32 2 113 1 84 1 317 1 
301 1 105 1 244 1 208 1 157 1 286 1 32 2 113 1 84 1 317 1 
192 1 92 1 134 1 41 1 82 1 255 1 22 1 
196 1 
223 1 192 1 41 1 82 1 255 1 22 1 
75 2 166 1 41 1 232 1 82 1 85 1 126 1 129 1 239 1 243 1 174 1 135 1 255 1 22 1 142 1 144 1 216 1 192 1 156 1 67 1 160 1 228 1 199 1 
75 2 166 1 41 1 232 1 82 1 85 1 126 1 129 1 239 1 243 1 174 1 135 1 255 1 22 1 142 1 144 1 216 1 192 1 156 1 67 1 160 1 228 1 199 1 
75 2 166 1 41 1 232 1 82 1 85 1 126 1 129 1 239 1 243 1 174 1 135 1 255 1 22 1 142 1 144 1 216 1 192 1 156 1 67 1 160 1 228 1 199 1 
26 1 
26 1 
274 1 
274 1 
249 1 119 1 
75 1 41 1 46 1 8 1 82 1 25 1 85 1 236 1 192 1 156 1 110 1 67 1 196 1 195 1 135 1 255 1 22 1 
26 1 
274 1 
129 2 163 1 174 2 288 1 228 2 178 1 
37 1 98 2 1 1 214 1 78 1 147 1 234 1 298 1 187 1 240 1 89 1 224 1 245 1 305 1 159 2 309 1 290 2 257 2 272 1 
37 1 98 1 214 1 78 1 147 1 234 1 298 1 187 1 89 1 245 1 248 1 305 1 159 1 309 1 290 2 257 1 272 1 
98 1 1 1 234 1 296 1 151 1 184 1 187 1 125 1 305 1 193 1 159 1 197 1 18 1 257 1 
37 1 98 1 1 1 214 1 78 1 147 1 234 1 298 1 187 1 89 1 224 1 245 1 305 1 159 1 309 1 290 2 257 1 272 1 
155 1 
65 1 57 1 204 1 100 1 69 1 252 1 251 1 
72 1 204 1 80 1 205 1 83 1 252 1 179 1 99 1 100 1 24 1 146 1 219 1 297 1 302 1 65 2 156 1 67 1 
200 1 204 1 164 1 234 1 79 1 80 1 83 1 205 2 279 1 50 1 15 1 18 1 257 1 179 2 98 1 146 2 103 1 296 1 219 2 151 3 186 1 187 2 220 2 156 1 303 1 67 1 159 1 316 1 
0 1 201 1 204 5 77 1 42 1 7 1 80 1 45 1 44 1 83 1 205 2 93 1 252 3 291 1 16 1 179 2 294 4 100 1 215 4 146 2 149 1 297 6 219 2 152 1 189 1 302 3 65 4 156 1 67 1 268 1 112 1 
0 1 39 1 201 1 204 2 232 1 205 1 126 1 12 1 129 1 239 1 174 1 175 1 252 1 179 1 142 1 146 1 216 1 149 2 219 1 156 1 67 1 160 1 228 1 229 1 314 1 
179 1 100 1 204 1 146 1 205 1 219 1 65 1 69 1 251 1 252 1 
0 1 294 1 215 1 42 1 297 2 302 1 65 1 93 1 252 2 
65 1 156 1 67 1 100 1 80 1 83 1 
275 1 204 2 234 1 80 4 205 2 83 2 128 1 49 1 252 2 137 1 17 2 18 2 257 4 179 1 98 4 146 2 217 2 296 1 219 2 151 1 184 1 187 1 303 2 156 3 67 3 159 4 197 1 34 1 161 1 
98 1 129 1 239 1 142 1 206 1 174 1 30 1 159 1 216 1 160 1 228 1 18 1 257 1 
179 1 294 2 204 1 100 2 215 2 146 1 217 1 122 1 205 1 297 4 219 1 302 2 65 4 303 1 252 2 
41 1 300 1 22 1 
41 1 300 1 22 1 
41 1 300 1 22 1 
91 1 249 1 307 1 41 1 22 1 
167 1 41 1 22 1 
167 1 41 1 22 1 
167 1 41 1 22 1 
41 1 22 1 
192 1 
0 1 39 1 201 1 117 4 180 2 165 1 122 1 168 3 170 4 84 2 12 1 191 1 105 2 157 2 32 4 113 2 53 8 229 1 56 1 21 1 
0 1 57 1 39 1 117 3 201 1 180 2 122 1 168 2 170 3 12 1 229 1 53 6 56 1 21 1 
0 1 42 1 170 2 84 1 105 1 157 1 93 1 32 2 113 1 53 2 292 1 
162 1 0 1 201 1 117 4 77 1 42 1 168 1 170 3 189 1 191 1 93 1 112 2 16 1 53 7 
0 5 162 1 39 2 117 10 201 4 77 2 165 1 42 2 122 1 168 8 170 13 84 1 12 2 175 1 93 2 136 1 53 23 21 1 56 1 180 4 189 1 191 4 105 1 157 1 194 1 32 2 112 2 113 1 229 2 
117 1 112 1 53 1 
77 1 53 1 170 1 
0 1 117 3 201 1 42 1 168 1 170 3 189 1 191 1 93 1 53 6 139 1 
0 2 201 1 117 5 77 1 165 1 42 2 7 1 44 1 168 2 170 6 84 2 93 2 291 1 53 11 16 1 180 1 152 1 189 1 191 1 105 2 157 2 268 1 32 4 112 1 113 2 317 1 
0 1 39 1 201 1 117 3 180 1 168 2 170 3 12 1 191 1 53 6 229 1 
39 1 117 2 180 1 165 1 168 2 170 1 84 1 191 1 105 1 157 1 209 1 32 2 113 1 229 1 53 3 21 1 56 1 
0 2 39 2 117 5 201 2 180 3 168 5 170 5 84 1 191 2 12 1 105 1 157 1 175 1 32 2 113 1 229 2 53 10 317 1 
0 1 170 2 84 1 105 1 157 1 93 1 32 2 113 1 53 2 317 1 
0 1 42 1 170 2 84 1 105 1 157 1 93 1 32 2 113 1 53 2 317 1 
39 1 117 2 180 1 165 1 168 2 170 1 84 3 191 1 105 3 157 3 209 1 32 6 113 3 53 3 229 1 19 1 317 1 
162 1 0 5 39 3 117 18 201 5 77 3 165 2 42 3 122 1 168 9 170 16 84 5 12 2 209 1 93 3 16 1 95 1 53 34 292 1 21 1 56 1 19 1 180 4 189 3 191 5 105 5 153 1 157 5 31 1 32 10 112 4 113 5 229 3 317 1 
0 1 39 1 201 1 117 4 77 1 122 1 168 2 170 4 84 1 12 1 291 1 53 8 16 1 56 1 21 1 180 2 105 1 157 1 32 2 112 1 113 1 229 1 317 1 
162 1 0 2 39 1 201 1 117 5 77 1 42 1 122 1 168 3 170 6 84 2 12 1 93 1 291 1 53 11 16 1 292 1 21 1 56 1 180 2 191 1 105 2 157 2 32 4 112 2 113 2 229 1 317 1 
0 3 39 1 201 2 117 8 77 1 165 1 42 2 7 1 122 1 44 1 168 4 170 9 84 3 12 1 93 2 291 1 53 17 16 1 292 1 21 1 56 1 180 3 152 1 189 1 191 1 105 3 157 3 268 1 32 6 112 1 113 3 229 1 317 1 
0 5 39 2 201 4 117 11 77 1 165 1 42 2 7 1 122 1 44 1 168 7 170 13 84 3 12 2 175 1 93 2 291 1 53 24 16 1 292 1 21 1 56 1 180 4 152 1 189 1 191 3 105 3 157 3 268 1 32 6 112 1 113 3 229 2 317 1 
0 1 39 1 201 1 117 4 77 1 122 1 168 2 170 4 84 1 12 1 291 1 53 8 16 1 56 1 21 1 180 2 105 1 157 1 32 2 112 1 113 1 229 1 317 1 
0 2 201 1 117 5 77 1 165 1 42 2 7 1 44 1 168 2 170 6 84 2 93 2 291 1 53 11 16 1 180 1 152 1 189 1 191 1 105 2 157 2 268 1 32 4 112 1 113 2 317 1 
0 2 201 1 117 5 77 1 165 1 42 2 7 1 44 1 168 1 170 6 84 3 93 2 291 1 53 11 16 1 292 1 180 1 152 1 189 1 105 3 157 3 268 1 32 6 112 1 113 3 317 1 
0 3 201 1 117 5 77 1 165 2 42 3 7 1 44 1 168 5 170 9 84 4 93 3 291 1 53 14 16 1 19 1 180 2 152 1 189 1 191 3 105 4 157 4 268 1 32 8 112 1 113 4 317 1 
0 1 39 3 117 4 201 1 180 3 168 6 170 3 191 3 12 1 53 7 229 3 56 1 21 2 
0 2 201 1 117 5 77 1 165 1 42 2 7 1 44 1 168 1 170 6 84 3 93 2 291 1 53 11 16 1 19 1 180 1 152 1 189 1 105 3 157 3 268 1 32 6 112 1 113 3 317 1 
64 1 233 1 230 1 
280 1 64 1 226 1 40 1 306 1 233 1 230 1 96 1 
98 1 57 1 159 1 234 1 197 1 296 1 151 1 184 1 18 1 257 1 187 1 
98 1 118 1 164 1 5 1 216 1 234 1 296 1 151 1 187 1 239 1 129 1 174 1 159 1 133 1 228 1 18 1 257 1 
98 1 118 1 164 1 5 1 216 1 234 1 296 1 151 1 187 1 239 1 129 1 174 1 159 1 133 1 228 1 17 1 257 1 
98 1 118 1 164 1 5 1 216 1 234 1 296 1 151 1 187 1 239 1 129 1 285 1 174 1 159 1 228 1 17 1 257 1 
142 1 98 1 100 1 216 1 232 1 60 1 151 1 126 1 220 1 129 1 239 1 65 1 156 1 174 1 67 1 159 1 160 1 228 1 17 1 257 1 
142 1 98 1 100 1 216 1 232 1 151 1 126 1 220 1 129 1 239 1 65 1 156 1 174 1 67 1 15 1 159 1 160 1 228 1 17 1 257 1 
98 1 159 1 234 1 257 1 187 1 86 1 
98 5 74 1 164 1 234 2 103 1 296 2 10 1 151 3 86 1 187 3 88 1 240 1 207 1 28 1 90 1 131 1 159 6 114 1 18 2 257 6 
129 1 239 1 174 1 5 1 216 1 228 1 
0 1 39 1 201 2 200 1 204 4 232 1 80 1 205 2 83 1 279 1 126 1 12 1 128 1 129 1 239 1 174 1 15 1 175 1 252 3 251 1 18 1 257 1 179 2 142 1 98 1 100 2 216 1 146 2 149 2 219 2 151 1 186 1 220 1 65 2 156 2 67 2 69 1 159 1 195 1 160 1 228 1 229 1 
36 1 98 2 164 1 234 1 103 1 296 1 151 2 86 1 187 2 240 1 159 2 257 2 316 1 
98 4 234 1 296 1 184 1 151 1 187 1 266 1 240 1 227 1 159 4 197 1 18 1 257 4 
98 2 38 1 74 1 164 1 234 1 296 1 151 1 187 2 90 1 225 1 159 2 17 1 257 2 212 1 
98 1 159 1 147 1 234 1 309 1 290 1 18 1 257 1 272 1 187 1 
88 1 98 2 240 1 78 1 159 2 270 1 234 1 296 1 151 1 257 2 187 1 
98 4 234 2 296 2 184 1 151 3 10 1 187 2 88 1 240 1 227 1 159 5 197 1 114 1 17 1 18 1 257 5 
98 4 234 2 218 1 296 2 184 1 151 3 10 1 187 2 88 1 240 1 227 1 159 5 197 1 17 1 18 1 257 5 
98 1 118 1 164 1 5 1 216 1 234 1 296 1 151 1 187 1 239 1 129 1 285 1 174 1 159 1 228 1 18 1 257 1 
98 1 74 1 164 1 234 1 103 1 296 1 151 1 187 2 90 1 131 1 159 1 17 1 257 1 
163 1 237 1 129 1 304 1 174 1 288 1 228 1 312 1 178 1 
287 1 101 1 312 1 
154 1 304 1 312 1 237 1 
106 1 154 1 156 1 304 1 67 1 287 1 101 1 195 1 312 1 237 1 
258 1 57 1 102 1 311 1 
258 1 238 1 247 1 68 1 276 1 102 1 311 1 
276 1 295 1 35 1 
258 1 276 3 121 1 102 1 47 1 171 1 299 1 238 3 68 1 247 1 176 2 311 1 
258 1 238 2 242 1 222 1 247 1 68 1 276 2 102 1 311 1 
276 1 121 1 102 1 278 1 238 1 89 1 68 1 247 1 210 1 290 1 272 1 
238 1 247 1 68 1 276 1 121 1 102 1 311 1 
258 1 238 1 247 1 68 1 276 1 121 1 311 2 
238 2 247 2 68 2 52 1 276 2 71 1 121 1 102 1 311 1 97 1 
258 1 260 1 276 3 145 1 261 1 121 1 102 2 278 1 238 3 242 2 68 1 247 1 311 1 
258 1 214 1 276 2 147 1 121 1 102 1 238 2 242 1 89 1 68 1 247 1 290 2 211 1 311 1 272 1 
258 1 260 1 276 4 121 1 102 2 278 1 238 4 242 2 222 1 68 2 247 2 94 1 311 1 
258 1 238 1 247 1 68 1 276 1 121 1 102 1 311 1 
258 2 260 1 276 4 102 3 278 1 171 1 299 1 238 4 242 2 68 1 247 1 176 1 310 1 311 2 
258 1 238 2 242 1 221 1 247 1 68 1 276 2 120 1 121 1 102 1 311 1 264 1 
258 1 276 3 121 1 102 1 171 2 299 1 238 3 27 1 68 1 247 1 176 2 311 1 
141 1 76 1 269 2 102 2 
238 1 247 1 68 1 276 1 121 1 169 1 
258 1 238 2 242 1 247 1 68 1 145 1 276 2 121 1 102 1 311 1 
213 1 
258 1 238 1 247 1 68 1 276 1 121 1 102 1 311 1 
258 1 238 3 242 1 247 1 68 1 176 1 145 1 276 3 121 1 102 1 311 1 
260 1 310 1 102 1 278 1 
102 1 311 1 

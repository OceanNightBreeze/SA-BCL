#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 285 12 308 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 285 12 308 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 285 12 308 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 285 12 308 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 285 12 308 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 227 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 199 97 58 90 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (171,205) 65 106 (34,201) (34,201) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 207 1 267 1 36 1 129 1 75 1 
303 1 207 1 267 1 36 1 129 1 75 1 
303 1 207 1 267 1 36 1 129 1 75 1 
303 1 207 1 267 1 36 1 129 1 75 1 
150 1 142 1 175 1 51 1 294 1 71 3 295 1 112 2 79 1 267 1 207 4 129 1 36 4 209 3 183 2 311 1 211 1 75 1 
150 1 163 1 51 1 61 1 127 1 79 1 267 1 207 2 154 1 129 1 36 2 209 1 232 1 75 1 211 1 252 1 
150 1 51 1 294 1 71 1 267 1 207 3 154 1 129 2 36 3 209 2 183 1 192 1 75 2 
150 1 142 1 175 1 51 1 294 3 71 7 295 1 112 2 55 1 79 1 267 1 207 9 154 1 129 2 36 9 209 5 138 1 198 1 183 4 311 1 192 1 211 1 141 1 75 2 
150 1 142 1 175 1 51 1 294 3 71 7 295 1 112 2 55 1 79 1 267 1 207 9 154 1 129 2 36 9 209 5 138 1 198 1 183 4 311 1 192 1 211 1 141 1 75 2 
231 1 176 1 77 1 
299 1 176 1 60 2 
87 2 21 2 65 2 106 1 171 2 188 2 228 1 218 2 
151 2 215 1 242 1 318 1 216 1 347 2 218 3 21 2 65 2 106 1 301 1 5 1 87 3 184 1 143 1 68 1 49 1 275 1 332 1 188 2 228 1 166 1 255 2 32 1 113 1 283 1 169 1 91 1 170 1 13 1 171 2 286 1 235 1 14 2 310 2 96 1 43 1 
201 1 65 1 106 1 171 1 
201 1 87 1 176 1 358 1 54 1 218 1 21 1 155 1 34 1 231 1 65 1 284 1 256 1 106 1 171 1 289 1 
201 1 87 1 162 1 176 1 188 1 358 1 218 1 21 1 34 1 231 1 65 2 284 1 256 1 22 1 106 1 171 2 289 1 
162 1 35 1 22 1 92 1 124 1 
162 2 231 1 35 1 22 2 92 1 176 1 363 1 152 1 
162 1 35 1 22 1 
201 1 162 1 34 1 65 1 22 1 92 1 106 1 171 1 
176 1 
162 2 231 1 35 1 22 2 92 1 176 1 152 1 223 1 
162 5 122 1 110 1 144 2 176 1 225 1 152 1 62 1 231 1 35 2 104 1 92 2 22 5 307 2 40 1 337 1 340 2 85 1 159 1 
77 1 228 1 
87 2 188 1 228 2 218 2 21 2 65 1 171 1 309 1 119 1 
226 1 322 1 245 1 
87 1 184 1 68 1 215 1 242 1 319 1 216 1 228 1 255 1 32 1 113 1 218 1 91 1 170 1 14 1 310 1 
87 2 184 1 68 1 242 1 215 1 304 1 188 1 226 1 216 1 32 1 255 1 113 1 218 2 21 1 91 1 170 1 105 1 171 1 14 1 310 1 
87 5 21 5 297 1 65 1 105 1 171 4 309 1 188 4 304 2 305 1 54 1 228 1 109 1 218 5 
87 2 21 2 292 1 171 2 188 2 358 1 205 1 218 2 
87 3 21 3 65 1 171 3 304 1 188 3 228 1 218 3 
87 1 21 1 292 1 171 1 188 1 358 1 218 1 
87 1 21 1 65 1 171 1 188 1 309 1 358 1 119 1 218 1 
87 2 145 1 8 1 304 1 188 2 358 1 218 2 21 2 256 1 65 1 284 1 105 1 171 2 309 1 289 1 
87 2 21 2 171 1 188 1 304 1 305 1 54 1 228 1 218 2 
87 1 21 1 256 1 284 1 327 1 105 1 8 1 171 1 188 1 304 1 358 1 289 1 218 1 
87 2 304 1 188 2 226 1 245 1 218 2 21 2 65 1 171 2 309 1 
87 1 184 1 68 1 215 1 242 1 216 1 228 1 255 1 32 1 113 1 218 1 91 1 170 1 14 1 310 1 
87 1 184 1 68 1 242 1 358 1 216 1 228 1 255 1 32 1 113 1 218 1 91 1 189 1 14 1 310 1 140 1 237 1 
151 2 123 1 322 2 346 1 1 1 347 4 323 1 245 2 130 1 107 1 84 1 199 1 143 2 49 2 330 1 204 1 332 1 165 1 226 2 166 1 283 1 169 1 286 1 96 1 
87 1 21 1 171 1 188 1 358 1 289 1 205 1 218 1 
202 1 300 1 
202 1 300 1 
355 1 42 1 
355 1 42 1 
355 1 42 1 
202 1 277 1 300 1 
202 1 37 1 300 1 
202 2 300 2 125 1 355 1 279 1 42 1 
202 1 277 1 300 1 
202 1 277 1 300 1 
202 1 116 1 300 1 
202 1 116 1 300 1 
202 1 116 1 300 1 
315 1 314 1 263 1 19 1 78 1 217 1 218 2 21 2 22 1 157 1 271 1 300 1 161 1 87 2 162 1 202 1 188 2 53 1 52 1 228 1 362 1 37 1 171 2 259 1 
67 1 314 2 162 2 315 3 16 1 202 2 176 1 263 1 53 2 217 2 279 1 296 1 22 2 250 1 300 2 259 2 4 1 239 1 313 2 
142 1 211 1 79 1 
163 1 211 1 79 1 
280 1 142 2 163 1 357 1 146 1 211 3 
280 1 142 1 163 1 146 1 244 1 211 2 
280 1 142 1 163 1 146 2 211 2 
97 1 17 2 98 2 121 1 45 1 176 2 266 2 152 1 60 3 194 1 78 1 1 1 63 1 350 1 299 1 22 5 104 3 271 1 199 1 162 5 144 1 110 1 225 2 204 1 52 1 165 1 35 1 231 1 307 1 92 4 290 1 340 1 
97 1 17 1 121 1 176 1 45 1 266 1 124 2 152 1 60 1 78 1 63 1 104 1 22 5 65 1 24 2 106 1 199 1 201 1 162 5 144 1 110 1 225 2 204 1 111 1 149 1 35 3 231 1 34 1 307 1 92 4 171 1 340 1 
97 1 121 1 98 1 17 2 176 3 266 2 194 1 60 4 78 1 1 1 63 1 350 1 299 2 22 3 104 3 199 1 85 1 162 3 144 1 225 2 204 1 165 1 231 1 92 2 307 1 340 1 
97 2 17 4 121 1 98 2 176 4 266 4 60 7 194 1 78 2 1 2 63 1 350 1 299 3 22 4 104 5 108 1 199 2 85 1 162 4 144 1 225 4 204 2 165 2 33 1 231 1 307 1 92 3 340 1 41 1 
77 1 341 1 113 1 
158 1 113 1 
167 1 
184 1 68 1 113 1 
316 1 113 1 
184 1 113 1 
184 1 213 1 68 1 197 1 341 2 113 3 
28 1 143 3 69 1 49 4 204 1 165 1 346 2 347 7 148 1 229 1 178 1 156 1 360 1 130 3 326 1 257 1 272 2 
28 1 143 3 69 1 49 4 204 1 165 1 346 2 347 7 148 1 229 1 178 1 156 1 360 1 130 3 326 1 257 1 272 2 
28 1 143 3 69 1 49 4 204 1 165 1 346 2 347 7 148 1 229 1 178 1 156 1 360 1 130 3 326 1 2 1 257 1 272 2 
97 3 241 1 151 2 345 3 346 5 177 4 347 31 1 3 81 1 178 5 156 2 130 10 326 1 199 3 272 3 160 1 28 1 143 15 69 1 49 16 187 1 204 4 165 4 166 1 229 1 148 2 360 2 283 1 169 1 257 2 286 1 190 1 94 1 367 1 
28 1 143 4 151 4 49 5 204 1 165 1 346 3 166 2 347 9 148 1 229 1 230 1 178 1 156 1 153 1 360 1 130 4 169 2 283 2 326 1 257 1 286 2 190 1 272 2 
150 1 262 1 79 1 82 1 267 1 154 1 129 1 128 1 23 1 3 1 47 1 142 1 163 1 186 1 357 1 51 1 71 1 10 1 255 1 32 1 207 2 36 2 209 1 91 1 364 1 310 1 14 1 288 1 75 1 211 2 
150 1 44 1 262 1 79 1 82 1 154 1 248 1 129 1 128 1 23 1 3 1 47 1 142 1 163 1 357 1 186 1 51 1 71 2 255 1 11 1 32 1 207 3 36 3 209 1 91 1 310 1 14 1 288 1 75 1 211 2 
150 1 44 1 262 1 79 1 82 1 154 1 248 1 23 1 3 1 47 1 142 1 163 1 186 1 357 1 51 1 71 2 255 1 32 1 207 2 36 2 209 1 91 1 310 1 14 1 211 2 
184 1 186 2 264 1 216 1 32 1 11 1 255 1 113 1 207 1 154 2 129 1 36 1 91 1 220 1 23 2 196 1 258 1 47 2 14 1 310 1 339 1 75 1 329 1 
142 1 163 1 357 1 262 1 186 1 32 1 255 1 79 1 82 1 267 1 207 1 154 1 128 1 129 1 36 1 248 1 91 1 23 1 3 1 364 1 47 1 288 1 14 1 310 1 211 2 75 1 
224 1 
0 1 214 1 264 1 216 2 218 1 131 1 134 1 270 1 136 1 328 1 87 1 184 1 144 1 225 2 54 1 57 1 91 1 284 1 14 2 339 1 340 1 289 1 342 1 95 1 243 1 152 1 63 1 21 1 102 1 155 1 104 2 22 2 354 1 66 1 162 2 110 1 358 1 255 2 32 1 113 1 35 2 307 1 256 1 310 2 
87 1 162 2 243 1 152 1 358 1 54 1 218 1 21 1 155 1 35 2 256 1 22 2 131 1 284 1 136 1 289 1 342 1 95 1 223 1 120 1 
87 1 162 1 18 1 243 1 358 1 54 1 218 1 21 1 155 1 256 1 22 1 131 1 284 1 136 1 234 1 289 1 342 1 95 1 
18 1 243 1 152 1 218 1 21 1 155 1 131 1 22 2 195 1 136 1 223 1 87 1 162 2 358 1 54 1 35 2 284 1 256 1 234 1 289 1 95 1 342 1 120 1 
214 2 176 1 218 1 325 1 131 1 136 1 86 1 223 1 87 1 144 1 225 1 50 1 54 1 231 1 284 1 289 1 340 1 342 1 95 1 99 1 243 1 152 1 21 1 102 1 155 1 65 1 22 2 104 1 106 1 354 1 195 2 66 2 201 1 162 2 110 1 358 1 306 1 35 3 34 1 256 1 307 1 171 1 120 2 
214 1 243 1 218 1 21 1 102 1 155 1 131 1 22 1 104 1 354 1 270 1 136 1 66 1 87 1 162 1 144 1 110 1 225 1 358 1 54 1 307 1 284 1 256 1 340 1 289 1 95 1 342 1 
214 2 176 1 243 1 99 1 218 1 21 1 102 1 155 1 65 1 104 1 131 1 22 1 106 1 354 1 136 1 66 2 201 1 87 1 162 1 110 1 144 1 225 1 50 1 358 1 54 1 306 1 34 1 231 1 284 1 256 1 307 1 171 1 289 1 340 1 95 1 342 1 
214 2 176 1 243 1 99 1 218 1 21 1 102 1 155 1 65 1 104 1 131 1 22 1 106 1 354 1 136 1 66 2 201 1 87 1 162 1 110 1 144 1 225 1 50 1 358 1 54 1 306 1 34 1 231 1 284 1 256 1 307 1 171 1 289 1 340 1 95 1 342 1 
214 2 176 1 243 1 218 1 21 1 155 1 65 1 104 1 131 1 22 1 269 1 135 1 106 1 354 1 136 1 66 2 201 1 87 1 162 1 110 1 144 1 225 1 50 1 358 1 54 1 34 1 231 1 284 1 256 1 307 1 365 1 171 1 289 1 340 1 95 1 342 1 
18 1 176 1 243 1 218 1 21 1 155 1 65 1 131 1 22 1 106 1 195 1 136 1 86 1 201 1 87 1 162 1 358 1 54 1 34 1 231 1 35 1 284 1 256 1 171 1 234 1 289 1 95 1 342 1 120 1 
18 1 176 1 243 1 218 1 21 1 155 1 65 1 131 1 22 1 106 1 195 1 136 1 86 1 201 1 87 1 162 1 358 1 54 1 34 1 231 1 35 1 284 1 256 1 171 1 234 1 289 1 95 1 342 1 120 1 
214 1 243 1 218 1 21 1 155 1 131 1 22 1 269 1 104 1 354 1 270 1 136 1 66 1 87 1 162 1 144 1 110 1 225 1 358 1 54 1 307 1 284 1 256 1 340 1 289 1 95 1 342 1 
151 2 77 1 346 2 322 1 347 6 245 1 130 2 326 1 84 1 272 1 28 1 143 3 49 3 204 1 332 1 226 1 165 1 166 1 228 2 148 1 229 1 283 1 169 1 257 1 286 1 96 1 
283 1 169 1 151 2 254 1 286 1 332 1 20 1 166 1 96 1 
242 1 215 1 151 2 318 1 319 1 20 1 216 1 347 2 245 1 218 2 21 1 83 1 105 1 181 1 87 2 184 1 143 1 68 1 49 1 332 1 188 1 304 1 228 1 166 1 32 1 255 1 113 1 115 1 91 1 169 1 283 1 170 1 171 1 286 1 310 1 14 1 235 1 96 1 
215 2 318 1 216 1 322 7 1 2 218 3 80 2 178 4 130 8 326 1 272 1 221 2 87 3 184 2 143 10 275 2 49 10 188 1 332 3 226 7 228 2 148 1 229 1 283 3 91 2 286 3 235 1 14 3 96 3 15 1 97 2 151 6 242 2 20 1 346 4 347 20 101 1 245 7 21 1 248 1 105 1 199 2 28 1 203 1 68 2 204 3 304 1 165 3 166 3 255 3 32 2 113 2 169 3 170 2 257 1 171 1 39 2 310 3 172 2 
264 1 318 1 216 2 218 1 84 1 5 2 87 1 184 3 143 1 7 1 49 1 332 2 188 1 10 1 147 1 88 1 56 1 283 2 91 4 336 1 286 2 235 1 14 6 339 1 291 1 96 2 151 4 347 2 21 1 249 1 68 1 70 1 304 1 166 2 255 7 32 3 359 1 113 4 361 1 169 2 171 1 117 1 310 7 
97 1 151 2 20 1 346 1 322 1 347 3 1 1 245 1 218 1 21 1 130 1 65 1 199 1 302 1 87 1 143 2 49 1 204 1 332 1 188 1 226 1 165 1 166 1 283 1 169 1 171 1 309 1 286 1 96 1 
151 2 123 1 49 2 204 1 332 1 226 1 322 1 166 1 347 2 245 1 178 1 130 1 169 1 283 1 84 1 286 1 199 1 96 1 
143 2 151 2 332 1 226 1 165 1 346 1 322 1 166 1 347 2 1 1 323 1 245 1 130 1 169 1 283 1 84 1 286 1 96 1 
143 2 97 1 151 2 49 2 204 1 332 1 165 1 226 2 346 1 322 2 166 1 1 1 347 4 245 2 178 1 130 2 169 1 283 1 84 1 286 1 199 1 96 1 
7 1 151 2 123 1 49 2 204 1 332 1 226 1 322 1 166 1 347 2 245 1 178 1 130 1 169 1 283 1 286 1 199 1 96 1 
143 2 7 1 151 2 332 1 226 1 165 1 346 1 322 1 166 1 347 2 1 1 323 1 245 1 130 1 169 1 283 1 286 1 96 1 
143 2 97 1 7 1 151 2 49 2 204 1 332 1 165 1 226 2 346 1 322 2 166 1 1 1 347 4 245 2 178 1 130 2 169 1 283 1 286 1 199 1 96 1 
143 2 97 1 151 2 49 2 204 1 332 1 165 1 226 2 346 1 322 2 166 1 1 1 347 4 245 2 178 1 130 2 169 1 283 1 286 1 199 1 96 1 
242 1 215 1 151 2 318 1 216 1 347 2 218 1 87 1 184 1 143 1 68 1 49 1 275 1 332 1 228 1 166 1 32 1 255 1 113 1 91 1 169 1 283 1 170 1 286 1 310 1 14 1 235 1 96 1 
87 1 184 1 68 1 91 1 242 1 274 1 189 1 140 1 310 1 14 1 216 1 32 1 255 1 113 1 218 1 
143 2 97 1 151 2 49 2 204 1 20 1 332 1 165 1 226 2 346 1 322 2 166 1 1 1 347 4 245 2 178 1 130 2 169 1 283 1 286 1 199 1 96 1 
97 1 242 1 215 1 151 2 346 1 322 2 1 1 347 4 245 2 218 1 178 1 130 2 199 1 87 1 184 1 143 2 68 1 49 2 275 1 204 1 332 1 165 1 226 2 10 1 166 1 32 1 255 1 113 1 91 1 169 1 283 1 170 1 39 1 286 1 310 1 14 1 96 1 
97 1 151 2 20 1 322 1 1 1 347 3 218 1 245 1 178 1 21 1 130 1 65 1 26 1 199 1 87 1 143 1 49 2 204 1 332 1 188 1 165 1 226 1 166 1 283 1 169 1 171 1 309 1 286 1 96 1 
153 1 12 1 283 1 169 1 285 1 308 1 151 2 286 1 166 1 31 1 
153 1 12 1 283 1 169 1 285 1 308 1 151 2 286 1 166 1 31 1 
153 1 12 1 283 1 169 1 285 1 308 1 151 2 286 1 166 1 31 1 
153 1 12 1 283 1 169 1 285 1 308 1 151 2 286 1 166 1 31 1 
153 1 12 1 283 1 169 1 285 1 308 1 151 2 286 1 166 1 31 1 
296 1 67 1 314 1 202 1 353 1 300 1 53 1 259 1 217 1 279 1 
37 1 161 1 
314 1 356 1 202 1 29 1 300 1 53 1 259 1 217 1 222 1 
277 1 118 1 
116 1 125 1 137 1 
67 1 162 1 314 1 315 2 16 1 202 1 176 1 263 1 53 1 217 1 279 1 296 1 22 1 250 1 300 1 259 1 239 1 313 1 
67 1 162 1 314 1 315 2 16 1 202 1 176 1 263 1 53 1 217 1 279 1 296 1 22 1 250 1 300 1 259 1 239 1 313 1 
67 1 162 1 314 1 315 2 16 1 202 1 176 1 263 1 53 1 217 1 279 1 296 1 22 1 250 1 300 1 259 1 239 1 313 1 
277 1 125 1 118 1 
277 1 125 1 118 1 
116 1 137 1 
116 1 125 1 137 1 
157 1 19 1 
314 1 315 1 19 1 78 1 217 1 218 2 21 2 22 1 157 1 250 1 271 1 300 1 200 1 161 1 87 2 162 1 202 1 188 2 53 1 52 1 228 1 92 1 362 1 37 1 171 2 259 1 313 1 
317 1 151 2 318 1 20 1 347 2 218 2 21 2 298 1 249 1 5 2 87 2 184 1 143 1 70 1 49 1 332 1 333 1 166 1 32 1 255 2 113 1 91 1 169 1 283 1 286 1 310 2 235 1 14 2 260 1 236 1 96 1 
142 1 163 1 357 1 186 1 262 1 10 1 126 1 32 1 255 2 79 1 82 1 248 1 91 1 210 1 14 2 310 2 288 1 211 2 76 1 
142 1 163 1 357 1 186 1 262 1 126 1 255 1 32 1 79 1 82 1 248 1 91 1 73 1 14 1 310 1 288 1 211 2 
184 1 186 1 264 1 216 1 278 1 32 1 255 1 113 1 91 1 196 1 14 1 310 1 339 1 76 1 
142 1 163 1 357 1 186 1 262 1 126 1 255 1 32 1 79 1 82 1 248 1 91 1 210 1 14 1 310 1 288 1 211 2 76 1 
193 1 
231 1 104 1 122 1 176 1 225 1 40 1 77 1 
176 2 152 1 60 1 102 1 299 1 104 1 22 1 251 1 162 1 144 1 110 1 225 1 334 1 35 1 231 1 307 1 340 1 
316 2 261 1 122 1 176 8 266 6 216 1 321 2 1 2 80 2 132 2 180 1 184 3 185 2 144 4 331 2 225 8 10 1 57 1 231 2 91 4 59 2 14 3 93 2 340 4 341 2 343 2 97 2 17 6 152 3 60 12 63 2 246 2 299 6 104 9 22 5 352 2 197 1 158 3 199 2 162 5 68 3 110 4 204 2 165 2 206 1 32 3 255 3 113 10 35 5 307 4 40 1 74 1 310 3 366 1 
97 2 17 4 345 1 176 1 266 4 60 2 177 1 1 2 81 1 299 1 104 6 46 1 199 2 144 1 110 1 225 4 204 2 165 2 90 1 335 1 281 1 307 1 58 1 340 1 
201 1 28 1 162 1 110 1 144 1 225 1 204 1 165 1 227 1 148 1 306 1 34 1 65 1 104 2 22 1 307 1 132 2 106 1 257 1 171 1 340 1 
110 1 144 1 122 1 225 1 176 1 231 1 307 1 104 1 40 1 340 1 
97 2 17 5 225 5 176 5 204 2 266 5 60 10 165 2 1 2 80 1 299 5 132 2 104 5 93 1 199 2 
162 1 231 1 35 1 22 1 176 1 152 1 
0 1 261 2 264 1 152 2 216 2 63 2 351 1 104 2 22 3 134 1 85 1 184 1 162 3 144 2 110 1 225 2 32 1 255 4 113 1 57 2 35 4 91 1 307 2 74 1 310 4 14 4 339 1 191 1 340 2 
151 2 215 1 242 1 216 1 347 1 218 3 21 2 65 2 106 1 87 3 184 1 143 1 68 1 275 1 188 2 332 1 228 1 166 1 255 1 32 1 113 1 283 1 91 1 169 1 170 1 171 2 286 1 235 1 310 1 14 1 43 1 96 1 
17 2 110 1 144 1 225 2 176 4 266 2 60 4 63 1 57 1 299 2 231 2 307 1 104 1 340 1 272 1 
314 1 259 1 30 1 
296 1 314 1 265 1 19 1 259 1 
314 1 259 1 30 1 
314 1 259 1 30 1 
314 1 259 1 27 1 
314 1 259 1 27 1 
314 1 259 1 27 1 
314 1 259 1 
202 1 300 1 
28 1 143 4 151 2 345 1 49 4 204 1 165 1 346 2 166 1 177 1 347 8 148 1 229 1 90 1 81 1 153 1 130 2 169 1 283 1 326 1 257 1 286 1 272 1 
97 1 241 1 151 4 345 1 320 1 346 2 347 11 177 2 81 1 178 1 153 1 130 3 326 1 199 1 272 1 28 1 143 5 49 6 204 2 165 1 166 2 148 1 229 1 90 1 283 2 169 2 257 1 286 2 
143 2 97 1 151 2 345 1 49 3 204 1 166 1 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 1 283 1 286 1 199 1 
143 2 97 1 151 2 345 1 49 3 204 1 166 1 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 1 283 1 286 1 199 1 
28 1 143 4 151 2 345 1 49 4 204 1 165 1 346 2 166 1 177 1 347 8 148 1 229 1 90 1 81 1 153 1 130 2 169 1 283 1 326 1 257 1 286 1 272 1 
143 2 97 1 151 2 345 1 49 3 204 1 166 1 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 1 283 1 286 1 199 1 
143 2 97 1 345 1 151 4 49 3 204 1 320 1 166 2 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 2 283 2 286 2 199 1 
143 2 97 1 345 1 151 4 49 3 204 1 89 1 166 2 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 2 283 2 286 2 199 1 
28 1 143 4 49 3 204 1 165 1 346 3 347 7 229 1 148 3 178 3 130 6 326 2 257 3 
143 2 97 1 345 1 151 4 49 3 204 1 89 1 166 2 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 2 283 2 286 2 199 1 
28 1 143 4 151 4 49 4 204 1 165 1 346 2 166 2 347 8 229 1 148 1 178 1 130 3 169 2 283 2 326 1 257 1 286 2 190 1 272 1 
28 1 143 3 49 3 204 1 77 1 165 1 346 2 347 6 229 1 148 1 130 2 326 1 257 1 272 1 
143 2 97 1 151 2 49 2 204 1 165 1 320 1 346 1 166 1 1 1 347 4 178 1 130 2 169 1 283 1 286 1 199 1 
143 4 97 1 241 1 345 1 49 3 204 1 165 1 346 1 1 1 177 2 347 7 81 1 178 1 130 2 199 1 
97 2 241 1 345 2 151 4 346 5 347 23 177 2 1 2 219 1 178 4 130 9 326 1 199 2 272 1 28 1 143 12 49 11 204 3 165 3 166 2 148 2 229 1 72 1 168 1 169 2 283 2 257 2 286 2 190 2 
143 1 347 1 177 1 
345 1 49 1 347 1 
143 3 97 1 151 2 49 3 204 1 320 1 165 1 166 1 346 2 347 6 1 1 80 1 178 1 283 1 169 1 130 3 286 1 199 1 
143 2 97 1 151 2 345 1 49 3 204 1 166 1 177 1 347 5 90 1 81 1 335 1 153 1 58 1 169 1 283 1 286 1 199 1 
28 1 143 3 49 3 204 1 165 1 346 1 347 6 148 1 178 1 130 2 257 1 
143 2 151 2 49 1 346 1 166 1 347 3 148 1 229 1 219 1 178 1 130 2 169 1 283 1 326 1 257 1 286 1 190 1 
28 1 143 5 151 2 49 5 204 2 165 2 227 1 166 1 346 3 347 10 148 2 178 2 153 1 283 1 169 1 130 5 257 2 286 1 
151 2 49 2 204 1 166 1 347 2 178 1 153 1 169 1 283 1 130 1 286 1 199 1 
143 2 97 1 151 2 49 2 204 1 165 1 346 1 166 1 1 1 347 4 178 1 153 1 130 2 169 1 283 1 286 1 199 1 
143 2 151 6 49 1 89 1 166 3 346 1 347 3 148 1 219 1 178 1 153 1 169 3 283 3 130 2 257 1 286 3 190 1 
97 3 241 1 151 10 345 3 320 1 346 7 177 4 347 34 1 3 219 1 81 1 178 5 153 1 130 12 326 1 199 3 272 1 28 2 143 18 187 1 49 16 204 5 165 5 89 1 166 5 148 3 229 1 283 5 169 5 257 3 286 5 190 2 94 1 367 1 
87 1 21 1 164 1 305 1 54 1 228 1 218 1 
87 1 164 1 6 1 344 1 293 1 305 1 54 1 228 1 218 1 21 1 233 1 287 1 
184 1 91 1 264 1 77 1 310 1 14 1 216 1 339 1 32 1 255 1 113 1 
87 2 184 1 68 1 242 1 304 1 188 1 216 1 228 1 255 1 32 1 113 1 218 2 21 1 91 1 170 1 171 1 14 1 310 1 
87 2 184 2 316 1 68 2 261 1 242 1 304 1 188 2 358 1 228 1 255 1 32 1 113 3 218 2 21 2 352 1 256 1 91 1 170 1 171 1 14 1 310 1 289 1 
316 1 261 1 242 1 218 2 21 2 352 1 140 1 87 2 184 2 68 2 188 2 304 1 358 2 228 1 32 1 255 1 113 3 91 1 256 1 171 1 310 1 14 1 289 1 237 1 
316 1 261 1 176 1 216 1 246 1 348 1 64 1 22 2 352 1 158 1 162 2 184 1 68 1 9 1 32 1 255 3 113 4 35 1 231 1 91 1 310 3 14 3 341 1 
184 1 162 2 316 1 68 1 261 1 176 1 216 1 255 3 32 1 113 4 246 1 231 1 35 1 64 1 352 1 91 1 22 2 59 1 158 1 14 3 310 3 341 1 
91 1 310 1 14 1 32 1 255 1 291 1 
184 1 48 1 68 1 216 1 255 1 32 1 113 1 361 1 91 2 336 1 197 1 14 1 310 1 
215 1 317 1 322 1 218 2 130 2 326 1 272 1 87 2 184 1 143 3 275 1 49 3 188 1 332 2 226 1 10 1 228 2 229 1 148 1 283 2 91 1 286 2 14 1 96 2 151 4 242 1 20 1 346 2 347 6 245 1 21 1 28 1 68 1 204 1 304 1 165 1 166 2 255 1 32 1 113 1 169 2 170 1 257 1 39 1 171 1 172 1 310 1 
122 1 176 1 152 1 216 1 246 1 104 1 22 3 158 1 162 3 185 1 144 2 110 2 225 1 331 1 255 1 113 2 231 1 35 2 307 2 92 1 59 1 40 1 310 1 14 1 74 1 340 2 341 1 343 1 
184 1 68 1 10 1 206 1 255 2 32 1 113 2 91 2 197 1 14 2 310 2 341 1 291 1 
184 1 264 1 216 1 10 1 255 4 32 1 113 1 282 1 64 1 91 1 14 4 310 4 339 1 
184 1 68 1 147 1 88 1 255 1 32 1 101 1 113 1 361 1 91 2 336 1 14 1 310 1 
163 1 91 1 262 1 310 1 14 1 216 1 211 1 32 1 255 1 79 1 
184 1 248 1 91 1 249 1 310 2 14 2 10 1 333 1 32 1 255 2 113 1 
184 2 261 1 264 1 216 1 10 1 255 5 359 1 32 2 113 3 56 1 282 1 249 1 91 2 14 4 310 5 339 1 
184 2 261 1 264 1 216 1 10 1 255 5 32 2 113 3 56 1 282 1 249 1 91 2 14 4 310 5 339 1 312 1 
242 1 216 1 218 2 21 1 140 1 87 2 184 1 68 1 188 1 304 1 358 1 228 1 32 1 255 1 113 1 91 1 171 1 310 1 14 1 237 1 
184 1 48 1 68 1 261 1 255 1 32 1 113 1 361 1 91 2 336 1 197 1 14 1 310 1 
240 1 247 1 228 1 174 1 253 1 
240 1 176 1 247 1 65 1 22 1 133 1 106 1 25 1 253 1 201 1 162 1 8 1 358 1 231 1 34 1 284 1 92 1 256 1 171 1 338 1 174 1 289 1 
87 1 21 1 247 1 240 1 298 1 260 1 236 1 218 1 253 1 
247 1 133 1 338 1 
150 1 209 1 51 1 77 1 
150 1 207 1 36 1 129 1 209 1 51 1 75 1 
207 1 154 1 47 1 
150 1 349 1 207 3 267 1 208 1 36 3 129 1 209 1 51 1 139 1 127 2 75 1 
150 1 207 2 36 2 129 1 209 1 51 1 71 1 112 1 75 1 
142 1 175 1 79 1 267 1 207 1 129 1 36 1 209 1 183 1 75 1 211 1 
150 1 207 1 267 1 36 1 129 1 209 1 75 1 
150 2 207 1 267 1 36 1 129 1 51 1 75 1 
150 1 268 1 207 2 267 1 36 2 129 2 209 1 75 2 100 1 238 1 
150 1 51 1 294 1 71 2 267 1 207 3 129 1 36 3 209 2 198 1 183 1 75 1 141 1 
150 1 142 1 163 1 357 1 51 1 71 1 79 1 267 1 207 2 129 1 36 2 209 1 38 1 211 2 75 1 
150 1 51 1 294 1 71 2 295 1 112 1 267 1 207 4 129 2 36 4 209 2 183 1 75 2 
150 1 207 1 267 1 36 1 129 1 209 1 51 1 75 1 
150 2 273 1 51 2 294 1 71 2 127 1 349 1 207 4 208 1 36 4 129 1 209 3 183 1 75 1 
150 1 207 2 267 1 36 2 129 1 209 1 51 1 138 1 71 1 173 1 75 1 212 1 
150 1 51 1 127 2 349 1 267 1 207 3 103 1 208 2 129 1 36 3 209 1 75 1 
114 2 209 2 276 1 179 1 
207 1 267 1 36 1 129 1 182 1 75 1 
150 1 207 2 267 1 36 2 129 1 209 1 51 1 198 1 71 1 75 1 
324 1 
150 1 207 1 267 1 36 1 129 1 209 1 51 1 75 1 
150 1 207 3 267 1 36 3 129 1 209 1 51 1 198 1 71 1 127 1 75 1 
273 1 209 1 183 1 294 1 
150 1 209 1 

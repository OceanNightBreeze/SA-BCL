#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 47 331 (216,363) (216,363) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 47 331 (216,363) (216,363) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 47 331 338 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 47 331 338 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 22 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 22 209 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 22 209 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 96 334 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 248 49 31 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 248 49 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 96 334 7 158 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 62 0 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 1 290 1 352 1 191 2 83 1 84 1 344 2 353 3 19 1 3 1 57 2 331 1 297 2 79 2 157 1 216 1 311 7 47 2 179 3 74 1 189 7 328 4 363 1 314 1 315 2 
76 1 290 1 352 1 191 2 83 1 84 1 344 2 353 3 19 1 3 1 57 2 331 1 297 2 79 2 157 1 216 1 311 7 47 2 179 3 74 1 189 7 328 4 363 1 314 1 315 2 
290 1 83 1 191 2 352 1 84 1 85 1 353 4 3 1 57 2 324 1 297 2 172 1 179 5 74 1 363 1 328 6 76 2 151 1 344 2 19 1 331 1 79 2 157 1 216 1 311 9 47 2 189 9 314 1 315 3 
290 1 83 1 191 2 352 1 84 1 85 1 353 3 3 1 57 2 297 2 172 1 179 4 74 1 363 1 328 4 76 1 344 2 19 1 331 1 79 2 157 1 216 1 311 7 47 2 189 7 314 1 315 2 
290 1 191 1 353 2 85 1 57 1 324 1 297 1 172 1 179 3 328 3 76 2 344 1 151 1 331 1 157 1 311 4 47 1 189 4 315 1 
191 1 83 1 85 1 57 1 347 1 297 1 79 1 172 1 157 1 311 2 129 1 47 1 179 1 189 2 314 1 134 1 
191 2 85 1 353 1 57 2 79 1 172 1 157 1 311 3 179 2 74 1 189 3 328 1 315 1 
76 1 290 1 352 1 191 2 344 1 84 1 353 3 57 2 331 1 72 1 297 1 338 1 79 1 157 1 311 7 47 1 179 3 74 1 189 7 328 5 315 2 
76 1 290 1 352 1 191 2 344 1 84 1 353 3 57 2 331 1 72 1 297 1 338 1 79 1 157 1 311 7 47 1 179 3 74 1 189 7 328 5 315 2 
130 1 295 1 148 1 
4 1 295 1 246 2 
1 2 52 2 97 2 146 2 131 2 123 1 168 2 249 1 
51 1 1 3 52 3 54 1 356 2 273 1 168 2 104 1 87 1 358 1 71 1 249 1 111 1 339 1 146 2 299 1 75 1 366 1 329 1 65 1 90 1 152 1 123 1 125 2 306 1 93 1 97 2 288 1 131 2 68 1 269 2 270 1 159 1 241 1 50 2 221 1 161 2 
1 1 52 1 123 1 168 1 369 1 30 1 265 1 97 1 131 1 146 1 
1 1 52 1 294 1 295 1 274 1 369 1 267 1 25 1 146 1 325 1 312 1 327 1 148 1 257 1 
1 1 52 1 168 1 295 1 274 1 369 1 97 1 267 2 25 1 131 1 146 1 325 1 312 1 148 1 257 2 
267 1 298 1 27 1 147 1 257 1 
222 1 267 2 27 1 295 1 147 1 148 1 302 1 257 2 
267 1 27 1 257 1 
1 1 52 1 123 1 168 1 369 1 30 1 265 1 97 1 267 1 131 1 146 1 371 1 147 1 257 1 
295 1 
267 2 27 1 346 1 295 1 147 1 148 1 302 1 257 2 
206 1 235 1 42 2 295 1 78 1 108 1 144 1 211 2 45 1 156 1 267 5 218 2 178 1 27 2 147 2 148 1 220 1 302 1 257 5 
130 1 249 1 
1 2 282 1 52 2 168 1 369 1 249 1 296 1 97 1 146 2 131 1 99 1 
272 1 29 1 227 1 
1 1 329 1 52 1 208 1 152 1 87 1 358 1 71 1 249 1 111 1 68 1 269 1 299 1 75 1 50 1 161 1 
329 1 1 2 52 2 152 1 167 1 168 1 87 1 358 1 71 1 29 1 111 1 97 1 146 1 68 1 299 1 269 1 75 1 50 1 201 1 161 1 
1 2 282 1 52 2 167 1 168 2 369 1 249 1 97 2 146 2 131 1 99 1 
265 1 1 2 52 2 97 2 305 1 146 2 168 2 369 1 
1 3 52 3 167 1 168 3 369 1 249 1 97 3 131 1 146 3 99 1 
265 1 1 1 52 1 97 1 146 1 168 1 369 1 
282 1 1 1 52 1 168 1 369 1 296 1 97 1 131 1 146 1 
51 1 1 4 52 4 54 1 356 1 167 1 273 1 168 3 87 1 358 1 71 1 274 1 249 1 111 1 197 1 146 3 325 1 299 1 75 1 201 1 366 1 257 1 329 1 282 1 65 1 90 1 152 1 123 1 125 2 369 1 93 1 187 1 97 3 267 1 25 1 288 1 131 2 68 1 312 1 269 1 270 1 241 1 50 1 161 1 
1 2 360 1 52 2 97 1 146 2 167 1 168 1 327 1 249 1 
282 1 1 3 52 3 167 2 168 3 295 1 105 1 274 1 369 1 197 1 97 3 267 1 25 1 131 1 146 3 325 1 312 1 201 1 257 1 
282 1 1 2 52 2 167 1 168 2 29 1 227 1 97 2 131 1 146 2 
1 1 329 1 52 1 152 1 358 1 87 1 71 1 249 1 111 1 68 1 269 1 299 1 75 1 50 1 161 1 
1 1 329 1 52 1 185 1 358 1 87 1 71 1 249 1 68 1 269 1 299 1 75 1 50 1 63 1 161 1 
51 1 272 1 100 1 54 1 293 1 319 1 356 3 273 1 104 1 29 1 227 1 171 1 199 1 277 1 15 1 279 1 65 1 125 2 332 1 126 1 96 1 288 1 270 2 241 1 
1 1 52 1 97 1 305 1 325 1 146 1 168 1 369 1 
217 1 271 1 
217 1 271 1 
213 1 14 1 
213 1 14 1 
213 1 14 1 
217 1 364 1 271 1 
26 1 217 1 271 1 
10 1 213 1 149 1 14 1 217 2 271 2 
217 1 364 1 271 1 
217 1 364 1 271 1 
349 1 217 1 271 1 
349 1 217 1 271 1 
349 1 217 1 271 1 
1 2 317 1 52 2 140 1 354 1 168 2 357 1 249 1 196 1 146 2 12 1 34 1 232 1 257 1 343 1 77 1 43 1 97 2 267 1 26 1 217 1 271 1 372 1 243 1 
66 1 41 1 140 2 354 1 357 2 295 1 43 3 263 1 10 1 154 2 264 1 267 2 217 2 242 1 271 2 119 1 372 2 257 2 243 2 
297 1 344 1 47 1 
297 1 129 1 47 1 
297 3 165 1 344 2 129 1 192 1 365 1 
297 2 344 1 129 1 192 1 226 1 365 1 
297 2 344 1 129 1 192 2 365 1 
317 1 28 1 319 1 141 1 246 1 295 1 195 1 107 1 144 1 196 1 12 1 199 1 326 1 278 1 147 4 148 1 302 1 257 5 304 1 91 1 42 1 78 1 126 1 211 1 96 1 267 5 350 2 218 1 27 1 334 1 160 1 220 3 
1 1 52 1 168 1 295 1 30 1 146 1 298 1 147 2 148 1 257 2 258 1 123 1 369 1 265 1 97 1 267 2 23 1 131 1 27 1 371 1 80 1 
317 1 28 1 319 1 141 1 4 1 295 2 246 2 195 1 107 1 144 1 199 1 326 1 278 1 147 2 148 1 257 3 42 1 126 1 211 1 45 1 96 1 267 3 350 1 218 1 334 1 160 1 220 3 
137 1 317 2 28 1 224 1 319 2 141 1 4 1 295 2 246 3 195 2 107 1 144 2 199 2 326 2 278 1 147 3 148 1 257 4 124 1 42 1 126 2 211 1 45 1 96 2 267 4 350 2 218 1 334 2 160 2 220 5 
130 1 236 1 87 1 
164 1 87 1 
35 1 
329 1 87 1 71 1 
82 1 87 1 
329 1 87 1 
329 1 367 1 236 2 87 2 71 1 155 1 35 1 
293 3 223 1 356 4 210 1 142 1 104 3 58 1 307 2 276 1 112 1 199 1 270 1 277 2 62 1 301 1 204 1 
293 3 223 1 356 4 210 1 142 1 104 3 58 1 307 2 276 1 112 1 199 1 270 1 277 2 62 1 301 1 204 1 
293 3 223 1 122 1 356 4 210 1 142 1 104 3 58 1 307 2 276 1 112 1 199 1 270 1 277 2 62 1 301 1 204 1 
318 3 54 1 223 2 293 6 103 4 356 25 319 3 142 1 104 12 58 2 9 1 276 2 112 1 251 1 199 4 252 1 277 4 62 1 301 2 204 1 183 1 65 1 284 1 184 1 125 2 210 2 307 3 126 3 96 3 288 1 270 13 334 3 241 1 81 1 
163 1 54 2 223 1 293 4 356 6 225 1 104 4 58 1 276 1 112 1 199 1 277 3 62 1 301 1 204 1 65 2 284 1 125 4 210 1 307 2 288 2 270 2 241 2 
165 1 191 1 85 1 194 1 57 1 358 1 109 1 110 1 297 2 172 1 61 1 179 1 299 1 328 1 118 1 16 1 344 1 17 1 286 1 79 1 157 1 311 2 129 1 47 1 240 1 269 1 50 1 189 2 132 1 161 1 
165 1 191 1 85 1 194 1 57 1 358 1 109 1 110 1 297 2 172 1 61 1 176 1 179 1 299 1 328 2 120 1 16 1 344 1 17 1 286 1 79 1 311 3 129 1 47 1 269 1 313 1 50 1 189 3 132 1 161 1 
165 1 85 1 194 1 358 1 109 1 110 1 297 2 172 1 61 1 179 1 299 1 328 2 120 1 17 1 344 1 286 1 79 1 311 2 129 1 47 1 269 1 313 1 50 1 189 2 161 1 
191 1 194 2 57 1 87 1 358 1 109 2 110 2 198 1 176 1 299 1 231 1 116 1 75 1 329 1 38 1 308 1 153 1 79 2 311 1 269 1 50 1 189 1 161 1 
165 1 191 1 194 1 57 1 358 1 109 1 110 1 297 2 61 1 299 1 118 1 120 1 16 1 344 1 17 1 286 1 79 1 157 1 311 1 129 1 47 1 269 1 50 1 189 1 132 1 161 1 
106 1 
136 2 138 2 1 1 139 1 52 1 292 2 53 1 4 2 87 1 294 1 295 2 246 2 144 2 198 1 146 1 299 1 254 1 300 1 148 1 302 3 257 5 89 1 67 2 308 1 211 1 262 2 267 5 24 4 25 1 98 2 312 1 218 1 269 2 27 6 351 1 220 2 161 2 166 1 358 1 274 1 170 2 107 1 32 1 173 1 325 1 175 1 362 1 75 2 327 1 329 1 42 1 78 1 369 1 289 1 50 2 
1 1 139 1 52 1 346 1 294 1 274 1 67 1 369 1 24 2 267 3 25 1 325 1 146 1 312 1 27 2 289 1 254 1 362 1 327 1 351 1 302 1 257 3 
1 1 139 1 52 1 294 1 274 1 295 1 170 1 146 1 325 1 254 1 362 1 327 1 148 1 257 3 302 1 346 1 369 1 267 3 24 3 25 1 312 1 27 1 289 1 351 1 
1 1 139 1 52 1 294 1 274 1 295 1 170 1 146 1 325 1 254 1 362 1 327 1 148 1 302 1 257 3 346 1 67 1 369 1 267 3 24 3 25 1 98 1 312 1 289 1 27 2 351 1 
1 2 139 1 52 2 168 1 294 1 295 1 274 1 30 1 146 2 325 1 254 1 362 1 200 1 327 1 148 1 302 1 257 3 123 1 209 1 346 1 67 2 369 2 265 1 97 1 267 3 24 2 25 1 131 1 98 2 312 1 371 1 289 1 27 3 351 1 
136 2 1 1 138 2 139 1 52 1 292 2 294 1 4 2 246 2 295 2 144 1 146 1 254 1 148 1 257 4 302 2 89 1 67 2 211 1 262 2 24 4 267 4 25 1 98 2 312 1 218 1 27 4 351 1 220 1 166 1 274 1 170 2 32 1 325 1 362 1 327 1 42 1 78 1 369 1 289 1 
1 1 139 1 52 1 294 1 274 1 369 1 22 1 24 2 267 2 25 1 325 1 146 1 312 1 289 1 254 1 362 1 327 1 351 1 257 2 
1 1 139 1 52 1 294 1 274 1 369 1 22 1 24 2 267 2 25 1 325 1 146 1 312 1 289 1 254 1 362 1 327 1 351 1 257 2 
136 2 138 2 1 1 139 1 52 1 294 1 143 1 295 1 320 2 246 2 274 1 170 2 144 1 32 1 146 1 325 1 254 1 362 1 327 1 256 1 148 1 302 2 341 1 257 4 207 2 42 1 345 1 67 2 78 1 369 1 211 1 267 4 24 4 25 1 98 2 312 1 218 1 27 4 289 1 351 1 220 1 
1 1 139 1 52 1 209 1 294 1 274 1 67 1 170 1 369 1 22 1 24 3 267 2 25 1 98 1 325 1 146 1 312 1 27 1 289 1 254 1 362 1 327 1 351 1 257 2 
1 1 139 1 52 1 209 1 294 1 274 1 67 1 170 1 369 1 22 1 24 3 267 2 25 1 98 1 325 1 146 1 312 1 27 1 289 1 254 1 362 1 327 1 351 1 257 2 
136 2 1 1 138 2 139 1 52 1 294 1 246 2 295 1 144 1 146 1 254 1 148 1 257 4 302 2 207 2 345 1 67 2 211 1 24 4 267 4 25 1 98 2 312 1 218 1 27 4 351 1 220 1 166 1 274 1 320 2 170 2 32 1 325 1 362 1 327 1 42 1 78 1 369 1 289 1 
51 1 272 1 65 1 293 2 54 1 356 3 273 1 125 2 104 2 307 1 58 1 29 1 227 1 249 1 112 1 130 1 199 1 288 1 270 1 277 2 62 1 241 1 301 1 279 1 204 1 
51 2 272 10 318 3 293 1 54 2 103 3 356 14 319 2 273 1 104 6 29 10 227 2 275 1 9 1 249 1 60 1 230 1 199 2 252 1 277 1 366 1 65 2 233 1 125 4 126 2 348 1 96 2 288 2 270 8 159 1 334 2 241 2 
51 1 1 2 52 2 102 1 54 1 167 1 356 2 273 1 168 1 87 1 358 1 104 1 71 1 227 1 249 1 111 1 60 1 33 1 174 1 146 1 299 1 75 1 201 1 366 1 329 1 65 1 152 1 208 1 125 2 97 1 288 1 68 1 269 1 270 1 159 1 50 1 241 1 161 1 
51 1 1 1 52 1 54 1 356 1 167 1 273 1 168 1 60 1 146 1 115 1 75 1 201 1 366 1 65 1 125 2 97 1 288 1 269 1 270 1 241 1 50 1 161 1 
51 2 1 1 52 1 54 2 167 1 356 2 168 1 273 2 358 2 87 3 104 1 321 1 323 1 198 1 146 1 299 2 75 2 366 1 279 1 120 1 329 2 65 2 285 1 125 4 306 2 261 1 308 1 214 1 21 1 97 1 288 2 268 1 240 1 269 8 270 1 159 1 50 8 241 2 161 7 
51 1 1 1 282 1 52 1 65 1 54 1 356 2 168 1 273 1 125 2 104 2 60 1 96 1 97 1 361 1 199 1 146 1 288 1 131 1 334 1 241 1 
51 1 65 1 54 1 356 1 273 1 125 2 104 1 96 1 288 1 199 1 15 1 241 1 279 1 
51 1 272 1 65 1 293 1 54 1 356 2 319 1 273 1 125 2 29 1 332 1 227 1 126 1 288 1 277 1 270 2 241 1 279 1 
51 1 272 1 54 1 293 1 356 3 319 1 273 1 104 1 29 1 227 1 199 1 277 1 279 1 65 1 125 2 126 1 96 1 288 1 270 2 334 1 241 1 
51 1 65 1 54 1 356 1 285 1 273 1 125 2 104 1 96 1 288 1 199 1 15 1 241 1 
51 1 272 1 65 1 293 1 54 1 356 2 285 1 319 1 273 1 125 2 29 1 332 1 227 1 126 1 288 1 277 1 270 2 241 1 
51 1 272 1 54 1 293 1 356 3 319 1 273 1 104 1 29 1 227 1 199 1 277 1 65 1 285 1 125 2 126 1 96 1 288 1 270 2 334 1 241 1 
51 1 272 1 54 1 293 1 356 3 319 1 273 1 104 1 29 1 227 1 199 1 277 1 65 1 125 2 126 1 96 1 288 1 270 2 334 1 241 1 
51 1 1 1 52 1 54 1 356 2 273 1 104 1 358 1 87 1 71 1 249 1 111 1 299 1 75 1 366 1 329 1 65 1 90 1 152 1 125 2 288 1 68 1 269 1 270 1 159 1 50 1 241 1 161 1 
51 1 1 1 52 1 54 1 356 2 273 1 104 1 358 1 87 1 71 1 249 1 299 1 75 1 63 1 366 1 280 1 329 1 65 1 125 2 185 1 288 1 68 1 269 1 270 1 159 1 50 1 241 1 161 1 
51 1 272 1 54 1 293 1 356 3 319 1 273 1 104 1 29 1 227 1 60 1 199 1 277 1 65 1 125 2 126 1 96 1 288 1 270 2 334 1 241 1 
51 1 272 1 1 1 52 1 293 1 54 1 319 1 356 3 355 1 273 1 104 1 358 1 87 1 71 1 29 1 227 1 111 1 199 1 299 1 277 1 329 1 65 1 90 1 152 1 125 2 126 1 96 1 288 1 68 1 240 1 269 1 270 2 334 1 50 1 241 1 161 1 
51 1 1 1 52 1 54 1 356 2 319 1 273 1 168 1 104 1 60 1 146 1 199 1 282 1 342 1 65 1 125 2 126 1 96 1 97 1 131 1 288 1 270 1 334 1 241 1 
318 1 54 2 293 1 103 2 356 11 319 2 225 1 104 4 6 1 59 1 9 1 31 1 199 2 252 1 277 1 65 2 125 4 368 1 20 1 126 2 96 2 215 1 288 2 270 7 49 1 334 2 241 2 335 1 
318 1 54 2 293 1 103 2 356 11 319 2 225 1 104 4 6 1 59 1 9 1 31 1 199 2 252 1 277 1 65 2 125 4 368 1 20 1 126 2 96 2 215 1 288 2 270 7 49 1 334 2 241 2 335 1 
318 4 54 1 293 6 103 4 356 34 319 6 56 1 225 1 104 15 58 1 7 1 248 1 9 2 112 1 31 1 199 7 252 2 277 6 62 1 301 1 204 1 65 1 233 2 125 2 260 1 368 1 307 1 20 1 333 1 126 6 96 6 288 1 270 19 158 1 49 1 334 6 241 1 335 2 
318 1 54 2 293 2 103 2 356 11 319 2 225 1 104 4 59 1 9 1 31 1 199 2 252 1 180 1 277 2 65 2 125 4 368 1 20 1 126 2 96 2 215 1 288 2 270 7 49 1 334 2 241 2 335 1 
318 2 293 1 54 2 103 2 356 17 319 2 56 1 225 1 104 7 7 1 248 1 31 1 199 2 252 2 277 1 65 2 284 1 125 4 368 2 260 1 20 1 333 1 126 2 96 2 288 2 270 10 49 2 158 1 334 2 241 2 335 2 
263 1 10 1 140 1 177 1 217 1 357 1 242 1 271 1 372 1 243 1 
26 1 34 1 
140 1 253 1 217 1 69 1 357 1 271 1 372 1 95 1 243 1 
181 1 364 1 
349 1 149 1 92 1 
41 1 140 1 354 1 357 1 295 1 43 2 263 1 10 1 154 1 264 1 267 1 217 1 242 1 271 1 119 1 257 1 372 1 243 1 
41 1 140 1 354 1 357 1 295 1 43 2 263 1 10 1 154 1 264 1 267 1 217 1 242 1 271 1 119 1 257 1 372 1 243 1 
41 1 140 1 354 1 357 1 295 1 43 2 263 1 10 1 154 1 264 1 267 1 217 1 242 1 271 1 119 1 257 1 372 1 243 1 
149 1 181 1 364 1 
149 1 181 1 364 1 
349 1 92 1 
349 1 149 1 92 1 
343 1 232 1 
1 2 317 1 52 2 140 1 357 1 168 2 249 1 196 1 12 1 146 2 34 1 147 1 232 1 119 1 257 1 343 1 77 1 43 1 212 1 154 1 97 2 267 1 26 1 217 1 271 1 372 1 243 1 
51 1 1 2 52 2 54 1 356 2 273 1 358 1 87 1 104 1 60 1 250 1 229 1 73 1 146 2 299 1 182 1 366 1 329 1 37 1 65 1 125 2 306 2 21 1 288 1 268 1 269 2 270 1 159 1 50 2 241 1 161 2 
120 1 16 1 64 1 165 1 344 1 358 1 286 1 110 1 297 2 129 1 61 1 47 1 240 1 299 1 269 2 50 2 88 1 190 1 161 2 
120 1 16 1 165 1 344 1 286 1 358 1 94 1 110 1 297 2 129 1 61 1 47 1 269 1 299 1 50 1 88 1 161 1 
329 1 358 1 87 1 308 1 247 1 153 1 110 1 198 1 299 1 269 1 75 1 50 1 190 1 161 1 
120 1 16 1 64 1 165 1 344 1 286 1 358 1 110 1 297 2 129 1 61 1 47 1 299 1 269 1 50 1 88 1 190 1 161 1 
5 1 
156 1 130 1 235 1 295 1 148 1 220 1 144 1 
292 1 4 1 246 1 295 2 144 1 148 1 302 1 257 1 89 1 42 1 78 1 211 1 262 1 267 1 218 1 27 1 220 1 
244 1 87 6 4 4 246 8 295 4 8 2 195 4 144 5 199 2 299 2 257 5 302 3 203 2 259 2 211 3 155 1 96 2 267 5 312 2 218 3 269 1 27 5 160 2 220 7 161 1 316 1 164 3 70 2 319 2 358 1 71 1 322 2 107 1 175 1 326 4 75 1 329 1 234 2 42 3 236 2 78 3 126 2 44 1 334 2 50 1 
318 1 103 1 42 1 4 2 260 1 295 2 246 4 7 1 78 1 195 3 144 3 211 1 96 1 199 1 252 1 326 3 218 1 334 1 158 1 220 2 
0 1 39 1 42 1 78 1 58 1 126 1 144 2 211 1 267 1 199 1 218 1 62 1 160 1 301 1 220 2 257 1 
156 1 235 1 42 1 218 1 295 1 78 1 148 1 220 1 144 1 211 1 
319 1 4 1 246 2 295 1 126 1 195 1 144 1 96 1 199 1 326 1 334 1 160 1 220 2 
267 1 27 1 295 1 148 1 257 1 302 1 
55 1 358 1 87 1 169 1 107 2 144 2 173 1 198 1 175 2 299 1 255 2 300 1 75 2 302 2 257 3 329 1 42 2 78 1 308 1 211 2 45 1 46 1 267 3 218 2 269 4 27 4 50 4 220 2 161 4 
51 1 1 3 52 3 54 1 356 1 168 2 273 1 358 1 87 1 71 1 249 1 111 1 146 2 299 1 75 1 366 1 329 1 65 1 90 1 152 1 123 1 125 2 93 1 97 2 288 1 131 2 68 1 269 1 270 1 241 1 50 1 161 1 
42 1 4 2 246 4 295 4 307 1 78 1 195 2 107 1 144 2 211 1 326 2 175 1 218 1 148 2 220 1 
310 1 357 1 243 1 
263 1 343 1 101 1 357 1 243 1 
310 1 357 1 243 1 
310 1 357 1 243 1 
357 1 359 1 243 1 
357 1 359 1 243 1 
357 1 359 1 243 1 
357 1 243 1 
217 1 271 1 
318 1 54 1 293 2 103 1 356 5 225 1 104 3 58 1 112 1 199 1 252 1 277 2 62 1 301 1 204 1 65 1 125 2 307 1 288 1 270 2 158 1 241 1 
318 2 54 2 293 3 103 2 356 18 319 4 56 1 225 1 104 7 7 1 9 1 199 4 252 1 277 3 65 2 233 1 125 4 260 1 333 1 126 4 96 4 288 2 270 11 158 1 334 4 241 2 373 1 
318 1 54 3 293 3 103 1 356 14 319 2 225 1 56 1 104 6 58 1 7 1 112 1 199 3 252 1 277 3 62 1 301 1 204 1 65 3 284 1 125 6 260 1 307 1 333 1 126 2 96 2 288 3 270 8 158 1 334 2 241 3 373 1 
318 1 54 2 293 1 103 1 356 10 319 2 225 1 56 1 104 4 7 1 199 2 252 1 277 1 65 2 125 4 260 1 126 2 333 1 96 2 288 2 270 6 158 1 334 2 241 2 373 1 
318 1 54 1 293 2 103 1 356 5 225 1 104 3 58 1 112 1 199 1 252 1 277 2 62 1 301 1 204 1 65 1 125 2 307 1 288 1 270 2 158 1 241 1 
318 1 54 1 293 1 103 1 356 10 319 2 225 1 56 1 104 4 7 1 199 2 252 1 277 1 65 1 125 2 260 1 126 2 333 1 96 2 288 1 270 6 158 1 334 2 241 1 
318 1 54 3 293 1 103 1 356 11 319 2 56 1 225 1 104 4 7 1 199 2 252 1 277 1 65 3 284 1 125 6 260 1 333 1 126 2 96 2 288 3 270 7 158 1 334 2 241 3 373 1 
318 1 54 3 293 2 103 1 356 11 319 2 56 1 225 1 104 4 7 1 199 2 252 1 277 2 65 3 284 1 125 6 260 1 333 1 126 2 96 2 215 1 288 3 270 7 158 1 334 2 241 3 
0 1 293 7 356 6 104 4 307 1 58 2 126 1 276 3 112 1 199 3 270 2 277 4 62 2 301 2 204 1 
318 1 54 3 293 1 103 1 356 11 319 2 56 1 225 1 104 4 7 1 199 2 252 1 277 1 65 3 284 1 125 6 260 1 333 1 126 2 96 2 215 1 288 3 270 7 158 1 334 2 241 3 
65 2 293 3 54 2 284 1 356 5 125 4 104 3 307 1 58 1 276 1 112 1 199 1 288 2 270 2 277 2 62 1 241 2 301 1 204 1 
293 2 356 3 104 2 58 1 307 1 112 1 130 1 199 1 270 1 277 2 62 1 301 1 204 1 
65 1 293 1 54 1 356 3 319 1 125 2 104 1 126 1 96 1 288 1 199 1 277 1 270 2 334 1 241 1 373 1 
318 1 293 1 103 2 356 6 319 1 104 2 126 1 9 1 96 1 199 1 252 1 277 1 270 4 334 1 
318 2 293 7 54 2 103 2 319 2 356 18 104 8 58 2 9 1 275 1 276 2 112 1 199 3 277 5 62 1 301 2 204 1 65 2 233 1 284 2 125 4 307 1 126 2 96 2 288 2 270 10 334 2 241 2 133 1 
103 1 356 1 270 1 
318 1 356 1 104 1 
65 1 54 1 234 1 293 2 356 5 319 1 125 2 104 2 126 1 96 1 288 1 199 1 270 3 277 2 334 1 241 1 373 1 
318 1 54 1 293 1 103 1 356 10 319 2 225 1 56 1 104 4 7 1 199 2 252 1 277 1 65 1 125 2 260 1 126 2 333 1 96 2 288 1 270 6 158 1 334 2 241 1 
199 1 356 1 104 1 62 1 
65 1 293 2 284 1 54 1 356 3 125 2 104 1 58 1 276 1 112 1 288 1 277 1 270 2 241 1 133 1 301 1 204 1 
0 1 293 3 356 4 104 2 58 1 126 1 276 1 199 2 277 2 270 2 62 1 301 1 
96 1 65 1 54 1 199 1 288 1 356 1 125 2 225 1 104 1 241 1 
65 1 293 1 54 1 356 3 319 1 225 1 125 2 104 1 126 1 96 1 288 1 199 1 277 1 270 2 334 1 241 1 
65 3 284 1 54 3 293 2 356 3 225 1 125 6 104 1 58 1 276 1 215 1 288 3 270 2 277 1 241 3 133 1 301 1 
318 3 54 5 293 6 103 4 356 25 319 3 225 1 104 11 58 2 9 1 276 2 112 1 199 5 252 1 277 4 62 2 301 2 204 1 183 1 65 5 284 2 184 1 125 10 307 1 126 3 96 3 215 1 288 5 270 14 334 3 241 5 133 1 81 1 373 1 
1 1 52 1 360 1 146 1 13 1 327 1 249 1 
1 1 291 1 330 1 52 1 238 1 249 1 128 1 360 1 188 1 146 1 13 1 327 1 
329 1 198 1 130 1 299 1 269 1 358 1 87 1 50 1 75 1 308 1 161 1 
329 1 1 2 52 2 167 1 168 1 87 1 358 1 71 1 249 1 111 1 97 1 146 1 68 1 299 1 269 1 75 1 50 1 161 1 
1 1 82 1 52 1 336 1 167 1 168 1 358 1 87 3 71 2 249 1 111 1 146 1 325 1 299 1 255 1 329 2 369 2 97 1 25 1 68 1 269 1 50 1 99 1 161 1 
1 1 82 1 52 1 336 1 167 1 168 1 358 1 87 3 71 2 249 1 146 1 325 1 299 1 255 1 329 2 185 1 369 2 97 1 25 1 68 1 269 1 50 1 99 1 161 1 
1 1 164 1 82 1 52 1 336 1 168 1 358 1 87 4 71 1 295 1 30 1 228 1 146 1 299 1 255 1 75 1 148 1 257 2 36 1 329 1 123 1 236 1 369 1 265 1 97 1 267 2 131 1 312 1 269 2 371 1 27 1 50 2 161 2 
82 1 329 1 164 1 70 1 336 1 236 1 87 4 358 1 295 1 71 1 267 2 287 1 312 1 299 1 269 3 27 1 255 1 75 1 50 3 148 1 257 2 161 3 
214 1 299 1 269 1 358 1 50 1 161 1 
120 1 329 2 121 1 306 1 86 1 87 3 358 2 321 1 71 1 261 1 323 1 214 1 155 1 21 1 240 1 269 7 299 3 75 2 50 7 205 1 161 6 
51 2 272 1 1 2 52 2 293 2 54 2 356 3 167 1 355 1 273 2 168 1 337 1 104 2 87 1 358 1 71 1 58 1 29 1 227 1 249 1 60 1 111 1 112 1 73 1 199 1 146 1 299 1 277 2 62 1 301 1 204 1 329 1 65 2 90 1 152 1 125 4 307 1 97 1 288 2 68 1 240 1 269 1 270 1 241 2 50 1 161 1 
164 1 70 1 55 1 87 2 295 1 322 1 8 1 144 1 75 1 147 1 148 1 257 3 302 1 235 1 259 1 42 2 236 1 78 2 211 2 156 1 267 3 312 1 218 2 269 1 27 2 50 1 220 1 161 1 
316 1 329 1 236 1 87 2 358 1 71 1 214 1 155 1 240 1 269 2 299 2 50 2 161 2 
329 1 237 1 87 1 358 1 308 1 198 1 287 1 240 1 299 1 269 4 75 1 50 4 161 4 
281 1 329 1 86 1 193 1 87 1 358 1 71 1 186 1 269 2 299 2 255 1 50 2 205 1 161 2 
297 1 129 1 61 1 47 1 299 1 269 1 358 1 50 1 75 1 161 1 
120 1 329 1 87 1 358 1 21 1 240 1 269 2 299 1 50 2 182 1 161 2 
329 2 237 1 87 3 358 2 321 1 308 1 323 1 21 1 198 1 240 1 269 5 299 2 255 1 75 1 50 5 161 4 
329 2 237 1 87 3 358 2 308 1 323 1 127 1 21 1 198 1 240 1 269 5 299 2 255 1 75 1 50 5 161 4 
329 1 1 2 52 2 167 1 168 1 87 1 185 1 358 1 71 1 249 1 97 1 146 1 68 1 299 1 269 1 75 1 50 1 161 1 
329 1 121 1 86 1 87 1 358 1 71 1 155 1 269 1 299 2 255 1 50 1 205 1 161 1 
162 1 40 1 113 1 202 1 249 1 
162 1 245 1 40 2 295 1 274 1 369 1 309 1 249 1 197 1 267 2 25 1 113 2 325 1 312 1 219 1 147 1 148 1 202 2 257 2 
162 1 1 1 37 1 250 1 52 1 229 1 40 1 113 1 146 1 
162 1 219 1 309 1 
172 1 130 1 85 1 179 1 
172 1 191 1 311 1 85 1 179 1 57 1 189 1 
79 1 194 1 189 1 
150 1 191 1 85 1 57 1 266 1 157 1 172 1 311 3 114 1 179 1 189 3 314 2 
76 1 191 1 85 1 57 1 324 1 172 1 311 2 179 1 189 2 328 1 
290 1 191 1 344 1 353 1 57 1 297 1 157 1 311 1 47 1 179 1 189 1 
172 1 157 1 191 1 311 1 179 1 57 1 189 1 
172 2 157 1 191 1 311 1 85 1 57 1 189 1 
283 1 191 2 18 1 57 2 239 1 172 1 157 1 311 2 179 1 189 2 
191 1 352 1 84 1 85 1 353 1 57 1 172 1 157 1 311 3 179 2 189 3 328 2 315 1 
165 1 191 1 344 1 85 1 57 1 297 2 172 1 157 1 129 1 311 2 47 1 179 1 189 2 328 1 303 1 
76 1 191 1 151 1 85 1 353 1 57 1 324 1 172 1 157 1 311 3 179 2 189 3 328 2 315 1 
172 1 157 1 191 1 311 1 85 1 179 1 57 1 189 1 
191 1 85 2 353 1 57 1 324 1 266 1 172 2 311 4 114 1 179 3 189 4 328 2 314 1 315 1 
191 1 85 1 57 1 72 1 172 1 157 1 145 1 311 2 179 1 370 1 189 2 328 1 
266 1 172 1 157 1 191 1 311 3 85 1 114 2 179 1 57 1 189 3 314 2 135 1 
11 2 179 2 48 1 117 1 
2 1 157 1 191 1 311 1 57 1 189 1 
172 1 157 1 191 1 84 1 311 2 85 1 179 1 57 1 189 2 328 1 
340 1 
172 1 157 1 191 1 311 1 85 1 179 1 57 1 189 1 
172 1 157 1 191 1 84 1 311 3 85 1 179 1 57 1 189 3 328 1 314 1 
324 1 353 1 179 1 315 1 
172 1 179 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (133,335) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (133,335) (231,290) (231,290) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (133,335) (231,290) (231,290) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (133,335) (231,290) (231,290) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (133,335) (231,290) (231,290) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (133,335) 39 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (133,335) 39 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 348 103 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 31 103 49 308 76 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 31 103 49 308 76 149 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 25 49 308 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 31 103 49 308 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 12 93 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
210 1 335 1 44 1 9 1 151 1 22 1 
106 1 44 1 290 1 133 1 231 1 124 1 240 1 210 2 335 1 266 1 184 1 151 1 9 2 259 1 22 1 153 1 
106 1 44 1 290 1 133 1 231 1 124 1 240 1 210 2 335 1 266 1 184 1 151 1 9 2 259 1 22 1 153 1 
106 1 44 1 290 1 133 1 231 1 124 1 240 1 210 2 335 1 266 1 184 1 151 1 9 2 259 1 22 1 153 1 
106 1 44 1 290 1 133 1 231 1 124 1 240 1 210 2 335 1 266 1 184 1 151 1 9 2 259 1 22 1 153 1 
281 1 106 1 302 1 44 1 2 3 330 1 343 2 173 1 210 4 266 1 184 1 255 3 151 1 9 4 141 1 22 1 92 1 11 2 
106 1 2 1 44 1 173 1 124 1 368 1 240 1 210 2 266 1 309 1 371 1 151 1 9 2 259 1 22 1 92 1 
39 1 210 2 335 1 44 1 255 1 61 1 9 2 151 1 22 1 
39 1 210 2 335 1 44 1 255 1 61 1 9 2 151 1 22 1 
156 1 338 1 94 1 301 1 159 1 72 1 160 1 16 1 304 1 334 1 59 1 197 1 286 1 268 1 
198 1 
246 1 334 2 138 1 137 1 301 2 159 1 198 1 28 1 
143 1 94 1 300 1 263 2 301 5 144 4 121 1 72 1 4 2 304 1 74 1 334 5 219 1 355 1 125 2 197 1 198 2 28 1 130 5 286 1 268 1 338 1 156 1 246 2 289 1 159 2 108 1 160 1 16 1 229 1 345 2 138 2 163 2 59 1 166 1 67 1 40 2 41 1 
246 1 198 1 84 1 
134 1 
338 2 94 2 356 1 197 2 72 2 286 1 160 2 16 2 
262 1 94 3 95 1 1 1 168 1 3 2 72 3 215 1 192 1 283 1 47 1 333 1 356 1 197 2 307 1 267 1 286 1 157 1 338 2 288 1 177 1 107 2 361 1 52 2 160 2 274 1 16 2 58 1 182 1 320 1 161 1 60 1 21 2 369 2 186 1 63 1 23 1 
156 1 338 1 94 1 72 1 160 1 16 1 304 1 197 1 286 1 268 1 
287 1 246 1 338 1 94 1 301 1 189 1 207 1 72 1 252 1 304 1 334 1 174 1 198 1 323 1 
287 1 156 1 246 1 338 2 94 2 301 2 189 1 207 1 72 2 160 2 16 2 304 2 334 2 59 1 197 2 198 1 286 1 323 1 268 1 
0 1 334 1 138 1 301 1 159 1 
246 1 334 2 138 1 301 2 33 1 159 1 198 1 28 1 
334 1 138 1 301 1 
338 2 94 2 45 1 72 2 291 1 160 1 16 1 304 1 356 1 197 1 167 1 
358 1 66 1 319 1 
288 1 94 1 107 1 3 1 72 1 192 1 215 1 320 1 161 1 356 1 267 1 60 1 369 1 186 1 349 1 23 1 
356 1 84 1 
288 1 338 1 314 1 94 2 107 1 3 1 72 2 351 1 215 1 192 1 16 1 320 1 161 1 197 1 267 1 60 1 369 1 186 1 66 1 23 1 
338 4 314 2 94 4 45 1 363 1 72 4 291 1 351 1 56 1 160 1 16 4 304 1 356 1 197 4 
338 1 94 1 197 1 72 1 268 1 16 1 304 1 
338 3 314 1 94 3 356 1 197 3 72 3 160 1 16 3 
338 1 94 1 197 1 72 1 268 1 16 1 304 1 
338 1 94 1 291 1 72 1 160 1 16 1 304 1 197 1 167 1 
94 4 301 1 1 1 168 1 189 1 3 1 145 1 72 4 351 1 215 1 192 1 283 1 47 1 304 1 334 1 356 1 197 3 307 1 267 1 286 1 287 1 157 1 288 1 338 3 314 1 177 1 107 1 361 1 360 1 52 1 207 1 291 1 274 1 160 2 16 3 58 1 320 1 161 1 60 1 21 2 369 1 186 1 323 1 23 1 
338 2 314 1 94 2 176 1 45 1 72 2 16 1 304 1 356 1 197 1 174 1 
287 1 338 3 314 2 94 3 301 1 189 1 145 1 207 1 291 1 72 3 351 1 160 1 16 3 304 1 334 1 197 3 198 1 256 1 323 1 
338 2 314 1 94 2 291 1 72 2 160 1 16 2 197 2 358 1 66 1 
288 1 94 1 107 1 3 1 72 1 192 1 215 1 320 1 161 1 356 1 60 1 267 1 369 1 186 1 23 1 
288 1 94 1 107 1 3 1 72 1 192 1 215 1 320 1 161 1 356 1 100 1 267 1 369 1 372 1 23 1 
157 1 177 1 361 1 52 1 168 1 1 1 47 1 345 1 58 1 365 1 348 1 21 2 7 1 241 1 
287 1 338 1 94 1 315 1 72 1 16 1 304 1 197 1 
350 1 236 1 55 1 
350 2 346 1 126 1 236 2 298 1 18 1 
350 1 236 1 
350 1 236 1 
126 1 298 1 
126 1 298 1 
126 1 298 1 
350 1 236 1 152 1 
350 1 236 1 152 1 
350 1 236 1 152 1 
350 1 236 1 324 1 
350 1 236 1 324 1 
350 1 236 1 324 1 
142 1 132 1 338 2 105 1 94 2 301 1 250 1 341 1 350 1 120 1 236 1 72 2 55 1 16 2 334 1 136 1 356 1 197 2 140 1 20 1 212 1 175 1 116 1 65 1 
68 1 270 2 250 2 301 2 350 2 120 1 34 1 236 2 293 1 38 1 334 2 346 1 198 1 20 2 175 3 337 1 116 2 65 2 242 1 
213 2 184 1 266 2 309 1 187 1 
106 1 266 1 184 1 
106 1 266 1 309 1 
326 1 213 1 184 2 266 3 309 1 187 1 
213 1 184 1 266 2 309 1 187 1 353 1 
280 1 263 1 301 5 71 1 303 1 144 2 334 5 6 1 125 1 222 2 198 1 78 1 28 1 130 2 103 1 31 1 246 1 203 1 341 1 159 4 108 1 35 1 134 2 345 1 366 1 136 1 162 1 163 1 138 1 140 1 348 1 67 1 40 1 
280 1 0 5 144 5 46 1 334 9 6 3 198 2 150 1 103 3 339 1 246 1 158 5 341 4 159 7 108 1 345 3 163 2 348 3 67 2 118 1 301 9 263 3 71 2 303 3 121 1 171 1 125 2 306 1 78 2 28 1 130 6 31 3 134 5 366 2 138 6 40 2 
94 1 301 3 263 1 144 2 303 1 121 1 72 1 304 1 334 3 6 1 125 1 197 1 198 1 222 1 78 1 130 2 286 1 268 1 103 1 31 1 338 1 156 1 246 1 203 1 341 1 159 2 160 1 16 1 134 1 345 1 366 1 162 1 163 1 59 1 348 1 40 1 
94 1 144 3 334 4 6 2 197 1 198 1 150 1 286 1 103 2 339 1 246 1 156 1 338 1 203 1 341 2 159 3 160 1 16 1 345 2 162 1 163 1 59 1 348 2 263 2 301 4 303 2 121 1 72 1 304 1 125 1 306 1 222 2 78 1 130 4 268 1 31 2 134 2 366 1 40 1 
17 1 
84 1 101 1 
119 1 267 1 
161 1 267 1 215 1 
267 1 10 1 
161 1 267 1 
161 1 224 1 267 3 165 1 101 2 215 1 
188 1 249 1 263 1 282 1 52 7 342 1 5 3 229 1 345 1 238 1 58 3 219 1 112 2 285 1 295 2 185 1 63 4 41 1 
188 1 263 1 282 2 1 1 5 3 47 1 238 1 128 1 103 1 31 1 157 1 247 1 206 1 361 1 52 10 15 1 229 1 345 1 58 5 112 1 367 1 348 1 295 1 294 2 21 2 115 1 91 1 63 5 41 1 
188 1 263 1 282 1 1 2 190 1 47 2 5 4 238 1 219 1 157 2 249 1 316 1 361 2 52 9 342 1 15 1 229 1 345 1 58 4 112 2 295 3 21 4 63 5 41 1 
188 1 249 1 263 1 282 1 52 7 342 1 5 3 229 1 345 1 238 1 58 3 219 1 112 2 285 1 295 2 63 4 41 1 
188 1 249 1 263 1 282 1 52 7 342 1 5 3 229 1 345 1 238 1 58 3 219 1 112 2 285 1 295 2 63 4 41 1 
69 2 3 1 192 1 284 2 73 1 124 2 267 1 200 1 9 1 151 1 288 1 340 1 107 1 344 1 276 1 320 1 253 1 161 1 210 1 254 1 369 1 278 2 22 1 
69 1 326 1 327 1 44 1 3 1 284 1 352 1 124 1 266 2 309 1 9 1 151 1 154 1 288 1 106 1 107 1 181 1 228 1 275 1 320 1 210 1 184 1 164 1 369 1 278 1 22 1 
69 1 326 1 327 1 2 1 44 1 3 1 284 1 352 1 173 1 124 1 266 2 309 1 9 2 151 1 154 1 288 1 106 1 107 1 181 1 275 1 88 1 320 1 210 2 184 1 164 1 255 1 369 1 278 1 22 1 92 1 
326 1 69 1 2 1 3 1 284 1 352 1 173 1 124 1 266 2 309 1 9 3 151 1 154 1 243 1 288 1 106 1 107 1 181 1 228 1 344 1 275 1 320 1 210 3 184 1 164 1 255 2 369 1 278 1 22 1 92 1 
69 1 326 1 2 1 3 1 284 1 352 1 173 1 124 1 266 2 309 1 9 2 243 1 288 1 106 1 107 1 181 1 228 1 275 1 320 1 210 2 184 1 255 2 369 1 278 1 92 1 
299 1 
234 2 94 1 144 2 96 1 189 1 3 2 192 2 334 5 239 1 195 2 196 2 198 2 336 1 102 1 287 1 246 1 288 1 338 1 205 4 107 2 108 1 207 1 14 2 252 1 57 1 253 1 161 1 209 1 163 1 254 1 347 2 211 1 70 1 301 5 71 2 72 1 304 1 125 1 267 1 220 1 174 1 28 3 130 2 131 2 32 1 362 2 364 1 134 2 366 1 320 1 138 6 369 2 322 1 323 1 40 1 
94 1 301 3 96 1 189 1 72 1 304 1 334 3 174 1 220 1 28 1 336 1 287 1 131 1 338 1 205 2 207 1 252 1 57 1 138 2 137 1 322 1 323 1 
94 1 234 1 301 3 96 1 189 1 72 1 304 1 334 3 174 1 220 1 198 1 28 1 336 1 287 1 338 1 246 1 205 3 207 1 252 1 57 1 138 1 137 1 322 1 323 1 
94 1 234 1 301 3 96 1 189 1 72 1 304 1 334 3 195 1 174 1 220 1 198 1 28 1 336 1 287 1 131 1 338 1 246 1 205 3 207 1 252 1 57 1 137 1 138 2 322 1 323 1 
94 1 234 4 189 1 96 1 144 1 334 5 195 4 196 2 198 5 336 1 287 1 338 1 246 5 205 6 108 1 207 1 14 2 252 1 57 1 163 1 347 2 211 1 301 5 71 2 72 1 304 1 125 1 220 1 174 1 221 1 28 3 130 1 131 4 178 1 362 2 86 1 364 1 318 1 137 1 138 7 321 1 322 1 323 1 40 1 
94 1 234 2 189 1 96 1 144 1 334 4 195 2 196 2 198 1 336 1 287 1 338 1 246 1 205 4 108 1 207 1 14 2 252 1 57 1 163 1 209 1 347 2 211 1 301 4 71 2 72 1 304 1 125 1 174 1 220 1 28 2 130 1 131 2 362 2 364 1 134 2 138 4 322 1 323 1 40 1 
234 2 94 1 301 4 71 2 144 1 96 1 189 1 72 1 304 1 334 4 195 2 125 1 196 2 174 1 220 1 221 1 198 1 28 2 336 1 130 1 131 2 287 1 246 1 338 1 205 4 178 1 362 2 108 1 207 1 14 2 364 1 252 1 57 1 138 4 163 1 347 2 321 1 322 1 211 1 323 1 40 1 
234 2 94 1 301 4 71 2 144 1 96 1 189 1 72 1 304 1 334 4 195 2 125 1 196 2 174 1 220 1 221 1 198 1 28 2 336 1 130 1 131 2 287 1 246 1 338 1 205 4 178 1 362 2 108 1 207 1 14 2 364 1 252 1 57 1 138 4 163 1 347 2 321 1 322 1 211 1 323 1 40 1 
234 2 94 1 301 4 144 1 96 1 189 1 72 1 304 1 334 4 195 2 125 1 174 1 220 1 198 1 28 2 336 1 130 1 245 2 131 2 287 1 246 1 80 2 338 1 205 4 178 1 362 2 13 1 108 1 207 1 14 2 364 1 252 1 134 2 57 1 138 4 163 1 89 1 322 1 64 1 323 1 40 1 
94 1 234 3 301 4 71 2 144 1 96 1 189 1 72 1 304 1 334 4 125 1 195 3 196 2 174 1 220 1 221 1 198 1 28 2 336 1 130 1 287 1 131 3 246 1 338 1 205 5 178 1 362 2 108 1 207 1 14 2 364 1 86 1 252 1 57 1 163 1 138 5 347 2 321 1 322 1 211 1 323 1 40 1 
94 1 234 3 301 4 71 2 144 1 96 1 189 1 72 1 304 1 334 4 125 1 195 3 196 2 174 1 220 1 221 1 198 1 28 2 336 1 130 1 287 1 131 3 246 1 338 1 205 5 178 1 362 2 108 1 207 1 14 2 364 1 86 1 252 1 57 1 163 1 138 5 347 2 321 1 322 1 211 1 323 1 40 1 
94 1 301 2 144 1 96 1 189 1 72 1 304 1 334 2 125 1 220 1 174 1 336 1 130 1 287 1 80 1 338 1 205 2 362 1 108 1 207 1 14 1 364 1 252 1 134 1 57 1 209 1 163 1 322 1 323 1 64 1 40 1 
262 1 94 1 95 1 1 2 168 2 3 3 72 1 192 1 47 2 283 1 170 1 197 1 267 1 7 1 338 1 288 1 157 2 248 1 314 1 223 1 107 3 177 2 361 2 52 2 16 1 58 1 88 1 320 1 253 1 161 1 254 1 21 4 369 3 63 1 
94 1 263 1 1 1 168 1 72 1 47 1 197 1 357 1 103 1 202 1 31 1 157 1 338 1 177 1 361 1 52 2 291 1 160 1 16 1 345 1 58 1 348 1 21 2 63 1 
157 1 249 1 177 1 361 1 1 1 168 1 84 1 21 2 342 1 7 1 47 1 
262 1 263 2 282 1 1 2 168 2 216 1 283 1 5 1 47 2 356 1 27 1 357 1 358 3 128 1 359 1 103 2 31 2 157 2 177 1 361 2 52 12 319 10 58 4 367 3 294 3 21 4 63 8 115 1 66 10 325 1 
262 1 94 2 168 1 1 1 3 1 72 2 351 1 215 1 192 1 47 1 283 1 26 1 356 1 99 1 197 1 267 1 358 1 357 1 29 1 288 1 338 1 157 1 314 1 107 1 177 1 361 1 52 2 16 1 58 1 320 1 161 1 60 1 21 2 369 1 186 1 63 1 349 1 23 1 
94 2 1 2 3 1 192 1 283 1 331 1 47 2 5 1 197 1 103 1 157 2 338 1 288 1 107 1 52 5 16 1 58 2 161 1 60 1 295 1 21 4 63 3 23 1 66 2 117 1 263 1 168 2 72 2 351 1 215 1 127 1 267 1 357 1 358 2 31 1 314 1 177 2 361 2 225 1 36 1 274 1 319 2 320 1 369 1 186 1 
157 1 263 1 177 1 82 1 361 1 52 2 168 1 1 1 47 1 319 1 358 1 21 2 7 1 63 2 66 1 31 1 
157 1 177 1 361 1 52 1 168 1 1 1 47 1 345 1 365 1 58 1 348 1 21 2 7 1 
157 1 263 1 177 1 361 1 52 2 168 1 1 1 47 1 319 1 358 1 21 2 7 1 63 2 103 1 66 1 31 1 
157 1 223 1 263 1 177 1 82 1 361 1 52 2 168 1 1 1 47 1 319 1 358 1 21 2 63 2 66 1 31 1 
157 1 223 1 177 1 361 1 52 1 168 1 1 1 47 1 345 1 365 1 58 1 348 1 21 2 
157 1 223 1 263 1 177 1 361 1 52 2 168 1 1 1 47 1 319 1 358 1 21 2 63 2 103 1 66 1 31 1 
157 1 263 1 177 1 361 1 168 1 1 1 52 2 47 1 319 1 358 1 21 2 63 2 103 1 66 1 31 1 
262 1 94 1 168 1 1 1 3 1 72 1 215 1 192 1 47 1 283 1 356 1 267 1 288 1 157 1 107 1 177 1 361 1 52 2 274 1 58 1 320 1 161 1 60 1 21 2 369 1 186 1 63 1 23 1 
262 1 94 1 168 1 1 1 3 1 72 1 215 1 192 1 47 1 283 1 356 1 100 1 267 1 288 1 157 1 107 1 177 1 361 1 52 2 58 1 320 1 161 1 21 2 369 1 258 1 63 1 372 1 23 1 
157 1 263 1 177 1 361 1 52 2 168 1 1 1 47 1 319 1 358 1 357 1 21 2 63 2 103 1 66 1 31 1 
94 1 263 1 168 1 1 1 3 1 72 1 215 1 47 1 127 1 267 1 358 1 103 1 31 1 288 1 157 1 107 1 177 1 361 1 52 2 274 1 319 1 320 1 88 1 161 1 60 1 21 2 369 1 186 1 63 2 66 1 23 1 
338 1 157 1 94 1 263 1 177 1 361 1 52 4 265 1 168 1 1 1 72 1 291 1 47 1 160 1 319 1 16 1 345 1 58 2 197 1 348 1 357 1 21 2 63 2 103 1 66 1 31 1 
263 2 282 1 1 2 329 1 237 1 47 2 5 1 76 1 149 1 128 1 310 1 103 2 313 1 31 2 157 2 316 1 361 2 52 10 272 1 345 1 58 4 367 1 348 1 294 2 21 4 114 1 63 6 115 1 
263 2 1 2 237 2 191 1 5 1 47 2 25 1 76 2 149 1 49 1 308 1 128 2 310 1 103 2 31 2 157 2 316 1 361 2 52 15 292 1 15 1 58 6 367 2 294 2 295 1 21 4 114 2 63 9 
263 2 282 1 1 2 329 1 237 2 47 2 5 1 76 1 149 1 128 1 310 1 103 2 31 2 157 2 204 1 316 1 361 2 52 13 272 1 345 2 58 6 367 1 348 2 294 2 21 4 114 1 63 7 115 1 
263 2 282 1 1 2 329 1 237 2 47 2 5 1 76 1 149 1 128 1 310 1 103 2 31 2 157 2 204 1 316 1 361 2 52 13 272 1 345 2 58 6 367 1 348 2 294 2 21 4 114 1 63 7 115 1 
263 4 1 2 237 2 191 1 5 2 47 2 25 1 219 1 76 1 149 1 49 1 308 1 128 2 310 1 103 3 31 3 157 2 249 1 316 1 361 2 52 23 342 1 292 1 15 1 229 1 345 1 58 9 112 1 367 2 295 2 294 3 21 4 114 1 63 14 115 1 41 1 
250 1 350 1 346 1 20 1 236 1 98 1 337 1 65 1 116 1 38 1 
132 1 55 1 
250 1 350 1 235 1 20 1 277 1 236 1 65 1 116 1 217 1 
180 1 152 1 
227 1 324 1 18 1 
68 1 270 1 301 1 250 1 350 1 120 1 34 1 236 1 38 1 334 1 346 1 198 1 20 1 175 2 337 1 116 1 65 1 242 1 
68 1 270 1 301 1 250 1 350 1 120 1 34 1 236 1 38 1 334 1 346 1 198 1 20 1 175 2 337 1 116 1 65 1 242 1 
68 1 270 1 301 1 250 1 350 1 120 1 34 1 236 1 38 1 334 1 346 1 198 1 20 1 175 2 337 1 116 1 65 1 242 1 
180 1 152 1 18 1 
180 1 152 1 18 1 
227 1 324 1 
227 1 324 1 18 1 
142 1 212 1 
68 1 142 1 94 2 301 1 350 1 236 1 72 2 334 1 356 1 197 2 175 1 270 1 132 1 338 2 105 1 250 1 341 1 159 1 273 1 55 1 16 2 136 1 140 1 20 1 212 1 65 1 116 1 
262 1 94 2 95 2 168 1 1 1 3 2 146 1 72 2 47 1 283 1 77 1 267 1 357 1 311 1 201 1 288 1 338 2 157 1 248 1 177 1 107 2 361 1 52 2 110 1 58 1 320 1 161 1 257 1 21 2 369 2 63 1 
69 1 288 1 107 1 3 1 147 1 192 1 87 1 320 1 253 1 161 1 254 1 267 1 369 1 200 1 
326 1 69 1 288 1 106 1 107 1 3 1 228 1 87 1 352 1 48 1 275 1 320 1 218 1 184 1 266 2 164 1 309 1 369 1 
326 1 69 1 288 1 106 1 107 2 3 2 228 1 87 1 352 1 48 1 275 1 320 1 88 1 218 1 184 1 266 2 164 1 309 1 369 2 
326 1 69 1 288 1 106 1 107 1 3 1 228 1 352 1 48 1 275 1 194 1 320 1 184 1 266 2 164 1 309 1 369 1 
251 1 
246 1 144 1 108 1 74 1 355 1 163 1 125 1 198 1 130 1 40 1 
263 1 71 1 303 1 144 1 134 2 345 1 6 1 348 1 130 2 103 1 67 1 31 1 
246 1 334 1 301 1 138 1 198 1 28 1 
70 2 301 3 144 2 121 1 3 4 192 2 148 2 334 3 125 2 267 1 28 2 102 1 130 2 155 1 288 1 32 1 107 4 271 1 53 1 108 1 320 1 366 2 253 1 161 1 163 2 138 4 254 1 369 4 40 2 
74 1 355 1 84 1 
301 1 71 1 144 1 334 1 125 1 196 1 198 1 28 1 130 1 246 1 108 1 134 1 163 1 138 1 347 1 211 1 40 1 
144 6 189 2 3 1 192 1 334 5 6 4 198 1 101 2 8 2 103 2 244 1 246 1 288 1 107 1 108 3 109 1 345 2 111 2 161 1 163 3 19 1 348 2 67 2 70 1 119 3 301 5 263 2 71 4 303 4 215 1 123 2 125 3 267 6 28 3 130 7 31 2 224 1 36 2 134 8 135 2 366 2 320 2 138 5 369 1 40 3 42 2 
263 1 71 2 144 3 303 3 108 1 191 1 292 1 25 1 134 4 345 1 6 3 163 1 49 1 367 1 125 1 348 1 308 1 294 1 128 1 130 3 103 1 40 1 31 1 
143 1 94 1 301 1 263 2 144 2 72 1 4 2 304 1 334 1 219 1 125 1 197 1 130 2 286 1 268 1 156 1 338 1 108 1 160 1 229 1 16 1 345 1 163 1 59 1 321 1 67 1 40 1 41 1 
94 3 1 1 168 1 3 1 72 3 192 1 215 1 283 1 47 1 356 1 197 2 307 1 267 1 286 1 157 1 338 2 288 1 107 1 177 1 361 1 52 1 160 2 274 1 16 2 58 1 320 1 161 1 60 1 21 2 369 1 186 1 23 1 
246 2 70 1 71 2 303 2 144 1 108 1 134 4 366 1 112 1 6 2 163 1 125 1 198 2 130 2 40 1 
226 1 212 1 337 1 65 1 116 1 
90 1 65 1 116 1 
90 1 65 1 116 1 
90 1 65 1 116 1 
85 1 65 1 116 1 
85 1 65 1 116 1 
85 1 65 1 116 1 
65 1 116 1 
350 1 236 1 
157 1 143 1 316 1 282 2 263 2 361 1 1 1 52 10 47 1 5 5 229 2 345 2 58 5 219 1 295 3 21 2 63 5 41 2 
157 1 316 1 263 1 361 1 1 1 52 2 47 1 21 2 63 2 31 1 
157 1 316 1 263 1 361 1 1 1 52 2 47 1 21 2 63 2 103 1 31 1 
247 1 157 3 316 1 282 1 361 3 52 3 1 3 272 1 15 1 47 3 5 2 229 1 58 2 295 1 21 6 63 1 41 1 
143 1 263 2 282 3 1 4 5 6 47 4 219 1 128 1 269 1 157 4 247 1 249 1 206 1 316 1 361 4 52 15 272 1 342 1 15 1 229 2 345 2 58 8 367 1 294 1 295 3 21 8 63 7 41 2 
263 1 1 1 47 1 5 2 219 1 308 1 128 1 157 1 249 1 316 1 361 1 52 8 342 1 229 1 345 1 58 4 112 1 367 1 294 1 295 2 21 2 63 4 41 1 
263 2 282 1 1 2 47 2 5 3 219 1 308 1 128 1 103 1 269 1 31 1 157 2 249 1 316 1 361 2 52 11 342 1 229 1 345 1 58 5 112 1 367 1 295 2 294 2 21 4 63 6 115 1 41 1 
157 2 263 2 316 1 361 2 1 2 52 9 191 1 292 1 15 1 5 1 47 2 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 4 128 1 63 6 103 2 31 2 
157 2 263 2 316 1 361 2 1 2 52 9 191 1 292 1 15 1 5 1 47 2 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 4 128 1 63 6 103 2 31 2 
263 1 1 1 47 1 5 2 219 1 308 1 128 1 157 1 249 1 316 1 361 1 52 8 342 1 229 1 345 1 58 4 112 1 367 1 294 1 295 2 21 2 63 4 41 1 
157 2 263 2 316 1 361 2 1 2 52 9 191 1 292 1 15 1 5 1 47 2 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 4 128 1 63 6 103 2 31 2 
157 3 263 2 316 1 361 3 1 3 52 9 191 1 292 1 15 1 5 1 47 3 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 6 128 1 63 6 103 2 269 1 31 2 
157 3 263 2 316 1 361 3 1 3 52 9 272 1 191 1 292 1 15 1 5 1 47 3 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 6 128 1 63 6 103 2 31 2 
249 1 282 3 263 1 52 7 342 2 5 6 229 3 345 1 58 4 219 1 295 3 63 3 41 3 
157 3 263 2 316 1 361 3 1 3 52 9 272 1 191 1 292 1 15 1 5 1 47 3 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 6 128 1 63 6 103 2 31 2 
157 2 249 1 263 1 282 1 361 2 52 8 1 2 342 1 15 1 5 3 47 2 229 1 345 1 58 4 112 1 219 1 295 2 21 4 63 4 41 1 
249 1 84 1 342 1 
157 1 263 1 361 1 1 1 52 2 47 1 21 2 63 2 103 1 269 1 31 1 
263 1 282 1 52 6 5 1 345 1 58 3 367 1 348 1 294 2 128 1 63 3 115 1 103 1 31 1 
143 1 282 4 263 5 1 1 216 1 5 8 47 1 219 2 27 1 103 2 31 2 157 1 249 1 361 1 52 22 342 1 15 1 229 2 345 4 58 9 112 1 367 2 348 1 295 4 294 2 21 2 115 1 63 13 41 2 
58 1 52 1 294 1 
367 1 52 1 63 1 
263 1 282 1 52 5 36 1 5 1 345 1 58 2 348 1 63 3 103 1 31 1 
157 2 263 2 316 1 361 2 1 2 52 9 191 1 292 1 15 1 5 1 47 2 25 1 58 3 49 1 367 1 308 1 295 1 294 1 21 4 128 1 63 6 103 2 31 2 
263 1 282 1 52 6 5 2 229 1 345 1 58 3 219 1 295 1 63 3 41 1 
247 1 157 1 249 1 282 1 361 1 52 3 1 1 342 1 15 1 5 2 47 1 229 1 58 2 295 1 21 2 63 1 41 1 
338 1 94 1 176 1 51 1 356 1 174 1 72 1 
104 1 43 1 338 1 51 1 176 1 94 1 72 1 37 1 356 1 174 1 199 1 233 1 
288 1 107 4 264 1 3 4 192 1 320 1 88 1 253 1 161 1 254 1 267 1 369 4 62 1 
288 1 107 2 3 2 215 1 148 1 193 1 320 2 161 1 183 1 267 1 369 2 373 1 260 1 30 1 
320 1 288 1 106 1 107 1 266 1 309 1 3 1 369 1 192 1 275 1 
320 1 288 1 88 1 161 1 107 2 267 1 3 2 369 2 146 1 110 1 228 1 
288 2 107 4 264 1 3 5 146 1 192 1 148 1 305 1 253 1 88 1 320 2 161 2 254 1 267 3 369 5 50 1 
261 1 288 2 107 4 264 1 3 5 146 1 192 1 148 1 253 1 88 1 320 2 161 2 254 1 267 3 369 5 50 1 
253 1 107 1 3 1 84 1 369 1 192 1 
338 1 288 1 314 1 94 2 107 1 3 1 72 2 215 1 192 1 16 1 320 1 161 1 356 1 197 1 267 1 60 1 369 1 23 1 
94 2 45 1 3 1 72 2 215 2 148 1 304 2 356 1 197 1 267 3 10 1 287 1 288 1 338 2 314 1 107 1 317 1 16 2 320 1 161 2 60 1 369 1 323 1 23 1 
94 2 45 1 3 1 72 2 215 2 148 1 304 2 356 1 100 1 197 1 267 3 10 1 287 1 288 1 338 2 314 1 107 1 317 1 16 2 320 1 161 2 369 1 323 1 23 1 
246 1 288 1 301 2 119 1 107 3 189 1 169 1 3 3 317 1 192 1 215 1 148 1 320 1 334 2 161 1 138 1 232 1 267 4 198 1 369 3 101 1 62 1 10 1 
246 1 288 1 301 2 119 1 107 3 189 1 3 3 317 1 192 1 215 1 148 1 320 1 334 2 161 1 138 1 267 4 198 1 369 3 101 1 62 1 8 1 10 1 
320 1 288 1 172 1 107 1 3 1 369 1 
288 1 224 1 107 2 3 2 192 1 215 1 170 1 193 1 88 1 320 2 161 1 267 1 113 1 369 2 373 1 
94 2 1 2 3 1 47 2 5 2 197 1 157 2 338 1 288 1 249 1 107 1 52 6 342 1 16 1 345 1 58 3 161 1 112 1 60 1 295 2 21 4 63 3 23 1 66 1 263 1 168 2 72 2 215 1 219 1 77 1 356 2 127 1 267 1 358 1 357 1 314 1 177 2 225 1 361 2 274 1 229 1 319 1 88 1 320 1 369 1 186 1 41 1 
301 3 119 1 144 1 189 1 3 1 192 1 74 1 334 3 355 1 125 2 267 2 198 1 101 1 28 1 8 1 130 1 155 1 246 1 107 1 159 1 108 2 135 1 111 1 163 2 138 2 369 1 40 2 42 1 
288 1 224 1 107 2 3 2 109 1 215 1 88 1 172 1 320 2 161 1 267 2 101 1 369 2 
338 1 288 1 314 1 94 2 107 1 3 1 72 2 215 1 192 1 16 1 320 1 161 1 356 1 100 1 197 1 267 1 369 1 23 1 
288 1 224 1 107 1 3 1 215 1 148 1 193 1 320 2 161 1 267 1 113 1 369 1 373 1 
24 1 201 1 332 1 12 1 
93 1 24 1 328 1 
24 2 201 1 332 1 12 1 
93 1 230 1 24 2 334 1 301 1 159 1 328 1 201 1 332 1 12 1 
173 1 210 1 2 1 44 1 9 1 151 1 22 1 92 1 
2 3 214 1 97 1 343 1 208 1 173 2 240 1 210 4 255 2 9 4 151 1 141 1 22 1 92 2 
2 1 44 1 179 1 173 1 210 2 255 1 296 1 61 1 151 1 9 2 22 1 92 1 
2 1 44 1 214 1 83 1 208 2 173 1 210 3 240 2 151 1 9 3 22 1 92 1 
81 2 139 1 2 2 54 1 
210 1 44 1 9 1 151 1 22 1 279 1 
173 1 354 1 210 2 2 1 44 1 255 1 9 2 151 1 22 1 92 1 
129 1 
173 1 210 1 2 1 44 1 9 1 151 1 22 1 92 1 
173 1 84 1 92 1 
173 1 210 1 2 1 9 1 151 1 22 1 92 1 
124 1 210 1 278 1 
2 1 44 1 214 1 208 1 173 1 210 3 240 2 79 1 151 1 9 3 22 1 92 1 
173 1 210 2 2 1 255 1 9 2 151 1 22 1 92 1 11 1 
106 1 302 1 44 1 2 1 343 1 210 1 184 1 266 1 151 1 9 1 22 1 
173 1 210 1 2 1 44 1 9 1 151 1 22 1 
173 2 210 1 44 1 9 1 151 1 22 1 92 1 
2 1 44 1 122 1 173 1 210 2 370 1 297 1 151 2 9 2 22 2 
44 1 2 2 343 1 173 1 354 1 210 3 255 2 151 1 9 3 141 1 22 1 92 1 312 1 
326 1 106 1 2 1 44 1 75 1 173 1 210 2 266 2 184 1 309 1 255 1 151 1 9 2 22 1 92 1 
44 1 2 2 330 1 343 1 173 1 210 4 255 2 151 2 9 4 141 1 22 2 92 1 11 1 
354 1 173 1 240 1 210 3 2 1 44 1 255 1 9 3 151 1 22 1 92 1 
2 1 97 1 141 1 343 1 
173 1 2 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (25,113) 48 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (25,113) 48 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (109,222) 168 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (109,222) 168 373 291 (109,222) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 349 (9,112,195) (9,112,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 349 (9,112,195) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (24,121) (107,187,250) (9,112,195) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (248,285) (352,363) (352,363) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 349 (9,112,195) (9,112,195) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 88 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (109,222) 168 296 293 240 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (109,222) 168 46 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (109,222) 168 373 92 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (109,222) 168 139 219 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (109,222) 168 373 291 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (109,222) 168 139 219 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (109,222) 168 373 291 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (109,222) 168 139 92 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 349 (107,187,250) (107,187,250) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 349 (107,187,250) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (248,285) (248,285) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 349 (107,187,250) (107,187,250) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 34 116 101 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 75 181 196 185 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (109,222) 168 337 (305,376) (305,376) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
95 2 25 1 2 1 3 5 333 3 55 1 316 9 361 2 103 1 223 4 125 2 61 1 126 9 340 1 274 1 277 1 86 2 133 2 134 1 281 1 255 1 64 1 167 2 210 2 238 1 193 1 172 6 113 1 
95 2 25 1 2 1 3 5 333 3 55 1 316 9 361 2 103 1 223 4 125 2 61 1 126 9 340 1 274 1 277 1 86 2 133 2 134 1 281 1 255 1 64 1 167 2 210 2 238 1 193 1 172 6 113 1 
95 2 25 1 2 1 3 6 333 4 55 1 316 10 361 2 103 1 223 5 125 2 61 1 126 10 340 1 274 1 277 1 86 2 133 2 134 1 281 1 255 1 64 1 167 2 210 2 238 1 193 1 172 7 113 1 
95 2 25 1 2 1 3 4 333 2 55 1 316 7 361 2 103 1 223 3 125 2 126 7 340 1 274 1 277 1 86 1 133 2 134 1 281 1 255 1 64 1 167 2 210 2 238 1 193 1 172 4 113 1 
95 1 2 1 277 1 3 3 86 2 133 1 281 1 333 1 316 4 361 1 64 1 167 1 223 2 125 1 61 1 126 4 193 1 172 3 
95 1 261 1 3 1 2 1 277 1 133 1 134 1 281 1 316 2 255 1 361 1 32 1 125 1 210 1 69 1 126 2 
2 1 277 1 3 2 133 2 281 1 333 1 316 3 223 1 125 2 210 1 126 3 172 1 113 1 
97 1 277 1 48 1 125 1 133 1 126 1 316 1 113 1 
97 1 277 1 48 1 125 1 133 1 126 1 316 1 113 1 
88 1 268 1 221 1 
225 2 60 1 268 1 
165 2 67 2 74 2 178 2 141 1 170 2 201 1 330 2 
74 2 75 2 118 1 178 2 54 1 179 1 31 1 181 2 245 1 271 2 7 1 297 2 365 1 364 1 150 1 201 1 37 1 154 2 105 1 321 1 159 1 14 1 282 1 165 3 307 1 283 1 67 2 284 1 47 1 68 1 208 1 169 1 141 1 237 1 211 1 170 3 330 2 
165 1 67 1 74 1 178 1 141 1 292 1 170 1 205 1 309 1 330 1 
356 1 276 1 260 1 85 1 204 1 263 1 178 1 205 1 268 1 221 1 165 1 59 1 170 1 127 1 
356 2 85 2 74 1 276 1 260 1 263 1 178 1 205 1 268 1 221 1 165 1 67 1 170 1 330 1 127 1 
312 1 356 1 342 1 85 1 45 1 
312 1 356 2 342 1 85 2 158 1 268 1 221 1 89 1 
312 1 356 1 85 1 
356 1 342 1 85 1 74 1 178 1 292 1 189 1 205 1 165 1 67 1 141 1 170 1 309 1 330 1 
268 1 
356 2 312 1 342 1 74 1 85 2 301 1 178 1 292 1 189 1 205 1 268 1 221 1 89 1 165 1 67 1 141 1 170 1 309 1 330 1 
0 1 153 1 356 5 312 2 342 2 259 1 85 5 332 2 27 1 302 1 280 1 106 2 268 1 221 1 335 1 89 1 108 2 142 1 298 1 
88 1 201 1 
231 1 74 1 178 2 165 2 67 1 170 2 369 1 330 1 201 2 
109 1 168 1 
154 1 75 1 118 1 54 1 14 1 159 1 181 1 165 1 284 1 365 1 208 1 169 1 227 1 170 1 201 1 37 1 
154 1 118 1 75 1 54 1 178 1 159 1 14 1 351 1 181 1 165 2 67 1 109 1 284 1 365 1 169 1 208 1 140 1 170 2 37 1 330 1 
96 1 74 1 204 1 26 1 217 1 178 5 351 2 165 5 67 4 140 1 170 5 369 1 330 4 201 1 
165 2 67 2 178 2 28 1 292 1 170 2 205 1 330 2 
351 1 165 3 67 3 74 1 178 3 170 3 201 1 330 3 
165 1 67 1 178 1 292 1 170 1 205 1 330 1 
165 1 67 1 231 1 74 1 178 1 170 1 205 1 369 1 330 1 
356 1 74 2 260 1 118 1 75 1 263 1 54 1 178 3 31 1 181 1 271 2 7 1 149 1 297 1 365 1 364 1 150 1 369 1 201 1 37 1 127 1 154 1 105 1 276 1 85 1 321 1 42 1 159 1 14 1 205 1 351 1 165 4 283 1 67 3 284 1 47 1 169 1 208 1 68 1 140 1 141 1 211 1 170 4 330 3 
351 1 165 2 96 1 67 1 204 1 178 2 170 2 201 1 330 1 
356 1 74 1 85 1 260 1 276 1 263 1 178 3 205 1 268 1 351 2 165 3 67 3 149 1 140 1 170 3 369 1 330 3 194 1 127 1 
74 1 178 2 100 1 351 1 165 2 67 2 109 1 170 2 369 1 330 2 
154 1 75 1 118 1 54 1 14 1 159 1 181 1 165 1 284 1 365 1 208 1 169 1 170 1 201 1 37 1 
154 1 73 1 75 1 54 1 159 1 181 1 165 1 284 1 365 1 208 1 169 1 170 1 152 1 201 1 37 1 
105 1 321 1 291 1 317 1 222 1 31 2 373 1 271 2 109 1 168 1 7 1 297 2 47 1 150 1 211 1 104 1 
165 1 67 1 178 1 28 1 170 1 205 1 127 1 330 1 
94 1 70 1 
94 1 70 1 
322 1 262 1 
322 1 262 1 
322 1 262 1 
94 1 162 1 70 1 
311 1 94 1 70 1 
242 1 322 1 262 1 35 1 94 2 70 2 
94 1 162 1 70 1 
94 1 162 1 70 1 
94 1 70 1 164 1 
94 1 70 1 164 1 
94 1 70 1 164 1 
311 1 356 1 175 1 178 2 362 1 246 1 80 1 370 1 201 1 275 1 40 1 85 1 12 1 136 1 165 2 67 2 91 1 50 1 170 2 286 1 94 1 70 1 330 2 288 1 
341 1 356 2 40 1 85 2 76 1 12 2 13 1 136 2 268 1 362 2 8 2 35 1 50 3 249 1 186 1 94 2 70 2 310 1 288 2 
95 1 167 1 361 1 
95 1 32 1 361 1 
167 2 32 1 24 1 345 1 29 1 361 3 
167 1 121 1 32 1 345 1 29 1 361 2 
167 1 32 1 345 2 29 1 361 2 
0 2 312 1 356 5 214 2 216 1 332 1 243 1 268 2 317 1 221 1 30 2 79 2 182 1 320 1 225 3 298 1 60 1 370 1 275 1 342 4 85 5 280 3 106 1 16 1 89 1 373 1 108 1 374 1 139 1 92 1 286 1 328 1 
0 6 312 6 356 9 216 2 332 2 243 1 268 5 244 1 317 3 197 1 221 1 30 6 198 1 79 6 225 9 298 1 60 3 370 4 153 1 342 7 85 9 44 1 45 5 280 8 106 2 16 2 89 1 373 3 324 1 108 2 111 1 374 3 139 3 92 3 355 5 
0 2 356 3 214 1 216 1 332 1 268 3 221 1 317 1 30 2 79 2 320 1 225 4 60 2 370 1 153 1 342 2 85 3 280 3 106 1 16 1 373 1 108 1 92 1 139 1 374 1 328 1 
0 4 356 4 214 2 216 1 332 1 268 4 221 1 317 2 30 4 198 1 79 4 320 1 225 7 60 3 370 2 153 1 342 3 85 4 44 1 280 5 106 1 16 1 373 2 324 1 108 1 92 2 139 2 374 2 328 1 
365 1 88 1 173 1 
39 1 365 1 
188 1 
365 1 159 1 37 1 
365 1 367 1 
365 1 37 1 
365 3 138 1 4 1 159 1 173 2 37 1 
289 1 145 1 129 1 317 1 179 2 137 1 163 3 31 3 56 4 305 1 337 2 297 5 374 1 52 1 171 1 376 1 174 1 
289 1 145 1 129 1 317 1 179 2 137 1 163 3 31 4 56 4 305 1 337 2 297 6 374 1 52 1 171 1 376 1 174 1 
289 1 145 1 129 1 303 1 317 1 179 2 137 1 163 3 31 3 56 4 305 1 337 2 297 5 374 1 52 1 171 1 376 1 174 1 
239 1 289 5 116 1 145 2 99 1 77 1 179 16 317 5 31 20 56 13 271 4 296 3 337 3 82 1 7 2 34 3 297 36 230 1 128 1 129 2 278 2 321 2 137 3 163 8 373 2 305 1 47 2 92 2 139 2 374 5 211 2 171 1 52 3 376 1 174 2 
289 1 145 1 5 1 317 1 179 3 31 5 56 5 271 4 337 2 7 2 297 8 129 1 321 2 278 1 163 4 137 1 350 1 305 1 47 2 374 1 211 2 52 1 376 1 174 1 
154 1 195 1 277 1 300 1 75 1 43 1 133 1 316 1 349 1 181 1 125 1 210 1 151 1 353 1 112 1 126 1 
154 1 75 1 359 1 43 1 133 1 316 2 349 1 181 1 339 1 21 1 125 1 210 1 151 1 353 1 112 1 126 2 172 1 
154 1 24 1 75 1 43 1 54 1 187 1 316 1 361 1 181 1 32 1 339 1 208 1 21 1 228 1 9 1 151 1 210 1 353 1 126 1 172 1 
154 1 75 1 43 2 359 1 133 1 316 1 181 1 363 1 284 1 257 1 248 1 125 1 352 1 210 2 151 2 353 2 126 1 
154 1 195 1 277 1 75 1 43 1 133 1 316 1 349 1 181 1 339 1 125 1 210 1 151 1 353 1 112 1 126 1 
66 1 
0 2 98 1 332 1 54 1 334 1 298 1 60 2 154 2 62 1 253 1 106 1 16 1 348 2 161 1 304 1 17 2 166 1 108 1 110 2 208 1 312 6 356 4 75 2 265 2 268 1 269 1 181 2 33 2 273 1 365 1 83 1 225 2 84 2 37 1 130 2 85 4 232 1 280 2 89 3 325 1 284 2 49 1 143 1 329 2 
356 2 312 2 85 2 232 1 301 1 304 1 89 1 325 1 33 1 49 1 143 1 
325 1 356 1 130 1 85 1 232 1 49 1 143 1 304 1 329 1 
312 1 33 1 325 1 356 1 85 1 232 1 49 1 84 1 143 1 304 1 
0 1 312 3 356 2 357 1 74 1 332 1 178 1 292 1 268 1 221 1 33 2 224 1 84 2 298 1 10 1 85 2 232 1 301 1 135 1 280 1 189 1 106 1 205 1 161 1 304 1 89 1 165 1 325 1 67 1 108 1 141 1 49 1 170 1 143 1 309 1 330 1 
0 1 332 1 292 1 298 1 60 2 106 1 205 1 348 2 161 1 304 1 17 2 165 1 67 1 108 1 110 2 170 1 309 1 356 2 312 2 74 1 178 1 265 1 268 3 221 1 33 1 273 1 83 1 225 2 84 1 130 1 85 2 232 1 280 1 189 1 89 1 325 1 49 1 141 1 143 1 329 1 330 1 
0 1 357 1 356 1 74 1 332 1 178 1 292 1 268 1 221 1 224 1 298 1 85 1 232 1 280 1 189 1 106 1 205 1 161 1 304 1 165 1 325 1 67 1 108 1 141 1 49 1 170 1 143 1 309 1 330 1 
0 1 357 1 356 1 74 1 332 1 178 1 292 1 268 1 221 1 224 1 298 1 85 1 232 1 280 1 189 1 106 1 205 1 161 1 304 1 165 1 325 1 67 1 108 1 141 1 49 1 170 1 143 1 309 1 330 1 
0 1 332 1 292 1 298 1 346 1 106 1 205 1 348 2 304 1 17 2 165 1 67 1 108 1 170 1 309 1 71 2 356 3 312 4 117 1 74 1 178 1 268 1 221 1 78 1 33 2 272 2 83 1 225 2 84 2 130 2 85 3 232 1 280 1 189 1 89 2 325 1 49 1 141 1 236 1 143 1 329 2 330 1 
0 1 312 1 356 1 357 1 74 1 332 1 178 1 292 1 268 1 221 1 33 1 224 1 84 1 298 1 85 1 232 1 135 1 280 1 189 1 106 1 205 1 161 1 304 1 165 1 325 1 67 1 108 1 141 1 49 1 170 1 143 1 309 1 330 1 
0 1 312 1 356 1 357 1 74 1 332 1 178 1 292 1 268 1 221 1 33 1 224 1 84 1 298 1 85 1 232 1 135 1 280 1 189 1 106 1 205 1 161 1 304 1 165 1 325 1 67 1 108 1 141 1 49 1 170 1 143 1 309 1 330 1 
0 1 332 1 292 1 298 1 106 1 205 1 348 2 304 1 17 2 165 1 67 1 108 1 170 1 309 1 71 2 356 3 312 4 74 1 178 1 268 1 221 1 33 2 272 2 273 1 83 1 225 2 84 2 130 1 85 3 232 1 280 1 189 1 89 2 325 1 49 1 141 1 236 1 143 1 329 1 330 1 
179 2 317 1 31 3 56 2 271 2 337 1 7 1 297 5 150 1 104 1 201 1 105 1 321 1 88 1 137 1 163 2 305 1 109 1 168 1 47 1 374 1 211 1 52 1 376 1 174 1 
240 1 105 1 321 1 293 1 256 1 31 1 271 2 296 1 109 1 168 1 7 1 297 1 47 1 150 1 211 1 
72 1 118 1 75 1 54 1 178 1 100 1 179 1 181 1 31 1 271 2 7 1 365 1 297 2 150 1 227 1 201 1 37 1 154 1 105 1 321 1 157 1 159 1 14 1 256 1 351 1 165 2 67 1 283 1 307 1 284 1 47 1 169 1 208 1 140 1 327 1 170 2 211 1 330 1 
118 1 75 1 54 1 178 1 181 1 31 2 318 1 271 4 7 2 184 1 365 1 297 2 150 2 366 1 37 1 154 1 105 2 321 2 159 1 14 1 256 1 351 1 165 2 67 1 283 1 109 1 168 1 46 1 284 1 47 2 169 1 208 1 68 1 140 1 235 1 170 2 211 2 330 1 
144 1 75 8 98 1 178 1 54 2 334 1 179 1 336 1 181 7 31 1 271 4 148 1 7 2 339 1 365 3 297 2 150 2 368 1 104 1 37 2 154 8 105 2 300 1 321 2 132 1 156 1 351 1 165 1 67 1 307 1 283 1 19 1 284 2 47 2 208 2 237 2 170 1 211 2 330 1 
74 1 178 1 179 1 317 1 31 2 271 2 7 1 297 3 150 1 369 1 105 1 321 1 256 1 373 1 165 1 67 1 109 1 168 1 47 1 92 1 139 1 374 1 234 1 211 1 170 1 330 1 
105 1 321 1 219 1 179 2 271 2 109 1 168 1 7 1 297 2 47 1 150 1 139 1 374 1 211 1 104 1 
105 1 321 1 291 1 317 1 373 1 31 2 271 2 109 1 168 1 7 1 297 2 47 1 150 1 211 1 104 1 
105 1 321 1 179 2 271 2 109 1 168 1 7 1 297 2 47 1 150 1 92 1 139 1 374 1 211 1 104 1 
105 1 321 1 219 1 179 2 271 2 148 1 109 1 168 1 7 1 297 2 47 1 150 1 139 1 374 1 211 1 
105 1 321 1 291 1 317 1 373 1 31 2 271 2 148 1 109 1 168 1 7 1 297 2 47 1 150 1 211 1 
105 1 321 1 179 2 271 2 148 1 109 1 168 1 7 1 297 2 47 1 150 1 92 1 139 1 374 1 211 1 
105 1 321 1 179 2 271 2 109 1 168 1 7 1 47 1 297 2 150 1 92 1 139 1 374 1 211 1 
118 1 75 1 54 1 179 1 181 1 31 1 271 2 7 1 297 2 365 1 150 1 201 1 37 1 154 1 105 1 321 1 159 1 14 1 165 1 307 1 283 1 284 1 47 1 169 1 208 1 68 1 170 1 211 1 
73 1 75 1 54 1 179 1 181 1 31 1 271 2 7 1 297 2 365 1 150 1 152 1 201 1 37 1 154 1 131 1 105 1 321 1 159 1 165 1 307 1 283 1 284 1 47 1 169 1 208 1 170 1 211 1 
105 1 321 1 179 2 256 1 271 2 109 1 168 1 7 1 297 2 47 1 150 1 92 1 139 1 374 1 211 1 
118 1 75 1 54 1 179 2 181 1 318 1 271 2 7 1 297 2 365 1 150 1 37 1 154 1 105 1 300 1 321 1 159 1 14 1 165 1 109 1 168 1 47 1 169 1 208 1 68 1 374 1 139 1 92 1 170 1 211 1 
105 1 74 1 321 1 178 1 179 2 191 1 256 1 165 1 271 2 67 1 109 1 168 1 7 1 297 2 47 1 150 1 374 1 139 1 92 1 170 1 211 1 369 1 330 1 
289 4 290 1 53 1 147 1 294 2 101 1 56 9 296 4 337 1 7 3 338 1 297 40 200 4 252 1 163 5 350 1 305 1 20 1 211 3 354 1 174 1 116 3 218 1 264 1 317 5 179 19 270 1 31 21 271 6 183 1 34 3 321 3 278 1 137 1 323 1 373 4 90 1 47 3 374 5 139 4 92 4 52 1 376 1 
289 3 116 3 290 1 53 1 218 1 264 1 147 1 294 2 101 1 179 19 317 4 270 1 31 19 56 8 296 4 271 8 337 1 183 1 7 4 338 1 297 38 34 3 200 4 252 1 278 2 321 4 137 1 163 5 350 1 323 1 90 1 373 3 305 1 20 1 47 4 92 4 139 4 374 5 354 1 211 4 52 1 376 1 174 1 
289 5 116 2 290 1 53 1 218 1 264 1 294 1 101 1 317 6 179 21 31 21 56 11 296 3 271 4 337 1 183 1 7 2 338 1 297 42 34 3 229 1 200 4 252 1 278 1 321 2 137 1 163 6 350 1 323 1 90 1 373 5 305 1 20 1 47 2 92 5 139 5 374 6 354 1 211 2 52 1 376 1 174 1 
289 3 116 1 290 2 358 1 53 1 264 1 147 1 294 1 179 9 317 3 31 10 56 6 296 2 271 4 183 1 7 2 338 1 297 19 34 1 200 2 321 2 163 3 350 1 323 1 373 3 47 2 92 3 139 3 374 3 211 2 
289 2 116 2 290 1 53 2 218 1 264 1 294 2 101 1 317 2 179 14 31 12 56 4 271 6 296 2 183 1 7 3 338 1 297 26 34 2 200 4 252 1 278 2 321 3 163 2 350 1 90 1 373 2 20 1 47 3 92 3 139 3 374 3 354 1 211 3 
341 1 362 1 81 1 35 1 76 1 12 1 136 1 94 1 70 1 288 1 
311 1 80 1 
362 1 343 1 1 1 12 1 136 1 6 1 94 1 70 1 288 1 
287 1 162 1 
18 1 242 1 164 1 
341 1 40 1 356 1 85 1 76 1 12 1 13 1 136 1 268 1 362 1 8 1 35 1 50 2 249 1 186 1 94 1 70 1 288 1 
341 1 40 1 356 1 85 1 76 1 12 1 13 1 136 1 268 1 362 1 8 1 35 1 50 2 249 1 186 1 94 1 70 1 288 1 
341 1 40 1 356 1 85 1 76 1 12 1 13 1 136 1 268 1 362 1 8 1 35 1 50 2 249 1 186 1 94 1 70 1 288 1 
242 1 287 1 162 1 
242 1 287 1 162 1 
18 1 164 1 
18 1 242 1 164 1 
246 1 175 1 
311 1 356 1 175 1 178 2 362 1 246 1 80 1 8 1 249 1 370 1 201 1 275 1 342 1 85 1 12 1 136 1 165 2 67 2 91 1 326 1 50 1 170 2 286 1 94 1 70 1 288 1 330 2 
75 2 54 1 178 2 146 1 179 1 336 1 31 1 181 2 199 1 271 2 7 1 365 1 297 2 150 1 37 1 38 1 154 2 372 1 105 1 321 1 132 1 63 1 256 1 165 2 307 1 283 1 47 1 208 1 237 2 170 2 211 1 
181 2 154 2 300 1 75 2 339 1 43 1 360 1 349 1 250 1 107 1 
181 1 154 1 75 1 339 1 43 1 58 1 349 1 250 1 
181 1 154 1 284 1 75 1 248 1 43 1 360 1 285 1 
181 1 154 1 75 1 339 1 43 1 360 1 349 1 250 1 107 1 
241 1 
0 1 142 1 280 1 88 1 268 1 221 1 335 1 
0 1 356 1 312 1 85 1 332 1 265 1 280 1 106 1 268 2 161 1 221 1 89 1 108 1 110 1 225 1 298 1 60 1 
0 8 332 4 196 1 54 2 335 1 102 2 298 4 60 6 154 3 251 2 300 1 253 1 159 2 106 4 16 2 108 4 208 3 173 2 23 2 312 5 356 5 260 2 176 1 75 3 220 2 268 8 221 2 317 2 180 1 30 6 181 3 79 6 123 2 365 8 124 1 225 12 226 2 367 1 37 2 371 2 39 3 85 5 280 9 190 1 89 3 373 2 46 2 284 1 138 1 92 2 139 2 374 2 142 1 93 1 
0 1 116 1 332 1 280 1 106 1 268 1 101 1 30 1 296 1 79 1 108 1 34 1 225 2 298 1 60 1 
0 2 357 1 356 1 74 1 332 1 220 1 178 1 292 1 77 1 317 1 226 2 298 1 85 1 280 2 106 1 189 1 205 1 137 1 165 1 67 1 108 1 374 2 141 1 170 1 52 1 309 1 174 1 330 1 
0 1 108 1 332 1 142 1 280 1 298 1 106 1 268 1 221 1 335 1 
0 5 220 1 280 5 268 5 317 2 30 5 373 2 79 5 46 1 92 2 139 2 374 2 225 10 226 2 60 5 
356 1 312 1 85 1 268 1 221 1 89 1 
114 1 0 2 312 4 356 3 176 1 332 2 75 4 98 1 196 2 54 1 334 1 181 4 365 1 298 1 185 1 37 1 153 1 154 4 85 3 62 1 253 2 280 2 106 2 16 2 89 2 166 1 108 2 284 2 208 1 
74 2 75 1 118 1 178 2 54 1 31 1 181 1 271 2 7 1 297 1 364 1 365 1 150 1 201 1 37 1 154 1 105 1 321 1 14 1 159 1 165 3 283 1 67 2 284 1 47 1 68 1 208 1 169 1 141 1 211 1 170 3 330 2 
0 1 332 1 268 3 221 1 30 2 79 2 337 1 225 4 226 1 298 1 60 2 253 1 280 2 106 1 16 1 108 1 
12 1 375 1 288 1 
341 1 246 1 12 1 51 1 288 1 
12 1 375 1 288 1 
12 1 375 1 288 1 
203 1 12 1 288 1 
203 1 12 1 288 1 
203 1 12 1 288 1 
12 1 288 1 
94 1 70 1 
116 1 101 1 317 1 179 3 31 4 56 2 296 1 271 2 337 1 7 1 34 1 297 7 321 1 137 1 163 2 350 1 305 1 47 1 374 1 211 1 52 1 376 1 174 1 
289 1 116 1 101 1 317 1 179 5 31 5 56 3 296 2 271 4 337 1 7 2 297 10 34 1 321 2 163 2 137 1 350 1 323 1 305 1 47 2 92 1 139 1 374 2 209 1 211 2 52 1 376 1 174 1 
289 1 116 1 218 1 101 1 179 8 317 3 31 10 56 4 296 1 271 6 337 1 7 3 34 1 297 18 252 1 321 3 278 1 137 1 163 3 350 1 373 2 90 1 305 1 47 3 92 2 139 2 374 3 209 1 354 1 211 3 52 1 376 1 174 1 
289 2 116 1 218 1 101 1 179 9 317 2 31 7 56 5 296 1 271 6 337 1 7 3 34 1 297 16 252 1 278 1 321 3 137 1 163 3 350 1 373 1 90 1 305 1 47 3 92 2 139 2 374 3 209 1 211 3 354 1 52 1 376 1 174 1 
116 1 101 1 317 1 179 3 31 4 56 2 296 1 271 2 337 1 7 1 34 1 297 7 321 1 137 1 163 2 350 1 305 1 47 1 374 1 211 1 52 1 376 1 174 1 
289 1 116 1 218 1 101 1 179 6 317 2 31 6 56 2 296 1 271 2 7 1 34 1 297 12 252 1 321 1 163 1 350 1 373 2 90 1 47 1 92 2 139 2 374 2 211 1 354 1 
289 2 116 1 218 1 101 1 179 9 317 2 31 8 56 5 296 1 271 8 337 1 7 4 297 17 34 1 252 1 321 4 278 2 137 1 163 3 350 1 90 1 373 1 305 1 47 4 92 2 139 2 374 3 209 1 354 1 211 4 52 1 376 1 174 1 
289 3 116 1 218 1 147 1 101 1 179 9 317 2 31 7 56 6 296 1 271 8 7 4 297 16 34 1 252 1 321 4 278 2 163 3 350 1 90 1 373 2 47 4 92 3 139 3 374 3 354 1 211 4 
289 3 317 1 137 3 163 3 179 3 31 4 56 6 305 1 297 7 374 1 52 3 376 2 174 1 
289 1 116 1 218 1 147 1 101 1 179 9 317 2 31 8 56 4 296 1 271 8 337 1 7 4 297 17 34 1 252 1 321 4 278 2 137 1 163 3 350 1 90 1 373 1 305 1 47 4 92 2 139 2 374 3 354 1 211 4 52 1 376 1 174 1 
289 1 321 2 278 1 317 1 179 3 163 2 137 1 31 4 56 3 271 4 305 1 337 1 7 2 297 7 47 2 374 1 211 2 52 1 376 1 174 1 
31 3 56 2 305 1 337 1 297 5 374 1 52 1 88 1 376 1 317 1 179 2 163 2 137 1 174 1 
289 1 321 1 163 1 317 1 179 2 31 2 373 1 56 2 271 2 7 1 47 1 297 4 92 1 139 1 374 1 209 1 211 1 
31 1 296 1 116 1 34 1 297 2 179 1 
289 4 77 1 293 1 317 5 179 12 31 12 56 8 296 2 271 2 337 1 7 1 34 2 297 24 229 1 278 1 321 1 163 4 137 2 323 1 373 2 305 1 47 1 374 5 139 2 92 2 211 1 52 2 376 1 174 2 
31 1 296 1 297 1 
297 1 34 1 179 1 
289 1 321 1 179 3 317 1 163 2 31 3 373 1 56 3 271 2 7 1 46 1 47 1 297 6 92 1 139 1 374 1 209 1 211 1 
289 1 116 1 218 1 101 1 179 6 317 2 31 6 56 2 296 1 271 2 7 1 34 1 297 12 252 1 321 1 163 1 350 1 373 2 90 1 47 1 92 2 139 2 374 2 211 1 354 1 
289 1 179 3 317 1 137 1 163 1 31 3 56 2 297 6 374 1 52 1 174 1 
289 1 278 1 321 1 99 1 179 1 163 1 137 1 31 2 56 2 271 2 305 1 7 1 297 3 47 1 211 1 52 1 376 1 
289 2 321 1 77 1 137 2 163 3 179 5 317 2 350 1 31 5 56 5 271 2 7 1 47 1 297 10 374 2 211 1 52 2 174 1 
289 1 321 1 179 2 350 1 56 1 271 2 7 1 47 1 297 2 139 1 374 1 211 1 
289 1 321 1 163 1 317 1 179 2 350 1 31 2 373 1 56 2 271 2 7 1 47 1 297 4 92 1 139 1 374 1 211 1 
289 1 278 1 321 3 99 1 147 1 137 1 163 1 179 1 350 1 31 2 56 2 271 6 7 3 297 3 47 3 211 3 52 1 
239 1 289 5 116 1 99 1 147 1 179 15 317 5 31 18 56 12 296 4 271 10 337 1 7 5 297 33 34 3 230 1 128 1 278 2 321 5 137 3 163 7 350 1 323 1 373 3 305 1 47 5 92 3 139 3 374 5 209 1 211 5 52 3 376 1 174 2 
165 1 96 1 299 1 204 1 178 1 170 1 201 1 
202 1 299 1 96 1 204 1 87 1 178 1 254 1 160 1 120 1 165 1 170 1 201 1 
181 1 154 1 284 1 365 1 98 1 75 1 208 1 54 1 334 1 88 1 37 1 
154 1 75 1 118 1 178 1 54 1 159 1 351 1 181 1 165 2 67 1 284 1 365 1 169 1 208 1 170 2 201 1 37 1 330 1 
118 1 75 1 196 1 54 1 178 2 267 1 181 1 365 3 124 1 367 1 201 1 37 2 127 1 154 1 276 1 159 2 205 2 351 1 165 2 67 2 208 1 169 1 170 2 330 1 
73 1 75 1 196 1 54 1 178 2 267 1 181 1 365 3 124 1 367 1 201 1 37 2 127 1 154 1 276 1 159 2 205 2 351 1 165 2 67 2 208 1 169 1 170 2 330 1 
356 1 74 1 75 1 196 1 178 1 292 1 268 1 221 1 181 1 365 1 11 1 39 1 154 1 85 1 189 1 205 1 165 1 67 1 141 1 170 1 309 1 330 1 
312 1 23 1 356 2 74 1 260 1 75 1 196 1 178 1 54 1 292 1 268 1 221 1 181 1 365 4 124 1 367 1 37 1 39 1 154 1 85 2 189 1 159 1 205 1 165 1 67 1 208 1 141 1 170 1 309 1 173 1 330 1 
181 1 154 1 75 1 208 1 156 1 54 1 
154 7 144 1 314 1 215 1 300 1 132 1 75 7 156 1 54 2 159 1 181 6 19 1 284 2 339 1 138 1 365 3 208 3 36 1 237 1 368 1 37 2 
75 1 118 1 54 1 178 1 317 1 179 2 31 3 181 1 56 2 318 1 271 4 337 1 7 2 297 5 365 1 150 2 201 1 37 1 154 1 105 2 321 2 300 1 63 1 159 1 14 1 163 2 137 1 256 1 351 1 165 2 305 1 67 1 109 1 168 1 47 2 169 1 208 1 68 1 374 1 235 1 170 2 211 2 52 1 376 1 174 1 330 1 
0 1 356 3 23 1 312 2 260 1 176 1 332 2 75 1 268 1 221 1 335 1 181 1 123 1 365 2 298 2 371 1 39 1 154 1 251 1 342 1 85 3 280 1 106 2 89 1 108 2 284 1 142 1 173 1 
154 2 300 1 75 2 156 1 54 1 159 1 181 2 138 1 365 2 208 2 93 1 173 1 37 1 
154 4 300 1 315 1 75 4 98 1 54 1 334 1 181 4 258 1 284 1 365 1 208 1 37 1 
154 2 314 1 215 1 41 1 75 2 196 1 54 1 159 1 206 1 181 2 365 1 208 2 22 1 37 1 
95 1 181 1 154 1 32 1 284 1 75 1 208 1 54 1 228 1 361 1 
181 2 154 2 300 1 365 1 132 1 339 1 75 2 208 1 54 1 37 1 38 1 
154 5 144 1 300 1 315 1 98 1 75 5 132 1 196 1 54 2 334 1 181 4 284 1 365 3 208 2 368 1 37 2 
154 5 300 1 315 1 98 1 75 5 132 1 196 1 54 2 334 1 181 4 284 1 365 3 208 2 368 1 212 1 37 2 
154 1 73 1 75 1 178 1 54 1 159 1 351 1 181 1 165 2 67 1 284 1 365 1 169 1 208 1 170 2 201 1 37 1 330 1 
154 1 314 1 215 1 75 1 196 1 54 1 159 1 181 1 138 1 365 1 208 2 36 1 37 1 
313 1 344 1 207 1 15 1 201 1 
356 2 313 2 342 1 260 1 276 1 85 2 344 2 263 1 266 1 15 1 205 1 268 1 221 1 122 1 149 1 247 1 207 2 201 1 127 1 
165 1 372 1 199 1 313 1 207 1 178 1 146 1 170 1 15 1 
122 1 247 1 15 1 
3 1 2 1 281 1 88 1 
3 1 2 1 125 1 133 1 281 1 126 1 316 1 
210 1 353 1 126 1 
3 1 277 1 2 1 177 1 133 1 134 2 281 1 316 3 308 1 125 1 233 1 126 3 
3 1 2 1 86 1 125 1 133 1 281 1 126 2 316 2 172 1 
95 1 277 1 3 1 133 1 316 1 361 1 64 1 167 1 223 1 125 1 126 1 
3 1 277 1 125 1 133 1 281 1 126 1 316 1 
2 1 277 1 125 1 133 1 281 2 126 1 316 1 
155 1 3 1 277 1 133 2 281 1 119 1 316 2 295 1 125 2 126 2 
2 1 277 1 3 2 133 1 281 1 333 1 316 3 103 1 223 1 125 1 238 1 126 3 172 2 
95 1 24 1 3 1 2 1 277 1 133 1 281 1 316 2 361 2 32 1 319 1 167 1 125 1 126 2 172 1 
2 1 277 1 3 2 86 1 133 2 281 1 333 1 316 4 223 1 125 2 61 1 126 4 172 2 
3 1 2 1 277 1 125 1 133 1 281 1 126 1 316 1 
2 2 3 3 177 1 133 1 134 1 281 2 333 1 316 4 306 1 223 1 233 1 125 1 126 4 172 2 
115 1 213 1 277 1 97 1 2 1 133 1 281 1 316 1 306 1 125 1 126 1 
3 1 277 1 2 1 177 2 133 1 134 2 281 1 316 3 57 1 233 1 125 1 126 3 
65 1 192 2 3 2 279 1 
331 1 277 1 125 1 133 1 126 1 316 1 
103 1 3 1 2 1 277 1 125 1 133 1 281 1 126 2 316 2 172 1 
347 1 
3 1 2 1 277 1 125 1 133 1 281 1 126 1 316 1 
277 1 2 1 3 1 133 1 134 1 281 1 316 3 103 1 125 1 126 3 172 1 
306 1 223 1 3 1 333 1 
3 1 281 1 

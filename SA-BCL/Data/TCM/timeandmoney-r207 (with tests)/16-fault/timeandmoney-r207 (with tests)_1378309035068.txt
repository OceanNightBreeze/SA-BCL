#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 107 (175,253) (175,253) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 107 (175,253) (175,253) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 107 (175,253) (175,253) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 107 (175,253) (175,253) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
68 1 314 1 37 1 100 1 115 1 175 1 253 1 237 1 239 1 247 1 316 1 272 1 107 1 
68 1 314 1 37 1 100 1 115 1 175 1 253 1 237 1 239 1 247 1 316 1 272 1 107 1 
68 1 314 1 37 1 100 1 115 1 175 1 253 1 237 1 239 1 247 1 316 1 272 1 107 1 
68 1 314 1 37 1 100 1 115 1 175 1 253 1 237 1 239 1 247 1 316 1 272 1 107 1 
68 1 37 4 115 1 109 2 272 1 316 4 338 3 157 2 43 1 352 3 85 1 276 1 123 1 176 1 237 1 239 1 107 1 215 1 
68 1 314 1 37 2 115 1 28 1 338 1 272 1 316 2 40 1 377 1 43 1 100 1 123 1 112 1 237 1 107 1 
68 2 360 1 314 1 115 2 316 9 272 1 338 5 203 1 276 1 123 1 176 3 107 1 35 1 37 9 109 4 157 2 43 1 352 7 85 1 89 1 237 1 239 1 284 1 215 1 
68 2 360 1 314 1 115 2 316 9 272 1 338 5 203 1 276 1 123 1 176 3 107 1 35 1 37 9 109 4 157 2 43 1 352 7 85 1 89 1 237 1 239 1 284 1 215 1 
68 2 360 1 314 1 37 3 115 2 109 1 272 1 316 3 338 2 43 1 352 1 123 1 176 1 
149 1 330 1 188 1 
257 2 149 1 357 1 
114 2 282 2 323 1 230 2 293 1 232 2 113 2 370 2 
290 2 114 2 335 1 166 1 293 1 294 1 29 1 169 1 220 1 7 2 173 1 148 2 274 1 77 2 252 1 277 1 11 1 106 1 226 1 370 2 279 1 228 1 323 1 230 3 310 1 232 2 82 1 187 1 133 1 134 1 235 2 87 1 282 3 213 1 263 1 113 2 194 1 
114 1 282 1 249 1 9 1 323 1 230 1 232 1 113 1 287 1 370 1 
255 1 373 1 230 1 232 1 60 1 74 1 83 1 282 1 149 1 249 1 330 1 24 1 65 1 331 1 
114 1 255 1 373 1 230 1 232 1 60 1 74 1 282 1 149 1 249 1 330 1 331 2 113 1 65 2 370 1 
311 1 117 1 331 1 65 1 127 1 
149 1 330 1 117 1 368 1 331 2 65 2 47 1 127 1 
331 1 65 1 127 1 
114 1 323 1 117 1 230 1 232 1 282 1 249 1 9 1 65 1 331 1 113 1 179 1 287 1 370 1 
149 1 
114 1 323 1 230 1 117 1 232 1 246 1 282 1 249 1 149 1 9 1 330 1 368 1 113 1 65 2 331 2 287 1 179 1 370 1 127 1 
333 1 321 2 198 2 117 2 130 1 121 1 146 1 48 1 8 1 149 1 236 1 330 1 368 1 306 1 193 1 65 5 331 5 44 2 127 2 
293 1 188 1 
114 1 197 1 230 2 293 2 232 2 110 1 282 2 113 1 370 1 
50 1 93 1 180 1 
290 1 267 1 335 1 230 1 293 1 294 1 29 1 169 1 133 1 134 1 282 1 148 1 274 1 77 1 11 1 194 1 
290 1 335 1 230 2 294 1 29 1 232 1 169 1 30 1 133 1 134 1 50 1 282 2 274 1 148 1 77 1 11 1 113 1 194 1 181 1 370 1 
36 1 114 1 197 1 230 5 293 1 232 5 30 2 282 5 304 1 24 1 113 4 195 1 370 4 181 1 
282 2 249 1 9 1 230 2 232 2 113 2 132 1 370 2 
114 1 282 3 230 3 293 1 232 3 113 3 30 1 370 3 
282 1 249 1 9 1 230 1 232 1 113 1 370 1 
114 1 197 1 282 1 249 1 230 1 232 1 113 1 110 1 370 1 
290 1 114 2 197 1 335 1 166 1 293 1 294 1 29 1 169 1 30 1 74 1 220 1 7 2 274 1 148 1 249 1 77 1 11 1 106 1 370 3 181 1 255 1 228 1 152 1 373 1 323 1 310 1 230 4 232 3 60 1 82 1 187 1 133 1 134 1 235 1 87 1 282 4 136 1 213 1 263 1 113 3 65 1 331 1 194 1 
282 2 230 2 293 1 232 2 24 1 113 1 195 1 30 1 370 1 
114 1 255 1 197 1 152 1 373 1 230 3 232 3 80 1 60 1 74 1 30 2 282 3 149 1 249 1 331 1 65 1 113 3 181 1 370 3 
114 1 197 1 230 2 232 2 30 1 50 1 282 2 113 2 180 1 370 2 
290 1 335 1 230 1 293 1 294 1 29 1 169 1 133 1 134 1 282 1 148 1 274 1 77 1 11 1 194 1 
290 1 230 1 293 1 294 1 184 1 29 1 169 1 133 1 134 1 282 1 148 1 274 1 77 1 191 1 194 1 
243 1 166 1 336 1 200 1 220 1 50 2 7 2 205 1 277 2 223 1 106 1 305 1 180 2 324 1 18 1 326 1 187 1 82 2 235 4 87 1 263 1 91 1 358 1 93 2 
282 1 249 1 230 1 232 1 60 1 113 1 132 1 370 1 
280 1 15 1 
280 1 15 1 
234 1 340 1 
234 1 340 1 
234 1 340 1 
280 1 206 1 15 1 
353 1 280 1 15 1 
234 1 280 2 88 1 340 1 32 1 15 2 
280 1 206 1 15 1 
280 1 206 1 15 1 
280 1 15 1 53 1 
280 1 15 1 53 1 
280 1 15 1 53 1 
372 1 280 1 308 1 72 1 230 2 15 1 293 1 232 2 273 1 299 1 42 1 256 1 353 1 339 1 282 2 52 1 381 1 367 1 192 1 65 1 331 1 113 2 95 1 370 2 
244 1 280 2 1 1 72 2 322 1 15 2 295 1 168 2 17 1 256 2 339 2 32 1 149 1 52 3 381 2 192 1 254 1 65 2 331 2 
237 1 239 1 107 1 
28 1 237 1 107 1 
219 1 3 1 28 1 131 1 237 3 239 2 
3 1 28 1 131 1 237 2 239 1 67 1 
3 2 28 1 131 1 237 2 239 1 
333 2 243 1 142 1 198 1 117 4 200 1 299 1 146 1 147 2 149 2 101 1 222 1 367 1 223 1 368 1 319 2 306 3 127 1 321 1 308 1 326 1 257 3 189 1 135 1 161 1 380 1 330 1 357 1 313 2 331 5 65 5 44 1 
289 1 333 6 165 1 243 3 2 1 198 2 117 7 297 1 200 3 146 1 48 1 147 6 149 5 101 3 223 3 368 1 319 6 306 8 127 6 321 2 308 4 346 1 326 3 41 5 257 9 189 2 311 5 135 2 330 1 380 1 357 3 92 1 331 9 65 9 44 2 
333 2 243 1 198 1 117 2 200 1 48 1 147 2 149 3 222 1 101 1 223 1 306 3 319 2 321 1 308 1 326 1 189 1 257 4 135 1 161 1 330 1 357 2 313 1 331 3 65 3 44 1 
289 1 333 4 165 1 243 2 198 1 117 3 200 2 48 1 147 4 149 4 222 1 101 2 223 2 319 4 306 5 321 1 308 2 326 2 257 7 189 1 135 1 161 1 330 1 357 3 92 1 313 2 331 4 65 4 44 1 
133 1 71 1 188 1 
133 1 275 1 
55 1 
133 1 169 1 194 1 
133 1 108 1 
133 1 169 1 
133 3 354 1 71 2 169 1 194 1 332 1 
182 1 243 1 183 1 139 1 129 2 4 1 376 1 82 3 327 1 235 7 261 1 379 1 341 1 223 1 91 3 277 4 305 2 
182 1 243 1 183 1 139 1 129 2 4 1 376 1 82 3 327 1 235 7 261 1 379 1 341 1 223 1 91 3 277 4 305 2 
182 1 243 1 183 1 139 1 129 2 4 1 376 1 46 1 82 3 327 1 235 7 261 1 379 1 341 1 223 1 91 3 277 4 305 2 
182 1 278 1 199 1 129 1 57 1 212 1 82 2 235 4 6 1 341 2 103 1 277 2 163 1 
243 1 139 1 166 1 4 1 220 1 7 2 317 1 341 1 277 3 223 1 305 2 307 1 182 1 183 1 56 1 129 1 376 1 82 2 327 1 235 5 87 1 263 1 91 3 
290 1 68 1 314 1 73 1 245 1 115 1 116 1 28 1 29 1 338 1 316 2 272 1 219 1 148 1 77 1 123 1 107 1 125 1 37 2 309 1 39 1 231 1 81 1 43 1 352 1 134 1 238 1 237 2 239 1 265 1 
290 1 68 1 314 1 245 1 115 1 116 1 28 1 29 1 338 1 316 3 219 1 148 1 77 1 123 1 107 1 125 1 37 3 309 1 39 1 374 1 58 1 81 1 43 1 352 2 134 1 262 1 238 1 237 2 239 1 265 1 
290 1 314 1 245 1 116 1 28 1 29 1 338 1 316 2 219 1 148 1 77 1 123 1 125 1 107 1 37 2 309 1 374 1 81 1 43 1 352 2 134 1 262 1 237 2 239 1 265 1 
290 1 68 1 314 2 245 2 115 1 268 1 294 1 296 1 29 1 167 1 316 1 169 1 148 1 77 1 125 2 37 1 325 1 58 1 81 2 133 1 134 1 62 1 22 1 
290 1 68 1 314 1 73 1 245 1 115 1 116 1 28 1 29 1 316 1 272 1 219 1 148 1 77 1 107 1 125 1 37 1 309 1 39 1 81 1 134 1 262 1 238 1 237 2 239 1 265 1 
160 1 
333 2 290 2 140 1 141 1 198 1 294 2 146 1 148 2 51 1 250 1 249 1 102 1 343 1 306 2 255 1 12 1 13 1 60 1 257 1 22 1 357 1 164 1 214 1 65 4 24 1 69 1 217 1 269 1 29 1 167 1 169 1 74 1 171 1 174 1 77 2 368 2 369 1 127 4 321 1 373 1 230 1 232 1 233 1 189 1 133 1 83 1 134 1 282 1 331 4 288 1 44 1 138 3 241 1 
255 1 140 1 141 1 373 1 13 1 230 1 232 1 246 1 60 1 74 1 83 1 282 1 51 1 249 1 250 1 102 1 368 1 65 3 331 3 24 1 127 2 138 2 
140 1 141 1 269 1 246 1 74 1 51 1 250 1 249 1 149 1 368 1 127 1 255 1 373 1 13 1 230 1 232 1 60 1 83 1 282 1 330 1 24 1 331 3 65 3 138 3 
255 1 140 1 141 1 373 1 13 1 230 1 269 1 232 1 246 1 60 1 74 1 83 1 282 1 174 1 51 1 249 1 250 1 102 1 368 1 65 3 331 3 24 1 127 2 138 3 
333 1 140 1 141 1 198 1 246 1 146 1 51 1 149 1 249 2 250 1 9 1 102 4 306 1 255 1 13 1 155 1 60 1 159 1 357 2 164 1 113 1 65 5 24 1 214 1 66 1 114 1 69 2 217 2 269 2 74 1 172 1 174 4 368 3 179 1 369 2 370 1 127 7 321 1 373 1 323 1 230 2 375 1 232 2 233 2 83 1 282 2 330 1 331 5 287 1 138 4 44 1 
333 1 69 2 217 2 140 1 141 1 198 1 269 2 74 1 146 1 174 2 51 1 149 2 250 1 249 1 102 2 368 2 343 1 306 1 369 2 127 4 321 1 255 1 373 1 13 1 230 1 232 1 233 2 60 1 257 2 83 1 282 1 330 1 357 2 164 1 214 1 331 4 65 4 24 1 44 1 138 4 
333 1 69 2 217 2 140 1 141 1 198 1 269 2 74 1 146 1 172 1 174 2 51 1 149 1 250 1 249 1 102 2 368 2 306 1 369 2 127 4 255 1 321 1 373 1 13 1 230 1 232 1 233 2 60 1 83 1 159 1 282 1 330 1 357 2 164 1 214 1 24 1 331 4 65 4 66 1 138 4 44 1 
333 1 69 2 217 2 140 1 141 1 198 1 269 2 74 1 146 1 172 1 174 2 51 1 149 1 250 1 249 1 102 2 368 2 306 1 369 2 127 4 255 1 321 1 373 1 13 1 230 1 232 1 233 2 60 1 83 1 159 1 282 1 330 1 357 2 164 1 214 1 24 1 331 4 65 4 66 1 138 4 44 1 
333 1 140 1 141 1 198 1 269 2 143 1 145 2 74 1 146 1 174 2 51 1 149 1 250 1 249 1 102 2 368 2 207 2 306 1 369 2 127 4 255 1 321 1 373 1 13 1 230 1 347 1 232 1 233 2 60 1 211 1 257 2 83 1 282 1 330 1 214 1 24 1 331 4 65 4 66 1 138 4 44 1 
333 1 69 2 217 2 140 1 141 1 198 1 269 3 74 1 146 1 172 1 51 1 174 3 149 1 250 1 249 1 102 3 368 2 306 1 369 2 127 5 321 1 255 1 373 1 13 1 230 1 232 1 155 1 233 2 60 1 159 1 83 1 282 1 330 1 357 2 164 1 214 1 24 1 331 4 65 4 66 1 44 1 138 5 
333 1 69 2 217 2 140 1 141 1 198 1 269 3 74 1 146 1 172 1 51 1 174 3 149 1 250 1 249 1 102 3 368 2 306 1 369 2 127 5 321 1 255 1 373 1 13 1 230 1 232 1 155 1 233 2 60 1 159 1 83 1 282 1 330 1 357 2 164 1 214 1 24 1 331 4 65 4 66 1 44 1 138 5 
333 1 140 1 141 1 198 1 145 2 146 1 51 1 249 1 250 1 149 1 102 2 207 2 306 1 343 1 255 1 13 1 60 1 211 1 257 2 24 1 65 4 214 1 269 2 74 1 174 2 368 2 369 2 127 4 321 1 373 1 230 1 232 1 233 2 83 1 282 1 330 1 331 4 138 4 44 1 
243 1 166 1 293 2 4 1 220 1 50 1 7 2 277 3 223 1 106 1 305 2 180 1 183 1 129 1 376 1 18 1 327 1 188 1 187 1 82 3 235 6 87 1 379 1 263 1 91 2 93 1 
0 2 243 4 139 2 166 2 293 1 200 2 301 1 220 2 50 16 7 4 6 4 101 4 318 1 103 4 277 13 223 2 305 2 106 1 225 1 180 6 279 1 228 1 229 1 57 1 378 2 326 4 82 9 187 2 235 22 87 2 263 2 91 4 93 16 
290 1 335 1 267 1 166 1 293 1 294 1 29 1 169 1 30 1 220 1 75 1 7 2 274 1 148 1 77 1 318 1 277 1 11 1 106 1 180 1 370 1 181 1 279 1 228 1 230 2 232 1 158 1 187 1 82 1 133 1 134 1 235 2 87 1 282 2 260 1 263 1 113 1 194 1 
290 3 243 3 139 4 291 2 335 2 293 2 294 1 4 1 200 2 204 2 50 7 7 6 148 3 101 2 11 2 305 4 106 3 310 2 258 2 262 1 263 3 113 1 25 1 361 2 166 3 29 2 169 2 30 1 220 3 274 2 77 3 318 1 223 3 277 10 180 7 181 1 370 1 279 1 183 1 228 1 129 1 38 1 230 3 232 1 376 1 326 2 327 1 82 10 187 3 133 2 134 2 329 1 235 20 282 3 87 3 379 1 91 8 93 7 194 2 
290 7 166 2 294 2 29 2 271 1 167 1 337 1 169 2 30 1 220 2 7 4 148 8 173 2 77 8 342 1 33 1 277 1 106 2 370 1 279 1 228 1 230 1 231 1 185 1 232 1 349 1 351 1 18 1 187 2 82 1 133 3 134 2 235 2 282 1 87 2 262 1 22 1 263 2 113 1 
114 1 197 1 243 1 97 1 166 1 200 1 220 1 50 1 7 2 101 1 318 1 277 1 223 1 305 1 106 1 180 1 370 1 230 1 232 1 326 1 187 1 82 2 235 3 87 1 282 1 263 1 91 1 93 1 113 1 
243 1 139 1 166 1 18 1 326 1 187 1 220 1 50 1 235 2 87 1 7 2 205 1 263 1 91 1 277 2 93 1 106 1 180 1 
324 1 166 1 200 1 18 1 187 1 82 2 220 1 50 1 235 2 87 1 7 2 263 1 91 1 223 1 305 1 93 1 106 1 180 1 
243 1 139 1 166 1 200 1 18 1 326 1 82 2 187 1 220 1 50 2 235 4 87 1 7 2 101 1 263 1 223 1 91 2 277 2 305 1 93 2 106 1 180 2 
243 1 139 1 166 1 326 1 187 1 220 1 50 1 235 2 87 1 7 2 205 1 342 1 263 1 91 1 277 2 93 1 106 1 180 1 
324 1 166 1 200 1 187 1 82 2 220 1 50 1 235 2 87 1 7 2 342 1 263 1 91 1 223 1 305 1 93 1 106 1 180 1 
243 1 139 1 166 1 200 1 326 1 82 2 187 1 220 1 50 2 235 4 87 1 7 2 342 1 101 1 263 1 223 1 91 2 277 2 305 1 93 2 106 1 180 2 
243 1 139 1 166 1 200 1 326 1 82 2 187 1 220 1 50 2 235 4 87 1 7 2 101 1 263 1 223 1 91 2 277 2 305 1 93 2 106 1 180 2 
290 1 335 1 166 1 293 1 294 1 29 1 169 1 220 1 7 2 274 1 148 1 77 1 277 1 11 1 106 1 279 1 228 1 310 1 230 1 187 1 82 1 133 1 134 1 235 2 282 1 87 1 263 1 194 1 
290 1 166 1 293 1 294 1 29 1 270 1 169 1 220 1 7 2 274 1 148 1 77 1 277 1 106 1 279 1 228 1 230 1 184 1 187 1 82 1 133 1 134 1 235 2 282 1 87 1 191 1 263 1 194 1 
243 1 139 1 166 1 200 1 326 1 82 2 187 1 220 1 50 2 235 4 87 1 7 2 101 1 318 1 263 1 223 1 91 2 277 2 305 1 93 2 106 1 180 2 
290 1 243 1 139 1 291 1 335 1 166 1 29 1 200 1 169 1 220 1 50 2 7 2 274 1 148 1 77 1 101 1 223 1 277 2 11 1 305 1 106 1 180 2 310 1 230 1 231 1 326 1 82 2 187 1 133 1 134 1 235 4 282 1 87 1 263 1 91 2 93 2 194 1 
114 1 197 1 243 1 139 1 166 1 200 1 220 1 99 1 50 1 7 2 101 1 318 1 223 1 277 2 106 1 180 1 370 1 230 1 232 1 326 1 82 1 187 1 235 3 87 1 282 1 263 1 91 1 113 1 93 1 
0 1 243 5 139 4 166 2 144 1 200 4 220 2 7 4 6 4 101 5 103 4 223 4 277 19 105 1 124 1 305 2 320 1 307 1 126 1 78 1 128 1 57 3 378 1 210 1 326 5 212 2 82 17 328 3 235 36 87 2 283 1 355 1 263 2 91 6 23 1 137 1 264 1 96 2 
243 3 139 2 166 2 144 1 200 3 220 2 7 4 6 2 101 3 103 2 223 3 277 12 105 1 124 1 305 1 320 1 307 1 126 1 78 1 57 2 210 1 326 3 212 2 82 12 328 2 235 24 87 2 283 1 355 1 263 2 91 3 23 1 137 1 264 1 96 1 
243 3 139 2 166 1 144 1 200 3 220 1 7 2 6 2 101 3 103 2 223 3 277 12 105 1 305 2 320 1 307 1 126 1 78 1 57 2 210 1 326 3 212 2 82 12 328 2 235 24 87 1 283 1 355 1 263 1 91 4 23 1 137 1 264 1 96 1 
243 3 139 2 166 2 144 1 200 3 220 2 7 4 6 2 101 3 103 2 223 3 277 12 105 1 124 1 305 1 320 1 307 1 126 1 78 1 153 1 57 2 210 1 326 3 212 2 82 12 328 2 235 24 87 2 283 1 263 2 91 3 23 1 137 1 264 1 96 1 
0 2 243 6 139 3 166 1 144 1 200 5 220 1 7 2 6 4 101 6 103 4 277 20 223 5 105 1 305 3 320 1 307 1 126 1 78 1 57 2 210 1 378 2 326 6 212 2 82 18 328 2 235 38 87 1 283 1 355 1 263 1 91 6 23 1 137 1 264 2 96 2 
280 1 72 1 154 1 15 1 202 1 256 1 49 1 339 1 31 1 381 1 
353 1 42 1 
218 1 364 1 280 1 339 1 72 1 15 1 381 1 94 1 256 1 
266 1 206 1 
88 1 366 1 53 1 
244 1 280 1 72 1 322 1 15 1 295 1 168 1 17 1 256 1 339 1 32 1 149 1 52 2 381 1 192 1 254 1 65 1 331 1 
244 1 280 1 72 1 322 1 15 1 295 1 168 1 17 1 256 1 339 1 32 1 149 1 52 2 381 1 192 1 254 1 65 1 331 1 
244 1 280 1 72 1 322 1 15 1 295 1 168 1 17 1 256 1 339 1 32 1 149 1 52 2 381 1 192 1 254 1 65 1 331 1 
266 1 88 1 206 1 
266 1 88 1 206 1 
366 1 53 1 
88 1 366 1 53 1 
273 1 95 1 
72 1 117 1 293 1 168 1 299 1 273 1 339 1 52 1 367 1 344 1 370 2 372 1 280 1 308 1 322 1 230 2 15 1 232 2 256 1 42 1 353 1 282 2 381 1 331 1 65 1 113 2 95 1 
334 1 290 2 45 1 166 1 29 1 271 1 337 1 169 1 220 1 7 2 148 2 248 1 173 2 303 1 77 2 318 1 277 1 106 1 279 1 228 1 230 2 232 2 187 1 82 1 133 1 134 1 20 1 235 2 87 1 282 2 263 1 
290 2 28 1 309 1 39 1 231 1 29 1 118 1 81 1 219 1 122 1 134 1 86 1 148 2 77 2 262 1 237 2 239 1 107 1 265 1 
290 1 28 1 309 1 39 1 118 1 29 1 81 1 219 1 134 1 148 1 77 1 262 1 237 2 239 1 107 1 265 1 26 1 
290 1 294 1 29 1 167 1 169 1 81 1 133 1 134 1 62 1 86 1 148 1 251 1 77 1 22 1 
290 1 28 1 309 1 39 1 118 1 29 1 81 1 219 1 122 1 134 1 86 1 148 1 77 1 262 1 237 2 239 1 107 1 265 1 
345 1 
333 1 8 1 149 1 330 1 306 1 193 1 188 1 
333 1 321 1 69 1 217 1 198 1 146 1 257 1 149 2 330 1 357 1 368 1 164 1 331 1 65 1 306 1 127 1 44 1 
290 3 333 8 243 2 198 4 294 1 298 1 201 2 200 2 146 4 147 6 8 1 148 3 149 8 101 2 306 9 108 2 209 2 257 12 354 1 357 6 65 5 361 2 71 2 29 3 169 3 74 2 171 1 221 2 275 3 77 3 368 3 223 2 224 2 319 6 178 2 127 5 371 2 321 4 227 2 281 2 231 1 79 1 326 2 186 1 189 2 133 10 134 4 190 1 330 2 193 1 286 1 331 5 194 3 44 4 
333 8 0 1 243 4 362 1 198 2 200 4 146 2 171 1 147 8 6 2 221 3 149 7 101 4 103 2 368 1 104 1 223 4 105 1 178 1 319 8 306 13 320 1 127 1 78 1 321 2 57 1 210 1 326 4 378 1 189 1 257 10 330 2 357 5 23 1 331 1 65 1 44 2 
333 1 114 1 243 1 198 1 4 1 146 1 317 1 221 2 249 1 9 1 223 1 178 1 306 2 179 1 370 1 321 1 323 1 230 1 232 1 376 1 159 1 282 1 331 1 65 1 113 1 287 1 44 1 
290 1 114 2 335 1 166 1 293 1 294 1 29 1 169 1 220 1 7 2 148 1 274 1 77 1 11 1 106 1 370 2 228 1 323 1 230 3 310 1 232 2 82 1 187 1 133 1 134 1 235 1 282 3 87 1 213 1 263 1 113 2 194 1 
333 2 321 1 198 1 129 1 146 1 257 4 189 1 171 1 147 2 149 4 330 2 357 2 319 2 306 1 44 1 
333 1 321 1 198 1 146 1 8 1 149 1 330 1 193 1 306 1 44 1 
333 5 243 2 361 1 200 2 326 2 257 10 147 5 221 2 149 5 101 2 357 5 223 2 178 1 319 5 306 5 
149 1 330 1 368 1 331 1 65 1 127 1 
290 4 333 2 198 2 294 2 119 1 29 1 298 1 167 1 169 1 146 1 171 2 48 1 148 4 77 4 368 2 306 2 127 4 321 2 12 1 186 2 133 1 189 2 134 1 22 1 65 3 331 3 196 1 288 1 44 2 
208 1 72 1 381 1 
72 1 154 1 381 1 162 1 273 1 
208 1 72 1 381 1 
208 1 72 1 381 1 
72 1 381 1 90 1 
72 1 381 1 90 1 
72 1 381 1 90 1 
72 1 381 1 
280 1 15 1 
243 1 139 2 166 1 4 1 220 1 7 2 317 1 277 3 223 1 305 2 183 1 376 1 327 1 212 1 82 3 235 6 87 1 263 1 91 4 
183 1 243 1 129 1 4 1 376 1 82 3 188 1 327 1 235 6 379 1 91 2 277 3 223 1 305 2 
243 1 139 1 166 1 200 1 326 1 82 2 220 1 235 4 87 1 7 2 101 1 263 1 223 1 91 2 277 2 305 1 54 1 
0 1 243 2 139 1 57 1 200 2 378 1 326 2 82 6 235 12 6 2 101 2 103 2 91 2 277 6 223 2 305 1 
243 3 0 1 139 2 4 1 200 2 6 2 317 1 101 2 103 2 223 3 277 8 305 3 225 1 183 1 376 1 326 2 378 1 82 8 212 1 327 1 235 16 91 5 
235 1 103 1 82 1 
235 1 6 1 277 1 
243 1 361 1 139 1 166 1 200 1 326 1 82 3 220 1 235 6 7 2 87 1 101 1 263 1 277 3 91 3 223 1 54 1 305 2 
0 1 243 4 139 2 166 1 200 4 220 1 6 2 7 2 101 4 103 2 277 11 223 4 105 1 305 2 320 1 307 1 78 1 57 1 210 1 326 4 378 1 82 11 235 22 87 1 263 1 91 4 23 1 
243 1 139 1 4 1 376 1 82 3 235 6 379 1 277 3 223 1 91 2 305 1 
235 1 199 1 212 1 82 1 
243 2 139 1 166 1 200 1 220 1 6 1 7 2 101 2 103 1 277 7 223 1 105 1 305 1 307 1 320 1 78 1 57 1 210 1 326 2 212 1 82 4 235 11 87 1 263 1 91 2 23 1 
243 2 139 1 166 2 200 1 220 2 7 4 6 1 101 2 103 1 277 7 223 1 105 1 54 1 305 1 307 1 320 1 78 1 57 1 210 1 326 2 212 1 82 4 235 11 87 2 263 2 91 2 23 1 
0 1 243 4 139 2 166 2 200 4 220 2 6 2 7 4 101 4 103 2 277 11 223 4 105 1 54 1 305 2 320 1 307 1 78 1 57 1 210 1 326 4 378 1 212 1 82 12 235 23 87 2 263 2 91 4 23 1 
0 1 243 4 139 2 166 2 200 3 220 2 6 2 7 4 101 4 103 2 277 12 223 3 105 1 54 1 305 2 320 1 307 1 78 1 57 1 210 1 326 4 378 1 212 1 82 9 235 21 87 2 263 2 91 4 23 1 
243 2 139 1 166 1 200 1 220 1 6 1 7 2 101 2 103 1 277 7 223 1 105 1 305 1 307 1 320 1 78 1 57 1 210 1 326 2 212 1 82 4 235 11 87 1 263 1 91 2 23 1 
0 1 243 4 139 2 166 1 200 4 220 1 6 2 7 2 101 4 103 2 277 11 223 4 105 1 305 2 320 1 307 1 78 1 57 1 210 1 326 4 378 1 82 11 235 22 87 1 263 1 91 4 23 1 
0 1 243 4 139 2 166 2 200 3 220 2 7 4 6 2 101 4 103 2 277 12 223 3 105 1 54 1 305 2 320 1 307 1 78 1 57 1 210 1 326 4 378 1 212 2 82 10 235 22 87 2 263 2 91 4 23 1 
0 1 243 1 166 2 200 1 220 2 7 4 6 1 101 1 103 2 277 3 223 1 124 1 305 1 307 1 57 1 210 1 326 1 82 4 235 7 87 2 263 2 91 1 
183 1 243 1 139 3 4 3 376 3 82 4 327 2 235 7 379 1 223 1 91 6 277 3 305 3 
0 1 243 1 166 2 200 1 220 2 7 4 6 1 101 1 103 2 277 3 223 1 124 1 305 1 307 1 57 1 210 1 326 1 82 4 235 7 87 2 263 2 91 1 
243 1 139 2 166 1 4 1 376 1 82 3 220 1 235 6 7 2 87 1 317 1 263 1 91 4 277 3 223 1 305 2 307 1 
220 1 235 2 243 1 139 1 7 2 87 1 166 1 263 1 91 1 277 2 326 1 307 1 
243 1 139 1 166 1 200 1 326 1 82 2 220 1 235 4 87 1 7 2 101 1 263 1 223 1 91 2 277 2 305 1 307 1 
139 1 199 1 166 2 4 1 376 1 212 1 82 2 220 2 235 3 87 2 7 4 263 2 91 2 277 1 124 1 305 1 307 1 
243 1 139 2 199 1 166 3 4 1 220 3 7 6 6 1 317 1 103 1 223 1 277 4 305 2 54 1 124 1 307 1 183 1 57 1 376 1 82 5 212 1 327 1 235 9 87 3 263 3 91 4 163 1 
282 1 21 1 230 1 293 1 232 1 24 1 195 1 
242 1 230 1 293 1 232 1 170 1 19 1 84 1 282 1 21 1 312 1 24 1 195 1 
133 1 290 1 134 1 148 1 77 1 22 1 294 1 29 1 167 1 169 1 188 1 
290 1 335 1 230 2 293 1 294 1 232 1 29 1 169 1 30 1 133 1 134 1 282 2 274 1 148 1 77 1 113 1 194 1 370 1 
290 1 335 1 293 1 29 1 201 1 169 2 30 1 148 1 274 1 249 2 77 1 108 1 370 1 255 1 14 1 230 1 232 1 60 1 186 1 133 3 134 1 282 1 113 1 194 2 
290 1 293 1 29 1 201 1 169 2 30 1 148 1 274 1 249 2 77 1 108 1 370 1 255 1 14 1 230 1 232 1 60 1 186 1 133 3 134 1 282 1 191 1 113 1 194 2 
290 3 71 1 294 1 120 1 29 1 201 1 169 1 74 1 148 3 275 1 149 1 77 3 108 1 127 1 16 1 156 1 186 1 133 4 134 1 330 1 331 2 65 2 194 1 
290 3 371 1 71 1 294 1 120 1 29 1 201 1 169 1 74 1 186 1 133 4 134 1 148 3 149 1 275 1 330 1 77 3 65 2 331 2 194 1 108 1 127 1 
290 1 134 1 148 1 77 1 29 1 349 1 
290 6 231 1 294 2 185 1 29 2 349 1 351 1 337 1 59 1 169 2 61 1 133 3 134 3 354 1 173 1 148 7 77 7 262 1 33 1 285 1 194 1 
290 1 243 1 291 1 335 1 166 2 293 2 29 1 4 1 169 1 30 1 220 2 50 1 7 4 274 1 148 1 77 1 318 1 223 1 277 3 11 1 305 2 106 2 180 1 370 1 183 1 129 1 230 2 310 1 231 1 232 1 376 1 82 3 327 1 187 2 133 1 134 1 20 1 235 6 258 1 87 2 282 2 379 1 263 2 91 2 93 1 113 1 194 1 
333 1 290 1 71 1 198 2 117 1 294 1 298 1 74 1 146 2 8 1 148 1 149 1 275 1 77 1 368 1 306 1 224 1 127 2 371 1 321 2 209 1 281 1 133 2 330 1 193 1 331 3 65 3 44 2 
290 2 71 1 231 1 29 1 349 1 169 1 133 2 190 1 134 2 354 1 148 2 77 2 194 1 
290 4 348 1 294 1 231 1 120 1 29 1 167 1 169 1 133 1 134 1 148 4 77 4 22 1 
290 2 359 1 29 1 59 1 169 1 186 1 133 1 134 2 329 1 148 2 77 2 150 1 285 1 194 1 
290 1 134 1 148 1 28 1 77 1 294 1 29 1 237 1 107 1 265 1 
290 2 231 1 29 1 337 1 169 1 133 1 134 1 148 2 303 1 77 2 262 1 
290 4 348 1 294 1 231 1 29 2 167 1 337 1 351 1 169 2 186 1 133 3 134 2 148 5 77 5 22 1 33 1 
290 4 348 1 294 1 231 1 29 2 167 1 337 1 351 1 169 2 186 1 5 1 133 3 134 2 148 5 77 5 22 1 
290 1 230 2 293 1 294 1 232 1 29 1 169 1 30 1 133 1 134 1 282 2 274 1 148 1 77 1 191 1 113 1 194 1 370 1 
290 1 29 1 59 1 169 1 186 1 61 1 133 1 134 2 354 1 148 1 77 1 285 1 194 1 
334 1 14 1 45 1 230 1 293 1 232 1 300 2 111 1 282 1 248 1 249 1 63 1 
334 1 114 1 70 1 45 1 117 1 98 1 300 2 74 1 365 1 248 1 149 1 249 2 9 1 179 1 370 1 255 1 152 1 373 1 323 1 230 2 232 2 60 1 111 1 282 2 330 1 63 1 113 1 331 2 65 2 287 1 
111 1 63 1 
334 1 255 1 152 1 70 1 373 1 45 1 230 1 232 1 60 1 74 1 300 2 111 1 365 1 282 1 248 1 249 1 63 1 
43 1 123 1 338 1 188 1 
43 1 68 1 37 1 115 1 123 1 338 1 316 1 
314 1 245 1 316 1 
68 1 37 3 115 1 338 1 272 1 316 3 377 2 43 1 356 1 76 1 123 1 177 1 
43 1 352 1 68 1 37 2 115 1 123 1 338 1 316 2 157 1 
68 1 37 1 115 1 109 1 272 1 316 1 338 1 85 1 237 1 239 1 107 1 
68 1 37 1 115 1 123 1 338 1 316 1 272 1 
43 1 68 1 37 1 115 1 123 2 316 1 272 1 
68 2 37 2 115 2 315 1 338 1 272 1 316 2 363 1 123 1 151 1 
68 1 35 1 37 3 115 1 109 1 272 1 316 3 338 2 203 1 43 1 352 2 123 1 176 1 
68 1 37 2 115 1 28 1 292 1 338 1 272 1 316 2 43 1 219 1 352 1 123 1 237 2 239 1 107 1 
68 2 37 4 115 2 109 1 272 1 316 4 338 2 157 1 43 1 352 2 276 1 123 1 176 1 
68 1 37 3 115 1 272 1 316 3 338 1 377 1 203 1 352 1 43 1 123 1 
109 1 10 1 176 1 338 1 
123 1 338 1 
43 1 68 1 37 1 115 1 123 1 338 1 316 1 272 1 
68 1 37 4 115 1 109 1 316 4 338 3 377 1 43 2 352 2 356 1 76 1 123 2 10 1 176 1 
68 1 37 2 115 1 338 1 272 1 316 2 302 1 352 1 43 1 89 1 123 1 34 1 
68 1 37 3 115 1 338 1 272 1 316 3 377 2 43 1 356 2 76 1 123 1 240 1 
27 2 259 1 338 2 216 1 
68 1 37 1 115 1 64 1 316 1 272 1 
43 1 352 1 68 1 37 2 115 1 123 1 338 1 316 2 272 1 203 1 
350 1 
43 1 68 1 37 1 115 1 123 1 338 1 316 1 272 1 

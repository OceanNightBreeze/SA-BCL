#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 193 (152,360) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 350 140 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 13 46 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 162 292 73 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 162 292 73 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 162 292 73 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 162 292 73 22 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 350 140 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 135 322 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 193 (152,360) (152,360) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2408 | if (x) -> if (!x)
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
139 1 57 3 251 1 78 1 229 1 203 3 219 2 351 2 100 1 146 1 298 1 93 1 303 1 
154 2 251 4 1 2 229 1 203 9 351 2 298 1 206 1 8 1 93 6 233 1 35 1 190 1 303 1 139 1 138 1 57 9 60 2 78 2 219 2 100 1 146 3 101 1 264 1 83 2 313 1 198 1 242 1 
154 2 251 4 1 2 229 1 203 9 351 2 298 1 206 1 8 1 93 6 233 1 35 1 190 1 303 1 139 1 138 1 57 9 60 2 78 2 219 2 100 1 146 3 101 1 264 1 83 2 313 1 198 1 242 1 
154 2 251 5 1 2 229 1 203 10 351 2 298 1 206 1 8 1 93 7 233 1 35 1 190 1 303 1 139 1 138 1 57 10 60 2 78 2 219 2 100 1 146 4 101 1 264 1 83 2 313 1 198 1 242 1 
154 2 251 3 1 2 229 1 203 7 351 2 298 1 206 1 8 1 93 4 233 1 35 1 190 1 303 1 139 1 138 1 57 7 60 1 78 2 219 2 100 1 146 2 264 1 83 2 313 1 198 1 242 1 
139 1 154 1 57 4 60 2 251 2 1 1 229 1 203 4 146 1 219 1 351 1 101 1 264 1 298 1 83 1 93 3 190 1 303 1 
139 1 154 1 57 2 1 1 78 1 229 1 203 2 219 1 351 1 298 1 38 1 313 1 271 1 242 1 367 1 303 1 
154 1 251 4 1 1 229 1 203 9 351 2 298 1 93 7 190 1 303 1 138 1 139 1 57 9 60 2 78 1 146 3 100 1 281 1 219 2 101 1 264 1 83 1 198 1 344 1 
154 1 251 4 1 1 229 1 203 9 351 2 298 1 93 7 190 1 303 1 138 1 139 1 57 9 60 2 78 1 146 3 100 1 281 1 219 2 101 1 264 1 83 1 198 1 344 1 
360 1 96 1 193 1 321 1 152 1 141 1 89 1 295 1 102 1 63 1 3 1 174 1 239 1 
183 1 
360 1 96 1 137 1 193 1 321 1 194 1 141 1 152 1 183 1 89 1 295 1 158 1 102 1 3 1 63 1 174 1 239 1 366 1 
321 4 88 1 183 1 129 1 294 1 158 1 9 2 359 1 137 2 278 1 194 1 56 1 168 1 218 1 98 1 280 2 145 1 119 2 99 1 102 2 239 4 199 1 
259 1 183 1 158 1 
338 1 167 2 183 1 
3 2 96 2 63 2 174 2 141 2 89 2 340 1 295 1 
42 1 249 1 319 1 24 1 124 2 108 1 26 2 202 2 89 2 228 1 295 1 205 1 48 1 270 2 3 2 49 1 329 1 353 1 207 1 299 1 305 1 96 2 36 1 141 3 58 1 142 1 340 1 80 1 171 1 310 1 63 2 15 1 174 3 123 1 243 1 178 2 246 1 
3 1 96 1 63 1 174 1 193 1 141 1 152 1 89 1 295 1 
321 1 141 1 110 1 183 1 324 1 97 1 79 1 158 1 296 1 3 1 174 1 239 1 222 1 256 1 
96 1 321 2 141 1 110 1 183 1 324 1 89 1 97 1 158 1 296 1 63 1 3 1 174 1 239 2 222 1 
212 1 137 1 239 1 321 1 102 1 
360 1 96 1 137 1 193 1 321 1 194 1 141 1 152 1 183 1 89 1 295 1 158 1 102 1 3 1 63 1 174 1 239 1 241 1 
137 1 239 1 321 1 
96 1 141 2 89 1 340 2 3 2 63 1 174 2 23 1 211 1 
17 1 260 1 195 1 
305 1 124 1 108 1 141 1 58 1 142 1 202 1 340 1 205 1 270 1 174 1 18 1 123 1 207 1 243 1 246 1 
259 1 340 1 
305 1 96 1 124 1 108 1 141 2 142 1 58 1 202 1 205 1 270 1 63 1 3 1 174 2 113 1 17 1 123 1 207 1 19 1 243 1 246 1 
3 3 96 3 63 3 174 3 113 1 141 3 89 1 340 1 
3 1 96 1 63 1 174 1 193 1 141 1 
3 1 96 1 63 1 174 1 141 1 89 1 296 1 23 1 211 1 
249 1 124 1 108 1 321 1 182 1 110 1 26 2 69 1 324 1 202 1 89 2 296 1 295 1 205 1 270 1 3 3 49 1 113 1 329 1 353 1 207 1 299 1 305 1 96 3 36 1 141 4 142 1 58 1 97 1 340 1 80 1 171 1 310 1 15 1 63 3 174 4 239 1 222 1 123 1 19 1 243 1 178 1 246 1 23 1 
3 2 96 1 63 1 174 2 348 1 113 1 141 2 340 1 256 1 
96 3 321 1 141 3 182 1 110 1 183 1 324 1 89 1 97 1 296 1 63 3 3 3 174 3 239 1 113 2 222 1 19 1 234 1 23 1 
3 2 96 2 63 2 174 2 113 1 17 1 141 2 89 1 195 1 23 1 
305 1 124 1 108 1 141 1 58 1 142 1 202 1 340 1 205 1 270 1 174 1 123 1 207 1 243 1 246 1 
305 1 75 1 124 1 108 1 141 1 142 1 202 1 340 1 205 1 270 1 174 1 123 1 207 1 243 1 72 1 
150 1 249 1 109 1 26 2 127 1 185 1 297 1 48 2 327 1 4 1 49 1 353 2 299 1 300 1 189 1 36 1 260 2 195 2 171 1 310 1 147 1 17 2 178 4 226 1 
3 1 96 1 63 1 174 1 320 1 141 1 110 1 296 1 
96 4 348 1 141 5 89 1 340 1 63 4 3 5 174 5 113 2 365 1 19 1 256 1 40 1 23 1 
3 1 96 1 63 1 174 1 193 1 141 1 
291 1 114 1 128 1 
51 1 94 1 114 2 209 1 128 2 149 1 
114 1 128 1 
114 1 128 1 
51 1 149 1 
51 1 149 1 
51 1 149 1 
114 1 128 1 311 1 
114 1 128 1 311 1 
114 1 128 1 311 1 
32 1 114 1 128 1 
32 1 114 1 128 1 
32 1 114 1 128 1 
180 1 87 2 0 2 321 2 217 1 183 1 128 2 239 2 92 1 122 2 133 1 334 1 333 1 94 1 114 2 187 1 244 2 335 2 105 3 
291 1 87 1 0 1 321 1 325 1 128 1 3 2 333 1 114 1 188 1 335 1 191 1 96 2 141 2 59 1 340 1 63 2 342 1 174 2 239 1 284 1 244 1 177 1 105 1 
173 1 83 1 10 2 1 2 367 1 
83 1 154 1 1 1 
154 1 1 1 367 1 
173 1 83 2 52 1 10 1 1 3 367 1 
173 1 83 1 11 1 10 1 1 2 367 1 
201 3 321 4 250 1 153 1 183 1 325 1 185 1 158 1 71 1 9 1 189 1 191 1 137 1 278 1 167 1 194 1 59 1 218 1 280 1 261 1 237 1 119 1 102 4 220 1 104 1 147 1 221 1 239 4 287 2 226 1 371 1 
360 1 212 1 96 1 137 1 193 1 321 2 141 1 152 1 183 1 89 1 117 1 295 1 158 1 102 2 3 1 63 1 174 1 239 2 159 1 33 1 
201 3 321 3 183 3 325 1 185 1 158 1 71 2 9 1 189 1 338 2 167 4 218 2 261 1 280 1 237 1 119 1 102 2 104 1 220 2 239 3 221 1 147 1 199 1 287 1 371 1 226 1 
201 5 321 4 183 4 325 2 185 2 158 1 71 4 9 1 189 2 338 3 167 7 363 1 218 4 61 1 280 1 261 1 237 1 119 1 102 3 220 4 104 1 239 4 221 2 147 2 199 1 245 1 287 2 371 1 226 2 
309 1 
259 1 108 1 103 1 
108 1 135 1 
305 1 108 1 
305 1 76 1 108 3 207 1 39 1 103 2 
305 1 108 1 207 1 
282 1 108 1 
359 1 25 2 185 1 129 1 70 1 62 1 297 2 131 1 327 3 48 4 91 1 265 1 50 1 353 3 7 1 115 1 178 7 226 1 
151 1 25 3 26 2 129 2 70 2 185 4 297 5 252 1 48 16 131 5 327 10 91 1 330 3 6 1 7 1 353 15 232 4 254 1 299 1 189 3 301 1 115 1 359 2 95 1 36 1 362 1 171 1 62 2 310 1 265 1 221 3 147 3 178 31 226 4 
359 1 36 1 25 1 26 2 98 1 129 1 70 1 144 1 171 1 62 1 310 1 297 1 327 1 48 1 265 1 7 1 299 1 178 1 317 1 
359 1 25 2 185 1 129 1 70 1 62 1 297 2 131 1 327 3 48 4 91 1 265 1 353 3 7 1 115 1 178 7 226 1 
359 1 25 2 185 1 129 1 70 1 62 1 297 2 131 1 327 3 48 4 91 1 265 1 353 3 7 1 115 1 178 7 226 1 
305 1 192 1 337 1 124 1 108 1 43 1 142 1 57 1 202 1 78 2 156 1 81 2 203 1 219 1 351 1 205 1 270 1 314 2 186 2 243 1 357 1 286 1 316 1 
213 1 235 1 124 1 154 1 142 1 57 1 1 2 202 1 78 1 229 1 203 1 81 1 219 1 351 1 205 1 196 1 197 1 270 1 83 1 52 1 314 1 186 1 176 1 367 1 276 1 358 1 
124 1 154 1 202 1 1 2 229 1 203 2 351 1 205 1 270 1 298 1 52 1 93 1 186 1 355 1 303 1 276 1 213 1 235 1 139 1 57 2 142 1 78 1 81 1 219 1 196 1 197 1 83 1 314 1 176 1 367 1 
124 1 154 1 202 1 1 2 203 3 351 1 205 1 270 1 298 1 52 1 186 1 93 2 303 1 358 1 213 1 235 1 139 1 57 3 142 1 78 1 81 1 219 1 196 1 197 1 83 1 314 1 176 1 268 1 316 1 367 1 
124 1 154 1 202 1 1 2 203 2 205 1 270 1 298 1 52 1 186 1 93 2 303 1 358 1 213 1 235 1 139 1 57 2 142 1 78 1 81 1 196 1 83 1 314 1 268 1 367 1 
134 1 
201 1 137 2 124 1 278 1 194 1 321 1 140 1 202 1 218 1 280 1 119 1 350 1 270 1 30 1 239 1 9 1 243 1 371 1 
321 2 110 1 324 1 296 1 3 1 352 2 256 1 137 2 194 1 141 1 308 1 143 1 97 1 13 1 79 1 14 1 174 1 239 2 240 1 222 1 283 1 366 1 
321 2 110 1 324 1 183 1 296 1 158 1 3 1 352 3 256 1 137 1 306 1 194 1 141 1 308 1 143 1 97 1 79 1 14 1 174 1 239 2 240 1 222 1 283 1 366 1 
321 2 110 1 324 1 46 1 296 1 3 1 352 3 256 1 137 2 306 1 194 1 141 1 308 1 143 1 97 1 13 1 79 1 14 1 174 1 239 2 240 1 222 1 283 1 366 1 
137 1 239 1 194 1 321 1 366 1 
201 1 321 2 110 1 324 1 296 1 3 1 352 2 354 1 9 1 256 1 304 1 162 1 278 1 141 1 308 1 143 1 218 1 97 1 280 1 79 1 14 1 119 1 266 1 174 1 239 2 240 1 222 1 283 1 285 1 
201 1 292 1 321 2 110 1 324 1 296 1 3 1 352 2 328 1 354 1 9 1 256 1 73 1 304 1 162 1 278 1 141 1 308 1 143 1 218 1 97 1 280 1 79 1 14 1 119 1 266 1 174 1 239 2 240 1 222 1 283 1 285 1 
201 1 292 1 321 2 110 1 324 1 296 1 3 1 352 2 328 1 354 1 9 1 256 1 73 1 304 1 162 1 278 1 141 1 308 1 143 1 218 1 97 1 280 1 79 1 14 1 119 1 266 1 174 1 239 2 240 1 222 1 283 1 285 1 
74 1 321 2 141 1 110 1 324 1 44 1 143 1 308 1 97 1 79 1 14 1 296 1 3 1 352 2 174 1 240 1 239 2 222 1 283 1 256 1 
201 1 292 1 321 2 110 1 324 1 46 1 296 1 3 1 352 3 328 1 354 1 9 1 256 1 73 1 304 1 162 1 137 1 278 1 306 1 141 1 308 1 143 1 218 1 97 1 280 1 13 1 79 1 119 1 14 1 266 1 174 1 239 2 240 1 222 1 283 1 285 1 22 1 
201 1 292 1 321 2 110 1 324 1 46 1 296 1 3 1 352 3 328 1 354 1 9 1 256 1 73 1 304 1 162 1 137 1 278 1 306 1 141 1 308 1 143 1 218 1 97 1 280 1 13 1 79 1 119 1 14 1 266 1 174 1 239 2 240 1 222 1 283 1 285 1 22 1 
201 1 321 2 110 1 324 1 46 1 296 1 3 1 352 3 354 2 9 1 34 2 256 1 304 2 162 1 137 2 306 1 278 1 215 1 194 1 167 1 141 1 308 1 143 1 218 1 97 1 13 1 280 1 79 1 14 1 119 1 120 1 174 1 239 2 240 1 222 1 283 1 21 1 
106 1 42 1 124 8 249 2 319 2 108 3 26 4 202 7 205 2 270 8 48 1 3 1 4 1 49 2 113 1 353 1 355 1 299 2 208 1 357 1 275 1 302 1 358 1 192 1 305 2 96 1 36 2 141 1 142 2 238 1 80 1 171 2 310 2 262 1 63 1 174 1 315 1 243 2 178 2 
249 1 26 2 89 1 185 1 297 1 327 1 48 1 3 1 49 1 353 2 299 1 54 1 336 1 189 1 96 1 36 1 260 1 141 1 195 1 171 1 310 1 63 1 174 1 221 1 147 1 17 1 178 3 23 1 226 1 
249 1 25 1 26 2 129 1 185 1 297 2 327 2 48 3 4 1 49 1 7 1 353 3 299 1 115 1 359 1 259 1 36 1 260 1 340 2 195 1 171 1 310 1 265 1 17 1 178 6 226 1 
249 1 151 1 126 1 26 2 185 1 297 1 131 1 327 2 48 6 49 1 330 2 353 4 232 2 299 1 257 1 336 1 189 1 236 1 36 1 260 8 195 3 171 1 310 1 221 2 147 2 17 8 369 1 178 10 226 2 
42 1 124 1 249 1 108 1 26 2 202 1 205 1 270 1 48 1 3 1 49 1 113 1 353 1 207 1 299 1 336 1 305 1 96 1 277 1 36 1 141 2 142 1 58 1 340 1 195 1 80 1 171 1 310 1 63 1 174 2 123 1 18 1 19 1 243 1 178 2 246 1 67 1 372 1 
42 1 124 3 125 2 129 1 185 3 230 1 2 2 270 3 48 10 131 4 327 8 3 1 49 3 7 1 336 1 189 2 96 1 141 3 58 2 142 2 340 2 195 7 63 1 15 2 147 2 17 7 19 1 243 1 65 2 246 2 107 1 249 3 108 2 25 1 26 6 202 3 293 2 297 4 205 2 113 1 353 10 207 2 299 3 115 1 358 1 359 1 305 2 36 3 260 7 80 1 171 3 310 3 265 1 174 3 221 2 123 2 223 1 178 20 226 3 
249 1 36 1 260 1 26 2 127 1 195 1 171 1 310 1 327 1 131 1 48 2 4 1 49 1 147 1 17 1 299 1 178 2 226 1 
150 1 249 1 36 1 260 1 26 2 195 1 171 1 185 1 310 1 297 1 327 1 4 1 49 1 17 1 353 2 299 1 189 1 178 2 
249 1 26 2 185 1 297 1 48 2 131 1 327 2 4 1 49 1 353 2 299 1 189 1 36 1 260 2 195 2 171 1 310 1 147 1 221 1 17 2 178 4 226 1 
106 1 249 1 36 1 260 1 26 2 127 1 195 1 171 1 310 1 327 1 131 1 48 2 49 1 147 1 17 1 299 1 178 2 226 1 
106 1 150 1 249 1 36 1 260 1 26 2 195 1 171 1 185 1 310 1 297 1 327 1 49 1 17 1 353 2 299 1 189 1 178 2 
106 1 249 1 26 2 185 1 297 1 48 2 131 1 327 2 49 1 353 2 299 1 189 1 36 1 260 2 195 2 171 1 310 1 147 1 221 1 17 2 178 4 226 1 
249 1 26 2 185 1 297 1 48 2 131 1 327 2 49 1 353 2 299 1 189 1 36 1 260 2 195 2 171 1 310 1 147 1 221 1 17 2 178 4 226 1 
42 1 124 1 249 1 108 1 26 2 202 1 205 1 48 1 270 1 49 1 353 1 207 1 299 1 305 1 36 1 141 1 142 1 58 1 340 1 80 1 171 1 310 1 15 1 174 1 123 1 243 1 178 2 246 1 
42 1 124 1 249 1 108 1 26 2 202 1 205 1 48 1 270 1 49 1 353 1 207 1 299 1 72 1 305 1 75 1 36 1 141 1 142 1 340 1 80 1 171 1 310 1 174 1 123 1 243 1 346 1 178 2 
249 1 26 2 185 1 297 1 48 2 131 1 327 2 49 1 353 2 299 1 336 1 189 1 36 1 260 2 195 2 171 1 310 1 147 1 221 1 17 2 178 4 226 1 
124 1 249 1 108 1 125 1 26 2 202 1 185 1 297 1 205 1 327 2 131 1 48 2 270 1 49 1 353 2 207 1 355 1 299 1 189 1 305 1 36 1 260 2 141 1 142 1 58 1 195 2 171 1 310 1 15 1 174 1 147 1 221 1 17 2 123 1 178 4 246 1 226 1 
249 1 26 2 89 1 185 1 327 1 131 1 48 2 3 1 49 1 353 1 299 1 189 1 336 1 96 1 36 1 141 1 260 1 195 1 171 1 310 1 341 1 63 1 174 1 221 1 147 1 17 1 178 3 23 1 226 1 
151 1 26 4 155 1 90 1 185 3 112 2 297 3 269 1 48 9 131 3 327 6 330 1 353 10 160 1 232 2 254 1 299 2 189 3 55 1 36 2 171 2 144 1 172 2 310 2 221 3 147 3 175 1 20 1 178 19 226 3 
26 6 185 2 112 4 297 2 131 2 327 4 269 1 48 14 330 2 353 12 160 1 254 2 232 2 299 3 301 2 189 2 55 1 36 3 361 1 12 1 171 3 144 1 118 1 172 1 310 3 37 1 82 1 221 3 147 3 175 2 20 2 225 1 178 26 226 3 
151 1 25 1 26 6 90 1 129 1 185 5 112 4 297 4 269 1 48 20 131 4 327 8 330 3 7 1 353 21 160 1 232 4 254 3 299 3 301 1 189 4 115 1 55 1 359 1 361 1 36 3 12 1 116 1 118 1 171 3 144 1 172 1 37 1 310 3 265 1 82 1 221 4 147 4 175 2 20 1 225 1 178 41 226 5 
151 1 25 1 26 8 90 1 129 1 185 4 112 4 297 4 269 1 48 20 131 3 327 7 330 3 7 1 353 18 160 1 232 4 254 3 299 4 301 2 189 3 115 1 55 1 359 1 361 1 36 4 12 1 116 1 118 1 171 4 144 1 172 1 37 1 310 4 265 1 82 1 221 4 147 4 175 2 20 1 225 1 178 38 226 5 
151 2 25 1 126 2 26 4 129 1 185 8 112 4 297 7 269 1 48 27 131 7 327 14 330 4 7 1 353 25 160 1 232 4 254 2 299 2 301 1 189 7 115 1 55 1 359 1 361 1 36 2 12 1 118 1 171 2 144 1 172 1 37 1 310 2 265 1 82 1 221 7 147 7 175 1 20 1 225 1 178 52 226 8 
180 1 87 1 92 1 0 1 356 1 94 1 114 1 244 1 128 1 335 1 
291 1 177 1 
87 1 347 1 312 1 0 1 114 1 244 1 128 1 148 1 335 1 
180 1 87 1 321 1 0 1 183 1 128 1 239 1 92 1 122 1 133 1 334 1 333 1 94 1 114 1 187 1 244 1 335 1 105 2 
180 1 87 1 321 1 0 1 183 1 128 1 239 1 92 1 122 1 133 1 334 1 333 1 94 1 114 1 187 1 244 1 335 1 105 2 
180 1 87 1 321 1 0 1 183 1 128 1 239 1 92 1 122 1 133 1 334 1 333 1 94 1 114 1 187 1 244 1 335 1 105 2 
339 1 209 1 311 1 
339 1 209 1 311 1 
32 1 200 1 
32 1 209 1 200 1 
284 1 188 1 
291 1 87 1 321 1 0 1 184 1 325 1 128 1 3 2 133 1 114 1 188 1 335 1 191 1 96 2 141 2 59 1 340 1 102 1 342 1 63 2 174 2 239 1 122 1 284 1 244 1 177 1 105 1 
339 1 311 1 
32 1 209 1 200 1 
290 1 41 1 42 1 124 2 249 1 319 2 108 1 26 2 202 2 157 1 205 1 270 2 48 1 3 2 49 1 5 1 353 1 299 1 273 1 336 1 275 1 305 1 36 1 141 2 142 1 80 1 171 1 310 1 262 1 174 2 178 2 
305 1 192 1 86 1 124 1 108 1 142 1 202 1 156 1 81 1 205 1 270 1 243 1 357 1 85 1 
248 1 86 1 124 1 235 1 154 1 142 1 1 2 202 1 81 1 205 1 196 1 270 1 121 1 197 1 83 1 52 1 367 1 358 1 
248 1 86 1 124 2 235 1 154 1 142 1 1 2 202 2 81 1 205 1 196 1 270 2 121 1 197 1 83 1 52 1 355 1 367 1 358 1 
248 1 124 1 235 1 154 1 142 1 1 2 202 1 81 1 196 1 205 1 270 1 197 1 83 1 64 1 52 1 367 1 358 1 
132 1 
201 1 278 1 88 1 183 1 218 1 280 1 119 1 99 1 158 1 9 1 
201 5 338 5 167 10 183 5 111 1 293 1 218 5 145 2 185 2 220 5 221 2 147 2 71 5 189 2 226 2 
360 1 96 1 137 1 193 1 194 1 141 1 152 1 183 1 89 1 158 1 295 1 3 1 63 1 174 1 
201 1 137 2 124 1 278 1 194 1 140 1 202 1 170 1 218 1 280 1 119 1 350 1 270 1 30 1 9 1 243 1 371 1 
201 1 259 1 88 1 183 1 218 1 158 1 99 1 
201 1 266 1 278 1 9 1 285 1 218 1 280 1 119 1 
305 1 124 1 278 1 108 1 322 1 323 1 142 1 202 1 280 1 119 1 205 1 270 1 207 1 9 1 243 1 39 1 135 1 
126 1 183 7 89 1 185 4 3 1 330 2 9 2 232 2 53 1 189 4 96 1 137 1 193 1 338 5 278 2 194 1 141 1 12 1 280 2 145 5 63 1 147 4 201 13 151 1 152 1 111 1 158 2 295 1 30 1 71 8 254 1 360 1 361 1 167 10 169 1 218 8 119 2 118 1 37 1 174 1 220 8 221 4 225 1 226 4 371 1 
359 1 278 1 321 1 98 1 280 1 119 1 129 1 145 1 239 1 328 1 9 1 
124 1 249 1 108 1 26 2 202 1 89 2 295 1 205 1 270 1 3 2 49 1 329 1 353 1 207 1 299 1 305 1 96 2 36 1 141 3 58 1 142 1 340 1 80 1 171 1 310 1 63 2 15 1 174 3 123 1 243 1 178 1 246 1 
201 1 338 2 278 1 167 4 25 1 183 4 218 2 280 1 119 1 158 2 30 1 220 2 71 2 9 1 371 1 
164 1 92 1 0 1 284 1 244 1 
0 1 244 1 364 1 
0 1 244 1 364 1 
0 1 244 1 364 1 
214 1 0 1 244 1 
214 1 0 1 244 1 
214 1 0 1 244 1 
0 1 244 1 
114 1 128 1 
327 1 359 1 98 1 129 1 297 1 
36 1 26 2 144 1 171 1 310 1 48 2 131 1 327 1 147 1 299 1 178 2 226 1 
36 1 26 2 185 1 144 1 171 1 310 1 297 1 327 2 48 2 131 1 221 1 147 1 353 2 299 1 189 1 178 4 226 1 
359 1 36 3 26 6 90 1 144 1 171 3 129 1 204 1 310 3 297 1 327 2 131 1 48 1 353 2 299 3 301 1 178 3 
151 1 25 1 26 10 129 3 90 1 185 5 204 1 252 1 297 7 48 16 131 5 327 12 6 1 330 3 7 1 353 18 232 4 254 1 299 5 301 2 189 3 115 2 359 3 95 1 36 5 171 5 144 1 310 5 265 1 221 3 147 3 178 34 66 1 226 5 
25 1 26 2 185 1 129 1 297 2 48 4 327 2 330 1 353 4 7 1 232 1 254 1 299 1 115 1 359 1 361 1 36 1 171 1 144 1 310 1 265 1 178 8 226 1 
151 1 25 1 26 4 185 1 129 1 297 2 48 6 131 1 327 3 330 1 7 1 353 5 232 2 254 1 299 2 115 1 359 1 361 1 36 2 144 1 171 2 310 2 265 1 221 1 147 1 178 11 66 1 226 2 
25 1 26 6 129 1 185 3 297 3 131 1 48 9 327 4 330 1 7 1 353 10 232 1 254 1 299 3 189 2 301 1 115 1 359 1 361 1 36 3 12 1 171 3 144 1 118 1 310 3 37 1 265 1 221 2 147 2 225 1 178 19 66 1 226 3 
25 1 26 6 129 1 185 2 297 3 131 2 48 10 327 5 330 1 7 1 353 7 232 1 254 1 299 3 301 1 189 1 115 1 359 1 361 1 36 3 12 1 171 3 144 1 118 1 310 3 37 1 265 1 221 2 147 2 178 17 225 1 66 1 226 3 
25 1 26 2 185 1 129 1 297 2 48 4 327 2 330 1 353 4 7 1 232 1 254 1 299 1 115 1 359 1 361 1 36 1 171 1 144 1 310 1 265 1 178 8 226 1 
26 2 185 2 297 1 131 1 48 6 327 2 330 1 353 6 232 1 254 1 299 1 189 2 361 1 36 1 12 1 171 1 144 1 118 1 310 1 37 1 221 2 147 2 178 12 225 1 226 2 
25 1 26 8 129 1 185 2 297 3 131 2 48 10 327 5 330 1 7 1 353 8 232 1 254 1 299 4 189 1 301 2 115 1 359 1 361 1 36 4 12 1 171 4 144 1 118 1 310 4 37 1 265 1 221 2 147 2 225 1 178 18 66 1 226 3 
26 8 90 1 185 2 297 3 131 3 48 9 327 6 330 1 353 7 232 1 254 1 299 4 189 2 301 2 361 1 36 4 12 1 144 1 171 4 118 1 310 4 37 1 221 3 147 3 225 1 178 16 226 3 
359 3 185 1 129 3 297 3 327 6 131 3 48 3 265 1 353 4 7 2 178 7 115 1 226 1 
25 1 26 8 129 1 90 1 185 2 297 3 131 1 48 10 327 4 330 1 7 1 353 8 232 1 254 1 299 4 189 1 301 2 115 1 359 1 361 1 36 4 12 1 144 1 171 4 118 1 310 4 37 1 265 1 221 2 147 2 225 1 178 18 226 3 
359 1 36 2 25 1 26 4 185 1 171 2 129 1 310 2 297 2 48 4 131 1 327 3 265 1 353 4 7 1 299 2 301 1 115 1 178 8 226 1 
359 1 259 1 25 1 129 1 185 1 297 2 327 2 48 3 265 1 353 3 7 1 115 1 178 6 226 1 
36 1 26 2 185 1 171 1 310 1 297 1 327 2 48 2 131 1 221 1 147 1 353 2 299 1 189 1 178 4 66 1 226 1 
151 1 185 1 297 1 48 3 131 1 327 2 221 1 147 1 330 1 353 4 254 1 232 2 189 1 178 7 226 1 
151 1 25 1 126 1 26 4 129 2 185 3 204 1 297 5 327 9 131 4 48 11 330 2 7 1 353 12 232 2 299 2 189 2 301 2 115 1 359 2 236 1 36 2 171 2 310 2 265 1 147 2 221 2 178 23 226 3 
353 1 232 1 178 1 
48 1 330 1 178 1 
36 1 26 2 293 1 171 1 185 1 310 1 297 2 48 3 131 1 327 3 221 1 147 1 353 3 299 1 189 1 178 6 66 1 226 1 
26 2 185 2 297 1 131 1 48 6 327 2 330 1 353 6 232 1 254 1 299 1 189 2 361 1 36 1 12 1 171 1 144 1 118 1 310 1 37 1 221 2 147 2 178 12 225 1 226 2 
131 1 327 2 359 1 48 3 353 3 129 1 185 1 178 6 115 1 297 1 226 1 
359 1 36 1 26 2 129 1 171 1 204 1 310 1 297 1 48 1 131 1 327 2 265 1 7 1 353 2 299 1 301 1 178 3 
3 1 174 1 348 1 141 1 340 1 256 1 258 1 
3 1 174 1 348 1 165 1 141 1 343 1 279 1 84 1 340 1 256 1 258 1 247 1 
192 1 305 1 124 4 108 1 142 1 202 4 205 1 270 4 31 1 355 1 272 1 243 1 357 1 
179 1 305 1 124 2 108 1 349 1 142 1 202 2 307 1 230 1 205 2 270 2 267 1 332 1 207 1 
270 1 235 1 124 1 154 1 142 1 1 1 202 1 243 1 367 1 205 1 
290 1 305 1 124 2 108 1 142 1 202 2 262 1 205 1 270 2 355 1 358 1 
192 1 305 2 124 5 108 3 349 1 142 2 202 4 262 1 205 2 270 5 31 1 355 1 243 1 315 1 357 1 302 1 
192 1 305 2 124 5 108 3 349 1 142 2 202 4 262 1 263 1 205 2 270 5 31 1 355 1 243 1 357 1 302 1 
305 1 192 1 270 1 124 1 259 1 108 1 142 1 202 1 243 1 357 1 205 1 
305 1 96 1 124 1 108 1 141 2 58 1 142 1 202 1 340 1 205 1 270 1 63 1 3 1 174 2 113 1 123 1 207 1 243 1 
305 2 96 2 124 1 108 3 141 2 110 1 349 1 58 1 142 1 27 1 202 1 340 1 296 1 205 1 270 1 63 1 3 2 174 2 282 1 222 1 113 1 123 1 207 2 
124 2 108 3 349 1 110 1 202 2 27 1 296 1 205 1 270 2 3 2 113 1 207 2 272 1 72 1 305 2 96 2 141 2 142 1 340 1 63 1 174 2 282 1 222 1 123 1 
360 1 96 1 68 1 124 1 193 1 321 1 108 1 141 1 152 1 349 1 183 1 202 1 89 1 295 1 158 1 270 1 3 1 63 1 174 1 239 1 135 1 
360 1 96 1 124 1 193 1 321 1 108 1 141 1 152 1 349 1 183 1 202 1 89 1 295 1 158 1 270 1 3 1 63 1 174 1 239 1 274 1 135 1 
270 1 124 1 142 1 202 1 208 1 205 1 
179 1 305 2 319 1 124 7 108 3 142 2 202 6 238 1 262 1 205 3 270 7 231 1 267 1 207 1 355 1 315 1 243 2 208 1 39 1 302 1 358 1 
41 1 249 2 124 1 108 1 125 1 25 1 26 4 202 1 185 1 129 1 297 2 205 1 48 3 327 2 270 1 3 1 49 2 113 1 353 3 7 1 207 1 355 1 299 2 336 1 115 1 359 1 305 1 96 1 36 2 260 1 141 2 142 1 58 1 340 2 195 1 171 2 310 2 265 1 63 1 15 1 174 2 17 1 123 1 65 1 178 6 246 1 226 1 
124 1 321 1 108 1 88 1 183 1 202 1 129 1 158 1 47 1 270 1 9 2 274 1 135 1 359 1 137 1 278 2 194 1 77 1 170 1 98 1 218 1 280 2 145 1 119 2 99 1 102 1 239 1 243 1 368 1 
305 1 124 1 108 1 323 1 142 1 309 1 202 1 103 1 205 1 270 1 207 1 208 1 39 1 
305 1 96 1 124 1 108 1 141 2 142 1 202 1 340 1 205 1 270 1 63 1 3 1 174 2 113 1 123 1 207 1 243 1 72 1 
179 1 305 1 124 1 108 1 349 1 142 1 202 1 205 2 270 1 231 1 267 1 207 1 39 1 
331 1 216 1 340 1 130 1 370 1 
321 2 110 1 216 2 182 1 183 1 324 1 97 1 340 1 130 2 158 1 296 1 102 1 239 2 222 1 331 2 224 1 255 1 370 1 210 1 
141 1 216 1 130 1 157 1 3 1 174 1 5 1 273 1 370 1 
255 1 210 1 370 1 
298 1 139 1 57 1 229 1 203 1 351 1 219 1 303 1 
139 2 166 1 57 4 251 1 203 4 219 1 351 1 146 1 298 2 16 1 93 2 242 1 345 1 303 2 
139 1 227 1 57 2 229 1 203 2 219 1 351 1 281 1 298 1 93 1 303 1 289 1 
139 1 166 2 57 3 229 1 203 3 219 1 351 1 298 1 16 1 242 2 163 1 303 1 
253 2 298 2 161 1 326 1 
57 1 229 1 203 1 288 1 351 1 219 1 
298 1 139 1 198 1 93 1 57 2 229 1 203 2 351 1 219 1 303 1 
181 1 
298 1 139 1 57 1 229 1 203 1 351 1 219 1 303 1 
298 1 139 1 259 1 303 1 
298 1 139 1 57 1 203 1 351 1 219 1 303 1 
314 1 78 1 203 1 
139 1 166 1 57 3 28 1 229 1 203 3 219 1 351 1 298 1 16 1 242 2 303 1 
298 1 139 1 93 1 60 1 57 2 203 2 351 1 219 1 303 1 
264 1 83 1 154 1 251 1 57 1 1 1 229 1 203 1 351 1 219 1 
298 1 57 1 229 1 203 1 351 1 219 1 303 1 
139 1 57 1 229 1 203 1 351 1 219 1 303 2 
29 1 318 1 298 1 57 2 45 1 229 1 203 2 351 2 219 2 303 1 
139 1 138 1 57 3 251 1 229 1 203 3 219 1 351 1 146 1 298 1 198 1 93 2 303 1 
136 1 139 1 154 1 57 2 1 2 229 1 203 2 219 1 351 1 298 1 83 1 52 1 93 1 367 1 303 1 
139 1 57 4 60 1 251 1 229 1 203 4 219 2 351 2 146 1 101 1 298 1 93 2 303 1 
298 1 139 1 198 1 93 1 57 3 242 1 229 1 203 3 351 1 219 1 303 1 
93 1 57 1 251 1 203 1 146 1 
298 1 303 1 

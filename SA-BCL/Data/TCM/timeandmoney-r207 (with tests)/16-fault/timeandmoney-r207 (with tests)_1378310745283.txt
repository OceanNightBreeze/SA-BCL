#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 243 (278,286) (278,286) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 243 (278,286) (278,286) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 243 (278,286) (278,286) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 29 265 190 81 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 66 88 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 52 219 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 1 18 1 132 7 357 2 370 1 157 3 45 2 328 4 329 7 272 1 181 2 278 1 112 2 198 1 86 2 332 1 35 2 263 1 286 1 243 1 253 2 254 1 131 1 217 1 
67 1 18 1 132 7 357 2 370 1 157 3 45 2 328 4 329 7 272 1 181 2 278 1 112 2 198 1 86 2 332 1 263 1 35 2 286 1 243 1 253 2 254 1 131 1 217 1 
67 1 18 1 132 7 357 2 370 1 157 3 45 2 328 4 329 7 272 1 181 2 278 1 112 2 198 1 86 2 332 1 263 1 35 2 286 1 243 1 253 2 254 1 131 1 217 1 
357 2 157 3 328 4 329 7 272 1 181 2 278 1 332 1 35 2 336 1 286 1 253 2 130 1 254 1 215 1 217 1 131 1 67 1 132 7 18 1 370 1 45 2 198 1 112 2 86 2 263 1 243 1 
67 1 132 4 357 1 57 1 45 1 157 2 328 3 329 4 181 1 86 1 332 1 35 1 336 1 243 1 253 1 130 1 254 2 215 1 
132 2 370 1 45 1 109 1 329 2 247 1 181 1 279 1 112 1 86 1 332 1 336 1 253 1 130 1 215 1 217 1 
132 3 18 1 357 1 45 2 157 1 328 1 329 3 112 1 86 2 332 1 336 1 130 1 215 1 
203 1 357 3 57 1 157 4 328 7 329 9 272 1 181 1 332 1 35 1 333 1 336 1 253 1 130 1 254 2 215 1 131 1 67 1 18 1 132 9 45 2 112 1 86 2 243 1 
203 1 357 3 57 1 157 4 328 7 329 9 272 1 181 1 332 1 35 1 333 1 336 1 253 1 130 1 254 2 215 1 131 1 67 1 18 1 132 9 45 2 112 1 86 2 243 1 
268 1 302 1 76 1 
268 1 29 2 297 1 
2 2 210 2 27 2 321 1 242 2 120 2 3 1 325 2 
2 2 27 2 120 2 122 1 3 1 80 1 277 1 232 1 210 3 280 1 99 1 146 1 185 1 36 1 187 1 285 2 305 1 304 1 37 1 147 1 38 1 39 1 369 1 346 1 193 1 46 1 371 2 292 2 152 1 348 1 72 2 170 1 113 1 321 1 242 2 221 1 244 1 325 3 296 2 
262 1 2 1 210 1 27 1 242 1 120 1 346 1 3 1 353 1 325 1 
27 1 268 1 344 1 94 1 346 1 95 1 111 1 300 1 210 1 302 1 355 1 91 1 325 1 201 1 
2 1 27 1 268 1 344 1 94 2 120 1 346 1 95 1 300 2 210 1 302 1 242 1 355 1 325 1 201 1 
300 1 94 1 352 1 246 1 197 1 
300 2 268 1 302 1 94 2 352 1 246 1 165 1 70 1 
300 1 94 1 246 1 
2 1 27 1 94 1 120 1 346 1 259 1 3 1 262 1 300 1 210 1 242 1 352 1 353 1 325 1 
268 1 
300 2 268 1 342 1 302 1 94 2 352 1 246 1 70 1 
107 1 343 1 268 1 94 5 179 2 270 1 79 1 246 2 70 1 153 1 73 1 300 5 125 1 183 1 302 1 186 1 352 2 166 2 90 2 
321 1 76 1 
2 1 27 2 120 1 210 2 242 1 321 2 236 1 324 1 325 2 
33 1 334 1 323 1 
369 1 360 1 371 1 348 1 80 1 232 1 210 1 321 1 285 1 305 1 304 1 244 1 147 1 39 1 325 1 296 1 
369 1 2 1 27 1 371 1 180 1 348 1 80 1 142 1 232 1 210 2 242 1 334 1 285 1 305 1 304 1 244 1 147 1 39 1 325 2 296 1 
341 1 2 4 27 5 120 1 373 1 180 1 142 2 96 1 210 5 242 4 321 1 236 1 91 1 325 5 
262 1 2 2 210 2 27 2 121 1 242 2 346 1 325 2 
2 3 210 3 27 3 120 1 321 1 242 3 142 1 325 3 
262 1 2 1 210 1 27 1 242 1 346 1 325 1 
2 1 210 1 27 1 242 1 120 1 346 1 236 1 324 1 325 1 
2 3 27 3 139 1 120 2 94 1 95 1 123 1 180 1 3 1 80 1 142 1 277 1 232 1 300 1 210 4 99 1 146 1 185 1 236 1 36 1 187 1 285 1 305 1 304 1 147 1 39 1 369 1 344 1 193 1 46 1 346 1 371 1 292 1 348 1 72 2 113 1 321 1 242 3 221 1 244 1 355 1 325 4 201 1 296 1 
341 1 2 1 210 2 27 2 321 1 242 1 142 1 91 1 325 2 
2 3 27 3 268 1 344 1 120 1 94 1 95 1 346 1 123 1 180 1 142 2 300 1 210 3 242 3 236 1 355 1 325 3 202 1 201 1 
2 2 27 2 120 1 142 1 33 1 210 2 242 2 236 1 334 1 325 2 
369 1 371 1 348 1 80 1 232 1 210 1 321 1 285 1 304 1 305 1 244 1 147 1 39 1 325 1 296 1 
369 1 371 1 19 1 348 1 232 1 210 1 321 1 285 1 305 1 244 1 147 1 167 1 39 1 325 1 296 1 
208 1 364 1 33 2 99 1 146 1 185 1 334 2 36 1 187 1 213 1 16 1 40 1 257 1 312 1 193 1 345 1 292 4 152 2 293 1 72 2 351 1 374 1 221 2 323 2 
2 1 210 1 27 1 242 1 121 1 346 1 201 1 325 1 
211 1 367 1 
211 1 367 1 
13 1 175 1 
13 1 175 1 
13 1 175 1 
211 1 192 1 367 1 
211 1 366 1 367 1 
116 1 211 2 102 1 13 1 367 2 175 1 
211 1 192 1 367 1 
211 1 192 1 367 1 
211 1 173 1 367 1 
211 1 173 1 367 1 
211 1 173 1 367 1 
2 2 27 2 28 1 94 1 141 1 209 1 61 1 363 1 300 1 211 1 210 2 11 1 129 1 366 1 12 1 287 1 367 1 168 1 308 1 317 1 196 1 321 1 242 2 325 2 
340 1 268 1 94 2 83 1 317 2 196 2 209 2 363 1 31 1 300 2 184 1 211 2 11 3 102 1 287 2 306 2 354 1 367 2 256 1 
35 1 253 1 181 1 
109 1 253 1 181 1 
35 2 100 1 109 1 156 1 253 3 289 1 
35 1 109 1 156 1 223 1 253 2 289 1 
35 1 109 1 156 2 253 2 289 1 
268 2 28 1 205 1 94 5 29 3 179 1 270 1 297 1 246 1 140 1 248 1 231 1 5 2 300 5 234 1 302 1 129 1 186 2 213 1 166 1 216 1 308 1 257 1 343 3 135 2 70 1 293 1 374 1 352 4 322 1 24 2 90 1 
0 1 138 1 28 4 268 5 94 9 29 9 179 2 270 1 297 3 246 6 248 3 231 1 182 1 5 6 300 9 10 5 302 1 186 6 237 1 213 3 166 2 339 1 216 2 257 3 343 8 70 1 153 1 293 3 197 5 374 3 23 1 352 7 322 2 24 6 90 2 
2 1 27 1 268 3 28 1 120 1 205 1 94 3 179 1 29 4 297 2 3 1 140 1 248 1 5 2 300 3 210 1 302 1 186 2 213 1 166 1 216 1 257 1 343 3 346 1 259 1 135 1 153 1 293 1 262 1 374 1 242 1 352 2 322 1 24 2 353 1 90 1 325 1 
268 2 28 1 94 2 205 1 29 4 179 1 297 2 140 1 248 1 5 2 300 2 186 2 213 1 166 1 216 1 257 1 343 3 135 1 153 1 293 1 374 1 23 1 322 1 352 1 24 2 90 1 
305 1 172 1 76 1 
66 1 305 1 
47 1 
305 1 244 1 147 1 
220 1 305 1 
305 1 147 1 
267 1 172 2 305 3 229 1 244 1 147 1 
257 1 312 3 110 1 292 7 152 4 85 1 32 1 51 1 34 1 221 3 252 1 213 1 222 1 255 1 40 2 77 1 105 2 
257 1 312 3 110 1 292 7 152 4 85 1 32 1 51 1 34 1 221 3 252 1 213 1 222 1 255 1 40 2 77 1 105 2 
257 1 312 3 110 1 347 1 292 7 152 4 85 1 32 1 51 1 34 1 221 3 252 1 213 1 222 1 255 1 40 2 77 1 105 2 
204 4 230 1 248 3 6 1 32 1 98 1 127 1 34 2 99 1 146 1 36 1 252 2 213 4 255 1 40 5 105 3 291 3 257 4 312 10 193 1 110 5 218 1 292 31 152 16 85 1 72 2 293 3 74 1 51 2 374 3 320 1 221 15 222 1 77 2 
9 1 32 1 365 1 34 1 99 2 146 2 36 2 252 1 213 1 40 3 255 1 105 2 257 1 312 4 193 2 110 1 218 1 292 9 152 5 72 4 51 1 221 4 222 1 77 1 
55 1 92 1 328 1 329 2 330 1 181 1 332 1 35 1 100 1 336 1 285 1 253 2 130 1 39 1 215 1 132 2 106 1 309 1 43 1 369 1 45 1 109 1 313 1 371 1 48 1 112 1 86 1 241 1 89 1 296 1 
55 1 92 1 227 1 328 2 329 3 330 1 181 1 299 1 35 1 100 1 336 1 285 1 164 1 253 2 130 1 39 1 215 1 132 3 309 1 43 1 369 1 45 1 109 1 313 1 371 1 48 1 112 1 86 1 241 1 296 1 
92 1 227 1 328 2 329 2 181 1 299 1 100 1 35 1 336 1 285 1 253 2 130 1 39 1 215 1 132 2 309 1 43 1 369 1 109 1 313 1 371 1 48 1 112 1 241 1 296 1 
92 2 60 1 329 1 249 1 8 1 285 1 164 1 305 1 214 1 147 1 82 1 39 1 132 1 369 1 45 1 313 2 371 1 348 1 112 2 86 1 241 2 266 1 296 1 
55 1 92 1 329 1 330 1 181 1 299 1 332 1 35 1 100 1 285 1 253 2 39 1 132 1 106 1 309 1 43 1 369 1 45 1 109 1 313 1 371 1 48 1 112 1 86 1 241 1 296 1 
7 1 
327 1 94 4 179 1 95 1 59 1 270 1 273 1 276 1 186 2 285 2 101 1 65 3 147 1 288 1 104 1 343 2 344 1 346 1 70 2 348 2 349 1 111 1 295 1 355 1 296 2 201 1 27 1 29 1 297 1 246 4 298 1 30 1 300 4 126 1 210 1 212 1 303 1 305 1 166 1 82 1 39 1 368 1 369 1 169 1 371 2 318 1 261 1 322 1 265 1 266 1 90 1 91 1 325 1 
368 1 327 1 27 1 342 1 344 1 94 3 95 1 346 1 246 2 70 1 349 1 273 1 111 1 261 1 300 3 210 1 101 1 65 2 355 1 201 1 91 1 325 1 
368 1 327 1 27 1 342 1 268 1 344 1 94 3 95 1 346 1 246 1 70 1 273 1 111 1 261 1 300 3 210 1 302 1 101 1 212 1 65 3 355 1 201 1 91 1 325 1 
27 1 327 1 268 1 94 3 95 1 246 2 273 1 300 3 210 1 302 1 101 1 303 1 212 1 65 3 368 1 342 1 344 1 346 1 70 1 349 1 111 1 261 1 355 1 325 1 91 1 201 1 
2 1 27 2 327 1 268 1 120 1 94 3 95 1 246 2 3 1 273 1 300 3 210 2 302 1 101 1 303 1 65 2 368 1 342 1 344 1 346 2 259 1 151 1 70 1 349 1 111 1 261 1 262 1 242 1 353 1 355 1 91 1 325 2 201 1 
327 1 27 1 268 2 94 4 29 2 179 1 95 1 270 1 297 2 246 4 298 2 273 1 276 2 30 1 300 4 210 1 302 1 186 1 101 1 212 2 303 2 65 4 166 1 104 2 368 1 343 1 344 1 169 1 346 1 70 2 349 2 318 2 111 1 261 1 265 1 355 1 90 1 91 1 325 1 201 1 
27 1 327 1 268 1 94 4 95 1 179 1 270 1 297 2 246 4 298 2 273 1 276 2 300 4 210 1 302 1 186 1 101 1 212 2 303 2 65 4 166 1 190 1 104 2 368 1 133 1 343 1 169 1 344 1 346 1 70 2 349 2 318 2 111 1 261 1 171 1 265 1 355 1 90 1 325 1 91 1 201 1 
27 1 327 1 268 1 94 4 95 1 179 1 270 1 297 2 246 4 298 2 273 1 276 2 300 4 210 1 302 1 186 1 101 1 212 2 303 2 65 4 166 1 190 1 104 2 368 1 133 1 343 1 169 1 344 1 346 1 70 2 349 2 318 2 111 1 261 1 171 1 265 1 355 1 90 1 325 1 91 1 201 1 
27 1 327 1 94 2 29 1 95 1 179 1 270 1 298 1 273 1 250 1 81 1 300 2 210 1 282 1 186 1 101 1 65 2 166 1 190 1 368 1 343 1 344 1 346 1 20 1 318 1 111 1 261 1 265 1 355 1 90 1 325 1 91 1 201 1 
27 1 327 1 268 1 94 4 179 1 95 1 270 1 297 2 246 5 298 2 273 1 276 2 300 4 210 1 162 1 302 1 186 1 101 1 303 3 212 3 65 5 166 1 190 1 104 2 368 1 133 1 343 1 169 1 344 1 346 1 70 2 349 3 318 2 111 1 261 1 171 1 265 1 355 1 90 1 325 1 91 1 201 1 
27 1 327 1 268 1 94 4 179 1 95 1 270 1 297 2 246 5 298 2 273 1 276 2 300 4 210 1 162 1 302 1 186 1 101 1 303 3 212 3 65 5 166 1 190 1 104 2 368 1 133 1 343 1 169 1 344 1 346 1 70 2 349 3 318 2 111 1 261 1 171 1 265 1 355 1 90 1 325 1 91 1 201 1 
327 1 27 1 268 1 94 4 29 2 179 1 95 1 270 1 206 2 246 4 298 2 273 1 250 1 30 1 300 4 210 1 282 2 302 1 186 1 101 1 212 2 303 2 65 4 166 1 368 1 343 1 344 1 346 1 70 2 349 2 318 2 111 1 261 1 265 1 355 1 90 1 91 1 325 1 201 1 
32 1 33 1 99 1 146 1 334 1 185 1 36 1 187 1 252 1 213 1 40 2 255 1 105 1 257 1 312 2 193 1 292 6 152 3 72 2 351 1 321 2 221 3 222 1 323 1 76 1 77 1 
204 3 245 1 158 1 230 1 248 2 277 1 362 1 33 4 127 1 99 2 146 2 185 2 334 11 163 1 36 2 187 1 213 2 40 1 291 3 257 1 312 2 193 2 110 1 69 1 292 14 152 8 72 4 293 1 170 1 374 2 321 1 221 6 323 11 
176 1 2 1 27 1 360 1 180 1 80 1 142 1 277 1 232 1 33 1 210 2 283 1 99 1 146 1 185 1 285 1 187 1 36 1 305 1 304 1 147 1 39 1 369 1 193 1 371 1 69 1 292 2 348 1 84 1 152 1 72 2 170 1 321 1 242 1 221 1 244 1 296 1 325 2 
2 1 180 1 142 1 277 1 331 2 232 2 146 3 99 3 185 3 334 7 285 3 187 3 147 2 105 1 193 3 110 4 69 1 292 20 348 1 152 10 72 6 293 2 242 1 244 2 200 1 77 1 296 3 119 1 27 1 359 2 207 2 248 2 80 2 299 1 32 1 210 3 33 7 36 3 252 1 304 2 305 2 213 3 255 1 40 4 39 2 369 2 257 3 312 8 46 2 371 3 316 1 170 1 374 2 321 2 221 10 222 1 323 7 377 2 325 3 
2 1 142 1 274 1 277 1 233 1 146 2 99 2 185 2 187 2 285 7 103 1 189 1 147 3 108 1 193 2 292 2 152 1 348 2 72 4 351 1 242 1 244 1 296 7 27 1 124 1 299 1 301 1 210 1 128 1 36 2 305 4 37 2 82 1 39 3 369 4 371 6 170 1 221 1 53 1 174 1 89 1 266 1 325 1 
2 1 27 1 120 1 248 1 33 1 210 1 99 1 146 1 334 1 236 1 185 1 36 1 187 1 213 1 40 1 290 1 257 1 312 1 193 1 69 1 292 3 152 1 72 2 293 1 374 1 242 1 221 2 323 1 325 1 
312 1 193 1 110 1 292 2 152 2 72 2 351 1 364 1 33 1 374 1 146 1 99 1 334 1 185 1 187 1 36 1 213 1 323 1 
257 1 312 1 193 1 292 2 72 2 208 1 293 1 351 1 33 1 146 1 99 1 334 1 185 1 187 1 36 1 221 2 323 1 40 1 
248 1 33 2 99 1 146 1 185 1 334 2 36 1 187 1 213 1 40 1 257 1 312 2 193 1 110 1 292 4 152 2 72 2 293 1 351 1 374 1 221 2 323 2 
312 1 193 1 110 1 292 2 152 2 72 2 364 1 33 1 374 1 146 1 99 1 334 1 185 1 187 1 36 1 213 1 189 1 323 1 
257 1 312 1 193 1 292 2 72 2 208 1 293 1 33 1 146 1 99 1 334 1 185 1 187 1 36 1 221 2 189 1 323 1 40 1 
248 1 33 2 99 1 146 1 185 1 334 2 36 1 187 1 213 1 189 1 40 1 257 1 312 2 193 1 110 1 292 4 152 2 72 2 293 1 374 1 221 2 323 2 
248 1 33 2 99 1 146 1 185 1 334 2 36 1 187 1 213 1 40 1 257 1 312 2 193 1 110 1 292 4 152 2 72 2 293 1 374 1 221 2 323 2 
80 1 277 1 232 1 210 1 146 1 99 1 185 1 285 1 187 1 36 1 304 1 305 1 147 1 39 1 369 1 46 1 193 1 371 1 292 2 152 1 348 1 72 2 170 1 321 1 221 1 244 1 296 1 325 1 
1 1 277 1 232 1 210 1 146 1 99 1 185 1 285 1 187 1 36 1 305 1 147 1 39 1 167 1 369 1 193 1 371 1 19 1 292 2 152 1 348 1 72 2 170 1 321 1 221 1 244 1 296 1 325 1 
248 1 33 2 99 1 146 1 185 1 334 2 36 1 187 1 213 1 40 1 257 1 312 2 193 1 110 1 69 1 292 4 152 2 72 2 293 1 374 1 221 2 323 2 
248 1 80 1 331 1 232 1 33 2 210 1 146 1 99 1 334 2 185 1 285 1 187 1 36 1 304 1 305 1 213 1 147 1 40 1 39 1 369 1 257 1 312 2 46 1 193 1 110 1 371 1 292 4 152 2 293 1 72 2 374 1 221 2 244 1 323 2 89 1 296 1 325 1 
2 1 27 1 120 1 228 1 248 1 210 1 33 1 99 1 146 1 236 1 185 1 334 1 36 1 187 1 213 1 257 1 312 1 193 1 110 1 69 1 292 3 152 2 293 1 72 2 374 1 242 1 221 1 323 1 325 1 
204 4 26 1 356 1 58 1 230 3 361 1 248 4 161 1 97 3 365 1 127 1 99 2 146 2 64 1 36 2 188 2 213 4 40 2 191 1 44 1 291 3 257 4 312 5 193 2 110 3 292 31 152 15 71 1 294 1 350 1 72 4 293 4 374 4 155 1 221 16 136 1 
204 4 26 1 356 1 58 1 230 3 361 1 248 4 161 1 97 4 365 1 127 1 99 3 146 3 64 1 36 3 188 2 213 4 40 3 191 1 44 1 291 3 257 3 312 6 193 3 110 3 218 1 292 32 152 17 71 1 294 1 350 1 72 6 293 3 374 4 155 1 221 15 136 1 
204 4 26 1 356 1 58 1 158 2 230 2 361 1 248 7 32 1 161 1 97 4 365 1 127 2 99 2 146 2 36 2 252 1 188 1 213 8 255 1 40 7 105 1 191 1 291 4 257 8 312 15 193 2 110 8 218 1 292 52 152 27 71 1 294 1 350 1 72 4 293 7 374 7 155 1 221 25 222 1 136 1 77 1 
204 2 26 1 56 1 356 1 230 1 361 1 248 2 97 1 365 1 127 1 99 2 146 2 36 2 188 1 213 2 40 1 191 1 44 1 291 1 257 2 312 2 193 2 110 1 292 13 152 6 72 4 293 2 374 2 221 7 
204 2 26 1 356 2 58 1 361 1 230 2 248 3 161 1 97 3 365 1 99 2 146 2 36 2 188 2 213 3 40 1 191 1 257 2 291 2 312 2 193 2 110 1 218 1 292 23 152 13 71 1 294 1 350 1 72 4 293 2 374 3 221 10 155 1 136 1 
31 1 211 1 284 1 102 1 83 1 287 1 317 1 367 1 209 1 196 1 
366 1 141 1 
42 1 211 1 93 1 199 1 287 1 317 1 367 1 209 1 196 1 
310 1 192 1 
116 1 173 1 14 1 
340 1 268 1 94 1 83 1 317 1 196 1 209 1 363 1 31 1 300 1 211 1 11 2 102 1 287 1 306 1 354 1 367 1 256 1 
340 1 268 1 94 1 83 1 317 1 196 1 209 1 363 1 31 1 300 1 211 1 11 2 102 1 287 1 306 1 354 1 367 1 256 1 
340 1 268 1 94 1 83 1 317 1 196 1 209 1 363 1 31 1 300 1 211 1 11 2 102 1 287 1 306 1 354 1 367 1 256 1 
116 1 310 1 192 1 
116 1 310 1 192 1 
173 1 14 1 
116 1 173 1 14 1 
12 1 61 1 
2 2 27 2 28 1 94 1 141 1 209 1 61 1 300 1 210 2 211 1 11 1 129 1 366 1 12 1 306 1 337 1 287 1 367 1 168 1 256 1 308 1 317 1 196 1 321 1 242 2 352 1 325 2 
27 2 274 1 277 1 233 1 210 2 146 1 99 1 185 1 285 2 187 1 36 1 305 1 37 2 147 1 338 1 39 1 15 1 369 1 148 1 193 1 371 2 69 1 292 2 152 1 72 2 170 1 75 1 221 1 264 1 296 2 325 2 
55 1 309 1 369 1 43 1 109 1 178 1 313 1 371 2 181 1 299 1 144 1 35 1 100 1 375 1 285 2 253 2 39 1 89 1 296 2 
55 1 309 1 43 1 369 1 109 1 313 1 371 1 181 1 319 1 299 1 144 1 35 1 100 1 285 1 253 2 39 1 296 1 
369 1 313 1 371 1 348 1 249 1 375 1 285 1 305 1 147 1 39 1 82 1 225 1 266 1 296 1 
55 1 309 1 369 1 43 1 109 1 178 1 313 1 371 1 181 1 299 1 144 1 35 1 100 1 375 1 285 1 253 2 39 1 296 1 
260 1 
125 1 343 1 268 1 302 1 186 1 79 1 76 1 
268 2 94 1 179 1 29 1 270 1 297 1 246 1 276 1 300 1 302 1 186 1 166 1 104 1 343 1 169 1 70 1 90 1 
66 1 369 2 179 1 371 1 270 1 229 1 348 1 145 1 285 1 305 1 244 1 88 1 147 1 166 1 39 1 90 1 296 1 
204 1 268 3 58 1 29 6 179 1 270 1 297 3 4 1 230 1 248 2 5 5 161 1 186 4 213 2 166 1 291 1 257 2 343 6 350 1 293 2 374 2 155 1 24 5 136 1 90 1 
2 1 27 1 94 1 120 1 179 1 270 1 4 2 3 1 300 1 210 1 186 2 252 1 238 1 213 2 166 1 255 1 307 1 133 1 257 1 343 2 346 1 259 1 262 1 242 1 353 1 77 1 90 1 325 1 
268 1 343 1 179 1 270 1 79 1 125 1 302 1 186 1 166 1 90 1 
307 1 257 2 268 5 343 5 29 10 297 5 207 1 4 2 248 2 293 2 5 5 374 2 186 5 213 2 24 5 
300 1 268 1 302 1 94 1 246 1 70 1 
177 1 94 3 179 2 59 1 270 1 246 4 300 3 126 2 63 2 186 2 285 4 305 1 147 1 166 2 39 1 82 1 369 1 311 1 343 2 371 4 348 2 70 2 153 1 295 1 322 2 224 1 90 2 266 1 296 4 
2 2 27 2 120 2 3 1 80 1 277 1 232 1 210 3 99 1 146 1 185 1 36 1 285 1 187 1 304 1 305 1 147 1 39 1 369 1 193 1 46 1 371 1 292 1 348 1 72 2 113 1 321 1 242 2 221 1 244 1 296 1 325 3 
343 1 268 4 29 4 179 1 270 1 297 2 5 2 126 1 302 2 186 2 322 1 24 2 166 1 90 1 105 1 
372 1 317 1 209 1 
137 1 12 1 83 1 317 1 209 1 
372 1 317 1 209 1 
372 1 317 1 209 1 
317 1 41 1 209 1 
317 1 41 1 209 1 
317 1 41 1 209 1 
317 1 209 1 
211 1 367 1 
204 1 230 1 32 1 365 1 99 1 146 1 36 1 252 1 213 1 40 2 255 1 105 1 257 1 291 1 312 2 193 1 292 8 152 4 72 2 221 4 222 1 136 1 77 1 
204 2 230 1 248 1 32 1 365 1 127 1 99 2 146 2 36 2 252 1 213 2 255 1 40 2 105 1 257 1 291 1 312 3 193 2 194 1 110 1 292 11 152 6 72 4 374 1 221 5 222 1 136 1 77 1 
204 1 58 1 230 1 248 2 161 1 365 1 99 2 146 2 36 2 213 2 40 1 291 1 257 2 312 2 194 1 193 2 110 1 292 12 152 6 72 4 293 2 350 1 374 2 221 6 155 1 136 1 
204 1 58 1 230 1 248 2 32 1 161 1 365 1 99 3 146 3 36 3 252 1 213 3 255 1 40 2 105 1 291 1 257 2 312 4 194 1 193 3 110 2 218 1 292 17 152 10 72 6 293 1 350 1 374 2 221 7 155 1 222 1 136 1 77 1 
204 1 230 1 32 1 365 1 99 1 146 1 36 1 252 1 213 1 40 2 255 1 105 1 257 1 291 1 312 2 193 1 292 8 152 4 72 2 221 4 222 1 136 1 77 1 
204 1 58 1 230 1 248 2 161 1 365 1 99 1 146 1 36 1 213 2 291 1 257 2 312 1 193 1 110 1 292 12 152 6 72 2 293 2 350 1 374 2 221 6 155 1 136 1 
204 1 58 1 230 1 248 2 161 1 365 1 99 3 146 3 36 3 213 2 40 1 291 1 257 1 312 2 194 1 193 3 110 1 218 1 292 11 152 7 350 1 72 6 293 1 374 2 221 4 155 1 136 1 
204 1 58 1 230 1 248 3 161 1 365 1 99 4 146 4 36 4 213 3 40 3 44 1 291 1 257 2 312 6 193 4 110 3 218 2 292 16 152 9 350 1 72 8 293 2 374 3 221 7 155 1 136 1 
257 1 312 6 110 3 292 7 152 3 32 1 221 4 252 3 222 2 213 1 40 3 255 1 77 3 
204 1 58 1 230 1 248 2 32 1 161 1 365 1 99 4 146 4 36 4 252 1 213 3 255 1 40 4 105 1 44 1 291 1 257 2 312 5 193 4 110 1 218 2 292 18 152 10 350 1 72 8 293 1 374 2 221 8 155 1 222 1 136 1 77 1 
257 1 312 3 193 2 110 1 218 1 292 8 152 4 72 4 32 1 146 2 99 2 221 4 36 2 252 1 213 1 222 1 255 1 40 2 77 1 105 1 
32 1 257 1 312 2 221 3 252 1 213 1 222 1 292 6 152 3 255 1 40 2 76 1 77 1 105 1 
257 1 312 2 194 1 193 1 110 1 292 4 152 2 248 1 293 1 72 2 374 1 146 1 99 1 221 2 36 1 213 1 40 1 
204 2 257 1 291 1 312 2 110 1 292 7 152 3 230 1 248 1 293 1 127 1 374 1 221 4 213 1 40 1 
204 2 245 1 118 1 158 1 248 2 32 1 127 1 146 2 99 2 36 2 252 2 213 3 255 1 40 5 105 1 291 2 257 3 312 9 193 2 110 4 218 2 292 23 152 11 293 2 72 4 374 2 221 12 222 1 77 2 
204 1 221 1 292 1 
291 1 292 1 152 1 
257 1 312 3 193 1 194 1 110 1 292 6 207 1 152 3 248 1 72 2 293 1 374 1 99 1 146 1 36 1 221 3 213 1 40 2 
204 1 58 1 230 1 248 2 161 1 365 1 99 1 146 1 36 1 213 2 40 1 291 1 257 2 312 2 193 1 110 1 292 12 152 6 72 2 293 2 350 1 374 2 221 6 155 1 136 1 
257 1 312 2 110 1 292 6 152 3 221 3 252 1 213 1 255 1 40 1 77 1 
118 1 312 2 193 1 110 1 218 1 292 3 152 1 72 2 32 1 146 1 99 1 221 2 36 1 252 1 222 1 40 1 77 1 
257 2 312 5 193 1 110 2 292 10 152 5 72 2 365 1 99 1 146 1 36 1 221 5 252 2 238 1 213 2 40 3 255 1 77 2 
312 1 193 1 110 1 292 2 152 2 72 2 365 1 374 1 146 1 99 1 36 1 213 1 
257 1 312 2 193 1 110 1 292 4 152 2 248 1 293 1 72 2 365 1 374 1 146 1 99 1 221 2 36 1 213 1 40 1 
118 1 44 1 312 2 193 3 110 1 218 1 292 3 152 1 72 6 365 1 146 3 99 3 221 2 36 3 252 1 40 1 77 1 
204 4 118 1 230 1 248 3 6 1 32 1 98 1 365 1 127 1 99 5 146 5 36 5 252 3 213 5 255 2 40 7 105 1 44 1 291 3 257 5 312 12 194 1 193 5 110 5 218 2 292 34 152 16 72 10 293 3 74 1 374 3 221 18 222 1 77 3 
341 1 210 1 27 1 281 1 321 1 325 1 91 1 
341 1 27 1 269 1 195 1 159 1 281 1 210 1 321 1 62 1 235 1 91 1 325 1 
369 1 285 1 371 1 305 1 147 1 348 1 39 1 82 1 76 1 266 1 296 1 
369 1 2 1 27 1 371 1 348 1 142 1 80 1 232 1 210 2 321 1 242 1 285 1 305 1 244 1 147 1 39 1 325 2 296 1 
2 1 27 2 122 1 80 1 142 1 232 1 210 2 63 1 285 1 305 3 147 2 39 1 369 1 344 1 346 2 371 1 220 1 321 1 242 2 114 1 244 2 296 1 325 2 201 1 
2 1 27 2 122 1 142 1 232 1 210 2 63 1 285 1 305 3 147 2 39 1 167 1 369 1 344 1 346 2 371 1 220 1 321 1 242 2 114 1 244 2 296 1 325 2 201 1 
2 1 27 1 268 1 120 1 94 2 95 1 246 1 3 1 275 1 300 2 210 1 302 1 63 1 285 1 305 4 147 1 39 1 66 1 369 1 346 1 259 1 314 1 371 1 262 1 220 1 242 1 114 1 172 1 244 1 353 1 325 1 296 1 
2 1 27 1 268 1 120 1 358 1 94 2 95 1 246 1 3 1 300 2 210 1 302 1 63 1 285 1 305 4 147 1 39 1 66 1 369 1 346 1 259 1 371 1 262 1 220 1 242 1 114 1 172 1 244 1 353 1 325 1 296 1 
369 1 154 1 285 1 371 1 39 1 296 1 
229 1 124 1 274 1 299 1 301 1 285 6 305 3 103 1 37 1 147 2 39 2 369 3 108 1 371 5 315 1 348 2 244 1 174 1 89 1 296 6 
2 1 142 1 331 1 232 1 146 2 99 2 185 2 334 1 285 1 187 2 338 1 147 1 105 1 193 2 69 1 292 6 152 3 72 4 242 1 244 1 77 1 296 1 27 1 80 1 32 1 33 1 210 2 36 2 304 1 305 1 252 1 213 1 39 1 40 2 255 1 369 1 257 1 312 2 46 1 371 1 321 2 221 3 222 1 323 1 89 1 377 1 325 2 
226 1 268 1 94 3 358 1 179 2 95 1 270 2 79 1 246 2 300 3 125 1 302 1 186 1 285 1 305 2 166 2 66 1 311 1 343 1 371 1 348 1 70 1 87 1 172 1 352 1 376 1 90 2 296 1 
369 2 371 1 47 1 229 1 154 1 145 1 285 1 172 1 305 1 244 1 147 1 39 1 296 1 
326 1 369 1 285 4 371 4 305 1 68 1 147 1 348 1 39 1 82 1 89 1 266 1 296 4 
369 2 371 2 124 1 128 1 63 1 285 2 305 1 244 1 147 1 174 1 53 1 39 1 200 1 296 2 
309 1 369 1 109 1 285 1 371 1 253 1 348 1 181 1 39 1 296 1 
369 1 371 2 274 1 299 1 285 2 264 1 305 1 147 1 89 1 39 1 296 2 
369 2 108 1 371 4 68 1 348 1 274 1 301 1 63 1 285 5 305 3 147 2 82 1 89 1 39 2 266 1 296 5 
369 2 108 1 371 4 68 1 348 1 274 1 21 1 63 1 285 5 305 3 147 2 82 1 89 1 39 2 266 1 296 5 
369 1 2 1 27 1 371 1 348 1 142 1 232 1 210 2 321 1 242 1 285 1 305 1 244 1 147 1 167 1 39 1 325 2 296 1 
369 2 371 1 315 1 229 1 124 1 63 1 285 1 305 1 244 1 147 1 174 1 39 1 296 1 
148 1 22 2 52 1 49 1 
240 1 300 1 148 1 94 1 22 2 271 1 52 1 352 1 219 1 49 1 
148 1 22 1 52 1 49 1 
22 1 271 1 219 1 
336 1 130 1 76 1 215 1 
132 1 86 1 45 1 336 1 329 1 130 1 215 1 
112 1 132 1 92 1 
132 3 370 2 45 1 78 1 329 3 143 1 86 1 332 1 336 1 115 1 130 1 215 1 
132 2 86 1 45 1 336 1 328 1 329 2 130 1 254 1 215 1 
67 1 132 1 86 1 332 1 157 1 45 1 35 1 253 1 329 1 181 1 
132 1 86 1 332 1 45 1 329 1 130 1 215 1 
132 1 86 1 332 1 45 1 336 1 329 1 130 2 
132 2 45 2 150 1 329 2 86 2 50 1 332 1 335 1 130 1 215 1 
132 3 357 1 45 1 157 1 328 2 329 3 272 1 86 1 332 1 336 1 130 1 215 1 131 1 
132 2 25 1 45 1 109 1 328 1 329 2 181 1 86 1 332 1 100 1 35 1 336 1 253 2 130 1 215 1 
132 4 357 1 57 1 45 2 157 1 328 2 329 4 86 2 332 1 336 1 130 1 254 1 215 1 
132 1 86 1 332 1 45 1 336 1 329 1 130 1 215 1 
54 1 132 4 357 1 370 1 45 1 157 1 328 2 78 1 329 4 143 1 86 1 336 2 130 2 215 2 
117 1 132 2 86 1 332 1 45 1 333 1 336 1 328 1 329 2 130 1 215 1 17 1 
143 2 251 1 132 3 86 1 370 2 332 1 45 1 336 1 78 1 329 3 130 1 215 1 
239 1 134 2 149 1 215 2 
160 1 132 1 86 1 332 1 45 1 329 1 
132 2 86 1 332 1 45 1 336 1 328 1 329 2 272 1 130 1 215 1 
258 1 
132 1 86 1 332 1 45 1 336 1 329 1 130 1 215 1 
132 3 370 1 45 1 328 1 329 3 272 1 86 1 332 1 336 1 130 1 215 1 
132 1 357 1 157 1 328 1 329 1 
130 1 215 1 

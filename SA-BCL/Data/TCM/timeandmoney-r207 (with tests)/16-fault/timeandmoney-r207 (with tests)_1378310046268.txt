#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 258 163 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 258 163 219 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 91 235 220 321 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 91 235 220 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 258 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 91 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 91 272 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 151 185 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1651 | return null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
42 1 169 2 123 1 240 9 44 2 2 1 244 1 225 5 270 2 339 2 99 2 198 1 252 1 55 4 128 2 277 1 112 1 33 1 113 9 114 3 129 1 261 1 17 6 115 1 324 2 299 1 39 1 264 1 
42 1 169 2 123 1 240 9 44 2 2 1 244 1 225 5 270 2 339 2 99 2 198 1 252 1 55 4 128 2 277 1 112 1 33 1 113 9 114 3 129 1 261 1 17 6 115 1 324 2 299 1 39 1 264 1 
42 1 169 2 123 1 240 10 44 2 2 1 244 1 225 6 270 2 339 2 99 2 198 1 252 1 55 5 128 2 277 1 112 1 33 1 113 10 114 4 129 1 261 1 17 7 115 1 324 2 299 1 39 1 264 1 
42 1 169 2 123 1 240 7 44 2 2 1 244 1 225 4 270 2 339 2 99 2 198 1 252 1 55 3 128 1 277 1 112 1 33 1 113 7 114 2 129 1 261 1 17 4 324 2 299 1 39 1 264 1 
42 1 169 1 240 4 44 1 112 1 114 1 113 4 225 3 17 3 115 1 339 1 324 1 99 1 299 1 252 1 264 1 55 2 128 2 
42 1 169 1 123 1 240 2 44 1 112 1 113 2 225 1 270 1 324 1 99 1 198 1 252 1 201 1 68 1 29 1 
42 1 240 3 112 1 113 3 114 1 225 2 261 1 17 1 270 1 324 2 99 2 252 1 55 1 
42 1 169 1 240 9 44 1 2 1 225 5 270 1 339 1 99 2 252 1 55 4 128 2 140 1 112 1 114 3 113 9 260 1 261 1 17 7 115 1 324 2 299 1 39 1 264 1 
42 1 169 1 240 9 44 1 2 1 225 5 270 1 339 1 99 2 252 1 55 4 128 2 140 1 112 1 114 3 113 9 260 1 261 1 17 7 115 1 324 2 299 1 39 1 264 1 
5 1 87 1 119 1 
5 1 212 2 250 1 
207 2 344 2 340 2 171 1 124 2 107 1 330 2 186 2 
168 2 132 1 148 1 304 1 171 1 188 1 124 3 247 1 172 1 98 2 340 2 82 1 102 1 103 1 107 1 206 1 233 1 10 1 207 2 344 3 294 1 110 1 345 2 32 1 60 1 158 1 346 1 61 1 181 1 142 1 20 1 183 2 329 1 146 1 330 2 186 2 23 2 
207 1 344 1 165 1 340 1 171 1 124 1 21 1 330 1 96 1 186 1 
344 1 259 1 124 1 306 1 5 1 48 1 96 1 323 1 6 1 340 1 167 1 184 1 327 1 119 1 
207 1 344 1 259 1 124 1 306 1 5 1 48 2 96 1 6 2 323 1 340 1 167 1 119 1 330 1 186 1 
6 1 48 1 283 1 336 1 127 1 
6 2 159 1 5 1 48 2 119 1 348 1 283 1 127 1 
6 1 48 1 283 1 
207 1 344 1 171 1 124 1 46 1 48 1 96 1 127 1 6 1 165 1 340 1 21 1 330 1 186 1 
5 1 
90 1 6 2 5 1 48 2 119 1 348 1 283 1 127 1 
241 1 242 1 297 1 133 1 320 1 4 1 189 2 5 1 48 5 348 1 127 2 322 1 6 5 197 1 202 2 253 1 119 1 30 2 283 2 
87 1 107 1 
207 1 11 1 344 2 124 2 340 2 143 1 107 2 330 1 186 1 
79 1 161 1 354 1 
132 1 344 1 148 1 294 1 110 1 32 1 124 1 346 1 247 1 172 1 98 1 183 1 69 1 146 1 107 1 23 1 
132 1 207 1 148 1 344 2 294 1 176 1 110 1 32 1 124 2 346 1 150 1 247 1 172 1 98 1 340 1 183 1 146 1 330 1 354 1 23 1 
207 3 344 3 176 1 340 3 124 3 107 1 330 3 186 1 
207 1 344 1 340 1 124 1 21 1 330 1 96 1 
207 1 11 1 344 1 340 1 124 1 143 1 330 1 96 1 186 1 
168 1 132 1 148 1 304 1 171 1 124 4 306 1 150 1 48 1 247 1 172 1 96 1 6 1 98 1 340 3 82 1 102 1 103 1 107 1 206 1 233 1 10 1 207 3 344 4 294 1 176 1 110 1 259 1 345 2 32 1 319 1 60 1 158 1 346 1 323 1 282 1 143 1 20 1 167 1 183 1 146 1 330 3 186 2 23 1 
207 1 344 2 176 1 340 2 124 2 327 1 107 1 330 1 343 1 
207 3 344 3 176 2 259 1 124 3 306 1 5 1 48 1 150 1 75 1 96 1 6 1 323 1 340 3 282 1 143 1 167 1 330 3 186 1 
207 1 344 1 340 1 124 1 143 1 330 1 354 1 186 1 
132 1 344 1 148 1 294 1 110 1 32 1 124 1 346 1 247 1 172 1 98 1 183 1 146 1 107 1 23 1 
132 1 344 1 294 1 93 1 45 1 32 1 124 1 346 1 247 1 172 1 349 1 96 1 98 1 183 1 146 1 107 1 23 1 
168 2 10 2 304 1 139 1 345 2 158 1 60 1 214 1 116 1 166 1 79 1 229 1 82 1 354 1 233 1 206 1 
207 1 344 1 340 1 124 1 167 1 88 1 330 1 96 1 
207 4 344 5 176 2 124 5 150 1 267 1 94 1 340 5 143 1 327 1 107 1 330 4 343 1 186 1 
207 2 344 2 340 2 124 2 21 1 88 1 330 2 96 1 
173 1 342 1 
173 1 342 1 
58 1 105 1 
58 1 105 1 
58 1 105 1 
170 1 173 1 342 1 
170 1 173 1 342 1 
218 1 173 1 342 1 
58 1 173 2 13 1 111 1 342 2 105 1 
170 1 173 1 342 1 
221 1 173 1 342 1 
221 1 173 1 342 1 
221 1 173 1 342 1 
258 1 173 1 154 1 47 1 342 1 163 1 
6 1 219 1 258 1 173 1 154 1 47 1 342 1 48 1 163 1 
169 1 339 1 44 1 
169 1 44 1 29 1 
194 1 339 2 288 1 57 1 44 3 29 1 
194 1 339 1 257 1 288 1 44 2 29 1 
194 1 339 1 288 2 44 2 29 1 
41 1 217 2 242 3 187 2 4 2 189 1 48 5 5 2 337 1 250 1 127 4 49 1 195 1 6 5 153 1 229 1 197 1 52 1 202 1 174 1 30 1 138 1 208 1 109 1 212 3 348 1 166 1 182 1 70 2 118 1 119 1 238 1 283 1 
217 6 4 6 5 5 48 9 49 2 6 9 229 3 174 4 9 1 138 1 179 5 182 3 66 1 118 2 70 6 119 1 283 6 238 3 332 1 241 1 242 8 189 2 127 7 336 5 250 3 195 3 197 1 80 1 202 2 30 2 208 3 86 1 348 1 212 9 352 1 166 3 38 1 
41 1 217 2 332 1 241 1 242 3 187 1 189 1 4 2 5 3 48 3 250 2 127 2 49 1 6 3 195 1 153 1 229 1 202 1 174 1 30 1 208 1 212 4 166 1 182 1 118 1 70 2 119 1 238 1 
41 1 217 4 332 1 241 1 242 5 187 2 189 1 4 4 5 4 48 4 250 3 127 3 49 1 6 4 195 2 153 1 229 2 202 1 174 2 30 1 208 2 86 1 212 7 166 2 182 2 66 1 70 4 38 1 118 1 119 1 238 2 
155 1 87 1 172 1 
26 1 172 1 
232 1 
132 1 172 1 
132 1 276 1 247 1 172 3 155 2 232 1 104 1 
132 1 247 1 172 1 
172 1 137 1 
10 3 168 7 191 1 142 4 195 1 164 1 227 2 166 1 230 1 341 1 326 1 51 1 144 1 145 1 273 3 54 2 22 1 
10 3 168 7 191 1 142 4 195 1 164 1 227 2 166 1 230 1 341 1 326 1 51 1 144 1 145 1 273 3 54 2 22 1 
10 3 168 7 191 1 142 4 195 1 164 1 227 2 166 1 230 1 341 1 326 1 51 1 144 1 145 1 273 3 175 1 54 2 22 1 
168 31 304 1 91 1 243 4 289 1 125 3 191 1 251 1 195 4 227 5 230 1 341 2 229 3 82 1 51 5 203 1 204 1 54 3 273 10 206 1 10 15 208 3 345 2 60 1 15 1 142 16 350 1 164 2 166 4 326 1 144 1 145 2 238 3 22 2 
168 9 304 2 222 1 191 1 195 1 227 3 341 1 230 1 82 2 51 1 314 1 204 1 54 2 273 4 206 2 10 4 345 4 60 2 142 5 164 1 166 1 144 1 145 1 22 1 
42 1 169 1 0 1 240 2 44 2 225 1 338 1 270 1 339 1 98 1 196 1 226 1 271 1 99 1 228 1 252 1 28 1 106 1 29 1 57 1 32 1 112 1 113 2 17 1 324 1 183 1 265 1 146 1 147 1 23 1 
42 1 169 1 0 1 240 3 44 2 309 1 225 1 338 1 311 1 270 1 339 1 98 1 196 1 226 1 99 1 228 1 28 1 106 1 29 1 31 1 57 1 32 1 112 1 113 3 17 2 324 1 183 1 265 1 146 1 23 1 
42 1 0 1 169 1 240 2 44 2 309 1 225 1 270 1 338 1 311 1 98 1 339 1 228 1 28 1 106 1 29 1 57 1 32 1 112 1 113 2 17 2 183 1 265 1 146 1 23 1 
132 1 240 1 172 1 338 2 270 2 98 1 99 1 28 2 136 1 234 1 31 1 32 1 346 1 113 1 62 1 324 1 262 1 183 1 263 1 265 2 146 1 120 1 23 1 
169 1 0 1 240 1 44 2 338 1 311 1 270 1 339 1 98 1 196 1 226 1 99 1 228 1 252 1 28 1 106 1 29 1 57 1 32 1 113 1 324 1 183 1 265 1 146 1 147 1 23 1 
333 1 
132 1 306 1 4 2 5 2 48 5 308 2 268 1 172 1 96 1 49 1 6 5 98 2 8 1 135 1 316 1 141 1 62 1 279 1 323 1 67 2 183 2 184 1 327 1 119 1 146 1 283 6 23 2 287 2 242 2 72 1 124 1 189 1 126 4 190 2 74 1 76 2 250 2 78 2 340 1 197 1 292 1 202 1 30 1 344 1 259 1 32 1 346 2 212 2 348 3 351 1 215 1 262 1 216 1 167 1 302 2 
344 1 90 1 141 1 259 1 124 1 306 1 126 2 48 3 190 1 348 1 268 1 74 1 96 1 323 1 6 3 340 1 216 1 167 1 184 1 327 1 316 1 283 2 
344 1 90 1 141 1 259 1 124 1 306 1 5 1 126 3 48 3 348 1 268 1 74 1 96 1 323 1 6 3 340 1 216 1 67 1 167 1 184 1 327 1 119 1 316 1 283 1 
90 1 124 1 306 1 48 3 126 3 5 1 190 1 74 1 268 1 96 1 6 3 340 1 316 1 344 1 259 1 141 1 348 1 323 1 216 1 167 1 67 1 327 1 184 1 119 1 302 1 283 2 
90 1 306 1 4 1 48 5 5 5 268 1 308 2 96 1 95 1 6 5 8 1 316 1 275 1 141 1 323 1 67 4 184 1 327 1 119 5 283 7 239 1 287 2 72 1 242 1 124 1 189 1 126 6 190 4 74 1 76 2 250 2 78 2 340 1 197 1 202 1 83 1 30 1 344 1 259 1 348 3 35 1 216 1 167 1 302 4 
287 2 242 1 72 1 124 1 306 1 4 1 189 1 5 2 48 4 126 4 190 2 308 2 74 1 268 1 76 2 250 2 96 1 78 2 6 4 340 1 8 1 197 1 135 1 202 1 316 1 30 1 344 1 141 1 259 1 348 2 212 2 323 1 216 1 67 2 167 1 184 1 327 1 119 1 302 2 283 4 
287 2 242 1 72 1 124 1 306 1 4 1 189 1 5 1 48 4 126 4 190 2 308 2 74 1 268 1 76 2 250 2 96 1 95 1 78 2 6 4 340 1 8 1 197 1 202 1 83 1 316 1 30 1 344 1 275 1 259 1 141 1 348 2 323 1 216 1 67 2 167 1 327 1 184 1 119 1 302 2 283 4 
287 2 242 1 72 1 124 1 306 1 4 1 189 1 5 1 48 4 126 4 190 2 308 2 74 1 268 1 76 2 250 2 96 1 95 1 78 2 6 4 340 1 8 1 197 1 202 1 83 1 316 1 30 1 344 1 275 1 259 1 141 1 348 2 323 1 216 1 67 2 167 1 327 1 184 1 119 1 302 2 283 4 
171 1 306 1 46 1 4 1 48 4 5 1 224 1 268 1 96 2 6 4 8 1 316 1 141 1 323 1 21 1 184 1 327 1 119 1 283 2 330 1 186 1 285 1 121 1 287 2 242 1 124 2 189 1 126 2 74 1 78 2 340 2 197 1 202 1 83 1 30 1 207 1 344 2 259 1 296 2 212 2 348 2 165 1 216 1 167 1 300 2 
287 2 242 1 72 1 124 1 306 1 4 1 189 1 5 1 48 4 126 5 190 3 308 2 74 1 268 1 76 2 250 2 96 1 95 1 78 2 6 4 340 1 8 1 197 1 202 1 83 1 316 1 30 1 344 1 275 1 259 1 141 1 348 2 323 1 216 1 167 1 67 3 327 1 184 1 119 1 302 3 283 5 239 1 
287 2 242 1 72 1 124 1 306 1 4 1 189 1 5 1 48 4 126 5 190 3 308 2 74 1 268 1 76 2 250 2 96 1 95 1 78 2 6 4 340 1 8 1 197 1 202 1 83 1 316 1 30 1 344 1 275 1 259 1 141 1 348 2 323 1 216 1 167 1 67 3 327 1 184 1 119 1 302 3 283 5 239 1 
121 1 287 1 242 1 124 1 306 1 4 1 189 1 48 3 126 2 74 1 268 1 96 1 78 1 6 3 340 1 8 1 197 1 135 1 202 1 316 1 30 1 344 1 141 1 259 1 296 1 348 1 212 1 323 1 216 1 300 1 167 1 184 1 327 1 283 1 
168 6 304 1 191 1 195 1 227 2 79 1 341 1 230 1 82 1 273 2 107 2 54 1 206 1 233 1 10 3 139 1 345 2 60 1 158 1 161 1 87 1 142 3 166 1 144 1 145 1 354 1 
168 9 304 2 243 2 290 1 125 2 96 1 195 2 79 7 82 2 102 1 51 1 156 1 107 1 254 1 273 1 206 2 233 2 10 3 157 1 208 2 84 1 345 4 60 2 158 1 161 6 15 1 349 1 142 6 238 2 354 7 
132 1 331 1 168 2 148 1 304 1 124 2 188 1 150 1 223 1 247 1 172 1 98 1 340 1 82 1 102 1 107 1 206 1 233 1 207 1 10 1 157 1 344 2 294 1 176 1 110 1 32 1 345 2 346 1 158 1 60 1 161 1 142 1 65 1 183 1 69 1 146 1 330 1 23 1 
168 5 132 1 304 2 172 1 98 1 227 1 100 1 102 1 103 1 273 1 233 2 10 2 176 1 110 1 60 2 178 1 142 3 325 1 183 1 237 1 146 1 238 1 330 1 23 1 148 1 124 2 246 1 150 1 247 1 195 1 340 1 79 2 82 2 206 2 207 1 344 2 157 1 294 1 208 1 345 4 32 1 346 1 158 2 161 1 354 2 
168 2 132 2 304 2 124 1 188 1 248 1 172 3 311 1 98 7 312 1 271 1 340 1 82 2 101 1 102 1 108 1 206 2 233 2 207 1 10 1 344 1 176 1 139 1 32 2 345 4 346 2 60 2 158 2 14 1 211 1 62 1 181 2 142 1 262 1 281 1 183 8 146 2 330 1 23 8 
168 3 304 1 124 1 195 1 227 1 340 1 79 1 229 1 82 1 273 1 206 1 233 1 207 1 10 2 157 1 344 1 208 1 345 2 60 1 158 1 161 1 278 1 142 1 166 1 143 1 238 1 330 1 354 1 186 1 
168 2 304 1 139 1 24 1 208 1 345 2 158 1 60 1 142 2 195 1 79 1 82 1 354 1 233 1 206 1 
168 2 10 2 304 1 139 1 345 2 158 1 60 1 214 1 166 1 79 1 229 1 82 1 354 1 233 1 206 1 
168 2 304 1 139 1 208 1 345 2 158 1 60 1 142 2 195 1 79 1 82 1 238 1 354 1 233 1 206 1 
168 2 304 1 24 1 208 1 345 2 158 1 60 1 211 1 142 2 195 1 79 1 82 1 354 1 233 1 206 1 
168 2 10 2 304 1 345 2 158 1 60 1 211 1 214 1 166 1 79 1 229 1 82 1 354 1 233 1 206 1 
168 2 304 1 208 1 345 2 158 1 60 1 211 1 142 2 195 1 79 1 82 1 238 1 354 1 233 1 206 1 
168 2 304 1 208 1 345 2 158 1 60 1 142 2 195 1 79 1 82 1 238 1 354 1 233 1 206 1 
168 2 132 1 148 1 304 1 188 1 124 1 247 1 172 1 98 1 82 1 103 1 102 1 107 1 233 1 206 1 10 1 344 1 294 1 110 1 32 1 345 2 346 1 158 1 60 1 142 1 183 1 146 1 23 1 
168 1 132 1 304 1 45 1 93 1 3 1 124 1 247 1 172 1 96 1 98 1 82 1 102 1 107 1 233 1 206 1 10 1 344 1 294 1 32 1 345 2 346 1 158 1 60 1 349 1 183 1 146 1 23 1 
168 2 157 1 304 1 208 1 345 2 158 1 60 1 142 2 195 1 79 1 82 1 238 1 354 1 233 1 206 1 
168 2 132 1 148 1 304 1 124 1 246 1 247 1 172 1 195 1 98 1 271 1 79 1 82 1 103 1 233 1 206 1 344 1 294 1 208 1 110 1 32 1 345 2 158 1 60 1 142 2 183 1 146 1 238 1 354 1 23 1 
168 2 304 1 124 1 195 1 340 1 79 1 82 1 51 1 273 1 206 1 233 1 207 1 157 1 344 1 208 1 345 2 60 1 158 1 161 1 16 1 142 2 143 1 238 1 330 1 186 1 354 1 
131 1 168 9 304 2 91 1 220 1 305 1 243 2 125 1 307 1 195 1 227 1 229 1 82 2 51 1 314 1 273 2 317 1 206 2 10 5 208 1 345 4 60 2 321 1 15 1 142 4 166 1 235 1 238 1 
131 1 168 9 304 2 91 1 220 1 305 1 243 2 125 1 307 1 195 1 227 1 229 1 82 2 51 1 314 1 273 2 317 1 206 2 10 5 208 1 345 4 60 2 321 1 15 1 142 4 166 1 235 1 238 1 
168 9 131 1 304 1 91 1 220 1 243 1 125 1 191 1 195 1 227 1 341 1 230 1 82 1 314 1 54 1 273 1 317 1 206 1 10 4 345 2 60 1 321 1 142 5 166 1 235 1 144 1 145 1 
131 1 168 13 304 2 91 1 220 1 305 1 243 2 125 1 195 2 227 1 229 2 82 2 51 1 314 1 273 2 317 1 206 2 10 7 208 2 345 4 60 2 321 1 15 1 142 6 166 2 235 1 328 1 130 1 238 2 
168 4 131 1 10 2 304 1 91 1 220 2 345 2 243 1 60 1 321 1 125 1 142 2 235 2 82 1 314 1 317 1 206 1 
132 1 168 2 304 1 124 2 188 1 245 1 172 1 98 2 340 2 7 1 50 1 82 1 102 1 108 1 206 1 233 1 255 1 10 1 157 1 344 2 32 1 345 2 158 1 60 1 181 2 142 1 18 1 281 1 183 2 146 1 23 2 
169 1 0 1 57 1 44 2 32 1 347 1 310 1 311 1 339 1 98 2 226 1 271 1 89 1 183 2 146 1 28 1 29 1 106 1 23 2 
169 1 0 1 43 1 57 1 44 2 32 1 310 1 311 1 339 1 98 1 226 1 183 1 28 1 146 1 29 1 106 1 23 1 
132 1 234 1 32 1 346 1 62 1 347 1 172 1 98 1 262 1 231 1 183 1 146 1 28 1 23 1 
169 1 0 1 57 1 44 2 32 1 347 1 310 1 311 1 339 1 98 1 226 1 89 1 183 1 146 1 28 1 29 1 106 1 23 1 
210 1 
322 1 242 1 320 1 4 1 5 1 87 1 119 1 
242 1 72 1 4 1 189 1 5 2 48 1 308 1 76 1 250 1 6 1 197 1 202 1 30 1 212 1 348 1 119 1 283 1 
132 1 122 1 242 2 189 1 247 1 26 1 172 2 249 1 49 1 98 1 197 1 202 1 30 1 177 1 276 1 32 1 178 1 346 1 37 1 19 1 183 1 146 2 23 1 
217 5 91 1 332 1 242 8 149 1 243 1 189 2 4 5 48 1 5 5 125 1 192 1 250 3 49 1 6 1 195 2 197 2 229 2 81 1 292 1 202 2 272 1 53 1 30 2 208 2 348 1 212 6 280 1 353 1 166 2 182 2 70 5 119 2 283 1 238 2 
171 1 332 1 242 2 124 1 46 1 189 1 4 2 48 1 77 1 96 1 6 1 195 2 340 1 341 1 197 1 230 1 202 1 30 1 207 1 344 1 275 1 165 1 166 1 182 2 21 1 145 1 330 1 186 1 
242 1 320 1 189 1 4 1 5 1 322 1 197 1 202 1 119 1 30 1 
217 2 208 1 332 1 242 2 4 2 5 2 212 4 250 2 195 1 166 1 182 1 229 1 70 2 238 1 
6 1 5 1 48 1 119 1 348 1 283 1 
132 2 241 1 1 1 242 2 334 1 189 2 4 2 48 3 247 1 172 2 97 1 49 2 98 4 6 3 197 1 202 2 292 2 30 2 295 1 256 1 32 2 346 2 62 1 162 1 348 2 213 1 351 1 215 1 262 1 236 2 183 4 146 3 283 4 23 4 
168 1 132 1 148 1 304 1 171 1 124 3 247 1 172 1 98 1 340 2 82 1 102 1 103 1 107 1 233 1 206 1 10 1 207 2 344 3 294 1 110 1 345 2 32 1 60 1 346 1 158 1 20 1 183 1 146 1 330 2 23 1 186 2 
217 2 242 1 4 2 189 1 5 4 212 4 250 2 49 1 197 1 202 1 292 1 70 2 119 2 54 1 30 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
258 1 47 1 
173 1 342 1 
168 8 304 1 91 1 243 1 125 1 191 1 195 1 227 2 341 1 230 1 82 1 272 1 314 1 54 1 273 2 206 1 10 4 345 2 60 1 142 4 166 1 144 1 145 1 
168 11 304 2 91 1 243 2 125 1 191 1 195 2 227 2 134 1 230 1 341 1 82 2 51 1 272 1 314 1 54 1 273 3 206 2 10 5 208 1 345 4 60 2 15 1 142 6 166 1 144 1 145 1 238 1 
10 1 168 2 304 1 91 1 345 2 60 1 243 1 125 1 142 1 82 1 314 1 272 1 206 1 
168 17 304 3 91 1 243 1 149 1 125 1 191 1 195 3 134 1 227 3 230 1 341 1 229 1 82 3 51 2 272 1 314 1 53 1 204 1 54 1 273 5 206 3 10 7 208 2 345 6 60 3 142 10 280 1 353 1 166 2 144 1 145 1 238 2 
168 8 304 1 91 1 243 1 125 1 191 1 195 1 227 2 341 1 230 1 82 1 272 1 314 1 54 1 273 2 206 1 10 4 345 2 60 1 142 4 166 1 144 1 145 1 
10 1 168 2 304 1 91 1 345 2 60 1 243 1 125 1 142 1 82 1 314 1 272 1 206 1 
168 18 304 4 91 1 149 1 243 1 125 1 191 1 195 3 134 1 227 3 230 1 341 1 229 1 82 4 51 2 272 1 314 1 53 1 204 2 54 1 273 5 206 4 10 8 208 2 345 8 60 4 142 10 280 1 353 1 166 2 144 1 145 1 238 2 
168 16 304 4 91 1 149 1 243 1 305 1 125 1 195 3 227 3 229 2 82 4 51 3 272 1 314 1 53 1 204 2 273 6 206 4 10 7 208 3 345 8 60 4 142 9 280 1 353 1 166 2 238 3 
10 4 168 7 191 2 142 3 195 1 227 3 166 1 341 3 230 1 51 3 144 1 145 3 273 6 
168 18 304 4 91 1 149 1 243 1 305 1 125 1 191 1 195 3 227 3 230 1 341 1 229 1 82 4 51 1 272 1 314 1 53 1 204 2 54 1 273 4 206 4 10 8 208 2 345 8 60 4 142 10 280 1 353 1 166 2 144 1 145 1 238 2 
10 4 168 8 304 2 345 4 60 2 191 1 142 4 195 1 227 2 166 1 230 1 341 1 82 2 51 1 144 1 145 1 204 1 54 1 273 3 206 2 
10 3 168 6 87 1 191 1 142 3 195 1 227 2 166 1 341 1 230 1 144 1 145 1 54 1 273 2 
10 2 168 4 304 1 208 1 345 2 60 1 142 2 195 1 227 1 134 1 166 1 229 1 82 1 51 1 273 2 238 1 206 1 
168 2 10 1 91 1 243 1 125 1 142 1 
168 18 304 1 243 2 290 1 125 2 191 1 195 3 227 3 230 1 341 1 229 2 82 1 51 1 204 1 54 1 273 4 206 1 10 9 208 2 84 1 345 2 60 1 15 1 142 9 166 3 144 1 145 1 238 2 
168 1 10 1 243 1 
168 1 125 1 142 1 
10 3 168 6 304 1 208 1 345 2 60 1 178 1 142 3 195 1 134 1 227 2 166 1 229 1 82 1 51 1 238 1 273 3 206 1 
168 12 304 1 91 1 243 1 149 1 125 1 195 2 227 1 229 2 82 1 51 1 272 1 314 1 53 1 273 2 206 1 10 6 208 2 345 2 60 1 142 6 280 1 353 1 166 2 238 2 
168 6 10 3 142 3 195 1 227 1 166 1 230 1 341 1 51 1 145 1 273 2 
10 2 168 3 304 1 345 2 60 1 191 1 142 1 34 1 227 1 341 1 82 1 51 1 144 1 145 1 204 1 273 2 206 1 
168 10 10 5 304 1 345 2 60 1 77 1 142 5 195 2 227 3 166 2 341 2 230 1 82 1 51 2 314 1 145 2 273 5 206 1 
168 2 304 1 208 1 345 2 60 1 142 2 195 1 82 1 51 1 314 1 273 1 206 1 
10 2 168 4 304 1 208 1 345 2 60 1 142 2 195 1 227 1 166 1 229 1 82 1 51 1 314 1 273 2 238 1 206 1 
10 2 168 3 304 3 345 6 305 1 60 3 34 1 142 1 227 1 341 1 82 3 51 1 314 1 145 1 204 1 273 2 206 3 
168 34 304 5 91 1 243 4 305 1 289 1 125 3 191 1 251 1 195 5 134 1 227 7 230 2 341 3 229 3 82 5 51 5 314 1 204 2 54 1 273 12 206 5 10 18 208 3 345 10 60 5 15 1 34 1 142 16 350 1 166 5 144 1 145 3 238 3 
344 1 340 1 151 1 124 1 327 1 107 1 343 1 
298 1 151 1 266 1 27 1 185 1 205 1 
132 1 98 1 262 1 32 1 346 1 183 1 62 1 87 1 146 1 172 1 23 1 
132 1 207 1 344 2 148 1 294 1 176 1 32 1 124 2 346 1 247 1 172 1 98 1 340 1 183 1 146 1 107 1 330 1 23 1 
303 1 132 2 207 2 344 2 148 1 294 1 176 1 32 1 124 2 306 1 247 2 172 3 96 1 98 1 340 2 236 1 167 1 183 1 146 1 107 1 330 1 137 1 23 1 
132 2 303 1 45 1 124 2 306 1 247 2 172 3 96 2 98 1 340 2 107 1 137 1 207 2 344 2 176 1 294 1 32 1 349 1 236 1 183 1 167 1 146 1 330 1 23 1 
303 1 132 1 171 1 124 1 46 1 48 2 5 1 26 1 247 1 172 4 96 1 98 2 6 2 340 1 155 1 137 1 207 1 344 1 56 1 32 1 346 1 63 1 165 1 323 1 236 1 21 1 183 2 146 1 119 1 283 1 330 1 186 1 23 2 
132 1 303 1 32 1 346 1 291 1 5 1 48 2 247 1 26 1 172 4 323 1 6 2 98 3 117 1 236 1 155 1 183 3 119 1 146 1 283 1 137 1 23 3 
98 1 32 1 183 1 146 1 248 1 23 1 
132 2 276 1 32 2 346 2 14 1 334 1 247 1 248 1 172 3 181 1 97 1 311 1 98 6 312 1 271 1 199 1 101 1 183 7 146 3 108 1 23 7 
168 6 132 1 148 1 304 2 124 2 246 1 191 1 247 1 172 1 195 1 98 1 227 2 340 1 271 1 79 1 230 1 341 1 82 2 103 1 54 1 107 2 273 2 206 2 233 2 10 3 207 1 157 1 344 2 294 1 176 1 110 1 32 1 345 4 158 2 60 2 161 1 142 3 18 1 166 1 325 1 183 1 144 1 145 1 146 1 330 1 354 1 23 1 
171 1 332 1 242 4 124 1 46 1 4 4 189 1 5 1 48 1 249 1 77 1 96 1 127 1 195 2 98 1 6 1 340 1 230 1 197 1 341 1 202 1 30 1 207 1 344 1 256 1 346 1 320 1 322 1 165 1 166 2 37 1 182 2 21 1 183 1 145 1 119 1 330 1 186 1 23 1 
132 1 177 1 276 1 32 1 247 1 248 1 172 2 98 2 271 1 155 1 183 2 146 2 23 2 
132 1 98 4 271 1 262 1 209 1 32 1 346 1 183 4 62 1 291 1 146 1 172 1 23 4 
132 1 32 1 160 1 334 1 162 1 247 1 213 1 172 1 97 1 98 2 236 1 183 2 146 2 23 2 
169 1 0 1 98 1 44 1 32 1 346 1 183 1 146 1 29 1 23 1 
132 1 311 1 98 2 271 1 32 1 245 1 183 2 146 1 172 1 108 1 23 2 
132 2 209 1 32 2 346 1 14 1 62 1 172 3 98 4 271 1 312 1 262 1 236 1 183 5 146 2 23 5 108 1 
132 2 286 1 209 1 32 2 346 1 14 1 62 1 172 3 98 4 271 1 262 1 236 1 183 5 146 2 23 5 108 1 
132 1 45 1 124 2 247 1 172 1 96 1 98 1 340 1 107 1 207 1 344 2 176 1 294 1 32 1 346 1 349 1 183 1 146 1 330 1 23 1 
132 1 276 1 32 1 334 1 247 1 172 1 97 1 98 1 236 1 199 1 183 1 146 2 23 1 
255 1 344 1 274 1 340 1 7 1 50 1 124 1 59 1 180 1 
274 1 40 1 73 1 
274 1 200 1 59 1 180 1 107 1 
12 1 274 1 259 1 59 2 306 1 180 2 5 1 48 2 73 1 96 1 127 1 323 1 6 2 282 1 200 2 167 1 119 1 40 1 107 1 
42 1 112 1 87 1 225 1 
42 1 324 1 240 1 99 1 112 1 113 1 225 1 
270 1 338 1 113 1 
42 1 324 1 240 3 99 1 92 1 198 2 85 1 112 1 252 1 113 3 269 1 225 1 
42 1 324 1 240 2 99 1 112 1 113 2 225 1 17 1 128 1 
169 1 240 1 44 1 113 1 225 1 339 1 324 1 99 1 299 1 252 1 55 1 
42 1 324 1 240 1 99 1 252 1 113 1 225 1 
42 2 324 1 240 1 99 1 112 1 252 1 113 1 
193 1 42 1 324 2 240 2 99 2 152 1 252 1 113 2 335 1 225 1 
42 1 240 3 2 1 112 1 113 3 114 1 225 2 17 2 324 1 99 1 252 1 39 1 55 1 
42 1 169 1 240 2 44 2 57 1 112 1 113 2 225 1 17 1 339 1 324 1 99 1 252 1 315 1 29 1 
42 1 240 4 112 1 113 4 114 1 225 2 17 2 115 1 324 2 99 2 252 1 55 1 128 1 
42 1 324 1 240 1 99 1 112 1 252 1 113 1 225 1 
42 2 240 4 92 1 85 1 112 2 113 4 114 1 225 3 17 2 324 1 99 1 198 1 55 1 71 1 
42 1 240 2 140 1 112 1 113 2 225 1 17 1 324 1 99 1 313 1 252 1 284 1 
42 1 240 3 92 2 85 1 112 1 113 3 25 1 225 1 324 1 99 1 198 2 252 1 
318 1 301 1 225 2 293 2 
36 1 324 1 240 1 99 1 252 1 113 1 
42 1 324 1 240 2 99 1 112 1 252 1 113 2 39 1 225 1 17 1 
64 1 
42 1 324 1 240 1 99 1 112 1 252 1 113 1 225 1 
42 1 324 1 240 3 99 1 198 1 112 1 252 1 113 3 39 1 225 1 17 1 
114 1 225 1 55 1 71 1 
42 1 225 1 

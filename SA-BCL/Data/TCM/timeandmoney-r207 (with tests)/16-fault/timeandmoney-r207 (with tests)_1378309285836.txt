#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (94,99,196,253,354) (33,148) (33,148) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (94,99,196,253,354) (33,148) (33,148) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (94,99,196,253,354) (33,148) (33,148) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (94,99,196,253,354) (33,148) (33,148) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (94,99,196,253,354) (65,168) (65,168) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 152 37 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 152 37 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (156,257,353) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (156,257,353) 93 80 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (156,257,353) 93 163 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 174 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (69,79,223,303) (69,79,223,303) (180,198,308) (180,198,308) (180,198,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (69,79,223,303) (69,79,223,303) (180,198,308) (180,198,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (69,79,223,303) (69,79,223,303) (180,198,308) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (69,79,223,303) (69,79,223,303) (180,198,308) (180,198,308) (180,198,308) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (156,257,353) (156,257,353) 179 301 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 264 270 231 191 331 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 264 270 231 191 331 51 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 264 270 231 191 331 51 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 264 270 231 191 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 264 270 231 191 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 264 270 231 191 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 306 132 (29,44) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 306 132 (49,291) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (156,257,353) 93 147 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (69,79,223,303) (69,79,223,303) 169 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
79 1 311 1 253 1 115 1 277 1 43 1 281 1 148 1 303 1 285 1 100 1 46 1 33 1 223 1 329 1 
79 1 311 1 253 1 277 1 115 1 43 1 281 1 148 1 303 1 285 1 100 1 46 1 33 1 223 1 329 1 
79 1 311 1 253 1 277 1 115 1 43 1 281 1 148 1 303 1 285 1 100 1 46 1 33 1 223 1 329 1 
79 1 311 1 253 1 277 1 115 1 43 1 281 1 148 1 303 1 285 1 100 1 46 1 33 1 223 1 329 1 
17 1 303 2 209 1 79 1 100 1 152 1 115 1 134 1 277 1 69 1 223 1 43 1 281 2 212 1 
79 1 253 1 277 1 65 1 146 1 43 1 281 1 168 1 303 1 100 1 46 1 223 1 329 1 
17 2 79 2 226 1 277 1 134 1 281 3 343 1 303 3 85 1 223 2 329 1 69 1 161 1 
310 1 17 3 79 2 152 1 226 1 115 1 277 1 134 3 322 1 43 1 281 7 207 1 303 7 209 1 100 1 223 2 69 5 329 1 161 2 37 1 212 1 
310 1 17 3 79 2 152 1 226 1 115 1 277 1 134 3 322 1 43 1 281 7 207 1 303 7 209 1 100 1 223 2 69 5 329 1 161 2 37 1 212 1 
88 1 153 1 66 1 
59 2 66 1 90 1 
200 2 327 1 316 1 160 2 242 2 101 2 342 2 121 2 
321 1 216 1 218 1 117 2 195 1 342 2 282 1 220 1 150 1 121 3 83 1 344 1 284 1 200 2 327 1 44 1 347 1 101 2 15 1 203 1 89 1 287 2 288 1 132 1 106 1 242 3 73 2 53 1 316 1 272 1 160 2 248 2 36 1 337 2 112 1 190 1 113 1 
200 1 327 1 67 1 160 1 242 1 55 1 101 1 342 1 121 1 230 1 
67 1 52 1 353 1 31 1 160 1 242 1 189 1 121 1 257 1 
200 1 67 1 52 1 353 1 31 1 160 1 242 1 101 1 342 1 121 1 
263 1 313 1 228 1 61 1 156 1 
263 2 313 1 88 1 58 1 66 1 61 1 6 1 156 2 
263 1 313 1 156 1 
263 1 242 1 243 1 55 1 342 1 121 1 230 1 156 1 327 1 200 1 67 1 160 1 101 1 61 1 
66 1 
263 2 313 1 88 1 58 1 66 1 61 1 302 1 156 2 
263 5 297 2 18 1 177 1 313 2 22 1 182 1 58 1 25 1 66 1 237 1 156 5 76 1 335 2 292 1 11 1 88 1 61 2 339 2 
316 1 153 1 
242 2 342 1 121 2 200 1 123 1 316 2 160 2 14 1 101 1 
72 1 2 1 7 1 
349 1 132 1 216 1 242 1 73 1 195 1 282 1 121 1 83 1 284 1 44 1 316 1 248 1 337 1 112 1 190 1 
216 1 132 1 72 1 242 2 73 1 195 1 5 1 342 1 282 1 121 2 83 1 284 1 44 1 160 1 248 1 12 1 101 1 337 1 112 1 190 1 
130 1 105 1 242 5 5 2 342 4 269 1 121 5 200 1 316 1 160 5 14 1 12 1 101 4 189 1 
67 1 160 2 242 2 101 2 342 2 244 1 121 2 230 1 
200 1 316 1 160 3 242 3 101 3 5 1 342 3 121 3 
67 1 160 1 242 1 101 1 342 1 121 1 230 1 
200 1 123 1 67 1 160 1 242 1 14 1 101 1 342 1 121 1 
52 1 242 2 80 1 93 1 5 1 342 2 121 2 200 1 67 1 353 1 31 1 160 2 12 1 14 1 101 2 
316 1 160 2 242 2 101 1 189 1 342 1 5 1 269 1 121 2 
52 1 163 1 242 1 93 1 5 1 342 1 121 1 67 1 353 1 31 1 160 1 12 1 101 1 
72 1 242 2 5 1 342 2 7 1 121 2 200 1 160 2 14 1 101 2 
132 1 216 1 242 1 73 1 195 1 282 1 121 1 83 1 284 1 44 1 316 1 248 1 337 1 190 1 112 1 
132 1 216 1 242 1 73 1 195 1 282 1 121 1 284 1 316 1 305 1 248 1 337 1 190 1 112 1 49 1 
275 1 72 1 106 1 340 1 2 1 53 1 117 2 323 1 220 1 124 1 36 1 347 1 176 1 89 2 287 2 113 1 
67 1 52 1 160 1 242 1 101 1 342 1 244 1 121 1 
97 1 202 1 
97 1 202 1 
325 1 314 1 
325 1 314 1 
325 1 314 1 
252 1 97 1 202 1 
45 1 97 1 202 1 
96 1 97 2 110 1 202 2 325 1 314 1 
252 1 97 1 202 1 
252 1 97 1 202 1 
309 1 97 1 202 1 
309 1 97 1 202 1 
309 1 97 1 202 1 
299 1 276 1 144 1 279 1 342 2 121 2 328 1 45 1 258 1 10 1 259 1 202 1 101 2 348 1 263 1 133 1 242 2 290 1 156 1 316 1 160 2 97 1 138 1 249 1 
263 2 133 2 19 1 299 3 143 1 144 2 315 1 66 1 120 1 283 1 156 2 258 2 96 1 137 1 97 2 202 2 138 2 286 2 249 1 
100 1 115 1 43 1 
100 1 43 1 146 1 
204 1 100 3 193 1 115 2 187 1 146 1 
204 1 100 2 115 1 187 1 146 1 38 1 
204 1 100 2 115 1 187 2 146 1 
297 1 320 1 275 1 165 1 276 1 323 1 66 2 328 1 86 1 9 2 259 1 126 2 172 1 88 1 90 1 330 1 263 5 18 1 264 1 313 1 182 2 58 1 25 3 27 1 156 5 270 1 159 1 335 1 232 2 211 1 59 3 61 4 339 1 
320 2 235 1 275 3 323 3 4 1 66 5 9 6 330 2 18 1 23 1 25 8 156 9 159 1 76 1 335 2 211 3 339 2 297 2 259 4 126 6 88 1 172 3 175 1 90 3 263 9 264 3 313 6 182 6 56 1 268 1 58 1 228 5 270 3 136 5 59 9 61 7 62 1 
297 1 320 1 275 1 165 1 323 1 342 1 66 3 121 1 200 1 327 1 67 1 86 1 9 2 259 1 126 2 88 1 172 1 101 1 90 2 330 1 263 3 264 1 242 1 243 1 55 1 182 2 25 3 230 1 156 3 270 1 76 1 335 1 232 1 160 1 211 1 59 4 61 2 339 1 
320 1 235 1 275 2 323 2 4 1 66 3 327 1 200 1 67 1 9 4 101 1 330 1 242 1 243 1 25 5 156 4 76 1 335 1 160 1 211 2 339 1 297 1 165 1 342 1 121 1 86 1 259 2 126 4 172 2 88 1 175 1 90 2 263 4 264 2 55 1 182 4 268 1 230 1 270 2 232 2 59 6 61 3 
153 1 112 1 28 1 
293 1 112 1 
127 1 
216 1 195 1 112 1 
112 1 234 1 
216 1 112 1 
214 1 216 1 77 1 195 1 112 3 28 2 
224 1 321 4 39 1 323 1 197 1 108 1 75 1 8 1 352 2 125 1 211 1 260 3 186 2 34 1 60 1 89 3 287 7 
224 1 321 4 39 1 323 1 197 1 108 1 75 1 8 1 352 2 125 1 211 1 260 3 186 2 34 1 60 1 89 3 287 7 
224 1 321 4 39 1 323 1 197 1 108 1 75 1 8 1 352 2 125 1 210 1 211 1 260 3 186 2 34 1 60 1 89 3 287 7 
321 1 352 1 8 2 39 1 174 1 287 1 
0 1 321 9 215 1 39 1 40 1 323 3 117 4 197 2 220 2 8 1 125 1 260 9 89 7 287 16 224 4 53 2 108 2 75 1 352 2 211 3 186 5 34 2 78 1 36 2 113 2 
79 1 193 1 115 1 277 1 43 1 146 1 281 1 282 1 198 1 303 2 221 1 100 2 69 1 223 1 329 1 16 1 48 1 308 1 128 1 131 1 312 1 180 1 73 1 26 1 248 1 337 1 190 1 
79 1 193 1 115 1 43 1 146 1 281 2 282 1 198 1 303 3 221 1 100 2 223 1 329 1 69 2 16 1 48 1 308 1 128 1 92 1 131 1 73 1 206 1 26 1 248 1 35 1 337 1 190 1 
193 1 115 1 73 1 43 1 146 1 281 1 206 1 282 1 26 1 303 2 221 1 100 2 69 2 35 1 248 1 329 1 337 1 16 1 190 1 48 1 308 1 128 1 
92 1 79 1 216 1 73 1 281 1 282 1 167 1 284 1 303 1 84 1 317 1 98 1 329 2 223 1 248 1 346 1 337 1 16 2 190 1 112 1 48 2 213 1 128 2 
79 1 193 1 115 1 277 1 43 1 146 1 281 1 282 1 198 1 303 2 221 1 100 2 69 1 223 1 329 1 16 1 48 1 308 1 128 1 131 1 180 1 73 1 26 1 248 1 35 1 337 1 190 1 
164 1 
297 1 320 1 216 1 298 1 119 1 282 1 301 1 167 1 121 1 257 1 284 2 67 1 262 1 173 1 263 2 52 1 18 1 242 1 179 1 313 2 73 2 182 1 58 1 25 1 156 2 353 1 31 1 335 1 160 1 336 1 248 2 98 1 189 1 337 2 190 1 112 1 339 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 2 52 1 242 1 313 1 179 1 58 1 119 1 301 1 121 1 302 1 156 2 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 297 1 52 1 18 1 242 1 179 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 335 1 160 1 173 1 189 1 339 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 52 1 179 1 242 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 160 1 173 1 189 1 
263 1 297 1 52 1 18 1 242 1 179 1 119 1 301 1 121 1 156 1 257 1 67 1 353 1 31 1 335 1 160 1 173 1 189 1 339 1 
321 3 2 1 117 2 323 1 197 1 220 1 125 1 260 2 347 1 176 1 89 3 287 6 72 1 106 1 53 1 153 1 108 1 75 1 316 2 352 1 186 2 211 1 34 1 36 1 113 1 
321 6 218 1 142 1 2 7 81 1 117 4 280 1 220 2 7 5 67 1 171 2 13 1 347 1 89 3 287 9 264 2 106 2 72 7 53 2 333 2 270 2 316 1 95 1 211 2 36 2 294 1 274 1 113 2 
321 1 216 1 218 1 116 1 219 1 195 1 117 2 342 1 5 1 282 1 7 1 220 1 83 1 121 2 284 1 44 1 12 1 347 1 101 1 15 1 89 1 287 2 349 1 132 1 106 1 242 2 73 1 53 1 316 1 160 1 248 1 36 1 294 1 337 1 112 1 190 1 113 1 63 1 
321 3 2 2 195 1 5 1 282 1 284 1 12 1 101 1 203 1 287 5 106 2 72 2 242 2 73 1 332 1 160 1 32 1 211 1 248 1 36 2 294 1 337 1 112 1 113 2 216 1 218 1 117 4 254 1 342 1 220 2 121 2 83 1 44 1 170 1 260 1 347 2 89 2 224 1 132 1 264 1 267 1 53 2 270 1 190 1 
321 1 217 1 216 2 218 1 117 4 255 1 342 1 5 1 282 2 220 2 150 2 167 1 121 1 284 2 101 1 347 2 15 1 176 1 89 1 287 2 151 1 106 2 178 1 225 1 312 1 242 1 73 8 53 2 160 1 35 1 248 8 98 1 36 2 111 1 337 7 190 2 112 3 356 1 113 2 
321 1 275 1 2 1 117 2 323 1 342 1 7 1 220 1 121 1 200 1 260 1 14 1 101 1 347 1 89 2 287 3 264 1 72 1 106 1 242 1 53 1 270 1 334 1 186 1 160 1 211 1 36 1 294 1 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 211 1 36 1 347 1 176 1 296 1 287 2 113 1 
275 1 72 1 106 1 2 1 53 1 117 2 323 1 220 1 124 1 36 1 347 1 176 1 89 2 287 2 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 270 1 211 1 36 1 347 1 176 1 287 2 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 211 1 111 1 36 1 347 1 296 1 287 2 113 1 
275 1 72 1 106 1 2 1 53 1 117 2 323 1 220 1 124 1 111 1 36 1 347 1 89 2 287 2 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 270 1 211 1 111 1 36 1 347 1 287 2 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 270 1 211 1 36 1 347 1 113 1 287 2 
321 1 216 1 218 1 195 1 117 2 282 1 220 1 83 1 121 1 284 1 44 1 347 1 15 1 203 1 89 1 287 2 132 1 106 1 242 1 73 1 53 1 316 1 248 1 36 1 337 1 190 1 112 1 113 1 
321 1 216 1 218 1 195 1 117 2 282 1 220 1 121 1 284 1 305 1 347 1 15 1 49 1 89 1 287 2 132 1 106 1 242 1 73 1 53 1 316 1 248 1 36 1 337 1 295 1 190 1 112 1 113 1 
321 2 264 1 72 1 106 1 2 1 53 1 117 2 220 1 270 1 211 1 36 1 294 1 347 1 287 2 113 1 
321 2 216 1 2 1 195 1 254 1 117 2 282 1 220 1 83 1 121 1 44 1 347 1 203 1 287 2 264 1 132 1 72 1 106 1 312 1 242 1 73 1 53 1 270 1 211 1 248 1 36 1 337 1 190 1 112 1 113 1 
321 2 2 1 117 2 342 1 220 1 7 1 121 1 200 1 260 1 14 1 101 1 347 1 287 2 224 1 264 1 106 1 72 1 350 1 242 1 53 1 270 1 160 1 211 1 36 1 294 1 113 1 
0 1 321 9 275 3 117 4 323 3 280 1 256 1 220 2 239 1 171 2 260 6 261 1 47 1 89 10 129 1 287 19 51 1 224 3 331 1 264 3 53 2 333 1 351 2 183 2 157 1 270 3 186 3 211 3 36 2 113 2 
0 1 51 1 191 1 321 6 331 2 264 1 53 1 117 2 333 2 256 1 183 2 220 1 270 1 199 1 157 2 231 1 171 2 211 1 261 2 36 1 89 5 287 11 113 1 
0 1 191 1 321 12 275 2 117 4 323 2 280 1 256 1 220 2 239 1 199 1 171 4 260 3 261 3 89 12 129 1 287 24 51 1 224 2 331 1 264 3 107 1 53 2 333 3 351 1 183 3 157 2 270 3 231 1 186 1 211 3 36 2 113 2 
0 1 191 1 321 12 275 2 117 4 323 2 280 1 256 1 220 2 239 1 199 1 171 4 260 4 261 3 89 12 129 1 287 24 51 1 224 2 331 1 264 3 107 1 53 2 333 3 351 1 183 3 157 2 270 3 231 1 186 2 211 3 36 2 113 2 
0 1 191 1 321 27 275 7 278 1 40 1 117 4 323 8 280 2 197 1 256 1 220 2 199 1 125 1 171 4 68 1 260 14 87 1 13 2 261 2 89 25 129 1 287 52 51 1 224 7 331 1 264 7 53 2 333 4 351 1 108 1 183 4 157 1 270 7 75 1 352 1 231 1 186 7 211 8 34 1 36 2 113 2 
258 1 133 1 96 1 143 1 144 1 97 1 202 1 138 1 315 1 326 1 
45 1 279 1 
258 1 133 1 144 1 97 1 202 1 3 1 138 1 185 1 50 1 
345 1 252 1 
309 1 110 1 246 1 
263 1 133 1 299 2 143 1 144 1 315 1 66 1 120 1 283 1 156 1 258 1 96 1 137 1 97 1 202 1 138 1 286 1 249 1 
263 1 133 1 299 2 143 1 144 1 315 1 66 1 120 1 283 1 156 1 258 1 96 1 137 1 97 1 202 1 138 1 286 1 249 1 
263 1 133 1 299 2 143 1 144 1 315 1 66 1 120 1 283 1 156 1 258 1 96 1 137 1 97 1 202 1 138 1 286 1 249 1 
345 1 252 1 110 1 
345 1 252 1 110 1 
309 1 246 1 
309 1 110 1 246 1 
10 1 348 1 
114 1 299 1 276 1 144 1 279 1 342 2 121 2 328 1 45 1 258 1 10 1 259 1 202 1 286 1 101 2 348 1 263 1 133 1 242 2 290 1 156 1 316 1 160 2 137 1 97 1 138 1 61 1 
251 1 321 1 216 1 218 1 42 1 117 2 282 1 149 1 220 1 150 2 121 2 347 1 15 1 89 1 287 2 151 1 106 1 178 1 266 1 242 2 73 2 24 1 53 1 160 2 248 2 36 1 294 1 337 2 190 1 112 1 113 1 
131 1 193 1 1 1 312 1 115 1 73 2 43 1 146 1 282 1 154 1 26 1 221 1 100 2 35 1 248 2 188 1 337 2 190 1 128 1 
131 1 193 1 1 1 115 1 73 1 43 1 146 1 229 1 282 1 26 1 221 1 100 2 35 1 248 1 337 1 190 1 128 1 
205 1 216 1 73 1 282 1 167 1 284 1 317 1 248 1 98 1 188 1 337 1 190 1 112 1 128 1 
131 1 193 1 1 1 115 1 73 1 43 1 146 1 282 1 154 1 26 1 221 1 100 2 35 1 248 1 188 1 337 1 190 1 128 1 
184 1 
177 1 11 1 88 1 182 1 153 1 25 1 66 1 
297 1 82 1 66 2 304 1 88 1 90 1 263 1 18 1 313 1 182 1 58 1 25 1 156 1 335 1 59 1 139 1 339 1 
297 1 64 1 18 1 216 1 192 1 73 1 195 1 118 1 25 1 282 2 284 1 335 1 32 1 293 1 248 1 77 1 337 1 190 1 112 2 339 1 
297 1 191 1 275 2 323 2 66 2 199 1 9 5 171 1 68 1 126 5 87 1 261 1 90 2 18 1 264 2 333 1 182 4 25 6 270 2 231 1 335 1 211 2 59 4 339 1 
297 1 323 1 197 1 342 1 121 1 327 1 200 1 67 1 172 2 101 1 175 1 263 1 18 1 242 1 243 1 55 1 227 1 182 2 108 1 25 2 230 1 156 1 335 1 211 2 160 1 34 1 78 1 339 1 
297 1 18 1 177 1 182 1 66 1 25 1 335 1 11 1 88 1 339 1 
264 1 275 1 323 1 182 2 25 2 66 2 270 1 9 2 211 1 126 2 172 1 59 4 175 1 90 2 
263 1 313 1 88 1 58 1 66 1 156 1 
162 1 297 2 320 2 216 2 298 1 166 1 194 1 145 1 195 1 282 3 167 1 122 2 284 2 262 2 263 3 18 1 20 1 313 4 73 4 182 2 58 2 25 2 156 3 76 1 335 2 336 1 355 1 248 4 98 1 337 4 190 2 112 2 250 1 339 2 
216 1 218 1 117 2 195 1 342 2 282 1 220 1 121 3 83 1 284 1 200 2 327 1 44 1 101 2 347 1 203 1 89 1 287 1 132 1 106 1 242 3 73 1 53 1 316 1 272 1 160 2 248 1 36 1 337 1 190 1 112 1 113 1 
297 1 320 1 18 1 182 2 25 1 66 4 352 1 9 2 335 1 126 2 59 4 88 2 262 1 90 2 339 1 
144 1 138 1 71 1 
10 1 141 1 144 1 138 1 315 1 
144 1 138 1 71 1 
144 1 138 1 71 1 
144 1 138 1 30 1 
144 1 138 1 30 1 
144 1 138 1 30 1 
144 1 138 1 
97 1 202 1 
224 1 321 4 40 1 53 2 323 1 117 4 197 1 108 1 220 2 75 1 352 1 125 1 211 1 260 3 186 2 34 1 36 2 89 4 287 8 113 2 
321 3 323 1 153 1 197 1 108 1 75 1 352 1 125 1 186 2 260 2 211 1 34 1 89 3 287 6 
224 1 321 2 275 1 264 1 341 1 53 1 323 1 117 2 220 1 270 1 186 1 260 2 211 1 36 1 89 2 113 1 287 4 
224 1 321 3 275 1 264 1 323 1 333 1 280 1 270 1 171 2 186 1 211 1 260 2 261 1 89 4 287 7 
321 11 275 2 40 2 81 1 323 3 117 4 280 1 197 2 220 2 125 1 171 2 260 9 13 1 89 12 287 23 224 4 264 2 265 1 53 2 333 2 108 2 270 2 75 1 352 1 211 3 186 5 34 1 36 2 113 2 
171 1 89 1 287 1 
321 1 333 1 287 1 
224 2 321 3 264 1 275 1 341 1 53 1 117 2 323 1 220 1 270 1 32 1 211 1 260 4 186 2 36 1 89 3 113 1 287 6 
0 1 191 1 321 6 275 2 117 2 323 2 220 1 199 1 171 1 68 1 260 2 87 1 261 1 89 6 287 12 224 1 264 2 53 1 333 1 270 2 231 1 211 2 186 1 36 1 113 1 
224 1 321 3 323 1 197 1 108 1 211 1 186 1 260 2 34 1 89 3 287 6 
224 1 321 1 265 1 40 1 53 1 117 2 197 1 108 1 220 1 75 1 125 1 260 2 186 1 36 1 89 2 287 3 113 1 
224 3 321 6 323 2 197 2 108 2 186 3 260 6 211 2 34 1 78 1 89 6 287 12 
0 1 224 1 321 2 264 1 53 1 117 2 220 1 211 1 260 1 36 1 113 1 287 2 
0 1 224 1 321 2 275 1 264 1 53 1 323 1 117 2 220 1 270 1 186 1 260 2 211 1 36 1 89 2 113 1 287 4 
0 1 224 1 321 1 265 1 40 1 53 3 117 6 197 1 108 1 220 3 239 1 186 1 260 2 36 3 89 2 287 3 113 3 
0 1 321 16 275 3 341 1 40 2 117 10 323 5 280 1 197 3 220 5 239 1 222 1 125 1 171 4 260 12 261 1 89 18 287 34 224 5 264 3 265 1 53 5 333 3 108 3 245 1 270 3 75 1 352 1 211 5 186 7 34 2 36 5 338 1 113 5 
0 1 191 1 321 4 323 1 117 2 197 1 220 1 125 1 171 1 260 2 261 1 89 4 287 8 53 1 333 1 108 1 75 1 352 1 211 1 186 2 34 1 36 1 113 1 
0 1 191 1 321 6 341 1 323 1 117 4 280 1 197 1 220 2 125 1 171 2 260 3 261 1 89 5 287 11 224 1 264 1 53 2 333 1 108 1 270 1 75 1 352 1 186 2 211 2 34 1 36 2 113 2 
0 1 321 3 191 1 264 1 53 1 117 2 333 1 220 1 270 1 199 1 231 1 171 1 211 1 36 1 261 1 89 2 113 1 287 5 
0 1 191 1 321 10 275 1 341 1 40 1 117 6 323 2 197 1 220 3 199 1 125 1 171 1 68 1 260 5 87 1 261 1 89 7 287 17 224 2 264 2 53 3 333 1 108 1 270 2 75 1 352 1 231 1 211 3 186 3 34 1 36 3 113 3 
0 1 191 1 321 4 323 1 117 2 197 1 220 1 125 1 171 1 260 2 261 1 89 4 287 8 53 1 333 1 108 1 75 1 352 1 211 1 186 2 34 1 36 1 113 1 
0 1 191 1 321 6 275 2 117 2 323 2 220 1 199 1 171 1 68 1 260 2 87 1 261 1 89 6 287 12 224 1 264 2 53 1 333 1 270 2 231 1 211 2 186 1 36 1 113 1 
0 1 321 3 191 1 264 1 341 1 53 2 117 4 333 1 220 2 270 1 199 1 231 1 171 1 211 1 36 2 261 1 89 2 113 2 287 5 
0 1 191 1 321 9 275 2 40 2 117 8 323 2 220 4 239 1 199 1 171 1 68 1 260 6 87 1 261 1 89 7 287 16 224 3 264 3 53 4 333 1 270 3 231 1 211 3 186 3 36 4 113 4 
224 3 321 3 323 1 197 3 108 3 75 2 125 1 186 3 260 6 211 1 34 1 89 4 287 7 
0 1 321 3 191 1 264 1 53 2 117 4 333 1 220 2 270 1 199 1 239 1 231 1 171 1 211 1 36 2 261 1 89 2 113 2 287 5 
316 1 160 1 242 1 70 1 189 1 121 1 269 1 
242 1 300 1 54 1 74 1 269 1 121 1 158 1 316 1 160 1 70 1 189 1 240 1 
216 1 73 1 98 1 248 1 153 1 337 1 282 1 190 1 112 1 167 1 284 1 
216 1 132 1 242 2 73 1 195 1 5 1 342 1 282 1 121 2 284 1 44 1 316 1 160 1 248 1 101 1 337 1 112 1 190 1 
52 1 216 2 132 1 242 1 73 1 195 2 5 1 342 1 282 1 121 1 122 1 44 1 67 1 31 1 160 1 248 1 306 1 101 1 337 1 112 3 190 1 234 1 
52 1 216 2 132 1 242 1 73 1 195 2 5 1 342 1 282 1 121 1 122 1 67 1 31 1 160 1 248 1 306 1 101 1 337 1 112 3 190 1 234 1 49 1 
342 1 66 1 121 1 122 1 327 1 200 1 67 1 88 1 101 1 263 1 242 1 73 1 243 1 55 1 230 1 156 1 291 1 160 1 293 1 248 1 337 1 112 1 
263 2 216 1 313 1 73 3 195 1 66 1 282 1 28 1 284 1 156 2 122 1 29 1 88 1 248 3 293 1 306 1 337 3 140 1 112 4 190 1 241 1 234 1 
73 1 248 1 337 1 255 1 282 1 190 1 
151 1 217 1 216 2 225 1 312 1 166 1 73 7 195 1 255 1 282 3 150 1 238 1 284 2 35 1 248 7 77 1 337 6 112 3 190 2 356 1 250 1 
321 7 2 1 195 1 323 3 5 1 197 2 282 1 67 1 101 1 203 1 287 14 106 2 72 1 242 2 73 1 108 2 75 1 160 1 211 3 34 2 248 1 78 1 36 2 294 1 337 1 112 1 113 2 216 1 254 1 117 4 342 1 220 2 83 1 121 2 44 1 125 1 260 5 347 2 89 7 224 1 132 1 312 1 266 1 267 1 53 2 316 3 352 1 186 4 274 1 190 1 
297 2 145 1 236 1 66 1 284 1 11 1 88 1 103 1 263 3 18 2 177 1 313 2 73 1 182 1 58 1 25 1 208 1 28 1 156 3 29 1 335 2 248 1 293 1 337 1 61 1 140 1 112 2 339 2 
216 1 312 1 73 2 195 1 118 1 255 1 282 2 28 1 248 2 77 1 337 2 112 2 190 1 
216 1 312 1 73 4 282 1 167 1 284 1 248 4 98 1 307 1 337 4 112 1 190 1 241 1 
216 1 166 1 20 1 73 2 194 1 195 1 282 2 122 1 201 1 248 2 337 2 112 1 190 1 250 1 
73 1 146 1 43 1 282 1 26 1 284 1 100 1 248 1 337 1 190 1 
151 1 216 1 312 1 73 2 42 1 282 1 248 2 35 1 337 2 112 1 190 1 
217 1 151 1 216 2 312 1 225 1 73 5 282 2 167 1 122 1 284 1 98 1 248 5 307 1 337 4 112 3 190 2 
151 1 216 2 312 1 225 1 73 5 155 1 282 2 167 1 122 1 284 1 98 1 248 5 307 1 337 4 112 3 190 2 
216 1 132 1 242 2 73 1 195 1 5 1 342 1 282 1 121 2 284 1 316 1 160 1 248 1 101 1 337 1 112 1 190 1 49 1 
216 1 166 1 73 1 195 1 282 2 238 1 122 1 248 1 77 1 337 1 112 1 190 1 250 1 
251 1 242 1 135 1 24 1 181 2 149 1 121 1 67 1 316 1 160 1 274 1 102 1 
263 1 52 1 251 1 242 1 135 1 24 1 93 1 181 2 147 1 324 1 149 1 121 1 156 1 67 1 353 1 31 1 160 1 61 1 319 1 102 1 
135 1 102 1 
147 1 181 1 319 1 
17 1 85 1 153 1 343 1 
17 1 303 1 85 1 79 1 223 1 281 1 343 1 
329 1 281 1 16 1 
17 1 79 1 277 1 253 2 196 1 281 3 94 1 343 1 303 3 85 1 354 1 223 1 
17 1 303 2 209 1 85 1 79 1 69 1 223 1 281 2 343 1 
17 1 79 1 277 1 134 1 115 1 43 1 281 1 303 1 100 1 223 1 212 1 
17 1 303 1 79 1 277 1 223 1 281 1 343 1 
303 1 85 1 79 1 277 1 223 1 281 1 343 2 
17 1 79 2 21 1 277 1 281 2 343 1 247 1 303 2 223 2 318 1 
310 1 17 2 79 1 277 1 134 1 322 1 281 3 343 1 303 3 85 1 223 1 69 2 161 1 
169 1 303 2 79 1 100 2 193 1 115 1 277 1 69 1 223 1 43 1 146 1 281 1 
17 2 79 2 277 1 134 1 281 4 343 1 303 4 209 1 85 1 109 1 223 2 69 2 161 1 
17 1 303 1 85 1 79 1 277 1 223 1 281 1 343 1 
17 3 79 1 253 1 134 1 196 1 94 1 281 4 343 2 303 4 85 2 69 2 223 1 161 1 104 1 
17 1 79 1 277 1 41 1 281 2 57 1 207 1 343 1 303 2 85 1 223 1 69 1 
17 1 79 1 277 1 253 2 196 2 94 1 281 3 343 1 303 3 85 1 223 1 99 1 
17 2 91 1 289 1 233 2 
303 1 271 1 79 1 277 1 223 1 281 1 
17 1 303 2 85 1 79 1 277 1 69 1 322 1 223 1 281 2 343 1 
273 1 
17 1 303 1 85 1 79 1 277 1 223 1 281 1 343 1 
17 1 79 1 277 1 253 1 322 1 281 3 343 1 303 3 85 1 69 1 223 1 
17 1 134 1 161 1 104 1 
17 1 343 1 

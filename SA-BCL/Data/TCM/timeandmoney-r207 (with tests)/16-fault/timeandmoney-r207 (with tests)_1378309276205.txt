#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (30,296) (10,287) (10,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (30,296) (10,287) (10,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (30,296) (10,287) (10,287) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (30,296) (10,287) (10,287) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (30,296) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (30,296) 228 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (30,296) 228 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 280 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 23 255 344 333 247 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 23 255 344 333 247 161 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 23 255 344 333 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
296 1 1 1 364 1 298 2 287 1 182 1 15 1 315 2 274 1 293 1 146 1 91 1 307 1 340 1 10 1 30 1 
296 1 1 1 364 1 298 2 287 1 182 1 15 1 315 2 274 1 293 1 146 1 91 1 307 1 340 1 10 1 30 1 
296 1 1 1 364 1 298 2 287 1 182 1 15 1 315 2 274 1 293 1 146 1 91 1 307 1 340 1 10 1 30 1 
296 1 1 1 364 1 298 2 287 1 182 1 15 1 315 2 274 1 293 1 146 1 91 1 307 1 340 1 10 1 30 1 
238 1 298 4 336 2 14 1 225 2 142 1 182 1 324 3 40 1 218 1 315 4 274 1 293 1 241 1 91 1 307 1 340 1 355 3 
237 1 1 1 364 1 298 2 182 1 324 1 109 1 15 1 124 1 40 1 315 2 293 1 241 1 91 1 340 1 307 1 
296 1 315 1 298 1 293 1 340 1 182 1 
296 1 194 1 315 2 298 2 293 1 340 1 182 1 355 1 228 1 
296 1 194 1 315 2 298 2 293 1 340 1 182 1 355 1 228 1 
253 1 330 1 141 1 
144 1 98 2 253 1 
362 1 5 1 75 2 19 2 245 2 45 2 180 2 208 2 
46 1 134 1 105 1 212 1 214 1 189 1 356 2 110 1 4 1 50 1 28 1 112 1 257 1 5 1 29 1 245 3 94 1 200 1 362 1 75 2 367 1 299 2 121 1 180 2 325 1 154 1 327 2 231 1 59 1 306 2 19 2 129 1 45 3 208 2 236 1 133 1 22 2 
5 1 75 1 87 1 19 1 245 1 331 1 45 1 180 1 208 1 266 1 
256 1 104 1 75 1 87 1 177 1 202 1 26 1 253 1 244 1 330 1 245 1 45 1 92 1 373 1 
256 1 104 1 75 1 87 1 177 1 180 1 202 2 19 1 253 1 244 1 330 1 245 1 45 1 92 2 208 1 
363 1 168 1 183 1 92 1 202 1 
363 1 365 1 183 1 253 1 330 1 148 1 92 2 202 2 
363 1 92 1 202 1 
211 1 75 1 87 1 180 1 202 1 5 1 183 1 19 1 331 1 245 1 92 1 45 1 208 1 266 1 
253 1 
363 1 365 1 183 1 68 1 253 1 330 1 92 2 202 2 
308 2 211 1 87 1 162 1 311 1 5 1 316 2 6 1 7 1 245 1 171 1 92 5 93 1 266 1 118 4 31 1 363 2 223 1 345 2 365 1 151 1 75 1 176 4 180 1 38 2 202 5 97 2 128 1 183 2 19 1 253 1 331 1 330 1 45 1 63 1 208 1 372 2 65 1 
362 1 141 1 
362 2 75 2 180 1 195 1 19 1 132 1 245 2 45 2 208 1 
57 1 113 1 69 1 
134 1 362 1 212 1 139 1 367 1 214 1 50 1 327 1 231 1 306 1 129 1 245 1 45 1 236 1 94 1 22 1 
134 1 57 1 75 1 212 1 214 1 367 1 215 1 50 1 327 1 231 1 306 1 129 1 19 1 245 2 45 2 236 1 208 1 94 1 281 1 22 1 
362 1 322 1 75 5 180 1 215 2 26 1 195 1 204 1 19 4 245 5 45 5 279 1 208 4 281 1 
75 2 87 1 19 2 245 2 45 2 208 2 160 1 266 1 
362 1 75 3 19 3 245 3 180 1 45 3 208 3 215 1 
75 1 87 1 19 1 245 1 45 1 208 1 266 1 
195 1 75 1 87 1 19 1 132 1 245 1 45 1 180 1 208 1 
134 1 86 1 256 1 104 1 212 1 87 1 214 1 356 2 215 1 110 1 4 1 50 1 195 1 28 1 112 1 257 1 5 1 244 1 29 1 245 4 92 1 94 1 362 1 75 3 367 1 299 1 121 1 177 1 180 2 202 1 325 1 327 1 231 1 59 1 306 1 18 1 129 1 19 3 45 4 236 1 208 3 133 1 281 1 22 1 
26 1 362 1 204 1 75 2 19 1 245 2 45 2 208 1 215 1 
256 1 104 1 188 1 75 3 87 1 177 1 180 1 202 1 215 2 195 1 18 1 19 3 253 1 244 1 245 3 92 1 45 3 208 3 281 1 
75 2 57 1 180 1 215 1 195 1 113 1 19 2 245 2 45 2 208 2 
134 1 362 1 212 1 367 1 214 1 50 1 327 1 231 1 306 1 129 1 245 1 45 1 236 1 22 1 94 1 
134 1 362 1 212 1 367 1 214 1 50 1 327 1 306 1 42 1 357 1 245 1 45 1 236 1 22 1 94 1 
283 1 308 1 23 1 137 1 356 2 49 1 110 1 28 1 316 1 257 1 90 1 113 2 29 1 69 2 294 1 221 1 200 2 57 2 268 1 121 2 299 4 122 1 59 1 133 1 
75 1 87 1 19 1 177 1 245 1 45 1 208 1 160 1 
88 1 102 1 
88 1 102 1 
197 1 240 1 
197 1 240 1 
197 1 240 1 
88 1 102 1 201 1 
88 1 102 1 264 1 
88 2 102 2 267 1 197 1 240 1 77 1 
88 1 102 1 201 1 
88 1 102 1 201 1 
145 1 88 1 102 1 
145 1 88 1 102 1 
145 1 88 1 102 1 
102 1 216 1 88 1 245 2 9 1 116 1 92 1 246 1 343 1 264 1 321 1 362 1 75 2 226 1 178 1 153 1 202 1 352 1 353 1 127 1 156 1 19 2 45 2 208 2 
102 2 334 1 37 1 178 2 226 3 58 1 202 2 77 1 352 1 353 2 88 2 253 1 62 1 158 1 159 1 116 2 92 2 248 2 343 2 
274 1 91 1 307 1 
91 1 307 1 109 1 
274 2 261 1 157 1 307 3 359 1 109 1 
274 1 261 1 157 1 152 1 307 2 109 1 
274 1 261 2 157 1 307 2 109 1 
87 1 144 2 5 1 6 1 90 1 245 1 92 5 345 1 202 5 97 1 156 1 98 4 205 2 19 1 253 1 63 1 208 1 308 1 255 1 23 1 211 1 25 2 316 1 360 1 266 1 71 2 118 2 363 1 33 1 73 1 365 1 75 1 176 3 38 1 180 1 229 1 126 1 183 4 331 1 330 1 45 1 372 1 
87 1 144 2 5 1 6 1 90 1 245 1 92 5 345 1 202 5 97 1 156 1 98 4 19 1 253 1 63 1 208 1 308 1 255 1 23 1 211 1 25 2 316 1 168 2 170 2 360 1 266 1 71 2 118 2 361 1 363 3 33 1 73 1 365 1 75 1 176 3 180 1 38 1 125 1 183 4 331 1 330 1 45 1 372 1 
255 1 23 1 211 1 87 1 25 1 5 1 316 1 245 1 92 3 171 1 360 1 266 1 71 1 118 2 33 1 345 1 75 1 176 1 180 1 38 1 202 3 229 1 126 1 156 1 98 1 205 1 183 2 19 1 253 1 331 1 330 1 45 1 208 1 372 1 
255 1 23 1 25 1 316 1 263 1 92 2 171 1 360 1 71 1 118 2 33 1 345 1 176 1 38 1 202 2 229 1 126 1 98 1 156 1 205 1 183 1 372 1 
60 1 141 1 94 1 
13 1 94 1 
16 1 
212 1 214 1 94 1 
295 1 94 1 
214 1 94 1 
167 1 120 1 60 2 212 1 214 1 94 3 
283 2 198 1 308 1 200 4 32 1 137 3 67 1 121 3 190 1 299 7 3 1 316 1 128 1 7 1 44 2 85 1 65 1 
283 2 198 1 308 1 200 4 32 1 137 3 67 1 121 3 190 1 299 7 3 1 316 1 128 1 7 1 44 2 85 1 65 1 
283 2 198 1 199 1 308 1 200 4 32 1 137 3 67 1 121 3 190 1 299 7 3 1 316 1 128 1 7 1 44 2 85 1 65 1 
200 2 66 1 24 1 190 1 299 4 121 2 350 1 276 1 319 1 44 1 85 2 64 1 280 1 
283 3 308 2 137 5 67 2 190 1 356 2 3 1 110 1 28 1 316 2 7 1 242 1 29 1 319 1 200 6 32 1 223 1 36 1 299 11 121 5 128 1 44 1 85 1 65 1 133 1 
134 1 103 1 310 1 109 1 315 2 293 1 241 1 147 1 91 1 243 1 340 1 342 1 320 1 359 1 364 1 298 2 35 1 347 1 300 1 182 1 324 1 40 1 303 1 327 1 274 1 306 1 307 2 236 1 355 1 22 1 
134 1 103 1 310 1 339 1 109 1 314 1 315 3 241 1 147 1 91 1 243 1 340 1 342 1 359 1 320 1 265 1 364 1 298 3 35 1 182 1 324 1 40 1 303 1 327 1 274 1 306 1 307 2 236 1 355 2 22 1 
134 1 103 1 109 1 314 1 315 2 241 1 147 1 243 1 91 1 320 1 359 1 265 1 364 1 298 2 35 1 324 1 40 1 303 1 327 1 274 1 306 1 307 2 236 1 355 2 22 1 
100 1 364 2 103 2 298 1 35 2 367 1 181 1 182 1 339 1 291 1 327 1 303 2 315 1 230 1 306 1 340 1 22 1 
134 1 103 1 310 1 109 1 315 1 293 1 147 1 91 1 243 1 340 1 342 1 320 1 359 1 265 1 364 1 298 1 35 1 347 1 182 1 303 1 327 1 274 1 306 1 307 2 236 1 22 1 
175 1 
134 1 87 1 286 1 138 2 337 1 191 1 144 2 244 1 245 1 92 5 94 1 150 1 345 1 302 2 202 5 252 1 17 1 98 2 306 2 253 2 63 1 22 2 101 1 256 1 104 1 214 1 312 1 313 1 164 2 26 1 166 2 115 2 117 2 118 2 363 6 33 1 365 3 75 1 176 2 367 2 368 1 177 1 179 2 38 1 271 4 123 1 369 1 327 2 275 1 277 1 330 1 45 1 372 1 236 1 373 1 
101 1 256 1 104 1 87 1 337 1 312 1 26 1 68 1 244 1 245 1 92 3 363 2 365 1 75 1 368 1 177 1 179 1 271 2 202 3 17 1 45 1 373 1 
101 1 256 1 104 1 87 1 337 1 312 1 26 1 68 1 244 1 245 1 92 3 363 1 365 1 75 1 368 1 177 1 271 3 202 3 302 1 17 1 253 1 330 1 45 1 373 1 
101 1 256 1 104 1 87 1 337 1 312 1 26 1 164 1 68 1 244 1 245 1 92 3 363 2 365 1 75 1 368 1 177 1 179 1 271 3 202 3 302 1 17 1 253 1 330 1 45 1 373 1 
87 1 138 2 140 1 337 1 144 2 244 1 245 1 92 5 345 1 202 5 302 4 17 1 305 1 253 5 63 1 101 1 256 1 104 1 312 1 164 4 26 1 166 2 68 1 115 2 117 2 118 1 363 7 366 1 365 3 75 1 176 1 368 1 177 1 179 4 38 1 271 6 227 1 123 1 275 1 330 5 45 1 185 1 372 1 373 1 
87 1 138 2 286 1 337 1 144 2 244 1 245 1 92 4 345 1 202 4 302 2 17 1 98 2 253 2 63 1 101 1 256 1 104 1 312 1 26 1 164 2 166 2 115 2 117 2 118 1 363 4 365 2 75 1 176 1 368 1 177 1 38 1 179 2 271 4 123 1 275 1 330 1 45 1 372 1 373 1 
101 1 256 1 104 1 87 1 138 2 337 1 312 1 164 2 26 1 166 2 144 2 244 1 115 2 245 1 92 4 117 2 118 1 363 4 365 2 345 1 75 1 176 1 368 1 177 1 179 2 38 1 227 1 271 4 302 2 123 1 202 4 17 1 305 1 253 1 275 1 330 1 45 1 63 1 372 1 185 1 373 1 
101 1 256 1 104 1 87 1 138 2 337 1 312 1 164 2 26 1 166 2 144 2 244 1 115 2 245 1 92 4 117 2 118 1 363 4 365 2 345 1 75 1 176 1 368 1 177 1 179 2 38 1 227 1 271 4 302 2 123 1 202 4 17 1 305 1 253 1 275 1 330 1 45 1 63 1 372 1 185 1 373 1 
101 1 256 1 104 1 87 1 337 1 312 1 164 2 26 1 244 1 341 1 115 2 245 1 92 4 117 2 118 1 363 4 365 2 345 1 75 1 34 1 176 1 368 1 177 1 179 2 38 1 227 1 271 4 302 2 123 1 202 4 17 1 98 2 206 2 61 1 253 1 330 1 45 1 63 1 372 1 209 2 373 1 
101 1 256 1 104 1 87 1 138 2 140 1 337 1 312 1 26 1 164 3 166 2 144 2 244 1 115 2 245 1 92 4 117 2 118 1 363 5 365 2 345 1 75 1 176 1 368 1 177 1 38 1 179 3 227 1 271 5 123 1 202 4 302 3 17 1 305 1 253 1 275 1 330 1 63 1 45 1 372 1 185 1 373 1 
101 1 256 1 104 1 87 1 138 2 140 1 337 1 312 1 26 1 164 3 166 2 144 2 244 1 115 2 245 1 92 4 117 2 118 1 363 5 365 2 345 1 75 1 176 1 368 1 177 1 38 1 179 3 227 1 271 5 123 1 202 4 302 3 17 1 305 1 253 1 275 1 330 1 63 1 45 1 372 1 185 1 373 1 
87 1 286 1 337 1 244 1 245 1 92 4 345 1 202 4 302 2 17 1 98 2 206 2 253 1 63 1 209 2 101 1 256 1 104 1 312 1 26 1 164 2 115 2 117 2 118 1 363 4 365 2 75 1 34 1 176 1 368 1 177 1 38 1 179 2 271 4 123 1 330 1 45 1 372 1 373 1 
283 2 362 2 308 1 200 3 32 1 137 2 57 1 121 3 299 6 356 2 141 1 49 1 3 1 110 1 28 1 316 1 257 1 59 1 128 1 7 1 113 1 69 1 29 1 44 1 65 1 133 1 
283 1 255 2 308 1 23 2 137 1 210 1 87 1 189 1 356 4 143 1 110 2 192 1 28 2 112 1 257 2 316 2 258 1 90 1 113 2 318 1 29 2 69 8 362 1 200 7 57 8 121 5 299 12 350 2 59 1 84 1 332 1 64 2 133 2 
187 1 87 1 189 1 356 2 215 1 110 1 192 1 28 1 257 1 112 1 258 1 113 1 29 1 245 1 362 1 95 1 200 1 75 1 121 1 299 2 59 1 19 1 329 1 45 1 208 1 281 1 133 1 
283 4 134 1 137 5 87 1 3 1 192 1 50 1 7 1 90 2 245 2 94 1 55 1 200 10 56 2 57 6 299 21 249 2 203 1 306 1 59 2 19 1 208 1 65 1 22 1 255 2 308 4 23 2 67 1 212 1 214 1 356 4 215 1 110 2 28 2 111 1 112 1 257 2 316 4 258 1 113 6 29 2 69 6 362 1 223 1 32 1 75 1 367 1 121 11 325 1 327 1 231 1 128 1 129 1 45 2 184 1 236 1 133 2 281 1 
134 2 46 2 47 1 135 1 48 1 214 2 189 1 356 4 49 1 215 1 110 2 28 2 257 2 112 1 89 1 29 2 245 1 54 1 265 1 94 3 200 1 75 1 348 1 367 2 300 1 299 2 121 1 369 1 327 8 306 8 59 2 20 1 19 1 277 1 45 1 208 1 236 2 22 7 133 2 
283 1 255 1 308 1 23 1 137 1 356 2 110 1 192 1 195 1 28 1 257 1 316 1 90 1 113 1 196 1 69 1 29 1 245 1 200 1 57 1 75 1 299 3 121 2 180 1 59 1 19 1 45 1 208 1 133 1 
200 2 23 1 137 1 57 1 67 1 299 2 356 2 49 1 122 1 110 1 28 1 257 1 316 1 59 1 113 1 69 1 29 1 133 1 
283 1 308 1 137 1 57 1 268 1 299 2 121 2 356 2 49 1 110 1 28 1 257 1 59 1 90 1 113 1 69 1 29 1 133 1 
283 1 255 1 308 1 23 1 137 2 67 1 356 2 49 1 110 1 28 1 316 1 257 1 90 1 113 2 29 1 69 2 200 2 57 2 299 4 121 2 59 1 133 1 
200 2 23 1 137 1 57 1 67 1 348 1 299 2 356 2 122 1 110 1 28 1 257 1 316 1 59 1 113 1 69 1 29 1 133 1 
283 1 308 1 137 1 57 1 348 1 268 1 299 2 121 2 356 2 110 1 28 1 257 1 59 1 90 1 113 1 69 1 29 1 133 1 
283 1 255 1 308 1 23 1 137 2 67 1 356 2 110 1 28 1 316 1 257 1 90 1 113 2 29 1 69 2 200 2 57 2 348 1 299 4 121 2 59 1 133 1 
283 1 308 1 255 1 200 2 23 1 137 2 57 2 67 1 121 2 299 4 356 2 110 1 28 1 257 1 316 1 59 1 90 1 113 2 69 2 29 1 133 1 
134 1 212 1 214 1 189 1 356 2 110 1 50 1 28 1 257 1 112 1 29 1 245 1 94 1 200 1 362 1 367 1 299 2 121 1 325 1 327 1 231 1 306 1 59 1 129 1 45 1 236 1 22 1 133 1 
134 1 212 1 214 1 189 1 356 2 110 1 50 1 28 1 257 1 112 1 357 1 29 1 245 1 94 1 200 1 362 1 367 1 299 2 121 1 273 1 327 1 42 1 306 1 59 1 45 1 236 1 22 1 133 1 
283 1 255 1 308 1 23 1 137 2 67 1 356 2 110 1 192 1 28 1 316 1 257 1 90 1 113 2 29 1 69 2 200 2 57 2 299 4 121 2 59 1 133 1 
283 1 134 1 308 1 255 1 23 1 137 2 67 1 212 1 214 1 356 2 110 1 50 1 28 1 316 1 257 1 90 1 113 2 69 2 29 1 245 1 94 1 55 1 200 2 57 2 121 2 299 4 300 1 325 1 327 1 231 1 306 1 59 1 129 1 45 1 236 1 22 1 133 1 
308 1 255 1 23 1 137 1 67 1 356 2 110 1 192 1 195 1 28 1 257 1 316 1 90 1 113 1 29 1 69 1 245 1 200 2 75 1 57 1 121 1 299 3 180 1 59 1 19 1 82 1 45 1 208 1 133 1 
283 1 308 3 255 3 23 3 137 2 335 2 67 1 161 1 356 4 107 1 110 2 28 2 316 3 260 1 90 3 242 1 29 2 319 1 247 1 344 1 222 1 200 12 297 1 121 12 299 24 350 2 78 1 232 1 370 1 233 1 276 2 333 1 278 1 64 2 133 2 
283 1 308 1 255 2 23 2 137 1 335 2 161 1 356 2 110 1 28 1 316 2 260 2 90 1 242 1 29 1 319 1 247 2 344 1 222 1 200 9 297 1 121 8 299 17 350 2 232 1 370 1 276 2 333 1 64 2 133 1 
283 1 308 3 255 3 23 3 137 3 335 3 67 2 161 1 356 4 110 2 292 1 28 2 316 3 260 2 90 3 242 1 29 2 319 1 247 1 344 1 222 1 200 14 297 1 72 1 121 14 299 28 350 3 78 1 232 1 370 1 233 1 276 3 333 1 278 1 64 3 133 2 
283 1 308 3 255 3 23 3 137 2 335 2 67 1 161 1 356 4 110 2 28 2 316 3 260 1 90 3 242 1 29 2 319 1 247 1 344 1 222 1 200 12 297 1 72 1 121 12 299 24 350 2 78 1 232 1 370 1 233 1 276 2 333 1 278 1 64 2 133 2 
283 2 308 2 255 2 23 2 137 3 335 2 67 1 161 1 356 2 110 1 28 1 316 2 260 1 90 2 242 1 29 1 319 1 247 1 344 1 222 1 200 9 297 1 121 10 299 19 350 2 232 1 370 1 276 2 333 1 278 1 64 2 133 1 
353 1 88 1 102 1 37 1 62 1 114 1 178 1 116 1 343 1 77 1 
321 1 264 1 
173 1 353 1 88 1 102 1 79 1 178 1 116 1 270 1 343 1 
21 1 201 1 
145 1 267 1 106 1 
102 1 334 1 37 1 178 1 226 2 58 1 202 1 77 1 352 1 353 1 88 1 253 1 62 1 158 1 92 1 116 1 248 1 343 1 
102 1 334 1 37 1 178 1 226 2 58 1 202 1 77 1 352 1 353 1 88 1 253 1 62 1 158 1 92 1 116 1 248 1 343 1 
102 1 334 1 37 1 178 1 226 2 58 1 202 1 77 1 352 1 353 1 88 1 253 1 62 1 158 1 92 1 116 1 248 1 343 1 
267 1 21 1 201 1 
267 1 21 1 201 1 
145 1 106 1 
145 1 267 1 106 1 
127 1 153 1 
334 1 102 1 216 1 88 1 245 2 9 1 92 1 116 1 246 1 248 1 343 1 264 1 321 1 362 1 75 2 178 1 226 1 153 1 202 1 353 1 127 1 156 1 183 1 43 1 19 2 45 2 208 2 
134 1 46 2 135 1 285 1 214 1 189 1 356 2 110 1 192 1 28 1 257 1 112 1 51 1 89 1 29 1 245 2 94 1 200 1 75 2 12 1 299 2 121 1 326 1 327 2 306 2 59 1 130 1 45 2 236 1 133 1 22 2 
134 1 136 1 35 1 163 1 300 1 109 1 327 2 274 1 306 2 147 1 91 1 307 2 342 1 236 1 354 1 359 1 320 1 265 1 22 2 
134 1 136 1 35 1 109 1 327 1 274 1 306 1 147 1 91 1 317 1 307 2 342 1 236 1 359 1 320 1 265 1 22 1 
327 1 100 1 119 1 306 1 35 1 367 1 163 1 22 1 
134 1 136 1 35 1 163 1 109 1 327 1 274 1 306 1 147 1 91 1 307 2 342 1 236 1 354 1 359 1 320 1 265 1 22 1 
224 1 
151 1 141 1 93 1 
138 1 144 1 166 1 92 1 118 1 363 1 345 1 365 1 176 1 38 1 202 1 98 1 275 1 253 2 330 1 63 1 372 1 
134 1 255 1 23 1 256 1 212 1 214 1 25 2 219 1 316 1 167 1 358 1 92 2 71 2 94 4 118 3 363 2 33 1 365 1 345 2 13 2 176 2 367 1 323 1 249 1 38 2 39 1 202 2 327 1 98 2 306 1 60 1 131 1 83 1 63 2 372 2 236 2 282 1 22 1 
255 2 308 2 23 2 25 5 316 2 90 2 71 5 344 1 222 1 118 4 297 1 345 1 176 6 38 1 350 1 98 3 370 1 276 1 333 1 63 1 372 1 64 1 
308 1 211 1 87 1 316 2 5 1 6 1 7 1 245 1 92 1 266 1 118 2 223 1 345 1 75 1 176 2 38 1 180 1 202 1 97 2 128 1 19 1 331 1 45 1 63 1 372 1 185 1 208 1 65 1 
345 1 38 1 63 1 372 1 93 1 
118 2 255 1 316 1 23 1 98 1 25 1 71 1 
363 1 365 1 253 1 330 1 92 1 202 1 
134 1 254 1 284 1 214 1 313 1 191 1 169 1 171 1 92 3 70 2 94 1 118 2 363 4 33 2 345 2 150 2 365 2 176 2 367 2 38 2 202 3 369 1 327 4 306 4 277 1 63 1 236 1 372 2 22 4 
134 1 212 1 214 1 356 2 4 1 110 1 50 1 28 1 112 1 5 1 257 1 29 1 245 3 94 1 362 1 75 2 367 1 299 1 121 1 180 2 325 1 327 1 231 1 306 1 59 1 19 2 129 1 45 3 208 2 236 1 133 1 22 1 
118 1 33 1 345 1 150 1 176 1 38 1 98 1 253 1 330 1 63 1 372 1 71 1 
165 1 353 1 116 1 
0 1 353 1 37 1 153 1 116 1 
165 1 353 1 116 1 
165 1 353 1 116 1 
353 1 213 1 116 1 
353 1 213 1 116 1 
353 1 213 1 116 1 
353 1 116 1 
88 1 102 1 
283 2 308 2 137 4 67 2 356 2 3 1 110 1 28 1 316 2 7 1 29 1 319 1 32 1 223 1 200 5 299 10 121 5 128 1 65 1 133 1 
283 2 32 1 200 3 308 1 137 2 121 3 299 6 141 1 3 1 316 1 7 1 128 1 44 1 65 1 
283 1 308 1 255 1 200 2 23 1 137 2 67 1 121 2 299 4 356 2 110 1 193 1 28 1 316 1 90 1 29 1 133 1 
200 1 276 1 299 2 121 1 64 1 350 1 
283 3 308 4 255 2 23 2 210 1 137 5 67 2 3 1 316 4 7 1 90 2 319 1 200 10 32 1 223 1 299 20 121 10 350 2 128 1 332 1 84 1 65 1 64 2 
299 1 121 1 350 1 
200 1 299 1 64 1 
283 2 255 1 200 3 308 1 23 1 137 3 67 1 121 3 299 6 356 2 249 1 110 1 193 1 28 1 316 1 90 1 29 1 133 1 
283 1 255 2 308 2 23 2 137 2 67 1 356 2 110 1 28 1 316 2 90 2 242 1 29 1 344 1 222 1 200 6 297 1 299 12 121 6 350 1 370 1 276 1 333 1 64 1 133 1 
283 1 200 3 308 1 137 2 67 1 299 6 121 3 316 1 128 1 7 1 65 1 
24 1 299 1 121 1 319 1 
283 3 223 1 200 5 308 2 137 5 67 2 299 10 121 5 356 2 110 1 28 1 316 2 7 2 128 1 242 1 29 1 65 2 133 1 
200 2 23 1 137 1 67 1 299 2 356 2 110 1 28 1 316 1 242 1 29 1 133 1 
283 1 308 1 255 1 200 2 23 1 137 2 67 1 121 2 299 4 356 2 110 1 28 1 316 1 90 1 242 1 29 1 133 1 
283 1 200 1 24 1 137 2 67 1 121 2 299 3 356 4 110 2 28 2 7 1 233 1 242 1 29 2 319 1 65 1 133 2 
283 2 308 2 137 4 66 1 24 1 67 2 356 6 3 1 110 3 193 1 28 3 316 2 7 1 242 1 29 3 319 1 200 6 32 1 223 1 121 7 299 13 350 1 128 1 233 1 276 1 65 1 64 1 133 3 
344 1 283 1 222 1 308 1 255 2 297 1 200 6 23 2 137 1 121 4 299 10 356 2 110 1 350 1 28 1 316 2 90 1 370 1 242 1 29 1 276 1 333 1 64 1 133 1 
344 1 283 1 222 1 308 1 255 2 297 1 200 6 23 2 137 1 121 4 299 10 356 4 110 2 350 1 193 1 28 2 316 2 90 1 370 1 242 1 29 2 276 1 333 1 64 1 133 2 
283 1 255 2 308 2 23 2 137 2 67 1 356 4 110 2 193 1 28 2 316 2 90 2 242 1 29 2 319 1 344 1 222 1 200 6 297 1 299 13 121 7 350 1 370 1 276 1 333 1 64 1 133 2 
344 1 283 1 222 1 308 1 255 2 297 1 200 6 23 2 137 1 121 4 299 10 356 2 110 1 350 1 28 1 316 2 90 1 370 1 242 1 29 1 276 1 333 1 64 1 133 1 
344 1 283 1 222 1 308 1 255 2 297 1 200 6 23 2 137 1 121 4 299 10 356 2 110 1 350 1 28 1 316 2 90 1 370 1 242 1 29 1 276 1 333 1 64 1 133 1 
283 1 255 2 308 2 23 2 137 2 67 1 356 2 110 1 28 1 316 2 90 2 242 1 29 1 344 1 222 1 200 6 297 1 299 12 121 6 350 1 370 1 276 1 333 1 64 1 133 1 
283 1 255 2 308 1 23 2 137 1 356 4 110 2 193 1 28 2 316 2 90 1 242 1 29 2 319 1 344 1 222 1 200 6 297 1 299 11 121 5 350 1 370 1 276 1 333 1 64 1 133 2 
283 2 255 2 308 1 23 2 137 4 67 2 356 4 110 2 28 2 316 2 90 1 242 1 29 2 319 1 344 1 222 1 200 7 297 1 299 12 121 5 350 1 370 1 233 1 276 1 333 1 64 1 133 2 
283 3 308 1 32 1 200 3 137 6 67 3 121 4 299 7 3 2 316 1 7 3 128 1 65 3 
283 1 255 2 308 1 23 2 137 1 356 4 110 2 28 2 316 2 90 1 242 1 29 2 319 1 344 1 222 1 200 6 297 1 299 11 121 5 350 1 370 1 233 1 276 1 333 1 64 1 133 2 
26 1 362 1 204 1 75 1 245 1 8 1 45 1 
362 1 174 1 75 1 289 1 26 1 41 1 251 1 204 1 81 1 8 1 245 1 45 1 
369 1 134 1 327 1 306 1 214 1 277 1 367 1 141 1 236 1 94 1 22 1 
134 1 362 1 75 1 212 1 214 1 367 1 215 1 50 1 327 1 306 1 19 1 129 1 245 2 45 2 236 1 208 1 94 1 22 1 
134 1 362 1 104 1 75 2 87 1 212 2 214 2 177 1 215 1 50 1 327 1 306 1 19 2 129 1 295 1 245 2 45 2 172 1 236 1 208 1 70 1 94 3 22 1 
134 1 104 1 212 2 87 1 214 2 215 1 50 1 357 1 245 2 295 1 172 1 70 1 149 1 94 3 362 1 75 2 177 1 327 2 306 2 19 2 45 2 208 1 236 1 22 2 
134 1 256 1 212 1 214 1 259 1 295 1 92 2 172 1 70 1 149 1 94 4 363 1 76 1 13 1 367 1 202 2 327 3 306 3 60 1 253 1 330 1 236 1 22 3 
134 1 363 1 256 1 212 1 13 1 367 1 214 1 202 2 327 3 219 1 306 3 60 1 253 1 330 1 295 1 92 2 172 1 236 1 70 1 149 1 22 3 94 4 
134 1 327 1 306 1 20 1 236 1 22 1 
134 1 212 1 367 1 214 1 351 1 327 1 290 1 167 1 306 1 236 2 186 1 22 1 94 1 
283 2 134 1 308 1 137 2 212 1 214 1 356 4 3 1 215 1 110 2 50 1 192 1 28 2 111 1 316 1 257 2 7 1 113 1 69 1 29 2 245 2 94 1 55 1 362 2 200 3 32 1 57 1 75 1 121 3 299 6 300 1 325 1 327 1 231 1 59 2 306 1 128 1 19 1 129 1 130 1 44 1 45 2 236 1 208 1 65 1 133 2 22 1 
284 1 87 1 5 1 6 1 7 1 245 1 92 3 93 1 94 2 345 2 151 1 13 1 202 3 97 2 306 1 60 1 19 1 253 1 63 2 208 1 65 1 22 1 308 2 256 1 211 1 219 1 316 2 266 1 118 4 363 2 223 1 365 1 75 1 176 4 367 1 323 1 38 2 180 1 39 1 327 1 183 1 128 1 131 1 330 1 331 1 45 1 372 2 
134 1 212 1 214 1 300 1 327 2 167 1 306 2 60 1 20 1 358 1 236 2 22 2 94 2 
134 1 367 1 214 1 300 1 301 1 369 1 327 4 306 4 277 1 236 1 149 1 22 4 94 1 
134 1 239 1 212 1 309 1 214 1 327 1 290 1 306 1 328 1 236 2 186 1 22 1 94 1 
134 1 327 1 306 1 147 1 91 1 307 1 367 1 236 1 109 1 22 1 
134 1 12 1 214 1 300 1 327 2 306 2 89 1 236 1 22 2 265 1 94 1 
134 2 47 1 367 1 214 2 300 1 301 1 369 1 327 5 306 5 89 1 277 1 236 2 54 1 70 1 22 4 94 3 
134 2 74 1 367 1 214 2 300 1 301 1 369 1 327 5 306 5 89 1 277 1 236 2 54 1 70 1 22 4 94 3 
134 1 362 1 75 1 212 1 214 1 367 1 215 1 50 1 327 1 306 1 19 1 357 1 245 2 45 2 236 1 208 1 94 1 22 1 
134 1 212 1 214 1 351 1 327 1 290 1 167 1 306 1 236 2 70 1 186 1 22 1 94 1 
217 1 362 1 2 1 52 1 108 1 
362 1 256 1 2 2 104 1 346 1 87 1 269 1 177 1 108 2 202 2 217 1 52 2 183 1 18 1 253 1 244 1 330 1 53 1 92 2 
75 1 285 1 108 1 326 1 217 1 51 1 52 1 245 1 45 1 
217 1 346 1 53 1 
40 1 241 1 141 1 324 1 
40 1 315 1 298 1 241 1 340 1 182 1 324 1 
303 1 364 1 315 1 
298 3 182 1 324 1 338 1 15 2 96 1 40 1 315 3 293 1 241 1 207 1 340 1 
40 1 315 2 298 2 241 1 336 1 340 1 182 1 324 1 355 1 
218 1 315 1 274 1 298 1 293 1 91 1 307 1 225 1 340 1 182 1 324 1 
40 1 315 1 298 1 293 1 340 1 182 1 324 1 
40 2 315 1 298 1 293 1 241 1 340 1 182 1 
40 1 315 2 298 2 293 1 262 1 340 2 234 1 182 2 349 1 324 1 
298 3 225 1 142 1 182 1 324 2 40 1 250 1 315 3 293 1 304 1 241 1 340 1 355 2 
298 2 182 1 324 1 109 1 40 1 315 2 155 1 274 1 293 1 241 1 91 1 307 2 340 1 359 1 355 1 
238 1 298 4 336 1 225 1 142 1 182 2 324 2 40 1 315 4 293 1 241 1 340 2 355 2 
40 1 315 1 298 1 293 1 241 1 340 1 182 1 324 1 
298 4 225 1 142 1 182 1 338 1 324 3 15 1 40 2 315 4 241 2 207 1 340 1 371 1 355 2 
298 2 182 1 324 1 40 1 27 1 194 1 315 2 293 1 241 1 340 1 235 1 355 1 
99 1 298 3 182 1 338 1 324 1 15 2 40 1 315 3 293 1 241 1 207 2 340 1 
220 1 288 1 324 2 272 2 
11 1 315 1 298 1 293 1 340 1 182 1 
40 1 250 1 315 2 298 2 293 1 241 1 340 1 182 1 324 1 355 1 
80 1 
40 1 315 1 298 1 293 1 241 1 340 1 182 1 324 1 
298 3 182 1 324 1 15 1 40 1 250 1 315 3 293 1 241 1 340 1 355 1 
225 1 371 1 142 1 324 1 
40 1 324 1 

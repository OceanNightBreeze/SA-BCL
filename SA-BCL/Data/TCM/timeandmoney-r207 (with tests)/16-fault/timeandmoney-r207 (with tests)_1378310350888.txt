#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 313 45 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 366 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 366 340 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 222 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 23 (27,180) (27,180) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
279 3 180 1 302 9 22 1 138 1 23 4 216 1 186 1 27 1 141 2 165 1 52 7 53 1 288 1 167 1 129 2 336 1 168 1 269 1 249 2 293 9 201 4 65 1 153 1 178 1 
279 3 180 1 302 9 22 1 138 1 23 4 216 1 186 1 27 1 141 2 165 1 52 7 53 1 288 1 167 1 129 2 336 1 168 1 269 1 249 2 293 9 201 4 65 1 153 1 178 1 
279 3 180 1 281 1 302 9 22 1 23 4 216 2 186 1 123 1 27 1 141 2 165 1 52 6 53 1 288 2 12 1 167 1 129 2 130 1 168 2 336 1 249 2 293 9 199 1 175 1 201 4 65 1 178 1 153 2 
279 3 180 1 281 1 302 9 22 1 23 4 216 2 186 1 123 1 27 1 141 2 165 1 52 6 53 1 288 2 12 1 167 1 129 2 130 1 168 2 336 1 249 2 293 9 199 1 175 1 201 4 65 1 178 1 153 2 
279 3 180 1 281 1 302 9 22 1 23 4 216 2 186 1 123 1 27 1 141 2 165 1 52 6 53 1 288 2 12 1 167 1 129 2 130 1 168 2 336 1 249 2 293 9 199 1 175 1 201 4 65 1 178 1 153 2 
279 2 180 1 281 1 302 7 22 1 23 3 216 2 123 1 27 1 141 2 165 1 52 4 53 1 288 2 12 1 167 1 129 1 130 1 168 2 336 1 249 2 293 7 199 1 175 1 201 3 65 1 178 1 153 2 
279 1 180 1 302 4 22 1 23 2 216 1 186 1 27 1 141 1 52 3 288 1 167 1 129 2 168 1 249 1 293 4 201 2 65 1 178 1 
167 1 180 1 302 2 168 1 22 1 249 1 293 2 294 1 185 1 123 1 27 1 141 1 10 1 288 1 153 1 12 1 
167 1 279 1 180 1 302 3 22 1 249 2 293 3 23 1 27 1 141 2 165 1 52 1 201 1 153 1 
187 1 114 1 222 1 
75 1 
316 1 274 2 234 2 115 2 189 1 350 2 215 2 353 2 
206 1 234 2 122 1 350 3 74 1 284 1 215 2 240 1 353 3 51 1 243 2 189 1 263 1 264 1 192 1 128 2 335 1 105 1 63 1 363 1 132 1 169 1 18 1 196 1 272 1 170 1 111 1 316 1 251 2 274 2 230 2 298 1 174 1 231 1 115 2 367 1 202 2 
274 1 234 1 195 1 115 1 189 1 350 1 215 1 179 1 353 1 351 1 
221 1 96 1 43 1 350 1 324 1 50 1 353 1 187 1 114 1 101 1 115 1 31 1 124 1 179 1 
234 1 96 1 43 1 350 1 324 2 215 1 353 1 187 1 274 1 114 1 101 2 115 1 31 1 124 1 179 1 
58 1 205 1 101 1 159 1 324 1 
187 1 58 1 205 1 114 1 101 2 161 1 324 2 67 1 
58 1 101 1 324 1 
205 1 234 1 195 1 350 1 324 1 236 1 215 1 351 1 353 1 274 1 101 1 189 1 115 1 179 1 
187 1 
187 1 58 1 205 1 114 1 101 2 161 1 86 1 324 2 
118 1 205 2 58 2 61 1 95 1 158 1 161 1 213 1 324 5 250 2 187 1 91 2 114 1 101 5 137 1 13 2 289 1 220 1 56 1 
316 1 222 1 
234 1 349 1 350 2 215 1 353 2 316 2 274 1 318 1 115 2 
1 1 320 1 57 1 
128 1 206 1 105 1 63 1 350 1 122 1 284 1 353 1 316 1 230 1 51 1 243 1 262 1 263 1 367 1 264 1 
1 1 206 1 128 1 105 1 234 1 63 1 122 1 350 2 284 1 184 1 353 2 274 1 51 1 230 1 243 1 92 1 115 1 263 1 264 1 367 1 
316 1 274 3 234 3 92 1 115 3 350 3 215 1 353 3 
274 1 234 1 195 1 115 1 350 1 179 1 353 1 
274 1 234 1 318 1 349 1 115 1 350 1 215 1 179 1 353 1 
206 1 234 3 96 1 43 1 122 1 350 4 284 1 324 1 215 2 184 1 353 4 51 1 243 1 101 1 31 1 124 1 189 1 263 1 264 1 192 1 128 1 335 1 105 1 63 1 83 1 169 1 18 1 196 1 272 1 170 1 228 1 316 1 251 1 274 3 230 1 318 1 298 1 174 1 231 1 115 3 92 1 367 1 202 2 179 1 
316 1 274 1 234 1 121 1 115 2 92 1 350 2 50 1 353 2 
234 3 96 1 43 1 350 3 324 1 215 1 184 1 353 3 228 1 187 1 274 3 318 1 101 1 357 1 92 2 115 3 31 1 124 1 179 1 
1 1 234 2 350 2 215 1 353 2 274 2 318 1 92 1 115 2 57 1 
128 1 206 1 105 1 63 1 350 1 122 1 284 1 353 1 316 1 230 1 51 1 243 1 367 1 264 1 263 1 
128 1 105 1 63 1 84 1 350 1 122 1 24 1 353 1 316 1 230 1 51 1 243 1 367 1 264 1 263 1 
1 2 210 1 182 1 352 1 333 1 57 2 192 1 290 1 335 1 363 2 291 1 315 1 169 1 196 1 18 2 271 1 227 1 171 1 170 1 251 4 298 1 320 2 177 1 202 2 
274 1 207 1 234 1 96 1 115 1 350 1 179 1 353 1 
234 4 121 1 350 5 215 1 184 1 50 1 353 5 316 1 274 4 29 1 318 1 309 1 92 2 115 5 
207 1 274 2 234 2 195 1 115 2 350 2 179 1 353 2 
303 1 149 1 
303 1 149 1 
3 1 259 1 
3 1 259 1 
3 1 259 1 
303 1 149 1 311 1 
303 1 268 1 149 1 
68 1 3 1 303 2 259 1 149 2 312 1 
303 1 149 1 311 1 
303 1 149 1 311 1 
317 1 303 1 149 1 
317 1 303 1 149 1 
317 1 303 1 149 1 
68 1 247 1 303 2 42 2 157 3 15 2 71 1 147 1 149 2 324 2 183 1 110 1 187 1 260 2 188 2 34 1 101 2 301 1 287 2 
234 2 303 1 157 1 42 1 350 2 324 1 47 1 25 1 353 2 260 1 99 1 188 1 101 1 287 1 14 1 362 1 268 1 149 1 110 1 89 1 316 1 274 2 275 1 115 2 
168 1 288 1 216 1 
168 1 288 1 294 1 
328 1 168 3 163 1 21 1 294 1 216 2 
328 1 355 1 168 2 163 1 294 1 216 1 
328 1 168 2 163 2 294 1 216 1 
322 1 118 2 205 4 280 1 234 1 95 1 182 1 350 1 161 1 75 1 324 5 215 1 236 1 49 1 353 1 351 1 187 1 99 1 28 1 101 5 189 1 13 1 289 1 32 1 58 1 290 1 195 1 337 1 250 1 198 1 274 1 91 1 344 1 114 1 115 1 93 2 179 1 
205 2 234 1 7 1 159 1 350 1 324 2 236 1 215 1 241 1 353 1 351 1 187 1 30 1 101 2 189 1 58 1 195 1 274 1 114 1 115 1 179 1 
205 2 118 2 322 2 234 1 95 3 182 1 158 1 350 1 324 3 75 3 215 1 236 1 353 1 351 1 49 2 187 2 28 1 99 1 102 1 101 3 189 1 13 1 32 1 290 1 195 1 337 1 291 1 250 1 227 1 198 1 274 1 91 1 344 1 114 1 115 1 93 1 179 1 
322 4 234 1 95 5 182 2 324 4 236 1 49 4 187 3 99 2 101 4 102 2 244 1 189 1 13 1 290 2 195 1 337 1 291 2 250 1 198 1 344 2 343 1 114 1 115 1 118 4 205 3 158 1 350 1 75 6 215 1 353 1 351 1 28 1 308 1 32 1 227 2 274 1 91 1 93 2 179 1 
222 1 263 1 20 1 
60 1 263 1 
103 1 
63 1 263 1 
361 1 63 1 36 1 20 2 263 3 122 1 
63 1 263 1 122 1 
81 1 263 1 
119 1 363 5 182 1 44 1 46 2 18 4 271 3 296 1 227 1 352 2 134 1 251 9 176 1 190 1 11 1 125 1 334 1 
119 1 363 5 182 1 44 1 46 2 18 4 271 3 296 1 227 1 352 2 134 1 251 9 176 1 190 1 11 1 125 1 334 1 
119 1 209 1 363 5 182 1 44 1 46 2 18 4 271 3 296 1 227 1 352 2 134 1 251 9 176 1 190 1 11 1 125 1 334 1 
119 1 182 3 44 1 46 3 306 1 239 1 352 4 307 2 329 1 11 2 190 3 125 1 334 2 290 2 16 1 363 14 291 2 224 3 169 2 18 13 87 3 196 2 296 2 271 7 227 3 134 2 170 2 251 27 172 1 113 1 298 2 344 2 176 1 202 4 
304 1 363 6 182 1 44 1 169 2 46 2 18 5 196 2 296 1 271 5 227 1 134 1 352 3 170 2 307 1 251 11 298 2 176 1 190 2 11 1 38 1 125 1 202 4 334 1 
180 1 302 2 155 1 22 1 8 1 216 1 26 1 27 1 327 1 326 1 141 1 51 1 243 1 52 1 265 1 288 1 266 1 167 1 128 1 144 1 145 1 168 2 249 1 293 2 294 1 230 1 35 1 367 1 21 1 153 1 
180 1 302 3 120 1 216 1 26 1 27 1 327 1 326 1 141 1 51 1 243 1 52 2 265 1 288 1 266 1 167 1 128 1 144 1 145 1 168 2 249 1 293 3 294 1 339 1 230 1 35 1 367 1 21 1 368 1 153 1 
180 1 302 2 216 1 26 1 27 1 326 1 51 1 243 1 52 2 265 1 288 1 167 1 128 1 144 1 145 1 168 2 293 2 294 1 339 1 230 1 35 1 367 1 21 1 153 1 368 1 
302 1 120 1 162 1 26 2 164 1 141 1 51 1 243 1 263 1 128 1 144 2 105 1 248 1 145 2 63 1 249 1 293 1 230 1 150 1 254 1 367 1 153 2 346 1 
302 1 155 1 22 1 216 1 26 1 327 1 326 1 141 1 51 1 243 1 265 1 288 1 266 1 128 1 144 1 145 1 168 2 249 1 293 1 294 1 230 1 35 1 367 1 21 1 368 1 153 1 
330 1 
118 1 95 1 348 1 139 1 283 1 161 2 73 1 324 3 187 1 356 3 102 2 101 3 310 3 166 2 13 1 289 1 58 5 194 2 62 1 17 2 292 1 338 1 364 1 225 2 250 1 135 3 342 3 91 1 114 1 117 1 
118 1 95 1 348 1 139 1 283 1 161 2 73 1 324 3 187 1 356 3 102 2 101 3 310 3 166 2 13 1 289 1 58 5 194 2 62 1 17 2 292 1 338 1 364 1 225 2 250 1 135 3 342 3 91 1 114 1 117 1 
0 1 118 1 95 1 292 1 73 1 338 1 75 1 225 1 324 1 250 1 252 1 91 1 101 1 219 1 166 1 13 1 117 1 289 1 
4 1 95 2 324 4 237 1 187 1 51 1 243 2 101 4 102 2 13 1 289 1 58 6 194 2 105 2 63 1 17 2 292 1 338 1 250 1 342 2 254 1 117 1 118 2 161 3 73 1 75 2 164 1 356 2 219 1 310 2 263 1 166 2 32 1 128 2 131 1 364 1 226 1 225 2 135 2 230 2 91 1 367 1 
58 2 101 2 310 1 161 1 338 1 73 1 86 1 324 2 117 1 
135 1 356 1 101 1 338 1 73 1 324 1 117 1 
58 2 161 1 73 1 338 1 324 2 86 1 135 1 342 1 356 1 101 2 310 1 117 1 
234 1 350 1 73 1 161 1 324 2 236 1 215 1 353 1 351 1 187 1 101 2 189 1 310 1 58 2 195 1 338 1 86 1 342 1 274 1 276 1 114 1 115 1 179 1 117 1 
118 1 95 1 73 1 161 2 324 3 75 2 187 1 356 2 101 3 102 2 219 1 310 2 13 1 166 2 289 1 58 4 194 2 17 2 292 1 364 1 338 1 225 2 250 1 135 2 342 2 91 1 114 1 117 1 
118 1 95 1 348 1 139 1 161 2 73 1 324 3 187 1 356 2 101 3 102 2 310 2 13 1 166 2 289 1 58 4 194 2 62 1 17 2 292 1 338 1 364 1 225 2 250 1 135 2 342 2 91 1 114 1 117 1 
118 1 95 1 348 1 139 1 161 2 73 1 324 3 187 1 356 2 101 3 102 2 310 2 13 1 166 2 289 1 58 4 194 2 62 1 17 2 292 1 338 1 364 1 225 2 250 1 135 2 342 2 91 1 114 1 117 1 
0 1 118 1 95 1 6 1 348 1 161 2 73 1 214 2 324 3 75 2 187 1 356 2 100 1 101 3 310 2 13 1 166 2 289 1 58 4 292 1 338 1 225 2 250 1 135 2 342 2 91 1 252 2 114 1 117 1 
1 1 182 1 44 1 46 1 352 2 190 1 125 1 333 1 57 1 192 1 335 1 363 4 222 1 169 1 196 1 18 4 296 1 271 3 227 1 134 1 170 1 251 8 316 3 298 1 176 1 320 1 202 2 
1 11 69 1 182 2 306 1 352 1 286 1 190 1 245 1 57 4 192 2 290 2 335 1 59 1 363 8 291 1 224 3 169 2 18 6 87 3 196 2 271 2 272 1 227 1 170 2 111 1 316 1 251 14 173 1 298 2 344 2 320 11 232 1 202 4 
206 1 234 1 211 1 122 1 350 2 284 1 285 1 184 1 353 2 51 1 243 1 262 1 263 1 264 1 57 1 192 1 128 1 105 1 335 1 59 1 63 1 363 1 169 1 196 1 18 1 272 1 170 1 316 1 251 2 111 1 274 1 230 1 298 1 115 1 92 1 367 1 202 2 204 1 
1 7 234 1 182 3 44 1 46 1 284 2 184 1 51 2 243 3 190 5 57 7 192 3 290 2 105 1 59 1 335 3 63 2 64 1 291 2 18 11 196 3 296 1 107 2 111 1 251 22 298 3 344 2 115 1 202 6 66 2 206 2 72 1 350 3 122 2 352 6 353 3 125 1 264 2 263 2 128 3 363 11 33 2 169 3 85 1 88 2 271 11 227 3 272 1 134 1 170 3 316 3 274 1 230 3 231 2 176 1 92 1 320 7 367 2 368 1 
234 1 181 1 257 1 350 1 8 1 240 2 164 1 353 1 51 2 243 7 261 1 263 3 333 1 192 2 128 8 104 1 105 2 335 2 63 2 363 1 169 2 196 2 18 1 272 1 109 1 170 2 229 1 111 1 251 2 274 1 230 8 298 2 254 1 115 1 92 1 367 2 368 1 202 4 94 1 
1 1 234 1 182 1 350 1 215 1 48 1 352 1 353 1 57 1 192 1 290 1 335 1 59 1 363 1 291 1 169 1 196 1 18 2 271 1 227 1 170 1 251 3 274 1 318 1 298 1 344 1 115 1 320 1 202 2 
1 1 192 1 290 1 335 1 210 1 363 2 182 1 169 1 196 1 271 1 170 1 251 2 298 1 190 1 320 1 333 1 202 2 57 1 
1 1 192 1 335 1 291 1 169 1 196 1 18 2 271 1 227 1 352 1 170 1 171 1 251 2 298 1 320 1 333 1 202 2 57 1 
1 2 182 1 352 1 333 1 57 2 192 1 290 1 335 1 363 2 291 1 169 1 196 1 18 2 271 1 227 1 170 1 251 4 298 1 344 1 320 2 202 2 
1 1 192 1 290 1 335 1 210 1 363 2 182 1 169 1 196 1 271 1 170 1 251 2 298 1 190 1 320 1 94 1 202 2 57 1 
1 1 192 1 335 1 291 1 169 1 196 1 18 2 271 1 227 1 352 1 170 1 171 1 251 2 298 1 320 1 94 1 202 2 57 1 
1 2 182 1 352 1 190 1 57 2 192 1 290 1 335 1 363 2 291 1 169 1 196 1 18 2 271 2 227 1 170 1 251 4 298 1 344 1 320 2 202 2 94 1 
1 2 182 1 352 1 57 2 192 1 290 1 335 1 363 2 291 1 169 1 196 1 18 2 271 1 227 1 170 1 251 4 298 1 344 1 320 2 202 2 
206 1 122 1 350 1 284 1 353 1 51 1 243 1 264 1 263 1 192 1 128 1 105 1 335 1 63 1 363 1 169 1 196 1 18 1 272 1 170 1 111 1 316 1 251 2 230 1 298 1 231 1 367 1 202 2 
128 1 105 1 63 1 84 1 350 1 122 1 24 1 353 1 230 1 51 1 243 1 263 1 367 1 264 1 369 1 
1 2 182 1 352 1 57 2 192 1 290 1 335 1 59 1 363 2 291 1 169 1 196 1 18 2 271 1 227 1 170 1 251 4 298 1 344 1 320 2 202 2 
1 2 206 1 182 1 122 1 350 1 284 1 8 1 352 1 353 1 51 1 243 1 264 1 263 1 57 2 192 1 290 1 128 1 335 1 63 1 363 2 291 1 33 1 169 1 18 2 196 1 271 1 227 1 170 1 251 4 230 1 298 1 344 1 231 1 320 2 367 1 202 2 
1 1 234 1 182 1 350 1 215 1 353 1 78 1 190 1 57 1 192 1 290 1 335 1 59 1 363 2 291 1 169 1 18 1 196 1 271 1 227 1 170 1 251 3 274 1 318 1 298 1 344 1 115 1 320 1 202 2 
2 1 235 1 182 4 97 2 44 1 46 1 45 1 331 1 190 4 54 1 290 3 291 2 18 16 196 4 296 1 108 1 251 35 298 4 344 3 202 8 70 1 304 1 156 1 208 1 306 3 352 2 307 2 125 1 126 1 360 4 80 1 313 1 363 19 223 1 224 3 169 4 87 3 271 6 227 3 170 4 134 1 176 1 
2 1 70 1 208 1 156 1 304 1 97 1 182 4 44 1 45 1 46 1 306 2 352 2 307 2 331 1 190 3 125 1 54 1 126 1 360 3 290 3 80 1 313 1 363 17 223 1 291 2 224 2 169 4 87 2 196 4 18 14 296 1 271 5 227 3 108 1 134 1 170 4 251 31 298 4 344 3 176 1 202 8 
2 1 70 1 208 1 156 1 304 1 97 1 182 3 44 1 45 1 46 1 306 2 352 3 307 2 331 1 190 3 125 1 54 1 360 3 290 2 80 1 313 1 363 15 223 1 291 1 224 2 169 3 87 2 196 3 18 12 296 1 271 6 227 2 108 1 134 1 170 3 251 27 298 3 344 2 176 1 202 6 
2 1 5 1 70 1 208 1 156 1 304 1 97 1 182 4 44 1 46 1 306 2 352 3 307 2 331 1 190 3 125 1 54 1 126 1 360 3 290 3 80 1 313 1 363 17 223 1 291 2 224 2 169 4 87 2 196 4 18 14 296 1 271 6 227 3 108 1 134 1 170 4 251 31 298 4 344 3 176 1 202 8 
2 1 70 1 208 2 156 1 304 1 97 2 182 3 45 1 306 2 352 1 307 2 331 1 190 1 54 1 360 3 290 3 80 1 313 1 363 13 223 1 291 2 224 2 169 3 18 11 196 3 87 2 271 2 227 2 108 1 170 3 251 24 298 3 344 3 202 6 
68 1 260 1 188 1 303 1 42 1 71 1 147 1 149 1 287 1 76 1 
268 1 89 1 
260 1 242 1 188 1 303 1 9 1 42 1 149 1 287 1 116 1 
68 1 247 1 303 1 42 1 157 2 15 1 71 1 147 1 149 1 324 1 183 1 110 1 187 1 260 1 188 1 34 1 101 1 287 1 
68 1 247 1 303 1 42 1 157 2 15 1 71 1 147 1 149 1 324 1 183 1 110 1 187 1 260 1 188 1 34 1 101 1 287 1 
68 1 247 1 303 1 42 1 157 2 15 1 71 1 147 1 149 1 324 1 183 1 110 1 187 1 260 1 188 1 34 1 101 1 287 1 
273 1 312 1 311 1 
273 1 312 1 311 1 
317 1 253 1 
317 1 253 1 312 1 
362 1 25 1 
205 1 303 1 234 2 42 1 157 1 350 2 324 1 183 1 47 1 25 1 353 2 260 1 99 1 188 1 101 1 287 1 14 1 362 1 15 1 268 1 149 1 89 1 316 1 274 2 200 1 275 1 115 2 
273 1 311 1 
317 1 253 1 312 1 
193 1 115 1 350 1 353 1 
128 2 168 2 294 1 8 1 216 1 238 1 26 1 354 1 326 1 51 1 230 2 243 2 367 1 265 1 288 1 21 1 368 1 203 1 266 1 
128 1 168 2 160 1 294 1 216 1 26 1 354 1 326 1 230 1 51 1 243 1 265 1 367 1 288 1 21 1 368 1 266 1 
128 1 105 1 63 1 282 1 26 1 164 1 51 1 230 1 243 1 150 1 254 1 367 1 263 1 203 1 
128 1 168 2 294 1 216 1 238 1 26 1 354 1 326 1 51 1 230 1 243 1 265 1 367 1 288 1 21 1 368 1 203 1 266 1 
270 1 
206 1 234 2 350 3 122 1 284 1 215 2 353 3 51 1 243 1 189 1 264 1 263 1 192 1 128 1 105 1 335 1 63 1 169 1 18 1 196 1 272 1 170 1 316 1 251 1 274 2 230 1 298 1 174 1 231 1 115 2 367 1 202 2 
118 1 32 1 95 1 75 1 226 1 250 1 49 1 187 1 91 1 114 1 13 1 289 1 
187 1 118 1 61 1 95 1 114 1 222 1 137 1 
118 1 95 1 161 1 75 1 324 1 187 1 102 1 101 1 13 1 289 1 58 1 194 1 17 1 364 1 250 1 91 1 114 1 
118 3 322 2 95 2 182 1 43 1 305 1 161 1 122 1 75 2 324 2 49 2 51 2 243 1 101 2 218 1 263 4 55 1 267 1 13 2 289 2 58 2 32 1 290 1 128 1 105 1 60 2 361 1 63 1 250 2 88 1 197 1 230 1 91 2 344 1 345 1 20 1 367 1 347 1 
322 5 118 4 2 1 70 1 95 6 182 2 75 3 306 1 49 5 331 1 54 1 13 1 289 1 290 2 223 1 291 2 224 1 87 1 250 1 227 2 91 1 344 2 
118 2 154 1 234 1 95 2 182 2 350 1 324 1 236 1 215 1 353 1 351 1 101 1 189 1 191 2 13 1 289 1 195 1 62 1 250 1 296 1 227 1 134 1 274 1 91 1 277 1 176 1 115 1 179 1 
118 1 61 1 95 1 250 1 187 1 91 1 114 1 137 1 13 1 289 1 
322 1 118 2 290 1 344 1 182 1 75 1 49 1 
187 1 58 1 114 1 101 1 161 1 324 1 
118 2 4 1 95 2 158 1 161 2 324 3 237 1 325 1 164 1 51 1 243 4 101 3 263 1 13 2 289 1 32 2 58 4 128 4 105 2 63 1 146 1 226 2 250 2 230 4 91 2 254 1 367 1 321 2 256 1 
188 1 42 1 98 1 
188 1 142 1 42 1 71 1 25 1 
188 1 42 1 98 1 
188 1 42 1 98 1 
188 1 41 1 42 1 
188 1 41 1 42 1 
188 1 41 1 42 1 
188 1 42 1 
303 1 149 1 
304 1 182 1 44 1 46 1 306 1 352 2 190 1 54 1 125 1 363 5 224 1 169 1 18 5 87 1 196 1 296 1 271 3 227 1 170 1 134 1 251 10 298 1 176 1 202 2 
2 1 70 1 304 1 182 3 44 1 46 1 306 1 352 4 307 2 77 1 331 1 190 2 125 1 54 1 290 2 363 11 223 1 291 1 224 1 169 4 18 9 87 1 196 4 296 1 271 6 227 2 134 1 170 4 251 20 298 4 344 2 176 1 202 8 
2 1 154 1 70 1 304 1 182 5 44 1 46 1 306 1 352 4 307 2 77 1 331 1 190 5 125 1 54 1 290 2 363 16 223 1 291 1 224 1 169 4 18 13 87 1 196 4 296 2 271 9 227 4 134 2 170 4 251 29 298 4 344 2 176 2 202 8 
2 1 70 1 304 1 182 3 44 1 46 1 306 1 352 4 307 2 77 1 331 1 190 2 125 1 54 1 290 2 363 11 223 1 291 1 224 1 169 4 18 9 87 1 196 4 296 1 271 6 227 2 134 1 170 4 251 20 298 4 344 2 176 1 202 8 
304 1 182 1 44 1 46 1 306 1 352 2 190 1 54 1 125 1 363 5 224 1 169 1 18 5 87 1 196 1 296 1 271 3 227 1 170 1 134 1 251 10 298 1 176 1 202 2 
2 1 70 1 304 1 182 2 306 1 352 2 307 2 331 1 190 2 54 1 290 2 363 7 223 1 291 1 224 1 169 3 18 5 87 1 196 3 271 4 227 1 170 3 251 12 298 3 344 2 202 6 
2 1 70 1 304 1 182 2 306 1 352 1 307 2 77 1 331 1 190 1 54 1 290 2 363 7 223 1 291 1 224 1 169 4 18 5 87 1 196 4 271 2 227 1 170 4 251 12 298 4 344 2 202 8 
2 1 70 1 304 1 182 2 306 1 352 2 331 1 190 2 54 1 126 1 290 2 363 7 223 1 291 1 224 1 169 2 18 5 87 1 196 2 271 4 227 1 170 2 251 12 298 2 344 2 202 4 
363 2 44 1 18 2 296 2 271 4 134 2 352 2 251 4 190 2 125 2 
2 1 70 1 304 1 182 2 306 1 352 1 307 2 331 1 190 1 54 1 126 1 290 2 363 7 223 1 291 1 224 1 169 4 18 5 87 1 196 4 271 2 227 1 170 4 251 12 298 4 344 2 202 8 
363 4 182 1 169 2 44 1 46 1 18 4 196 2 271 3 296 1 227 1 352 2 170 2 134 1 251 8 307 1 298 2 176 1 190 1 125 1 202 4 
363 4 182 1 222 1 44 1 46 1 18 4 296 1 271 3 227 1 134 1 352 2 251 8 176 1 190 1 125 1 
290 1 363 2 291 1 182 1 169 1 18 2 196 1 271 2 227 1 352 1 170 1 251 4 77 1 298 1 344 1 190 1 202 2 
251 2 363 1 224 1 18 1 87 1 306 1 
69 1 182 3 44 1 46 1 352 5 307 2 286 1 190 4 125 1 290 2 363 11 291 2 224 2 169 2 18 12 87 2 196 2 296 2 271 9 227 3 134 2 170 2 251 23 113 1 298 2 344 2 176 1 232 1 202 4 
251 1 18 1 87 1 
251 1 363 1 224 1 
290 1 363 3 182 1 291 1 169 1 196 1 18 3 88 1 271 4 227 1 170 1 352 2 251 6 77 1 298 1 344 1 190 2 202 2 
2 1 70 1 304 1 182 2 306 1 352 2 331 1 190 2 54 1 290 2 363 7 223 1 291 1 224 1 169 1 18 5 87 1 196 1 271 4 227 1 170 1 251 12 298 1 344 2 202 2 
363 3 182 1 18 3 296 1 271 2 227 1 134 1 352 1 251 6 176 1 190 1 
363 1 169 1 44 1 18 2 196 1 271 2 296 1 352 1 134 1 170 1 251 3 307 1 113 1 298 1 190 1 125 1 202 2 
154 1 363 5 182 2 18 5 296 1 271 4 227 2 134 1 352 2 251 10 176 1 190 2 
290 1 304 1 363 2 182 1 169 1 196 1 271 1 170 1 251 2 298 1 190 1 202 2 
290 1 304 1 363 2 182 1 291 1 169 1 18 2 196 1 271 1 227 1 352 1 170 1 251 4 298 1 344 1 202 2 
304 1 363 1 169 1 18 1 196 1 296 1 271 2 170 1 134 1 352 1 251 2 298 1 190 1 202 2 
304 1 182 4 44 1 46 1 306 1 239 1 352 5 307 2 329 1 77 1 190 4 125 1 126 1 290 2 363 15 291 2 224 3 169 5 18 16 87 3 196 5 296 3 271 9 227 4 134 3 170 5 251 31 113 1 172 1 298 5 344 2 176 2 202 10 
316 1 115 1 121 1 350 1 353 1 50 1 246 1 
323 1 121 1 350 1 50 1 353 1 316 1 341 1 136 1 115 1 358 1 127 1 246 1 
128 1 105 1 51 1 230 1 243 1 63 1 254 1 222 1 367 1 263 1 164 1 
128 1 206 1 105 1 234 1 63 1 122 1 350 2 353 2 316 1 274 1 51 1 230 1 243 1 92 1 115 1 263 1 264 1 367 1 
128 1 206 1 234 1 81 1 96 1 63 2 122 2 350 2 353 2 316 1 274 2 51 1 230 1 243 1 124 1 92 1 115 2 263 3 264 1 367 1 359 1 321 1 179 1 
128 2 234 1 81 1 96 1 63 2 84 1 122 2 350 2 133 1 353 2 316 1 274 2 51 1 230 2 243 2 124 1 92 1 115 2 263 3 264 1 367 1 359 1 321 1 179 1 
58 1 128 3 105 1 60 1 81 1 63 1 43 1 122 1 324 2 133 1 187 1 51 1 230 3 243 3 114 1 300 1 101 2 263 4 20 1 367 1 255 1 359 1 321 1 
58 1 128 3 105 1 60 1 81 1 63 1 43 1 122 1 324 2 133 1 187 1 51 1 230 3 243 3 114 1 101 2 345 1 263 4 20 1 367 1 359 1 321 1 
128 1 104 1 51 1 230 1 243 1 367 1 
128 7 104 1 105 2 361 1 63 2 181 1 106 1 122 1 8 1 240 1 109 1 229 1 230 7 51 3 243 6 261 1 37 1 151 1 263 3 367 2 368 1 
1 1 234 1 182 1 44 1 284 1 46 1 8 1 51 1 243 1 190 1 57 1 192 2 59 1 335 2 63 1 196 2 18 4 296 1 251 8 298 2 115 1 202 4 66 1 206 1 350 2 122 1 353 2 352 2 264 1 263 1 125 1 128 1 363 4 33 1 169 2 365 1 271 3 227 1 170 2 134 1 316 3 274 1 230 1 231 1 92 1 176 1 320 1 367 1 
118 1 205 1 95 1 43 1 305 1 161 1 324 3 187 1 243 1 101 3 218 1 263 2 13 2 55 1 289 2 58 2 128 1 105 1 61 1 60 1 146 1 250 2 230 1 91 2 114 1 137 1 345 1 20 1 
128 2 104 1 361 1 63 1 122 1 8 1 197 1 230 2 51 2 243 2 20 1 263 2 367 1 
128 4 105 1 63 1 133 1 8 1 164 1 112 1 51 1 230 4 243 4 254 1 263 1 367 1 
128 2 63 1 72 1 148 1 212 1 122 1 230 2 51 2 243 2 37 1 151 1 263 1 367 1 321 1 
128 1 105 1 51 1 230 1 168 1 243 1 367 1 265 1 288 1 294 1 
128 2 51 1 230 2 243 2 152 1 367 1 368 1 8 1 
128 5 105 1 63 2 8 1 164 1 109 1 229 1 112 1 230 5 51 2 243 4 254 1 261 1 263 3 367 2 321 1 
128 5 105 1 63 2 8 1 164 1 109 1 112 1 230 5 51 2 243 4 254 1 261 1 263 3 367 2 233 1 321 1 
128 1 105 1 234 1 63 1 84 1 122 1 350 2 353 2 316 1 274 1 51 1 230 1 243 1 92 1 115 1 263 1 264 1 367 1 
128 1 361 1 63 1 106 1 122 1 230 1 51 2 243 1 37 1 151 1 263 1 367 1 321 1 
193 1 366 1 143 2 295 1 
193 1 340 1 205 1 366 1 314 1 82 1 101 1 143 2 324 1 295 1 
366 1 295 1 
340 1 314 1 143 1 
167 1 180 1 302 2 22 1 249 1 293 2 123 1 27 1 141 1 
167 1 279 1 201 1 23 1 
27 1 
180 1 222 1 27 1 
167 1 180 1 302 1 249 1 293 1 27 1 141 1 
302 1 145 1 153 1 
167 1 180 1 302 2 22 1 249 1 293 2 123 1 27 1 90 1 141 1 79 1 
167 1 180 1 302 2 129 1 249 1 293 2 27 1 141 1 52 1 
141 1 302 1 168 1 22 1 249 1 201 1 293 1 288 1 23 1 178 1 216 1 
141 1 302 1 22 1 249 1 293 1 27 1 
180 1 141 1 302 1 22 1 249 1 293 1 23 1 27 1 
141 1 302 1 332 1 22 1 19 1 249 1 293 1 
167 1 279 1 180 1 302 3 336 1 22 1 249 1 293 3 23 1 27 1 141 1 52 2 53 1 201 1 
167 1 180 1 302 2 168 2 22 1 249 1 293 2 294 1 216 1 27 1 141 1 52 1 278 1 21 1 288 1 
167 1 279 1 180 1 302 3 129 1 22 1 249 1 293 3 23 1 186 1 27 1 141 1 52 2 201 1 
167 1 180 1 302 1 22 1 249 1 293 1 27 1 141 1 
167 2 279 1 180 1 302 3 249 1 293 3 23 1 27 1 141 1 52 2 201 1 
167 1 180 1 302 2 22 1 249 1 258 1 269 1 293 2 27 1 141 1 299 1 52 1 
167 1 180 1 302 2 22 1 249 1 293 2 217 1 123 1 27 1 141 1 79 1 
297 2 23 2 39 1 140 1 
141 1 302 1 319 1 22 1 249 1 293 1 
167 1 180 1 302 2 22 1 249 1 293 2 27 1 141 1 52 1 53 1 
40 1 
167 1 180 1 302 1 22 1 249 1 293 1 27 1 141 1 

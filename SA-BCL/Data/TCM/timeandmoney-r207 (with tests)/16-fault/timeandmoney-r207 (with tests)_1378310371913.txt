#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (31,183,228,297,319) (26,46) (26,46) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 36 133 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 36 133 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 179 (162,213,325) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 41 316 99 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 41 316 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (34,84,178,277) (34,84,178,277) (8,52,66) (8,52,66) (8,52,66) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (34,84,178,277) (34,84,178,277) (8,52,66) (8,52,66) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (34,84,178,277) (34,84,178,277) (8,52,66) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (34,84,178,277) (34,84,178,277) (8,52,66) (8,52,66) (8,52,66) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 55 40 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 170 86 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 170 86 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 170 86 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 170 86 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 170 86 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 41 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 171 54 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (34,84,178,277) (34,84,178,277) 45 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 1 84 1 178 1 198 1 277 1 13 1 
252 1 84 1 178 1 198 1 277 1 13 1 
252 1 84 1 178 1 198 1 277 1 13 1 
252 1 84 1 178 1 198 1 277 1 13 1 
53 1 198 1 178 1 84 2 277 1 9 1 34 1 300 1 233 1 299 1 261 1 13 2 36 1 78 1 
26 1 53 1 1 1 84 1 178 1 198 1 277 1 228 1 300 1 195 1 46 1 13 1 125 1 
198 1 178 2 84 3 251 1 277 2 158 1 256 1 34 1 299 1 261 2 13 3 216 1 195 1 
53 1 198 1 178 2 84 7 251 1 277 2 9 1 34 5 75 1 133 1 60 1 300 1 233 1 261 3 299 3 13 7 36 1 78 1 216 2 311 1 195 1 
53 1 198 1 178 2 84 7 251 1 277 2 9 1 34 5 75 1 133 1 60 1 300 1 233 1 261 3 299 3 13 7 36 1 78 1 216 2 311 1 195 1 
72 1 197 1 272 1 
243 1 35 2 272 1 
274 2 214 2 180 2 141 2 89 2 149 1 163 2 322 1 
255 1 7 1 205 1 207 1 163 3 209 2 265 1 302 1 214 2 48 1 20 1 172 1 122 1 124 2 175 1 274 3 180 2 88 1 89 2 182 1 97 1 322 1 279 1 187 2 137 1 140 2 141 2 287 1 244 1 101 1 194 1 102 1 149 1 104 1 290 1 291 1 249 2 
274 1 28 1 214 1 180 1 141 1 89 1 90 1 230 1 149 1 163 1 
72 1 274 1 199 1 28 1 163 1 260 1 263 1 214 1 241 1 304 1 103 1 272 1 126 1 25 1 
72 1 274 1 199 1 28 1 180 1 89 1 163 1 260 1 263 1 141 1 214 1 304 1 103 2 272 1 25 2 
81 1 295 1 220 1 103 1 25 1 
72 1 295 1 220 1 308 1 103 2 151 1 272 1 25 2 
295 1 103 1 25 1 
274 1 28 1 180 1 90 1 89 1 230 1 163 1 141 1 214 1 220 1 51 1 149 1 103 1 25 1 
272 1 
72 1 295 1 173 1 220 1 103 2 151 1 272 1 25 2 
72 1 30 1 129 2 295 2 258 2 264 1 14 1 237 2 324 1 239 1 286 1 191 1 220 2 174 1 103 5 151 1 272 1 222 1 25 5 
293 1 274 2 180 1 89 1 157 1 205 1 97 1 163 2 187 1 209 1 265 1 137 1 214 1 287 1 244 1 102 1 291 1 175 1 70 1 249 1 
197 1 322 1 
274 2 180 1 89 1 163 2 322 2 214 2 141 1 100 1 245 1 
201 1 157 1 296 1 
274 1 205 1 259 1 97 1 163 1 322 1 187 1 209 1 137 1 265 1 287 1 244 1 102 1 175 1 291 1 249 1 
293 2 274 5 180 4 89 4 5 1 161 1 163 5 322 1 214 5 141 1 100 1 106 1 126 1 70 1 
274 2 28 1 214 2 180 2 89 2 159 1 230 1 163 2 
293 1 274 3 141 1 214 3 180 3 89 3 163 3 322 1 
274 1 28 1 214 1 180 1 89 1 230 1 163 1 
274 1 28 1 214 1 180 1 141 1 89 1 100 1 245 1 163 1 
293 1 199 1 255 1 7 1 205 1 165 1 163 4 260 1 263 1 209 1 265 1 302 1 214 3 304 1 172 1 124 2 175 1 25 1 274 4 28 1 180 3 88 1 89 3 182 1 33 1 97 1 322 1 279 1 187 1 137 1 140 1 141 2 287 1 100 1 244 1 101 1 194 1 102 1 149 1 103 1 290 1 291 1 70 1 249 1 
293 1 274 2 214 2 180 1 89 1 5 1 163 2 322 1 126 1 
293 2 274 3 294 1 199 1 28 1 180 3 89 3 260 1 163 3 165 1 263 1 141 1 214 3 304 1 100 1 103 1 272 1 70 1 25 1 
293 1 274 2 180 2 89 2 201 1 157 1 163 2 141 1 214 2 100 1 
274 1 205 1 97 1 163 1 322 1 187 1 209 1 137 1 265 1 287 1 244 1 102 1 175 1 291 1 249 1 
274 1 205 1 163 1 322 1 187 1 209 1 137 1 265 1 287 1 244 1 79 1 175 1 291 1 176 1 249 1 
201 2 7 1 157 2 296 2 298 1 47 1 302 2 168 1 215 1 120 1 172 1 307 1 124 2 313 1 88 1 182 1 229 1 96 1 140 4 144 1 194 1 104 2 105 1 290 1 
274 1 28 1 214 1 180 1 89 1 159 1 163 1 263 1 
213 1 185 1 
213 1 185 1 
213 1 179 1 185 1 162 1 
213 1 179 1 185 1 162 1 
179 1 162 1 
250 1 213 1 185 1 
213 1 179 1 185 1 162 1 
213 1 325 1 185 1 
250 1 213 1 185 1 
250 1 213 1 185 1 
213 1 185 1 271 1 
213 1 185 1 271 1 
213 1 185 1 271 1 
213 1 99 1 224 1 316 1 63 1 185 1 103 1 41 1 25 1 
213 1 224 1 316 1 63 1 185 1 41 1 
53 1 78 1 300 1 
53 1 1 1 300 1 
53 3 1 1 266 1 78 2 284 1 83 1 
53 2 1 1 266 1 78 1 114 1 83 1 
53 2 1 1 78 1 266 1 83 2 
43 1 72 1 111 1 295 1 258 1 164 1 47 1 14 1 15 1 215 1 120 1 220 4 23 2 222 2 272 2 25 5 128 1 87 1 129 1 276 2 130 1 35 3 237 1 189 1 239 3 243 1 38 1 147 2 105 1 103 5 196 1 151 1 
43 3 72 1 295 6 206 5 258 2 47 3 14 1 267 1 215 3 120 3 268 1 81 5 22 1 220 7 23 6 222 6 272 5 25 9 128 4 129 2 130 2 226 1 35 9 237 2 189 2 239 8 285 1 243 3 191 1 38 1 146 1 147 6 105 3 103 9 151 1 
72 1 43 1 111 1 258 1 47 1 215 1 120 1 220 2 23 2 272 3 222 2 25 3 128 1 129 1 130 1 276 1 35 4 237 1 189 1 239 3 243 2 191 1 147 2 105 1 103 3 196 1 
72 1 43 2 111 1 258 1 47 2 267 1 215 2 120 2 22 1 220 3 23 4 272 4 222 4 25 4 128 2 129 1 130 1 276 2 35 7 237 1 189 1 239 5 243 3 191 1 146 1 147 4 105 2 103 4 196 1 
197 1 218 1 205 1 
169 1 205 1 
92 1 
205 1 291 1 265 1 
192 1 205 1 
205 1 291 1 
142 1 218 2 131 1 205 3 291 1 265 1 
109 1 2 1 318 1 184 1 96 3 204 1 160 1 135 2 302 3 140 7 215 1 18 1 143 1 105 1 104 4 313 2 177 1 
109 1 2 1 318 1 184 1 96 3 204 1 160 1 135 2 302 3 140 7 215 1 18 1 143 1 105 1 104 4 313 2 177 1 
109 1 2 1 110 1 318 1 184 1 96 3 204 1 160 1 135 2 302 3 140 7 215 1 18 1 143 1 105 1 104 4 313 2 177 1 
109 4 43 3 2 1 7 1 166 1 47 3 302 11 215 3 18 1 120 3 82 1 124 2 313 3 177 1 88 1 91 3 56 1 318 2 182 1 96 7 321 4 135 1 98 1 140 22 143 1 145 1 104 11 105 3 290 1 71 1 42 1 
109 1 2 1 7 2 204 1 160 1 302 4 215 1 18 1 124 4 24 1 313 3 88 2 56 1 318 1 182 2 184 1 95 1 96 4 135 2 140 9 143 1 105 1 104 5 290 2 
198 1 1 1 253 1 112 1 202 1 8 1 300 1 13 1 209 1 78 1 80 1 175 1 52 1 53 2 84 2 178 1 223 1 277 1 34 1 320 1 187 1 137 1 240 1 284 1 66 1 195 1 249 1 
1 1 253 1 112 1 8 1 300 1 13 2 209 1 117 1 78 1 80 1 310 1 175 1 52 1 273 1 53 2 84 3 178 1 223 1 277 1 34 2 320 1 187 1 137 1 240 1 284 1 195 1 249 1 
53 2 273 1 1 1 84 2 253 1 223 1 112 1 8 1 34 2 300 1 13 1 187 1 209 1 137 1 78 1 240 1 284 1 80 1 310 1 195 1 175 1 249 1 
153 1 112 2 205 1 13 1 209 1 117 1 80 2 175 1 84 1 178 1 314 1 275 1 223 2 277 1 59 1 187 1 137 1 244 1 193 1 107 1 195 2 291 1 249 1 
198 1 1 1 253 1 112 1 8 1 300 1 13 1 209 1 78 1 80 1 310 1 175 1 52 1 53 2 84 2 178 1 223 1 277 1 34 1 320 1 187 1 137 1 240 1 284 1 66 1 195 1 249 1 
232 1 
295 2 205 1 258 1 10 1 209 2 14 1 217 1 175 1 222 1 25 2 314 1 55 1 129 1 187 2 137 1 236 1 237 1 189 1 239 1 283 1 244 2 39 1 193 1 40 1 103 2 292 1 151 1 291 1 249 2 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 295 1 173 1 40 1 103 2 292 1 151 1 25 2 
236 1 237 1 55 1 129 1 39 1 258 1 40 1 103 1 292 1 14 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 55 1 39 1 40 1 103 1 292 1 25 1 
236 1 237 1 55 1 129 1 39 1 258 1 40 1 103 1 292 1 14 1 25 1 
197 1 2 1 201 1 157 1 7 1 204 1 160 1 296 1 302 3 215 1 18 1 172 1 307 1 124 2 313 2 88 1 182 1 184 1 96 2 135 1 322 2 140 6 194 1 104 3 105 1 290 1 
109 1 43 2 4 1 201 4 7 2 157 11 296 11 47 1 302 6 215 2 120 2 48 1 306 1 121 1 172 2 124 4 313 1 88 2 91 3 182 2 96 2 321 3 322 1 98 1 139 1 140 14 190 1 101 1 194 1 104 8 105 1 290 2 42 1 
293 1 201 1 7 1 205 1 259 1 163 2 209 1 265 1 302 1 214 1 121 1 48 1 172 1 124 2 175 1 274 2 180 1 89 1 88 1 182 1 97 1 322 1 187 1 234 1 137 1 235 1 140 2 287 1 244 1 65 1 101 1 102 1 194 1 104 1 290 1 291 1 70 1 249 1 
2 1 154 1 255 2 7 3 157 7 160 1 163 3 265 2 18 1 172 3 175 2 274 3 180 1 88 3 89 1 184 1 182 3 96 8 97 2 187 3 287 2 101 1 194 3 288 2 102 2 105 3 104 10 290 3 291 2 293 1 109 4 43 2 201 7 204 1 205 2 296 7 47 2 209 3 302 10 303 2 214 1 215 3 120 2 48 1 305 1 121 1 310 1 124 6 309 2 313 4 135 1 322 2 136 1 137 2 138 2 140 20 244 1 70 1 249 3 
293 1 152 1 7 2 202 1 205 3 207 2 163 1 209 8 211 1 302 1 214 1 48 1 172 2 307 1 310 1 124 4 312 1 175 2 274 1 314 1 180 1 89 1 88 2 182 2 57 1 187 8 137 2 282 1 140 2 242 1 244 2 101 1 148 1 194 2 193 1 104 1 290 2 291 2 249 7 
43 1 201 1 157 1 7 1 296 1 163 1 47 1 302 2 214 1 215 1 120 1 121 1 172 1 124 2 313 1 274 1 180 1 88 1 89 1 182 1 94 1 96 1 141 1 140 3 100 1 194 1 104 1 105 1 290 1 
109 1 88 1 201 1 157 1 7 1 182 1 96 1 296 1 140 2 215 1 120 1 144 1 172 1 194 1 307 1 124 2 104 2 290 1 
88 1 201 1 157 1 7 1 182 1 96 1 296 1 298 1 47 1 302 2 140 2 172 1 194 1 307 1 124 2 105 1 290 1 313 1 
109 1 43 1 88 1 201 2 157 2 7 1 182 1 96 2 296 2 47 1 302 2 140 4 215 1 120 1 172 1 194 1 307 1 105 1 124 2 104 2 290 1 313 1 
109 1 88 1 201 1 157 1 7 1 182 1 96 1 296 1 140 2 215 1 120 1 144 1 148 1 172 1 194 1 124 2 104 2 290 1 
88 1 201 1 157 1 7 1 182 1 96 1 296 1 298 1 47 1 302 2 140 2 148 1 172 1 194 1 124 2 105 1 290 1 313 1 
109 1 43 1 88 1 201 2 157 2 7 1 182 1 96 2 296 2 47 1 302 2 140 4 215 1 120 1 148 1 172 1 194 1 105 1 124 2 104 2 290 1 313 1 
109 1 43 1 88 1 201 2 157 2 7 1 182 1 96 2 296 2 47 1 302 2 140 4 215 1 120 1 172 1 194 1 105 1 124 2 104 2 290 1 313 1 
255 1 7 1 205 1 163 1 209 1 265 1 302 1 48 1 172 1 124 2 175 1 274 1 88 1 182 1 97 1 322 1 187 1 137 1 140 2 287 1 244 1 101 1 102 1 194 1 104 1 290 1 291 1 249 1 
7 1 205 1 163 1 209 1 265 1 302 1 48 1 79 1 172 1 124 2 175 1 176 1 274 1 88 1 227 1 182 1 322 1 187 1 137 1 140 2 287 1 244 1 101 1 194 1 104 1 290 1 291 1 249 1 
109 1 43 1 88 1 201 2 157 2 7 1 182 1 96 2 296 2 47 1 302 2 140 4 215 1 120 1 121 1 172 1 194 1 105 1 124 2 104 2 290 1 313 1 
109 1 43 1 201 2 255 1 157 2 7 1 202 1 296 2 205 1 163 1 47 1 209 1 265 1 302 2 215 1 120 1 172 1 309 1 124 2 175 1 313 1 274 1 88 1 182 1 96 2 97 1 187 1 137 1 140 4 287 1 102 1 194 1 105 1 104 2 290 1 291 1 249 1 
109 1 43 1 201 1 7 1 157 1 296 1 163 1 47 1 302 1 214 1 215 1 120 1 121 1 172 1 124 2 274 1 180 1 88 1 89 1 182 1 96 1 141 1 140 3 100 1 194 1 105 1 104 2 290 1 328 1 
0 1 86 1 88 1 7 1 182 1 93 1 170 1 124 2 24 1 290 1 
0 1 86 1 88 1 7 1 182 1 93 1 170 1 124 2 24 1 290 1 
0 1 86 1 88 1 7 1 182 1 93 1 170 1 124 2 24 1 290 1 
0 1 86 1 88 1 7 1 182 1 93 1 170 1 124 2 24 1 290 1 
0 1 86 1 88 1 7 1 182 1 93 1 170 1 124 2 24 1 290 1 
7 1 205 1 44 1 207 2 163 2 209 2 211 1 302 1 214 2 119 1 121 1 48 1 172 1 124 2 175 1 274 2 85 1 88 1 182 1 57 1 231 1 187 2 137 1 140 2 101 1 194 1 327 1 104 1 290 1 291 1 249 2 
1 1 253 1 202 1 203 1 300 1 209 2 78 1 310 1 175 1 53 2 223 1 320 1 187 2 137 1 238 1 240 1 284 1 150 1 249 2 
53 2 1 1 253 1 3 1 223 1 320 1 300 1 187 1 209 1 137 1 238 1 78 1 240 1 284 1 310 1 175 1 249 1 
314 1 275 1 223 1 203 1 205 1 187 1 209 1 137 1 62 1 244 1 193 1 175 1 291 1 249 1 
53 2 1 1 253 1 223 1 203 1 320 1 300 1 187 1 209 1 137 1 238 1 78 1 240 1 284 1 310 1 150 1 175 1 249 1 
200 1 
72 1 197 1 239 1 174 1 272 1 222 1 264 1 
72 1 295 1 258 1 14 1 16 1 222 1 272 2 25 1 127 1 315 1 129 1 35 1 237 1 239 1 243 1 103 1 151 1 
72 2 254 2 74 2 258 4 10 1 260 2 264 1 265 3 14 4 167 1 19 2 169 3 174 1 23 6 175 4 272 8 25 5 29 2 35 12 187 3 37 1 189 2 281 2 192 2 103 5 105 2 108 1 291 3 43 2 202 1 295 5 205 10 47 2 209 3 215 2 120 2 218 2 222 8 129 4 132 1 131 1 58 2 134 1 137 3 237 4 138 2 239 9 243 6 244 1 64 2 147 6 69 2 151 3 249 3 
43 2 72 2 254 1 295 1 258 2 10 1 208 1 47 2 14 2 116 1 215 2 120 2 19 2 50 1 221 1 23 5 272 5 222 5 25 1 129 2 91 1 317 1 35 6 321 1 186 1 98 1 237 2 189 1 239 8 243 3 147 5 103 1 105 2 247 1 151 1 
2 1 254 1 258 1 163 1 12 1 14 1 214 1 215 2 18 1 19 2 51 1 222 2 25 1 274 1 28 1 180 1 129 1 90 1 89 1 184 1 230 1 237 1 61 1 239 2 141 1 149 1 103 1 105 1 
72 1 129 1 258 1 14 1 264 1 237 1 239 1 174 1 222 1 272 1 
43 2 254 1 35 10 47 2 138 1 239 5 215 2 120 2 243 5 19 2 147 5 23 5 105 2 222 5 272 5 
72 1 295 1 103 1 151 1 272 1 25 1 
295 2 205 2 258 2 10 1 209 3 265 1 14 1 217 1 21 1 49 1 175 3 222 1 25 2 314 1 129 2 278 1 132 1 323 1 187 3 137 2 237 2 37 1 189 1 239 1 283 1 191 1 244 2 289 1 193 1 103 2 291 2 151 1 249 3 
255 1 7 1 205 1 163 3 209 1 265 1 302 1 214 2 172 1 124 2 175 1 274 3 180 2 88 1 89 2 182 1 97 1 322 1 187 1 279 1 137 1 140 1 141 2 287 1 244 1 101 1 102 1 194 1 149 1 290 1 291 1 249 1 
72 2 129 1 35 4 258 1 135 1 10 1 14 1 237 1 189 1 239 1 243 2 147 2 23 2 222 2 272 4 
224 1 41 1 
224 1 41 1 
224 1 41 1 
224 1 41 1 
224 1 41 1 
224 1 41 1 
224 1 41 1 
224 1 41 1 
213 1 185 1 
2 1 7 1 204 1 160 1 302 4 215 1 18 1 124 2 24 1 313 2 91 1 88 1 317 1 182 1 184 1 96 2 321 1 135 1 98 1 140 8 105 1 104 4 290 1 
109 1 43 1 2 1 7 2 204 1 160 1 302 5 215 2 18 1 120 1 24 1 124 4 313 2 88 2 91 1 317 1 184 1 182 2 96 3 321 2 135 1 98 1 140 11 105 1 104 6 290 2 248 1 42 1 
109 1 43 2 2 1 7 3 204 1 160 1 208 1 47 2 302 10 215 3 18 1 120 2 221 1 124 6 24 1 313 3 91 1 88 3 56 1 317 1 184 1 182 3 96 4 321 1 135 1 186 1 98 1 140 19 104 9 105 3 247 1 290 3 248 1 
109 2 43 2 2 1 7 3 204 1 160 1 208 1 47 1 302 7 215 3 18 1 120 2 221 1 124 6 24 1 313 3 56 1 91 1 88 3 317 1 184 1 182 3 96 5 321 1 135 1 186 1 98 1 140 17 104 10 105 2 290 3 247 1 248 1 
2 1 7 1 204 1 160 1 302 4 215 1 18 1 124 2 24 1 313 2 91 1 88 1 317 1 182 1 184 1 96 2 321 1 135 1 98 1 140 8 105 1 104 4 290 1 
109 1 43 2 7 1 208 1 47 2 302 6 215 2 120 2 221 1 124 2 24 1 313 1 91 1 88 1 317 1 182 1 96 2 321 1 186 1 98 1 140 12 104 6 105 2 290 1 247 1 
109 2 43 2 2 1 7 4 204 1 160 1 208 1 47 1 302 8 215 3 18 1 120 2 221 1 124 8 24 1 313 3 88 4 91 1 56 2 317 1 184 1 182 4 96 5 321 1 135 1 186 1 98 1 140 18 104 10 105 2 247 1 290 4 248 1 
109 3 43 3 155 1 7 4 208 1 47 2 302 7 215 3 120 3 221 1 24 1 124 8 313 3 88 4 91 1 56 2 317 1 182 4 96 6 321 1 186 1 98 1 140 16 104 9 105 2 247 1 290 4 
109 3 2 3 184 1 204 2 96 6 160 1 302 4 140 7 215 1 18 3 105 1 104 3 313 3 
109 1 43 2 2 1 155 1 7 4 204 1 160 1 208 1 47 1 302 8 215 3 18 1 120 2 221 1 24 1 124 8 313 3 88 4 91 1 56 2 317 1 184 1 182 4 96 4 321 1 135 1 186 1 98 1 140 18 104 10 105 2 247 1 290 4 
109 1 2 1 88 2 56 1 7 2 184 1 182 2 96 3 204 1 160 1 135 1 302 4 140 8 215 1 18 1 105 1 104 4 124 4 290 2 313 2 
302 3 197 1 2 1 140 6 215 1 18 1 184 1 96 2 204 1 160 1 105 1 104 3 135 1 313 2 
109 1 43 1 88 1 7 1 182 1 96 2 47 1 302 2 140 4 215 1 120 1 105 1 124 2 104 2 290 1 313 1 248 1 
109 1 43 1 91 1 96 2 321 2 47 1 98 1 302 4 140 7 215 1 120 1 105 1 104 3 313 1 42 1 
109 4 43 2 2 2 7 2 6 1 204 1 160 1 47 2 302 12 215 3 18 2 120 2 124 4 313 5 91 2 56 2 88 2 184 1 182 2 96 9 321 2 135 1 139 1 140 23 190 1 104 11 105 3 290 2 42 1 
302 1 140 1 321 1 
140 1 91 1 104 1 
109 1 43 1 88 1 7 1 182 1 96 3 47 1 138 1 302 3 140 6 215 1 120 1 124 2 104 3 105 1 290 1 248 1 313 2 
109 1 43 2 7 1 208 1 47 2 302 6 215 2 120 2 221 1 124 2 24 1 313 1 91 1 88 1 317 1 182 1 96 2 321 1 186 1 98 1 140 12 104 6 105 2 290 1 247 1 
109 1 2 1 184 1 96 2 302 3 140 6 215 1 18 1 104 3 105 1 313 1 
109 1 2 1 56 1 88 1 6 1 7 1 182 1 96 2 204 1 160 1 302 2 140 3 18 1 104 1 124 2 290 1 313 1 
109 2 2 2 88 1 7 1 182 1 184 1 96 5 302 5 61 1 140 10 215 2 18 2 124 2 24 1 104 5 105 2 290 1 313 3 
109 1 88 1 7 1 182 1 96 1 140 2 215 1 120 1 24 1 124 2 104 2 290 1 
109 1 43 1 88 1 7 1 182 1 96 2 47 1 302 2 140 4 215 1 120 1 105 1 24 1 124 2 104 2 290 1 313 1 
109 1 2 1 155 1 56 1 88 3 6 1 7 3 182 3 96 2 302 2 140 3 18 1 24 1 124 6 104 1 290 3 313 1 
109 5 43 3 2 3 155 1 6 1 7 5 204 1 160 1 166 1 47 3 302 18 215 5 18 3 120 3 82 1 124 10 24 1 313 7 56 2 88 5 91 3 184 2 182 5 96 12 321 4 135 1 98 1 140 34 145 1 104 16 105 5 290 5 248 1 42 1 
274 1 214 1 5 1 171 1 163 1 322 1 126 1 
212 1 54 1 17 1 225 1 326 1 171 1 
314 1 197 1 244 1 193 1 205 1 175 1 291 1 209 1 187 1 137 1 249 1 
293 1 274 2 180 1 89 1 205 1 97 1 163 2 322 1 187 1 209 1 265 1 137 1 214 1 287 1 244 1 291 1 175 1 249 1 
293 1 274 2 28 1 180 1 89 2 132 1 58 1 205 3 97 1 163 2 322 1 263 1 187 1 209 1 265 2 137 1 214 2 304 1 287 1 192 1 291 2 175 1 249 1 
293 1 205 3 163 2 209 2 263 1 77 1 265 2 214 2 304 1 79 1 175 1 274 2 28 1 180 1 89 2 132 1 58 1 322 1 187 2 137 1 287 1 192 1 291 2 249 2 
72 1 295 1 205 4 260 1 209 3 77 1 265 1 169 1 218 1 175 1 272 1 25 2 27 1 132 1 58 1 187 3 137 1 244 1 192 1 68 1 103 2 291 1 249 3 
72 1 29 1 132 1 295 1 58 1 205 4 260 1 187 3 209 3 77 1 265 1 137 1 244 1 169 1 218 1 192 1 103 2 291 1 175 1 272 1 25 2 249 3 
282 1 175 1 209 1 187 1 137 1 249 1 
152 1 202 1 131 1 205 3 207 1 323 1 187 7 209 7 265 1 137 2 211 1 188 1 282 1 242 1 244 2 21 1 310 1 312 1 291 2 175 3 249 6 
2 1 255 1 7 2 157 1 160 1 163 2 265 1 18 1 172 2 175 1 274 2 180 1 88 2 89 1 182 2 184 1 96 2 97 1 187 1 287 1 102 1 288 1 194 2 104 3 105 1 290 2 291 1 293 1 201 1 202 1 204 1 44 1 205 1 296 1 209 1 302 3 214 1 215 1 121 1 309 1 124 4 313 2 135 1 322 2 137 1 140 6 249 1 
72 1 74 1 295 2 258 2 205 2 260 1 209 1 264 1 14 2 169 1 218 1 220 1 174 1 272 1 222 1 25 3 29 1 129 2 187 1 237 2 37 1 239 1 281 1 244 1 103 3 69 1 151 1 249 1 
202 1 131 1 205 2 187 2 209 2 265 1 137 1 282 1 167 1 218 1 291 1 175 2 249 2 
314 1 202 1 205 1 76 1 187 4 209 4 77 1 137 1 244 1 193 1 175 1 291 1 249 4 
154 1 132 1 205 1 323 1 187 2 209 2 265 1 137 1 49 1 21 1 289 1 291 1 175 2 249 2 
53 1 1 1 300 1 187 1 209 1 137 1 240 1 244 1 175 1 249 1 
85 1 202 1 205 1 187 2 209 2 137 1 211 1 310 1 291 1 175 1 249 2 
314 1 152 1 132 1 202 1 205 3 76 1 187 5 209 5 137 2 211 1 244 1 193 1 312 1 291 2 175 2 249 4 
314 1 152 1 132 1 202 1 205 3 76 1 187 5 209 5 137 2 211 1 244 1 219 1 193 1 291 2 175 2 249 4 
293 1 274 2 180 1 89 1 205 1 163 2 322 1 187 1 209 1 265 1 137 1 214 1 287 1 244 1 79 1 291 1 175 1 249 1 
132 1 131 1 205 1 323 1 187 1 209 1 265 1 137 1 188 1 21 1 291 1 175 2 249 1 
73 1 32 1 322 1 280 1 210 1 
72 1 199 1 28 1 181 1 73 2 32 2 113 1 260 1 115 1 165 1 322 1 263 1 280 2 210 1 304 1 220 1 103 2 272 1 25 2 
274 1 214 1 119 1 73 1 327 1 163 1 231 1 280 1 210 1 
181 1 113 1 210 1 
197 1 158 1 256 1 261 1 
84 1 178 1 277 1 158 1 256 1 261 1 13 1 
80 1 195 1 13 1 
198 1 178 1 84 3 277 1 183 1 228 2 158 1 319 1 256 1 297 1 261 1 13 3 
84 2 178 1 277 1 158 1 256 1 34 1 9 1 261 1 13 2 
53 1 198 1 178 1 84 1 277 1 233 1 299 1 261 1 300 1 13 1 78 1 
84 1 178 1 198 1 277 1 158 1 261 1 13 1 
84 1 178 1 198 1 277 1 158 2 256 1 13 1 
84 1 178 1 198 1 277 1 301 1 13 1 11 1 
198 1 178 1 84 3 277 1 158 1 256 1 34 2 75 1 299 1 261 2 13 3 216 1 311 1 
53 2 84 2 178 1 198 1 1 1 78 1 284 1 277 1 34 1 45 1 300 1 13 1 
198 1 178 2 84 4 156 1 277 2 158 1 256 1 9 1 34 2 299 1 261 2 13 4 216 1 
84 1 178 1 198 1 277 1 158 1 256 1 261 1 13 1 
84 4 178 1 277 1 228 1 183 1 158 2 256 2 34 2 297 1 299 1 261 3 13 4 216 1 67 1 
198 1 178 1 84 2 277 1 158 1 256 1 34 1 60 1 261 1 13 2 118 1 269 1 
198 1 178 1 84 3 277 1 31 1 183 1 228 2 158 1 256 1 297 2 261 1 13 3 
257 1 261 2 270 1 262 2 
84 1 178 1 198 1 277 1 246 1 13 1 
84 2 178 1 198 1 277 1 158 1 256 1 34 1 75 1 261 1 13 2 
123 1 
84 1 178 1 198 1 277 1 158 1 256 1 261 1 13 1 
198 1 178 1 84 3 277 1 228 1 158 1 256 1 34 1 75 1 261 1 13 3 
216 1 67 1 261 1 299 1 
158 1 261 1 

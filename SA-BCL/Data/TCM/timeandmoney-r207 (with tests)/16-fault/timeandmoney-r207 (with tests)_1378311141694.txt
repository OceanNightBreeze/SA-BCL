#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 169 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 27 57 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 27 57 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 337 (61,276,298) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 239 312 165 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (64,186) 313 74 238 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 239 129 321 222 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 239 161 321 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 239 129 321 222 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 239 129 321 222 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 239 129 321 222 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 239 312 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 239 161 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 231 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 235 (158,245) (158,245) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 3 97 1 304 1 44 1 227 1 174 2 245 1 158 1 219 3 177 1 311 1 246 1 235 1 29 2 
116 1 169 1 174 1 219 1 311 1 29 1 
116 1 169 1 174 1 219 1 311 1 29 1 
116 1 169 1 174 1 219 1 311 1 29 1 
116 1 169 1 174 1 219 1 311 1 29 1 
116 4 106 1 252 2 166 1 353 1 304 3 215 1 174 1 233 1 27 1 219 4 177 2 246 1 311 1 235 2 29 1 
116 2 106 1 262 1 19 1 336 1 97 1 353 1 330 1 44 1 174 1 319 1 245 1 158 1 219 2 311 1 29 1 
116 9 106 1 162 1 249 1 252 2 166 1 353 1 304 7 57 1 215 1 44 1 227 1 233 1 174 2 243 1 27 1 219 9 177 4 311 1 246 3 235 4 29 2 
116 9 106 1 162 1 249 1 252 2 166 1 353 1 304 7 57 1 215 1 44 1 227 1 233 1 174 2 243 1 27 1 219 9 177 4 311 1 246 3 235 4 29 2 
105 1 0 1 95 1 300 1 109 1 205 1 98 1 134 1 46 1 228 1 282 1 60 1 28 1 247 1 
130 1 
56 1 130 1 35 1 95 2 209 1 184 1 98 1 247 2 
139 1 130 1 91 2 53 2 349 1 95 5 11 1 184 1 98 2 56 1 364 1 291 1 242 1 209 2 294 1 259 1 247 5 192 2 367 1 
130 1 231 1 184 1 
130 1 240 1 8 2 
105 2 46 2 228 2 300 2 60 2 28 2 134 1 288 1 
115 2 212 1 323 1 296 1 248 1 117 1 163 1 300 2 2 2 302 1 328 2 352 1 303 1 281 2 216 1 354 1 170 2 306 1 46 3 6 1 333 1 28 2 221 1 105 2 180 1 149 1 200 1 131 1 134 1 288 1 12 1 13 1 290 1 228 3 112 1 60 2 322 1 
105 1 0 1 46 1 228 1 300 1 282 1 60 1 28 1 205 1 134 1 
0 1 95 1 300 1 46 2 173 1 282 2 283 1 28 1 357 1 358 1 105 2 130 1 315 1 109 1 184 1 205 1 134 1 82 1 228 2 60 1 247 1 
105 1 130 1 95 2 300 1 315 1 184 1 82 1 46 1 228 1 173 1 60 1 282 1 28 1 357 1 247 2 
95 1 209 1 104 1 98 1 247 1 
105 1 275 1 130 1 0 1 300 1 95 2 109 1 184 1 205 1 134 1 98 1 56 1 46 1 228 1 282 1 60 1 209 1 28 1 247 2 
95 1 209 1 247 1 
105 2 300 1 119 1 288 2 226 1 46 2 228 2 60 1 28 1 
186 1 313 1 264 1 
212 1 323 1 296 1 117 1 131 1 200 1 2 1 302 1 328 1 288 1 281 1 216 1 354 1 46 1 228 1 111 1 
231 1 288 1 
323 1 105 1 212 1 296 1 117 1 200 1 131 1 2 1 302 1 328 1 280 1 281 1 186 1 216 1 354 1 46 2 102 1 228 2 60 1 28 1 
105 3 46 3 102 1 228 3 300 1 60 3 28 3 288 1 
105 1 0 1 46 1 228 1 282 1 60 1 28 1 
105 1 226 1 46 1 228 1 300 1 282 1 60 1 119 1 28 1 
115 2 323 1 212 1 296 1 117 1 300 2 95 1 2 1 302 1 328 1 352 1 303 1 280 1 281 1 216 1 354 1 170 1 306 1 46 4 102 1 173 1 282 1 333 1 28 3 357 1 105 3 180 1 149 1 200 1 131 1 315 1 134 1 288 1 12 1 82 1 13 1 290 1 83 1 226 1 271 1 228 4 60 3 322 1 247 1 
105 2 266 1 288 1 46 2 102 1 228 2 282 1 60 1 283 1 28 1 147 1 
105 3 130 1 52 1 300 1 95 1 315 1 280 1 82 1 83 1 226 1 46 3 173 1 102 2 228 3 282 1 60 3 28 3 357 1 247 1 
105 2 300 1 264 1 186 1 226 1 46 2 102 1 228 2 60 2 28 2 
212 1 323 1 117 1 296 1 131 1 200 1 2 1 302 1 328 1 288 1 281 1 216 1 354 1 46 1 228 1 
212 1 323 1 296 1 131 1 200 1 142 1 2 1 328 1 288 1 281 1 241 1 216 1 354 1 46 1 228 1 
64 1 115 2 17 1 303 1 121 1 306 1 170 4 172 1 7 1 333 1 50 1 76 1 237 1 313 2 149 1 264 2 12 1 13 1 186 2 58 1 112 2 273 1 59 1 322 2 
105 1 324 1 46 1 228 1 282 1 60 1 28 1 357 1 
105 5 300 1 350 1 266 1 280 1 288 1 226 1 46 5 102 2 228 5 136 1 283 1 282 1 60 4 147 1 28 4 
105 2 324 1 0 1 46 2 228 2 282 1 60 2 28 2 
298 1 337 1 258 1 61 1 
276 1 258 1 61 1 
258 1 61 1 
258 1 61 1 
298 1 337 1 
298 1 337 1 
298 1 337 1 
204 1 258 1 61 1 
204 1 258 1 61 1 
204 1 258 1 61 1 
93 1 258 1 61 1 
93 1 258 1 61 1 
93 1 258 1 61 1 
89 1 130 1 38 1 94 1 39 2 95 2 196 2 265 1 279 1 167 1 316 3 363 1 152 2 69 1 103 2 176 2 258 2 61 2 247 2 
38 1 95 1 276 1 196 1 4 1 46 2 70 1 103 1 176 1 258 1 28 2 77 1 105 2 338 1 316 1 288 1 152 1 228 2 135 1 272 1 60 2 61 1 247 1 137 1 
106 2 90 1 19 1 233 1 287 2 
106 1 233 1 353 1 
106 1 19 1 353 1 
223 1 106 3 90 1 19 1 233 2 287 1 
106 2 90 1 19 1 233 1 78 1 287 1 
210 1 17 1 91 1 143 1 41 2 95 5 301 2 98 4 67 2 254 1 25 1 171 1 7 1 8 3 259 3 50 1 314 1 130 2 53 1 11 2 338 1 240 1 184 1 56 1 135 1 273 1 242 1 209 1 159 1 137 1 192 1 247 5 
0 1 95 2 300 1 327 1 98 2 99 1 46 1 308 1 282 1 28 1 104 1 105 1 130 1 109 1 184 1 205 1 134 1 228 1 209 1 60 1 247 2 
210 1 139 1 17 1 91 1 143 1 41 1 95 3 301 2 98 2 254 1 67 2 25 1 7 1 8 4 259 3 50 1 130 3 53 1 11 2 240 2 184 1 135 1 273 1 159 1 192 1 247 3 
139 1 210 1 17 2 91 1 143 1 41 2 95 4 145 1 301 4 98 3 67 4 254 1 25 1 7 2 8 7 259 5 335 1 50 2 130 4 53 1 11 4 240 3 184 1 361 1 135 2 273 2 159 2 192 1 247 4 
48 1 
296 1 231 1 285 1 
296 1 194 1 
296 1 200 1 
289 1 296 3 200 1 354 1 285 2 197 1 
296 1 200 1 354 1 
296 1 190 1 
250 1 305 1 121 4 68 2 217 1 170 14 47 1 356 1 261 2 50 3 359 1 237 5 54 2 33 2 112 8 273 3 113 1 244 1 322 6 
43 1 305 2 312 1 359 1 100 1 170 3 239 1 112 2 54 1 165 1 322 1 
115 4 250 1 303 2 305 1 121 5 68 2 170 16 217 2 218 1 47 1 50 3 261 2 359 1 237 7 149 2 54 2 224 1 33 2 12 2 34 1 13 2 273 3 112 9 244 1 322 7 
250 1 305 1 121 4 68 2 170 14 217 1 47 1 356 1 261 2 50 3 359 1 237 5 54 2 33 2 112 8 273 3 244 1 322 6 
250 1 305 1 121 4 68 2 170 14 217 3 47 1 356 1 261 2 50 3 359 1 237 7 54 2 33 2 112 8 273 3 244 1 322 6 
212 1 116 1 323 1 296 1 92 2 2 1 253 1 328 1 22 1 281 1 44 2 174 1 219 1 179 1 29 1 182 1 131 1 200 1 31 2 270 1 153 2 341 1 160 1 
116 1 323 1 92 1 19 1 2 1 164 1 96 1 328 1 353 1 281 1 44 1 5 1 233 1 174 1 73 1 219 1 311 1 29 1 223 1 106 2 131 1 31 1 151 1 153 1 14 1 36 1 
116 2 323 1 92 1 19 1 2 1 164 1 328 1 97 1 353 1 304 1 281 1 44 1 5 1 233 1 174 1 73 1 219 2 220 1 311 1 29 1 223 1 106 2 131 1 31 1 151 1 153 1 14 1 36 1 245 1 158 1 
116 3 323 1 92 1 19 1 2 1 164 1 96 1 328 1 97 1 353 1 304 2 281 1 122 1 44 1 5 1 233 1 174 1 219 3 29 1 223 1 106 2 131 1 31 1 151 1 153 1 14 1 36 1 245 1 158 1 160 1 
116 2 323 1 92 1 19 1 2 1 96 1 328 1 97 1 353 1 304 2 281 1 122 1 44 1 233 1 219 2 223 1 106 2 131 1 31 1 151 1 153 1 14 1 36 1 245 1 158 1 
185 1 
88 2 323 1 91 1 1 2 95 5 325 1 2 2 3 1 328 2 281 2 46 1 283 1 282 1 8 2 105 1 200 1 53 1 10 1 107 1 11 2 203 1 240 2 339 4 56 3 340 1 155 2 292 1 209 6 242 1 295 1 16 1 114 1 247 5 212 2 296 1 346 2 253 1 22 1 24 2 25 1 173 1 259 2 357 1 358 1 130 2 131 1 360 1 315 1 184 1 267 2 80 2 82 1 228 1 365 1 192 1 
325 1 95 3 46 1 173 1 283 1 282 1 357 1 358 1 105 1 107 1 360 1 315 1 267 1 82 1 339 2 56 1 35 1 228 1 365 1 209 2 16 1 247 3 
105 1 360 1 107 1 95 2 325 1 315 1 339 3 82 1 46 1 155 1 173 1 228 1 365 1 282 1 283 1 16 1 357 1 247 2 358 1 
105 1 360 1 107 1 95 3 325 1 315 1 267 1 339 3 82 1 56 1 24 1 35 1 46 1 155 1 173 1 228 1 365 1 209 2 282 1 283 1 16 1 357 1 247 3 358 1 
37 1 88 2 0 1 91 1 1 2 95 5 325 1 46 2 282 2 283 1 105 2 53 1 107 1 10 1 11 1 109 1 203 1 240 2 205 1 339 5 56 3 155 3 60 1 209 7 242 1 157 1 16 1 247 5 211 1 346 2 300 1 24 4 173 1 28 1 259 1 357 1 358 1 130 2 360 1 32 1 132 1 315 1 184 2 267 4 80 2 134 1 82 1 35 1 228 2 365 1 192 1 
88 2 346 2 91 1 1 2 325 1 95 4 24 2 46 1 173 1 283 1 282 1 8 2 259 1 357 1 358 1 105 1 130 2 53 1 10 1 107 1 360 1 11 1 315 1 203 1 240 2 184 1 267 2 80 2 82 1 339 4 56 2 155 2 228 1 365 1 209 4 242 1 295 1 16 1 192 1 247 4 
88 2 37 1 346 2 91 1 1 2 325 1 95 4 24 2 46 1 173 1 283 1 282 1 259 1 357 1 358 1 105 1 130 1 53 1 10 1 107 1 360 1 11 1 132 1 203 1 315 1 240 2 184 1 267 2 80 2 82 1 339 4 56 2 155 2 228 1 365 1 209 4 242 1 157 1 16 1 247 4 192 1 
88 2 37 1 346 2 91 1 1 2 325 1 95 4 24 2 46 1 173 1 283 1 282 1 259 1 357 1 358 1 105 1 130 1 53 1 10 1 107 1 360 1 11 1 132 1 203 1 315 1 240 2 184 1 267 2 80 2 82 1 339 4 56 2 155 2 228 1 365 1 209 4 242 1 157 1 16 1 247 4 192 1 
88 2 297 2 346 2 91 1 325 1 95 4 351 2 24 2 46 1 72 1 173 1 283 1 282 1 8 2 259 1 357 1 358 1 105 1 51 1 130 1 53 1 10 1 107 1 360 1 11 1 315 1 202 1 184 1 267 2 82 1 339 4 56 2 155 2 228 1 365 1 209 4 242 1 157 1 16 1 247 4 192 1 
88 2 37 1 346 2 91 1 1 2 325 1 95 4 24 3 46 1 173 1 283 1 282 1 259 1 357 1 358 1 105 1 130 1 53 1 10 1 107 1 360 1 11 1 132 1 32 1 203 1 315 1 240 2 184 1 80 2 267 3 82 1 339 5 56 2 228 1 155 3 365 1 242 1 209 5 157 1 16 1 192 1 247 4 
88 2 37 1 346 2 91 1 1 2 325 1 95 4 24 3 46 1 173 1 283 1 282 1 259 1 357 1 358 1 105 1 130 1 53 1 10 1 107 1 360 1 11 1 132 1 32 1 203 1 315 1 240 2 184 1 80 2 267 3 82 1 339 5 56 2 228 1 155 3 365 1 242 1 209 5 157 1 16 1 192 1 247 4 
88 2 297 2 346 2 91 1 325 1 95 4 351 2 24 2 46 1 173 1 72 1 283 1 282 1 8 2 259 1 357 1 358 1 105 1 130 1 53 1 10 1 107 1 360 1 11 1 315 1 184 1 267 2 82 1 339 4 56 2 155 2 228 1 365 1 209 4 242 1 295 1 16 1 192 1 247 4 
115 4 323 3 212 2 296 4 248 2 347 1 66 1 348 1 163 1 20 1 42 1 2 7 96 1 253 1 328 7 352 1 303 2 22 1 23 1 281 6 354 1 46 1 306 2 170 2 102 1 310 1 332 1 220 1 333 2 28 1 105 1 131 4 149 2 200 3 81 1 12 2 13 2 228 1 59 1 60 1 112 1 191 1 322 1 
115 2 17 1 300 1 303 1 121 1 306 1 46 1 170 3 7 1 333 1 28 1 50 1 105 1 237 1 313 1 149 1 264 1 12 1 186 1 13 1 226 1 228 1 208 1 60 1 112 1 273 1 159 1 86 1 322 2 
115 2 237 2 149 1 54 1 33 1 303 1 288 2 12 1 121 2 13 1 68 1 231 1 170 5 306 1 273 1 112 3 59 1 47 1 244 1 333 1 50 1 261 1 322 2 
115 2 313 3 149 1 238 1 303 1 12 1 43 1 186 3 13 1 100 1 170 2 306 1 208 1 112 1 74 1 333 1 322 1 
115 2 323 1 212 1 296 1 117 1 163 1 2 1 302 1 328 1 352 1 303 1 280 1 281 1 216 1 354 1 306 1 46 2 170 2 102 1 71 1 333 1 28 1 105 1 200 1 131 1 149 1 264 1 225 1 288 1 12 1 13 1 228 2 111 1 208 1 60 1 112 1 320 1 322 1 
323 2 195 2 40 2 2 1 328 1 280 1 281 1 46 3 102 1 282 1 7 2 47 1 333 3 50 5 105 1 237 7 149 3 200 2 54 1 288 3 12 3 13 3 290 2 208 1 293 1 60 1 112 14 244 1 159 2 115 6 212 1 17 2 117 2 296 2 250 1 163 1 302 2 352 1 303 3 21 2 121 6 68 2 216 2 354 2 217 1 306 3 170 27 28 1 261 2 313 6 131 2 264 6 266 1 33 2 186 6 228 3 84 2 273 5 366 1 322 13 
115 2 237 1 313 1 149 1 264 1 303 1 12 1 186 1 13 1 217 1 170 2 306 1 58 1 59 1 7 1 112 2 333 1 50 1 
115 2 17 1 237 1 313 1 149 1 264 1 303 1 12 1 121 1 186 1 13 1 170 2 306 1 59 1 273 1 333 1 76 1 322 2 
115 2 17 1 303 1 121 1 306 1 170 4 217 1 7 1 333 1 50 1 237 2 313 2 149 1 264 2 12 1 13 1 186 2 112 2 59 1 273 1 159 1 322 2 
115 2 237 1 313 1 347 1 149 1 264 1 303 1 12 1 186 1 13 1 217 1 170 2 306 1 58 1 7 1 112 2 333 1 50 1 
115 2 17 1 237 1 313 1 347 1 149 1 264 1 303 1 12 1 121 1 186 1 13 1 170 2 306 1 273 1 333 1 76 1 322 2 
115 2 17 1 347 1 303 1 121 1 306 1 170 4 217 1 7 1 333 1 50 1 237 2 313 2 149 1 264 2 12 1 13 1 186 2 112 2 273 1 159 1 322 2 
115 2 17 1 303 1 121 1 170 4 306 1 217 1 7 1 333 1 50 1 237 2 313 2 149 1 264 2 12 1 13 1 186 2 112 2 273 1 159 1 322 2 
115 2 323 1 212 1 117 1 296 1 163 1 2 1 302 1 328 1 352 1 303 1 281 1 216 1 354 1 170 2 46 1 306 1 333 1 200 1 131 1 149 1 288 1 12 1 290 1 13 1 228 1 112 1 322 1 
115 2 323 1 212 1 296 1 163 1 142 1 277 1 2 1 328 1 352 1 303 1 281 1 216 1 354 1 170 2 46 1 306 1 333 1 200 1 131 1 149 1 288 1 12 1 13 1 241 1 228 1 112 1 322 1 
115 2 17 1 303 1 121 1 306 1 170 4 217 1 7 1 333 1 50 1 237 2 313 2 149 1 264 2 12 1 13 1 186 2 208 1 112 2 273 1 159 1 322 2 
115 2 17 1 323 1 117 1 296 1 40 1 2 1 302 1 328 1 303 1 121 1 281 1 216 1 354 1 217 1 170 4 46 1 306 1 7 1 220 1 333 1 50 1 237 2 313 2 131 1 200 1 149 1 264 2 12 1 186 2 290 1 13 1 228 1 273 1 112 2 159 1 322 2 
115 2 17 1 300 1 303 1 217 1 306 1 46 1 170 3 125 1 7 1 333 1 28 1 50 1 105 1 237 1 313 1 149 1 264 1 12 1 13 1 186 1 226 1 228 1 208 1 273 1 60 1 112 2 159 1 322 1 
115 2 129 1 141 1 149 1 239 1 326 1 303 1 12 1 43 1 34 1 13 1 100 1 170 4 112 2 321 1 322 2 222 1 
115 2 129 2 161 1 149 1 141 2 239 2 326 1 303 1 12 1 43 2 34 1 13 1 100 2 170 8 112 4 321 2 222 1 322 4 
115 2 129 1 141 1 149 1 239 1 326 1 303 1 12 1 43 1 34 1 13 1 100 1 170 4 112 2 321 1 322 2 222 1 
115 2 129 1 141 1 149 1 239 1 326 1 303 1 12 1 43 1 34 1 13 1 100 1 170 4 112 2 321 1 322 2 222 1 
115 2 129 1 141 1 149 1 239 1 326 1 303 1 12 1 43 1 34 1 13 1 100 1 170 4 112 2 321 1 322 2 222 1 
152 1 94 1 331 1 103 1 196 1 176 1 258 1 279 1 167 1 61 1 
276 1 272 1 
152 1 187 1 103 1 213 1 196 1 176 1 258 1 278 1 61 1 
89 1 130 1 38 1 94 1 39 1 95 1 196 1 279 1 167 1 316 2 363 1 152 1 69 1 103 1 176 1 258 1 61 1 247 1 
89 1 130 1 38 1 94 1 39 1 95 1 196 1 279 1 167 1 316 2 363 1 152 1 69 1 103 1 176 1 258 1 61 1 247 1 
89 1 130 1 38 1 94 1 39 1 95 1 196 1 279 1 167 1 316 2 363 1 152 1 69 1 103 1 176 1 258 1 61 1 247 1 
198 1 204 1 199 1 
198 1 204 1 199 1 
93 1 183 1 
93 1 183 1 199 1 
77 1 70 1 
39 1 95 1 276 1 196 1 4 1 98 1 46 2 70 1 103 1 257 1 176 1 258 1 28 2 77 1 105 2 338 1 316 1 288 1 363 1 152 1 228 2 135 1 272 1 60 2 61 1 247 1 137 1 
198 1 204 1 
93 1 183 1 199 1 
115 2 323 1 296 1 248 2 66 1 163 1 2 2 328 2 352 1 303 1 281 2 306 1 46 2 170 2 355 1 49 1 333 1 105 2 131 1 200 1 30 1 149 1 55 1 12 1 150 1 13 1 228 2 208 1 112 1 191 1 322 1 
323 1 212 1 296 1 131 1 200 1 92 1 251 1 2 1 253 1 328 1 22 1 281 1 110 1 341 1 
223 1 323 1 106 2 284 1 131 1 92 1 19 1 2 1 96 1 328 1 353 1 281 1 151 1 5 1 110 1 14 1 233 1 309 1 
223 1 323 1 106 2 284 1 131 1 92 1 19 1 2 2 96 1 328 2 353 1 281 2 151 1 5 1 110 1 14 1 233 1 309 1 220 1 
223 1 193 1 323 1 106 2 131 1 92 1 19 1 2 1 96 1 328 1 353 1 281 1 151 1 5 1 14 1 233 1 309 1 
168 1 
130 1 91 1 53 1 349 1 11 1 184 1 364 1 242 1 259 1 192 1 
138 1 17 2 130 5 11 5 301 5 240 5 67 5 84 1 7 2 273 2 15 2 8 10 159 2 259 5 50 2 
56 1 130 1 95 1 209 1 184 1 247 1 
139 1 323 1 212 2 65 1 296 1 91 2 95 3 2 4 3 1 253 1 328 4 22 1 281 4 25 2 259 2 131 1 200 1 53 2 11 2 79 1 362 2 56 2 340 1 188 1 292 2 242 1 209 4 192 2 247 3 
130 1 231 1 349 1 364 1 11 1 184 1 259 1 
91 1 1 1 95 1 8 1 259 1 130 2 53 1 11 1 203 1 240 1 80 1 184 1 56 1 242 1 209 1 192 1 247 1 
138 2 323 3 194 3 91 4 140 2 95 5 2 3 328 3 229 1 281 3 7 2 8 12 236 1 50 2 200 3 53 4 285 2 11 8 240 6 289 1 56 3 292 1 242 4 209 5 15 2 159 2 247 5 344 1 212 1 17 2 296 10 299 2 349 1 301 6 120 2 67 6 25 2 354 3 123 2 173 2 220 1 259 9 181 2 130 8 131 4 79 1 184 2 362 1 364 1 84 2 317 2 190 2 273 2 192 4 
138 1 17 2 161 1 91 2 95 1 301 5 43 1 67 5 25 1 100 1 124 1 175 1 7 2 8 6 128 1 259 8 148 1 50 2 130 5 53 2 239 1 11 5 240 3 184 2 56 1 154 1 292 1 189 1 209 1 242 2 273 2 15 2 159 2 247 1 192 2 
138 1 0 1 91 1 250 1 95 1 300 1 68 1 46 1 282 1 259 2 28 1 261 1 50 2 105 1 53 1 132 1 11 2 109 1 33 1 205 1 134 1 228 1 242 1 273 1 60 1 15 2 192 1 247 1 
115 2 212 1 323 1 117 1 296 1 300 2 2 1 302 1 328 1 352 1 303 1 281 1 216 1 354 1 170 1 46 3 306 1 333 1 28 2 105 2 180 1 149 1 131 1 200 1 134 1 288 1 12 1 13 1 290 1 228 3 60 2 322 1 
130 4 91 1 53 1 54 1 11 2 301 2 240 2 184 2 67 2 25 1 292 1 242 1 8 4 259 1 192 1 
77 1 103 1 196 1 127 1 279 1 
256 1 103 1 196 1 
256 1 103 1 196 1 
256 1 103 1 196 1 
103 1 196 1 133 1 
103 1 196 1 133 1 
103 1 196 1 133 1 
103 1 196 1 
258 1 61 1 
115 2 237 5 149 1 250 1 33 1 303 1 12 1 34 1 121 3 13 1 68 2 217 2 170 10 112 5 273 2 261 2 50 2 322 5 
115 2 237 1 149 1 303 1 12 1 34 1 13 1 170 2 217 1 7 1 112 2 50 1 
115 2 17 1 237 2 149 1 303 1 12 1 34 1 121 1 13 1 170 4 217 1 273 1 7 1 112 2 159 1 50 1 322 2 
115 6 237 2 149 3 118 1 303 3 12 3 34 1 121 1 13 3 68 1 170 3 217 1 218 1 112 1 260 1 261 1 322 2 
115 6 87 1 312 1 149 3 118 1 239 1 303 3 12 3 43 1 34 1 13 3 100 1 170 2 112 1 322 1 
115 4 250 1 303 2 121 4 68 2 217 3 170 17 218 1 47 1 261 2 50 3 237 7 149 2 54 1 33 2 12 2 13 2 112 9 273 3 244 1 322 8 
237 2 54 1 33 1 121 2 68 1 231 1 170 5 112 3 273 1 47 1 244 1 261 1 50 1 322 2 
87 1 115 2 17 1 237 2 149 1 303 1 12 1 121 1 13 1 170 4 217 1 273 1 7 1 112 2 159 1 50 1 322 2 
43 1 100 1 170 2 239 1 112 1 322 1 
43 1 100 1 170 2 112 1 74 1 322 1 
100 1 170 1 322 1 
43 1 170 1 112 1 
115 2 87 1 17 1 237 3 149 1 303 1 12 1 121 2 13 1 170 6 217 1 84 1 7 1 112 3 273 1 159 1 50 1 322 3 
43 1 115 2 34 1 13 1 161 1 100 1 149 1 170 2 239 1 112 1 303 1 322 1 12 1 
237 2 33 1 121 1 68 1 170 6 217 1 112 3 273 1 50 1 261 1 322 3 
115 2 237 2 149 1 303 1 12 1 121 1 13 1 68 1 217 1 170 3 218 1 112 1 244 1 47 1 261 1 260 1 322 2 
43 1 115 2 34 1 13 1 161 1 100 1 149 1 170 2 239 1 112 1 303 1 322 1 12 1 
87 1 115 4 161 1 149 2 239 1 303 2 12 2 43 1 34 1 13 2 100 1 170 2 112 1 322 1 
87 1 115 6 17 2 161 1 250 1 303 3 43 1 121 5 68 2 100 1 217 2 170 26 218 1 7 2 47 1 128 1 261 2 148 1 50 5 237 7 149 3 239 1 54 1 33 2 12 3 34 1 13 3 154 1 189 1 112 13 273 5 244 1 159 2 322 13 
43 1 115 2 34 1 13 1 161 1 100 1 149 1 170 2 239 1 112 1 303 1 322 1 12 1 
43 1 115 2 34 1 13 1 161 1 100 1 149 1 170 2 239 1 112 1 303 1 322 1 12 1 
115 2 17 2 161 1 303 1 43 1 121 1 100 1 217 1 170 12 7 2 128 1 148 1 50 2 237 2 149 1 239 1 12 1 34 1 13 1 154 1 189 1 112 6 273 2 159 2 322 6 
115 4 87 1 161 1 149 2 239 1 303 2 12 2 43 1 34 1 13 2 100 1 170 2 112 1 322 1 
115 4 161 1 149 2 118 1 239 1 303 2 12 2 43 1 34 1 13 2 100 1 170 2 112 1 322 1 
237 6 33 1 121 3 68 3 170 7 217 3 273 1 112 3 47 1 244 2 261 3 50 1 322 4 
115 4 161 1 149 2 118 1 239 1 303 2 12 2 43 1 34 1 13 2 100 1 170 2 112 1 322 1 
105 1 266 1 288 1 46 1 228 1 282 1 234 1 283 1 147 1 
105 1 266 1 268 1 288 1 206 1 46 1 228 1 318 1 282 1 85 1 234 1 283 1 178 1 147 1 
9 1 212 1 323 1 296 1 131 1 200 1 2 4 253 1 328 4 22 1 146 1 281 4 220 1 
323 1 296 1 200 1 131 2 348 1 144 1 2 2 328 2 362 1 81 1 281 2 23 1 354 1 332 1 
323 1 281 1 212 1 106 1 131 1 19 1 14 1 2 1 328 1 353 1 
323 1 150 1 281 2 296 1 131 1 200 1 2 2 191 1 96 1 328 2 220 1 
212 1 323 2 296 3 200 2 131 2 20 1 42 1 2 5 253 1 328 5 362 1 22 1 146 1 281 4 191 1 220 1 
212 1 323 2 296 3 200 2 131 2 42 1 2 5 253 1 328 5 362 1 22 1 146 1 281 4 191 1 220 1 63 1 
323 1 281 1 212 1 296 1 131 1 200 1 231 1 2 1 253 1 328 1 22 1 
105 1 212 1 323 1 296 1 117 1 200 1 131 1 2 1 328 1 288 1 281 1 216 1 354 1 46 2 102 1 228 2 60 1 28 1 
323 1 117 1 296 3 2 1 328 1 281 1 216 1 354 2 46 2 102 1 282 1 28 2 357 1 105 2 181 1 131 1 200 2 362 1 288 1 82 1 228 2 190 1 60 1 
323 1 296 3 2 2 328 2 281 2 216 1 354 2 46 2 102 1 282 1 28 2 357 1 9 1 105 2 181 1 131 1 200 2 362 1 288 1 82 1 241 1 228 2 190 1 60 1 
342 1 323 1 212 1 296 4 194 1 95 2 2 3 328 3 281 3 354 1 173 1 9 1 181 1 130 1 263 1 131 1 200 1 285 1 184 1 362 1 190 1 209 1 247 2 
9 1 212 1 323 1 296 4 130 1 181 1 200 1 131 1 140 1 194 1 285 1 95 2 2 3 184 1 328 3 362 1 281 3 354 1 173 1 190 1 209 1 247 2 
323 1 281 1 131 1 2 1 201 1 328 1 
323 2 212 2 248 1 296 3 348 1 20 1 42 1 2 6 96 1 328 6 23 1 281 5 354 1 310 1 75 1 220 1 131 3 200 2 289 1 191 1 
323 1 40 1 195 1 2 1 328 1 281 1 46 2 102 1 282 1 47 1 333 2 50 3 105 1 237 5 149 2 200 1 54 1 12 2 288 3 290 1 13 2 208 1 60 1 112 7 244 1 115 4 117 1 296 1 250 1 302 1 303 2 121 4 216 1 68 2 354 1 217 1 306 2 170 13 355 1 220 1 28 1 261 2 131 1 266 1 33 2 228 2 273 3 322 6 
212 1 296 2 91 2 140 1 194 1 299 1 349 1 95 3 2 1 328 1 98 1 281 1 120 1 173 1 259 1 130 1 53 2 285 1 11 1 79 1 184 1 56 1 364 1 317 1 242 2 209 2 192 2 247 3 
323 1 296 2 200 1 131 2 285 1 2 2 201 1 328 2 289 1 281 2 354 1 220 1 236 1 
105 1 212 1 323 1 296 1 200 1 131 1 2 1 328 1 288 1 281 1 216 1 241 1 354 1 46 2 102 1 228 2 60 1 28 1 
323 1 296 1 200 1 131 2 348 1 2 1 328 1 362 1 289 1 281 1 23 1 354 1 75 1 
105 1 345 1 30 1 55 1 46 1 228 1 126 1 49 1 62 1 
269 1 345 1 334 1 
345 1 126 1 156 1 62 1 288 1 
130 1 345 1 95 2 315 1 184 1 98 1 288 1 82 1 329 1 269 1 83 1 173 1 126 2 282 1 156 2 357 1 334 1 62 2 247 2 
116 1 97 1 174 1 219 1 158 1 245 1 311 1 29 1 
116 3 97 2 304 2 174 1 245 1 158 1 219 3 177 1 246 1 235 1 29 1 
116 2 249 1 97 1 304 1 307 1 101 1 174 1 245 1 219 2 158 1 311 1 29 1 
116 2 18 1 336 1 97 1 232 1 174 1 219 2 158 1 245 1 311 1 29 1 
207 1 26 2 286 1 235 2 
343 1 116 1 174 1 219 1 311 1 29 1 
116 2 162 1 97 1 304 1 174 1 219 2 158 1 245 1 311 1 29 1 
255 1 
116 1 97 1 174 1 219 1 158 1 245 1 311 1 29 1 
231 1 245 1 158 1 
116 1 174 1 245 1 158 1 219 1 97 1 29 1 
44 1 153 1 219 1 
116 2 18 1 336 1 97 1 45 1 174 1 219 2 158 1 245 1 311 1 29 1 
116 2 252 1 97 1 304 1 174 1 219 2 158 1 245 1 29 1 
116 1 106 1 353 1 215 1 174 1 233 1 219 1 177 1 311 1 235 1 29 1 
116 1 174 1 245 1 219 1 311 1 29 1 
116 1 174 1 245 1 158 1 219 1 311 1 235 1 29 1 
274 1 116 2 214 1 230 1 174 2 245 1 219 2 311 1 29 2 
116 3 162 1 97 1 304 2 174 1 243 1 245 1 158 1 219 3 177 1 311 1 246 1 235 1 29 1 
116 2 223 1 106 2 19 1 108 1 97 1 353 1 304 1 174 1 233 1 245 1 158 1 219 2 311 1 29 1 
116 3 252 1 166 1 97 1 304 2 174 1 245 1 158 1 219 3 177 1 311 1 246 1 235 1 29 1 
116 2 336 1 97 1 174 1 219 2 158 1 245 1 311 1 29 1 
177 1 246 1 97 1 235 1 
245 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) (108,114) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (108,114) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) (108,114) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (41,255,286,326) (41,255,286,326) (41,255,286,326) 219 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 195 71 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 262 33 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 181 1 255 1 219 1 
174 1 170 1 284 1 
131 1 109 2 170 1 
60 2 324 2 211 2 119 2 204 2 306 2 26 1 65 1 
2 1 32 2 211 3 119 2 124 1 258 1 259 1 222 1 12 1 176 1 178 1 263 2 179 1 46 1 140 2 229 1 306 3 307 1 82 1 85 1 22 1 188 1 90 2 316 1 317 1 97 1 153 1 58 2 321 1 26 1 60 2 104 1 324 2 106 1 204 2 160 1 65 1 
60 1 324 1 223 1 211 1 119 1 204 1 217 1 322 1 306 1 26 1 
285 1 250 1 209 1 150 1 211 1 170 1 215 1 322 1 204 1 205 1 284 1 306 1 305 1 81 1 
250 2 209 1 150 1 119 1 211 1 170 1 215 1 322 1 60 1 324 1 204 1 284 1 306 1 305 1 81 2 
103 1 250 1 117 1 173 1 81 1 
250 2 117 1 289 1 37 1 170 1 284 1 173 1 81 2 
250 1 173 1 81 1 
250 1 117 1 119 1 211 1 217 1 322 1 26 1 60 1 158 1 324 1 223 1 204 1 81 1 306 1 
170 1 
250 2 117 1 289 1 44 1 170 1 284 1 173 1 81 2 
251 1 250 5 117 2 166 1 289 1 89 1 5 1 291 1 168 2 170 1 276 1 99 1 173 2 73 1 198 2 138 1 78 2 284 1 81 5 
174 1 65 1 
231 1 3 1 211 2 119 1 60 1 324 1 204 2 306 2 65 2 
201 1 8 1 248 1 
22 1 32 1 211 1 58 1 258 1 259 1 102 1 12 1 222 1 104 1 106 1 263 1 46 1 160 1 306 1 65 1 
22 1 32 1 211 2 58 1 258 1 259 1 222 1 12 1 60 1 104 1 324 1 106 1 135 1 263 1 201 1 46 1 159 1 204 1 160 1 306 2 
285 1 231 1 272 1 211 5 119 1 319 1 60 4 324 4 135 2 159 1 204 5 161 1 306 5 65 1 
60 2 324 2 300 1 211 2 204 2 217 1 322 1 306 2 
60 3 324 3 135 1 119 1 211 3 204 3 306 3 65 1 
60 1 324 1 211 1 204 1 217 1 322 1 306 1 
60 1 231 1 324 1 3 1 211 1 119 1 204 1 322 1 306 1 
250 1 209 1 32 1 119 2 211 4 124 1 123 1 215 1 258 1 259 1 222 1 12 1 176 1 178 1 135 1 263 1 46 1 140 1 229 1 306 4 305 1 81 1 307 1 231 1 310 1 82 1 85 1 22 1 150 1 90 2 97 1 153 1 58 1 321 1 322 1 26 1 60 3 104 1 324 3 106 1 159 1 204 3 160 1 65 1 
285 1 60 1 324 1 135 1 211 2 204 2 319 1 306 2 65 1 
231 1 250 1 209 1 150 1 119 1 211 3 123 1 170 1 215 1 322 1 60 3 324 3 261 1 135 2 159 1 204 3 81 1 305 1 306 3 
60 2 231 1 324 2 135 1 211 2 119 1 201 1 204 2 248 1 306 2 
22 1 32 1 211 1 58 1 258 1 259 1 12 1 222 1 104 1 106 1 263 1 46 1 160 1 306 1 65 1 
32 1 211 1 6 1 58 1 259 1 12 1 222 1 104 1 106 1 263 1 46 1 303 1 160 1 306 1 65 1 
115 1 8 2 176 1 178 1 140 4 307 1 185 1 312 1 85 1 23 1 90 2 317 2 97 1 153 1 243 1 277 1 59 1 321 2 279 1 27 1 201 2 248 2 
60 1 324 1 300 1 211 1 204 1 215 1 322 1 306 1 
253 1 318 1 
253 1 318 1 
133 1 194 1 
133 1 194 1 
133 1 194 1 
253 1 139 1 318 1 
133 1 253 2 125 1 318 2 171 1 194 1 
88 1 253 1 318 1 
253 1 139 1 318 1 
253 1 139 1 318 1 
253 1 227 1 318 1 
253 1 227 1 318 1 
253 1 227 1 318 1 
250 1 253 1 211 2 132 1 299 1 14 1 79 1 184 1 81 1 306 2 269 1 86 1 149 1 88 1 318 1 322 1 154 1 60 2 197 1 323 1 324 2 245 1 246 1 204 2 65 1 249 1 
269 2 250 2 164 2 86 2 253 2 36 1 190 1 93 1 170 1 318 2 171 1 130 1 323 2 245 2 281 1 246 1 137 1 79 3 81 2 
13 1 127 1 172 1 
50 1 127 1 172 1 
11 1 50 1 13 2 282 1 274 1 172 3 
11 1 50 1 13 1 274 1 256 1 172 2 
11 2 50 1 13 1 274 1 172 2 
115 1 251 2 250 5 117 4 66 2 289 1 5 3 212 1 168 1 214 1 126 1 38 1 170 2 173 1 73 1 131 1 132 1 225 2 78 1 81 5 23 1 24 1 243 1 197 1 198 1 157 1 283 2 27 1 109 3 111 1 284 1 249 1 
115 3 251 6 250 9 117 7 66 6 289 1 67 1 5 8 212 2 168 2 214 3 69 1 170 5 173 6 73 1 175 1 131 3 132 4 78 2 81 9 311 1 20 1 314 1 23 3 95 5 99 1 243 3 103 5 198 2 157 2 283 6 27 3 109 9 111 1 284 1 
115 1 250 3 251 2 117 2 66 2 5 3 212 1 168 1 214 1 38 1 170 3 131 2 132 1 225 1 78 1 81 3 23 1 24 1 99 1 243 1 198 1 157 1 283 2 27 1 109 4 284 1 
115 2 250 4 251 4 117 3 66 4 67 1 5 5 212 1 168 1 214 2 38 1 170 4 131 3 132 2 225 2 78 1 81 4 311 1 20 1 23 2 24 1 99 1 243 2 198 1 157 1 283 4 27 2 109 7 284 1 
174 1 106 1 151 1 
106 1 195 1 
80 1 
222 1 12 1 106 1 
177 1 106 1 
222 1 106 1 
222 1 12 1 146 1 106 3 151 2 304 1 
115 1 147 2 238 2 121 1 192 3 7 1 317 4 275 1 218 1 321 3 100 1 27 1 262 1 200 1 75 1 140 7 144 1 
115 1 147 2 238 2 121 1 192 3 7 1 317 4 275 1 218 1 321 3 100 1 27 1 262 1 200 1 75 1 140 7 144 1 
115 1 147 2 238 2 121 1 192 3 7 1 317 4 275 1 218 1 321 3 100 1 325 1 27 1 262 1 200 1 75 1 140 7 144 1 
115 2 288 1 213 1 169 2 214 2 39 1 218 1 297 1 260 1 176 1 178 1 301 2 75 2 140 16 144 1 307 1 17 1 147 1 313 1 23 2 90 2 238 1 192 4 317 8 97 1 243 2 321 8 100 3 27 2 200 1 
115 1 288 1 7 1 218 1 176 2 178 2 262 1 75 1 140 9 144 1 307 2 49 1 147 3 90 4 238 2 192 4 317 5 152 1 97 2 275 1 321 4 100 1 27 1 200 1 
286 1 326 1 181 1 255 1 219 1 
286 1 326 1 108 1 181 1 255 1 
114 1 286 1 181 1 41 1 
286 1 326 1 108 1 181 1 255 1 
286 1 326 1 181 1 255 1 219 1 
294 1 
251 2 250 5 4 1 5 2 168 1 170 2 173 6 10 1 73 1 259 2 263 2 180 2 78 1 265 1 81 5 87 2 193 1 101 1 198 1 104 1 106 1 109 2 204 1 205 1 284 1 30 1 206 1 285 1 289 3 209 1 32 2 290 1 211 1 122 1 293 1 215 1 296 1 220 2 222 1 131 2 134 1 226 2 46 1 306 1 305 1 145 1 53 2 150 1 236 2 55 4 58 2 322 1 61 2 244 1 157 1 
285 1 250 3 209 1 289 1 290 1 211 1 293 1 215 1 173 2 134 1 44 1 180 1 265 1 306 1 81 3 305 1 150 1 55 2 193 1 322 1 204 1 205 1 
285 1 250 3 209 1 289 1 290 1 211 1 293 1 215 1 170 1 173 1 134 1 44 1 265 1 306 1 81 3 305 1 53 1 150 1 55 3 193 1 322 1 204 1 205 1 284 1 
285 1 250 3 289 1 209 1 290 1 211 1 293 1 215 1 170 1 173 2 134 1 44 1 180 1 265 1 306 1 81 3 305 1 53 1 150 1 236 1 55 3 193 1 322 1 204 1 205 1 284 1 
250 5 251 1 0 1 5 1 4 1 168 1 170 5 173 7 73 1 180 4 265 1 78 1 81 5 87 2 193 1 101 1 198 1 204 1 205 1 284 5 113 1 285 1 209 1 289 3 290 1 211 1 293 1 215 1 220 2 42 1 131 2 134 1 44 1 226 2 305 1 306 1 148 1 53 4 150 1 236 4 55 6 322 1 61 2 247 1 
250 4 251 1 5 1 4 1 168 1 170 2 173 4 73 1 180 2 265 1 78 1 81 4 87 2 193 1 101 1 198 1 109 2 204 1 205 1 284 1 285 1 209 1 289 2 290 1 211 1 293 1 215 1 220 2 131 2 134 1 226 2 305 1 306 1 53 2 150 1 236 2 55 4 322 1 61 2 244 1 
285 1 251 1 250 4 289 2 209 1 290 1 4 1 5 1 211 1 168 1 293 1 170 1 215 1 173 4 220 2 73 1 131 2 42 1 134 1 180 2 226 2 78 1 265 1 306 1 81 4 305 1 53 2 87 2 150 1 236 2 55 4 193 1 322 1 61 2 101 1 198 1 247 1 204 1 205 1 284 1 113 1 
285 1 251 1 250 4 289 2 209 1 290 1 4 1 5 1 211 1 168 1 293 1 170 1 215 1 173 4 220 2 73 1 131 2 42 1 134 1 180 2 226 2 78 1 265 1 306 1 81 4 305 1 53 2 87 2 150 1 236 2 55 4 193 1 322 1 61 2 101 1 198 1 247 1 204 1 205 1 284 1 113 1 
285 1 251 1 250 4 287 2 289 2 209 1 290 1 4 1 5 1 211 1 168 1 293 1 170 1 215 1 173 4 73 1 134 1 224 2 180 2 226 2 45 1 78 1 265 1 142 1 306 1 81 4 305 1 53 2 150 1 236 2 55 4 193 1 322 1 278 1 61 2 198 1 247 1 109 2 204 1 205 1 284 1 
285 1 251 1 250 4 0 1 289 2 209 1 290 1 4 1 5 1 211 1 168 1 293 1 170 1 215 1 173 5 220 2 73 1 131 2 42 1 134 1 226 2 180 3 78 1 265 1 306 1 81 4 305 1 87 2 53 3 150 1 236 3 55 5 193 1 322 1 61 2 101 1 198 1 247 1 204 1 205 1 284 1 113 1 
285 1 251 1 250 4 0 1 289 2 209 1 290 1 4 1 5 1 211 1 168 1 293 1 170 1 215 1 173 5 220 2 73 1 131 2 42 1 134 1 226 2 180 3 78 1 265 1 306 1 81 4 305 1 87 2 53 3 150 1 236 3 55 5 193 1 322 1 61 2 101 1 198 1 247 1 204 1 205 1 284 1 113 1 
250 4 251 1 5 1 4 1 168 1 170 1 173 4 73 1 180 2 265 1 78 1 81 4 193 1 198 1 109 2 204 1 205 1 284 1 285 1 287 2 209 1 289 2 290 1 211 1 293 1 215 1 134 1 224 2 45 1 226 2 305 1 306 1 53 2 150 1 236 2 55 4 322 1 61 2 244 1 
115 1 147 2 185 1 85 1 90 2 238 1 192 2 7 1 317 3 8 1 97 1 275 1 153 1 321 3 174 1 176 1 27 1 262 1 178 1 200 1 201 1 140 6 248 1 144 1 65 2 307 1 
176 1 85 1 178 1 90 2 97 1 153 1 320 1 266 1 307 1 
32 1 211 2 124 1 258 1 259 1 222 1 12 1 176 1 298 1 263 1 135 1 178 1 46 1 140 2 306 2 307 1 85 1 22 1 188 1 90 2 25 1 317 1 97 1 58 1 153 1 320 1 321 1 102 1 60 1 104 1 324 1 106 1 107 1 159 1 204 1 160 1 248 1 65 1 
7 1 8 7 258 2 259 1 12 2 176 3 262 1 263 3 178 3 85 3 22 2 188 1 23 2 90 6 192 6 275 1 97 3 100 4 104 2 106 2 199 1 27 3 200 1 201 7 204 1 110 2 115 3 32 3 34 2 211 3 124 1 214 2 128 1 129 1 222 2 135 1 46 2 140 20 229 2 144 1 306 3 307 3 147 2 235 2 52 1 54 2 238 1 317 10 58 3 153 3 320 1 243 2 321 10 60 1 324 1 159 1 160 2 248 7 65 2 
32 7 211 1 124 1 128 1 295 1 259 2 10 1 12 1 222 3 176 2 135 1 263 6 178 2 179 2 46 3 264 1 140 2 306 1 307 2 234 1 83 1 185 1 85 2 271 1 188 1 90 4 240 1 91 1 94 1 317 1 97 2 58 7 153 2 321 1 60 1 104 4 324 1 106 4 63 1 202 1 328 1 204 1 30 1 
115 1 119 1 211 1 214 1 8 1 176 1 178 1 140 3 306 1 307 1 231 1 85 1 23 1 90 2 317 1 97 1 153 1 320 1 243 1 321 2 60 1 324 1 27 1 201 1 29 1 204 1 248 1 
185 1 312 1 85 1 23 1 90 2 192 1 317 2 8 1 97 1 153 1 100 1 176 1 178 1 27 1 201 1 140 2 248 1 307 1 
115 1 185 1 85 1 90 2 8 1 97 1 153 1 243 1 277 1 321 2 176 1 178 1 201 1 140 2 248 1 307 1 
115 1 185 1 85 1 23 1 90 2 192 1 214 1 317 2 8 2 97 1 153 1 243 1 321 2 100 1 176 1 178 1 27 1 201 2 140 4 248 2 307 1 
312 1 85 1 23 1 90 2 192 1 317 2 8 1 97 1 153 1 100 1 176 1 178 1 27 1 201 1 202 1 140 2 248 1 307 1 
115 1 85 1 90 2 8 1 97 1 153 1 243 1 277 1 321 2 176 1 178 1 201 1 202 1 140 2 248 1 307 1 
115 1 85 1 23 1 90 2 214 1 317 2 8 2 97 1 153 1 243 1 321 2 176 1 178 1 27 1 201 2 202 1 140 4 248 2 307 1 
115 1 85 1 23 1 90 2 192 1 214 1 317 2 8 2 97 1 153 1 243 1 321 2 100 1 176 1 178 1 27 1 201 2 140 4 248 2 307 1 
32 1 211 1 124 1 258 1 259 1 222 1 12 1 176 1 263 1 178 1 46 1 140 2 229 1 306 1 307 1 85 1 22 1 188 1 90 2 317 1 97 1 58 1 153 1 321 1 104 1 106 1 160 1 65 1 
32 1 6 1 211 1 124 1 72 1 259 1 222 1 12 1 176 1 263 1 178 1 46 1 303 1 140 2 306 1 307 1 85 1 188 1 90 2 317 1 97 1 58 1 153 1 321 1 104 1 106 1 160 1 65 1 
115 1 85 1 23 1 90 2 192 1 214 1 317 2 8 2 97 1 153 1 243 1 320 1 321 2 100 1 176 1 178 1 27 1 201 2 140 4 248 2 307 1 
115 1 34 1 32 1 211 1 214 1 8 2 258 1 12 1 222 1 176 1 263 1 178 1 46 1 140 4 229 1 306 1 307 1 85 1 22 1 23 1 90 2 192 1 317 2 97 1 58 1 153 1 243 1 321 2 100 1 104 1 106 1 27 1 201 2 203 1 160 1 248 2 
115 1 119 1 211 1 214 1 8 1 176 1 178 1 140 3 306 1 307 1 231 1 85 1 23 1 90 2 192 1 317 2 97 1 153 1 243 1 320 1 321 1 100 1 60 1 156 1 324 1 27 1 201 1 204 1 248 1 
1 1 68 1 169 4 7 1 176 4 260 2 178 4 262 1 17 2 18 1 84 2 19 1 187 1 23 8 90 8 92 1 192 11 97 4 275 1 100 9 280 1 27 9 200 1 115 8 288 2 214 8 39 2 136 1 301 4 302 1 140 57 143 1 144 1 307 4 49 1 147 2 232 1 315 1 238 1 317 30 57 4 243 7 321 27 162 1 
115 2 288 2 1 1 68 1 169 2 214 3 39 2 176 3 136 2 178 3 301 2 302 1 140 26 143 1 307 3 49 1 232 1 147 1 18 2 84 1 19 1 187 1 23 3 90 6 192 3 317 14 57 4 97 3 243 2 100 2 321 12 280 1 27 3 162 1 
115 9 288 2 1 1 68 1 7 2 169 5 214 7 39 3 260 2 176 4 262 2 136 2 178 4 301 5 302 1 140 64 144 2 143 1 307 4 49 1 17 2 232 1 147 3 18 1 84 1 19 1 187 1 315 1 23 7 90 8 238 2 192 12 317 33 275 2 57 4 97 4 243 7 321 31 100 9 280 1 62 1 27 9 200 2 162 1 
115 7 288 2 1 1 68 1 7 1 169 4 214 7 39 2 260 2 176 4 262 1 136 1 178 4 301 4 302 1 140 53 144 1 143 1 307 4 49 1 17 2 232 1 147 2 18 1 84 1 19 1 187 1 315 1 23 7 90 8 238 1 192 9 317 28 275 1 57 4 97 4 243 6 321 25 100 7 280 1 27 8 200 1 162 1 
115 8 288 1 1 1 68 1 7 1 169 4 214 7 39 2 260 2 176 2 262 1 136 1 178 2 301 4 302 1 140 52 144 1 143 1 307 2 49 1 17 2 147 1 232 1 18 1 84 1 19 1 187 1 23 7 90 4 238 1 192 8 317 27 275 1 57 4 97 2 243 7 321 25 100 7 280 1 27 8 200 1 162 1 
269 1 323 1 245 1 270 1 86 1 253 1 190 1 93 1 318 1 171 1 
88 1 14 1 
269 1 323 1 245 1 86 1 253 1 16 1 141 1 318 1 40 1 
139 1 242 1 
227 1 239 1 125 1 
250 1 269 1 164 1 86 1 253 1 36 1 190 1 93 1 170 1 318 1 171 1 130 1 323 1 245 1 246 1 137 1 79 2 81 1 
250 1 269 1 164 1 86 1 253 1 36 1 190 1 93 1 170 1 318 1 171 1 130 1 323 1 245 1 246 1 137 1 79 2 81 1 
250 1 269 1 164 1 86 1 253 1 36 1 190 1 93 1 170 1 318 1 171 1 130 1 323 1 245 1 246 1 137 1 79 2 81 1 
125 1 139 1 242 1 
125 1 139 1 242 1 
227 1 239 1 
227 1 239 1 125 1 
299 1 149 1 
250 1 164 1 117 1 253 1 211 2 36 1 132 1 299 1 14 1 79 1 184 1 306 2 81 1 269 1 86 1 149 1 88 1 241 1 318 1 322 1 154 1 197 1 60 2 323 1 324 2 245 1 204 2 65 1 249 1 
32 2 210 1 211 2 124 1 216 1 221 1 222 1 176 1 178 1 263 2 179 2 46 1 140 2 306 2 307 1 85 1 271 1 188 1 90 2 317 1 97 1 98 1 58 2 153 1 320 1 321 1 104 1 106 1 63 1 204 2 207 1 
268 1 50 1 233 1 32 2 118 1 120 1 127 1 128 1 58 2 172 2 9 1 104 1 13 1 282 1 263 2 46 1 182 1 203 1 230 1 
268 1 50 1 233 1 32 1 120 1 127 1 128 1 58 1 172 2 104 1 13 1 282 1 263 1 46 1 182 1 77 1 230 1 
233 1 32 1 118 1 58 1 259 1 10 1 222 1 104 1 106 1 263 1 46 1 47 1 64 1 30 1 
268 1 50 1 233 1 32 1 118 1 120 1 127 1 128 1 58 1 172 2 9 1 104 1 13 1 282 1 263 1 46 1 182 1 230 1 
292 1 
174 1 251 1 89 1 5 1 170 1 276 1 284 1 
251 1 250 1 289 1 5 1 168 1 170 2 173 1 220 1 73 1 131 1 78 1 81 1 87 1 101 1 198 1 109 1 284 1 
146 1 32 1 168 1 71 1 70 1 58 1 195 1 73 1 259 1 222 1 12 1 104 2 198 1 106 1 263 1 46 1 78 1 
250 1 251 5 115 2 289 1 66 5 5 8 169 1 168 2 214 2 39 1 170 5 173 1 73 2 131 3 301 1 302 1 78 2 81 1 143 1 232 1 186 2 187 1 189 1 23 2 243 2 155 1 157 1 198 2 283 5 27 2 28 1 109 6 206 1 284 2 162 1 
115 1 251 2 250 1 186 1 33 1 5 2 168 1 73 1 198 1 27 1 262 1 200 1 78 1 81 1 144 1 113 1 
251 1 89 1 5 1 168 1 276 1 170 1 73 1 198 1 78 1 284 1 
251 5 115 2 66 5 189 1 23 2 5 5 214 2 170 5 243 2 131 5 283 5 27 2 109 10 110 1 
250 1 289 1 170 1 284 1 81 1 173 1 
251 2 250 3 163 1 289 2 32 4 5 2 122 1 168 2 173 4 73 1 259 2 10 1 222 1 263 4 74 2 46 1 78 2 228 1 81 3 145 1 99 1 58 4 104 1 198 2 157 2 106 1 327 1 206 2 30 1 
32 1 211 3 119 2 124 1 258 1 259 1 12 1 222 1 176 1 178 1 263 1 46 1 140 1 229 1 306 3 307 1 82 1 85 1 22 1 90 2 97 1 58 1 153 1 321 1 26 1 60 2 104 1 324 2 106 1 204 2 160 1 65 1 
251 2 66 2 5 1 238 1 168 1 170 4 73 1 198 1 157 1 131 2 283 2 109 4 78 1 284 2 206 1 
269 1 245 1 183 1 
269 1 245 1 149 1 
269 1 245 1 183 1 
269 1 245 1 183 1 
269 1 245 1 257 1 
269 1 245 1 257 1 
269 1 245 1 257 1 
269 1 245 1 
253 1 318 1 
115 1 147 2 288 1 90 4 238 1 192 3 7 1 317 4 97 2 275 1 321 4 100 1 176 2 27 1 262 1 178 2 200 1 140 8 144 1 307 2 
147 2 115 1 238 1 7 1 192 2 317 3 275 1 321 3 174 1 262 1 27 1 200 1 140 6 144 1 
115 1 23 1 254 1 90 2 214 1 317 2 97 1 243 1 321 2 176 1 178 1 27 1 140 4 307 1 
17 1 115 2 23 2 169 2 192 2 317 6 214 2 39 1 243 2 321 6 100 2 260 1 27 2 301 2 140 12 
115 3 288 1 7 1 169 2 214 2 260 1 176 1 262 1 178 1 301 2 140 20 144 2 307 1 17 1 147 3 23 2 90 2 238 1 192 5 317 10 97 1 275 1 243 2 321 10 100 2 27 3 200 2 112 1 
169 1 140 1 321 1 
301 1 317 1 140 1 
115 1 23 1 90 2 254 1 192 1 214 1 317 3 97 1 243 1 321 3 100 1 176 1 178 1 27 1 110 1 140 6 307 1 
115 2 169 1 214 2 39 1 176 1 178 1 301 1 302 1 140 12 143 1 307 1 49 1 232 1 187 1 23 2 90 2 192 1 317 6 97 1 243 2 321 6 100 1 27 2 162 1 
115 1 147 1 192 2 317 3 321 3 100 1 262 1 27 1 200 1 140 6 144 1 
147 1 288 1 90 2 213 1 192 2 7 1 317 1 97 1 275 1 100 1 321 2 176 1 178 1 200 1 140 3 144 1 307 1 
49 1 147 3 115 2 33 1 90 2 192 5 317 5 97 1 100 2 321 5 176 1 178 1 262 1 27 2 200 2 140 10 144 2 307 1 
49 1 23 1 90 2 192 1 317 2 97 1 100 1 176 1 178 1 27 1 140 2 307 1 
49 1 115 1 23 1 90 2 192 1 214 1 317 2 97 1 243 1 321 2 100 1 176 1 178 1 27 1 140 4 307 1 
49 1 147 1 288 1 315 1 90 6 213 1 192 2 317 1 97 3 321 2 100 1 176 3 178 3 200 1 140 3 144 1 307 3 
115 2 33 1 254 1 169 1 7 1 39 1 297 1 176 3 262 1 178 3 301 1 140 12 144 1 307 3 49 1 147 2 315 1 90 6 192 4 317 6 97 3 275 1 100 2 321 6 27 2 200 1 
115 1 169 1 7 1 39 1 176 1 178 1 262 1 301 1 302 1 140 8 144 1 307 1 49 1 147 2 90 2 238 1 192 2 317 4 97 1 275 1 321 4 27 1 200 1 
115 1 254 1 7 1 169 2 214 1 39 1 176 2 262 1 178 2 301 1 302 1 140 11 144 1 307 2 49 1 17 1 147 2 23 1 90 4 238 1 192 3 317 6 275 1 97 2 321 5 100 1 27 2 200 1 
115 3 288 1 254 1 7 1 169 1 214 2 39 1 176 3 262 1 178 3 301 1 302 1 140 19 144 1 143 1 307 3 49 1 147 3 232 1 187 1 23 2 90 6 238 1 192 4 317 9 275 1 97 3 243 2 100 1 321 10 27 3 200 1 162 1 
115 2 288 1 254 1 7 1 169 1 214 2 39 1 176 3 262 1 178 3 301 1 302 1 140 17 144 1 143 1 307 3 49 1 147 2 232 1 187 1 23 2 90 6 238 1 192 4 317 10 275 1 97 3 243 1 321 7 100 2 27 3 200 1 162 1 
115 1 169 1 7 1 39 1 176 1 178 1 262 1 301 1 302 1 140 8 144 1 307 1 49 1 147 2 90 2 238 1 192 2 317 4 97 1 275 1 321 4 27 1 200 1 
115 2 169 1 214 2 39 1 176 1 178 1 301 1 302 1 140 12 143 1 307 1 49 1 232 1 187 1 23 2 90 2 192 1 317 6 97 1 243 2 321 6 100 1 27 2 162 1 
115 2 288 2 254 1 7 1 169 1 214 2 39 1 176 4 262 1 178 4 301 1 302 1 140 18 144 1 143 1 307 4 49 1 232 1 147 3 187 1 23 2 90 8 238 1 192 5 317 10 275 1 97 4 243 1 100 2 321 8 27 3 200 1 162 1 
115 1 288 1 169 1 214 2 39 1 176 3 178 3 301 1 302 1 140 11 143 1 307 3 49 1 232 1 187 1 315 1 23 2 90 6 192 2 317 7 97 3 243 1 321 4 100 2 27 2 162 1 
115 1 147 3 7 2 192 6 317 3 275 1 321 4 100 3 262 1 27 1 200 3 140 7 144 3 
115 2 288 2 7 1 169 1 214 2 39 1 176 4 262 1 178 4 301 1 302 1 140 18 144 1 143 1 307 4 49 1 232 1 147 3 187 1 315 1 23 2 90 8 238 1 192 4 317 10 275 1 97 4 243 1 100 1 321 8 27 3 200 1 162 1 
285 1 165 1 211 1 204 1 319 1 306 1 65 1 
285 1 308 1 196 1 165 1 208 1 211 1 273 1 56 1 204 1 319 1 306 1 65 1 
222 1 174 1 104 1 106 1 263 1 32 1 46 1 58 1 30 1 10 1 259 1 
22 1 32 1 211 2 58 1 259 1 222 1 12 1 60 1 104 1 324 1 106 1 135 1 263 1 46 1 204 1 160 1 306 2 65 1 
209 1 22 1 32 1 211 2 215 1 58 1 322 1 222 2 12 2 60 1 104 1 177 1 324 2 106 3 135 1 263 1 74 1 46 1 76 1 204 2 160 1 306 2 65 1 
51 1 209 1 32 2 211 2 6 1 215 1 58 2 322 1 222 2 12 2 60 1 104 1 177 1 324 2 106 3 135 1 263 2 74 1 46 1 76 1 204 2 160 1 306 2 65 1 
250 2 116 1 32 1 211 1 119 1 170 1 217 1 173 1 263 1 223 1 74 1 306 1 305 1 81 2 151 1 58 1 322 1 195 1 26 1 60 1 158 1 324 1 106 2 204 1 284 1 
250 2 51 1 32 3 151 1 170 1 58 3 195 1 173 1 259 1 222 1 12 1 104 1 177 1 106 4 263 3 74 1 46 1 76 1 284 1 305 1 81 2 267 1 
104 1 263 1 32 1 46 1 328 1 58 1 
146 1 234 1 83 1 271 1 32 6 240 1 96 1 94 1 128 1 58 6 259 2 12 1 222 2 104 3 106 3 263 5 179 1 46 2 328 1 264 1 
115 1 32 1 34 1 211 2 7 1 8 1 258 1 221 1 222 1 12 1 176 2 262 1 135 1 178 2 263 1 46 1 140 6 229 1 144 1 306 2 307 2 147 2 235 1 85 2 22 1 90 4 238 1 192 2 317 3 275 1 97 2 153 2 58 1 320 1 321 3 60 1 104 1 324 1 106 1 27 1 200 1 201 1 203 1 204 1 160 1 248 1 65 2 
251 1 250 3 163 1 117 1 289 1 32 1 5 1 167 1 168 2 170 1 173 2 259 1 73 2 263 1 15 1 78 2 81 3 267 1 305 1 89 1 151 1 276 1 58 1 195 1 198 2 105 1 106 2 284 1 
146 1 32 1 151 1 70 1 58 1 12 1 222 1 104 2 106 1 263 1 46 1 328 1 80 1 
51 1 32 4 58 4 259 1 10 1 222 1 104 1 43 1 106 1 263 4 46 1 203 1 30 1 
32 2 240 1 91 1 94 1 58 2 295 1 129 1 12 1 222 1 104 2 106 1 263 2 74 1 46 1 
50 1 104 1 263 1 32 1 46 1 182 1 127 1 58 1 172 1 259 1 
222 1 104 1 106 1 263 2 271 1 32 2 210 1 46 1 203 1 128 1 58 2 
234 1 32 5 271 1 58 5 10 1 259 1 222 2 104 2 43 1 106 3 263 4 74 1 46 2 203 1 264 1 30 1 
32 5 271 1 237 1 58 5 10 1 259 1 222 2 104 2 43 1 106 3 263 4 74 1 46 2 203 1 264 1 30 1 
32 1 211 2 6 1 58 1 259 1 222 1 12 1 60 1 104 1 324 1 106 1 135 1 263 1 46 1 204 1 160 1 306 2 65 1 
146 1 32 1 240 1 96 1 94 1 58 1 12 1 222 1 104 2 106 1 263 1 74 1 46 1 
309 1 35 1 191 1 48 1 65 1 
309 2 250 2 117 1 209 1 252 1 21 1 31 1 150 1 35 2 191 1 123 1 170 1 215 1 322 1 284 1 305 1 81 2 48 2 65 1 
309 1 211 1 191 1 98 1 216 1 204 1 48 1 306 1 207 1 
31 1 21 1 191 1 

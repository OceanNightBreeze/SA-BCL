#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 98 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) (99,192) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) (99,192) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 65 154 95 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 65 154 95 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 65 154 95 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 65 154 95 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 65 154 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 270 (19,121,248) (19,121,248) (19,121,248) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 102 136 210 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 102 136 210 26 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (85,265,276,307) (85,265,276,307) (85,265,276,307) 311 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2274 | = null
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
337 1 
326 1 222 1 144 2 
91 2 213 2 330 2 207 2 214 2 181 1 165 1 321 2 
82 1 256 1 46 1 174 1 213 3 292 2 214 2 87 1 293 1 181 1 295 1 51 1 262 1 6 2 298 2 53 1 10 1 138 1 300 1 91 2 189 1 309 1 20 1 145 1 275 1 231 1 112 1 321 2 152 1 202 1 242 2 206 1 330 2 163 2 207 3 331 1 165 1 77 1 335 1 
91 1 213 1 330 1 207 1 214 1 247 1 181 1 331 1 182 1 321 1 
133 1 213 2 214 1 181 1 182 1 91 1 102 1 109 1 321 1 241 1 243 1 326 1 73 1 328 1 330 2 207 2 247 1 331 2 290 1 168 1 81 1 
213 2 133 1 214 2 181 1 182 1 321 2 241 2 243 1 91 2 326 1 73 2 328 1 330 2 247 1 207 2 290 1 331 2 168 1 81 1 
194 1 13 1 73 1 241 1 118 1 
194 1 326 1 73 2 328 1 76 1 241 2 71 1 118 1 
73 1 241 1 118 1 
194 1 213 1 214 1 181 1 182 1 321 1 241 1 91 1 73 1 330 1 247 1 207 1 331 1 290 1 
326 1 
11 1 194 1 326 1 73 2 328 1 241 2 71 1 118 1 
126 2 257 1 213 1 214 1 181 1 49 1 182 1 5 1 88 2 91 1 186 2 303 1 267 1 58 4 314 2 60 1 193 1 194 2 238 2 321 1 114 1 241 5 155 1 71 1 118 2 32 1 286 1 326 2 73 5 205 2 246 5 328 2 330 1 207 1 247 1 331 1 290 1 333 1 
337 1 
213 2 214 1 294 1 321 1 90 1 91 1 330 2 207 2 165 2 
171 1 147 1 3 1 
256 1 213 1 292 1 293 1 112 1 53 1 298 1 163 1 207 1 97 1 189 1 331 1 165 1 20 1 77 1 145 1 335 1 275 1 
256 1 171 1 213 2 292 1 293 1 214 1 321 1 53 1 298 1 245 1 330 1 163 1 207 2 189 1 20 1 77 1 145 1 334 1 275 1 335 1 
237 1 213 5 214 4 134 1 294 1 321 4 136 1 91 1 245 1 330 5 207 5 102 1 165 1 334 2 
213 2 330 2 207 2 214 2 331 1 182 1 321 2 191 1 
91 1 213 3 330 3 207 3 214 3 165 1 321 3 334 1 
213 1 330 1 207 1 214 1 331 1 182 1 321 1 
91 1 213 1 330 1 207 1 214 1 331 1 294 1 321 1 90 1 
256 1 82 1 174 1 87 1 181 1 6 2 262 1 10 1 91 2 189 1 17 1 20 1 275 1 112 1 207 4 292 1 133 1 213 4 214 3 293 1 294 1 51 1 295 1 298 1 53 1 138 1 300 1 145 1 231 1 316 1 321 3 241 1 242 1 243 1 245 1 73 1 163 1 330 3 331 2 77 1 165 1 334 1 168 1 335 1 81 1 
213 2 330 2 207 2 214 1 165 1 102 1 321 1 136 1 334 1 
213 3 133 1 214 3 294 1 321 3 241 1 243 1 91 1 326 1 245 1 73 1 330 3 207 3 17 1 331 1 334 2 79 1 168 1 81 1 
171 1 147 1 213 2 214 2 294 1 321 2 91 1 330 2 207 2 334 1 
256 1 213 1 292 1 293 1 112 1 53 1 298 1 163 1 207 1 189 1 331 1 165 1 77 1 20 1 145 1 335 1 275 1 
255 1 256 1 279 1 213 1 292 1 112 1 53 1 298 1 163 1 207 1 331 1 165 1 77 1 20 1 145 1 335 1 275 1 
126 1 171 2 3 2 51 1 295 2 262 1 6 2 263 1 10 1 138 1 300 1 96 1 271 1 309 2 231 1 147 2 318 1 238 1 24 1 199 1 242 4 160 1 289 1 252 1 
133 1 213 1 330 1 207 1 214 1 331 1 321 1 191 1 
111 1 140 1 
111 1 140 1 
129 1 100 1 
129 1 100 1 
129 1 100 1 
111 1 140 1 89 1 
111 1 140 1 89 1 
111 1 140 1 261 1 
111 2 129 1 140 2 100 1 28 1 63 1 
111 1 140 1 89 1 
111 1 140 1 273 1 
111 1 140 1 273 1 
111 1 140 1 273 1 
259 1 213 2 214 2 261 1 217 1 185 1 301 1 140 1 223 1 272 1 190 1 110 1 111 1 321 2 241 1 73 1 122 1 330 2 207 2 251 1 165 1 36 1 338 1 339 1 
111 2 195 1 66 1 217 2 185 2 241 2 156 1 218 2 301 2 326 1 140 2 73 2 327 1 122 2 228 1 272 3 36 1 61 1 63 1 
84 1 270 1 146 1 
270 1 47 1 146 1 
128 1 84 2 47 1 52 1 69 1 146 3 
128 1 84 1 47 1 143 1 69 1 146 2 
128 2 84 1 47 1 69 1 146 2 
291 2 126 1 183 2 88 1 222 1 188 1 139 1 268 1 306 1 58 3 190 1 144 3 314 1 194 4 318 1 197 1 238 1 199 1 114 1 241 5 71 1 118 1 326 2 73 5 246 2 205 1 328 1 332 2 253 1 124 1 338 1 339 1 
179 3 181 1 182 1 183 2 88 1 91 1 13 3 268 1 190 2 106 1 194 5 197 1 199 1 114 1 118 4 205 1 207 1 290 1 126 1 213 1 214 1 222 1 139 1 306 1 58 3 144 3 314 1 64 1 318 1 238 1 321 1 241 6 71 1 326 3 73 6 246 2 328 1 330 1 247 1 331 1 332 2 254 1 
291 1 126 1 183 2 88 1 222 2 188 1 139 1 306 1 58 3 190 1 144 4 314 1 194 2 318 1 197 1 238 1 199 1 241 3 155 1 326 3 73 3 205 1 246 2 328 1 332 2 124 1 
291 2 126 2 260 1 183 4 88 1 222 3 188 1 139 2 306 1 58 5 190 2 144 7 314 1 194 3 318 2 197 1 238 2 199 2 241 4 155 1 31 1 326 4 73 4 205 1 246 4 328 1 332 4 124 1 80 1 
337 1 
0 1 20 1 
92 1 
256 1 20 1 275 1 
74 1 20 1 
20 1 275 1 
256 1 68 1 54 2 92 1 209 1 20 3 275 1 
126 1 257 1 211 1 238 1 24 3 295 3 242 7 203 1 299 1 204 1 267 1 304 1 96 2 309 4 38 2 333 1 315 1 
126 1 257 1 211 1 238 1 24 3 295 3 242 7 203 1 299 1 204 1 267 1 304 1 96 2 309 4 38 2 333 1 315 1 
126 1 257 1 211 1 238 1 24 3 295 3 203 1 242 7 299 1 204 1 267 1 304 1 96 2 309 4 125 1 38 2 333 1 315 1 
126 4 211 1 257 2 86 3 212 1 295 15 262 1 6 2 10 1 300 1 299 5 267 2 139 3 304 1 142 1 96 5 309 16 229 1 315 2 231 1 236 1 318 3 199 3 24 10 238 4 201 1 203 1 242 31 323 4 244 1 120 1 204 2 38 3 333 1 
300 1 231 1 204 1 225 1 98 1 309 1 262 1 6 2 38 1 242 1 10 1 315 1 
85 1 307 1 311 1 265 1 
85 1 307 1 265 1 192 1 
1 1 84 1 292 1 132 1 47 1 52 1 298 1 12 1 270 1 57 1 307 2 99 1 145 1 276 2 146 2 148 1 149 1 25 1 67 2 113 1 115 1 117 1 287 1 163 1 248 1 77 1 
85 1 307 1 265 1 192 1 
85 1 307 1 311 1 265 1 
280 1 
173 1 175 1 184 2 264 1 88 1 94 2 93 1 14 2 16 1 20 1 102 1 275 1 277 1 109 1 197 1 114 1 118 6 119 1 205 1 288 1 207 1 130 2 45 1 292 2 213 1 133 1 215 2 135 1 296 2 53 2 298 2 302 1 222 2 58 2 144 2 145 1 314 1 62 1 241 5 71 3 243 1 159 4 161 1 326 3 73 5 246 2 328 2 163 2 330 1 164 1 331 1 77 1 168 1 170 2 81 1 
213 1 133 1 135 1 11 1 302 1 94 1 102 1 109 1 277 1 62 1 241 3 71 1 243 1 118 2 159 2 326 2 73 3 328 2 330 1 207 1 164 1 331 1 168 1 81 1 
133 1 213 1 215 1 135 1 241 2 243 1 159 3 302 1 326 2 73 2 328 2 330 1 207 1 164 1 331 1 102 1 168 1 81 1 62 1 277 1 109 1 
130 1 213 1 133 1 215 1 135 1 11 1 302 1 94 1 102 1 109 1 277 1 62 1 241 3 71 1 243 1 118 2 159 3 326 2 73 3 328 2 330 1 207 1 164 1 331 1 168 1 81 1 
181 1 182 1 7 1 184 2 88 1 11 1 91 1 94 4 14 2 16 1 102 1 277 1 109 1 108 1 196 1 114 1 118 7 119 1 205 1 207 2 290 1 39 1 130 4 133 1 213 2 214 1 215 3 135 1 296 2 302 1 222 2 58 1 313 1 314 1 62 1 321 1 241 5 243 1 71 3 159 5 326 4 73 5 246 1 328 4 330 2 247 1 164 1 331 2 168 1 81 1 170 2 
173 1 130 2 213 1 133 1 215 2 135 1 296 2 184 2 88 1 302 1 94 2 222 2 14 2 16 1 58 1 144 2 102 1 314 1 109 1 277 1 62 1 114 1 241 4 71 2 243 1 118 4 119 1 159 4 326 4 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 168 1 170 2 81 1 
130 2 213 1 133 1 215 2 135 1 296 2 7 1 184 2 88 1 302 1 94 2 222 2 14 2 16 1 58 1 102 1 314 1 109 1 277 1 62 1 196 1 114 1 241 4 71 2 243 1 118 4 119 1 159 4 326 3 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 168 1 39 1 170 2 81 1 
130 2 213 1 133 1 215 2 135 1 296 2 7 1 184 2 88 1 302 1 94 2 222 2 14 2 16 1 58 1 102 1 314 1 109 1 277 1 62 1 196 1 114 1 241 4 71 2 243 1 118 4 119 1 159 4 326 3 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 168 1 39 1 170 2 81 1 
130 2 213 1 133 1 215 2 135 1 296 2 7 1 184 2 88 1 302 1 94 2 221 1 305 2 58 1 144 2 102 1 314 1 109 1 277 1 62 1 114 1 241 4 71 2 158 1 243 1 118 4 119 1 159 4 326 3 73 4 246 1 162 1 205 1 328 3 330 1 207 1 164 1 331 1 168 1 40 2 81 1 
130 3 213 1 133 1 215 3 135 1 296 2 7 1 184 2 88 1 302 1 222 2 94 3 14 2 16 1 58 1 102 1 314 1 109 1 277 1 62 1 108 1 196 1 114 1 241 4 71 2 243 1 118 5 119 1 159 5 326 3 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 39 1 168 1 170 2 81 1 
130 3 213 1 133 1 215 3 135 1 296 2 7 1 184 2 88 1 302 1 222 2 94 3 14 2 16 1 58 1 102 1 314 1 109 1 277 1 62 1 108 1 196 1 114 1 241 4 71 2 243 1 118 5 119 1 159 5 326 3 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 39 1 168 1 170 2 81 1 
173 1 130 2 213 1 133 1 215 2 135 1 296 2 184 2 88 1 302 1 94 2 305 2 58 1 144 2 102 1 314 1 109 1 277 1 62 1 114 1 241 4 71 2 158 1 243 1 118 4 119 1 159 4 326 3 73 4 246 1 205 1 328 3 330 1 207 1 164 1 331 1 168 1 40 2 81 1 
300 1 231 1 51 1 289 1 262 1 6 2 337 1 10 1 138 1 
82 1 126 3 171 13 3 13 46 1 86 3 180 1 295 7 51 1 262 2 6 4 219 1 10 2 138 2 299 1 300 2 139 3 96 1 310 1 309 10 230 1 231 2 147 4 318 1 24 2 199 3 238 1 201 2 242 17 323 4 120 1 165 1 37 1 
82 1 256 1 262 1 6 2 10 1 187 1 97 1 189 1 20 1 274 1 275 1 112 1 207 2 46 1 213 2 292 1 214 1 293 1 295 1 51 1 53 1 298 1 138 1 300 1 309 1 310 1 145 1 231 1 147 1 320 1 321 1 242 2 245 1 330 1 163 1 331 1 77 1 165 1 334 1 335 1 
256 1 82 1 213 2 292 1 293 1 87 1 214 1 51 2 295 1 6 4 262 2 297 1 53 1 298 1 10 2 138 2 300 2 141 1 189 1 310 1 20 1 145 1 275 1 278 1 231 2 200 1 321 1 242 1 245 1 330 1 163 1 207 2 77 1 334 1 335 1 
256 1 82 1 44 1 46 1 45 1 292 2 51 1 295 1 262 1 6 2 298 2 53 1 10 1 138 1 300 1 309 1 20 2 145 2 275 2 231 1 242 2 322 1 325 1 206 1 163 2 288 1 208 1 250 1 78 1 77 3 
126 1 171 1 3 1 213 1 214 1 294 1 51 1 295 2 262 1 6 2 10 1 138 1 300 1 91 1 139 1 96 1 310 1 309 1 231 1 147 1 318 1 24 1 199 1 238 1 239 1 321 1 242 3 330 1 207 1 
231 1 126 1 171 1 147 1 3 1 24 1 199 1 51 1 6 2 262 1 242 2 138 1 10 1 299 1 300 1 160 1 289 1 309 2 
231 1 171 1 147 1 3 1 318 1 24 1 238 1 51 1 295 2 6 2 262 1 242 2 138 1 10 1 300 1 96 1 289 1 252 1 
126 1 171 2 3 2 51 1 295 2 262 1 6 2 10 1 138 1 300 1 299 1 139 1 96 1 309 2 231 1 147 2 318 1 199 1 24 2 238 1 242 4 289 1 
231 1 126 1 171 1 147 1 3 1 24 1 199 1 51 1 6 2 262 1 242 2 138 1 10 1 299 1 300 1 160 1 250 1 309 2 
231 1 171 1 147 1 3 1 318 1 24 1 238 1 51 1 295 2 6 2 262 1 242 2 138 1 10 1 300 1 96 1 250 1 252 1 
126 1 171 2 3 2 51 1 295 2 262 1 6 2 10 1 138 1 300 1 299 1 139 1 96 1 309 2 231 1 147 2 318 1 199 1 24 2 238 1 242 4 250 1 
126 1 171 2 3 2 51 1 295 2 262 1 6 2 10 1 138 1 300 1 299 1 139 1 96 1 309 2 231 1 147 2 318 1 199 1 24 2 238 1 242 4 
256 1 82 1 46 1 292 1 213 1 293 1 87 1 51 1 295 1 6 2 262 1 298 1 53 1 138 1 10 1 300 1 189 1 309 1 20 1 145 1 275 1 231 1 112 1 242 2 163 1 207 1 331 1 165 1 77 1 335 1 
256 1 255 1 82 1 292 1 213 1 51 1 295 1 6 2 262 1 298 1 53 1 138 1 10 1 300 1 20 1 145 1 275 1 231 1 279 1 319 1 112 1 242 1 163 1 207 1 331 1 165 1 77 1 335 1 
126 1 171 2 3 2 51 1 295 2 262 1 6 2 10 1 138 1 300 1 299 1 139 1 96 1 309 2 310 1 231 1 147 2 318 1 199 1 24 2 238 1 242 4 
256 1 126 1 171 2 3 2 292 1 213 1 293 1 87 1 295 2 51 1 6 2 262 1 298 1 138 1 10 1 300 1 266 1 141 1 139 1 96 1 189 1 309 2 20 1 145 1 275 1 231 1 147 2 318 1 24 1 238 1 199 1 242 4 163 1 207 1 77 1 335 1 
126 1 171 1 258 1 3 1 213 1 214 1 295 1 294 1 51 1 262 1 6 2 10 1 138 1 299 1 300 1 91 1 139 1 310 1 309 2 231 1 147 1 318 1 238 1 24 1 199 1 321 1 242 3 330 1 207 1 
231 1 65 1 295 1 6 2 262 1 154 1 242 2 116 1 10 1 300 1 95 1 225 1 309 1 41 1 
231 1 65 1 295 1 6 2 262 1 154 1 242 2 116 1 10 1 300 1 95 1 225 1 309 1 41 1 
231 1 65 1 295 1 6 2 262 1 154 1 242 2 116 1 10 1 300 1 95 1 225 1 309 1 41 1 
231 1 65 1 295 1 6 2 262 1 154 1 242 2 116 1 10 1 300 1 95 1 225 1 309 1 41 1 
231 1 65 2 295 1 6 2 262 1 154 2 242 2 116 1 10 1 300 1 95 1 225 1 309 1 41 1 
111 1 301 1 43 1 195 1 140 1 122 1 66 1 217 1 185 1 63 1 
261 1 251 1 
111 1 301 1 72 1 140 1 122 1 101 1 104 1 217 1 185 1 
233 1 89 1 
273 1 166 1 28 1 
111 1 195 1 66 1 217 1 241 1 185 1 156 1 218 1 301 1 326 1 73 1 140 1 327 1 122 1 228 1 272 2 36 1 63 1 
111 1 195 1 66 1 217 1 241 1 185 1 156 1 218 1 301 1 326 1 73 1 140 1 327 1 122 1 228 1 272 2 36 1 63 1 
111 1 195 1 66 1 217 1 241 1 185 1 156 1 218 1 301 1 326 1 73 1 140 1 327 1 122 1 228 1 272 2 36 1 63 1 
233 1 28 1 89 1 
233 1 28 1 89 1 
273 1 166 1 
273 1 166 1 28 1 
259 1 110 1 
259 1 213 2 214 2 261 1 217 1 185 1 218 1 301 1 140 1 223 1 56 1 272 1 190 1 110 1 111 1 194 1 321 2 241 1 73 1 327 1 122 1 330 2 207 2 251 1 165 1 338 1 339 1 
82 1 131 1 46 1 292 2 213 2 51 1 295 1 6 2 262 1 298 2 138 1 10 1 300 1 220 1 310 1 59 1 309 1 20 1 145 1 275 1 231 1 23 1 282 1 242 2 157 1 325 1 206 2 163 2 330 2 207 2 77 1 
1 1 84 1 317 1 132 1 292 2 47 1 52 1 298 2 117 1 266 1 121 1 270 1 163 2 226 1 248 1 77 1 19 1 145 1 146 2 
1 1 84 1 132 1 292 1 177 1 47 1 52 1 298 1 117 1 121 1 270 1 163 1 226 1 248 1 77 1 145 1 146 2 
232 1 317 1 45 1 292 1 53 1 298 1 117 1 163 1 34 1 288 1 77 1 20 1 145 1 275 1 
1 1 84 1 317 1 132 1 292 1 47 1 52 1 298 1 117 1 121 1 270 1 163 1 226 1 248 1 77 1 19 1 145 1 146 2 
167 1 
337 1 
88 1 222 1 14 1 16 1 58 1 144 1 314 1 114 1 241 1 71 1 118 1 326 2 73 1 246 1 205 1 328 1 170 1 
0 2 256 1 183 3 8 1 88 2 186 1 20 4 103 1 275 1 22 1 197 1 199 1 114 2 30 1 118 2 205 2 127 1 126 1 292 1 53 1 298 1 137 1 54 1 222 3 139 1 224 1 58 4 144 6 145 1 314 2 318 1 238 1 240 1 68 1 241 2 243 1 71 1 326 3 73 2 246 3 163 1 77 2 332 3 
126 2 172 1 86 1 216 1 183 5 88 2 9 1 186 1 222 3 139 2 58 7 308 1 144 6 314 2 318 2 199 2 238 2 283 1 114 2 241 1 284 1 71 1 118 1 323 1 120 1 326 4 73 1 205 2 246 4 328 1 332 5 
126 2 257 1 213 1 214 1 181 1 49 1 182 1 88 1 186 2 91 1 303 1 267 1 58 2 314 1 196 1 238 1 114 1 321 1 241 1 73 1 205 1 246 2 330 1 207 1 247 1 331 1 290 1 333 1 
114 1 88 1 326 1 205 1 246 1 328 1 58 1 60 1 314 1 193 1 
126 2 318 2 199 2 238 2 183 5 186 2 303 1 222 5 326 5 139 2 246 5 58 5 332 5 144 10 22 1 
326 1 73 1 328 1 241 1 71 1 118 1 
175 1 45 1 292 4 264 2 88 2 298 4 53 2 55 1 58 2 20 1 145 1 314 2 275 1 197 2 27 1 114 1 29 2 241 3 70 1 155 1 71 2 118 4 161 1 73 3 205 2 246 2 163 4 288 1 77 1 
82 1 256 1 174 1 292 1 213 3 214 2 87 1 293 1 181 1 295 1 51 1 262 1 6 2 298 1 53 1 10 1 138 1 300 1 91 2 189 1 20 1 145 1 275 1 231 1 321 2 242 1 163 1 330 2 207 3 165 1 77 1 335 1 
197 1 183 2 114 1 264 1 88 1 222 2 326 4 246 2 205 1 328 2 58 1 332 2 144 4 38 1 314 1 
329 1 217 1 185 1 
329 1 217 1 185 1 
195 1 217 1 185 1 285 1 110 1 
329 1 217 1 185 1 
35 1 217 1 185 1 
35 1 217 1 185 1 
35 1 217 1 185 1 
217 1 185 1 
111 1 140 1 
126 2 172 1 257 1 86 1 295 5 262 1 6 2 10 1 300 1 139 1 267 1 304 1 225 1 96 2 309 6 231 1 238 1 24 2 199 1 201 1 242 11 203 1 323 2 120 1 38 1 333 1 
126 2 172 1 257 1 86 1 295 5 262 2 6 4 10 2 300 2 299 1 267 1 139 1 304 1 225 1 96 2 309 6 21 1 231 2 238 1 199 1 24 3 201 1 203 1 242 11 323 2 120 1 38 1 333 1 
126 2 172 1 86 1 212 1 295 7 262 3 6 6 9 1 10 3 299 1 300 3 139 2 225 1 96 1 308 1 309 6 21 1 231 3 318 2 199 2 238 2 24 2 283 1 284 1 242 13 323 1 120 1 
126 2 172 1 212 1 86 1 295 4 262 3 6 6 10 3 9 1 299 1 300 3 139 2 225 1 96 1 308 1 309 7 21 1 231 3 318 1 199 2 238 1 24 2 283 1 284 1 242 11 323 1 120 1 
126 2 172 1 257 1 86 1 295 5 262 1 6 2 10 1 300 1 139 1 267 1 304 1 225 1 96 2 309 6 231 1 238 1 24 2 199 1 201 1 242 11 203 1 323 2 120 1 38 1 333 1 
126 2 172 1 86 1 295 6 262 1 6 2 10 1 9 1 299 1 300 1 139 2 225 1 96 1 308 1 309 6 231 1 318 2 199 2 238 2 24 2 283 1 284 1 242 12 323 1 120 1 
126 2 172 1 86 1 212 2 295 5 262 4 6 8 9 1 10 4 299 1 300 4 139 2 225 1 96 1 308 1 309 7 21 1 231 4 318 1 199 2 238 1 24 2 283 1 284 1 242 12 323 1 120 1 
126 2 172 1 86 1 212 2 178 1 295 5 262 4 6 8 9 1 10 4 299 2 300 4 139 2 225 1 96 2 308 1 309 7 231 4 318 1 199 2 238 1 24 4 283 1 284 1 242 12 323 1 120 1 
126 1 257 3 238 1 24 6 295 4 242 7 203 2 299 3 267 3 304 1 96 3 309 3 333 1 
126 2 172 1 86 1 212 2 178 1 295 5 262 4 6 8 9 1 10 4 299 1 300 4 139 2 225 1 96 1 308 1 309 7 231 4 318 1 199 2 238 1 24 2 283 1 284 1 242 12 323 1 120 1 
126 1 231 2 257 1 212 1 238 1 24 3 295 4 6 4 262 2 242 8 203 1 10 2 299 1 300 2 267 1 304 1 96 2 309 4 38 1 333 1 
337 1 
231 1 126 1 318 1 238 1 24 2 199 1 295 2 6 2 262 1 242 4 10 1 300 1 299 1 139 1 96 1 309 2 21 1 
126 1 318 1 86 1 238 1 199 1 24 2 295 4 201 1 242 7 323 2 299 1 120 1 139 1 96 1 309 3 
126 3 257 2 86 2 212 2 180 1 295 12 6 4 262 2 10 2 299 4 300 2 267 2 139 2 304 1 96 5 309 11 105 1 230 1 231 2 318 2 24 9 199 2 238 3 201 1 203 1 242 23 323 2 38 1 333 1 
323 1 295 1 242 1 
86 1 309 1 242 1 
231 1 126 1 318 1 199 1 24 3 238 1 295 3 262 1 6 2 242 6 10 1 300 1 299 1 139 1 96 2 309 3 21 1 22 1 
126 2 172 1 86 1 295 6 262 1 6 2 10 1 9 1 299 1 300 1 139 2 225 1 96 1 308 1 309 6 231 1 318 2 199 2 238 2 24 2 283 1 284 1 242 12 323 1 120 1 
126 1 257 1 238 1 24 2 295 3 242 6 299 1 267 1 96 1 309 3 333 1 
231 1 257 1 212 1 24 2 295 2 6 2 262 1 203 1 242 3 10 1 299 1 300 1 267 1 304 1 96 1 309 1 105 1 
231 1 126 2 257 2 24 5 238 2 49 1 295 5 262 1 6 2 242 10 10 1 300 1 299 2 267 2 225 1 96 3 309 5 333 1 
231 1 126 1 199 1 24 1 6 2 262 1 242 2 10 1 300 1 299 1 225 1 309 2 
231 1 126 1 318 1 238 1 24 2 199 1 295 2 6 2 262 1 242 4 10 1 300 1 299 1 139 1 225 1 96 1 309 2 
231 3 257 1 212 1 178 1 24 2 295 2 6 6 262 3 242 3 10 3 300 3 299 1 267 1 225 1 96 1 309 1 105 1 
126 5 257 3 212 2 86 3 178 1 295 18 262 5 6 10 10 5 300 5 299 5 267 3 139 3 304 1 225 1 96 7 309 16 105 1 229 1 21 1 231 5 236 1 318 3 199 3 24 12 238 5 201 1 203 1 242 34 323 4 244 1 120 1 38 1 333 2 
102 1 210 1 136 1 
83 1 4 1 26 1 102 1 151 1 153 1 210 1 136 1 
292 1 163 1 298 1 53 1 337 1 
256 1 292 1 213 2 293 1 214 1 298 1 53 1 20 1 145 1 275 1 112 1 321 1 163 1 330 1 207 2 331 1 77 1 165 1 334 1 335 1 
256 2 292 1 213 2 133 1 293 1 214 1 50 1 298 1 20 3 145 1 275 2 112 1 321 2 29 1 74 1 163 1 330 2 207 2 331 2 165 1 77 1 334 1 335 1 81 1 
255 1 256 2 292 1 213 2 133 1 214 1 50 1 298 1 20 3 145 1 275 2 112 1 321 2 29 1 74 1 163 1 330 2 207 2 331 2 165 1 77 1 334 1 335 1 81 1 
0 1 256 1 2 1 213 1 292 1 214 1 181 1 50 1 182 1 298 1 54 1 91 1 20 4 145 1 275 1 198 1 321 1 29 1 241 2 243 1 118 1 326 1 73 2 74 1 328 1 330 1 163 1 207 1 247 1 331 1 290 1 77 1 
0 1 256 1 213 1 292 1 214 1 181 1 50 1 182 1 137 1 298 1 54 1 91 1 20 4 145 1 275 1 321 1 29 1 241 2 243 1 118 1 326 1 73 2 74 1 328 1 330 1 163 1 207 1 247 1 331 1 290 1 77 1 
292 1 163 1 123 1 77 1 145 1 298 1 
256 1 44 1 292 1 150 1 68 1 53 1 298 1 163 1 78 1 20 1 77 2 145 1 275 1 
256 1 171 1 257 2 3 1 87 1 262 2 6 4 10 2 266 1 267 2 189 1 96 3 20 1 275 1 24 4 112 1 200 1 203 1 207 2 38 1 126 3 292 1 213 2 293 1 214 1 49 1 51 2 295 6 298 1 138 2 299 1 300 2 141 1 304 1 310 1 309 7 145 1 231 2 147 1 238 3 321 1 242 13 157 1 163 1 330 1 331 1 77 1 165 3 333 2 334 1 335 1 
0 1 257 1 181 1 182 1 88 2 186 2 91 1 267 1 20 2 193 1 194 1 114 2 30 1 118 2 205 2 207 1 290 1 126 2 213 1 292 1 214 1 49 1 137 1 53 1 298 1 54 1 303 1 55 1 224 1 58 4 314 2 60 1 238 2 240 1 321 1 241 3 71 1 243 1 326 2 73 3 246 5 328 2 163 1 330 1 247 1 331 1 333 1 
256 1 292 1 8 1 68 1 298 1 54 1 92 1 163 1 123 1 20 2 77 2 145 1 275 1 
256 1 44 1 45 1 292 2 53 1 298 2 322 1 266 1 163 2 288 1 208 1 78 1 77 3 20 2 145 2 275 2 
256 1 44 1 292 1 298 1 322 1 163 1 208 1 78 1 20 1 77 2 145 1 312 1 275 1 
1 1 292 1 47 1 53 1 298 1 270 1 163 1 77 1 145 1 146 1 
266 1 23 1 131 1 132 1 292 2 163 2 77 1 20 1 145 1 298 2 275 1 
256 1 44 1 45 1 292 3 298 2 53 1 266 1 18 1 20 4 145 3 275 3 107 1 23 1 322 1 163 3 288 1 208 1 77 4 78 1 
256 1 44 1 45 1 292 3 298 2 53 1 266 1 18 1 20 4 145 3 275 3 23 1 322 1 33 1 163 3 288 1 208 1 77 4 78 1 
255 1 256 1 292 1 213 2 214 1 298 1 53 1 20 1 145 1 275 1 112 1 321 1 163 1 330 1 207 2 331 1 77 1 165 1 334 1 335 1 
256 1 44 1 292 1 150 1 29 1 68 1 298 1 163 1 78 1 20 1 77 2 145 1 275 1 
42 1 269 1 48 1 281 1 165 1 
42 1 213 1 133 1 214 1 48 1 181 1 182 1 91 1 269 1 17 1 194 1 234 1 281 1 321 1 241 2 243 1 326 1 73 2 75 1 328 1 330 1 207 1 247 1 331 2 290 1 168 1 336 1 81 1 
42 1 213 1 281 1 282 1 220 1 269 1 330 1 207 1 59 1 
234 1 75 1 281 1 
337 1 
85 1 307 1 265 1 
287 1 57 1 67 1 
85 1 307 1 311 1 265 1 
85 1 307 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 176 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 307 1 47 1 311 1 265 1 146 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
85 1 149 1 307 2 67 1 265 1 276 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
12 2 15 2 227 1 169 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
235 1 
85 1 307 1 311 1 265 1 
85 1 307 1 311 1 265 1 
324 1 12 1 149 1 249 1 
12 1 115 1 

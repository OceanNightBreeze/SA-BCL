#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 61 317 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 61 317 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 9 150 2 306 1 285 5 62 9 129 2 289 1 48 2 343 1 200 2 179 2 346 2 68 1 159 1 137 1 353 1 75 1 230 3 11 1 77 1 186 1 78 6 99 1 145 4 16 1 18 1 122 2 125 1 
284 9 150 2 306 1 285 5 62 9 129 2 289 1 48 2 343 1 200 2 179 2 346 2 68 1 159 1 137 1 353 1 75 1 230 3 11 1 77 1 186 1 78 6 99 1 145 4 16 1 18 1 122 2 125 1 
284 10 150 2 306 1 285 6 62 10 129 2 289 1 48 2 343 1 200 2 179 2 346 2 68 1 159 1 137 1 353 1 75 1 230 4 11 1 77 1 186 1 78 7 99 1 145 5 16 1 18 1 122 2 125 1 
284 7 150 2 306 1 285 4 62 7 129 2 289 1 48 2 343 1 200 2 179 2 346 2 68 1 159 1 137 1 75 1 230 2 11 1 77 1 186 1 78 4 99 1 145 3 16 1 18 1 122 1 125 1 
284 4 150 1 230 1 353 1 285 3 62 4 129 1 186 1 78 3 99 1 145 2 343 1 48 1 179 1 200 1 68 1 18 1 122 2 
284 2 351 1 150 1 285 1 62 2 11 1 129 1 186 1 99 1 179 1 200 1 298 1 292 1 346 1 18 1 137 1 
284 3 230 1 285 2 62 3 77 1 186 1 78 1 99 1 145 1 179 2 200 2 346 1 18 1 
284 9 150 1 285 5 62 9 129 1 289 1 343 1 48 1 200 2 179 2 318 1 346 1 68 1 230 3 353 1 77 1 186 1 78 7 99 1 145 4 16 1 18 1 122 2 19 1 
284 9 150 1 285 5 62 9 129 1 289 1 343 1 48 1 200 2 179 2 318 1 346 1 68 1 230 3 353 1 77 1 186 1 78 7 99 1 145 4 16 1 18 1 122 2 19 1 
151 1 192 1 106 1 
84 1 54 2 192 1 
166 1 214 2 111 2 304 1 116 2 3 2 237 2 229 2 
171 1 214 3 304 1 175 1 24 1 176 1 288 1 312 1 109 2 313 1 111 2 88 1 28 1 345 1 29 1 3 3 52 1 202 2 227 1 229 2 204 2 206 1 55 1 116 2 162 1 142 1 9 1 144 2 235 1 166 1 37 1 236 1 104 1 105 1 40 2 237 2 302 1 
304 1 214 1 116 1 218 1 111 1 66 1 3 1 321 1 237 1 229 1 
304 1 214 2 116 1 258 1 218 2 66 1 111 2 261 1 26 1 361 1 180 1 3 2 192 1 321 1 237 1 106 1 226 1 229 1 
304 1 214 2 116 2 324 1 355 1 258 1 218 2 66 1 111 2 261 1 26 1 361 1 3 2 192 1 321 1 106 1 237 2 229 2 
44 1 39 1 324 1 355 1 228 1 
220 1 39 1 192 1 324 2 355 2 106 1 203 1 228 1 
39 1 324 1 355 1 
304 1 214 1 116 1 324 1 355 1 218 1 66 1 111 1 261 1 3 1 321 1 237 1 228 1 229 1 
192 1 
39 1 192 1 324 2 355 2 106 1 203 1 108 1 228 1 
33 1 160 2 338 1 324 5 232 1 355 5 287 1 326 1 65 1 328 1 282 1 39 2 192 1 194 2 106 1 249 1 203 1 228 2 43 2 
166 1 151 1 
214 2 116 1 189 1 218 1 120 1 111 2 166 1 3 2 211 1 237 1 229 1 
262 1 267 1 242 1 
214 1 162 1 175 1 9 1 24 1 144 1 166 1 119 1 37 1 3 1 29 1 236 1 105 1 302 1 202 1 204 1 
214 2 72 1 267 1 175 1 162 1 116 1 9 1 24 1 144 1 37 1 111 1 29 1 3 2 236 1 105 1 237 1 302 1 202 1 20 1 204 1 
214 5 72 2 116 4 286 1 358 1 111 5 166 1 58 1 180 1 3 5 211 1 237 4 20 1 229 1 
66 1 214 1 111 1 116 1 3 1 237 1 218 1 
166 1 214 3 111 3 72 1 116 3 3 3 237 3 229 1 
66 1 214 1 111 1 116 1 3 1 237 1 218 1 
214 1 116 1 189 1 218 1 111 1 3 1 211 1 237 1 229 1 
214 2 72 1 116 2 198 1 258 1 218 1 111 2 131 1 26 1 361 1 3 2 211 1 237 2 20 1 229 1 
214 2 72 1 116 1 358 1 218 1 120 1 111 2 166 1 3 2 180 1 237 1 
214 1 111 1 26 1 131 1 72 1 361 1 116 1 3 1 134 1 237 1 258 1 20 1 218 1 
214 2 111 2 72 1 262 1 267 1 116 2 3 2 211 1 237 2 229 1 
214 1 162 1 175 1 9 1 24 1 144 1 166 1 37 1 3 1 29 1 236 1 105 1 302 1 202 1 204 1 
214 1 162 1 175 1 24 1 144 1 218 1 120 1 166 1 27 1 3 1 223 1 29 1 236 1 105 1 302 1 202 1 204 1 
267 2 128 1 176 1 288 1 272 1 312 2 109 2 242 2 313 1 178 1 345 1 52 1 142 1 295 1 143 1 296 1 297 1 185 1 357 1 235 2 103 1 262 2 332 1 40 4 
214 1 116 1 218 1 111 1 361 1 3 1 237 1 251 1 
337 1 80 1 
337 1 80 1 
219 1 139 1 
219 1 139 1 
219 1 139 1 
337 1 97 1 80 1 
337 1 188 1 80 1 
219 1 139 1 337 2 35 1 199 1 80 2 
337 1 97 1 80 1 
337 1 97 1 80 1 
337 1 23 1 80 1 
337 1 23 1 80 1 
337 1 23 1 80 1 
172 1 214 2 337 1 1 1 241 1 154 1 342 1 111 2 3 2 224 1 30 1 116 2 294 1 324 1 278 1 355 1 188 1 80 1 191 1 165 1 166 1 237 2 148 1 21 1 
195 1 337 2 324 2 207 1 35 1 241 2 355 2 154 1 243 1 80 2 191 2 319 1 224 3 192 1 225 2 247 1 30 2 183 1 148 2 
48 1 150 1 129 1 
150 1 351 1 129 1 
48 2 74 1 351 1 76 1 129 3 257 1 
48 1 74 1 351 1 127 1 129 2 257 1 
48 1 74 1 351 1 129 2 257 2 
84 2 173 2 130 1 216 1 157 1 322 1 203 1 228 4 33 2 160 1 54 2 73 1 92 1 352 1 324 5 278 1 143 1 296 1 355 5 297 1 185 1 326 1 165 1 260 2 281 2 282 3 169 1 39 1 192 2 194 1 106 1 21 1 43 1 
44 5 84 6 173 6 216 3 322 3 228 7 54 6 92 1 324 9 278 4 143 3 185 3 326 1 328 1 282 8 192 5 194 2 106 1 238 1 149 1 25 1 157 2 203 1 160 2 33 6 252 1 352 2 355 9 296 3 297 3 255 1 359 5 260 6 121 1 39 6 303 1 43 2 
84 2 149 1 173 2 130 1 216 1 157 1 322 1 228 2 160 1 33 2 54 2 73 1 352 1 324 3 278 1 143 1 296 1 355 3 185 1 297 1 328 1 260 2 281 1 282 3 192 3 194 1 106 1 43 1 
84 4 149 1 173 4 130 1 216 2 157 1 322 2 228 3 160 1 33 4 252 1 54 4 73 1 352 1 324 4 278 2 143 2 296 2 355 4 185 2 297 2 328 1 260 4 281 2 282 5 192 4 194 1 106 1 238 1 303 1 43 1 
151 1 24 1 17 1 
24 1 201 1 
36 1 
29 1 236 1 24 1 
221 1 24 1 
29 1 24 1 
29 1 236 1 50 1 24 3 17 2 271 1 
0 1 91 1 161 1 270 1 143 1 208 1 297 1 312 3 217 1 178 2 273 1 235 4 331 2 332 3 4 1 40 7 41 1 
0 1 91 1 161 1 270 1 143 1 208 1 297 1 312 3 217 1 178 2 273 1 235 4 331 2 332 3 4 1 40 7 41 1 
0 1 91 1 161 1 270 1 143 1 208 1 297 1 325 1 312 3 217 1 178 2 273 1 235 4 331 2 332 3 4 1 40 7 41 1 
0 2 196 1 63 1 270 1 176 1 288 1 216 3 312 13 217 1 109 2 273 2 178 4 155 1 156 1 345 1 4 2 52 1 323 1 91 1 161 2 253 4 10 3 208 1 296 2 143 3 185 3 297 4 235 16 331 3 360 1 332 8 40 29 41 4 239 1 
0 1 270 1 176 2 288 2 312 4 109 4 217 1 178 3 273 1 344 1 345 2 4 1 52 2 91 1 161 1 143 1 297 1 235 5 331 2 332 4 212 1 40 9 41 1 239 1 
45 1 46 1 284 2 150 1 285 1 62 2 152 1 129 2 48 1 200 1 179 1 346 1 274 1 202 1 90 1 204 1 7 1 351 1 8 1 162 1 76 1 186 1 78 1 56 1 144 1 99 1 100 1 299 1 105 1 18 1 
45 1 46 1 284 3 150 1 285 1 62 3 152 1 129 2 341 1 48 1 200 1 179 1 49 1 346 1 274 1 202 1 90 1 204 1 205 1 7 1 351 1 162 1 76 1 186 1 78 2 144 1 100 1 299 1 105 1 18 1 
45 1 284 2 150 1 285 1 62 2 152 1 129 2 341 1 48 1 346 1 274 1 202 1 90 1 204 1 205 1 7 1 351 1 162 1 76 1 186 1 78 2 144 1 299 1 105 1 18 1 
293 1 140 1 45 2 284 1 162 1 62 1 269 1 152 2 24 1 340 1 144 1 179 1 200 1 29 1 299 2 133 1 49 1 346 2 105 1 302 1 70 1 202 1 204 1 
45 1 46 1 284 1 150 1 62 1 152 1 129 2 48 1 200 1 179 1 346 1 274 1 202 1 90 1 204 1 205 1 7 1 351 1 8 1 162 1 76 1 144 1 99 1 100 1 299 1 105 1 
181 1 
160 1 61 1 352 1 324 1 355 1 326 1 144 1 317 1 282 1 39 1 194 1 302 1 202 1 43 1 204 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 2 310 1 355 2 279 1 258 1 218 1 164 1 111 1 26 1 361 1 3 1 180 1 39 1 263 1 203 1 226 1 108 1 
214 1 310 1 218 1 111 1 26 1 180 1 3 1 226 1 160 1 33 1 34 1 324 1 93 1 355 1 279 1 326 1 258 1 164 1 361 1 282 1 263 1 194 1 43 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 34 1 324 1 310 1 355 1 279 1 258 1 218 1 164 1 111 1 26 1 361 1 180 1 3 1 263 1 226 1 
214 1 197 1 310 1 218 1 111 1 26 1 180 1 3 1 226 1 160 1 33 1 34 1 324 1 355 1 279 1 326 1 258 1 164 1 361 1 282 1 263 1 194 1 43 1 
267 1 151 1 128 1 270 1 176 1 288 1 312 3 109 2 217 1 242 1 313 1 273 1 178 2 345 1 52 1 91 1 161 1 142 1 143 1 297 1 235 3 166 2 331 1 262 1 332 2 40 6 
267 13 307 1 196 2 176 2 288 2 216 3 312 7 109 4 242 13 313 2 178 1 88 1 345 2 52 2 323 1 206 1 253 4 142 1 10 3 296 1 143 1 185 3 297 3 166 1 235 10 332 2 262 4 40 17 265 1 123 1 283 1 41 1 82 1 
214 2 175 1 174 1 24 1 176 1 288 1 312 1 109 2 313 1 111 1 88 1 29 1 3 2 345 1 52 1 202 1 204 1 206 1 72 1 162 1 116 1 9 1 142 1 144 1 166 1 37 1 119 1 235 1 262 1 236 1 105 1 237 1 40 2 301 1 302 1 283 1 20 1 42 1 
214 3 175 2 267 7 270 1 176 3 216 2 312 10 217 1 313 3 315 2 273 1 178 4 88 1 3 3 5 2 52 3 276 2 91 1 142 3 9 2 143 3 185 2 144 3 98 1 235 10 331 1 332 8 236 2 105 2 334 1 237 1 283 1 20 1 24 2 288 3 109 6 242 7 244 2 111 1 291 1 28 2 345 3 29 2 202 3 204 3 205 1 206 1 72 1 161 1 116 1 162 2 296 2 297 3 166 2 37 2 262 7 40 20 302 1 41 4 
171 1 214 1 128 1 176 2 312 1 313 2 88 1 3 1 133 1 89 1 52 2 142 2 56 1 327 1 95 1 144 7 101 1 235 1 236 1 105 3 237 1 22 1 339 1 24 4 288 2 109 4 290 1 111 1 29 3 345 2 202 7 204 6 205 1 293 1 206 1 72 1 162 4 116 1 254 1 118 1 259 1 40 2 302 2 124 1 
214 1 267 1 176 1 288 1 216 1 312 2 109 2 242 1 313 1 178 1 111 1 345 1 3 1 52 1 229 1 116 1 142 1 296 1 143 1 185 1 297 1 235 1 332 1 262 1 211 1 193 1 237 1 40 3 283 1 
267 1 128 1 142 1 176 1 185 1 297 1 288 1 357 1 109 2 242 1 313 1 235 2 332 1 262 1 345 1 40 2 52 1 41 1 
267 1 128 1 142 1 296 1 143 1 176 1 288 1 312 2 109 2 242 1 313 1 178 1 332 1 262 1 103 1 345 1 40 2 52 1 
267 2 128 1 176 1 216 1 288 1 312 2 109 2 242 2 313 1 178 1 345 1 52 1 142 1 296 1 143 1 297 1 185 1 235 2 262 2 332 2 40 4 41 1 
267 1 142 1 176 1 185 1 297 1 288 1 357 1 109 2 242 1 313 1 235 2 332 1 262 1 345 1 89 1 40 2 52 1 41 1 
267 1 142 1 296 1 143 1 176 1 288 1 312 2 109 2 242 1 313 1 178 1 332 1 262 1 103 1 345 1 89 1 40 2 52 1 
267 2 176 1 216 1 288 1 312 2 109 2 242 2 313 1 178 1 345 1 89 1 52 1 142 1 296 1 143 1 297 1 185 1 235 2 262 2 332 2 40 4 41 1 
267 2 176 1 216 1 288 1 312 2 109 2 242 2 313 1 178 1 345 1 52 1 142 1 296 1 143 1 297 1 185 1 235 2 262 2 332 2 40 4 41 1 
214 1 175 1 24 1 176 1 288 1 312 1 109 2 313 1 88 1 28 1 29 1 3 1 345 1 52 1 202 1 204 1 206 1 162 1 9 1 142 1 144 1 235 1 166 1 37 1 236 1 105 1 40 2 302 1 
214 1 175 1 24 1 176 1 288 1 312 1 109 2 218 1 313 1 27 1 112 1 29 1 223 1 3 1 345 1 52 1 202 1 204 1 206 1 162 1 142 1 144 1 120 1 166 1 236 1 105 1 40 1 302 1 
267 2 176 1 216 1 288 1 312 2 109 2 242 2 313 1 178 1 345 1 52 1 142 1 296 1 143 1 297 1 185 1 235 2 262 2 332 2 40 4 283 1 41 1 
214 1 267 2 175 1 24 1 176 1 288 1 216 1 312 2 109 2 242 2 313 1 178 1 28 1 29 1 3 1 345 1 52 1 276 1 202 1 204 1 162 1 9 1 142 1 143 1 296 1 297 1 185 1 56 1 144 1 235 2 37 1 332 2 262 2 236 1 105 1 40 4 41 1 
214 1 267 1 176 1 288 1 216 1 312 1 109 2 242 1 313 1 111 1 345 1 3 1 52 1 229 1 116 1 142 1 354 1 143 1 296 1 185 1 297 1 235 2 332 1 262 1 211 1 237 1 40 3 283 1 41 1 
311 1 270 1 176 3 216 5 312 20 217 1 314 1 178 2 273 1 52 3 138 1 323 3 91 1 184 4 10 3 233 1 143 4 185 5 187 1 146 1 235 22 102 2 331 1 332 5 147 1 15 1 60 1 239 1 196 2 288 3 109 6 344 1 345 3 246 1 114 1 71 1 31 1 161 1 253 5 296 3 297 6 40 42 41 3 
311 1 270 1 176 4 216 5 312 21 217 1 314 1 178 5 273 1 52 4 138 1 323 3 91 1 10 3 184 4 143 5 233 1 185 5 187 1 146 1 235 22 102 2 331 1 332 7 147 1 15 1 60 1 239 2 196 2 288 4 109 8 344 1 345 4 246 1 114 1 71 1 31 1 161 1 253 5 296 4 297 6 40 43 41 2 
196 1 270 1 311 1 176 1 288 1 216 4 312 15 217 1 109 2 314 1 273 1 178 3 344 1 345 1 114 1 52 1 71 1 31 1 323 2 91 1 161 1 253 3 10 2 184 3 143 4 296 3 233 1 187 1 185 4 297 5 146 1 235 17 331 1 102 1 332 5 147 1 15 1 40 32 60 1 41 2 
196 1 176 2 288 2 216 3 312 8 109 4 314 1 178 2 344 1 67 1 345 2 246 1 114 2 52 2 71 1 323 1 253 2 10 1 184 2 143 2 296 2 233 1 187 1 185 3 297 3 235 9 102 1 332 4 40 17 41 2 
311 1 176 3 288 3 216 3 312 12 109 6 314 1 178 1 344 1 345 3 114 1 52 3 71 1 31 1 323 2 253 2 184 4 10 2 143 2 233 2 296 2 187 1 185 3 297 3 146 1 235 14 102 2 332 2 147 1 15 1 40 26 60 1 41 1 239 2 
337 1 35 1 241 1 247 1 30 1 153 1 148 1 243 1 80 1 191 1 
294 1 188 1 
329 1 167 1 337 1 241 1 30 1 79 1 148 1 80 1 191 1 
117 1 97 1 
23 1 199 1 250 1 
337 1 324 1 207 1 35 1 355 1 241 1 154 1 243 1 80 1 191 1 319 1 224 2 192 1 225 1 247 1 30 1 183 1 148 1 
337 1 324 1 207 1 35 1 355 1 241 1 154 1 243 1 80 1 191 1 319 1 224 2 192 1 225 1 247 1 30 1 183 1 148 1 
337 1 324 1 207 1 35 1 355 1 241 1 154 1 243 1 80 1 191 1 319 1 224 2 192 1 225 1 247 1 30 1 183 1 148 1 
117 1 199 1 97 1 
117 1 199 1 97 1 
23 1 250 1 
23 1 199 1 250 1 
172 1 342 1 
172 1 214 2 337 1 1 1 241 1 342 1 111 2 222 1 3 2 224 1 225 1 30 1 228 1 116 2 294 1 207 1 324 1 278 1 355 1 188 1 80 1 191 1 165 1 166 1 237 2 148 1 21 1 
22 1 171 2 214 2 24 1 176 1 288 1 312 1 109 2 313 1 177 1 290 1 111 2 88 1 29 1 132 1 3 2 345 1 52 1 202 2 204 2 206 1 162 1 142 1 13 1 144 2 235 1 210 1 105 1 40 2 107 1 283 1 
205 1 7 1 150 1 351 1 162 1 76 1 231 1 129 2 56 1 144 2 48 1 100 1 299 1 300 1 105 1 202 2 83 1 90 1 204 2 
205 1 7 1 150 1 351 1 162 1 76 1 129 2 144 1 48 1 100 1 299 1 135 1 105 1 202 1 83 1 90 1 204 1 
140 1 293 1 162 1 231 1 24 1 144 1 29 1 299 1 133 1 347 1 105 1 302 1 202 1 204 1 
205 1 7 1 150 1 351 1 162 1 76 1 231 1 129 2 144 1 48 1 100 1 299 1 300 1 105 1 202 1 83 1 90 1 204 1 
69 1 
33 1 282 1 151 1 192 1 106 1 287 1 249 1 
84 1 308 1 203 1 33 1 160 1 54 1 324 1 93 1 355 1 326 1 163 1 282 1 39 1 192 2 194 1 106 1 43 1 
85 1 84 3 173 3 309 1 216 1 86 1 271 1 315 1 322 1 53 1 54 3 324 2 143 1 185 1 326 2 144 1 96 1 57 1 282 4 192 3 236 1 194 2 105 1 17 1 24 4 64 1 29 1 201 2 202 1 203 1 204 1 160 2 33 3 352 1 162 2 355 2 296 1 297 1 209 1 260 3 39 2 302 1 43 2 
84 3 149 1 173 5 311 1 216 2 2 1 203 1 322 2 350 1 31 1 323 1 160 2 33 5 54 3 352 1 253 1 10 1 324 1 355 1 296 2 143 2 185 2 297 2 326 2 190 1 260 5 282 8 147 1 15 1 39 1 192 5 194 2 106 2 60 1 43 2 
214 1 304 1 149 1 217 1 218 1 273 1 66 1 111 1 3 1 321 1 322 2 229 1 160 1 33 2 161 1 116 1 324 1 355 1 143 1 297 2 326 1 261 1 59 1 282 2 194 1 333 1 237 1 43 1 
160 1 33 1 287 1 326 1 282 1 192 1 194 1 106 1 249 1 43 1 
33 2 84 2 173 2 54 2 149 1 296 1 143 1 185 1 297 1 216 1 260 2 282 2 192 2 322 1 
39 1 192 1 324 1 355 1 106 1 203 1 
160 1 61 1 352 1 326 1 144 1 317 1 282 1 38 1 39 1 194 1 302 1 202 1 204 1 43 1 
214 3 304 1 175 1 24 1 176 1 288 1 312 1 109 2 313 1 111 2 28 1 345 1 3 3 29 1 52 1 202 1 204 1 229 2 206 1 55 1 116 2 162 1 9 1 142 1 144 1 166 1 37 1 236 1 105 1 40 1 237 2 302 1 
84 2 33 2 160 1 173 2 54 2 352 1 326 1 260 2 331 1 282 1 192 4 194 1 106 2 43 1 350 1 
141 1 148 1 191 1 
51 1 148 1 243 1 342 1 191 1 
141 1 148 1 191 1 
141 1 148 1 191 1 
148 1 336 1 191 1 
148 1 336 1 191 1 
148 1 336 1 191 1 
148 1 191 1 
337 1 80 1 
196 1 270 1 176 1 288 1 216 1 312 5 217 1 109 2 178 2 273 1 344 1 345 1 52 1 323 1 91 1 161 1 253 2 10 1 143 1 185 1 297 2 235 6 331 1 332 2 147 1 40 11 
215 1 270 1 176 2 288 2 312 4 217 1 109 4 273 1 178 2 344 1 345 2 52 2 323 1 91 1 161 1 253 1 10 1 143 1 297 1 235 4 331 1 332 2 147 1 40 8 
270 1 215 1 311 1 176 3 288 3 216 2 312 10 217 1 109 6 273 1 178 3 344 1 345 3 52 3 31 1 323 1 91 1 161 1 253 1 10 1 296 2 143 3 185 2 297 3 235 9 331 1 332 4 147 1 15 1 40 19 60 1 41 1 239 1 
270 1 215 1 311 1 176 3 288 3 216 2 312 7 217 1 109 6 273 1 178 3 344 1 345 3 52 3 31 1 323 1 91 1 161 1 253 1 10 1 296 1 143 2 185 2 297 3 235 10 331 1 332 5 147 1 15 1 40 17 60 1 41 2 239 1 
196 1 270 1 176 1 288 1 216 1 312 5 217 1 109 2 178 2 273 1 344 1 345 1 52 1 323 1 91 1 161 1 253 2 10 1 143 1 185 1 297 2 235 6 331 1 332 2 147 1 40 11 
311 1 176 1 288 1 216 2 312 6 109 2 178 1 344 1 345 1 52 1 31 1 323 1 253 1 10 1 296 2 143 2 185 2 297 2 235 6 332 2 147 1 15 1 40 12 60 1 41 1 
270 1 215 1 311 1 176 4 288 4 216 2 312 8 217 1 109 8 273 1 178 3 344 1 345 4 52 4 31 1 323 1 91 1 161 1 253 1 10 1 296 1 143 2 185 2 297 3 235 10 331 1 332 5 147 1 15 1 40 18 60 1 41 2 239 2 
311 1 176 4 288 4 216 3 312 7 109 8 178 3 344 1 345 4 246 1 52 4 31 1 323 1 253 1 10 1 296 2 143 2 185 3 297 3 235 9 332 6 147 1 15 1 40 16 60 1 41 3 239 2 
91 1 161 3 270 2 143 1 297 1 312 4 217 1 273 3 178 3 235 3 332 6 40 7 41 3 
270 1 311 1 176 4 288 4 216 2 312 8 217 1 109 8 273 1 178 3 344 1 345 4 246 1 52 4 31 1 323 1 91 1 161 1 253 1 10 1 296 1 143 2 185 2 297 3 235 10 331 1 332 4 147 1 15 1 40 18 60 1 41 1 239 2 
91 1 161 1 270 1 143 1 297 1 176 2 288 2 312 4 217 1 109 4 178 2 273 1 235 4 331 1 332 3 345 2 40 8 52 2 41 1 239 1 
91 1 161 1 151 1 270 1 143 1 297 1 312 3 217 1 273 1 178 2 235 3 331 1 332 2 40 6 
215 1 143 1 296 1 176 1 185 1 297 1 288 1 216 1 312 2 109 2 178 1 235 2 332 2 345 1 40 4 52 1 41 1 
323 1 253 2 196 1 10 1 296 1 143 1 185 1 297 1 216 1 312 4 178 1 235 3 332 1 40 7 
196 1 307 1 270 1 176 2 216 2 288 2 312 12 217 1 109 4 273 2 178 5 345 2 52 2 158 1 91 1 161 2 253 2 10 2 296 2 143 3 297 3 185 2 235 11 331 1 332 9 40 23 41 4 82 1 239 2 
253 1 40 1 312 1 
235 1 10 1 40 1 
215 1 296 1 143 1 176 1 185 1 297 1 288 1 216 1 312 3 109 2 315 1 178 2 235 3 332 3 345 1 40 6 52 1 41 1 
311 1 176 1 288 1 216 2 312 6 109 2 178 1 344 1 345 1 52 1 31 1 323 1 253 1 10 1 296 2 143 2 185 2 297 2 235 6 332 2 147 1 15 1 40 12 60 1 41 1 
161 1 143 1 297 1 312 3 217 1 273 1 178 1 235 3 332 2 40 6 41 1 
91 1 161 1 270 1 176 1 288 1 312 2 109 2 178 1 273 1 235 1 332 2 345 1 40 3 158 1 52 1 41 1 239 1 
161 2 143 2 176 1 297 2 288 1 312 5 109 2 217 1 273 2 178 3 235 5 344 1 332 5 59 1 345 1 40 10 52 1 41 2 
176 1 185 1 297 1 288 1 109 2 235 2 344 1 332 1 345 1 40 2 52 1 41 1 
143 1 296 1 176 1 185 1 297 1 288 1 216 1 312 2 109 2 178 1 235 2 332 2 344 1 345 1 40 4 52 1 41 1 
161 1 176 3 288 3 312 2 109 6 273 1 178 1 235 1 344 1 332 2 345 3 246 1 40 3 158 1 52 3 41 1 239 1 
196 1 270 1 215 1 176 5 288 5 216 3 312 16 217 2 109 10 273 3 178 6 155 1 344 1 156 1 345 5 246 1 158 1 52 5 323 1 91 1 161 3 253 4 10 3 296 2 143 4 185 3 297 5 235 16 331 1 360 1 332 10 40 32 41 4 239 2 
166 1 214 1 111 1 3 1 180 1 358 1 349 1 
214 1 126 1 234 1 358 1 330 1 166 1 111 1 245 1 180 1 3 1 349 1 213 1 
293 1 162 1 29 1 151 1 133 1 105 1 24 1 302 1 202 1 144 1 204 1 
214 2 72 1 175 1 162 1 116 1 24 1 144 1 166 1 111 1 37 1 29 1 3 2 236 1 105 1 237 1 302 1 202 1 204 1 
214 2 175 1 24 3 218 2 316 1 111 2 221 1 3 2 29 2 182 1 202 1 204 1 72 1 116 2 162 1 144 1 258 1 120 1 166 1 37 1 361 1 236 2 105 1 237 1 
214 2 175 1 24 3 218 2 316 1 111 2 221 1 27 1 3 2 29 2 182 1 202 1 204 1 72 1 116 2 162 1 144 1 258 1 120 1 166 1 361 1 236 2 105 1 237 1 
304 1 214 1 24 1 218 1 316 1 66 1 111 1 3 1 321 1 201 1 275 1 202 1 204 1 229 1 116 1 324 1 355 1 144 1 261 1 192 1 106 1 237 1 
214 1 304 1 24 4 218 1 316 1 66 1 111 1 221 1 3 1 29 1 321 1 182 1 201 1 202 1 229 1 204 1 53 1 116 1 162 1 324 2 355 2 144 1 261 1 57 1 39 1 192 1 236 1 105 1 237 1 106 1 17 1 
101 1 162 1 105 1 202 1 144 1 204 1 
205 1 162 3 254 1 339 1 24 3 56 1 95 1 271 1 144 6 290 1 259 1 101 1 320 1 29 2 236 1 105 2 302 2 124 1 202 6 204 5 
214 2 175 1 267 1 270 1 176 2 312 3 217 1 177 1 313 2 273 1 178 2 3 2 5 1 52 2 276 1 91 1 9 1 142 2 143 1 56 1 144 1 235 3 331 1 332 2 236 1 105 1 237 1 283 1 24 1 288 2 109 4 242 1 111 1 28 1 345 2 29 1 202 1 204 1 72 1 116 1 162 1 161 1 297 1 37 1 166 2 262 1 40 6 
214 1 304 1 309 1 217 1 218 1 273 1 3 1 321 1 322 2 228 1 229 1 53 1 324 3 143 2 326 2 144 1 57 1 59 1 282 4 192 2 194 2 106 2 237 1 17 1 149 1 24 2 287 1 64 1 66 1 111 1 201 1 249 1 202 1 203 1 204 1 160 2 33 5 161 1 116 1 355 3 297 2 209 1 261 1 38 1 39 2 302 1 43 2 
85 1 162 2 24 2 271 1 144 1 36 1 101 1 29 1 236 1 105 1 17 1 202 1 204 1 
293 1 162 1 24 1 56 1 144 4 87 1 29 1 133 1 105 1 335 1 302 1 202 4 204 4 
162 2 24 1 118 1 327 1 144 2 316 1 259 1 29 1 236 1 105 1 334 1 124 1 202 2 204 2 
7 1 150 1 351 1 162 1 129 1 105 1 302 1 202 1 144 1 204 1 
205 1 162 1 24 1 56 1 144 2 290 1 132 1 29 1 105 1 202 2 204 2 
293 1 162 2 339 1 24 3 56 1 95 1 144 5 316 1 290 1 29 2 133 1 105 2 335 1 302 1 202 5 204 4 
293 1 162 2 268 1 339 1 24 3 56 1 144 5 316 1 290 1 29 2 133 1 105 2 335 1 302 1 202 5 204 4 
214 2 175 1 24 1 218 1 111 1 27 1 3 2 29 1 202 1 204 1 72 1 116 1 162 1 144 1 166 1 120 1 236 1 105 1 237 1 302 1 
162 2 24 1 271 1 144 1 259 1 316 1 320 1 29 1 236 1 105 1 124 1 202 1 204 1 
214 1 115 1 12 1 13 1 14 1 111 1 210 1 3 1 107 1 
168 1 136 1 14 1 
166 1 115 1 256 1 12 1 14 1 
214 1 305 1 304 1 218 2 66 1 111 1 26 1 131 1 3 1 321 1 136 1 229 1 228 1 116 1 115 1 324 1 355 1 256 1 12 1 14 1 258 1 261 1 168 1 361 1 192 1 237 1 106 1 
285 1 151 1 186 1 18 1 
284 1 200 1 179 1 285 1 62 1 186 1 18 1 
45 1 284 1 346 1 
284 3 285 1 62 3 356 1 186 1 280 1 99 1 179 1 200 1 348 1 18 1 137 2 
284 2 200 1 179 1 285 1 62 2 186 1 78 1 18 1 122 1 
48 1 284 1 150 1 200 1 179 1 285 1 62 1 129 1 68 1 99 1 145 1 
284 1 200 1 179 1 285 1 62 1 18 1 99 1 
284 1 200 1 179 1 62 1 186 1 18 2 99 1 
284 2 285 1 62 2 94 1 99 1 47 1 110 1 179 2 200 2 18 1 
284 3 230 1 285 2 62 3 186 1 78 2 99 1 289 1 145 1 179 1 200 1 16 1 18 1 
284 2 351 1 150 1 285 1 62 2 76 1 129 2 186 1 78 1 99 1 48 1 179 1 200 1 6 1 18 1 
284 4 353 1 230 1 285 2 62 4 186 1 78 2 99 1 145 1 179 2 200 2 18 1 122 1 
284 1 200 1 179 1 285 1 62 1 186 1 18 1 99 1 
284 4 230 1 285 3 62 4 356 1 186 2 78 2 145 1 179 1 200 1 113 1 348 1 18 2 137 1 
284 2 277 1 285 1 62 2 78 1 186 1 99 1 179 1 200 1 318 1 18 1 81 1 
284 3 285 1 62 3 356 2 186 1 99 1 179 1 200 1 248 1 348 1 18 1 137 2 
32 1 285 2 240 2 170 1 
284 1 266 1 200 1 179 1 62 1 99 1 
284 2 200 1 179 1 285 1 62 2 186 1 78 1 18 1 289 1 99 1 
264 1 
284 1 200 1 179 1 285 1 62 1 186 1 18 1 99 1 
284 3 285 1 62 3 78 1 186 1 99 1 289 1 179 1 200 1 18 1 137 1 
285 1 230 1 113 1 145 1 
285 1 18 1 

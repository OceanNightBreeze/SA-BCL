#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (31,45) 151 (74,170) (74,170) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (31,45) 151 (74,170) (74,170) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (31,45) 151 (74,170) (74,170) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (31,45) 151 (74,170) (74,170) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 88 (142,368) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 88 (142,368) (142,368) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 88 (142,368) (142,368) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 88 (142,368) (142,368) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 295 275 182 57 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 88 (142,368) (142,368) 263 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 296 113 (185,246) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 274 1 151 1 65 1 261 1 281 1 96 1 45 1 74 1 170 1 323 1 
64 1 274 1 151 1 65 1 261 1 281 1 96 1 45 1 74 1 170 1 323 1 
64 1 274 1 151 1 65 1 261 1 281 1 96 1 45 1 74 1 170 1 323 1 
64 1 274 1 151 1 65 1 261 1 281 1 96 1 45 1 74 1 170 1 323 1 
274 1 148 1 261 1 65 4 96 4 165 3 135 1 278 1 329 2 287 1 226 3 125 1 126 1 377 1 188 1 283 2 323 1 379 1 
274 1 273 1 64 1 148 1 261 1 65 2 96 2 335 1 165 1 135 1 278 1 126 1 281 1 355 1 29 1 323 1 
64 1 274 2 226 1 31 1 65 3 261 1 377 1 96 3 165 2 135 1 278 1 329 1 323 2 
274 2 64 1 148 1 31 1 261 1 65 9 96 9 165 5 135 1 278 1 329 4 123 1 287 1 226 7 125 1 126 1 377 3 46 1 103 1 283 2 188 1 79 1 379 1 323 2 
274 2 64 1 148 1 31 1 261 1 65 9 96 9 165 5 135 1 278 1 329 4 123 1 287 1 226 7 125 1 126 1 377 3 46 1 103 1 283 2 188 1 79 1 379 1 323 2 
365 1 320 1 218 1 
218 1 295 2 129 1 
347 2 130 2 10 2 87 1 40 1 196 2 107 2 155 2 
312 1 40 1 284 2 94 2 241 1 23 1 155 3 121 1 2 1 43 1 4 1 101 1 75 1 186 2 102 1 347 2 130 2 249 1 211 1 250 1 10 2 235 1 133 1 50 1 107 2 277 2 300 1 350 1 139 1 87 1 60 1 196 3 143 1 238 1 38 2 90 1 146 1 
347 1 130 1 368 1 10 1 87 1 88 1 196 1 107 1 155 1 
174 1 80 1 10 1 369 1 202 1 120 1 372 1 214 1 155 1 110 1 365 1 196 1 218 1 198 1 
347 1 80 1 130 1 10 1 369 1 107 1 202 2 372 1 214 1 155 1 110 1 365 1 196 1 218 1 198 2 
202 1 198 1 181 1 346 1 55 1 
365 1 359 1 91 1 202 2 218 1 198 2 181 1 55 1 
202 1 198 1 181 1 
347 1 368 1 130 1 10 1 107 1 202 1 155 1 55 1 87 1 88 1 142 1 196 1 198 1 
218 1 
365 1 91 1 68 1 202 2 218 1 198 2 181 1 55 1 
348 1 30 1 47 1 325 2 202 5 243 2 138 1 328 2 181 2 156 1 55 2 141 1 365 1 280 1 270 1 232 1 91 1 218 1 198 5 
40 1 320 1 
347 1 130 1 10 2 40 2 49 1 107 1 155 2 44 1 196 2 
81 1 324 1 231 1 
249 1 250 1 312 1 40 1 94 1 50 1 277 1 241 1 167 1 139 1 155 1 2 1 60 1 196 1 238 1 186 1 
81 1 347 1 249 1 250 1 312 1 10 1 94 1 50 1 107 1 277 1 241 1 139 1 155 2 2 1 319 1 60 1 238 1 196 2 186 1 187 1 
174 1 347 4 130 1 10 5 40 1 107 4 154 1 155 5 225 1 319 2 44 1 196 5 187 1 77 1 
347 1 10 1 88 1 196 1 107 1 155 1 
347 3 130 1 10 3 40 1 319 1 196 3 107 3 155 3 
347 1 10 1 88 1 196 1 107 1 155 1 
347 1 130 1 10 1 44 1 196 1 49 1 107 1 214 1 155 1 
312 1 40 1 284 2 94 1 241 1 202 1 155 4 121 1 2 1 44 1 319 1 4 1 101 1 75 1 186 1 158 1 187 1 347 3 80 1 249 1 130 2 250 1 10 3 235 1 369 1 133 1 50 1 107 3 277 1 300 1 139 1 372 1 214 1 110 1 87 1 60 1 238 1 143 1 196 4 38 1 90 1 198 1 146 1 221 1 
174 1 347 1 10 2 40 1 319 1 196 2 107 1 154 1 155 2 
347 3 80 1 130 1 10 3 369 1 107 3 202 1 327 1 214 1 372 1 155 3 110 1 44 1 319 2 196 3 218 1 198 1 187 1 221 1 
347 2 81 1 130 1 10 2 107 2 155 2 319 1 44 1 196 2 231 1 
249 1 250 1 312 1 40 1 94 1 50 1 277 1 241 1 139 1 155 1 2 1 60 1 196 1 238 1 186 1 
249 1 92 1 40 1 94 1 50 1 277 1 241 1 139 1 155 1 2 1 60 1 196 1 238 1 186 1 185 1 
81 1 324 1 235 1 284 2 166 1 300 1 121 1 38 2 4 1 90 1 231 1 100 1 75 1 145 1 184 1 321 1 146 2 
80 1 347 1 10 1 196 1 67 1 107 1 214 1 155 1 
256 1 376 1 
256 1 376 1 
255 1 360 1 
255 1 360 1 
255 1 360 1 
333 1 256 1 376 1 
256 1 376 1 104 1 
255 1 149 1 256 2 376 2 360 1 108 1 
333 1 256 1 376 1 
333 1 256 1 376 1 
256 1 376 1 153 1 
256 1 376 1 153 1 
256 1 376 1 153 1 
40 1 260 1 262 1 41 1 202 1 98 1 155 2 124 1 183 1 233 1 271 1 104 1 347 2 10 2 106 1 164 1 107 2 256 1 196 2 376 1 17 1 198 1 259 1 147 1 
149 1 48 1 93 1 262 2 117 2 164 2 69 1 202 2 299 1 301 1 256 2 376 2 183 1 218 1 198 2 271 2 248 1 147 2 259 3 
148 1 125 1 126 1 
273 1 148 1 126 1 
273 1 125 2 126 3 257 1 373 1 159 1 
273 1 125 1 126 2 16 1 373 1 159 1 
273 1 125 1 126 2 159 1 373 2 
260 1 202 5 243 1 181 1 156 2 71 1 363 1 365 1 228 1 268 1 127 1 292 1 295 2 129 1 210 2 47 1 106 1 325 1 298 1 136 1 328 1 138 1 55 4 17 1 306 1 91 1 198 5 218 2 219 1 199 1 
297 1 95 1 202 1 198 1 140 1 55 1 
202 3 243 1 155 1 71 1 156 2 363 1 365 1 228 1 127 1 292 1 295 2 129 1 210 1 347 1 130 1 368 1 47 1 10 1 325 1 107 1 298 1 136 1 328 1 55 2 141 1 87 1 88 1 142 1 196 1 17 1 306 1 218 2 198 3 219 1 
202 4 243 1 155 1 71 2 156 4 363 1 73 1 365 1 228 2 127 2 292 1 295 4 129 2 210 2 347 1 130 1 368 1 47 1 10 1 325 1 107 1 298 1 136 1 328 1 55 3 141 1 193 1 87 1 88 1 142 1 196 1 17 2 306 2 218 3 198 4 219 2 378 1 
320 1 139 1 28 1 
229 1 139 1 
322 1 
2 1 241 1 139 1 
114 1 139 1 
2 1 139 1 
2 1 241 1 139 3 272 1 28 2 220 1 
66 1 224 1 370 1 180 1 0 1 350 1 361 1 37 1 245 2 38 1 308 1 209 1 160 1 
66 1 224 1 370 1 180 1 0 1 350 1 361 1 37 1 245 2 38 1 308 1 209 1 160 1 
66 1 180 1 224 1 370 1 0 1 350 1 361 1 206 1 37 1 245 2 38 1 308 1 209 1 160 1 
175 1 66 1 284 4 152 1 180 1 224 2 336 1 0 3 337 1 361 1 71 4 121 2 228 4 245 8 127 4 4 2 184 1 321 1 209 2 26 2 7 4 160 5 235 2 82 1 212 1 370 2 350 16 37 2 195 1 38 25 90 2 20 4 308 2 146 9 240 1 
66 1 284 2 97 1 263 1 224 1 180 1 0 1 72 1 121 1 228 2 245 2 4 1 184 2 209 1 160 1 132 1 235 1 370 1 350 5 37 1 90 1 38 9 308 1 146 4 
64 1 148 1 39 1 65 2 261 1 94 1 96 2 362 1 226 1 125 1 126 2 366 1 269 1 186 1 323 1 274 1 273 1 349 1 105 1 50 1 165 1 277 1 135 1 278 1 85 1 353 1 58 1 238 1 257 1 282 1 
64 1 148 1 65 3 94 1 96 3 362 1 226 2 125 1 244 1 126 2 366 1 269 1 186 1 323 1 274 1 273 1 349 1 105 1 191 1 50 1 165 1 277 1 135 1 278 1 353 1 58 1 238 1 257 1 282 1 309 1 
64 1 148 1 65 2 94 1 96 2 226 2 244 1 125 1 126 2 366 1 269 1 186 1 273 1 349 1 105 1 191 1 50 1 165 1 277 1 135 1 278 1 353 1 58 1 238 1 257 1 
64 2 65 1 94 1 96 1 242 1 2 1 366 2 186 1 323 1 274 1 105 2 50 1 277 1 139 1 330 1 353 2 60 1 238 1 303 1 14 1 169 1 309 1 116 1 
64 1 148 1 65 1 261 1 94 1 96 1 362 1 125 1 244 1 126 2 366 1 269 1 186 1 323 1 274 1 273 1 349 1 105 1 50 1 277 1 85 1 353 1 58 1 238 1 257 1 282 1 
84 1 
94 2 202 5 243 1 204 1 203 1 155 1 156 2 2 1 288 1 340 2 207 2 341 2 292 1 295 2 47 2 10 1 50 1 252 1 214 1 54 1 12 1 110 1 112 1 60 2 14 1 218 2 115 1 174 1 357 2 176 2 119 4 120 1 181 6 122 1 365 1 186 2 129 2 80 1 275 1 325 1 369 1 277 2 138 1 328 1 139 1 372 1 137 1 330 1 192 1 86 2 238 1 196 1 331 2 91 3 198 5 
174 1 119 2 202 3 68 1 120 1 204 1 203 1 155 1 181 2 207 1 80 1 10 1 369 1 252 1 372 1 214 1 54 1 110 1 112 1 196 1 91 1 198 3 
174 1 357 1 119 3 202 3 68 1 120 1 204 1 203 1 181 1 155 1 365 1 80 1 10 1 369 1 252 1 372 1 214 1 54 1 110 1 112 1 196 1 91 1 198 3 218 1 
174 1 357 1 176 1 119 3 68 1 202 3 120 1 204 1 203 1 155 1 181 2 365 1 207 1 80 1 10 1 369 1 252 1 372 1 214 1 54 1 110 1 112 1 196 1 91 1 198 3 218 1 
202 5 243 1 203 1 204 1 155 1 156 1 340 2 207 4 341 2 344 1 47 1 10 1 252 1 214 1 54 1 110 1 302 1 111 1 112 1 218 5 174 1 357 4 176 4 314 1 119 6 68 1 120 1 181 7 365 5 182 1 129 2 80 1 275 1 369 1 325 1 372 1 138 1 328 1 137 1 86 2 196 1 331 2 91 3 198 5 
202 4 243 1 203 1 204 1 155 1 156 1 340 2 207 2 341 2 295 2 47 1 10 1 252 1 214 1 54 1 110 1 112 1 218 2 115 1 174 1 357 2 176 2 119 4 120 1 181 4 365 1 129 2 80 1 275 1 369 1 325 1 137 1 372 1 138 1 328 1 86 2 196 1 331 2 91 2 198 4 
174 1 357 2 176 2 119 4 202 4 120 1 243 1 204 1 203 1 181 4 155 1 156 1 365 1 340 2 207 2 182 1 341 2 344 1 129 2 80 1 47 1 10 1 275 1 325 1 369 1 252 1 137 1 372 1 214 1 138 1 328 1 54 1 110 1 111 1 86 2 112 1 196 1 331 2 91 2 218 1 198 4 
174 1 357 2 176 2 119 4 202 4 120 1 243 1 204 1 203 1 181 4 155 1 156 1 365 1 340 2 207 2 182 1 341 2 344 1 129 2 80 1 47 1 10 1 275 1 325 1 369 1 252 1 137 1 372 1 214 1 138 1 328 1 54 1 110 1 111 1 86 2 112 1 196 1 331 2 91 2 218 1 198 4 
174 1 119 2 202 2 120 1 243 1 204 1 203 1 155 1 156 1 182 1 341 1 367 1 295 1 80 1 47 1 10 1 275 1 325 1 369 1 252 1 372 1 214 1 138 1 328 1 54 1 110 1 194 1 112 1 57 1 196 1 331 1 305 1 198 2 
174 1 357 3 176 3 119 5 202 4 243 1 120 1 204 1 203 1 155 1 181 5 156 1 365 1 340 2 182 1 207 3 341 2 344 1 129 2 80 1 47 1 10 1 275 1 325 1 369 1 252 1 137 1 328 1 138 1 372 1 214 1 54 1 110 1 302 1 111 1 86 2 112 1 196 1 331 2 91 2 218 1 198 4 
174 1 357 3 176 3 119 5 202 4 243 1 120 1 204 1 203 1 155 1 181 5 156 1 365 1 340 2 182 1 207 3 341 2 344 1 129 2 80 1 47 1 10 1 275 1 325 1 369 1 252 1 137 1 328 1 138 1 372 1 214 1 54 1 110 1 302 1 111 1 86 2 112 1 196 1 331 2 91 2 218 1 198 4 
202 4 243 1 203 1 204 1 155 1 156 1 207 2 341 2 295 2 47 1 10 1 252 1 214 1 54 1 110 1 112 1 218 1 115 1 174 1 357 2 176 2 119 4 120 1 181 4 365 1 367 1 80 1 275 1 369 1 325 1 35 2 372 1 138 1 328 1 194 2 196 1 331 2 91 2 198 4 
235 1 66 1 284 2 166 1 180 1 0 1 300 1 121 1 37 1 245 1 4 1 90 1 75 1 320 1 209 1 
175 2 40 1 284 4 152 1 23 1 0 4 71 4 121 2 339 1 228 4 245 8 4 2 247 1 127 4 231 8 101 1 184 4 75 1 321 4 7 4 160 4 81 18 324 18 235 2 300 2 350 13 236 1 90 2 38 26 20 4 197 1 146 13 240 2 
312 1 40 1 94 1 284 2 223 1 241 1 23 1 155 2 2 1 121 1 319 1 4 1 247 1 231 1 75 1 101 1 186 1 187 1 8 1 347 1 249 1 250 1 10 1 235 1 50 1 277 1 107 1 167 1 300 1 139 1 350 1 60 1 238 1 196 2 90 1 38 2 146 1 63 1 
94 1 284 6 285 2 241 2 0 3 155 3 205 1 2 2 291 1 245 5 247 1 4 3 101 1 209 1 160 2 347 1 249 2 250 2 10 1 50 2 107 1 300 3 350 7 60 1 312 2 66 1 118 2 180 1 23 1 71 2 121 3 319 1 228 2 127 2 231 6 184 2 75 3 321 2 186 1 187 1 81 6 32 2 324 6 235 3 277 1 139 2 37 1 196 3 143 2 238 2 90 3 38 14 144 2 146 7 
39 1 284 4 94 7 241 1 286 1 155 1 2 3 157 1 244 1 290 1 4 2 101 1 102 2 347 1 10 1 50 3 107 1 166 1 300 2 350 1 254 1 60 2 14 1 62 1 258 1 179 1 23 1 121 2 265 1 319 1 75 2 186 6 78 1 128 1 235 2 277 7 139 4 330 1 238 4 196 1 38 2 90 2 146 1 
284 2 155 1 71 1 121 1 44 1 228 1 267 1 4 1 247 1 127 1 75 1 347 1 130 1 10 1 235 1 107 1 300 1 350 1 196 1 90 1 38 1 
81 1 324 1 235 1 284 2 166 1 300 1 350 2 71 1 121 1 228 1 245 1 38 2 4 1 90 1 18 1 231 1 75 1 160 1 
81 1 324 1 235 1 284 2 166 1 300 1 121 1 38 2 4 1 90 1 231 1 75 1 145 1 184 1 321 1 146 2 
81 1 324 1 235 1 284 2 166 1 300 1 350 2 71 1 121 1 228 1 245 1 38 2 4 1 90 1 127 1 231 1 75 1 160 1 
81 1 324 1 235 1 284 2 300 1 350 2 71 1 121 1 290 1 228 1 245 1 38 2 4 1 90 1 18 1 231 1 75 1 160 1 
81 1 324 1 235 1 284 2 300 1 121 1 290 1 38 2 4 1 90 1 231 1 75 1 145 1 184 1 321 1 146 2 
284 2 71 1 121 1 290 1 228 1 245 1 127 1 4 1 231 2 75 1 184 1 321 1 160 1 81 2 324 2 235 1 300 1 350 2 90 1 38 4 146 2 
284 2 71 1 121 1 228 1 245 1 127 1 4 1 231 2 75 1 184 1 321 1 160 1 81 2 324 2 235 1 300 1 350 2 38 4 90 1 146 2 
312 1 40 1 94 1 284 2 241 1 23 1 155 1 2 1 121 1 4 1 75 1 101 1 186 1 249 1 250 1 235 1 50 1 277 1 300 1 350 1 139 1 60 1 238 1 143 1 196 1 38 2 90 1 146 1 
92 1 40 1 94 1 284 2 241 1 23 1 155 1 2 1 121 1 4 1 75 1 101 1 185 1 186 1 345 1 249 1 235 1 50 1 277 1 300 1 350 1 139 1 60 1 238 1 196 1 38 2 90 1 146 1 
284 2 71 1 121 1 228 1 245 1 127 1 4 1 247 1 231 2 75 1 184 1 321 1 160 1 81 2 324 2 235 1 300 1 350 2 90 1 38 4 146 2 
312 1 39 1 94 1 284 2 118 1 241 1 155 1 71 1 2 1 121 1 228 1 245 1 4 1 127 1 231 2 184 1 75 1 321 1 186 1 160 1 81 2 249 1 250 1 324 2 235 1 50 1 277 1 300 1 350 2 139 1 238 1 143 1 196 1 38 4 90 1 146 2 
284 2 155 1 71 1 121 1 289 1 44 1 228 1 4 1 247 1 127 1 184 1 75 1 321 1 347 1 81 1 130 1 10 1 324 1 235 1 107 1 300 1 350 2 196 1 90 1 38 3 146 1 
200 1 332 1 175 2 66 1 284 6 152 2 180 1 0 3 264 1 338 1 72 1 71 7 121 3 228 7 245 10 4 3 127 7 5 1 184 2 293 1 294 1 321 2 209 1 26 1 7 4 160 7 161 4 235 3 276 1 213 1 168 1 350 25 37 1 56 1 59 1 90 3 38 39 20 4 217 1 146 14 240 2 
200 1 332 1 175 2 66 1 284 6 152 2 180 1 0 3 264 1 338 1 72 1 71 7 121 3 228 7 245 10 4 3 127 7 5 1 184 2 293 1 294 1 321 2 209 1 26 1 7 4 160 7 161 4 235 3 276 1 213 1 168 1 350 25 37 1 56 1 59 1 90 3 38 39 20 4 217 1 146 14 240 2 
200 1 332 1 175 2 66 1 284 2 152 2 180 1 0 2 264 1 338 1 72 1 71 7 121 1 228 7 245 8 4 1 127 7 5 1 184 1 293 1 321 1 209 1 7 4 160 6 161 3 235 1 276 1 213 1 168 1 350 22 37 1 56 1 59 1 90 1 38 32 20 4 217 1 146 10 240 2 
200 1 332 1 175 2 66 1 284 6 152 2 180 1 0 2 338 1 72 1 71 7 121 3 228 7 245 9 4 3 127 7 5 1 184 1 293 1 294 1 321 1 209 1 26 1 7 4 160 7 161 3 235 3 326 1 276 1 213 1 168 1 350 24 37 1 56 1 59 1 90 3 38 35 20 4 217 1 146 11 240 2 
200 1 332 1 284 2 152 2 0 1 264 1 338 1 72 1 71 2 121 1 228 2 245 1 4 1 127 2 5 1 184 1 293 1 321 1 7 2 161 2 235 1 276 1 213 2 168 1 350 9 56 2 59 1 90 1 38 16 20 2 217 1 146 7 
317 1 256 1 61 1 262 1 376 1 164 1 271 1 374 1 147 1 311 1 
41 1 104 1 
364 1 34 1 256 1 262 1 376 1 164 1 271 1 173 1 147 1 
162 1 333 1 
153 1 108 1 171 1 
149 1 48 1 93 1 262 1 117 1 164 1 69 1 202 1 299 1 301 1 256 1 183 1 376 1 218 1 198 1 271 1 147 1 259 2 
149 1 48 1 93 1 262 1 117 1 164 1 69 1 202 1 299 1 301 1 256 1 183 1 376 1 218 1 198 1 271 1 147 1 259 2 
149 1 48 1 93 1 262 1 117 1 164 1 69 1 202 1 299 1 301 1 256 1 183 1 376 1 218 1 198 1 271 1 147 1 259 2 
162 1 333 1 108 1 
162 1 333 1 108 1 
153 1 171 1 
153 1 108 1 171 1 
124 1 233 1 
40 1 93 1 260 1 262 1 117 1 41 1 202 1 98 1 155 2 124 1 233 1 271 1 104 1 347 2 10 2 106 1 164 1 107 2 55 1 89 1 256 1 196 2 376 1 17 1 198 1 147 1 259 1 
94 2 178 1 284 2 23 1 155 2 2 1 121 1 99 1 4 1 247 1 75 1 101 1 186 2 78 1 102 2 10 2 235 1 50 1 277 2 52 1 300 1 139 1 350 1 109 1 351 1 238 1 196 2 90 1 38 2 258 1 146 1 
273 1 148 1 349 1 33 1 39 1 94 2 163 1 50 1 277 2 371 1 362 1 125 1 244 1 126 2 238 1 366 1 269 1 257 1 186 2 
273 1 148 1 349 1 33 1 94 1 50 1 277 1 11 1 362 1 125 1 244 1 126 2 366 1 238 1 269 1 257 1 186 1 
22 1 94 1 50 1 277 1 371 1 139 1 330 1 2 1 60 1 238 1 366 1 14 1 169 1 186 1 
273 1 148 1 349 1 33 1 94 1 163 1 50 1 277 1 371 1 362 1 125 1 244 1 126 2 238 1 366 1 269 1 257 1 186 1 
1 1 
348 1 47 1 365 1 280 1 320 1 218 1 156 1 
202 1 243 1 181 1 156 1 365 1 340 1 295 1 129 1 47 1 325 1 137 1 328 1 138 1 86 1 91 1 218 2 198 1 
94 1 334 2 241 1 202 5 243 3 156 7 2 1 292 2 295 9 47 6 50 1 253 2 215 1 110 2 60 1 306 5 218 5 219 5 356 1 177 2 21 2 181 5 71 2 122 1 315 1 365 1 318 2 266 2 228 2 229 3 127 2 184 1 321 1 186 1 272 1 28 2 129 4 32 2 325 3 277 1 139 6 138 3 328 3 237 1 238 2 91 3 198 5 
152 1 243 1 156 4 71 2 228 2 127 2 5 1 295 4 129 2 7 1 47 2 325 1 276 1 328 1 138 1 168 1 59 1 306 3 20 1 217 1 218 2 219 3 
97 1 263 1 202 1 243 1 155 1 156 1 315 1 228 1 344 1 184 1 209 1 347 1 368 1 130 1 47 2 10 1 325 1 107 1 328 1 138 1 37 1 87 1 88 1 142 1 196 1 198 1 
348 1 47 1 325 1 243 1 138 1 328 1 156 1 365 1 280 1 218 1 
71 1 156 2 228 1 127 1 306 1 218 1 219 1 295 2 129 1 
365 1 202 1 91 1 218 1 198 1 181 1 
94 4 222 1 42 1 202 3 243 2 181 4 156 2 2 1 122 2 288 1 292 2 186 4 189 2 47 2 325 2 50 1 277 4 139 1 328 2 138 1 12 1 330 1 279 1 141 1 60 2 238 1 14 1 91 2 198 3 
312 1 40 1 284 2 94 1 241 1 155 3 121 1 2 1 4 1 101 1 75 1 186 1 347 2 130 2 249 1 250 1 10 2 235 1 133 1 50 1 277 1 107 2 300 1 139 1 87 1 60 1 196 3 143 1 238 1 38 1 90 1 146 1 
47 1 325 1 370 1 243 1 138 1 328 1 156 2 122 1 365 2 292 1 306 2 218 4 219 2 295 4 129 2 
262 1 230 1 271 1 
124 1 262 1 299 1 271 1 36 1 
262 1 230 1 271 1 
262 1 230 1 271 1 
262 1 307 1 271 1 
262 1 307 1 271 1 
262 1 307 1 271 1 
262 1 271 1 
256 1 376 1 
66 1 235 1 284 2 152 1 180 1 0 1 350 1 72 1 121 1 37 1 245 1 4 1 90 1 38 2 5 1 20 1 209 1 146 1 7 1 
175 1 284 4 152 1 0 3 72 1 71 4 121 2 227 1 228 4 245 5 4 2 127 4 5 1 184 3 321 3 7 2 160 2 235 2 276 1 168 1 350 11 59 1 38 20 90 2 20 2 217 1 146 9 240 1 
284 4 152 1 72 1 71 2 121 2 227 1 228 2 245 1 4 2 127 2 5 1 7 1 160 1 235 2 276 1 350 6 168 1 59 1 38 8 90 2 20 1 217 1 146 2 
284 4 152 1 0 1 72 1 71 2 121 2 227 1 228 2 245 1 4 2 127 2 5 1 184 1 321 1 7 1 235 2 276 1 350 6 168 1 59 1 38 10 90 2 20 1 217 1 146 4 
66 1 235 1 284 2 152 1 180 1 0 1 350 1 72 1 121 1 37 1 245 1 4 1 90 1 38 2 5 1 20 1 209 1 146 1 7 1 
235 1 284 2 152 1 276 1 168 1 350 6 71 2 72 1 121 1 59 1 228 2 245 1 127 2 4 1 90 1 38 8 5 1 20 1 217 1 146 2 7 1 160 1 
284 4 152 1 0 1 72 1 71 2 121 2 227 1 228 2 245 1 4 2 127 2 5 1 184 1 321 1 7 1 235 2 276 1 350 6 168 1 59 1 38 10 90 2 20 1 217 1 146 4 
284 6 152 1 0 1 72 1 71 2 121 3 228 2 245 3 4 3 127 2 5 1 184 1 294 1 321 1 26 1 7 1 160 2 235 3 276 1 350 7 168 1 59 1 38 11 90 3 20 1 217 1 146 4 
66 1 180 2 0 2 350 1 37 2 245 4 38 2 209 2 146 1 160 2 
284 6 152 1 0 1 72 1 71 2 121 3 228 2 245 2 4 3 127 2 5 1 184 1 294 1 321 1 26 1 7 1 160 1 235 3 276 1 350 7 168 1 59 1 38 11 90 3 20 1 217 1 146 4 
235 2 66 1 284 4 180 1 0 1 350 1 121 2 37 1 245 2 38 2 4 2 90 2 146 1 26 1 209 1 160 1 
37 1 66 1 245 1 320 1 180 1 0 1 209 1 
235 1 284 2 350 2 71 1 121 1 227 1 228 1 4 1 90 1 127 1 38 2 
175 1 152 1 350 6 71 2 228 2 245 2 38 8 127 2 20 2 146 2 7 2 240 1 160 2 
175 1 66 1 284 4 97 1 263 1 336 1 180 1 0 5 71 2 121 2 339 1 228 3 245 10 127 2 4 2 184 1 209 4 26 2 7 2 160 5 235 2 370 1 350 13 37 4 38 23 90 2 20 2 146 10 240 1 
38 1 20 1 146 1 
38 1 350 1 7 1 
32 1 350 3 71 1 228 1 245 1 38 4 127 1 146 1 160 1 
235 1 284 2 152 1 276 1 168 1 350 6 71 2 72 1 121 1 59 1 228 2 245 1 127 2 4 1 90 1 38 8 5 1 20 1 217 1 146 2 7 1 160 1 
97 1 0 1 350 3 37 1 228 1 245 2 38 6 184 1 146 3 209 1 160 1 
66 1 284 2 97 1 263 1 336 1 180 1 0 3 121 1 228 1 245 6 4 1 184 1 26 1 209 3 160 3 235 1 370 1 350 6 37 3 90 1 38 12 146 6 
97 1 263 1 0 1 350 4 37 1 228 2 245 2 38 8 184 2 209 1 146 4 160 1 
235 1 284 2 350 2 72 1 71 1 121 1 228 1 245 1 4 1 90 1 38 2 160 1 
235 1 284 2 0 1 350 2 72 1 71 1 121 1 228 1 245 2 4 1 90 1 127 1 38 4 184 1 321 1 146 2 160 1 
235 3 284 6 336 1 0 1 350 1 72 1 121 3 37 1 245 2 38 3 4 3 90 3 294 1 26 1 146 2 209 1 160 1 
175 1 66 1 284 10 152 1 97 1 180 1 336 1 337 1 0 6 72 1 71 4 121 5 227 1 228 5 245 12 4 5 127 4 184 4 294 1 321 3 209 3 26 2 7 4 160 6 235 5 82 1 212 1 350 17 37 3 90 5 38 33 20 4 146 16 240 1 
174 1 10 1 40 1 196 1 342 1 154 1 155 1 
174 1 234 1 10 1 40 1 83 1 51 1 154 1 155 1 13 1 216 1 196 1 342 1 
2 1 60 1 238 1 94 1 14 1 50 1 277 1 320 1 186 1 139 1 330 1 
347 1 249 1 10 1 312 1 40 1 94 1 50 1 107 1 277 1 241 1 139 1 155 2 2 1 319 1 60 1 238 1 196 2 186 1 
80 1 347 2 189 1 249 1 10 2 312 1 40 1 94 1 369 1 50 1 107 1 277 1 241 2 214 1 139 3 155 2 2 2 319 1 238 1 196 2 114 1 186 1 296 1 
80 1 347 2 189 1 249 1 10 2 40 1 94 2 369 1 50 1 107 1 277 2 241 2 214 1 139 3 155 2 2 2 319 1 238 1 196 2 114 1 186 2 185 1 172 1 296 1 
189 1 94 1 50 1 277 1 241 1 202 1 139 4 2 1 113 1 238 1 246 1 229 1 198 1 114 1 186 1 296 1 28 1 
189 1 21 1 94 3 50 1 277 3 241 1 202 2 139 4 181 1 110 1 2 1 365 1 60 1 238 1 229 1 218 1 198 2 114 1 186 3 172 1 296 1 28 1 
238 1 94 1 50 1 25 1 277 1 186 1 
39 1 94 6 179 1 241 1 286 1 2 2 265 1 244 1 186 5 102 1 272 1 251 1 50 2 277 6 139 3 254 1 60 2 238 3 62 1 258 1 
312 1 66 1 39 1 284 4 94 1 118 1 285 1 241 1 180 1 0 1 155 2 2 1 121 2 319 1 245 1 4 2 247 1 75 2 209 1 186 1 347 1 249 1 250 1 10 1 235 2 50 1 52 1 107 1 277 1 300 2 139 1 37 1 238 1 196 2 143 1 90 2 
177 1 21 1 94 1 222 1 202 3 243 2 181 2 156 1 365 1 318 1 229 1 186 1 28 1 348 1 47 1 325 2 277 1 253 1 328 2 138 2 139 2 55 1 110 1 60 1 280 1 91 1 218 1 198 3 
39 1 94 2 50 1 277 2 241 1 139 2 237 1 2 1 238 2 25 1 186 2 272 1 28 1 
39 1 94 4 50 1 277 4 139 1 330 1 2 1 60 1 238 1 14 1 76 1 186 4 172 1 
189 1 358 1 94 2 50 1 277 2 241 1 139 1 2 1 254 1 157 1 238 2 62 1 186 2 128 1 
273 1 148 1 126 1 60 1 238 1 94 1 269 1 50 1 277 1 186 1 
39 1 94 2 50 1 277 2 139 1 109 1 2 1 244 1 238 1 258 1 186 2 
189 1 39 1 94 5 50 2 277 5 286 1 139 3 330 1 2 2 265 1 60 1 238 2 14 1 258 1 76 1 186 4 
189 1 39 1 94 5 50 2 277 5 139 3 330 1 2 2 265 1 352 1 60 1 238 2 14 1 258 1 76 1 186 4 
347 1 249 1 10 1 40 1 94 1 50 1 107 1 277 1 241 1 139 1 155 2 2 1 319 1 60 1 238 1 196 2 186 1 185 1 
189 1 251 1 94 1 50 1 277 1 241 1 139 1 2 1 254 1 238 2 62 1 186 1 272 1 
99 1 10 1 351 1 196 1 178 1 24 1 354 1 27 1 155 1 
375 1 9 1 354 1 
40 1 24 1 19 1 27 1 354 1 
80 1 313 1 9 1 40 1 369 1 202 2 214 1 372 1 110 1 55 1 375 1 365 1 24 2 19 2 218 1 198 2 354 1 27 2 221 1 
165 1 135 1 320 1 278 1 
274 1 65 1 96 1 165 1 135 1 278 1 323 1 
64 1 105 1 65 1 
201 1 274 1 261 1 65 3 96 3 165 1 134 1 135 1 278 1 208 1 323 1 29 2 
274 1 226 1 65 2 96 2 165 1 135 1 278 1 283 1 323 1 
274 1 148 1 125 1 126 1 65 1 261 1 96 1 165 1 329 1 379 1 323 1 
274 1 65 1 261 1 96 1 165 1 278 1 323 1 
274 1 65 1 261 1 96 1 135 1 278 2 323 1 
274 2 261 1 65 2 96 2 165 1 70 1 278 1 3 1 6 1 323 2 
274 1 261 1 65 3 96 3 165 2 135 1 278 1 329 1 226 2 377 1 46 1 103 1 323 1 
273 1 274 1 148 1 261 1 65 2 96 2 165 1 135 1 53 1 278 1 226 1 125 1 126 2 257 1 323 1 
274 2 287 1 226 2 65 4 261 1 377 1 96 4 165 2 135 1 278 1 329 1 283 1 323 2 
274 1 65 1 261 1 96 1 165 1 135 1 278 1 323 1 
274 1 65 4 96 4 134 1 165 3 135 2 278 2 329 1 226 2 15 1 377 1 208 1 29 1 323 1 
274 1 261 1 65 2 190 1 96 2 165 1 135 1 278 1 226 1 343 1 79 1 323 1 
274 1 261 1 65 3 96 3 134 1 165 1 135 1 278 1 208 2 323 1 239 1 29 2 
316 2 150 1 165 2 310 1 
274 1 131 1 65 1 261 1 96 1 323 1 
274 1 226 1 65 2 261 1 96 2 165 1 135 1 46 1 278 1 323 1 
304 1 
274 1 65 1 261 1 96 1 165 1 135 1 278 1 323 1 
274 1 226 1 65 3 261 1 96 3 165 1 135 1 46 1 278 1 29 1 323 1 
15 1 377 1 165 1 329 1 
165 1 278 1 

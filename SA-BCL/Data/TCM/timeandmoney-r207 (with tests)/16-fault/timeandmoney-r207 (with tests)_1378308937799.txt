#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (47,238,314) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (47,238,314) 299 76 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (47,238,314) 299 332 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (47,238,314) (47,238,314) 82 146 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (44,325) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 319 43 (176,339) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 319 43 (30,245) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (47,238,314) 299 236 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
51 2 92 2 150 1 118 3 58 1 170 1 62 1 346 1 190 1 335 1 66 2 67 1 167 3 
260 1 261 2 161 1 162 1 201 1 285 1 92 2 73 1 118 9 5 2 335 3 9 1 167 9 51 5 54 1 53 2 150 1 15 1 58 4 170 1 62 1 346 2 190 6 241 1 65 2 66 2 67 1 172 1 
260 1 261 2 161 1 162 1 201 1 285 1 92 2 73 1 118 9 5 2 335 3 9 1 167 9 51 5 54 1 53 2 150 1 15 1 58 4 170 1 62 1 346 2 190 6 241 1 65 2 66 2 67 1 172 1 
260 1 261 2 161 1 162 1 201 1 285 1 92 2 73 1 118 10 5 2 335 4 9 1 167 10 51 6 54 1 53 2 150 1 15 1 58 5 170 1 62 1 346 2 190 7 241 1 65 2 66 2 67 1 172 1 
260 1 261 2 161 1 162 1 201 1 285 1 92 2 73 1 118 7 5 2 335 2 9 1 167 7 51 4 54 1 53 2 150 1 15 1 58 3 170 1 62 1 346 2 190 4 241 1 65 1 66 2 67 1 
261 1 51 3 201 1 92 1 53 1 150 1 73 1 118 4 58 2 5 1 62 1 190 3 335 1 65 2 66 1 67 1 172 1 167 4 
51 1 162 1 92 1 53 1 150 1 226 1 323 1 118 2 5 1 62 1 346 1 241 1 66 1 235 1 67 1 167 2 
261 1 285 1 201 1 92 2 288 1 73 1 118 9 5 1 335 3 11 1 167 9 51 5 53 1 150 1 15 1 58 4 170 1 62 1 346 1 190 7 65 2 66 2 67 1 172 1 
261 1 285 1 201 1 92 2 288 1 73 1 118 9 5 1 335 3 11 1 167 9 51 5 53 1 150 1 15 1 58 4 170 1 62 1 346 1 190 7 65 2 66 2 67 1 172 1 
273 1 274 1 297 1 14 1 108 1 96 1 208 1 222 1 47 1 22 1 133 1 185 1 113 1 341 1 
286 1 
286 1 3 1 95 1 96 1 208 1 47 2 185 1 294 1 341 1 273 1 274 1 297 1 14 1 108 1 222 2 22 1 197 1 133 1 113 1 
89 1 286 1 273 2 3 2 177 1 298 1 306 1 98 2 222 5 166 2 130 2 47 5 87 1 291 1 197 1 80 1 242 1 284 1 294 1 
286 1 37 1 294 1 
322 1 
208 2 297 2 240 1 14 2 108 2 96 2 113 2 185 1 
43 1 116 1 202 1 176 1 262 2 94 2 139 1 327 1 229 1 228 1 96 2 208 3 142 2 143 1 329 1 248 1 290 1 28 1 337 1 338 1 185 1 271 2 52 1 297 2 276 1 14 2 108 3 279 1 171 1 60 1 20 1 240 1 283 1 304 1 113 2 225 2 199 1 
208 1 274 1 297 1 22 1 14 1 108 1 96 1 113 1 185 1 341 1 
208 1 123 1 22 1 292 1 314 1 33 1 108 1 96 1 238 1 
208 1 297 1 123 1 22 1 14 1 33 1 108 1 96 1 113 1 238 1 
110 1 273 1 222 1 3 1 47 1 
286 1 273 1 222 2 3 1 47 2 197 1 119 1 294 1 
222 1 3 1 47 1 
297 1 14 1 108 2 96 2 208 2 111 1 240 2 10 1 113 1 
295 1 44 1 320 1 
38 1 240 1 22 1 57 1 
37 1 240 1 
43 1 176 1 320 1 297 1 94 1 229 1 108 2 228 1 96 1 154 1 208 2 279 1 60 1 290 1 28 1 194 1 337 1 113 1 225 1 271 1 
208 3 297 3 240 1 14 1 108 3 96 3 113 3 154 1 
208 1 274 1 297 1 22 1 108 1 96 1 113 1 
208 1 111 1 297 1 22 1 14 1 10 1 108 1 96 1 113 1 
297 2 123 1 14 1 108 2 76 1 299 1 96 2 154 1 238 1 208 2 194 1 22 1 10 1 33 1 113 2 
208 2 99 1 297 1 240 1 292 1 108 2 96 2 113 1 154 1 
208 1 332 1 297 1 123 1 194 1 22 1 33 1 299 1 108 1 96 1 113 1 238 1 154 1 
208 2 44 1 320 1 297 2 14 1 10 1 108 2 96 2 113 2 154 1 
43 1 176 1 94 1 108 1 228 1 229 1 208 1 279 1 60 1 28 1 290 1 240 1 337 1 225 1 271 1 
43 1 94 1 127 1 108 1 229 1 245 1 208 1 279 1 60 1 28 1 290 1 240 1 337 1 225 1 271 1 
116 2 262 2 320 2 325 1 263 1 181 1 140 1 142 4 44 2 329 1 248 2 334 1 338 1 340 1 295 2 296 1 52 1 107 1 276 1 256 1 302 1 345 1 20 1 283 1 
208 1 297 1 117 1 123 1 22 1 108 1 96 1 113 1 
114 1 297 4 14 1 108 5 96 5 154 2 208 5 99 1 156 1 240 1 194 1 292 1 10 1 113 4 
208 2 274 1 117 1 297 2 22 1 108 2 96 2 113 2 
267 1 218 2 109 1 186 1 321 1 74 2 
218 1 64 1 74 1 
218 1 74 1 
218 1 74 1 
109 1 321 1 
109 1 321 1 
109 1 321 1 
218 1 74 1 85 1 
218 1 74 1 85 1 
218 1 74 1 85 1 
218 1 310 1 74 1 
218 1 310 1 74 1 
218 1 310 1 74 1 
286 1 148 1 136 1 74 2 278 1 75 2 153 2 267 1 218 2 188 1 183 2 300 2 330 1 331 1 222 2 249 3 47 2 39 2 200 1 
74 1 289 1 96 2 208 2 328 1 183 1 249 1 47 1 313 1 297 2 108 2 153 1 218 1 188 1 17 1 300 1 222 1 129 1 240 1 64 1 39 1 196 1 132 1 113 2 
261 1 305 2 5 2 226 1 303 1 
5 1 261 1 53 1 
5 1 53 1 226 1 
305 1 261 2 5 3 226 1 112 1 303 1 
305 1 261 1 5 2 226 1 303 1 180 1 
89 3 286 3 93 1 3 1 322 4 120 2 306 2 96 1 140 1 208 1 98 1 166 1 269 1 100 1 333 1 334 1 47 5 291 1 185 1 294 1 341 1 103 2 296 1 273 4 274 1 312 1 107 1 297 1 83 2 14 1 108 1 61 1 222 5 130 1 21 2 22 1 197 1 132 1 133 1 113 1 
89 3 175 2 286 3 3 3 322 4 120 2 306 2 96 1 140 1 208 1 98 1 166 1 100 1 333 1 334 1 47 5 291 1 293 1 185 1 294 1 341 1 103 2 296 1 273 4 312 1 274 1 107 1 297 1 253 1 83 2 14 1 108 1 61 1 110 2 222 5 130 1 22 1 197 1 132 1 133 1 113 1 
89 3 286 3 93 1 322 4 177 1 306 2 120 2 96 1 140 1 208 1 98 1 269 1 166 1 333 1 100 1 334 1 47 3 185 1 341 1 294 1 103 2 296 1 273 2 274 1 107 1 297 1 83 2 14 1 108 1 61 1 222 3 130 1 21 1 22 1 133 1 132 1 113 1 
89 3 286 2 93 1 322 4 177 1 120 2 306 2 140 1 98 1 166 1 269 1 333 1 100 1 334 1 47 2 103 2 296 1 273 1 107 1 83 2 61 1 222 2 130 1 21 1 224 1 132 1 
151 1 
37 1 184 1 229 1 
46 1 229 1 
290 1 229 1 
290 1 138 1 8 1 184 2 337 1 229 3 
290 1 337 1 229 1 
266 1 229 1 
23 1 116 4 107 1 275 1 263 3 326 2 207 1 140 1 256 2 189 1 182 1 142 7 248 3 282 1 233 1 336 1 198 1 174 1 
23 1 244 1 116 3 262 2 179 1 326 1 263 2 142 6 182 1 248 3 233 2 336 1 49 1 101 1 52 1 275 1 276 1 217 1 256 1 63 1 20 1 282 1 157 1 283 1 
23 1 116 5 262 4 326 2 263 4 207 1 140 1 142 9 182 1 248 4 233 1 336 1 311 1 52 2 107 1 276 2 217 1 256 3 189 1 223 1 20 2 282 1 283 2 198 1 
23 1 116 4 107 1 275 1 263 3 326 2 207 1 140 1 256 2 189 1 182 1 142 7 248 3 282 1 233 1 336 1 198 1 
23 1 116 4 107 1 275 1 263 3 326 2 207 1 140 1 256 2 189 1 182 1 142 7 248 3 282 1 233 1 336 1 198 1 
272 2 252 1 12 1 287 1 92 1 324 1 168 1 94 1 118 1 229 1 279 1 60 1 209 1 165 2 290 1 28 1 19 1 346 2 270 2 66 1 225 1 167 1 271 1 
261 1 92 1 203 1 226 1 94 1 118 1 5 2 165 1 270 1 121 1 78 1 271 1 167 1 272 1 81 1 53 1 237 1 169 1 279 1 60 1 62 1 346 1 112 1 66 1 131 1 225 1 
261 1 92 1 203 1 226 1 94 1 118 2 5 2 165 1 270 1 121 1 78 1 271 1 167 2 272 1 81 1 51 1 53 1 150 1 237 1 279 1 60 1 62 1 190 1 346 1 112 1 66 1 131 1 67 1 225 1 88 1 
261 1 92 1 287 1 203 1 226 1 94 1 118 3 5 2 165 1 270 1 121 1 78 1 271 1 167 3 272 1 51 1 53 1 150 1 237 1 169 1 279 1 60 1 346 1 190 2 112 1 66 1 131 1 67 1 225 1 40 1 
261 1 226 1 94 1 118 2 5 2 165 1 270 1 78 1 271 1 167 2 272 1 51 1 53 1 150 1 237 1 169 1 279 1 60 1 346 1 190 2 112 1 131 1 67 1 225 1 40 1 
220 1 
89 1 135 1 3 2 324 1 94 2 229 1 306 1 96 1 208 1 98 1 28 2 290 1 166 1 145 1 100 1 146 1 47 2 292 1 291 1 147 1 33 1 271 2 82 1 104 1 123 1 314 1 108 1 238 1 279 1 60 1 222 2 130 1 19 1 195 1 22 1 197 1 225 2 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 3 1 123 1 314 1 108 1 95 1 96 1 238 1 208 1 222 2 146 1 47 2 22 1 292 1 197 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 98 1 222 1 166 1 130 1 146 1 47 1 22 1 292 1 291 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 222 1 146 1 47 1 22 1 292 1 147 1 33 1 
104 1 82 1 123 1 314 1 108 1 96 1 238 1 208 1 98 1 222 1 166 1 130 1 146 1 47 1 22 1 292 1 291 1 147 1 33 1 
160 1 116 1 262 4 324 1 206 1 94 7 139 1 229 3 96 1 208 1 45 1 142 2 143 1 329 2 28 2 248 1 290 2 340 1 338 2 271 8 52 2 106 1 297 1 255 1 254 1 276 2 56 1 108 1 154 1 169 1 279 2 60 2 20 2 19 1 283 2 304 2 88 1 113 1 225 8 
72 1 116 1 318 1 262 2 320 1 263 1 96 1 140 1 208 1 44 1 142 3 329 1 248 2 334 1 10 1 338 1 295 1 296 1 52 1 107 1 297 1 276 1 14 1 108 1 256 1 61 1 20 1 283 1 113 1 
116 3 262 2 320 1 263 2 326 1 207 1 140 1 44 1 182 1 142 6 329 1 248 3 336 1 338 1 340 1 295 1 52 1 107 1 276 1 256 2 189 1 37 1 20 1 240 2 283 1 198 1 
72 1 244 4 116 13 262 4 320 16 139 1 263 4 265 1 140 2 143 1 142 22 44 6 329 2 248 9 334 2 338 1 101 4 295 16 251 2 296 4 149 1 52 2 107 4 276 2 256 2 61 4 301 2 221 1 63 1 20 2 240 1 282 2 283 2 
42 1 72 1 116 1 262 2 139 1 96 1 208 1 44 1 143 1 142 2 329 1 248 1 338 1 52 1 297 1 276 1 108 1 154 1 38 1 20 1 240 1 194 1 283 1 159 1 113 1 173 1 
43 2 176 2 262 6 94 3 139 1 263 8 228 2 229 2 96 1 140 3 182 1 143 1 142 20 44 7 6 2 48 2 271 3 52 3 107 3 276 3 108 3 154 1 279 2 59 2 189 1 60 2 61 2 18 1 20 3 240 2 282 4 194 1 283 3 198 1 113 1 72 1 116 10 320 7 326 1 207 1 208 3 247 2 329 3 248 10 28 1 290 2 334 2 336 1 337 2 338 3 295 7 296 2 297 1 256 4 169 1 171 2 347 1 259 1 225 3 
295 1 296 1 116 2 52 1 262 2 107 1 320 1 276 1 263 1 44 1 142 2 329 1 345 1 20 1 282 1 283 1 340 1 338 1 
295 1 52 1 262 2 320 1 276 1 263 1 256 1 140 1 44 1 142 2 329 1 302 1 248 2 20 1 334 1 283 1 340 1 338 1 
116 2 262 2 320 2 263 2 140 1 142 4 44 2 329 1 248 2 334 1 338 1 340 1 295 2 296 1 52 1 107 1 276 1 256 1 61 1 20 1 282 1 283 1 
160 1 295 1 296 1 116 2 52 1 262 2 107 1 320 1 276 1 263 1 44 1 142 2 329 1 345 1 20 1 282 1 283 1 338 1 
160 1 295 1 52 1 262 2 320 1 276 1 140 1 44 1 142 2 329 1 302 1 248 2 20 1 334 1 283 1 338 1 
160 1 295 2 296 1 116 2 52 1 262 2 107 1 320 2 276 1 140 1 44 2 142 4 61 1 329 1 248 2 20 1 334 1 283 1 338 1 
295 2 296 1 116 2 52 1 262 2 107 1 320 2 276 1 263 2 256 1 140 1 44 2 142 4 61 1 329 1 248 2 20 1 334 1 282 1 283 1 338 1 
43 1 116 1 176 1 262 2 94 1 139 1 228 1 229 1 208 1 142 2 143 1 329 1 290 1 28 1 248 1 337 1 338 1 271 1 52 1 276 1 108 1 279 1 60 1 171 1 20 1 240 1 283 1 225 1 
43 1 116 1 262 2 94 1 139 1 229 1 245 1 208 1 142 2 143 1 329 1 290 1 28 1 248 1 337 1 338 1 271 1 52 1 276 1 127 1 108 1 279 1 155 1 60 1 20 1 240 1 283 1 225 1 
72 1 116 2 262 2 320 2 263 2 140 1 142 4 44 2 329 1 248 2 334 1 338 1 295 2 296 1 52 1 107 1 276 1 256 1 61 1 20 1 282 1 283 1 
43 1 116 2 176 1 262 2 320 2 94 1 263 2 228 1 229 1 140 1 208 1 44 2 142 4 329 1 248 2 290 1 334 1 337 1 48 1 338 1 271 1 295 2 296 1 52 1 107 1 276 1 108 1 256 1 279 1 60 1 171 1 61 1 20 1 282 1 283 1 225 1 88 1 
72 1 116 2 262 2 320 1 263 1 96 1 140 1 208 1 142 3 44 1 329 1 248 1 334 1 10 1 338 1 295 1 296 1 105 1 52 1 107 1 297 1 276 1 14 1 108 1 61 1 20 1 282 1 283 1 113 1 
0 1 317 1 244 2 116 17 262 8 137 1 326 1 263 7 207 1 77 1 140 4 182 1 142 33 248 16 210 1 334 3 336 1 311 1 211 1 50 1 101 2 296 3 52 4 107 4 122 1 276 4 152 3 217 2 342 1 256 4 187 1 189 1 61 3 63 2 20 4 282 3 193 1 283 4 68 1 198 1 41 1 
0 1 244 4 116 24 262 6 137 1 263 10 77 1 140 6 142 46 248 22 210 1 334 6 211 1 311 1 50 2 101 4 251 2 296 7 52 3 107 7 122 1 215 1 152 4 276 3 217 2 342 1 256 6 187 1 61 7 301 2 20 3 63 2 282 4 193 1 283 3 41 2 
0 1 244 2 116 17 262 8 137 1 326 1 263 7 207 1 77 1 140 4 182 1 142 33 248 16 210 1 334 3 336 1 311 1 211 1 50 1 101 2 296 3 52 4 107 4 122 1 215 1 276 4 152 3 217 2 342 1 256 4 187 1 189 1 61 3 63 2 20 4 282 3 193 1 283 4 68 1 198 1 41 1 
0 1 244 2 116 18 262 8 137 1 326 1 263 7 207 1 77 1 140 4 182 1 142 35 248 17 210 1 334 3 336 1 311 1 211 1 50 1 101 2 296 3 52 4 107 4 122 1 215 1 276 4 152 4 217 2 342 1 256 4 187 1 189 1 61 3 63 2 20 4 282 3 193 1 283 4 68 1 198 1 41 1 
0 1 244 3 116 22 262 6 137 1 326 1 263 9 207 1 77 1 140 5 182 1 142 42 248 20 210 1 334 4 336 1 211 1 311 1 50 1 101 3 251 1 296 5 52 3 107 6 122 1 215 1 152 4 276 3 217 2 342 1 256 6 187 1 189 1 61 5 301 1 63 2 20 3 282 3 193 1 283 3 198 1 41 1 
72 1 116 1 262 2 94 2 139 1 229 1 307 1 96 2 230 1 208 2 142 2 143 1 97 1 329 1 290 1 248 1 338 1 271 2 52 1 254 1 276 1 216 1 126 1 56 1 108 2 279 1 60 1 20 1 283 1 304 2 225 2 
272 1 24 1 205 1 324 1 94 1 229 1 279 1 60 1 209 1 290 1 28 1 19 1 225 1 271 1 
272 1 261 1 53 1 203 1 226 1 205 1 94 1 237 1 169 1 5 2 279 1 343 1 60 1 112 1 78 1 225 1 271 1 134 1 
272 1 261 1 53 1 203 1 226 1 205 1 94 2 237 1 169 1 5 2 279 1 343 1 60 1 112 1 78 1 225 2 88 1 271 2 134 1 
272 1 261 1 53 1 203 1 226 1 94 1 237 1 169 1 5 2 219 1 279 1 343 1 60 1 112 1 78 1 225 1 271 1 
250 1 
89 1 286 1 298 1 306 1 98 1 166 1 130 1 291 1 284 1 294 1 
103 2 89 2 296 1 286 2 107 1 322 4 83 2 306 2 120 2 140 1 61 1 334 1 
286 1 222 1 3 1 47 1 197 1 294 1 
89 2 135 1 115 1 3 4 4 1 324 1 177 1 94 4 229 1 306 2 98 2 290 1 28 2 145 1 166 2 100 2 47 3 291 1 271 4 279 1 60 1 222 3 130 2 19 1 191 2 195 2 258 1 197 2 225 4 
89 1 286 1 37 1 298 1 306 1 284 1 294 1 
89 1 98 1 130 1 166 1 204 1 316 1 291 1 306 1 
89 8 91 2 3 5 138 1 94 1 229 6 306 7 140 2 46 3 98 3 6 2 100 2 47 5 184 2 271 1 103 6 107 2 16 1 279 2 60 1 61 2 195 1 197 3 243 1 286 7 322 12 120 6 246 2 290 1 28 1 166 3 334 2 337 1 291 3 339 2 294 1 212 2 213 1 296 2 124 2 83 6 35 2 222 5 130 3 225 1 
89 5 306 3 96 1 140 1 98 1 100 1 185 1 101 2 103 3 274 1 107 1 55 1 277 1 14 1 108 1 61 1 280 1 63 1 195 1 22 1 113 1 244 1 286 4 322 6 120 4 208 1 166 1 334 1 291 1 294 1 341 1 251 1 296 1 122 1 297 1 83 4 130 1 133 1 
89 2 306 2 96 1 140 1 208 1 182 1 98 1 166 1 336 1 234 1 7 1 47 1 291 1 185 1 341 1 274 1 107 2 297 1 277 1 14 1 108 1 189 1 280 2 222 1 130 1 22 1 133 1 113 1 
43 1 176 1 262 2 94 1 228 1 229 1 96 2 208 3 142 1 143 1 329 1 248 1 28 1 290 1 337 1 338 1 185 1 271 1 52 1 297 2 276 1 14 2 108 3 279 1 171 1 60 1 20 1 240 1 283 1 225 1 113 2 199 1 
103 2 89 1 286 4 322 4 83 2 326 1 120 2 306 2 98 1 166 1 130 1 100 1 195 1 291 1 294 2 
183 1 330 1 129 1 26 1 39 1 
183 1 86 1 39 1 
183 1 86 1 39 1 
183 1 86 1 39 1 
183 1 39 1 264 1 
183 1 39 1 264 1 
183 1 39 1 264 1 
183 1 39 1 
218 1 74 1 
116 5 52 1 262 2 107 2 276 1 263 5 256 3 140 2 182 2 142 10 189 1 248 5 20 1 282 2 234 1 336 2 311 1 283 1 
296 1 116 2 52 1 262 2 107 1 276 1 263 1 142 2 20 1 282 1 311 1 283 1 
296 1 116 2 52 1 262 2 107 1 276 1 263 2 256 1 140 1 142 4 61 1 248 2 20 1 334 1 282 1 311 1 283 1 
116 1 52 3 262 6 276 3 217 1 263 2 256 1 142 3 182 1 248 2 20 3 282 1 336 1 311 1 283 3 68 1 49 1 
244 1 116 7 262 8 263 6 179 1 207 1 140 2 142 15 182 2 248 8 234 1 336 2 311 1 49 1 101 1 52 4 107 2 276 4 217 1 256 3 189 1 315 1 63 1 20 4 282 3 283 4 68 1 198 1 
116 4 52 2 107 1 262 4 276 2 217 1 326 1 263 3 207 1 140 1 256 2 189 1 142 8 182 1 248 4 20 2 282 1 336 1 283 2 198 1 
116 3 107 1 326 1 263 2 207 1 256 2 140 1 182 1 189 1 142 6 248 3 37 1 336 1 198 1 
296 1 116 2 52 1 262 2 107 1 276 1 263 1 256 1 140 1 142 4 315 1 61 1 248 2 20 1 334 1 283 1 
244 2 251 1 116 6 296 2 107 2 263 3 256 2 140 2 142 12 61 2 301 1 248 6 63 1 282 1 334 2 101 2 
244 2 116 14 262 4 326 1 263 12 207 1 140 4 182 4 142 30 248 16 334 2 234 1 336 4 49 1 101 2 251 1 296 2 52 2 107 4 276 2 217 2 256 7 189 2 61 2 221 1 301 1 20 2 282 5 283 2 198 1 
142 1 248 1 101 1 
142 1 244 1 116 1 
296 1 116 3 52 1 262 2 107 1 276 1 263 3 140 1 256 1 142 6 315 1 61 1 248 3 6 1 20 1 282 2 334 1 283 1 
244 2 116 11 262 2 137 1 263 4 140 4 142 22 248 11 334 4 211 1 311 1 101 2 251 1 296 4 52 1 107 4 122 1 276 1 256 2 187 1 61 4 301 1 63 1 20 1 282 2 193 1 283 1 
116 3 107 1 263 2 140 1 256 1 189 1 142 6 182 1 248 3 282 1 336 1 
116 1 52 1 262 2 276 1 217 1 263 2 207 1 256 1 182 1 142 3 248 2 20 1 282 1 336 1 283 1 49 1 198 1 
244 1 116 14 262 4 137 1 326 1 263 8 207 1 140 4 182 2 142 24 248 10 334 1 234 1 336 2 311 1 211 1 101 1 296 2 52 2 107 5 122 1 276 2 217 1 256 4 187 1 189 2 61 2 63 1 20 2 282 4 193 1 283 2 198 1 
244 1 116 10 262 6 137 1 326 1 263 3 207 1 140 2 182 1 142 17 248 7 334 1 336 1 311 1 211 1 101 1 296 2 52 3 107 3 122 1 276 3 217 1 256 2 187 1 189 1 315 1 61 2 63 1 20 3 282 1 193 1 283 3 198 1 
244 2 116 14 262 6 137 1 326 1 263 8 207 1 140 5 182 1 142 29 248 15 334 4 336 1 211 1 311 1 101 2 251 1 296 4 52 3 107 5 122 1 276 3 217 1 256 6 187 1 189 1 315 1 61 4 301 1 63 1 20 3 282 2 193 1 283 3 198 1 
244 2 116 15 262 6 137 1 326 1 263 7 207 1 140 4 182 1 142 27 248 12 334 3 336 1 211 1 311 1 101 2 251 1 296 4 52 3 107 5 122 1 276 3 217 1 256 4 187 1 189 1 315 1 61 4 301 1 63 1 20 3 282 3 193 1 283 3 198 1 
244 1 116 14 262 4 137 1 326 1 263 8 207 1 140 4 182 2 142 24 248 10 334 1 234 1 336 2 311 1 211 1 101 1 296 2 52 2 107 5 122 1 276 2 217 1 256 4 187 1 189 2 61 2 63 1 20 2 282 4 193 1 283 2 198 1 
244 2 116 11 262 2 137 1 263 5 140 4 142 22 248 11 334 4 211 1 311 1 101 2 251 1 296 4 52 1 107 4 122 1 276 1 256 3 187 1 61 4 301 1 63 1 20 1 282 2 193 1 283 1 
244 2 116 15 262 8 137 1 326 1 263 8 207 1 140 4 182 1 142 28 248 13 334 3 336 1 211 1 311 1 101 2 251 1 296 4 52 4 107 5 122 1 276 4 217 2 256 5 187 1 189 1 315 1 61 4 301 1 63 1 20 4 282 3 193 1 283 4 198 1 
244 2 116 6 262 4 263 1 140 1 142 10 248 4 334 1 311 1 101 2 251 1 296 2 52 2 107 2 122 1 276 2 61 2 301 1 63 1 20 2 282 1 283 2 68 1 
116 3 107 1 263 6 207 1 140 1 256 3 142 7 182 3 189 1 248 4 282 3 336 3 198 2 
244 2 116 6 262 4 263 2 140 1 142 10 248 4 334 1 311 1 101 2 251 1 296 2 52 2 107 2 122 1 276 2 256 1 61 2 301 1 63 1 20 2 282 1 283 2 68 1 
208 1 99 1 240 1 292 1 79 1 108 1 96 1 
71 1 25 1 2 1 13 1 178 1 108 1 96 1 208 1 99 1 240 1 79 1 292 1 
324 1 94 4 229 1 279 1 144 1 60 1 28 1 290 1 19 1 32 1 225 4 88 1 271 4 
94 2 84 1 229 1 268 1 279 2 239 1 60 1 290 1 191 1 192 1 337 1 259 1 225 2 271 2 
5 1 279 1 60 1 28 1 53 1 226 1 78 1 94 1 225 1 271 1 
254 1 94 2 229 1 169 1 230 1 279 1 60 1 290 1 88 1 225 2 271 2 
254 1 255 1 324 1 94 4 206 1 229 3 279 2 60 2 28 1 290 2 19 1 191 1 32 1 225 5 88 1 271 5 
254 1 255 1 324 1 94 4 229 3 279 2 60 2 28 1 290 2 19 1 191 1 32 1 225 5 88 1 271 5 69 1 
279 1 60 1 290 1 37 1 28 1 19 1 324 1 94 1 229 1 225 1 271 1 
43 1 176 1 297 1 94 1 229 1 108 2 96 1 154 1 208 2 279 1 60 1 290 1 28 1 240 1 337 1 113 1 225 1 271 1 
43 1 319 1 176 1 297 1 123 1 94 1 229 3 108 1 96 1 154 1 266 1 208 1 279 1 60 1 290 2 191 1 22 1 337 2 33 1 113 1 225 1 271 1 
43 1 319 1 297 1 123 1 94 1 229 3 108 1 96 1 245 1 154 1 266 1 208 1 279 1 60 1 290 2 191 1 22 1 337 2 33 1 113 1 225 1 271 1 
90 1 319 1 286 1 3 1 94 3 229 4 266 1 144 1 46 1 290 1 28 1 30 1 47 2 184 1 337 1 271 3 294 1 124 1 279 1 60 1 222 2 191 1 225 3 
286 1 319 1 3 1 124 1 94 3 229 4 266 1 279 1 144 1 46 1 60 1 28 1 290 1 222 2 191 1 47 2 337 1 184 1 339 1 225 3 294 1 271 3 
279 1 45 1 60 1 94 1 225 1 271 1 
227 1 138 1 94 6 206 1 229 3 268 1 45 1 290 2 28 2 337 1 271 7 106 1 254 1 255 1 169 1 279 3 60 2 239 1 304 1 225 7 88 1 
43 1 176 1 262 4 94 1 263 2 228 1 229 1 96 1 307 1 140 1 44 1 182 1 142 6 48 1 271 1 52 2 107 1 276 2 108 2 154 1 279 1 189 1 60 1 20 2 240 2 283 2 113 1 198 1 72 1 116 3 320 1 326 1 207 1 208 2 247 1 329 2 290 1 248 3 336 1 337 1 338 2 295 1 297 1 256 2 171 1 225 1 88 1 
89 1 115 1 286 1 3 2 94 1 306 1 229 2 246 1 46 1 98 2 28 1 166 2 47 3 291 2 184 1 339 1 294 1 271 1 212 1 273 1 124 1 298 1 35 1 222 3 130 2 197 1 284 1 225 1 
243 1 151 1 138 1 94 1 229 2 279 2 45 1 60 1 290 1 184 1 337 1 225 1 271 1 
43 1 297 1 94 1 229 1 108 2 96 1 245 1 154 1 208 2 279 1 60 1 290 1 28 1 240 1 337 1 113 1 225 1 271 1 
227 1 138 1 94 1 229 1 268 1 279 2 239 1 60 1 290 1 191 1 337 1 225 1 271 1 
70 1 240 1 27 1 125 1 164 1 
70 1 273 1 123 1 27 1 236 1 125 1 164 1 163 1 299 1 238 1 222 1 47 1 22 1 158 1 33 1 
208 1 70 1 97 1 216 1 125 1 126 1 164 1 108 1 96 1 
236 1 163 1 164 1 
51 1 92 1 62 1 150 1 66 1 67 1 118 1 167 1 
51 3 1 1 92 1 150 2 118 4 58 1 257 1 190 2 241 1 335 1 66 1 31 1 67 2 167 4 
51 1 92 1 150 1 118 2 141 1 281 1 62 1 190 1 66 1 67 1 11 1 167 2 
51 1 1 2 214 1 92 1 62 1 150 1 241 2 66 1 31 1 67 1 118 3 167 3 
36 1 51 2 128 1 34 2 
231 1 92 1 62 1 66 1 118 1 167 1 
51 1 285 1 92 1 62 1 150 1 190 1 66 1 67 1 118 2 167 2 
344 1 
51 1 92 1 62 1 150 1 66 1 67 1 118 1 167 1 
51 1 37 1 150 1 67 1 
51 1 92 1 150 1 66 1 67 1 118 1 167 1 
165 1 346 1 118 1 
102 1 51 1 1 1 92 1 150 1 118 3 62 1 241 2 66 1 31 1 67 1 167 3 
51 1 92 1 150 1 190 1 65 1 66 1 67 1 118 2 167 2 
261 1 51 1 201 1 92 1 53 1 118 1 58 1 5 1 62 1 66 1 167 1 
51 1 92 1 62 1 66 1 67 1 118 1 167 1 
92 1 62 1 150 1 66 1 67 2 118 1 167 1 
51 1 92 2 118 2 308 1 309 1 62 1 29 1 66 2 67 1 167 2 
51 2 285 1 92 1 150 1 118 3 15 1 58 1 62 1 190 2 335 1 66 1 67 1 167 3 
261 1 51 1 92 1 53 1 150 1 226 1 118 2 5 2 232 1 62 1 190 1 112 1 66 1 67 1 167 2 
51 2 92 2 150 1 118 4 58 1 62 1 190 2 335 1 65 1 66 2 67 1 172 1 167 4 
51 1 285 1 92 1 150 1 118 3 62 1 190 1 241 1 66 1 67 1 167 3 
257 1 51 1 335 1 58 1 
51 1 67 1 

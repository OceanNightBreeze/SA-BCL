#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 43 (38,239) (38,239) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 43 (38,239) (38,239) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 43 (38,239) (38,239) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (238,339) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (64,170) (88,206) (88,206) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 184 336 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (173,232) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (238,339) 360 313 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (64,170) (64,170) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 184 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (64,170) (88,206) (88,206) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (64,170) (88,206) (88,206) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (64,170) (88,206) (88,206) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 337 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 337 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 184 336 168 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 66 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 337 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (238,339) 360 78 (10,194) (10,194) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 231 327 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 1 40 1 82 3 137 1 43 1 85 2 48 7 229 2 89 3 335 1 144 1 239 1 199 1 293 2 264 2 13 7 76 1 321 2 268 4 325 2 14 2 16 1 58 1 274 1 247 1 
38 1 239 1 82 3 40 1 199 1 137 1 43 1 293 2 264 2 85 2 48 7 229 2 13 7 76 1 321 2 268 4 89 3 335 1 14 2 325 2 16 1 58 1 274 1 144 1 247 1 
38 1 239 1 82 3 40 1 199 1 137 1 43 1 293 2 264 2 85 2 48 7 229 2 13 7 76 1 321 2 268 4 89 3 335 1 14 2 325 2 16 1 58 1 274 1 144 1 247 1 
109 1 38 1 40 1 82 3 137 1 43 1 85 2 48 7 229 2 89 4 335 1 166 1 144 1 239 1 199 1 293 2 264 2 13 7 76 1 321 2 268 4 325 2 14 2 16 1 58 1 274 1 247 1 
109 1 40 1 82 2 199 2 293 1 43 1 264 1 48 4 229 1 13 4 321 1 268 3 89 3 14 1 325 1 174 1 166 1 144 1 
109 1 40 1 352 1 293 1 264 1 85 1 163 1 48 2 13 2 229 1 89 1 335 1 325 1 166 1 58 1 319 1 
109 1 40 1 82 1 264 2 85 1 48 3 13 3 76 1 89 2 268 1 325 2 14 1 166 1 
109 1 40 1 82 4 199 2 293 1 43 1 264 2 85 1 48 9 229 1 13 9 76 1 321 1 89 5 268 7 325 2 14 3 174 1 166 1 132 1 274 1 144 1 93 1 247 1 
109 1 40 1 82 4 199 2 293 1 43 1 264 2 85 1 48 9 229 1 13 9 76 1 321 1 89 5 268 7 325 2 14 3 174 1 166 1 132 1 274 1 144 1 93 1 247 1 
180 1 186 1 223 1 
0 1 187 2 223 1 
54 1 179 2 243 2 157 2 86 1 150 2 117 2 236 2 
179 2 61 2 204 1 277 1 182 1 183 1 86 1 331 1 117 2 87 2 333 2 257 2 26 1 145 1 143 1 52 1 260 1 236 2 54 1 261 1 196 1 97 1 215 1 150 2 153 1 31 1 243 2 15 1 157 2 245 2 272 1 246 1 158 1 
54 1 179 1 243 1 157 1 182 1 149 1 210 1 150 1 117 1 236 1 
289 1 310 1 182 1 45 1 150 1 4 1 117 1 364 1 100 1 186 1 234 1 157 1 223 1 59 1 
179 1 289 1 310 1 182 1 45 1 150 1 117 1 364 2 186 1 234 2 243 1 157 1 223 1 59 1 236 1 
5 1 364 1 234 1 367 1 106 1 
5 1 364 2 186 1 299 1 234 2 223 1 162 1 106 1 
5 1 364 1 234 1 
54 1 179 1 182 1 149 1 150 1 164 1 117 1 364 1 234 1 243 1 157 1 210 1 106 1 236 1 
223 1 
54 1 179 1 182 1 149 1 228 1 150 1 164 1 117 1 364 2 5 1 299 1 186 1 234 2 243 1 157 1 223 1 210 1 236 1 106 1 
288 1 172 1 279 1 364 5 5 2 101 1 186 1 299 1 234 5 50 1 223 1 301 1 302 1 368 1 70 2 317 1 326 2 134 2 106 2 
180 1 86 1 
179 1 6 1 243 1 157 2 113 1 86 2 150 2 236 1 117 2 
238 1 360 1 173 1 
97 1 61 1 204 1 182 1 86 1 87 1 245 1 272 1 143 1 53 1 
179 1 243 3 157 3 122 1 86 1 150 3 117 3 236 3 
243 1 157 1 182 1 210 1 150 1 117 1 236 1 
179 1 6 1 243 1 157 1 182 1 113 1 150 1 117 1 236 1 
81 1 179 2 61 1 310 1 277 1 182 1 252 1 45 1 113 1 86 1 331 1 114 1 117 3 87 1 333 1 234 1 257 2 26 1 122 1 143 1 52 1 260 1 236 3 261 1 54 1 97 1 289 1 150 3 153 1 364 1 31 1 243 3 15 1 272 1 157 3 245 1 59 1 246 1 
243 1 157 2 224 1 122 1 86 1 150 2 4 1 117 2 236 1 
179 1 289 1 310 1 182 1 252 1 113 1 45 1 296 1 150 3 114 1 117 3 364 1 234 1 243 3 157 3 223 1 59 1 122 2 236 3 
179 1 238 1 113 1 150 2 117 2 173 1 243 2 157 2 122 1 236 2 
97 1 61 1 204 1 182 1 86 1 87 1 245 1 272 1 143 1 
61 1 250 1 55 1 216 1 86 1 150 1 87 1 298 1 157 1 245 1 103 1 209 1 143 1 318 1 9 1 
39 1 261 1 238 2 339 1 360 2 215 2 217 1 22 1 331 1 230 1 153 1 343 1 333 4 232 1 173 2 26 1 257 2 15 2 32 1 91 1 131 1 246 1 37 1 260 1 
243 1 310 1 157 1 182 1 150 1 169 1 117 1 236 1 
238 1 97 1 61 1 252 1 150 1 117 1 87 1 243 1 272 1 157 1 245 1 122 1 143 1 236 1 
179 1 340 1 252 1 113 1 150 5 86 1 4 1 117 5 243 4 157 5 224 1 121 1 122 2 236 4 
243 2 157 2 182 1 169 1 210 1 150 2 117 2 236 2 
270 1 
270 1 
249 1 207 1 
249 1 207 1 
249 1 207 1 
270 1 
270 1 
270 2 249 1 207 1 
270 1 
270 1 
270 1 
270 1 
270 1 
307 2 214 1 161 2 83 2 206 1 20 2 64 1 152 1 88 1 270 2 364 2 323 1 234 2 118 2 223 1 
307 1 161 1 83 1 184 1 46 1 20 1 150 1 117 1 364 1 270 1 323 1 234 1 118 1 243 1 157 1 336 1 356 1 95 1 236 1 
321 1 293 1 229 1 
293 1 229 1 319 1 
321 2 341 1 293 3 80 1 319 1 266 1 
321 1 233 1 341 1 293 2 319 1 266 1 
321 1 341 1 293 2 319 1 266 2 
0 1 42 1 279 1 46 1 22 1 281 2 5 1 256 1 186 1 234 5 187 3 91 1 70 1 317 3 356 1 95 1 195 2 72 2 265 1 28 1 30 1 364 5 101 2 299 1 324 1 365 1 32 1 223 2 326 1 37 1 134 1 106 4 
107 1 0 3 42 1 138 5 279 1 46 4 22 3 281 6 5 6 186 1 234 9 187 9 91 3 70 2 7 1 317 8 172 1 72 6 12 1 28 2 29 1 364 9 101 6 299 1 201 1 324 3 365 2 32 3 367 5 223 5 326 2 37 3 134 2 159 1 106 7 
0 2 46 1 22 1 281 2 256 1 186 1 234 3 187 4 91 1 70 1 317 3 195 1 172 1 72 2 28 1 30 1 364 3 101 2 365 1 324 1 223 3 32 1 326 1 37 1 134 1 106 2 
0 3 46 2 22 2 281 4 256 1 186 1 234 4 187 7 91 2 70 1 317 5 195 2 172 1 72 4 12 1 28 1 30 1 364 4 101 4 201 1 365 1 324 2 223 4 32 2 326 1 37 2 134 1 159 1 106 3 
180 1 209 1 357 1 
271 1 209 1 
248 1 
298 1 209 1 
298 1 68 1 209 3 318 1 99 1 357 2 
298 1 209 1 318 1 
67 1 209 1 
10 1 215 4 217 3 254 1 230 2 57 1 154 1 333 7 77 1 78 2 15 3 91 1 60 1 37 1 94 1 146 1 194 1 
10 1 215 4 217 3 254 1 230 2 57 1 154 1 333 7 77 1 78 2 15 3 91 1 60 1 37 1 94 1 146 1 194 1 
10 1 215 4 217 3 254 1 230 2 57 1 165 1 154 1 333 7 77 1 78 2 15 3 91 1 60 1 37 1 94 1 146 1 194 1 
22 1 254 1 331 1 230 2 333 11 69 1 257 2 283 2 26 1 91 1 8 1 94 2 260 1 146 2 148 1 261 1 215 5 217 4 57 1 155 1 77 1 78 1 324 1 346 1 15 6 32 1 105 1 60 1 37 1 160 1 
331 1 254 1 230 2 354 1 333 9 257 2 26 1 91 2 94 1 146 1 260 1 194 1 261 1 10 1 215 5 217 3 75 1 154 1 78 1 77 1 15 4 33 1 60 1 37 2 
109 1 61 1 40 1 41 1 85 1 48 2 229 1 89 1 87 1 141 1 166 1 142 1 92 1 211 1 319 1 9 1 358 1 213 1 287 1 55 1 293 2 264 1 98 1 13 2 321 1 268 1 325 1 245 1 305 1 80 1 
109 1 61 1 41 1 85 1 48 3 229 1 49 1 89 1 87 1 141 1 166 1 142 1 92 1 211 1 319 1 9 1 358 1 213 1 55 1 293 2 264 1 13 3 321 1 268 2 200 1 325 1 245 1 305 1 80 1 350 1 
109 1 61 1 41 1 85 1 48 2 49 1 229 1 89 1 87 1 166 1 142 1 92 1 211 1 319 1 9 1 213 1 55 1 293 2 13 2 321 1 268 2 245 1 305 1 80 1 350 1 
275 1 213 2 55 1 61 1 362 1 112 1 85 2 264 1 219 1 48 1 13 1 298 1 220 1 87 1 200 1 325 1 245 1 119 1 142 2 209 1 92 2 143 1 9 1 
61 1 40 1 41 1 85 1 48 1 229 1 87 1 141 1 142 1 92 1 211 1 319 1 9 1 358 1 213 1 55 1 293 2 264 1 98 1 13 1 321 1 325 1 245 1 305 1 80 1 350 1 
171 1 
0 2 136 1 276 2 182 1 279 1 45 1 4 1 5 6 87 2 186 1 234 5 187 2 284 2 143 2 9 1 286 1 55 1 289 1 11 1 291 2 150 1 297 2 298 1 101 2 100 1 345 1 299 3 242 1 245 2 157 1 59 1 19 2 61 2 310 1 112 1 116 2 117 1 208 4 25 1 70 1 317 2 209 1 259 1 212 1 359 1 128 1 73 1 74 1 220 1 364 5 365 1 223 2 34 2 326 1 134 1 
310 1 182 1 45 1 228 1 4 1 117 1 5 2 208 2 25 1 234 3 259 1 359 1 289 1 11 1 150 1 297 1 364 3 100 1 345 1 299 1 157 1 59 1 
310 1 182 1 45 1 228 1 4 1 117 1 5 1 208 3 186 1 25 1 234 3 259 1 359 1 289 1 11 1 291 1 150 1 364 3 100 1 345 1 299 1 157 1 223 1 59 1 
310 1 182 1 45 1 228 1 4 1 117 1 116 1 5 2 208 3 25 1 234 3 259 1 359 1 289 1 11 1 291 1 150 1 297 1 364 3 100 1 345 1 299 1 157 1 59 1 
0 2 179 1 136 1 276 2 182 2 279 1 45 1 228 1 330 1 4 1 5 7 186 1 234 5 284 2 236 1 54 1 147 1 289 1 11 1 149 1 291 2 150 2 297 4 345 1 100 1 101 1 299 3 243 1 157 2 18 1 59 1 19 2 310 1 251 1 164 1 116 4 117 2 208 4 25 1 70 1 317 1 259 1 210 1 124 1 359 1 128 1 364 5 223 1 326 1 34 2 134 1 
0 2 19 2 136 1 276 2 310 1 182 1 279 1 45 1 4 1 116 2 117 1 5 4 186 1 208 4 25 1 234 4 187 2 70 1 284 2 317 1 259 1 359 1 289 1 11 1 291 2 128 1 73 1 150 1 297 2 364 4 101 1 100 1 345 1 299 2 157 1 223 2 59 1 34 2 326 1 134 1 
0 2 19 2 136 1 276 2 310 1 182 1 279 1 45 1 330 1 4 1 116 2 117 1 5 4 186 1 208 4 25 1 234 4 70 1 284 2 317 1 259 1 124 1 147 1 359 1 289 1 11 1 291 2 128 1 150 1 297 2 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 34 2 326 1 134 1 
0 2 19 2 136 1 276 2 310 1 182 1 279 1 45 1 330 1 4 1 116 2 117 1 5 4 186 1 208 4 25 1 234 4 70 1 284 2 317 1 259 1 124 1 147 1 359 1 289 1 11 1 291 2 128 1 150 1 297 2 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 34 2 326 1 134 1 
19 2 351 1 226 1 310 1 182 1 278 2 279 1 45 1 4 1 116 2 117 1 5 4 334 2 186 1 208 4 25 1 234 4 187 2 70 1 284 2 317 1 259 1 147 1 359 1 289 1 11 1 291 2 128 1 150 1 297 2 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 175 1 326 1 134 1 
0 2 19 2 136 1 276 2 310 1 251 1 182 1 279 1 45 1 330 1 4 1 117 1 116 3 5 5 186 1 208 5 25 1 234 4 70 1 284 2 317 1 259 1 124 1 147 1 359 1 289 1 11 1 291 3 128 1 150 1 297 3 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 34 2 326 1 134 1 
0 2 19 2 136 1 276 2 310 1 251 1 182 1 279 1 45 1 330 1 4 1 117 1 116 3 5 5 186 1 208 5 25 1 234 4 70 1 284 2 317 1 259 1 124 1 147 1 359 1 289 1 11 1 291 3 128 1 150 1 297 3 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 34 2 326 1 134 1 
19 2 351 1 310 1 182 1 278 2 279 1 45 1 4 1 116 2 117 1 5 4 334 2 186 1 208 4 25 1 234 4 187 2 70 1 284 2 317 1 259 1 359 1 289 1 11 1 291 2 128 1 73 1 150 1 297 2 364 4 101 1 100 1 345 1 299 2 157 1 223 1 59 1 326 1 134 1 
180 1 254 1 331 1 86 2 230 2 333 6 257 2 26 1 91 1 194 1 260 1 261 1 238 1 10 1 360 1 215 3 217 2 153 1 154 1 77 1 78 1 173 1 15 3 131 1 246 1 37 1 
108 1 135 1 22 1 86 1 331 2 230 1 333 14 283 3 257 4 26 2 91 1 258 1 235 1 146 1 260 2 261 2 148 3 238 11 360 11 215 8 217 2 153 1 31 1 324 2 156 1 346 1 173 4 15 6 32 2 246 2 158 1 37 2 160 1 
61 1 252 1 86 1 331 1 117 1 87 1 333 2 26 1 257 2 143 1 122 1 235 1 53 1 260 1 236 1 261 1 237 1 97 1 215 1 150 1 153 1 344 1 31 1 173 1 243 1 272 1 245 1 157 1 15 1 304 1 246 1 158 1 
61 1 353 1 252 1 22 1 331 2 230 1 313 1 117 1 87 1 333 7 26 2 257 4 91 1 122 1 143 1 52 1 193 1 235 1 260 2 126 1 236 1 261 2 238 3 97 1 360 3 215 3 263 1 217 1 150 1 153 2 31 1 324 1 173 3 243 1 272 1 157 1 245 1 15 4 32 1 246 2 37 1 
61 7 183 2 112 1 331 2 117 1 231 1 314 1 87 8 333 2 257 4 26 2 189 1 209 3 122 1 143 2 260 2 125 1 236 1 9 2 261 2 287 1 240 1 55 2 215 1 198 1 150 1 153 2 220 1 298 2 31 1 243 1 157 1 245 8 15 1 131 1 246 2 328 1 158 1 350 1 
179 1 243 1 157 1 273 1 113 1 150 1 117 1 236 1 
261 1 39 1 238 1 360 1 215 2 217 1 331 1 153 1 333 2 173 1 26 1 257 2 32 1 131 1 246 1 37 1 146 1 260 1 
261 1 238 1 360 1 217 1 22 1 331 1 230 1 153 1 343 1 333 2 173 1 26 1 257 2 15 2 91 1 131 1 246 1 260 1 
22 1 331 1 230 1 333 4 257 2 26 1 91 1 260 1 146 1 261 1 238 2 360 2 215 2 217 2 153 1 324 1 173 2 15 2 32 1 131 1 246 1 37 1 
261 1 39 1 238 1 360 1 215 2 217 1 331 1 314 1 153 1 333 2 173 1 26 1 257 2 32 1 246 1 37 1 146 1 260 1 
261 1 238 1 360 1 217 1 22 1 331 1 230 1 314 1 153 1 343 1 333 2 173 1 26 1 257 2 15 2 91 1 246 1 260 1 
22 1 331 1 230 1 314 1 333 4 257 2 26 1 91 1 260 1 146 1 261 1 238 2 360 2 215 2 217 2 153 1 324 1 173 2 15 2 32 1 246 1 37 1 
22 1 331 1 230 1 333 4 257 2 26 1 91 1 260 1 146 1 261 1 238 2 360 2 215 2 217 2 153 1 324 1 173 2 15 2 32 1 246 1 37 1 
61 1 204 1 182 1 331 1 86 1 87 1 333 2 257 2 26 1 143 1 52 1 260 1 261 1 97 1 215 1 153 1 31 1 272 1 245 1 15 1 246 1 158 1 
250 1 61 1 86 1 331 1 87 1 333 2 26 1 257 2 209 1 143 1 318 1 260 1 9 1 261 1 55 1 215 1 216 1 150 1 298 1 153 1 31 1 103 1 245 1 157 1 15 1 246 1 158 1 177 1 
22 1 331 1 230 1 333 4 257 2 26 1 91 1 235 1 260 1 146 1 261 1 238 2 360 2 215 2 217 2 153 1 324 1 173 2 15 2 32 1 246 1 37 1 
61 1 22 1 331 1 230 1 87 1 333 3 26 1 257 2 91 1 52 1 193 1 260 1 261 1 238 1 287 1 97 1 360 1 215 1 217 1 153 1 324 1 173 1 272 1 245 1 15 2 32 1 246 1 37 1 
179 1 113 1 22 1 331 1 117 1 333 3 257 2 26 1 91 1 235 1 146 1 260 1 236 1 261 1 238 1 360 1 215 2 217 1 150 1 153 1 102 1 324 1 243 1 173 1 15 1 157 1 32 1 246 1 37 1 
253 1 22 3 331 2 332 1 230 3 354 1 333 19 283 2 257 4 26 2 188 1 190 2 91 3 260 2 146 3 261 2 148 1 127 2 215 9 217 6 363 1 324 3 346 1 347 1 15 10 32 3 349 1 133 1 37 3 160 1 
311 1 62 1 23 1 253 1 22 2 331 3 332 1 230 2 354 1 333 26 257 6 26 3 283 2 188 2 190 4 91 2 146 2 260 3 261 3 148 2 127 1 215 14 241 1 217 4 324 3 15 12 347 1 32 3 105 2 35 1 133 2 306 1 37 3 160 2 
311 1 62 1 23 1 253 1 22 4 254 1 331 3 332 1 230 4 354 1 333 41 283 4 257 6 26 3 188 1 190 4 91 5 194 1 260 3 146 4 261 3 148 3 10 1 127 1 241 1 215 20 217 8 363 1 218 1 154 1 78 1 77 1 324 4 346 1 347 1 15 21 32 4 105 1 35 1 306 1 133 2 37 5 160 3 
311 1 62 1 23 1 253 1 22 3 254 1 331 4 332 1 230 4 354 1 333 38 283 4 257 8 26 4 188 1 190 4 91 4 194 1 260 4 146 3 261 4 148 3 10 1 127 1 241 1 215 20 217 7 363 1 218 1 154 1 78 1 77 1 324 4 346 1 347 1 15 18 32 4 105 2 35 1 306 1 133 2 37 5 160 3 
311 1 62 1 23 1 253 1 22 7 254 1 331 2 332 1 230 7 354 1 333 52 283 4 257 4 26 2 188 1 190 4 91 8 258 2 194 1 260 2 146 7 261 2 148 4 10 1 127 1 241 1 215 27 217 14 154 1 78 1 77 1 324 7 346 2 347 1 15 25 32 7 105 1 35 1 306 1 133 1 37 8 160 2 
307 1 270 1 170 1 161 1 83 1 20 1 64 1 
184 1 
307 1 270 1 161 1 83 1 338 1 20 1 
307 1 214 1 161 1 83 1 206 1 20 1 64 1 152 1 88 1 364 1 270 1 323 1 234 1 118 2 223 1 
307 1 214 1 161 1 83 1 206 1 20 1 64 1 152 1 88 1 364 1 270 1 323 1 234 1 118 2 223 1 
307 1 214 1 161 1 83 1 206 1 20 1 64 1 152 1 88 1 364 1 270 1 323 1 234 1 118 2 223 1 
66 1 
66 1 
337 1 
337 1 
27 1 203 1 
307 1 214 1 161 1 83 1 184 1 46 1 20 1 152 1 270 1 364 1 234 1 118 1 168 1 336 1 356 1 95 1 106 1 
66 1 
337 1 
111 1 197 1 157 1 312 1 150 1 117 1 
358 1 213 1 287 1 55 1 61 2 41 1 293 2 129 1 229 1 282 1 321 1 87 2 245 2 211 1 80 1 319 1 178 1 9 1 350 1 
358 1 213 1 61 1 55 1 41 1 293 2 229 1 282 1 321 1 87 1 245 1 316 1 211 1 80 1 319 1 350 1 9 1 
213 1 55 1 61 1 112 1 129 1 219 1 298 1 87 1 220 1 245 1 51 1 209 1 143 1 9 1 
358 1 213 1 61 1 55 1 41 1 293 2 129 1 229 1 282 1 321 1 87 1 245 1 211 1 80 1 319 1 178 1 9 1 350 1 
295 1 
101 1 180 1 186 1 223 1 302 1 368 1 317 1 
0 1 136 1 276 1 279 1 364 1 5 1 101 1 186 1 299 1 234 1 187 1 223 2 70 1 317 1 326 1 34 1 134 1 
0 6 225 2 139 2 279 4 3 2 185 2 281 6 87 3 5 5 186 2 234 5 187 12 191 1 91 2 143 1 192 1 9 2 285 1 287 1 55 1 99 1 298 1 101 8 299 3 242 1 245 3 17 1 302 1 104 2 59 2 61 3 22 2 313 2 70 4 317 9 209 6 318 1 357 2 72 6 267 2 364 5 322 2 271 3 365 2 366 1 324 2 223 8 32 2 368 1 326 4 37 2 134 4 
0 3 181 1 279 2 62 1 23 1 22 2 3 2 281 5 5 1 186 2 234 1 187 6 283 1 70 2 91 2 317 8 148 1 241 1 72 5 151 1 364 1 322 1 101 5 299 1 365 1 324 2 242 1 223 5 32 2 35 1 326 2 306 1 37 2 134 2 160 1 
179 1 182 1 279 1 3 2 254 1 330 1 164 1 117 1 234 1 70 1 91 1 317 2 210 1 236 1 54 1 149 1 150 1 364 1 322 1 154 1 101 2 77 1 243 1 157 1 33 1 326 1 37 2 134 1 
279 1 101 1 186 1 223 1 368 1 70 1 302 1 317 1 326 1 134 1 
0 5 72 5 22 2 3 2 313 1 281 5 322 1 101 5 324 2 187 10 32 2 223 5 91 2 317 5 37 2 
364 1 5 1 186 1 299 1 234 1 223 1 
110 1 61 4 279 1 112 1 87 4 5 4 234 3 70 2 209 1 317 2 143 2 123 1 192 2 9 1 212 1 55 1 172 1 74 1 298 1 364 3 220 1 101 2 299 2 365 2 242 2 245 4 17 1 326 2 134 2 
179 2 61 1 277 1 86 1 331 1 117 2 87 1 333 1 26 1 257 2 143 1 52 1 260 1 236 2 54 1 261 1 97 1 150 2 153 1 31 1 243 2 245 1 157 2 272 1 15 1 246 1 
0 2 72 2 279 1 281 2 101 2 186 2 78 1 365 1 187 4 242 1 223 4 70 1 317 1 326 1 134 1 
308 1 83 1 20 1 
27 1 83 1 2 1 20 1 115 1 
308 1 83 1 20 1 
308 1 83 1 20 1 
83 1 292 1 20 1 
83 1 292 1 20 1 
83 1 292 1 20 1 
83 1 20 1 
270 1 
261 2 10 1 215 4 217 3 331 2 254 1 230 2 154 1 333 8 78 1 77 1 26 2 257 4 15 4 91 1 105 1 37 1 146 1 260 2 194 1 
10 1 180 1 215 3 217 2 254 1 230 2 154 1 333 6 78 1 77 1 15 3 91 1 37 1 194 1 
261 1 215 2 217 2 22 1 331 1 230 1 140 1 333 4 324 1 26 1 257 2 15 2 32 1 91 1 37 1 260 1 146 1 
148 1 215 3 217 2 22 1 230 1 333 7 324 1 283 2 346 1 15 4 32 1 91 1 37 1 146 1 160 1 
108 1 22 2 254 2 331 2 230 5 333 23 283 2 26 2 257 4 91 3 258 1 194 1 146 4 260 2 148 2 261 2 10 1 215 11 217 9 154 1 155 1 78 1 77 2 324 2 346 1 15 12 32 2 105 2 37 3 
333 1 283 1 15 1 
148 1 333 1 215 1 
261 1 215 3 217 3 22 1 331 1 313 1 230 2 140 1 333 6 324 1 257 2 26 1 15 3 32 1 91 1 37 1 260 1 146 1 
62 1 22 2 23 1 331 1 230 1 354 1 333 12 283 1 257 2 26 1 91 2 146 1 260 1 148 1 261 1 241 1 215 6 217 2 324 2 15 6 32 2 35 1 306 1 37 2 160 1 
215 3 217 2 254 1 230 1 154 1 333 6 77 1 15 3 91 1 37 1 146 1 
261 1 10 1 215 1 217 2 254 1 331 1 230 1 333 3 155 1 77 1 26 1 257 2 15 2 105 1 146 1 194 1 260 1 
261 1 215 5 217 5 331 1 254 2 230 3 354 1 333 10 154 1 77 2 257 2 26 1 15 5 33 1 91 2 37 2 260 1 146 2 
261 1 215 2 217 1 331 1 354 1 333 2 26 1 257 2 32 1 37 1 260 1 146 1 
261 1 215 2 217 2 22 1 331 1 230 1 354 1 333 4 324 1 26 1 257 2 15 2 32 1 91 1 37 1 260 1 146 1 
261 3 215 1 217 2 363 1 331 3 254 1 230 1 354 1 333 3 155 1 77 1 26 3 257 6 15 2 105 1 260 3 146 1 
331 4 254 2 230 3 354 1 140 1 333 15 69 1 283 1 257 8 26 4 91 2 146 3 260 4 194 1 261 4 148 1 10 1 215 7 217 6 363 1 154 1 155 1 77 2 15 8 33 1 105 1 37 2 160 1 
331 1 254 1 230 2 354 1 333 8 283 1 257 2 26 1 91 1 260 1 194 1 148 1 261 1 10 1 241 1 215 4 217 2 154 1 78 1 77 1 15 4 37 1 160 1 
254 1 331 2 230 2 354 1 140 1 333 11 283 2 257 4 26 2 91 1 194 1 260 2 146 1 261 2 148 1 10 1 241 1 215 6 217 3 154 1 78 1 77 1 324 1 346 1 15 5 32 1 37 2 160 1 
62 1 22 2 23 1 254 1 331 3 230 3 354 1 140 1 333 19 283 1 257 6 26 3 91 3 194 1 146 1 260 3 148 1 261 3 10 1 241 1 215 9 217 4 154 1 78 1 77 1 324 2 15 10 32 2 105 1 35 1 306 1 37 3 160 1 
62 1 22 1 23 1 254 1 331 3 230 3 354 1 140 1 333 17 283 1 257 6 26 3 91 2 194 1 146 2 260 3 148 1 261 3 10 1 241 1 215 10 217 5 154 1 78 1 77 1 324 2 15 7 32 2 105 1 35 1 306 1 37 3 160 1 
331 1 254 1 230 2 354 1 333 8 283 1 257 2 26 1 91 1 260 1 194 1 148 1 261 1 10 1 241 1 215 4 217 2 154 1 78 1 77 1 15 4 37 1 160 1 
62 1 22 2 23 1 331 1 230 1 354 1 333 12 283 1 257 2 26 1 91 2 146 1 260 1 148 1 261 1 241 1 215 6 217 2 324 2 15 6 32 2 35 1 306 1 37 2 160 1 
62 1 23 1 22 1 254 1 331 4 230 3 354 1 140 1 333 18 283 1 257 8 26 4 91 2 194 1 146 2 260 4 261 4 148 1 10 1 241 1 215 10 217 5 154 1 78 1 77 1 324 2 15 8 32 2 105 2 35 1 306 1 37 3 160 1 
62 1 23 1 22 2 331 4 230 3 354 1 333 16 283 1 257 8 26 4 91 2 146 3 260 4 261 4 148 1 241 1 215 9 217 6 363 1 324 3 15 7 32 3 105 2 35 1 306 1 37 3 160 1 
10 1 215 3 217 6 254 3 230 3 333 7 154 1 77 3 15 4 91 1 37 1 194 2 146 3 
62 1 23 1 22 1 254 1 331 4 230 3 354 1 333 18 283 1 257 8 26 4 91 2 194 1 146 1 260 4 261 4 148 1 10 1 241 1 215 10 217 4 363 1 154 1 78 1 77 1 324 2 15 8 32 2 105 2 35 1 306 1 37 3 160 1 
157 1 290 1 224 1 86 1 150 1 4 1 117 1 
361 1 290 1 294 1 86 1 150 1 4 1 117 1 221 1 244 1 157 1 224 1 176 1 
298 1 220 1 87 1 180 1 55 1 61 1 245 1 209 1 112 1 143 1 9 1 
61 1 204 1 182 1 86 1 150 1 117 1 87 1 243 1 157 1 245 1 272 1 122 1 143 1 236 1 
61 1 204 1 182 1 86 1 150 1 117 1 87 1 243 1 157 1 245 1 272 1 122 1 192 1 236 1 
61 2 310 1 182 1 280 1 86 1 117 2 67 1 87 2 209 3 122 1 192 1 318 2 236 1 9 1 55 1 289 1 216 1 150 2 298 2 243 2 245 2 157 2 103 1 36 1 
179 1 61 1 182 1 164 1 117 1 87 1 186 1 234 1 209 1 210 1 192 1 236 1 54 1 149 1 342 1 150 1 364 1 271 1 243 1 245 1 157 1 223 1 
225 1 179 1 61 1 182 1 164 1 117 1 87 1 186 1 234 1 209 1 210 1 192 1 236 1 54 1 149 1 150 1 364 1 271 1 243 1 245 1 157 1 223 1 
87 1 55 1 61 1 245 1 189 1 9 1 
1 1 61 1 55 1 320 1 99 1 87 1 298 1 245 1 209 1 355 1 143 1 318 1 9 2 
61 1 86 2 254 1 331 2 230 1 117 1 87 1 333 5 26 2 257 4 91 1 122 1 235 1 193 1 52 1 194 1 260 2 236 1 126 1 261 2 238 1 10 1 287 1 97 1 360 1 215 3 217 1 150 1 153 2 154 1 78 1 77 1 222 1 243 1 15 2 157 1 245 1 272 1 246 2 37 1 
225 1 61 1 279 2 139 1 87 1 5 2 186 1 234 3 70 2 317 1 209 2 143 1 357 1 267 1 364 3 101 1 271 1 299 1 245 1 223 1 17 1 302 1 368 1 104 1 59 1 326 2 134 2 106 1 
287 1 61 2 55 1 99 1 87 2 298 1 366 1 245 2 189 1 209 2 318 1 357 1 9 2 
287 1 61 4 55 1 112 1 280 1 87 4 220 1 298 1 315 1 245 4 209 1 143 1 9 1 
1 1 61 1 55 1 205 1 63 1 47 1 87 1 298 1 245 1 209 1 355 1 318 1 9 2 
87 1 55 1 61 1 41 1 245 1 293 1 143 1 229 1 319 1 9 1 
231 1 87 2 287 1 61 2 245 2 327 1 350 1 
287 1 240 1 61 4 55 2 198 1 112 1 231 1 220 1 87 5 298 2 315 1 245 5 209 3 143 1 192 1 9 2 
287 1 240 1 61 4 55 2 112 1 231 1 220 1 87 5 298 2 315 1 245 5 209 3 143 1 303 1 192 1 9 2 
61 1 55 1 216 1 86 1 150 2 117 1 298 1 87 1 243 1 103 1 157 2 245 1 209 1 122 1 143 1 318 1 9 1 236 1 
1 1 61 1 55 1 320 1 99 1 87 1 298 1 245 1 209 1 355 1 192 1 318 1 9 2 
111 1 197 1 262 1 84 1 227 1 312 1 
300 1 120 1 227 1 
309 1 262 1 84 1 227 1 86 1 
309 2 289 1 310 1 262 2 182 1 84 2 227 1 45 1 86 1 114 1 24 1 364 2 186 1 234 2 300 1 223 1 120 1 59 1 106 1 
109 1 89 1 180 1 166 1 
109 1 89 1 325 1 166 1 264 1 48 1 13 1 
142 1 85 1 13 1 
109 1 40 1 264 1 48 3 13 3 89 1 325 1 90 1 166 1 167 1 58 2 348 1 
109 1 89 1 268 1 325 1 166 1 199 1 264 1 48 2 13 2 
40 1 82 1 293 1 264 1 48 1 13 1 229 1 321 1 89 1 325 1 144 1 
89 1 40 1 325 1 166 1 264 1 48 1 13 1 
109 1 40 1 325 1 166 2 264 1 48 1 13 1 
40 1 71 1 56 1 264 2 48 2 13 2 255 1 89 1 325 2 166 1 
109 1 40 1 82 1 264 1 48 3 13 3 268 2 89 2 325 1 14 1 166 1 274 1 247 1 
109 1 40 1 293 2 264 1 48 2 13 2 229 1 321 1 89 1 268 1 325 1 166 1 79 1 319 1 80 1 
109 1 40 1 82 1 199 1 264 2 48 4 13 4 268 2 89 2 325 2 14 1 174 1 166 1 
109 1 89 1 40 1 325 1 166 1 264 1 48 1 13 1 
109 2 82 1 329 1 264 1 48 4 13 4 268 2 89 3 325 1 14 1 90 1 166 2 58 1 348 1 
96 1 109 1 40 1 264 1 21 1 48 2 13 2 89 1 268 1 325 1 166 1 132 1 
109 1 89 1 40 1 325 1 90 1 166 1 58 2 264 1 348 2 130 1 48 3 13 3 
89 1 202 1 44 1 
269 1 40 1 325 1 264 1 48 1 13 1 
109 1 89 1 268 1 40 1 325 1 166 1 264 1 48 2 247 1 13 2 
65 1 
109 1 89 1 40 1 325 1 166 1 264 1 48 1 13 1 
109 1 40 1 264 1 48 3 13 3 268 1 89 1 325 1 166 1 58 1 247 1 
89 1 82 1 14 1 329 1 
89 1 166 1 

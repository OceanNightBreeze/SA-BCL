#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 53 13 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 53 13 203 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 153 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 231 29 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 216 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 179 110 112 173 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 179 110 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 179 110 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 179 167 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 179 110 112 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 179 110 112 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 118 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 53 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 231 (19,334) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 231 (155,212) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 231 (155,212) 49 312 (76,266) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
5 2 62 1 163 1 75 1 170 2 327 1 197 1 331 3 180 1 128 2 78 3 222 1 108 1 
163 2 327 1 331 9 310 2 108 1 5 2 170 2 197 3 128 5 129 2 222 6 313 2 115 2 75 1 343 1 37 1 77 1 180 1 319 1 78 9 95 1 344 1 62 4 185 1 345 1 232 1 20 1 21 1 
163 2 327 1 331 9 310 2 108 1 5 2 170 2 197 3 128 5 129 2 222 6 313 2 115 2 75 1 343 1 37 1 77 1 180 1 319 1 78 9 95 1 344 1 62 4 185 1 345 1 232 1 20 1 21 1 
163 2 327 1 331 10 310 2 108 1 5 2 170 2 197 4 128 6 129 2 222 7 313 2 115 2 75 1 343 1 37 1 77 1 180 1 319 1 78 10 95 1 344 1 62 5 185 1 345 1 232 1 20 1 21 1 
163 2 327 1 331 7 310 1 108 1 5 2 170 2 197 2 128 4 129 2 222 4 313 2 115 2 75 1 37 1 77 1 180 1 319 1 78 7 95 1 344 1 62 3 185 1 345 1 232 1 20 1 21 1 
115 1 327 1 343 1 331 4 180 1 310 2 78 4 108 1 5 1 62 2 170 1 197 1 232 1 21 1 128 3 222 3 129 1 313 1 
163 1 115 1 327 1 331 2 37 1 180 1 78 2 108 1 5 1 323 1 344 1 170 1 218 1 128 1 83 1 313 1 
163 1 327 1 331 9 310 2 108 1 5 2 170 2 197 3 199 1 128 5 222 7 129 1 313 1 75 1 115 1 343 1 77 1 180 1 78 9 95 1 62 4 232 1 21 1 235 1 
163 1 327 1 331 9 310 2 108 1 5 2 170 2 197 3 199 1 128 5 222 7 129 1 313 1 75 1 115 1 343 1 77 1 180 1 78 9 95 1 62 4 232 1 21 1 235 1 
178 1 202 1 141 1 27 1 239 1 123 1 213 1 332 1 244 1 196 1 247 1 299 1 326 1 120 1 
60 1 
141 2 202 1 114 1 136 1 60 1 120 2 52 1 158 1 
202 2 141 5 36 1 133 2 45 1 116 1 143 1 46 1 106 1 241 1 136 1 60 1 257 1 333 2 157 1 52 1 114 2 35 2 120 5 
153 1 60 1 52 1 
269 1 
159 1 123 2 239 2 27 1 247 2 213 2 332 2 244 2 
209 2 328 1 123 3 239 2 27 1 47 2 190 1 212 1 214 1 294 1 213 2 107 1 215 2 30 1 332 3 295 1 244 2 194 1 148 1 174 1 247 2 127 1 250 2 282 2 252 1 132 1 94 1 285 1 159 1 230 1 99 1 234 1 233 1 304 1 288 1 103 1 66 1 
178 1 123 1 239 1 27 1 247 1 213 1 299 1 332 1 326 1 244 1 
141 1 123 2 27 1 239 1 275 1 213 2 332 2 244 1 52 1 6 1 196 1 247 1 299 1 201 1 10 1 178 1 320 1 60 1 289 1 120 1 326 2 
141 2 123 2 239 2 27 1 275 1 213 2 332 2 244 2 52 1 196 1 247 2 299 1 10 1 178 1 320 1 60 1 289 1 326 2 120 2 
141 1 202 1 114 1 242 1 120 1 
141 2 202 1 114 1 338 1 136 1 60 1 120 2 52 1 
141 1 114 1 120 1 
142 1 123 2 239 1 213 2 332 2 244 1 159 2 247 1 340 1 
238 1 126 1 124 1 
123 1 94 1 212 1 285 1 215 1 332 1 30 1 295 1 159 1 148 1 174 1 64 1 250 1 282 1 252 1 66 1 
159 1 153 1 
84 1 239 1 123 2 94 1 212 1 213 1 285 1 215 1 30 1 332 2 295 1 279 1 244 1 124 1 174 1 148 1 250 1 282 1 252 1 66 1 
159 1 123 3 239 3 247 1 213 3 332 3 279 1 244 3 
178 1 123 1 239 1 213 1 332 1 326 1 244 1 
142 1 123 1 239 1 247 1 213 1 340 1 332 1 326 1 244 1 
84 1 209 2 123 4 47 1 275 1 212 1 213 3 214 1 215 1 279 1 174 1 176 1 127 1 282 1 10 1 132 1 317 1 94 1 320 1 285 1 230 1 99 1 233 1 289 1 103 1 326 2 66 1 141 1 142 1 27 1 239 3 190 1 332 4 30 1 295 1 244 3 194 1 148 1 247 2 250 1 252 1 204 1 159 1 304 1 120 1 
6 1 159 1 123 2 239 1 213 2 332 2 188 1 279 1 244 1 
142 1 141 1 253 1 84 1 239 3 123 3 275 1 213 3 320 1 60 1 332 3 279 2 244 3 247 1 176 1 289 1 120 1 326 1 10 1 
142 1 238 1 239 2 123 2 213 2 332 2 279 1 244 2 124 1 247 1 
123 1 94 1 212 1 285 1 215 1 332 1 30 1 295 1 159 1 148 1 174 1 250 1 282 1 252 1 66 1 
123 1 94 1 285 1 215 1 332 1 334 1 30 1 295 1 159 1 174 1 175 1 250 1 282 1 252 1 66 1 
26 1 209 2 273 1 328 2 238 2 190 1 47 4 214 1 278 1 87 1 194 1 124 2 71 1 127 1 126 2 9 1 301 1 117 1 137 1 230 2 80 1 99 1 233 1 348 1 
123 1 239 1 213 1 289 1 332 1 326 1 244 1 270 1 
142 1 84 1 239 4 123 5 213 5 332 5 279 2 244 4 6 1 159 1 32 1 247 1 160 1 188 1 
178 1 123 2 239 2 213 2 332 2 270 1 326 1 244 2 
342 1 193 1 264 1 
342 2 293 1 92 1 191 1 264 2 307 1 
342 1 264 1 
342 1 264 1 
92 1 191 1 
92 1 191 1 
92 1 191 1 
342 1 261 1 264 1 
342 1 261 1 264 1 
342 1 261 1 264 1 
342 1 264 1 229 1 
342 1 264 1 229 1 
342 1 264 1 229 1 
342 1 53 1 264 1 13 1 349 1 291 1 
342 1 141 1 53 1 203 1 264 1 13 1 120 1 349 1 291 1 
323 1 129 1 89 2 4 1 313 2 
115 1 129 1 313 1 
323 1 115 1 313 1 
323 1 184 1 89 1 129 2 4 1 313 3 
323 1 189 1 89 1 129 1 4 1 313 2 
26 1 141 5 273 1 122 1 143 1 165 1 106 2 333 1 51 1 52 1 71 1 88 1 336 1 55 1 114 1 224 2 35 1 202 4 133 1 116 3 283 1 318 1 58 2 117 1 135 1 136 1 60 2 41 2 186 1 269 3 268 1 120 5 
26 3 141 9 273 3 122 2 143 1 106 6 2 1 86 1 242 5 333 2 51 3 52 1 71 3 88 3 336 1 114 6 339 1 35 2 202 7 133 2 116 8 58 6 117 3 135 2 59 1 136 1 257 1 60 5 79 1 303 5 98 1 41 6 186 4 269 9 120 9 
141 3 26 1 273 1 122 1 165 1 106 2 333 1 51 1 52 1 71 1 88 2 224 1 35 1 202 2 133 1 116 3 58 2 117 1 135 1 60 3 257 1 41 2 186 1 268 1 269 4 120 3 
141 4 26 2 273 2 122 1 165 1 106 4 2 1 333 1 51 2 52 1 71 2 88 3 339 1 224 2 35 1 202 3 133 1 116 5 58 4 117 2 135 1 60 4 257 1 41 4 98 1 186 2 269 7 268 1 120 4 
97 1 
231 1 153 1 
17 1 285 1 
285 1 252 1 
231 1 285 1 302 1 29 1 30 1 252 1 
285 1 30 1 252 1 
281 1 285 1 
26 1 328 4 48 1 47 7 38 1 228 2 301 2 117 1 137 3 183 1 259 1 195 1 7 1 230 3 54 1 287 1 23 1 24 1 
26 3 273 3 0 1 292 4 227 1 328 10 48 2 47 20 57 1 284 1 228 1 301 1 117 3 137 4 51 3 71 3 195 3 7 1 230 10 22 3 267 1 187 1 290 1 
209 2 7 1 328 1 190 1 47 1 48 1 99 1 233 1 228 1 127 1 177 1 216 1 
26 1 328 4 48 1 47 7 38 1 228 2 301 2 117 1 137 3 183 1 259 1 195 1 7 1 230 3 54 1 287 1 24 1 
26 1 328 4 48 1 47 7 38 1 228 2 301 2 117 1 137 3 183 1 259 1 195 1 7 1 230 3 54 1 287 1 24 1 
163 2 94 1 331 1 78 1 285 1 12 2 215 1 205 1 295 1 5 1 170 1 174 1 81 2 337 1 221 1 250 1 306 1 282 1 65 2 252 1 121 1 315 1 236 1 
163 1 44 1 327 1 331 1 215 1 295 1 5 1 170 1 174 1 113 1 129 1 73 1 250 1 282 1 251 1 313 2 115 1 78 1 12 1 323 1 184 1 81 1 305 1 347 1 65 1 25 1 
163 1 44 1 327 1 331 2 108 1 215 1 295 1 5 1 170 1 174 1 113 1 128 1 222 1 129 1 73 1 250 1 282 1 251 1 313 2 115 1 180 1 78 2 12 1 323 1 184 1 81 1 347 1 65 1 102 1 25 1 
163 1 44 1 331 3 108 1 215 1 295 1 5 1 170 1 174 1 128 1 337 1 129 1 222 2 73 1 250 1 282 1 251 1 313 2 115 1 180 1 78 3 12 1 323 1 184 1 81 1 305 1 347 1 65 1 25 1 68 1 
163 1 44 1 331 2 108 1 215 1 295 1 174 1 128 1 222 2 129 1 250 1 282 1 251 1 313 2 115 1 180 1 78 2 12 1 323 1 184 1 81 1 305 1 65 1 25 1 68 1 
140 1 
162 1 141 2 122 1 143 1 211 1 106 1 215 2 30 1 333 1 50 1 295 2 174 3 114 2 250 2 282 2 35 1 252 2 131 1 315 1 133 1 116 1 94 2 285 2 136 1 15 1 265 1 42 1 120 2 121 1 
141 3 123 1 330 1 275 1 213 1 332 1 146 1 52 2 6 1 298 2 114 2 201 1 10 1 225 1 316 1 134 1 320 1 136 1 60 2 158 1 139 1 289 1 120 3 326 1 
141 2 43 1 316 1 123 1 330 1 275 1 320 1 134 1 213 1 60 2 332 1 146 1 52 2 6 1 298 3 139 1 289 1 201 1 326 1 120 2 10 1 
141 3 43 1 123 1 330 1 275 1 213 1 332 1 146 1 52 3 6 1 298 3 114 2 201 1 10 1 225 1 74 1 316 1 134 1 320 1 136 1 60 3 158 1 139 1 289 1 120 3 326 1 
141 3 308 1 123 1 143 1 330 1 106 1 210 1 275 1 213 1 333 1 332 1 146 1 110 1 52 2 169 1 6 1 298 2 173 1 112 1 114 3 201 1 35 1 10 1 225 2 74 2 179 1 133 1 316 1 116 1 134 1 320 1 136 1 60 2 158 1 139 1 289 1 120 3 326 1 
141 2 308 1 123 1 143 1 330 1 106 1 275 1 213 1 333 1 332 1 146 1 52 2 169 1 6 1 298 2 201 1 35 1 10 1 316 1 133 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
141 2 308 1 123 1 143 1 330 1 106 1 275 1 210 1 213 1 333 1 332 1 146 1 52 2 110 1 169 1 6 1 298 2 201 1 35 1 10 1 179 1 133 1 316 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
141 2 308 1 123 1 143 1 330 1 106 1 275 1 210 1 213 1 333 1 332 1 146 1 52 2 110 1 169 1 6 1 298 2 201 1 35 1 10 1 179 1 133 1 316 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
141 2 308 1 123 1 143 1 330 1 106 1 275 1 213 1 333 1 332 1 167 1 146 1 52 2 6 1 298 2 201 1 35 1 150 1 10 1 179 1 133 1 316 1 116 1 134 1 320 1 60 2 260 1 139 1 289 1 120 2 326 1 
141 2 308 1 43 1 123 1 143 1 330 1 106 1 210 1 275 1 213 1 333 1 332 1 146 1 110 1 52 2 169 1 6 1 298 3 112 1 114 1 201 1 35 1 10 1 225 1 74 1 179 1 133 1 316 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
141 2 308 1 43 1 123 1 143 1 330 1 106 1 210 1 275 1 213 1 333 1 332 1 146 1 110 1 52 2 169 1 6 1 298 3 112 1 114 1 201 1 35 1 10 1 225 1 74 1 179 1 133 1 316 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
141 2 308 1 123 1 143 1 330 1 106 1 275 1 213 1 333 1 332 1 146 1 52 2 6 1 298 2 201 1 35 1 150 1 10 1 316 1 133 1 116 1 134 1 320 1 60 2 139 1 289 1 120 2 326 1 
209 4 123 1 239 1 328 1 190 2 47 2 85 1 213 1 214 2 294 2 215 8 166 1 332 1 279 1 295 2 244 1 194 2 174 2 33 1 127 2 250 7 34 1 282 8 8 1 252 2 315 1 132 1 94 2 285 3 322 1 138 1 230 1 99 2 233 2 234 1 305 1 348 1 102 1 121 1 
142 1 26 1 209 2 273 1 238 1 239 1 123 1 328 1 190 1 47 3 214 1 213 1 332 1 51 1 297 1 244 1 124 1 194 1 71 1 247 1 126 1 127 1 301 1 117 1 137 1 16 1 230 2 99 1 233 1 
26 1 209 2 238 1 328 3 190 1 47 6 214 1 124 1 194 1 54 1 127 1 126 1 38 1 153 1 228 1 301 2 117 1 137 2 183 1 259 1 230 3 159 2 99 1 287 1 233 1 348 1 
26 2 292 3 209 4 273 2 274 1 328 8 238 4 190 2 47 14 214 1 168 1 51 2 296 1 297 1 194 2 124 11 195 1 71 1 217 1 127 2 126 11 132 1 57 1 284 1 301 1 117 1 137 2 159 1 230 6 99 2 234 1 233 2 22 3 
237 1 84 1 209 2 238 1 123 2 239 1 328 1 190 1 47 2 212 1 214 1 213 1 215 1 30 1 332 2 295 1 279 1 297 1 244 1 194 1 280 1 171 1 174 1 148 1 127 1 250 1 282 1 252 1 132 1 94 1 285 1 159 1 230 1 64 1 99 1 233 1 234 1 66 1 
209 6 84 1 273 2 123 3 47 20 309 2 212 2 213 1 214 3 215 3 279 1 51 2 124 7 54 1 174 2 127 3 126 7 282 3 132 1 91 2 94 1 228 1 285 2 14 1 137 8 183 1 230 10 287 1 99 3 234 1 233 3 103 2 66 2 26 3 239 1 238 7 328 10 190 3 240 1 28 2 332 3 30 2 295 2 244 1 297 1 194 3 195 4 71 2 72 1 148 2 250 3 252 2 38 1 301 4 117 3 259 1 159 2 305 1 266 2 
26 1 209 2 273 1 238 1 328 2 47 2 190 1 214 1 137 1 124 1 194 1 195 1 99 1 233 1 126 1 127 1 348 1 9 1 
209 2 238 1 47 2 190 1 301 1 214 1 117 1 137 1 124 1 194 1 71 1 230 2 80 1 99 1 233 1 126 1 127 1 348 1 
26 1 273 1 209 2 328 2 238 2 190 1 47 4 214 1 51 1 194 1 124 2 195 1 71 1 127 1 126 2 301 1 117 1 137 2 230 2 99 1 233 1 348 1 
26 1 209 2 273 1 238 1 328 2 47 2 190 1 214 1 137 1 124 1 194 1 195 1 99 1 233 1 126 1 127 1 34 1 9 1 
209 2 238 1 47 2 190 1 301 1 214 1 117 1 137 1 124 1 194 1 71 1 230 2 80 1 99 1 233 1 126 1 127 1 34 1 
26 1 273 1 209 2 328 2 238 2 190 1 47 4 214 1 51 1 194 1 124 2 195 1 71 1 127 1 126 2 34 1 301 1 117 1 137 2 230 2 99 1 233 1 
26 1 273 1 209 2 328 2 238 2 47 4 190 1 214 1 51 1 194 1 124 2 195 1 71 1 127 1 126 2 301 1 117 1 137 2 230 2 99 1 233 1 
209 2 328 1 123 1 47 2 190 1 212 1 214 1 215 1 30 1 332 1 295 1 194 1 174 1 148 1 127 1 250 1 282 1 252 1 132 1 94 1 285 1 159 1 230 1 99 1 234 1 233 1 103 1 66 1 
209 2 328 1 123 1 47 2 190 1 214 1 215 1 30 1 334 1 332 1 295 1 194 1 174 1 175 1 127 1 248 1 250 1 282 1 252 1 132 1 94 1 285 1 159 1 230 1 99 1 234 1 233 1 66 1 
26 1 273 1 209 2 328 2 238 2 190 1 47 4 214 1 51 1 297 1 194 1 124 2 195 1 71 1 127 1 126 2 301 1 117 1 137 2 230 2 99 1 233 1 
26 1 273 1 209 2 238 2 328 2 123 1 47 4 190 1 28 1 212 1 214 1 215 1 30 1 332 1 295 1 51 1 124 2 194 1 71 1 195 1 174 1 148 1 126 2 127 1 250 1 282 1 252 1 301 1 117 1 285 1 137 2 230 2 99 1 233 1 102 1 103 1 66 1 
142 1 26 1 209 2 273 1 239 1 123 1 328 2 238 1 190 1 47 3 214 1 213 1 332 1 51 1 297 1 244 1 194 1 124 1 71 1 195 1 247 1 127 1 126 1 117 1 137 1 286 1 230 1 99 1 233 1 
104 1 69 1 26 3 292 2 209 4 273 3 328 9 190 2 47 19 276 1 51 3 195 3 71 3 335 1 127 2 220 1 249 1 177 1 90 1 57 1 284 1 301 3 117 3 154 2 137 6 230 10 119 2 99 2 233 2 22 1 
104 2 69 1 26 2 209 2 292 2 273 2 328 10 190 1 47 18 109 1 51 2 195 1 71 1 335 2 127 1 220 1 177 1 223 1 90 1 341 1 93 1 284 2 301 1 117 1 154 1 137 2 230 8 119 2 99 1 233 1 22 2 82 1 267 2 207 1 
104 2 69 1 26 4 292 4 209 4 273 4 328 15 190 2 47 32 276 1 109 1 51 4 195 3 71 4 335 1 127 2 220 1 223 1 177 1 90 1 341 1 300 1 93 1 57 1 284 3 301 2 117 4 154 1 137 5 230 17 119 3 99 2 233 2 22 3 82 1 267 1 207 1 
104 2 69 1 26 4 292 4 209 4 273 4 328 16 190 2 47 31 276 1 109 1 51 4 195 3 71 3 335 1 127 2 220 1 223 1 177 1 90 1 341 1 300 1 93 1 57 1 284 3 301 3 117 3 154 1 137 6 230 15 119 3 99 2 233 2 22 3 82 1 267 2 207 1 
104 1 69 1 26 8 292 4 209 2 273 7 328 26 190 1 47 50 109 1 168 2 51 7 195 7 71 7 335 1 54 1 127 1 220 1 223 1 177 1 90 1 341 1 93 1 57 2 38 1 284 2 228 1 301 7 117 8 154 1 137 14 183 1 259 1 230 24 119 3 287 1 99 1 233 1 22 4 82 1 267 1 207 1 
209 2 123 2 328 1 190 1 47 2 214 1 213 2 294 2 215 2 166 1 332 2 295 1 297 1 194 1 174 1 127 1 250 2 282 2 252 1 132 1 152 1 11 1 285 1 39 1 182 1 61 1 138 1 230 1 99 1 233 1 234 1 
94 1 285 1 277 1 215 1 12 1 295 1 174 1 206 1 250 1 282 1 252 1 236 1 315 1 121 1 
115 1 44 1 277 1 215 1 12 1 295 1 40 1 323 1 147 1 184 1 174 1 305 1 129 1 347 1 250 1 282 1 25 1 313 2 
115 1 44 1 277 1 215 2 12 1 295 1 40 1 323 1 147 1 184 1 174 1 305 1 129 1 347 1 250 2 282 2 102 1 25 1 313 2 
115 1 44 1 215 1 12 1 295 1 323 1 147 1 184 1 174 1 305 1 262 1 129 1 347 1 250 1 282 1 25 1 313 2 
70 1 
133 1 143 1 116 1 241 1 106 1 333 1 60 1 157 1 52 1 35 1 
26 2 273 2 116 5 309 1 106 5 58 5 117 2 60 5 156 2 51 2 71 2 63 1 41 5 88 5 269 10 
141 1 114 1 136 1 60 1 120 1 52 1 
162 1 141 1 122 1 143 1 211 1 106 1 215 2 30 1 333 1 50 1 295 2 174 3 114 2 250 2 282 2 35 1 252 2 131 1 315 1 133 1 116 1 94 2 285 2 136 1 15 1 265 1 42 1 161 1 120 1 121 1 
116 1 153 1 106 1 241 1 60 1 157 1 52 1 
141 1 143 1 164 1 106 1 333 1 52 1 169 1 88 1 114 1 35 1 133 1 116 1 321 1 136 1 60 2 269 1 120 1 
133 1 143 1 94 1 285 2 302 1 215 1 30 1 333 1 295 1 17 1 174 2 118 1 198 1 250 1 282 1 35 1 252 1 
141 1 272 1 26 4 292 2 273 4 122 1 143 2 106 8 109 1 333 2 51 4 168 1 52 2 71 4 111 1 88 8 114 1 223 1 35 2 131 1 133 2 93 1 116 13 57 1 284 1 58 8 117 4 136 1 60 7 156 5 63 1 41 8 22 2 82 1 207 1 269 13 120 1 
141 1 26 1 123 1 27 1 239 1 143 1 210 1 106 1 213 1 333 1 332 1 244 1 196 1 247 1 299 1 35 1 178 1 133 1 116 1 156 1 183 1 259 1 287 1 326 1 271 1 120 1 
209 2 123 3 239 2 27 1 47 1 190 1 212 1 213 2 214 1 215 1 332 3 30 1 295 1 244 2 194 1 148 1 174 1 247 2 127 1 250 1 282 1 252 1 132 1 94 1 285 1 159 1 230 1 99 1 233 1 304 1 103 1 66 1 
133 1 122 1 143 1 116 1 228 1 106 2 58 2 333 1 60 4 52 2 41 2 88 2 269 4 35 1 131 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
53 1 349 1 
342 1 264 1 
26 1 328 2 47 5 301 1 117 1 137 1 183 1 259 1 230 3 287 1 271 1 
26 1 209 2 273 1 328 2 190 1 47 2 137 1 195 1 99 1 233 1 127 1 177 1 
26 1 209 2 273 1 328 2 190 1 47 4 301 1 117 1 137 2 51 1 71 1 195 1 230 2 99 1 233 1 127 1 177 1 
209 4 328 1 47 3 190 2 276 1 301 1 137 2 183 1 259 1 195 1 230 2 324 1 99 2 233 2 127 2 177 1 267 1 
26 3 292 3 0 1 209 6 273 2 328 10 190 3 47 21 276 1 51 2 195 2 71 2 54 1 127 3 177 1 227 1 38 1 284 1 301 2 117 3 137 4 183 1 259 1 230 11 287 1 99 3 233 3 22 3 267 1 187 1 271 1 67 1 
26 1 209 2 328 3 190 1 47 7 195 1 54 1 127 1 38 1 301 1 117 1 137 2 183 1 259 1 230 4 99 1 287 1 233 1 267 1 271 1 
26 1 328 3 47 6 153 1 38 1 228 1 301 2 117 1 137 2 183 1 259 1 230 3 54 1 287 1 
26 1 209 2 273 1 328 2 190 1 47 4 301 1 117 1 137 2 51 1 71 1 195 1 230 2 99 1 233 1 127 1 67 1 
26 1 292 2 273 1 328 3 47 7 57 1 284 1 301 1 117 1 51 1 137 2 71 1 195 1 230 4 22 1 
26 3 273 2 292 2 328 8 47 17 51 2 168 1 296 1 71 2 195 1 54 1 57 1 38 1 301 2 117 3 137 3 183 1 259 1 230 9 287 1 22 2 267 1 271 1 
292 1 230 1 47 1 
328 1 47 1 22 1 
26 1 209 2 273 1 328 3 190 1 47 6 309 1 301 2 117 1 51 1 137 3 195 1 71 1 230 3 99 1 233 1 127 1 67 1 
26 2 292 1 209 2 273 2 328 6 47 12 190 1 109 1 51 2 195 1 71 2 127 1 177 1 223 1 93 1 284 1 301 1 117 2 137 2 230 6 99 1 233 1 22 1 82 1 207 1 
26 1 328 3 47 6 301 1 117 1 137 2 183 1 259 1 195 1 230 3 287 1 
230 1 47 1 324 1 267 1 
26 1 209 2 292 1 328 4 190 1 47 8 38 1 284 1 228 1 301 2 117 1 137 2 183 1 259 1 54 1 230 4 287 1 99 1 233 1 127 1 22 1 82 1 177 1 
26 2 292 2 209 4 273 1 328 6 47 11 190 2 51 1 195 1 54 1 127 2 177 1 57 1 38 1 284 1 228 1 301 2 117 1 137 3 183 1 259 1 230 5 287 1 99 2 233 2 22 1 82 1 67 1 
26 2 292 1 209 4 273 2 328 6 47 13 190 2 109 1 51 2 195 1 71 2 127 2 177 1 223 1 93 1 284 1 301 1 117 2 137 2 230 7 99 2 233 2 22 1 82 1 207 1 267 1 67 1 
26 2 292 1 209 4 273 2 328 7 47 11 190 2 109 1 51 2 195 1 71 1 127 2 177 1 223 1 93 1 284 1 301 1 117 1 137 2 230 4 99 2 233 2 22 1 82 1 267 1 207 1 67 1 
26 1 209 2 292 1 328 4 190 1 47 8 38 1 284 1 228 1 301 2 117 1 137 2 183 1 259 1 54 1 230 4 287 1 99 1 233 1 127 1 22 1 82 1 177 1 
26 2 292 1 209 2 273 2 328 6 47 12 190 1 109 1 51 2 195 1 71 2 127 1 177 1 223 1 93 1 284 1 301 1 117 2 137 2 230 6 99 1 233 1 22 1 82 1 207 1 
26 2 292 1 209 4 273 2 328 7 47 12 190 2 109 1 51 2 195 1 71 1 127 2 177 1 223 1 93 1 284 1 301 1 117 1 137 2 230 5 99 2 233 2 22 1 82 1 207 1 267 2 67 1 
26 2 292 1 209 4 273 2 328 7 47 12 190 2 276 1 109 1 51 2 195 2 71 1 127 2 177 1 223 1 93 1 284 1 301 2 117 1 137 4 230 5 99 2 233 2 22 1 82 1 207 1 267 2 
26 1 328 3 47 7 38 1 301 3 117 1 137 6 183 3 259 3 195 3 230 4 54 2 287 1 
26 2 292 1 209 4 273 2 328 7 47 12 190 2 276 1 109 1 51 2 195 1 71 1 127 2 177 1 223 1 93 1 284 1 301 1 117 1 137 2 230 5 99 2 233 2 22 1 82 1 207 1 267 2 
6 1 159 1 123 1 213 1 3 1 332 1 188 1 
123 1 213 1 3 1 145 1 332 1 96 1 6 1 18 1 159 1 346 1 188 1 56 1 
151 1 94 1 285 1 215 4 295 1 174 1 250 4 149 1 282 4 102 1 252 1 315 1 121 1 
211 1 285 1 215 2 30 1 50 1 295 1 72 1 174 2 263 1 250 2 265 1 282 2 42 1 252 1 
323 1 115 1 174 1 94 1 215 1 250 1 25 1 282 1 295 1 313 1 
285 1 215 2 295 1 61 1 138 1 174 1 305 1 250 2 102 1 282 2 252 1 
151 1 94 1 285 3 215 5 322 1 295 2 138 1 174 2 33 1 263 1 250 4 282 5 102 1 252 2 121 1 315 1 
151 1 94 1 285 3 215 5 295 2 138 1 174 2 33 1 263 1 101 1 250 4 282 5 102 1 252 2 121 1 315 1 
174 1 94 1 153 1 285 1 215 1 250 1 282 1 295 1 252 1 121 1 315 1 
239 1 123 2 94 1 212 1 213 1 285 1 215 1 30 1 332 2 279 1 295 1 244 1 159 1 174 1 250 1 282 1 252 1 66 1 
123 2 239 1 212 1 213 2 215 1 332 2 30 2 295 1 279 1 244 2 174 1 281 1 219 1 250 1 282 1 252 2 320 1 285 3 159 1 263 1 289 1 326 1 66 1 
123 2 239 1 213 2 215 2 334 1 332 2 30 2 295 1 279 1 244 2 174 1 281 1 219 1 250 2 149 1 282 2 252 2 320 1 285 3 159 1 263 1 289 1 326 1 66 1 
141 1 17 1 231 1 19 1 114 1 263 1 285 1 215 1 250 1 282 1 120 1 
141 1 17 1 231 1 114 1 263 1 285 1 215 1 250 1 282 1 155 1 120 1 
174 1 215 1 250 1 282 1 295 1 8 1 
94 2 85 1 294 1 302 1 285 3 322 1 215 7 30 1 50 1 295 2 138 1 174 3 305 1 33 1 250 6 130 1 265 1 102 1 282 7 8 1 252 2 
209 4 123 2 47 6 212 1 213 1 214 2 215 1 279 1 124 1 174 1 54 1 127 2 126 1 282 1 228 1 285 1 137 2 183 1 230 3 99 2 287 1 233 2 102 1 103 1 66 1 26 1 238 1 239 1 328 3 190 2 28 1 332 2 30 1 295 1 244 1 297 1 194 2 148 1 250 1 252 1 38 1 301 2 39 1 117 1 259 1 159 2 266 1 
202 1 141 1 76 1 133 1 143 1 94 1 285 1 215 1 333 1 155 1 49 1 17 1 231 1 312 1 114 1 250 1 282 1 35 1 120 1 161 1 
174 2 231 1 198 1 285 1 302 1 215 1 250 1 30 1 282 1 295 1 8 1 252 1 
239 1 123 2 94 1 213 1 285 1 215 1 30 1 332 2 334 1 279 1 295 1 244 1 159 1 174 1 250 1 282 1 252 1 66 1 
302 1 285 1 215 1 30 1 50 1 295 1 174 2 263 1 250 1 130 1 265 1 282 1 252 1 
208 1 123 1 152 1 11 1 213 1 332 1 181 1 182 1 245 1 
246 1 329 1 181 1 
208 1 159 1 258 1 181 1 245 1 
208 1 141 2 123 1 239 1 27 1 329 1 275 1 213 1 332 1 244 1 245 1 52 1 246 1 311 1 196 1 247 1 176 1 299 1 10 1 178 1 202 1 320 1 60 1 258 1 181 1 289 1 120 2 326 2 
5 1 170 1 327 1 331 1 180 1 128 1 78 1 108 1 
1 1 105 1 331 4 180 2 78 4 108 2 5 1 344 1 62 1 170 1 197 1 128 3 222 2 314 1 
327 1 331 2 180 1 78 2 108 1 5 1 170 1 100 1 235 1 128 1 222 1 325 1 
1 1 327 1 331 3 105 2 180 1 78 3 108 1 125 1 5 1 344 2 170 1 128 1 
254 1 255 1 128 2 200 2 
5 1 172 1 170 1 327 1 331 1 78 1 
5 1 170 1 327 1 331 2 77 1 180 1 128 1 78 2 222 1 108 1 
144 1 
5 1 170 1 327 1 331 1 180 1 128 1 78 1 108 1 
153 1 180 1 128 1 108 1 
5 1 170 1 331 1 180 1 128 1 78 1 108 1 
163 1 331 1 65 1 
1 1 327 1 331 3 105 1 256 1 180 1 78 3 108 1 5 1 344 2 170 1 128 1 
5 1 170 1 331 2 180 1 310 1 128 1 78 2 222 1 108 1 
5 1 62 1 115 1 170 1 327 1 331 1 21 1 128 1 78 1 129 1 313 1 
5 1 170 1 327 1 331 1 180 1 128 1 78 1 
5 1 170 1 327 1 331 1 180 2 78 1 108 1 
327 1 192 1 331 2 180 1 78 2 243 1 5 2 170 2 31 1 128 1 
327 1 331 3 77 1 180 1 78 3 108 1 95 1 5 1 62 1 170 1 197 1 128 2 222 2 
226 1 115 1 327 1 331 2 180 1 78 2 108 1 323 1 5 1 184 1 170 1 128 1 129 1 222 1 313 2 
327 1 343 1 331 4 180 1 310 1 78 4 108 1 5 2 62 1 170 2 197 1 128 2 222 2 
5 1 344 1 170 1 327 1 331 3 77 1 180 1 128 1 78 3 222 1 108 1 
62 1 197 1 128 1 314 1 
180 1 128 1 

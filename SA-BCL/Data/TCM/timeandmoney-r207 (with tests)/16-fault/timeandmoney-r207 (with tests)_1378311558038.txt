#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 8 (149,195) (149,195) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) 284 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 273 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) 284 238 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 46 261 255 (164,196) 117 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 276 247 79 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 276 247 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 233 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 46 261 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 46 261 165 314 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 46 150 321 (100,132) (22,279) (22,279) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 46 150 321 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 42 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 273 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 46 150 321 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 46 261 255 (164,196) 117 216 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) (56,177) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 46 77 259 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 46 150 321 (100,132) (100,132) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) 284 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 46 261 165 115 161 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 46 150 321 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 233 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 46 261 255 (164,196) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 75 (164,196) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 75 (142,193) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 46 261 165 65 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 46 261 255 (142,193) 90 (56,177) (56,177) (241,293) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 75 (142,193) 43 173 (241,293) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 46 261 165 115 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 46 150 321 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 46 261 45 151 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 46 77 259 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 46 77 209 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 46 77 291 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 46 261 255 (164,196) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 46 261 165 65 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 644 | 0 -> -1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 2 184 1 258 1 217 3 50 1 222 1 8 1 264 1 312 2 103 1 17 1 63 5 116 4 33 7 244 1 171 2 121 1 37 9 82 1 41 1 295 1 44 1 336 9 210 1 
301 2 184 1 258 1 217 3 50 1 222 1 8 1 264 1 312 2 103 1 17 1 63 5 116 4 33 7 244 1 171 2 121 1 37 9 82 1 41 1 295 1 44 1 336 9 210 1 
301 2 184 2 116 3 217 2 50 2 33 4 244 1 8 1 171 1 121 2 312 2 37 7 60 1 103 1 226 1 17 2 82 1 149 1 63 3 195 1 154 1 295 1 336 7 71 1 210 1 
184 2 301 2 258 1 217 3 50 2 222 1 8 1 264 1 60 1 312 2 226 1 103 1 149 1 17 2 195 1 63 5 154 1 71 1 116 4 33 6 244 1 171 2 121 2 37 9 82 1 295 1 336 9 210 1 
184 2 301 2 258 1 217 4 50 2 222 1 8 1 264 1 60 1 312 2 226 1 103 1 149 1 17 2 195 1 63 6 154 1 71 1 116 5 33 7 244 1 171 2 121 2 37 10 82 1 295 1 336 10 210 1 
184 2 301 2 258 1 217 2 50 2 8 1 264 1 60 1 312 2 226 1 103 1 149 1 17 2 195 1 63 4 154 1 71 1 116 3 33 4 244 1 171 1 121 2 37 7 82 1 295 1 336 7 210 1 
301 1 184 1 116 2 258 1 217 1 50 1 33 3 222 1 8 1 264 1 171 2 312 1 37 4 17 1 82 1 63 3 295 1 336 4 
301 1 283 1 258 1 50 1 264 1 121 1 312 1 37 2 226 1 82 1 17 1 63 1 154 1 21 1 23 1 336 2 
301 2 116 1 258 1 217 1 33 1 244 1 264 1 121 1 312 2 37 3 82 1 63 2 336 3 
323 1 34 1 233 1 
270 1 215 2 323 1 
322 2 155 1 287 2 169 2 277 2 191 1 174 2 318 2 
46 1 185 1 94 2 188 1 303 1 261 1 191 1 267 2 193 1 277 1 24 1 318 1 284 1 322 1 287 1 169 1 324 1 242 1 174 1 248 2 177 1 90 1 255 1 
48 1 322 1 169 1 287 1 265 1 191 1 174 1 126 1 277 1 318 1 
114 1 92 1 322 1 323 1 220 1 34 1 265 1 174 1 250 1 228 1 127 1 277 1 316 1 317 1 
114 1 92 2 322 1 323 1 169 1 287 1 220 1 34 1 265 1 174 1 228 1 127 2 277 1 317 1 318 1 
176 1 92 1 127 1 170 1 111 1 
176 1 92 2 167 1 323 1 127 2 34 1 111 1 330 1 
92 1 127 1 111 1 
92 1 48 1 322 1 169 1 287 1 243 1 265 1 191 1 174 1 176 1 126 1 127 1 277 1 318 1 
323 1 
214 1 176 1 92 2 167 1 323 1 127 2 34 1 111 1 
202 1 92 5 3 1 320 2 138 1 219 2 167 1 323 1 305 1 34 1 308 1 310 1 12 2 176 2 152 1 127 5 315 1 232 1 111 2 
155 1 233 1 
235 1 239 1 322 2 169 1 287 1 265 1 174 2 61 1 155 1 277 2 318 1 
288 1 10 1 338 1 
193 1 267 1 46 1 185 1 273 1 94 1 188 1 303 1 261 1 90 1 248 1 255 1 
46 1 185 1 322 1 188 1 94 1 303 1 287 1 96 1 261 1 328 1 174 1 248 1 193 1 267 1 277 1 318 1 90 1 255 1 
235 1 322 2 287 2 169 1 265 1 328 1 174 2 61 1 155 1 277 2 318 2 
39 1 48 1 322 2 287 2 277 2 265 1 174 2 318 2 
322 3 169 1 287 3 265 1 328 1 174 3 61 1 155 1 277 3 318 3 
48 1 322 1 287 1 277 1 265 1 174 1 318 1 
235 1 322 1 239 1 169 1 287 1 265 1 174 1 277 1 318 1 
92 1 46 1 185 1 186 1 188 1 94 1 303 1 96 1 220 1 261 1 265 1 191 1 193 1 267 1 228 1 277 3 317 1 318 3 114 1 235 1 284 1 238 1 322 3 169 2 287 3 328 1 174 3 248 1 177 1 127 1 90 1 255 1 
302 1 250 1 322 2 155 1 287 1 277 2 328 1 174 2 318 1 
114 1 92 1 235 1 186 1 322 3 323 1 169 1 287 3 144 1 96 1 220 1 265 1 328 2 174 3 228 1 127 1 277 3 317 1 318 3 
235 1 322 2 169 1 287 2 328 1 10 1 174 2 277 2 338 1 318 2 
193 1 267 1 46 1 185 1 94 1 188 1 303 1 261 1 90 1 248 1 255 1 
267 1 46 1 185 1 94 1 188 1 303 1 117 1 261 1 248 1 255 1 164 1 
136 1 304 1 52 1 221 1 224 1 307 2 10 2 311 4 225 1 227 1 107 1 160 1 67 1 110 1 231 1 28 1 288 2 240 2 294 1 182 1 183 1 297 2 296 1 338 2 
39 1 322 1 287 1 220 1 277 1 265 1 174 1 318 1 
105 1 189 1 
105 1 189 1 
260 1 89 1 
260 1 89 1 
105 1 189 1 260 1 89 1 
105 1 168 1 189 1 
105 1 168 1 189 1 
105 1 168 1 189 1 
105 1 189 1 6 1 
139 1 105 1 189 1 
105 2 189 2 260 1 89 1 319 1 162 1 
105 1 189 1 6 1 
105 1 189 1 6 1 
92 1 105 1 127 1 189 1 145 1 276 1 247 1 211 1 79 1 
105 1 189 1 145 1 276 1 247 1 211 1 
17 1 184 1 50 1 
17 1 283 1 50 1 
0 1 184 2 283 1 50 3 99 1 101 1 
0 1 184 1 283 1 197 1 50 2 101 1 
0 1 184 1 283 1 50 2 101 2 
92 5 215 3 138 3 219 1 146 2 224 1 59 1 12 1 13 1 19 1 270 1 315 1 67 1 110 1 231 1 232 2 111 1 69 1 201 2 113 1 281 1 320 1 167 1 323 2 32 1 34 1 331 2 205 1 176 4 83 1 127 5 207 1 
92 9 3 1 215 9 138 8 219 2 262 1 224 3 147 1 59 4 148 1 12 2 13 2 104 1 270 3 315 1 67 3 110 3 231 3 232 6 111 6 69 2 201 6 320 2 167 1 323 5 170 5 34 1 172 5 331 6 332 1 205 1 176 7 127 9 181 1 207 3 
92 3 3 1 138 3 215 4 219 1 146 1 224 1 59 1 12 1 13 1 270 2 67 1 110 1 231 1 232 2 69 1 113 1 201 2 320 1 323 3 34 1 331 2 176 2 83 1 127 3 207 1 
92 4 3 1 215 7 138 5 219 1 146 2 224 2 147 1 59 2 148 1 12 1 13 1 270 3 67 2 110 2 231 2 232 4 69 1 201 4 113 1 320 1 323 4 34 1 331 4 176 3 83 1 127 4 181 1 207 2 
2 1 233 1 
75 1 
300 1 
46 1 261 1 
25 1 
46 1 
165 1 46 1 314 1 261 1 
203 1 285 1 52 3 240 4 57 1 223 1 307 5 118 1 309 1 311 9 18 2 108 1 157 1 275 1 182 2 67 1 110 1 
203 1 285 1 52 3 240 4 57 1 223 1 307 5 118 1 309 1 311 9 18 2 108 1 157 1 275 1 182 2 67 1 110 1 
203 1 285 1 52 3 240 4 57 1 223 1 307 5 118 1 309 1 311 9 18 2 108 1 157 1 275 1 182 2 87 1 67 1 110 1 
136 1 218 1 187 1 304 1 52 10 57 1 223 2 97 1 224 3 307 16 309 2 311 29 18 3 271 4 108 2 107 1 275 1 157 5 160 1 67 4 231 2 110 3 203 2 285 1 240 13 326 1 118 1 35 1 253 1 207 3 182 5 297 2 131 1 88 3 
136 1 203 2 285 1 52 6 304 1 240 8 57 2 223 1 307 10 309 2 311 18 246 1 15 1 18 2 194 1 108 1 107 1 157 3 275 1 182 3 297 2 160 1 67 3 110 3 
184 1 1 1 301 1 185 1 258 1 93 1 94 1 303 1 50 2 55 1 264 1 99 1 312 1 17 1 267 1 63 1 66 1 198 1 283 1 237 1 33 1 119 1 121 1 248 1 37 2 82 1 178 1 333 1 130 1 336 2 
184 1 1 1 301 1 185 1 258 1 94 1 303 1 50 2 98 1 264 1 99 1 312 1 17 1 267 1 63 1 66 1 198 1 283 1 237 1 33 2 119 1 121 1 248 1 37 3 178 1 333 1 130 1 336 3 212 1 339 1 
1 1 184 1 185 1 258 1 94 1 303 1 50 2 98 1 264 1 99 1 267 1 17 1 63 1 198 1 283 1 237 1 33 2 119 1 121 1 248 1 37 2 333 1 130 1 336 2 212 1 
1 2 301 1 46 1 321 1 5 1 188 1 94 1 119 2 121 2 100 1 248 1 312 1 37 1 267 1 150 1 22 1 130 2 279 1 336 1 339 1 
184 1 1 1 301 1 185 1 93 1 94 1 303 1 50 2 99 1 312 1 17 1 267 1 66 1 198 1 283 1 237 1 119 1 121 1 248 1 37 1 82 1 178 1 333 1 130 1 336 1 212 1 
81 1 
92 2 257 1 95 1 265 2 191 1 266 1 12 1 16 3 277 2 200 1 111 1 112 1 114 1 287 1 34 1 204 1 290 1 123 2 126 1 127 2 128 1 213 1 138 1 48 1 219 1 140 1 220 1 228 1 156 1 230 1 315 1 316 1 232 1 317 1 318 1 320 1 322 2 323 1 169 1 76 1 243 1 174 2 250 1 179 1 256 2 
92 2 257 1 95 1 265 2 191 1 266 1 12 1 16 3 277 2 200 1 112 1 111 1 114 1 287 1 34 1 204 1 290 1 123 2 126 1 127 2 128 1 213 1 138 1 48 1 219 1 140 1 220 1 228 1 156 1 230 1 315 1 316 1 232 1 317 1 318 1 320 1 322 2 323 1 169 1 76 1 243 1 174 2 250 1 179 1 256 2 
92 2 257 1 138 1 219 1 95 1 220 1 265 1 266 1 12 1 16 2 228 1 230 1 315 1 277 1 316 1 232 1 200 1 317 1 114 1 234 1 320 1 322 1 204 1 174 1 123 1 250 1 127 2 129 1 256 1 
92 2 46 1 320 1 321 1 138 1 219 1 167 1 30 1 74 1 188 2 94 2 248 2 13 1 12 1 267 2 150 1 85 1 127 2 315 1 232 1 111 2 
214 1 92 3 257 1 95 1 220 1 265 1 266 1 16 2 228 1 156 1 277 1 316 1 200 1 317 1 111 2 114 1 322 1 167 1 204 1 174 1 250 1 127 3 
214 1 92 3 257 1 95 1 220 1 265 1 266 1 16 3 228 1 277 1 316 1 200 1 111 1 317 1 114 1 322 1 167 1 323 1 76 1 34 1 204 1 174 1 250 1 127 3 
214 1 92 3 257 1 95 1 220 1 265 1 266 1 16 3 228 1 156 1 277 1 316 1 200 1 317 1 111 2 114 1 167 1 322 1 323 1 76 1 34 1 204 1 174 1 250 1 179 1 127 3 
214 1 92 3 257 1 48 1 95 1 220 1 265 2 191 1 266 1 16 2 272 1 228 1 156 1 277 2 316 1 200 1 111 2 317 1 318 1 114 1 322 2 167 1 323 1 287 1 169 1 243 1 34 1 204 1 174 2 250 1 179 1 126 1 127 3 
92 2 257 1 138 1 219 1 95 1 220 1 265 1 266 1 12 1 16 2 228 1 230 1 315 1 277 1 316 1 232 1 200 1 317 1 114 1 320 1 322 1 204 1 174 1 123 1 290 1 250 1 127 2 129 1 256 1 
92 2 257 1 95 1 265 2 191 1 266 1 12 1 16 2 277 2 200 1 112 1 114 1 287 1 34 1 204 1 290 1 123 2 126 1 127 2 213 1 138 1 219 1 140 1 48 1 220 1 228 1 230 1 315 1 316 1 232 1 317 1 318 1 320 1 322 2 323 1 169 1 243 1 174 2 250 1 256 2 
92 2 257 1 95 1 265 2 191 1 266 1 12 1 16 2 277 2 200 1 112 1 114 1 287 1 34 1 204 1 290 1 123 2 126 1 127 2 213 1 138 1 219 1 140 1 48 1 220 1 228 1 230 1 315 1 316 1 232 1 317 1 318 1 320 1 322 2 323 1 169 1 243 1 174 2 250 1 256 2 
114 1 92 2 257 1 322 1 95 1 220 1 204 1 265 1 266 1 174 1 16 2 250 1 228 1 127 2 42 1 277 1 316 1 200 1 317 1 
136 1 304 1 52 3 221 1 57 1 10 1 307 4 309 1 311 8 18 1 107 1 275 1 157 1 155 3 160 1 67 1 110 1 233 1 28 1 203 1 285 1 288 1 240 4 182 2 297 2 296 1 338 1 
47 1 136 2 137 1 52 2 304 2 53 1 221 1 224 2 10 11 307 8 311 14 271 3 269 1 107 2 155 1 157 1 160 2 67 2 231 1 110 1 72 1 28 2 288 11 326 1 240 6 206 1 335 1 182 1 253 1 207 2 297 4 88 3 338 4 
46 1 185 1 136 1 137 1 94 1 188 1 303 1 53 1 304 1 221 1 96 1 261 1 307 1 311 2 193 1 267 1 273 1 107 1 277 1 160 1 109 1 318 1 236 1 28 1 322 1 287 1 240 1 328 1 248 1 174 1 175 1 335 1 297 2 90 1 338 1 255 1 
136 1 188 1 94 1 53 1 304 1 221 1 96 1 311 1 267 1 107 1 277 1 160 1 318 1 28 1 322 1 287 1 240 1 328 1 120 1 174 1 248 1 335 1 297 2 
46 1 136 1 321 1 137 1 28 1 188 1 94 2 304 1 324 1 240 1 221 1 306 1 263 1 307 1 311 2 248 2 267 2 150 1 107 1 335 1 297 2 160 1 
136 1 49 1 52 1 304 1 53 1 221 1 224 1 10 1 307 1 311 3 107 1 160 1 277 1 67 1 231 1 110 1 318 1 235 1 28 1 322 1 288 1 169 1 287 1 240 2 174 1 182 1 207 1 297 2 338 1 
136 1 28 1 52 1 288 1 304 1 221 1 224 1 10 1 307 2 311 2 107 1 157 1 183 1 296 1 297 2 160 1 67 1 338 1 
136 1 28 1 52 1 288 1 304 1 221 1 240 2 10 1 311 2 107 1 294 1 182 1 296 1 297 2 160 1 231 1 110 1 338 1 
136 1 304 1 52 1 221 1 224 1 307 2 10 2 311 4 107 1 160 1 67 1 231 1 110 1 28 1 288 2 240 2 207 1 182 1 297 2 296 1 338 2 
136 1 28 1 52 1 288 1 304 1 221 1 306 1 224 1 10 1 307 2 311 2 107 1 157 1 183 1 297 2 160 1 67 1 338 1 
136 1 28 1 52 1 288 1 304 1 221 1 240 2 306 1 10 1 311 2 107 1 294 1 182 1 297 2 160 1 231 1 110 1 338 1 
136 1 304 1 52 2 221 1 306 1 224 1 307 2 10 2 311 4 107 1 157 1 160 1 67 1 231 1 110 1 28 1 288 2 240 2 207 1 182 1 297 2 338 2 
136 1 304 1 52 1 221 1 224 1 307 2 10 2 311 4 107 1 160 1 67 1 231 1 110 1 28 1 288 2 240 2 207 1 182 1 297 2 338 2 
193 1 177 1 267 1 46 1 185 1 94 1 188 1 303 1 261 1 90 1 248 1 255 1 
267 1 46 1 185 1 216 1 94 1 188 1 303 1 117 1 261 1 248 1 255 1 164 1 
136 1 304 1 53 1 52 1 221 1 224 1 307 2 10 2 311 4 107 1 160 1 67 1 231 1 110 1 28 1 288 2 240 2 207 1 182 1 297 2 338 2 
46 1 185 1 94 1 303 1 55 1 56 1 261 1 248 1 267 1 177 1 193 1 90 1 255 1 
136 1 52 1 304 1 53 1 221 1 224 1 307 2 10 1 311 3 268 1 107 1 157 1 160 1 277 1 67 1 110 1 231 1 318 1 235 1 28 1 322 1 169 1 287 1 288 1 240 1 174 1 207 1 297 2 338 1 
7 1 97 2 11 1 15 1 18 1 271 4 106 1 107 4 20 1 275 1 110 3 26 1 27 1 203 1 285 1 289 1 36 1 292 1 207 4 297 8 136 4 52 8 304 4 57 1 224 4 307 21 311 38 309 1 157 5 158 2 160 4 67 5 231 2 73 1 240 17 326 3 245 1 251 1 252 4 253 1 182 3 88 3 254 1 
136 2 304 2 52 3 7 1 224 2 307 7 311 13 15 1 271 2 20 1 107 2 157 2 158 1 160 2 67 2 110 1 231 1 26 1 73 1 326 1 240 6 36 1 252 2 182 1 253 1 207 2 297 4 88 1 254 1 
136 3 304 3 52 8 57 1 97 2 7 1 224 4 307 19 309 1 11 1 311 36 15 1 18 1 271 3 106 1 20 1 107 3 275 1 157 4 158 1 160 3 67 5 231 3 110 4 26 1 27 1 203 1 285 1 326 2 240 17 245 1 36 1 292 1 251 1 252 3 253 1 207 4 182 4 297 6 88 2 254 1 
136 2 304 2 52 2 7 1 224 2 307 6 311 11 15 1 271 2 20 1 107 2 157 1 158 1 160 2 67 2 110 1 231 1 26 1 73 1 29 1 326 1 240 5 252 1 182 1 253 1 207 2 297 4 88 1 254 1 
136 3 52 4 304 3 97 2 7 1 224 3 307 14 311 26 11 1 15 1 271 2 106 1 20 1 107 3 157 2 158 2 160 3 67 3 110 2 231 2 26 1 27 1 240 12 326 2 245 1 36 1 292 1 251 1 252 4 182 2 207 3 297 6 88 2 254 2 
135 1 46 1 136 1 137 1 94 2 259 1 53 1 304 1 221 1 263 1 9 1 307 1 311 2 267 2 62 1 107 1 277 2 160 1 28 1 322 2 324 2 240 1 77 1 248 2 174 2 335 1 297 2 208 1 
184 1 1 1 283 1 185 1 237 1 94 2 50 2 303 1 55 1 99 1 248 2 80 1 17 1 267 2 178 1 333 1 298 1 133 1 212 1 
184 1 1 1 283 1 185 1 4 1 237 1 94 1 50 2 303 1 99 1 248 1 17 1 267 1 178 1 333 1 298 1 212 1 
1 1 46 1 321 1 188 1 94 1 248 1 100 1 80 1 267 1 150 1 132 1 
184 1 1 1 283 1 185 1 237 1 94 1 50 2 303 1 99 1 248 1 80 1 17 1 267 1 178 1 333 1 298 1 133 1 212 1 
199 1 
46 1 185 1 284 1 322 1 188 1 94 1 303 1 169 1 287 1 261 1 191 1 174 1 248 1 193 1 177 1 267 1 277 1 90 1 318 1 255 1 
320 1 215 4 138 1 219 1 30 1 323 4 34 2 331 2 12 1 13 1 18 1 270 2 315 1 232 2 201 2 
138 1 323 1 34 1 232 1 308 1 310 1 233 1 
92 1 138 1 215 1 219 1 12 1 14 1 270 1 315 1 232 1 111 1 320 1 167 1 323 2 34 1 122 1 290 1 127 1 
115 1 165 1 46 1 320 1 219 1 188 1 94 1 261 1 248 1 12 1 267 1 315 1 161 1 
92 1 215 6 138 8 219 2 224 2 11 1 13 1 12 2 102 1 271 1 270 3 106 1 229 2 315 2 67 2 232 5 231 2 110 2 111 1 201 5 27 1 320 2 30 1 167 1 323 5 326 1 245 1 34 2 329 1 331 5 292 1 127 1 334 1 207 2 88 1 
213 1 92 1 138 2 48 1 219 1 57 1 265 1 309 1 191 1 12 1 194 1 229 2 315 1 277 1 67 2 232 2 110 1 318 1 320 1 203 1 322 1 169 1 287 1 243 1 174 1 126 1 127 1 334 1 
320 1 138 1 219 1 323 1 34 1 308 1 310 1 12 1 315 1 232 1 
215 10 138 5 323 5 325 1 224 2 331 5 270 5 229 2 334 1 207 2 67 2 232 5 231 2 110 2 201 5 
92 1 167 1 323 1 127 1 34 1 111 1 
92 1 46 1 138 1 219 1 94 2 188 2 12 1 13 1 267 2 150 1 315 1 232 1 111 2 320 1 321 1 74 1 30 1 167 1 248 2 85 1 127 1 337 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
145 1 276 1 
105 1 189 1 
136 1 304 1 52 3 57 1 307 5 311 10 309 1 15 1 18 1 271 1 106 1 107 1 275 1 157 1 160 1 67 1 110 1 203 1 285 1 240 5 326 1 182 2 297 2 88 1 
136 2 304 2 52 4 57 1 224 1 307 7 309 1 311 13 15 1 18 1 271 2 106 1 107 2 275 1 157 2 160 2 67 2 110 1 70 1 203 1 285 1 240 6 326 1 182 2 253 1 207 1 297 4 88 1 
136 4 304 4 52 3 97 2 224 2 307 7 311 12 11 1 15 1 271 1 106 1 107 4 157 2 160 4 67 2 231 1 110 1 70 1 27 1 240 5 326 1 245 1 292 1 207 2 182 1 297 8 88 1 
136 4 304 4 52 3 97 2 224 2 307 7 311 12 11 1 15 1 271 1 106 1 107 4 157 1 160 4 67 2 231 1 110 1 70 1 27 1 240 5 326 1 245 1 292 1 207 2 182 2 297 8 88 1 
136 1 304 1 52 3 57 1 307 5 311 10 309 1 15 1 18 1 271 1 106 1 107 1 275 1 157 1 160 1 67 1 110 1 203 1 285 1 240 5 326 1 182 2 297 2 88 1 
136 3 304 3 52 4 97 2 224 2 307 7 311 12 11 1 15 1 271 1 106 1 107 3 157 2 160 3 67 2 231 1 110 1 27 1 240 5 326 1 245 1 292 1 207 2 182 2 297 6 88 1 
136 4 304 4 52 5 57 1 97 2 224 2 307 11 309 1 311 20 11 1 15 1 18 1 271 1 106 1 107 4 275 1 157 2 160 4 67 3 231 1 110 2 70 1 27 1 203 1 285 1 240 9 326 1 245 1 292 1 207 2 182 3 297 8 88 1 
136 2 304 2 52 4 224 2 307 7 311 12 11 1 15 1 271 1 106 1 107 2 157 2 160 2 67 2 231 1 110 1 27 1 73 1 240 5 326 1 245 1 292 1 207 2 182 2 297 4 88 1 
203 2 285 2 52 4 240 2 307 2 309 2 311 4 275 1 157 2 182 2 
136 4 304 4 52 5 57 1 97 2 224 2 307 11 309 1 311 20 11 1 15 1 18 1 271 1 106 1 107 4 275 1 157 2 160 4 67 3 231 1 110 2 27 1 73 1 203 1 285 1 240 9 326 1 245 1 292 1 207 2 182 3 297 8 88 1 
136 2 203 1 285 1 52 3 304 2 240 4 57 1 97 1 307 4 311 8 309 1 18 1 107 2 157 1 275 1 182 2 297 4 160 2 67 1 110 1 
203 1 285 1 52 3 240 4 57 1 307 4 309 1 311 8 18 1 275 1 157 1 182 2 67 1 110 1 233 1 
136 1 52 2 304 1 240 2 224 1 307 2 311 4 107 1 157 1 182 1 207 1 297 2 160 1 67 1 110 1 231 1 70 1 
52 2 326 1 240 4 224 1 307 3 311 7 271 2 157 1 182 1 253 1 207 1 67 1 110 1 231 1 88 1 
47 1 136 2 52 9 304 2 57 1 97 2 224 2 307 11 309 2 311 23 18 1 271 2 107 2 153 1 275 1 157 4 160 2 67 3 231 2 110 3 203 2 285 1 240 12 206 1 207 2 253 1 182 5 297 4 88 2 
271 1 240 1 311 1 
307 1 88 1 311 1 
136 1 304 1 52 4 325 1 240 3 224 1 307 3 311 6 107 1 157 2 207 1 182 2 160 1 297 2 67 1 231 1 110 1 70 1 
136 1 304 1 52 4 224 2 307 7 311 12 11 1 15 1 271 1 106 1 107 1 157 2 160 1 67 2 231 1 110 1 27 1 240 5 326 1 245 1 292 1 207 2 182 2 297 2 88 1 
203 1 52 2 240 3 57 1 307 3 311 6 309 1 157 1 182 1 67 1 110 1 
136 1 203 1 285 1 52 2 304 1 240 2 97 1 307 1 309 1 311 3 153 1 107 1 157 1 275 1 182 1 297 2 160 1 
203 1 52 4 240 5 57 1 307 5 309 1 311 10 194 1 157 2 182 2 67 2 110 2 
136 1 304 1 52 1 224 1 307 2 311 2 15 1 107 1 157 1 297 2 160 1 67 1 
136 1 52 1 304 1 240 2 224 1 307 2 311 4 15 1 107 1 182 1 207 1 297 2 160 1 67 1 110 1 231 1 
136 1 203 1 304 1 52 2 240 1 307 1 311 2 309 1 15 1 107 1 157 1 182 1 297 2 160 1 
136 5 187 1 304 5 52 12 57 2 97 2 224 3 307 17 309 3 311 34 15 1 18 1 271 4 153 1 107 5 275 1 157 6 160 5 67 5 231 2 110 4 70 1 73 1 203 3 285 1 240 17 326 1 35 1 182 6 253 1 207 3 131 1 297 10 88 3 
134 1 302 1 250 1 322 1 155 1 277 1 174 1 
134 1 302 1 166 1 141 1 286 1 322 1 174 1 250 1 155 1 159 1 277 1 163 1 
267 1 46 1 150 1 321 1 94 1 188 1 233 1 248 1 
46 1 185 1 322 1 188 1 94 1 303 1 287 1 261 1 328 1 174 1 248 1 267 1 193 1 277 1 318 1 255 1 
46 1 185 1 322 1 94 1 303 1 287 1 261 1 328 1 174 1 248 1 267 1 193 1 64 1 277 1 318 1 255 1 
46 1 185 1 322 1 94 1 303 1 287 1 261 1 328 1 174 1 248 1 267 1 64 1 277 1 318 1 255 1 164 1 
267 1 92 1 196 1 64 1 94 1 127 1 75 1 248 1 
267 1 92 1 64 1 142 1 94 1 127 1 75 1 248 1 
267 1 185 1 94 1 303 1 180 1 248 1 
165 1 267 1 46 1 65 1 94 1 188 1 261 1 248 1 
46 1 185 1 136 1 94 1 303 1 53 1 304 1 221 1 55 1 261 1 56 1 267 1 193 1 107 1 277 1 160 1 318 1 28 1 322 1 287 1 328 1 174 1 248 1 177 1 293 1 297 2 208 1 90 1 255 1 
92 1 320 1 219 1 142 1 188 1 94 1 75 1 241 1 173 1 248 1 12 1 176 1 267 1 127 1 315 1 43 1 337 1 
165 1 115 1 267 1 46 1 94 1 180 1 261 1 248 1 
267 2 46 1 150 1 321 1 94 2 188 1 55 1 248 2 
45 1 267 1 46 1 151 1 274 1 94 1 261 1 248 1 
17 1 267 1 283 1 185 1 333 1 94 1 188 1 50 1 303 1 248 1 
267 2 46 1 94 2 259 1 55 1 77 1 248 2 212 1 
267 2 46 1 94 2 188 1 55 1 209 1 77 1 248 2 
291 1 267 2 46 1 94 2 188 1 55 1 77 1 248 2 
46 1 185 1 322 1 188 1 94 1 303 1 287 1 261 1 328 1 174 1 248 1 267 1 277 1 318 1 255 1 164 1 
165 1 267 1 46 1 64 1 65 1 94 1 261 1 248 1 
135 1 322 1 31 1 9 1 174 1 62 1 124 1 277 1 299 1 
114 1 186 1 31 1 220 1 327 1 265 1 192 1 124 1 228 1 278 1 299 1 317 1 
124 1 155 1 31 1 327 1 299 1 
114 1 92 2 186 1 323 1 31 2 220 1 34 1 327 2 265 1 176 1 192 1 249 1 124 1 228 1 127 2 155 1 278 1 317 1 299 2 
103 1 301 1 82 1 63 1 258 1 154 1 33 1 264 1 336 3 37 3 312 1 
116 1 63 1 217 1 54 1 
63 1 264 1 
63 1 258 1 264 1 233 1 
301 1 63 1 258 1 264 1 336 1 37 1 312 1 
119 1 336 1 121 1 
91 1 301 1 282 1 258 1 264 1 312 1 37 3 82 1 63 1 154 2 336 3 280 1 
301 1 63 1 258 1 33 1 264 1 171 1 336 2 37 2 312 1 
17 1 184 1 301 1 82 1 116 1 63 1 50 1 295 1 336 1 37 1 312 1 
301 1 82 1 63 1 264 1 336 1 37 1 312 1 
301 1 82 1 258 1 264 2 336 1 37 1 312 1 
301 2 58 1 264 1 312 2 37 2 82 1 63 1 86 1 40 1 336 2 
301 1 116 1 258 1 217 1 33 2 264 1 312 1 37 3 103 1 82 1 63 2 336 3 210 1 
301 1 184 1 283 1 258 1 50 2 33 1 264 1 99 1 312 1 37 2 82 1 17 1 63 1 336 2 68 1 
301 2 116 1 258 1 217 1 33 2 222 1 264 1 171 1 312 2 37 4 82 1 63 2 336 4 
301 1 82 1 63 1 258 1 264 1 336 1 37 1 312 1 
282 1 301 1 116 1 258 2 217 1 54 1 33 2 264 2 37 4 312 1 63 3 154 1 336 4 280 1 
301 1 258 1 33 1 264 1 78 1 312 1 37 2 313 1 82 1 63 1 41 1 336 2 
301 1 282 2 258 1 264 1 312 1 37 3 38 1 82 1 63 1 154 2 336 3 280 1 
63 2 125 1 51 1 190 2 
301 1 82 1 84 1 336 1 37 1 312 1 
103 1 301 1 82 1 63 1 258 1 33 1 264 1 336 2 37 2 312 1 
143 1 
301 1 82 1 63 1 258 1 264 1 336 1 37 1 312 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 97 234 311 69 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 97 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 97 234 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 97 234 127 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 97 234 311 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 97 234 311 326 174 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 97 234 311 326 174 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 97 234 311 326 17 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 97 234 87 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 97 234 87 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 97 234 311 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 352 107 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 345 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 352 107 10 115 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 123 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 228 43 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
329 1 70 1 215 1 266 1 302 2 304 1 353 1 335 1 32 3 176 2 155 2 15 3 177 1 
329 1 70 6 302 2 304 1 353 3 335 1 32 9 98 1 204 2 176 2 338 1 177 1 60 1 105 1 288 1 236 1 166 2 8 2 214 1 215 2 266 4 370 2 91 1 155 5 222 1 15 9 93 1 51 1 
329 1 70 6 302 2 304 1 353 3 335 1 32 9 98 1 204 2 176 2 338 1 177 1 60 1 105 1 288 1 236 1 166 2 8 2 214 1 215 2 266 4 370 2 91 1 155 5 222 1 15 9 93 1 51 1 
329 1 70 7 302 2 304 1 353 4 335 1 32 10 98 1 204 2 176 2 338 1 177 1 60 1 105 1 288 1 236 1 166 2 8 2 214 1 215 2 266 5 370 2 91 1 155 6 222 1 15 10 93 1 51 1 
329 1 70 4 302 2 304 1 353 2 335 1 32 7 98 1 204 2 176 2 338 1 177 1 60 1 105 1 236 1 166 2 8 1 214 1 215 2 266 3 370 2 91 1 155 4 222 1 15 7 93 1 51 1 
288 1 166 1 329 1 70 3 8 2 266 2 302 1 304 1 353 1 335 1 32 4 98 1 370 1 204 1 176 1 155 3 15 4 51 1 
329 1 166 1 215 1 302 1 29 1 304 1 335 1 32 2 370 1 91 1 176 1 155 1 15 2 60 1 272 1 94 1 
70 7 329 1 302 2 304 1 353 3 335 1 32 9 98 1 204 1 176 2 177 1 105 1 41 1 288 1 166 1 8 2 9 1 266 4 215 1 370 1 155 5 222 1 15 9 51 1 
70 7 329 1 302 2 304 1 353 3 335 1 32 9 98 1 204 1 176 2 177 1 105 1 41 1 288 1 166 1 8 2 9 1 266 4 215 1 370 1 155 5 222 1 15 9 51 1 
318 1 145 1 361 1 333 1 88 1 148 1 89 1 151 1 55 1 372 1 359 1 324 1 298 1 178 1 
35 1 
89 2 139 1 35 1 179 1 359 1 18 1 62 1 148 2 
349 1 262 1 238 1 42 2 321 2 179 2 148 5 89 5 79 2 3 1 35 1 373 1 359 2 131 1 132 1 18 1 106 1 116 1 62 1 
123 1 35 1 18 1 
21 2 332 1 27 1 253 1 138 1 201 1 233 2 280 1 55 1 281 1 1 1 308 2 282 1 102 1 61 1 144 1 318 2 145 3 237 1 7 2 108 1 320 1 167 1 111 1 128 1 363 1 88 2 151 1 372 3 190 1 219 1 153 1 324 2 13 1 221 1 348 1 271 2 298 2 68 1 
318 1 145 1 151 1 55 1 372 1 324 1 333 1 88 1 298 1 178 1 
194 1 145 1 52 1 147 1 148 1 89 1 90 1 151 1 372 1 35 1 324 1 297 1 18 1 95 1 
318 1 145 1 52 1 147 1 88 1 148 2 89 2 90 1 151 1 372 1 35 1 324 1 18 1 298 1 95 1 
89 1 287 1 179 1 359 1 148 1 
89 2 35 1 179 1 359 1 76 1 18 1 62 1 148 2 
89 1 179 1 148 1 
292 1 
318 2 145 2 55 1 372 2 190 1 324 2 88 2 298 2 
21 1 145 2 248 1 237 1 7 1 320 1 167 1 111 1 128 1 88 1 253 1 295 1 308 1 282 1 45 1 372 2 324 1 102 1 144 1 298 1 
318 1 145 2 112 1 88 1 372 2 5 1 190 2 324 2 298 1 
248 1 213 1 126 1 
21 1 145 1 342 1 7 1 237 1 320 1 167 1 111 1 128 1 253 1 308 1 282 1 372 1 190 1 102 1 144 1 
123 1 190 1 
318 1 194 1 145 5 180 1 88 4 295 1 205 1 45 2 372 5 258 1 5 1 190 1 324 5 298 4 
0 1 145 2 151 1 372 2 324 2 88 2 298 2 178 1 
318 1 145 3 45 1 372 3 190 1 324 3 88 3 298 3 
145 1 151 1 372 1 324 1 88 1 298 1 178 1 
318 1 145 1 151 1 372 1 5 1 324 1 112 1 88 1 298 1 
21 1 350 1 332 1 52 1 27 1 253 1 233 2 280 1 55 1 281 1 282 1 1 1 308 1 5 1 102 1 61 1 144 1 286 1 318 2 145 4 237 1 7 1 320 1 167 1 111 1 128 1 147 1 88 3 148 1 89 1 90 1 151 1 295 1 372 4 45 1 190 1 219 1 153 1 324 3 221 1 348 1 271 1 298 3 95 1 
194 1 145 2 372 2 45 1 190 1 180 1 324 2 88 1 298 1 
318 1 145 3 362 1 350 1 52 1 147 1 88 3 148 1 89 1 151 1 90 1 295 1 45 2 372 3 35 1 5 1 324 3 298 3 95 1 
318 1 145 2 248 1 213 1 88 2 45 1 372 2 5 1 324 2 298 2 
21 1 145 1 7 1 237 1 320 1 167 1 111 1 128 1 253 1 308 1 282 1 372 1 190 1 102 1 144 1 
21 1 145 1 6 1 7 1 237 1 320 1 73 1 167 1 128 1 253 1 308 1 372 1 190 1 102 1 144 1 
248 1 27 1 120 1 175 1 352 1 303 1 305 1 233 2 280 2 281 1 337 1 309 1 61 1 126 1 213 1 363 1 322 1 218 1 219 1 14 1 221 1 348 1 377 1 271 3 
145 1 0 1 151 1 372 1 324 1 88 1 298 1 95 1 
30 1 82 1 84 1 
22 1 146 1 92 1 312 1 82 2 84 2 
82 1 84 1 
82 1 84 1 
22 1 92 1 
22 1 92 1 
22 1 92 1 
162 1 82 1 84 1 
162 1 82 1 84 1 
162 1 82 1 84 1 
82 1 84 1 354 1 
82 1 84 1 354 1 
82 1 84 1 354 1 
25 1 184 1 278 2 148 2 89 2 368 2 307 1 34 1 58 2 35 1 37 2 312 1 47 2 224 1 82 2 48 3 40 1 84 2 245 1 
247 1 28 1 30 1 278 1 99 1 59 1 37 1 82 1 84 1 145 2 182 1 88 2 148 1 366 1 89 1 368 1 372 2 190 1 154 1 324 2 47 1 48 1 298 2 245 1 
370 1 166 1 204 1 
370 1 166 1 272 1 
204 2 166 3 63 1 263 1 101 1 272 1 
204 1 166 2 263 2 101 1 272 1 
204 1 166 2 263 1 101 1 49 1 272 1 
196 1 175 1 352 1 200 1 306 1 79 1 99 1 337 1 359 4 35 1 3 3 59 1 209 1 106 1 62 1 107 1 42 1 212 1 321 1 179 1 292 1 365 1 322 1 148 5 366 1 89 5 216 1 374 1 18 1 116 1 135 2 
300 5 175 3 352 3 200 2 306 1 163 1 56 1 79 2 337 3 358 1 359 7 35 2 3 8 209 3 210 1 106 3 62 1 317 1 287 5 107 3 42 2 179 6 321 2 292 3 322 3 366 4 148 9 89 9 216 3 374 2 296 1 131 1 18 1 116 1 
196 1 175 1 352 1 200 1 79 1 337 1 35 2 359 2 3 3 209 1 106 1 107 1 42 1 321 1 343 1 292 2 365 1 322 1 148 3 366 1 89 3 216 1 374 1 131 1 18 1 135 1 
196 1 175 2 352 2 200 1 163 1 56 1 79 1 337 2 35 2 3 5 359 3 209 2 106 2 107 2 42 1 321 1 343 1 292 3 365 1 322 2 148 4 366 2 89 4 216 2 374 1 296 1 131 1 18 1 135 2 
207 1 
123 1 128 1 267 1 
128 1 270 1 
237 1 128 1 102 1 
128 1 251 1 
128 1 102 1 
237 1 159 1 128 3 267 2 102 1 65 1 
301 1 230 1 351 1 75 1 198 2 175 3 53 2 356 2 78 2 280 6 337 3 124 1 83 1 363 8 169 1 149 1 218 5 377 4 271 14 
275 2 301 1 117 1 351 1 230 2 27 2 198 2 75 4 175 5 352 2 136 1 31 1 356 3 53 3 233 4 78 3 280 17 164 1 337 5 57 3 125 3 100 1 83 2 61 2 107 2 363 17 322 2 149 1 169 1 217 1 218 9 219 2 221 2 377 5 271 34 
275 1 301 1 351 1 230 1 27 2 175 3 75 2 198 2 233 4 53 2 356 2 78 2 280 7 337 3 310 1 61 2 83 1 363 9 149 1 218 7 191 1 219 2 221 2 377 5 271 16 
301 1 351 1 230 1 75 1 175 3 198 2 363 8 169 1 149 1 356 2 53 2 78 2 280 6 337 3 218 5 377 4 83 1 271 14 
301 1 351 1 230 1 175 3 198 2 75 3 363 8 169 1 149 1 356 2 53 2 78 2 280 6 337 3 218 7 377 4 83 1 271 14 
21 1 24 1 319 1 7 1 289 2 320 1 167 1 215 2 128 1 197 1 302 1 252 1 253 1 32 1 254 2 367 2 308 1 189 1 360 1 176 1 102 1 15 1 171 1 
21 1 329 1 302 1 253 1 32 1 254 1 204 1 308 1 176 1 166 2 7 1 289 1 109 1 167 1 63 1 215 1 344 1 367 1 186 1 370 1 294 1 375 1 15 1 244 1 272 1 273 1 
21 1 70 1 329 1 302 1 304 1 253 1 335 1 32 2 254 1 204 1 308 1 176 1 166 2 7 1 289 1 109 1 167 1 63 1 215 1 344 1 367 1 186 1 370 1 294 1 155 1 375 1 223 1 15 2 272 1 273 1 
21 1 70 2 302 1 304 1 253 1 335 1 32 3 254 1 204 1 308 1 176 1 166 2 7 1 289 1 63 1 109 1 167 1 215 1 344 1 64 1 367 1 186 1 370 1 155 1 375 1 15 3 171 1 244 1 272 1 273 1 
21 1 70 2 304 1 253 1 335 1 32 2 254 1 204 1 308 1 166 2 7 1 289 1 109 1 167 1 63 1 215 1 64 1 367 1 186 1 370 1 155 1 15 2 244 1 272 1 273 1 
160 1 
227 1 52 1 97 1 137 1 336 1 234 1 3 2 102 1 285 1 62 2 106 2 340 1 145 1 235 1 7 2 179 3 343 1 181 1 291 1 147 1 292 1 148 4 346 1 113 1 188 1 151 1 157 1 297 1 192 1 116 1 21 2 194 1 69 1 24 1 253 1 200 1 79 1 308 2 360 1 311 1 86 2 42 1 320 2 167 1 321 1 128 1 89 4 90 1 372 1 324 1 95 1 
194 1 145 1 86 2 52 1 97 1 147 1 291 1 148 2 346 1 89 2 336 1 151 1 90 1 372 1 324 1 157 1 297 1 340 1 95 1 
194 1 52 1 336 1 139 1 35 1 340 1 62 1 145 1 86 3 179 1 291 1 147 1 148 3 241 1 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 18 1 95 1 
194 1 145 1 86 2 52 1 97 1 147 1 291 1 148 2 346 1 89 2 336 1 151 1 90 1 234 1 372 1 324 1 157 1 297 1 340 1 95 1 
145 1 194 1 86 2 127 1 52 1 179 1 97 1 147 1 291 1 148 3 346 1 89 3 336 1 151 1 90 1 139 1 234 1 372 1 324 1 157 1 297 1 62 1 340 1 95 1 
194 1 227 1 52 1 97 1 336 1 79 1 234 1 3 1 311 1 285 1 62 1 106 1 340 1 145 1 235 1 86 2 42 1 179 1 321 1 343 1 181 1 291 1 147 1 292 1 148 3 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 192 1 116 1 95 1 
194 1 227 1 52 1 229 1 174 1 97 1 336 1 79 1 234 1 3 1 311 1 285 1 62 1 106 1 340 1 145 1 235 1 86 2 42 1 179 1 321 1 343 1 181 1 291 1 147 1 148 3 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 192 1 326 1 116 1 95 1 
194 1 227 1 52 1 229 1 174 1 97 1 336 1 79 1 234 1 3 1 311 1 285 1 62 1 106 1 340 1 145 1 235 1 86 2 42 1 179 1 321 1 343 1 181 1 291 1 147 1 148 3 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 192 1 326 1 116 1 95 1 
194 1 330 1 227 1 249 1 52 1 97 1 336 1 79 1 234 1 3 1 4 1 311 1 285 1 62 1 106 1 340 1 145 1 86 2 42 1 179 1 321 1 291 1 147 1 292 1 44 1 148 3 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 326 1 17 1 116 1 95 1 
194 1 145 1 86 2 87 1 52 1 97 1 147 1 291 1 148 2 346 1 89 2 336 1 151 1 90 1 234 1 372 1 324 1 157 1 297 1 340 1 95 1 
194 1 145 1 86 2 87 1 52 1 97 1 147 1 291 1 148 2 346 1 89 2 336 1 151 1 90 1 234 1 372 1 324 1 157 1 297 1 340 1 95 1 
194 1 330 1 227 1 52 1 249 1 97 1 336 1 79 1 234 1 3 1 311 1 285 1 62 1 106 1 340 1 145 1 86 2 42 1 179 1 321 1 291 1 147 1 292 1 44 1 148 3 346 1 89 3 90 1 151 1 372 1 324 1 297 1 157 1 116 1 95 1 
21 7 24 1 332 1 27 2 253 2 138 1 305 1 233 4 54 1 280 1 308 8 281 2 360 1 314 1 102 2 211 1 61 2 165 1 145 1 7 8 320 2 108 2 167 2 239 1 128 3 363 1 88 1 268 1 372 1 45 1 219 2 156 1 324 1 223 1 221 2 348 2 244 1 271 2 298 1 
318 1 145 1 107 1 27 1 363 2 352 1 88 1 277 1 233 2 281 1 337 1 372 1 219 1 5 1 324 1 46 1 221 1 348 1 271 2 61 1 298 1 
27 1 352 1 363 1 303 1 305 1 233 2 281 1 337 1 219 1 221 1 348 1 271 1 61 1 
248 1 213 1 27 1 175 1 322 1 305 1 233 2 280 2 281 1 218 1 219 1 221 1 14 1 348 1 377 1 271 2 61 1 126 1 
248 1 27 1 175 1 352 1 305 1 233 2 280 2 281 1 337 1 61 1 126 1 107 1 213 1 363 1 322 1 218 1 219 1 221 1 348 1 377 1 271 3 
27 1 352 1 363 1 303 1 233 2 281 1 337 1 219 1 221 1 348 1 314 1 271 1 61 1 
248 1 213 1 27 1 175 1 322 1 233 2 280 2 281 1 218 1 219 1 221 1 14 1 348 1 377 1 314 1 271 2 61 1 126 1 
248 1 27 1 175 1 352 1 233 2 280 2 281 1 337 1 314 1 61 1 126 1 107 1 213 1 363 1 322 1 218 1 219 1 221 1 348 1 377 1 271 3 
248 1 27 1 175 1 352 1 233 2 280 2 281 1 337 1 61 1 126 1 107 1 213 1 363 1 322 1 218 1 219 1 221 1 348 1 377 1 271 3 
21 1 332 1 27 1 253 1 138 1 233 2 280 1 282 1 308 1 281 1 102 1 144 1 61 1 145 1 237 1 7 1 320 1 167 1 111 1 128 1 363 1 372 1 190 1 153 1 219 1 221 1 348 1 271 2 
21 1 73 1 332 1 27 1 253 1 138 1 233 2 280 1 308 1 281 1 313 1 102 1 144 1 61 1 145 1 6 1 237 1 7 1 320 1 167 1 128 1 363 1 372 1 190 1 219 1 221 1 348 1 271 2 
248 1 27 1 175 1 352 1 233 2 280 2 281 1 337 1 61 1 126 1 107 1 213 1 363 1 322 1 218 1 219 1 46 1 221 1 348 1 377 1 271 3 
21 1 248 1 27 1 175 1 352 1 253 1 233 2 280 2 282 1 308 1 281 1 337 1 102 1 144 1 61 1 126 1 145 1 237 1 7 1 107 1 167 1 213 1 111 1 128 1 363 1 322 1 218 1 372 1 153 1 219 1 223 1 221 1 348 1 377 1 16 1 271 3 
27 1 175 1 352 1 233 2 255 1 280 1 281 1 337 1 5 1 61 1 318 1 145 1 107 1 363 1 88 1 322 1 372 1 219 1 46 1 324 1 221 1 348 1 271 2 298 1 
301 1 27 1 175 1 198 1 363 3 305 1 149 1 53 1 356 1 233 2 78 1 280 2 281 1 123 1 337 1 218 2 190 2 219 1 221 1 348 1 377 2 271 5 61 1 
23 1 248 10 332 1 27 2 175 2 352 2 334 1 138 1 121 1 233 4 122 1 280 8 281 1 337 2 57 3 81 1 125 3 61 2 126 10 107 2 213 2 363 6 322 2 217 1 218 1 190 1 219 2 46 1 221 2 348 2 377 1 271 14 
21 1 274 1 332 1 27 1 253 1 138 1 233 2 280 1 282 1 308 1 281 1 102 1 144 1 61 1 145 2 342 1 237 1 7 1 320 1 167 1 110 1 111 1 213 1 128 1 363 1 88 1 150 1 295 1 372 2 45 1 190 1 219 1 46 1 324 1 221 1 348 1 271 2 298 1 
332 1 175 4 138 1 53 1 233 6 280 10 281 3 282 2 337 4 102 2 61 3 104 2 144 2 145 3 7 1 237 2 107 1 111 2 11 1 149 1 151 1 295 1 190 3 153 2 348 3 16 2 67 1 298 1 68 1 21 1 248 2 158 1 301 1 351 1 27 3 75 1 198 2 352 1 253 2 356 2 78 2 308 1 126 2 320 1 167 2 213 2 128 2 363 10 88 1 322 1 218 6 45 1 372 3 219 3 324 1 46 1 170 1 221 3 377 5 271 20 
275 1 119 1 27 3 175 3 352 3 279 1 233 6 203 1 280 13 357 1 206 1 283 1 337 3 57 2 284 3 310 1 125 2 38 1 61 3 107 3 265 1 10 1 363 9 322 3 217 2 242 1 218 1 115 1 219 3 221 3 377 1 378 1 271 22 327 1 
275 1 119 1 27 2 175 3 352 3 279 1 233 4 280 14 357 1 206 1 283 1 337 3 284 4 57 2 310 1 38 2 125 2 61 2 107 3 265 1 10 1 363 10 322 3 217 2 242 1 218 1 115 1 219 2 221 2 377 1 271 24 134 1 327 2 
275 1 119 1 27 3 175 3 352 3 279 1 233 6 280 14 357 1 206 1 283 1 337 3 57 2 284 4 310 1 125 2 38 1 61 3 107 3 265 1 10 1 363 10 322 3 217 2 242 1 218 1 115 1 219 3 221 3 377 1 378 1 271 24 134 1 327 1 
275 1 119 1 27 3 175 3 352 3 279 1 233 6 280 14 357 1 206 1 283 1 337 3 57 2 284 4 310 1 125 2 38 1 61 3 107 3 265 1 10 1 363 10 322 3 217 2 242 1 218 1 115 1 219 3 221 3 377 1 378 1 271 24 134 1 327 1 
275 1 301 1 119 1 27 2 198 1 175 4 352 3 279 1 53 1 356 1 233 4 78 1 280 16 357 1 206 1 283 1 337 4 57 2 284 4 310 1 125 2 38 1 61 2 107 3 265 1 10 1 363 13 322 3 149 1 217 2 242 1 218 4 115 1 219 2 221 2 377 4 271 29 134 1 327 1 
368 1 34 1 37 1 312 1 47 1 82 1 40 1 19 1 84 1 278 1 
247 1 30 1 
368 1 331 1 259 1 37 1 47 1 82 1 84 1 278 1 193 1 
184 1 278 1 148 1 89 1 368 1 307 1 34 1 58 1 35 1 37 1 312 1 47 1 224 1 82 1 48 2 40 1 84 1 245 1 
184 1 278 1 148 1 89 1 368 1 307 1 34 1 58 1 35 1 37 1 312 1 47 1 224 1 82 1 48 2 40 1 84 1 245 1 
184 1 278 1 148 1 89 1 368 1 307 1 34 1 58 1 35 1 37 1 312 1 47 1 224 1 82 1 48 2 40 1 84 1 245 1 
162 1 261 1 146 1 
162 1 261 1 146 1 
74 1 354 1 
146 1 74 1 354 1 
182 1 28 1 
89 1 368 1 359 1 37 1 47 1 345 1 82 1 84 1 278 1 148 1 
162 1 261 1 
146 1 74 1 354 1 
21 2 332 1 27 1 250 1 253 1 138 1 233 2 54 1 280 1 308 2 281 1 140 1 208 1 102 1 211 1 61 1 145 2 7 2 108 2 167 1 128 1 363 1 372 2 219 1 46 1 220 1 324 2 221 1 348 1 271 2 226 1 
21 1 299 1 24 1 7 1 320 1 289 1 26 1 167 1 128 1 197 1 253 1 308 1 360 1 102 1 
21 1 299 1 166 2 7 1 289 1 63 1 109 1 167 1 253 1 364 1 370 1 204 1 308 1 375 1 143 1 272 1 244 1 273 1 
21 2 299 1 166 2 7 2 289 1 63 1 167 1 109 1 253 1 364 1 370 1 204 1 308 2 375 1 223 1 143 1 272 1 244 1 273 1 
21 1 166 2 7 1 289 1 63 1 109 1 167 1 253 1 370 1 204 1 308 1 375 1 50 1 143 1 272 1 244 1 273 1 
256 1 
238 1 42 1 321 1 79 1 373 1 35 1 3 1 18 1 116 1 106 1 
107 2 72 2 343 3 175 2 11 1 352 2 292 6 322 2 216 3 337 2 3 5 35 3 209 3 106 3 
89 1 35 1 179 1 18 1 148 1 62 1 
21 4 24 1 253 1 137 1 161 1 200 2 232 1 355 1 79 2 308 4 141 2 3 2 360 1 102 1 106 2 62 2 7 4 42 2 320 2 167 1 321 2 179 4 128 1 148 3 113 2 89 3 188 1 131 1 116 1 
123 1 238 1 3 1 35 1 373 1 18 1 106 1 
79 1 3 1 35 2 106 1 62 1 235 1 42 1 321 1 179 1 343 1 181 1 292 1 148 1 89 1 192 1 18 1 116 1 
52 2 175 2 276 2 231 2 337 2 3 8 102 1 62 3 106 5 237 1 7 1 107 2 179 5 343 4 183 2 11 2 292 8 65 1 148 5 113 1 187 1 347 2 18 1 116 3 21 1 72 2 352 2 253 2 200 2 79 3 308 1 35 5 209 4 260 1 39 1 315 2 42 3 320 1 167 1 321 3 128 6 267 2 322 2 89 5 216 4 270 3 
107 1 42 1 321 1 343 2 10 1 352 1 292 4 279 1 216 3 79 1 217 1 337 1 57 1 35 2 115 1 3 2 125 1 209 3 106 3 116 1 
72 2 351 1 229 1 198 1 175 1 333 1 356 1 78 1 55 1 79 1 337 2 3 2 106 2 341 1 178 1 318 1 145 1 361 1 42 1 321 1 88 1 148 1 89 1 151 1 372 1 324 1 116 1 298 1 
21 1 332 1 27 1 253 1 233 2 280 1 55 1 308 1 1 1 282 1 281 1 102 1 61 1 144 1 318 2 145 3 7 1 237 1 320 1 167 1 111 1 128 1 88 2 372 3 190 1 219 1 153 1 324 2 221 1 348 1 271 1 298 2 
42 1 321 1 343 2 292 4 200 1 53 1 113 1 216 2 79 1 3 1 35 4 209 2 18 2 106 2 116 1 
368 1 118 1 182 1 47 1 40 1 
368 1 47 1 129 1 
368 1 47 1 129 1 
368 1 47 1 129 1 
368 1 36 1 47 1 
368 1 36 1 47 1 
368 1 36 1 47 1 
368 1 47 1 
82 1 84 1 
351 1 27 1 75 2 198 1 175 2 363 5 233 2 356 2 78 2 280 5 337 2 218 5 219 1 310 1 221 1 377 3 61 1 271 10 
27 1 352 1 363 1 233 2 337 1 310 1 219 1 221 1 61 1 271 1 
107 1 27 1 175 1 352 1 363 1 322 1 233 2 280 2 337 1 218 1 310 1 219 1 221 1 377 1 61 1 271 3 
275 1 117 1 27 3 75 1 363 1 233 6 356 1 78 1 280 2 218 2 310 1 219 3 221 3 377 1 378 1 271 3 61 3 
275 1 301 1 351 1 27 4 198 2 75 3 175 5 352 2 136 1 53 1 356 2 233 8 78 2 280 15 164 1 337 5 57 3 310 1 125 3 100 1 85 1 61 4 107 2 363 14 322 2 149 1 217 1 218 7 219 4 221 4 377 4 378 1 271 29 
301 1 351 1 27 1 75 1 175 3 198 2 53 1 233 2 356 2 78 2 280 7 337 3 57 1 310 1 125 1 61 1 363 8 149 1 217 1 218 5 115 1 219 1 221 1 377 4 271 15 
275 1 301 1 351 1 27 3 75 1 198 2 175 5 352 2 279 1 53 1 356 2 233 6 78 2 280 13 206 1 337 5 57 1 310 1 125 1 61 3 85 1 107 2 10 1 363 11 322 2 149 1 217 1 242 1 218 6 115 1 219 3 221 3 377 5 271 24 
275 1 301 1 351 1 27 3 75 1 198 2 175 5 352 2 279 1 53 1 356 2 233 6 78 2 280 13 337 5 206 1 57 1 310 1 125 1 85 1 61 3 107 2 10 1 363 11 322 2 149 1 217 1 242 1 218 6 115 1 219 3 221 3 377 5 271 24 
275 1 301 1 351 1 27 3 198 2 75 3 175 5 352 2 279 1 53 1 356 2 233 6 78 2 280 13 337 5 206 1 57 1 310 1 125 1 85 1 61 3 107 2 10 1 363 11 322 2 149 1 217 1 242 1 218 8 115 1 219 3 221 3 377 5 271 24 
301 1 351 1 27 1 75 1 175 3 198 2 53 1 233 2 356 2 78 2 280 7 337 3 57 1 310 1 125 1 61 1 363 8 149 1 217 1 218 5 115 1 219 1 221 1 377 4 271 15 
275 1 27 2 175 2 352 2 279 1 233 4 280 7 337 2 206 1 57 1 310 1 125 1 61 2 107 2 10 1 363 4 322 2 217 1 242 1 218 2 115 1 219 2 221 2 377 2 271 11 
275 1 27 3 175 2 352 2 279 1 233 6 280 7 206 1 337 2 57 1 310 1 125 1 85 1 61 3 107 2 10 1 363 4 322 2 217 1 242 1 218 1 115 1 219 3 221 3 377 1 271 11 
275 1 27 3 175 2 352 2 279 1 233 6 280 7 206 1 337 2 57 1 310 1 125 1 61 3 107 2 10 1 363 4 322 2 217 1 242 1 218 2 115 1 219 3 221 3 377 2 271 11 378 1 
301 1 175 1 75 3 198 1 363 3 149 2 356 3 78 3 280 4 337 1 218 6 377 3 271 7 
275 1 27 3 175 2 352 2 279 1 233 6 280 7 206 1 337 2 57 1 310 1 125 1 61 3 107 2 10 1 363 4 322 2 217 1 242 1 218 1 115 1 219 3 221 3 377 1 271 11 378 1 
275 1 301 1 351 1 27 2 175 3 198 2 75 3 363 9 149 1 53 1 233 4 356 2 78 2 280 8 337 3 218 7 219 2 221 2 377 4 271 17 61 2 
301 1 198 1 175 1 363 3 149 1 53 1 356 1 78 1 280 2 123 1 337 1 218 2 377 2 271 5 
107 1 27 1 175 1 352 1 363 1 322 1 233 2 280 2 337 1 218 1 219 1 221 1 377 1 85 1 61 1 271 3 
280 1 217 1 57 1 125 1 363 1 271 2 
275 1 301 1 351 1 27 1 75 1 198 2 175 5 352 2 334 1 53 1 356 2 233 2 78 2 122 1 280 12 337 5 57 2 81 1 125 2 61 1 107 2 363 11 322 2 149 1 218 6 219 1 221 1 377 5 271 23 
280 1 125 1 271 1 
57 1 363 1 271 1 
107 1 27 1 175 1 11 1 352 1 363 2 322 1 233 2 280 3 337 1 218 2 219 1 221 1 377 2 61 1 85 1 271 5 
275 1 27 2 175 2 352 2 279 1 233 4 280 7 337 2 206 1 57 1 310 1 125 1 61 2 107 2 10 1 363 4 322 2 217 1 242 1 218 2 115 1 219 2 221 2 377 2 271 11 
198 1 175 1 75 1 363 3 356 1 78 1 280 3 337 1 218 2 377 1 271 6 
275 1 117 1 301 1 27 1 75 1 363 1 149 1 356 1 233 2 78 1 280 2 218 2 219 1 221 1 377 1 271 3 61 1 
194 1 145 1 228 1 180 1 151 1 372 1 190 1 324 1 68 1 
228 1 43 1 264 1 80 1 243 1 142 1 
21 4 24 1 7 4 320 1 167 1 128 1 253 1 308 4 360 1 376 1 223 1 102 1 172 1 
21 2 195 1 7 2 237 1 167 1 128 1 253 2 293 1 269 1 371 1 308 2 141 1 102 1 246 1 
21 1 370 1 166 1 7 1 308 1 320 1 167 1 253 1 272 1 273 1 
21 2 7 2 308 2 167 1 250 1 128 1 223 1 102 1 253 1 211 1 244 1 
21 4 24 1 7 5 320 1 167 2 128 3 253 2 268 1 308 5 141 1 360 1 156 1 223 1 102 2 211 1 172 1 
21 4 328 1 24 1 7 5 320 1 167 2 128 3 253 2 308 5 141 1 360 1 156 1 223 1 102 2 211 1 172 1 
21 2 7 2 237 1 167 1 239 1 128 2 267 1 65 1 253 2 187 1 308 2 223 1 102 1 
21 1 24 1 123 1 7 1 308 1 320 1 167 1 360 1 128 1 102 1 253 1 
21 1 145 2 237 1 7 1 320 1 167 1 111 1 128 1 88 1 253 1 308 1 45 1 372 2 190 1 324 1 102 1 144 1 298 1 
21 1 251 1 253 1 308 1 141 1 102 2 144 1 145 2 7 1 237 2 167 1 111 1 128 3 147 1 88 1 151 1 372 2 45 1 190 1 130 1 324 2 298 2 95 1 
21 2 251 1 253 1 308 2 141 1 102 2 144 1 145 2 6 1 7 2 237 2 167 1 128 3 147 1 88 1 151 1 372 2 45 1 190 1 130 1 324 2 376 1 298 2 95 1 
21 2 52 1 333 1 251 1 253 1 55 1 308 2 141 1 35 1 102 1 178 1 318 1 145 1 361 1 7 2 237 1 320 1 167 1 179 1 128 4 88 1 267 1 148 2 89 2 114 1 151 1 372 1 130 1 324 1 270 1 133 1 18 1 298 1 
21 3 237 1 7 3 320 1 167 1 52 1 179 1 128 4 251 1 267 1 253 1 148 2 89 2 308 3 35 1 141 1 130 1 347 1 376 1 270 1 102 1 18 1 
21 1 7 1 308 1 167 1 239 1 253 1 
165 1 21 6 7 7 237 1 108 1 320 2 167 2 239 1 128 3 65 1 253 3 268 1 269 1 308 7 66 1 156 1 223 1 102 2 211 1 244 1 246 1 
175 3 233 4 53 1 280 6 282 1 281 2 337 3 102 1 104 1 61 2 144 1 145 2 7 1 237 1 111 1 149 1 151 1 153 1 190 3 348 2 16 1 298 1 68 1 21 1 301 1 351 1 27 2 75 1 198 2 253 1 356 2 78 2 308 1 208 1 167 1 128 1 363 7 88 1 45 1 372 2 218 5 219 2 324 1 46 1 223 1 221 2 377 4 271 13 
21 1 52 1 276 1 231 1 355 1 308 1 79 2 3 1 35 1 359 1 315 1 106 1 62 1 7 1 238 1 320 1 42 2 321 2 179 2 128 2 267 1 148 3 89 3 373 1 347 1 270 1 18 1 116 2 
21 1 145 2 6 1 237 1 7 1 320 1 167 1 128 1 88 1 253 1 308 1 45 1 372 2 190 1 324 1 102 1 144 1 298 1 
21 1 7 1 237 1 167 1 128 1 65 1 253 2 269 1 308 1 141 1 66 1 102 1 246 1 
77 1 2 1 257 1 190 1 168 1 
350 1 52 1 147 1 168 2 148 2 89 2 77 2 33 1 151 1 90 1 2 1 35 1 359 1 257 2 190 1 325 1 18 1 225 1 95 1 
145 1 2 1 372 1 140 1 257 1 324 1 220 1 168 1 226 1 
33 1 2 1 225 1 
329 1 176 1 155 1 302 1 15 1 304 1 335 1 32 1 
70 2 290 1 266 1 302 1 304 2 353 1 335 2 32 4 202 1 176 1 155 3 15 4 60 1 103 1 
185 1 70 1 329 1 9 1 176 1 155 1 199 1 302 1 15 2 304 1 335 1 32 2 
329 1 173 1 302 1 304 1 335 1 32 3 202 2 176 1 155 1 15 3 103 1 60 2 
152 1 323 2 155 2 339 1 
329 1 12 1 176 1 302 1 15 1 32 1 
70 1 329 1 176 1 155 1 302 1 15 2 304 1 335 1 105 1 32 2 
71 1 
329 1 176 1 155 1 302 1 15 1 304 1 335 1 32 1 
123 1 155 1 304 1 335 1 
176 1 155 1 302 1 15 1 304 1 335 1 32 1 
367 1 215 1 15 1 
329 1 96 1 176 1 155 1 302 1 15 3 304 1 335 1 60 2 103 1 32 3 202 1 
70 1 8 1 176 1 155 1 302 1 15 2 304 1 335 1 32 2 
329 1 166 1 266 1 302 1 32 1 98 1 204 1 370 1 176 1 155 1 15 1 
329 1 176 1 155 1 302 1 15 1 335 1 32 1 
329 1 176 1 302 1 15 1 304 1 335 2 32 1 
369 1 329 1 176 2 155 1 240 1 302 2 15 2 335 1 32 2 20 1 
329 1 70 2 266 1 302 1 304 1 353 1 335 1 32 3 176 1 155 2 222 1 15 3 105 1 
166 2 329 1 70 1 63 1 302 1 304 1 335 1 32 2 204 1 370 1 176 1 155 1 15 2 272 1 316 1 
288 1 329 1 70 2 8 1 266 1 302 2 304 1 353 1 335 1 32 4 176 2 155 2 15 4 
70 1 329 1 302 1 304 1 335 1 32 3 176 1 155 1 15 3 60 1 105 1 
290 1 155 1 266 1 353 1 
155 1 335 1 

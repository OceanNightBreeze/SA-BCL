#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (139,272) (139,272) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (139,272) (139,272) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (139,272) (139,272) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (139,272) (139,272) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 276 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 276 30 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 276 30 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 168 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 358 195 352 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 242 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 348 (24,328) (24,328) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 1 155 1 139 1 270 1 256 1 10 1 360 1 272 1 82 1 
254 1 155 1 139 1 270 1 256 1 10 1 360 1 272 1 82 1 
254 1 155 1 139 1 270 1 256 1 10 1 360 1 272 1 82 1 
254 1 155 1 139 1 270 1 256 1 10 1 360 1 272 1 82 1 
254 4 315 1 276 1 256 1 173 2 348 2 135 3 82 1 311 1 92 1 270 1 249 2 250 1 124 1 360 4 26 1 
254 2 99 1 328 1 256 1 50 1 82 1 247 1 24 1 311 1 155 1 270 1 360 2 10 1 146 1 26 1 
254 3 328 1 256 1 173 1 77 1 348 1 135 1 82 2 24 1 155 1 92 1 270 2 360 3 
254 9 315 1 30 1 276 1 256 1 173 4 348 4 77 1 135 7 82 2 311 1 209 1 211 1 155 1 92 3 250 1 249 2 270 2 124 1 9 1 360 9 26 1 
254 9 315 1 30 1 276 1 256 1 173 4 348 4 77 1 135 7 82 2 311 1 209 1 211 1 155 1 92 3 250 1 249 2 270 2 124 1 9 1 360 9 26 1 
242 1 
66 1 143 2 108 1 
140 2 346 2 218 2 333 2 144 2 178 1 334 2 369 1 
289 1 0 1 218 2 149 2 244 1 150 1 198 1 121 1 199 2 90 1 293 1 154 2 93 1 320 1 323 1 178 1 253 1 131 1 205 1 327 1 346 3 306 1 184 1 368 1 329 1 369 1 80 1 17 2 83 1 140 2 332 1 215 1 333 2 284 1 144 2 334 3 39 2 
140 1 346 1 218 1 333 1 144 1 126 1 12 1 334 1 98 1 369 1 
218 1 196 1 202 1 299 1 126 1 12 2 98 1 27 1 231 1 232 1 346 2 31 1 369 1 108 1 140 1 333 1 144 2 262 1 38 1 334 2 40 1 
218 2 196 1 202 2 299 1 126 1 12 2 98 1 231 1 232 1 346 2 369 1 108 1 140 2 333 2 144 2 262 1 38 2 334 2 40 1 
243 1 202 1 176 1 347 1 38 1 
222 1 202 2 176 1 141 1 347 1 38 2 108 1 40 1 
202 1 176 1 38 1 
218 1 346 1 347 1 369 1 140 1 333 1 202 1 144 1 262 1 126 1 12 1 38 1 334 1 98 1 
108 1 
202 2 176 1 141 1 347 1 38 2 330 1 108 1 40 1 
218 1 357 2 294 1 202 5 176 2 252 2 177 2 321 1 126 1 12 1 98 1 325 4 300 1 72 1 28 1 346 1 347 2 133 4 309 2 257 2 165 2 258 1 369 1 108 1 166 1 58 1 280 1 140 1 167 1 214 1 333 1 141 1 144 1 36 1 262 1 334 1 38 5 40 1 
242 1 
346 2 218 1 140 1 333 1 112 1 144 2 145 1 178 2 334 2 
364 1 2 1 174 1 
131 1 327 1 205 1 0 1 346 1 244 1 150 1 368 1 80 1 199 1 90 1 154 1 236 1 178 1 334 1 39 1 
140 1 100 1 346 3 218 3 333 3 144 3 178 1 334 3 
346 1 218 1 333 1 144 1 12 1 334 1 98 1 
140 1 346 1 218 1 333 1 112 1 144 1 145 1 12 1 334 1 
289 1 86 1 0 1 244 1 149 1 150 1 196 1 198 1 199 1 90 1 154 1 93 1 202 1 299 1 12 2 205 1 100 1 346 4 306 1 52 1 17 2 20 1 218 3 119 1 121 1 320 1 323 1 178 1 131 1 327 1 231 1 232 1 368 1 329 1 369 1 80 1 332 1 140 2 83 1 333 3 144 3 145 1 38 1 334 4 39 1 
282 1 100 1 346 2 218 1 333 1 31 1 144 2 178 1 334 2 
241 1 231 1 232 1 86 1 100 2 218 3 346 3 196 1 108 1 140 1 333 3 202 1 144 3 145 1 299 1 20 1 38 1 12 1 334 3 
100 1 218 2 346 2 364 1 174 1 140 1 333 2 144 2 145 1 334 2 
131 1 327 1 205 1 0 1 346 1 244 1 150 1 368 1 80 1 199 1 90 1 154 1 178 1 334 1 39 1 
131 1 49 1 205 1 0 1 346 1 52 1 150 1 368 1 269 1 80 1 199 1 90 1 154 1 178 1 12 1 334 1 39 1 
356 1 87 1 2 2 149 4 120 1 357 1 198 1 174 2 319 1 121 1 93 1 177 1 323 2 46 1 364 2 306 1 79 1 329 1 17 2 83 1 283 1 215 2 288 1 114 1 
63 1 346 1 218 1 333 1 144 1 299 1 12 1 334 1 
131 1 205 1 327 1 0 1 86 1 100 1 364 1 218 1 346 2 244 1 368 1 150 1 80 1 199 1 90 1 154 1 333 1 144 1 334 2 39 1 
100 2 86 1 218 4 346 5 31 1 370 1 310 1 140 1 282 1 333 4 144 5 145 1 178 1 334 5 
63 1 346 2 218 2 333 2 144 2 12 1 334 2 98 1 
148 1 239 1 
148 1 239 1 
59 1 22 1 
59 1 22 1 
59 1 22 1 
51 1 148 1 239 1 
51 1 148 1 239 1 
148 1 239 1 350 1 
59 1 148 2 157 1 33 1 22 1 239 2 
51 1 148 1 239 1 
148 1 239 1 337 1 
148 1 239 1 337 1 
148 1 239 1 337 1 
13 2 42 2 148 2 219 1 162 2 194 1 268 1 151 1 278 3 108 1 202 2 19 2 157 1 127 1 38 2 324 1 343 2 228 1 239 2 
42 1 218 2 148 1 291 1 340 1 202 1 224 1 178 1 324 1 13 1 346 2 162 1 105 1 278 1 137 1 350 1 333 2 19 1 144 2 313 1 287 1 38 1 334 2 239 1 
311 1 250 1 26 1 
311 1 99 1 26 1 
250 2 345 1 99 1 16 1 26 3 326 1 
250 1 345 1 99 1 102 1 16 1 26 2 
250 1 345 2 99 1 16 1 26 2 
147 1 66 1 291 1 357 1 292 1 220 1 202 5 176 1 177 1 325 3 72 1 48 1 362 2 182 1 347 4 105 1 133 2 309 1 257 1 165 1 79 1 187 1 108 2 283 1 61 2 141 1 143 3 287 1 115 2 38 5 116 1 40 1 
243 3 66 1 357 1 292 1 220 1 91 1 359 1 70 3 202 7 176 4 177 1 325 3 72 1 48 1 362 2 15 1 101 1 347 5 133 2 257 2 309 2 165 2 258 1 79 1 187 1 108 3 283 1 141 1 143 3 287 2 115 2 38 7 40 1 
218 1 66 2 357 1 292 1 202 3 177 1 126 1 12 1 98 1 325 3 48 1 362 2 346 1 182 1 347 2 133 2 309 1 257 1 165 1 79 1 258 1 187 1 369 1 108 3 140 1 61 1 283 1 333 1 144 1 143 4 287 1 262 1 334 1 38 3 115 2 116 1 40 1 
182 1 257 1 309 1 165 1 258 1 91 1 202 1 38 1 116 1 
242 1 
123 1 80 1 
366 1 
0 1 80 1 
205 1 0 1 69 1 11 2 237 1 80 3 
205 1 0 1 80 1 
197 1 80 1 
180 1 29 1 305 1 183 2 149 7 44 1 357 1 319 3 58 1 280 1 215 4 142 1 323 3 177 1 36 1 288 2 21 1 
180 1 29 1 305 1 183 2 149 7 44 1 357 1 319 3 58 1 280 1 215 4 142 1 323 3 177 1 36 1 288 2 21 1 
180 1 302 1 29 1 305 1 183 2 149 7 44 1 357 1 319 3 58 1 280 1 215 4 142 1 323 3 177 1 36 1 288 2 21 1 
317 3 149 31 44 5 5 1 357 4 198 1 319 10 246 1 6 4 201 1 93 1 323 15 177 4 226 1 180 2 29 2 305 1 208 1 306 1 183 3 329 1 187 3 79 3 58 1 17 2 280 2 283 3 213 1 215 16 142 1 36 2 288 5 21 1 189 1 
3 1 149 9 44 1 5 1 357 1 198 2 319 4 93 2 177 1 323 4 180 1 363 1 29 1 305 1 306 2 183 2 329 2 17 4 58 1 280 1 215 5 142 1 36 1 288 3 
318 1 199 1 24 1 90 1 154 1 155 1 250 1 270 1 360 2 26 2 129 1 326 1 254 2 131 1 344 1 99 1 328 1 256 1 103 1 185 1 135 1 234 1 106 1 82 1 81 1 311 1 39 1 354 1 171 1 
318 1 199 1 24 1 90 1 154 1 155 1 250 1 270 1 360 3 26 2 326 1 254 3 131 1 344 1 99 1 328 1 103 1 185 1 135 2 234 1 106 1 82 1 81 1 311 1 281 1 212 1 216 1 39 1 171 1 
318 1 199 1 24 1 90 1 155 1 154 1 250 1 360 2 26 2 326 1 254 2 131 1 344 1 99 1 328 1 103 1 135 2 106 1 81 1 311 1 281 1 216 1 39 1 171 1 
131 1 254 1 41 1 75 1 344 2 0 1 207 1 318 2 103 2 134 1 277 1 150 1 80 1 82 1 199 1 90 1 155 2 154 1 212 1 270 1 353 1 360 1 39 1 
318 1 199 1 90 1 154 1 155 1 250 1 270 1 360 1 26 2 326 1 254 1 131 1 344 1 99 1 256 1 103 1 185 1 234 1 106 1 82 1 81 1 311 1 281 1 39 1 354 1 171 1 
322 1 
0 1 1 1 191 1 150 2 196 1 199 2 90 1 200 1 154 2 95 1 202 3 297 1 341 1 299 1 12 1 48 1 160 1 346 1 104 2 257 1 309 1 165 1 164 1 108 2 56 1 60 1 353 1 264 1 176 2 325 2 229 1 72 1 131 1 27 1 231 1 232 1 31 1 133 2 134 1 279 1 80 1 372 1 141 1 144 1 38 3 334 1 39 2 40 2 
23 1 196 1 200 1 95 1 202 3 176 2 299 1 12 1 27 1 231 1 232 1 346 1 31 1 104 2 164 1 279 1 330 1 108 2 60 1 141 1 144 1 334 1 38 3 40 2 
27 1 231 1 232 1 346 1 31 1 104 3 196 1 164 1 279 1 175 1 108 2 200 1 60 1 95 1 202 2 144 1 299 1 12 1 38 2 334 1 40 2 
23 1 196 1 175 1 200 1 95 1 202 3 176 2 299 1 96 1 12 1 27 1 231 1 232 1 346 1 31 1 104 3 164 1 279 1 330 1 108 2 60 1 141 1 144 1 334 1 38 3 40 2 
196 1 200 1 95 1 202 3 341 1 299 1 96 2 12 2 98 1 160 2 346 2 104 2 307 1 257 1 309 1 164 1 165 1 108 3 60 1 18 1 262 1 264 2 23 2 218 1 176 3 126 1 325 1 72 1 229 1 27 1 231 1 232 1 233 1 31 1 133 1 367 1 279 1 369 1 330 1 34 1 140 1 333 1 141 1 144 2 334 2 38 3 40 3 
264 1 196 1 200 1 95 1 202 2 341 1 299 1 12 1 325 1 229 1 72 1 27 1 160 1 231 1 232 1 346 1 31 1 104 2 133 1 309 1 257 1 164 1 165 1 279 1 108 2 372 1 60 1 144 1 38 2 334 1 40 2 
196 1 200 1 95 1 202 2 341 1 299 1 12 2 98 1 160 2 346 2 104 2 257 1 309 1 165 1 164 1 108 3 60 1 18 1 262 1 264 2 218 1 126 1 325 1 72 1 229 1 27 1 231 1 233 1 232 1 31 1 133 1 367 1 279 1 369 1 140 1 333 1 144 2 38 2 334 2 40 3 
196 1 200 1 95 1 202 2 341 1 299 1 12 2 98 1 160 2 346 2 104 2 257 1 309 1 165 1 164 1 108 3 60 1 18 1 262 1 264 2 218 1 126 1 325 1 72 1 229 1 27 1 231 1 233 1 232 1 31 1 133 1 367 1 279 1 369 1 140 1 333 1 144 2 38 2 334 2 40 3 
196 1 200 1 95 1 202 2 299 1 12 2 98 1 14 1 160 2 346 2 104 2 257 1 309 1 165 1 164 1 108 3 60 1 18 1 262 1 264 2 218 1 267 1 126 1 325 1 72 1 229 1 27 1 231 1 232 1 31 1 133 1 235 1 279 1 369 1 140 1 333 1 144 2 38 2 334 2 40 3 
23 1 218 1 196 1 175 1 200 1 95 1 202 2 176 1 299 1 96 1 126 1 12 2 98 1 27 1 231 1 232 1 346 2 31 1 104 3 164 1 279 1 369 1 34 1 108 3 140 1 60 1 333 1 144 2 262 1 334 2 38 2 40 3 
23 1 218 1 196 1 175 1 200 1 95 1 202 2 176 1 299 1 96 1 126 1 12 2 98 1 27 1 231 1 232 1 346 2 31 1 104 3 164 1 279 1 369 1 34 1 108 3 140 1 60 1 333 1 144 2 262 1 334 2 38 2 40 3 
264 1 196 1 200 1 95 1 202 2 299 1 12 1 325 1 229 1 72 1 14 1 27 1 160 1 231 1 232 1 346 1 31 1 104 2 133 1 309 1 257 1 164 1 165 1 279 1 108 2 372 1 60 1 144 1 38 2 334 1 40 2 
17 2 356 1 242 1 83 1 93 1 306 1 329 1 198 1 121 1 
289 1 317 3 118 1 2 13 67 1 149 17 44 1 357 1 198 2 174 4 319 2 121 1 246 2 293 1 6 4 93 2 323 7 177 3 178 1 158 1 47 1 364 13 208 1 306 2 329 2 187 3 79 1 17 4 83 2 283 3 170 1 215 10 288 1 
289 1 0 1 86 1 218 1 67 1 244 1 149 2 150 1 174 1 198 1 199 1 121 1 90 1 293 1 154 1 93 1 223 1 323 1 178 1 131 1 205 1 327 1 100 1 346 2 304 1 306 1 368 1 329 1 80 1 17 2 83 1 35 1 333 1 215 1 144 1 236 1 334 2 39 1 
289 1 86 1 0 2 2 7 149 20 193 2 88 2 244 2 44 4 150 1 198 3 199 3 90 2 293 1 154 3 93 3 205 2 100 1 346 3 305 1 306 3 58 1 17 6 215 10 217 2 218 1 67 1 68 1 357 3 174 7 319 8 121 3 25 1 320 2 323 10 177 3 178 2 227 1 131 2 327 2 361 2 364 7 183 1 368 2 329 3 187 2 79 2 80 2 280 1 83 3 281 1 283 2 333 1 142 1 144 1 36 1 288 4 334 3 39 3 
356 1 289 1 0 2 218 1 149 2 150 2 198 2 199 7 121 2 90 2 293 1 154 8 93 2 323 1 129 1 179 1 230 1 131 2 303 1 100 1 346 1 306 2 184 2 134 1 329 2 80 3 17 4 188 1 83 2 84 1 281 1 333 1 215 1 353 1 144 1 334 1 39 8 263 1 355 1 
64 1 218 1 2 1 67 1 149 3 357 1 174 1 198 1 319 1 121 1 93 1 177 1 323 2 364 1 346 1 306 1 329 1 187 1 79 1 17 2 140 1 83 1 283 1 333 1 215 1 144 1 145 1 288 1 334 1 
356 1 364 1 2 1 149 2 306 1 44 1 329 1 174 1 198 1 319 1 121 1 17 2 83 1 93 1 283 1 215 2 177 1 114 1 
356 1 364 1 2 1 149 2 306 1 357 1 329 1 79 1 174 1 198 1 319 1 121 1 17 2 83 1 93 1 323 2 288 1 46 1 
356 1 364 2 2 2 149 4 306 1 44 1 357 1 79 1 329 1 187 1 174 2 198 1 319 2 121 1 17 2 83 1 93 1 283 1 215 2 323 2 177 1 288 1 
364 1 2 1 149 2 306 1 44 1 329 1 174 1 198 1 319 1 121 1 17 2 84 1 83 1 93 1 283 1 215 2 177 1 114 1 
364 1 2 1 149 2 306 1 357 1 329 1 79 1 174 1 198 1 319 1 121 1 17 2 84 1 83 1 93 1 323 2 288 1 46 1 
364 2 2 2 149 4 306 1 44 1 357 1 79 1 329 1 187 1 174 2 198 1 319 2 121 1 17 2 84 1 83 1 93 1 283 1 215 2 323 2 177 1 288 1 
364 2 2 2 306 1 149 4 44 1 357 1 79 1 329 1 187 1 174 2 198 1 319 2 121 1 17 2 83 1 93 1 283 1 215 2 323 2 177 1 288 1 
289 1 0 1 149 2 244 1 150 1 198 1 199 1 121 1 90 1 293 1 154 1 93 1 320 1 323 1 178 1 131 1 205 1 327 1 346 1 306 1 368 1 329 1 80 1 17 2 83 1 215 1 334 1 39 1 
289 1 0 1 149 1 150 1 269 1 198 1 199 1 121 1 90 1 154 1 93 1 323 1 178 1 12 1 274 1 131 1 205 1 49 1 346 1 306 1 52 1 368 1 329 1 80 1 17 2 83 1 334 1 39 1 
364 2 2 2 67 1 149 4 306 1 44 1 357 1 79 1 329 1 187 1 174 2 198 1 319 2 121 1 17 2 83 1 93 1 283 1 215 2 323 2 177 1 288 1 
0 1 2 2 149 4 244 1 88 1 44 1 357 1 174 2 198 1 319 2 199 1 121 1 90 1 154 1 93 1 320 1 323 2 177 1 129 1 131 1 205 1 327 1 364 2 346 1 306 1 368 1 79 1 329 1 187 1 80 1 17 2 83 1 283 1 215 2 288 1 334 1 39 1 
218 1 2 1 67 1 149 3 44 1 357 1 198 1 174 1 319 1 121 1 93 1 7 1 323 1 177 1 346 1 364 1 306 1 79 1 329 1 187 1 17 2 140 1 83 1 283 1 333 1 215 2 144 1 145 1 334 1 
317 1 3 1 149 19 44 3 357 3 198 2 319 6 246 1 221 1 6 2 93 2 94 1 296 2 323 10 177 3 275 1 208 1 306 2 78 1 329 2 187 3 79 3 54 2 17 4 111 1 283 3 169 1 215 9 85 1 288 3 
317 2 3 1 149 26 44 2 5 2 195 1 357 2 198 3 319 4 358 1 221 1 6 2 93 3 94 1 296 4 71 1 323 12 177 3 275 1 365 1 208 2 306 3 186 1 329 3 187 3 79 2 54 1 17 6 352 1 111 2 283 3 169 2 215 14 288 2 
149 44 3 1 44 4 5 1 195 1 198 3 246 2 6 5 93 3 94 1 296 4 206 1 208 3 305 1 306 3 54 1 17 6 58 1 352 1 111 2 169 1 215 22 317 3 357 5 319 8 221 1 358 1 177 6 323 22 71 1 275 1 365 1 183 1 78 1 186 1 79 4 187 5 329 3 280 1 283 5 142 1 36 1 288 4 
317 3 3 1 149 43 44 3 5 2 195 1 357 5 198 4 319 8 246 2 358 1 221 1 6 5 93 4 94 1 296 4 71 1 323 21 177 6 275 1 206 1 365 1 305 1 208 3 183 1 306 4 78 1 186 1 329 4 187 5 79 4 54 1 58 1 17 8 280 1 352 1 111 2 283 5 169 1 215 22 142 1 36 1 288 5 
317 4 3 1 149 52 44 7 5 1 195 1 357 8 198 2 319 14 246 2 358 1 221 1 6 4 93 2 94 1 296 4 71 1 323 25 177 8 158 2 275 1 365 1 305 1 208 2 183 1 306 2 186 1 329 2 187 7 79 7 54 1 58 1 17 4 280 1 352 1 111 1 283 7 169 1 215 27 142 1 36 1 288 7 
13 1 43 1 42 1 19 1 148 1 162 1 194 1 157 1 151 1 239 1 
137 1 350 1 
13 1 42 1 298 1 19 1 148 1 162 1 238 1 239 1 74 1 
13 1 42 1 148 1 219 1 162 1 194 1 268 1 151 1 278 2 108 1 202 1 19 1 157 1 127 1 324 1 38 1 343 1 239 1 
13 1 42 1 148 1 219 1 162 1 194 1 268 1 151 1 278 2 108 1 202 1 19 1 157 1 127 1 324 1 38 1 343 1 239 1 
13 1 42 1 148 1 219 1 162 1 194 1 268 1 151 1 278 2 108 1 202 1 19 1 157 1 127 1 324 1 38 1 343 1 239 1 
65 1 51 1 33 1 
65 1 51 1 33 1 
225 1 337 1 
225 1 33 1 337 1 
340 1 224 1 
42 1 218 2 148 1 291 1 340 1 202 1 224 1 178 1 127 1 343 1 13 1 346 2 347 1 162 1 105 1 278 1 137 1 350 1 333 2 113 1 19 1 144 2 313 1 287 1 334 2 38 1 239 1 
65 1 51 1 
225 1 33 1 337 1 
289 1 265 1 117 1 0 1 67 1 149 2 198 1 121 1 199 2 90 1 248 1 293 1 154 2 93 1 323 1 131 1 230 1 346 2 306 1 184 2 329 1 80 1 371 1 17 2 188 1 83 1 215 1 144 2 286 1 334 2 39 2 
131 1 344 1 99 1 349 1 32 1 234 1 106 1 199 2 311 1 90 1 154 2 250 1 281 1 260 1 39 2 171 1 26 2 326 1 129 1 
131 1 132 1 344 1 99 1 32 1 234 1 106 1 199 1 311 1 90 1 154 1 250 1 281 1 39 1 171 1 26 2 326 1 
131 1 344 1 0 1 207 1 150 1 134 1 80 1 199 1 90 1 154 1 260 1 353 1 273 1 39 1 
131 1 344 1 99 1 349 1 32 1 234 1 106 1 199 1 311 1 90 1 154 1 250 1 281 1 260 1 39 1 171 1 26 2 326 1 
266 1 
242 1 
66 1 133 1 257 1 309 1 165 1 136 1 108 2 202 1 176 1 141 1 156 1 341 1 143 1 38 1 325 1 40 1 72 1 
131 1 205 1 0 1 257 1 309 1 165 1 150 1 80 1 199 1 90 2 154 1 123 1 168 1 69 1 39 1 159 1 72 1 
317 1 66 3 245 1 195 1 357 1 358 1 6 1 202 1 176 1 252 1 177 1 325 5 72 2 362 4 365 1 208 1 133 3 309 2 257 2 165 2 186 1 187 1 79 1 108 4 352 1 283 1 141 1 143 6 38 1 115 4 40 1 
218 1 357 1 202 1 252 2 177 2 126 1 12 1 98 1 325 2 72 1 346 1 133 2 309 1 257 1 165 1 367 1 369 1 58 1 280 1 140 1 167 1 214 1 333 1 144 1 36 1 262 1 334 1 38 1 
28 1 309 1 257 1 165 1 72 1 
362 5 66 5 133 5 357 2 187 2 79 2 108 5 283 2 214 1 252 2 143 10 177 2 115 5 325 5 217 1 
202 1 176 1 141 1 38 1 108 1 40 1 
0 2 1 1 191 1 150 2 199 4 90 3 154 4 251 1 202 3 176 4 203 2 325 2 72 1 48 2 131 2 205 1 181 1 133 2 309 2 257 2 165 2 134 1 258 1 107 1 80 2 210 1 55 1 56 2 312 1 353 1 141 2 37 1 38 3 39 4 
289 1 0 1 218 2 149 1 244 1 150 1 198 1 199 1 121 1 90 1 154 1 93 1 320 1 323 1 178 1 131 1 327 1 205 1 346 3 306 1 368 1 329 1 369 1 80 1 17 2 140 2 332 1 83 1 333 2 144 2 334 3 39 1 
362 2 66 2 183 1 133 2 257 1 309 1 165 1 108 4 56 1 143 4 115 2 325 1 72 1 48 1 40 2 
13 1 19 1 163 1 
13 1 19 1 163 1 
13 1 192 1 19 1 340 1 194 1 
13 1 19 1 163 1 
255 1 13 1 19 1 
255 1 13 1 19 1 
255 1 13 1 19 1 
13 1 19 1 
148 1 239 1 
305 1 183 1 149 8 306 2 44 1 5 1 357 1 329 2 198 2 319 3 58 1 17 4 280 1 93 2 215 4 142 1 177 1 323 4 36 1 288 2 
242 1 
306 1 149 4 44 1 357 1 79 1 329 1 187 1 198 1 319 2 17 2 93 1 283 1 215 2 8 1 323 2 177 1 288 1 
317 1 208 1 149 7 44 1 357 1 79 1 187 1 319 2 246 1 6 2 283 1 215 3 323 4 177 1 288 1 
317 2 118 1 149 23 44 4 5 2 357 3 198 2 319 9 246 1 6 2 93 2 177 3 323 12 158 1 305 1 183 1 306 2 187 2 79 2 329 2 138 1 58 1 17 4 280 2 283 2 215 11 142 1 36 2 288 5 
6 1 149 1 323 1 
317 1 215 1 149 1 
306 1 149 6 44 1 357 1 329 1 187 1 79 1 198 1 319 3 17 2 93 1 283 1 215 3 8 1 323 3 177 1 288 2 217 1 
317 1 149 12 3 1 44 1 357 2 195 1 198 1 319 2 358 1 6 1 93 1 323 6 177 2 365 1 208 1 306 1 186 1 329 1 187 2 79 2 17 2 352 1 283 2 215 6 288 1 
149 6 44 1 357 1 319 2 58 1 280 1 215 3 177 1 323 3 36 1 288 1 
305 1 149 3 306 1 44 1 5 1 329 1 198 1 319 2 138 1 17 2 280 1 93 1 215 1 142 1 323 2 36 1 288 1 
306 1 3 1 149 10 44 2 357 2 329 1 198 1 319 5 17 2 58 1 280 2 93 1 167 1 215 5 323 5 177 2 36 2 288 3 
3 1 306 1 149 2 44 1 329 1 198 1 319 1 17 2 93 1 283 1 215 2 177 1 
3 1 306 1 149 4 44 1 357 1 79 1 329 1 187 1 198 1 319 2 17 2 93 1 283 1 215 2 323 2 177 1 288 1 
149 3 3 1 306 3 44 1 5 1 78 1 329 3 198 3 319 2 138 1 17 6 280 1 93 3 215 1 323 2 36 1 288 1 
317 3 3 1 149 34 44 5 5 2 357 5 198 5 319 12 246 1 201 1 6 4 93 5 8 1 323 18 177 5 305 1 208 1 183 1 306 5 78 1 329 5 187 3 79 3 138 1 58 2 17 10 280 3 283 3 213 1 215 16 142 1 36 3 288 7 189 1 
317 1 149 11 3 1 357 1 198 1 319 2 246 1 6 2 93 1 323 5 177 2 208 1 305 1 183 1 306 1 329 1 187 1 58 1 17 2 280 1 352 1 283 1 215 6 142 1 36 1 288 2 
317 1 149 11 3 1 44 1 357 1 198 2 319 3 246 1 6 2 93 2 8 1 323 5 177 2 305 1 208 1 183 1 306 2 329 2 187 1 58 1 17 4 280 1 352 1 283 1 215 6 142 1 36 1 288 2 
317 1 149 19 3 1 44 1 5 1 357 3 195 1 198 3 319 4 358 1 6 1 93 3 8 1 323 10 177 3 365 1 305 1 208 1 183 1 306 3 186 1 329 3 187 2 79 2 58 1 17 6 280 1 352 1 283 2 215 9 142 1 36 1 288 3 
317 1 149 17 3 1 44 2 5 1 357 2 195 1 198 3 319 5 358 1 6 1 93 3 8 1 323 7 177 3 365 1 305 1 208 1 183 1 306 3 186 1 329 3 187 2 79 1 58 1 17 6 280 1 352 1 283 2 215 10 142 1 36 1 288 3 
317 1 149 11 3 1 357 1 198 1 319 2 246 1 6 2 93 1 323 5 177 2 208 1 305 1 183 1 306 1 329 1 187 1 58 1 17 2 280 1 352 1 283 1 215 6 142 1 36 1 288 2 
317 1 149 12 3 1 44 1 357 2 195 1 198 1 319 2 358 1 6 1 93 1 323 6 177 2 365 1 208 1 306 1 186 1 329 1 187 2 79 2 17 2 352 1 283 2 215 6 288 1 
317 1 149 18 3 1 44 2 5 2 195 1 357 2 198 4 319 5 358 1 6 1 93 4 8 1 323 8 177 3 365 1 305 1 208 1 183 1 306 4 186 1 329 4 187 2 79 1 58 1 17 8 280 1 352 1 283 2 215 10 142 1 36 1 288 3 
317 1 149 16 3 1 44 3 5 2 195 1 357 2 198 4 319 6 358 1 6 1 93 4 323 7 177 3 365 1 208 1 306 4 78 1 186 1 329 4 187 3 79 2 17 8 352 1 283 3 215 9 288 3 
305 2 149 7 44 3 357 1 319 6 58 1 280 3 215 3 142 1 323 4 177 1 36 3 288 3 
317 1 149 18 3 1 44 1 5 2 195 1 357 2 198 4 319 4 358 1 6 1 93 4 323 8 177 3 365 1 305 1 208 1 183 1 306 4 78 1 186 1 329 4 187 2 79 1 58 1 17 8 280 1 352 1 283 2 215 10 142 1 36 1 288 3 
282 1 346 1 31 1 144 1 178 1 334 1 130 1 
338 1 346 1 31 1 259 1 57 1 282 1 125 1 144 1 342 1 178 1 334 1 130 1 
242 1 154 1 150 1 39 1 199 1 
131 1 205 1 327 1 0 1 100 1 218 1 346 2 368 1 150 1 80 1 199 1 90 1 154 1 333 1 144 1 178 1 334 2 39 1 
131 1 205 2 327 1 0 2 100 1 218 2 346 2 197 1 196 1 368 1 80 3 199 1 90 1 154 1 333 1 144 2 299 1 178 1 12 1 334 2 203 1 39 1 240 1 
0 2 218 2 196 1 197 1 269 1 199 1 90 1 154 1 299 1 178 1 203 1 12 2 131 1 205 2 100 1 346 2 52 1 368 1 80 3 333 1 144 2 334 2 39 1 240 1 
339 1 0 1 218 1 197 1 199 1 90 1 154 1 123 1 202 2 176 1 11 1 126 1 12 1 203 1 98 1 131 1 205 1 232 1 346 1 369 1 80 4 108 1 140 1 333 1 285 1 144 1 262 1 334 1 38 2 39 1 240 1 40 1 
0 1 218 1 172 1 197 1 199 1 90 1 154 1 123 1 202 2 176 1 11 1 126 1 12 1 203 1 98 1 131 1 205 1 232 1 346 1 369 1 80 4 108 1 140 1 333 1 144 1 262 1 334 1 38 2 39 1 240 1 40 1 
90 1 131 1 154 1 39 1 263 1 199 1 
230 1 131 2 205 1 303 1 0 2 184 1 150 2 80 3 199 6 55 1 90 3 154 7 281 1 251 1 261 1 69 1 39 7 263 1 355 1 129 1 179 1 
0 1 2 1 244 1 88 1 193 1 149 6 198 2 199 1 90 1 154 1 93 2 205 1 100 1 346 2 305 1 306 2 17 4 58 1 215 3 265 1 218 1 67 1 357 1 174 1 319 2 121 2 320 1 177 1 323 3 178 2 129 1 131 1 327 1 364 1 183 1 368 1 329 2 80 1 280 1 83 2 333 1 142 1 144 1 36 1 334 2 288 2 39 1 
150 1 199 1 152 1 154 1 202 3 252 2 11 1 12 1 98 1 346 1 347 1 257 2 309 2 165 2 108 1 58 1 167 1 214 1 262 1 62 1 218 1 172 1 357 2 123 1 176 2 321 1 177 2 126 1 325 4 72 2 181 1 28 1 232 1 76 1 133 4 369 1 80 2 280 1 140 1 333 1 141 1 144 1 36 1 334 1 38 3 39 1 40 1 
131 1 205 1 0 1 366 1 80 1 199 1 90 2 154 1 69 1 11 1 39 1 263 1 159 1 
131 1 290 1 0 1 4 1 150 1 134 1 80 1 199 4 90 1 154 4 353 1 39 4 129 1 
131 1 205 1 0 1 107 1 80 1 199 2 55 1 90 2 154 2 251 1 37 1 203 1 227 1 39 2 
311 1 90 1 131 1 154 1 99 1 106 1 150 1 39 1 26 1 199 1 
90 1 131 1 230 1 154 2 117 1 281 1 0 1 39 2 80 1 199 2 129 1 
230 1 131 2 290 1 303 1 0 2 134 1 150 1 80 3 199 4 90 2 154 5 353 1 203 1 39 5 129 1 355 1 
230 1 131 2 290 1 303 1 0 2 134 1 150 1 80 3 199 4 90 2 331 1 154 5 353 1 203 1 39 5 129 1 
0 1 218 1 150 1 269 1 199 1 90 1 154 1 178 1 12 1 131 1 205 1 100 1 346 2 52 1 368 1 80 1 333 1 144 1 334 2 39 1 
131 1 205 1 0 1 80 1 199 1 55 1 90 2 154 1 251 1 261 1 69 1 203 1 39 1 
371 1 248 1 373 1 346 1 144 1 286 1 334 1 336 1 128 1 
45 1 110 1 336 1 
316 1 373 1 178 1 128 1 336 1 
316 1 218 1 196 1 45 1 202 2 299 1 126 1 12 2 98 1 128 1 231 1 232 1 346 1 347 1 53 1 369 1 108 1 140 1 110 1 373 1 333 1 144 1 20 1 262 1 334 1 38 2 336 1 40 1 
242 1 
24 1 254 1 270 1 328 1 360 1 82 1 
155 1 103 1 360 1 
254 3 328 1 256 1 82 1 24 1 122 1 153 1 270 1 360 3 146 2 204 1 
24 1 254 2 249 1 270 1 328 1 360 2 135 1 82 1 
254 1 256 1 173 1 348 1 82 1 311 1 270 1 250 1 124 1 360 1 26 1 
254 1 270 1 328 1 256 1 360 1 82 1 
24 1 254 1 270 1 328 1 256 1 360 1 348 1 82 1 
254 2 109 1 270 2 328 1 256 1 360 2 82 2 301 1 351 1 
254 3 328 1 256 1 173 1 348 1 135 2 82 1 24 1 211 1 92 1 270 1 9 1 360 3 
254 2 99 1 328 1 256 1 135 1 82 1 24 1 311 1 270 1 250 1 360 2 26 2 73 1 326 1 
254 4 315 1 328 1 256 1 173 1 348 1 135 2 82 2 24 1 92 1 270 2 249 1 360 4 
24 1 254 1 270 1 328 1 256 1 360 1 82 1 
254 4 328 2 173 1 348 1 135 2 82 1 24 2 153 1 92 1 270 1 360 4 146 1 204 1 335 1 
24 1 209 1 254 2 270 1 328 1 256 1 360 2 135 1 97 1 89 1 82 1 
24 1 254 3 153 1 270 1 328 1 161 1 256 1 360 3 146 2 204 2 82 1 
190 1 348 2 308 1 314 2 
254 1 270 1 271 1 256 1 360 1 82 1 
24 1 254 2 270 1 328 1 9 1 256 1 360 2 135 1 82 1 
295 1 
24 1 254 1 270 1 328 1 256 1 360 1 82 1 
24 1 254 3 270 1 328 1 9 1 256 1 360 3 146 1 135 1 82 1 
92 1 173 1 348 1 335 1 
328 1 

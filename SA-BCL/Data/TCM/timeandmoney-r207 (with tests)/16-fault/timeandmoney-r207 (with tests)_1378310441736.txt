#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (88,279) (88,279) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (88,279) (88,279) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (88,279) (88,279) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (88,279) (88,279) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 108 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 8 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 140 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 118 (72,82,148) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 289 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (14,98) (14,98) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 168 190 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 33 322 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 133 34 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 189 131 125 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 189 131 125 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 189 131 274 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 133 34 117 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 133 34 117 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (14,98) (14,98) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (14,98) (14,98) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (14,98) (14,98) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 289 163 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 108 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 225 (69,159) 228 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 100 38 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (103,249) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 108 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (122,161) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (250,294) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
167 1 325 1 6 1 215 1 276 1 279 1 88 1 64 1 39 1 
167 1 325 1 6 1 215 1 276 1 279 1 88 1 64 1 39 1 
167 1 325 1 6 1 215 1 276 1 279 1 88 1 64 1 39 1 
167 1 325 1 6 1 215 1 276 1 279 1 88 1 64 1 39 1 
0 1 221 1 202 2 86 1 37 1 64 1 39 4 92 2 325 4 234 1 215 1 276 1 49 1 216 1 51 3 194 1 255 1 306 3 
167 1 0 1 221 1 6 1 37 1 64 1 39 2 73 1 325 2 324 1 192 1 215 1 276 1 194 1 332 1 306 1 
221 1 325 3 202 1 86 1 6 1 215 1 276 2 51 1 194 1 64 2 39 3 306 2 318 1 
0 1 221 1 312 1 202 4 6 1 86 3 37 1 64 2 39 9 318 1 71 1 92 2 325 9 119 1 234 1 215 1 216 1 49 1 276 2 51 7 194 1 305 1 255 1 306 5 
0 1 221 1 312 1 202 4 6 1 86 3 37 1 64 2 39 9 318 1 71 1 92 2 325 9 119 1 234 1 215 1 216 1 49 1 276 2 51 7 194 1 305 1 255 1 306 5 
108 1 
169 1 200 1 83 1 310 1 101 1 314 1 150 1 319 1 156 1 298 1 251 1 78 1 
54 1 169 1 200 1 1 1 310 1 101 2 314 1 150 1 319 1 156 1 251 1 78 2 302 1 
201 1 101 1 78 1 
201 1 101 1 78 1 
101 1 78 1 
201 1 101 1 78 1 
201 1 101 1 78 1 
201 1 101 2 275 1 331 1 132 1 78 2 23 1 
238 1 108 1 
169 2 54 1 1 1 314 2 151 1 211 1 156 2 302 1 238 2 
219 1 272 1 282 1 
284 1 224 1 35 2 314 1 20 1 293 1 209 1 210 2 269 1 320 1 89 1 156 1 214 1 160 1 136 1 278 2 250 1 217 1 238 1 
219 1 284 1 54 1 169 1 1 1 224 1 35 1 314 2 20 1 145 1 210 1 269 1 320 1 89 1 156 2 214 1 136 1 30 1 278 1 250 1 
54 4 169 5 1 4 62 1 314 5 145 1 211 1 156 5 94 1 298 1 329 1 30 2 302 1 238 1 
319 1 169 2 54 2 1 2 222 1 156 2 212 1 314 2 
169 3 54 3 1 3 156 3 314 3 30 1 302 1 238 1 
319 1 169 1 54 1 1 1 222 1 156 1 314 1 
319 1 211 1 169 1 54 1 1 1 156 1 314 1 302 1 151 1 
54 2 169 2 200 1 310 1 1 2 101 1 314 2 145 1 150 1 8 1 319 1 211 1 115 1 156 2 30 1 251 1 78 1 302 1 
169 2 54 1 1 1 156 2 62 1 298 1 314 2 30 1 238 1 
319 1 200 1 169 1 54 1 310 1 115 1 1 1 156 1 101 1 314 1 30 1 145 1 251 1 78 1 140 1 150 1 
219 1 54 2 169 2 1 2 314 2 211 1 272 1 156 2 30 1 302 1 
284 1 224 1 35 1 314 1 20 1 210 1 269 1 320 1 89 1 156 1 214 1 136 1 278 1 250 1 238 1 
284 1 224 1 35 1 314 1 20 1 210 1 174 1 269 1 320 1 156 1 214 1 136 1 122 1 278 1 238 1 
128 1 130 1 40 1 175 1 45 1 296 2 90 4 91 1 46 1 47 1 303 1 219 2 259 1 311 2 188 2 264 1 106 1 70 1 114 1 272 2 191 1 74 1 27 1 282 2 
319 1 169 1 54 1 310 1 1 1 156 1 212 1 314 1 
330 1 148 1 
330 1 148 1 
72 1 118 1 
72 1 118 1 
72 1 118 1 330 1 148 1 
18 1 330 1 148 1 
72 1 118 1 330 1 148 1 
82 1 330 1 148 1 
18 1 330 1 148 1 
18 1 330 1 148 1 
235 1 330 1 148 1 
235 1 330 1 148 1 
235 1 330 1 148 1 
283 1 169 1 54 1 1 1 58 1 289 1 101 1 314 1 148 1 7 1 156 1 248 1 330 1 78 1 304 1 239 1 
14 1 283 2 58 2 101 2 227 1 148 2 7 1 111 1 248 2 330 2 98 1 78 2 304 2 239 2 
0 1 37 1 216 1 
0 1 324 1 37 1 
155 1 324 1 216 2 37 3 195 1 152 1 
155 1 231 1 324 1 216 1 37 2 195 1 
155 1 324 1 216 1 37 2 195 2 
201 1 101 1 158 1 78 1 
201 2 10 1 101 2 138 1 236 1 78 2 
168 1 84 1 201 1 101 2 132 1 207 1 23 1 113 1 297 1 275 1 331 1 78 2 
168 1 84 1 101 1 132 1 207 1 23 1 190 1 113 1 297 1 275 1 331 1 78 1 
313 1 108 1 269 1 
129 1 269 1 
326 1 
320 1 224 1 269 1 
42 1 269 1 
224 1 269 1 
320 1 224 1 262 1 313 2 75 1 269 3 
56 1 57 1 3 1 185 1 61 1 17 1 188 3 130 3 316 1 41 1 175 2 296 4 90 7 191 1 27 1 97 2 99 1 
56 1 57 1 3 1 185 1 61 1 17 1 188 3 130 3 316 1 41 1 175 2 296 4 90 7 191 1 27 1 97 2 99 1 
56 1 57 1 3 1 185 1 61 1 17 1 188 3 130 3 316 1 41 1 175 2 296 4 90 7 191 1 27 1 97 2 99 1 240 1 
287 1 3 2 291 1 87 3 130 10 206 1 41 2 40 1 175 5 90 31 296 16 46 1 47 3 48 4 97 3 252 3 99 2 303 1 56 1 57 1 259 3 311 2 100 1 185 2 61 1 17 5 316 1 188 15 264 1 66 1 273 1 323 1 191 4 27 4 
56 1 287 1 57 1 3 1 185 1 311 4 17 1 316 1 130 4 188 4 264 2 41 1 40 2 175 3 176 1 296 5 90 9 46 2 191 1 27 1 181 1 97 2 99 1 303 2 
0 1 288 1 35 1 6 1 37 2 39 2 210 1 9 1 215 1 136 1 216 1 51 1 141 1 306 1 221 1 20 1 64 1 21 1 268 1 267 1 152 1 112 1 325 2 324 1 276 1 193 1 278 1 194 1 281 1 165 1 
0 1 199 1 288 1 35 1 6 1 170 1 37 2 39 3 210 1 9 1 136 1 216 1 51 2 141 1 306 1 221 1 20 1 64 1 21 1 268 1 267 1 152 1 325 3 324 1 276 1 193 1 278 1 194 1 31 1 281 1 
0 1 35 1 6 1 170 1 37 2 39 2 210 1 9 1 136 1 216 1 51 2 306 1 221 1 20 1 21 1 268 1 267 1 152 1 325 2 324 1 193 1 278 1 194 1 31 1 281 1 
199 1 284 1 127 1 35 1 6 2 64 1 172 1 21 2 39 1 210 1 268 2 325 1 9 2 137 1 276 1 278 1 254 1 
0 1 288 1 35 1 6 1 37 2 39 1 210 1 9 1 215 1 136 1 216 1 141 1 20 1 64 1 21 1 268 1 267 1 152 1 112 1 325 1 324 1 276 1 193 1 278 1 31 1 281 1 
321 1 
284 1 101 1 85 1 35 1 132 1 207 1 23 1 210 1 113 1 322 1 278 1 331 1 78 1 33 1 
220 1 200 1 169 1 310 1 83 1 4 1 101 2 314 1 150 1 133 1 319 1 153 1 156 1 298 1 162 1 251 1 78 2 256 1 
220 1 169 1 200 1 310 1 83 1 4 1 101 2 314 1 150 1 319 1 177 1 153 1 156 1 298 1 162 1 251 1 78 2 256 1 
220 1 169 1 200 1 310 1 83 1 34 1 4 1 101 2 314 1 150 1 133 1 319 1 153 1 156 1 298 1 162 1 251 1 78 2 256 1 
101 1 78 1 
285 1 169 1 200 1 83 1 4 1 85 1 171 1 132 1 298 1 251 1 256 1 220 1 309 1 310 1 101 2 314 1 189 1 147 1 23 1 150 1 319 1 113 1 153 1 156 1 29 1 162 1 331 1 78 2 
285 1 200 1 169 1 83 1 4 1 85 1 171 1 131 1 132 1 295 1 298 1 251 1 256 1 220 1 309 1 310 1 101 2 314 1 189 1 147 1 150 1 23 1 113 1 319 1 153 1 156 1 29 1 162 1 331 1 78 2 125 1 
285 1 200 1 169 1 83 1 4 1 85 1 171 1 131 1 132 1 295 1 298 1 251 1 256 1 220 1 309 1 310 1 101 2 314 1 189 1 147 1 150 1 23 1 113 1 319 1 153 1 156 1 29 1 162 1 331 1 78 2 125 1 
285 1 200 1 169 1 83 1 4 1 85 1 290 1 131 1 132 1 213 1 298 1 251 1 13 1 256 1 220 1 310 1 101 2 314 1 189 1 147 1 150 1 23 1 113 1 319 1 153 1 156 1 274 1 29 1 162 1 331 1 78 2 
220 1 169 1 200 1 310 1 83 1 34 1 4 1 101 2 314 1 150 1 133 1 319 1 153 1 117 1 156 1 298 1 162 1 251 1 78 2 256 1 
220 1 169 1 200 1 310 1 83 1 34 1 4 1 101 2 314 1 150 1 133 1 319 1 153 1 117 1 156 1 298 1 162 1 251 1 78 2 256 1 
285 1 169 1 200 1 83 1 4 1 85 1 290 1 132 1 298 1 251 1 256 1 13 1 220 1 310 1 101 2 314 1 189 1 147 1 23 1 150 1 113 1 319 1 153 1 156 1 29 1 162 1 331 1 78 2 
130 2 40 1 41 1 175 2 45 1 296 3 90 6 46 1 97 1 99 1 303 1 219 1 56 1 57 1 311 2 316 1 188 3 264 1 108 1 106 1 70 1 272 1 191 1 27 1 238 2 282 1 
291 1 87 3 130 2 40 2 175 1 90 14 296 8 46 2 246 1 47 2 48 3 299 1 96 1 252 2 303 2 253 1 219 11 259 1 100 1 311 4 17 1 188 6 264 2 106 1 70 2 272 4 157 1 191 2 120 1 27 1 164 1 238 1 282 11 
284 1 169 1 1 1 35 1 210 1 40 1 89 1 90 2 296 1 46 1 214 1 136 1 299 1 250 1 303 1 54 1 311 2 224 1 314 2 20 1 145 1 188 1 264 1 106 1 68 1 269 1 70 1 320 1 272 1 157 1 156 2 160 1 120 1 278 1 30 1 238 1 80 1 166 1 
169 1 1 1 5 1 175 6 89 2 90 20 97 1 250 2 252 2 99 1 183 2 259 2 17 4 188 10 20 2 263 1 264 3 106 3 269 2 272 7 191 3 27 3 120 1 278 3 30 1 31 1 282 7 284 1 35 3 130 10 205 2 41 1 210 3 40 3 296 10 46 3 214 2 47 2 136 2 299 1 303 3 219 7 56 1 54 1 57 1 311 6 224 2 60 2 314 3 316 1 145 1 70 3 69 2 320 2 156 3 157 1 335 2 238 2 237 1 
284 1 35 2 208 1 210 2 40 1 296 1 90 2 244 1 46 1 136 1 299 1 217 1 303 1 55 1 311 2 224 1 186 1 20 2 188 1 264 1 317 1 106 1 269 1 70 1 320 1 116 1 120 1 278 2 197 1 
169 1 1 1 130 1 40 1 175 1 211 1 296 1 90 3 46 1 245 1 47 1 252 1 302 1 303 1 219 1 54 1 259 1 311 2 314 1 188 2 264 1 106 1 70 1 272 1 157 1 156 1 191 1 27 1 282 1 
219 1 311 2 17 1 130 1 264 1 106 1 40 1 70 1 272 1 45 1 90 2 91 1 296 2 46 1 191 1 47 1 303 1 282 1 
219 1 259 1 311 2 130 1 188 2 264 1 106 1 40 1 175 1 70 1 272 1 45 1 114 1 90 2 46 1 27 1 303 1 282 1 
130 2 40 1 175 1 45 1 296 2 90 4 46 1 47 1 252 1 303 1 219 2 259 1 311 2 17 1 188 2 264 1 106 1 70 1 272 2 191 1 27 1 282 2 
219 1 311 2 17 1 130 1 264 1 106 1 40 1 70 1 272 1 90 2 116 1 91 1 296 2 46 1 191 1 47 1 303 1 282 1 
219 1 259 1 311 2 130 1 188 2 264 1 106 1 40 1 175 1 70 1 272 1 114 1 90 2 116 1 46 1 27 1 303 1 282 1 
130 2 40 1 175 1 296 2 90 4 46 1 47 1 252 1 303 1 219 2 259 1 311 2 17 1 188 2 264 1 106 1 70 1 272 2 116 1 191 1 27 1 282 2 
219 2 259 1 311 2 17 1 188 2 130 2 264 1 106 1 40 1 175 1 70 1 272 2 296 2 90 4 46 1 191 1 27 1 47 1 252 1 303 1 282 2 
284 1 35 1 210 1 40 1 89 1 296 1 90 2 46 1 214 1 136 1 299 1 250 1 303 1 311 2 224 1 314 1 20 1 188 1 264 1 106 1 269 1 70 1 320 1 156 1 120 1 278 1 335 1 238 1 
284 1 35 1 210 1 40 1 174 1 296 1 90 2 46 1 214 1 136 1 299 1 303 1 311 2 224 1 314 1 20 1 188 1 264 1 107 1 106 1 269 1 70 1 320 1 156 1 120 1 122 1 278 1 238 1 
130 2 40 1 175 1 296 2 90 4 46 1 47 1 252 1 303 1 219 2 259 1 311 2 17 1 188 2 264 1 106 1 70 1 272 2 157 1 191 1 27 1 282 2 
35 1 130 2 210 1 40 1 175 1 89 1 90 4 296 2 46 1 47 1 214 1 136 1 250 1 252 1 303 1 183 1 219 2 259 1 311 2 224 1 17 1 314 1 188 2 20 1 264 1 106 1 269 1 70 1 320 1 272 2 156 1 191 1 27 1 278 1 335 1 282 2 165 1 
169 1 1 1 130 1 40 1 211 1 296 2 90 3 46 1 47 1 252 1 302 1 303 1 184 1 219 1 54 1 259 1 311 2 17 1 314 1 188 1 264 1 106 1 70 1 272 1 157 1 156 1 191 1 27 1 282 1 
203 1 291 1 87 1 204 1 130 6 40 2 175 3 90 19 296 9 46 2 47 3 48 2 181 1 252 3 303 2 259 3 100 1 311 4 17 3 188 10 146 1 105 1 264 2 266 1 271 2 191 3 27 3 328 1 277 1 198 2 
287 2 203 2 87 2 130 4 204 2 38 1 40 3 175 2 93 1 90 26 296 14 46 3 47 3 48 2 181 1 50 1 252 3 303 3 308 1 259 2 311 6 100 2 17 2 188 12 146 1 264 3 266 1 271 1 233 1 191 3 27 2 328 1 280 1 198 4 
287 1 203 1 291 1 87 3 204 2 130 8 38 1 41 1 40 3 175 4 93 1 90 41 296 20 46 3 47 4 48 4 181 1 50 1 97 1 252 4 99 1 303 3 56 1 308 1 57 1 259 4 100 3 311 6 17 4 316 1 188 21 146 1 105 1 264 3 266 1 67 1 271 1 233 1 191 5 27 5 328 1 280 1 198 4 
287 2 203 1 291 1 87 3 204 2 130 7 38 1 41 1 40 4 175 4 93 1 90 38 296 20 46 4 47 4 48 4 181 1 50 1 97 1 252 4 99 1 303 4 56 1 308 1 57 1 259 3 100 3 311 8 17 3 316 1 188 18 146 1 105 1 264 4 266 1 67 1 271 1 233 1 191 5 27 4 328 1 280 1 198 4 
287 1 203 1 291 2 87 4 204 1 130 14 38 1 41 1 40 2 175 7 93 1 90 52 296 27 46 2 246 2 47 7 48 4 181 1 50 1 97 1 252 7 99 1 303 2 56 1 308 1 57 1 259 7 100 2 311 4 17 7 316 1 188 25 146 1 264 2 266 1 271 1 233 1 191 8 27 8 328 1 280 1 198 4 
283 1 307 1 58 1 142 1 25 1 247 1 248 1 330 1 148 1 239 1 
82 1 243 1 
283 1 2 1 58 1 248 1 330 1 148 1 81 1 239 1 109 1 
18 1 139 1 
126 1 235 1 110 1 
14 1 283 1 58 1 101 1 227 1 148 1 7 1 111 1 248 1 330 1 98 1 78 1 304 2 239 1 
14 1 283 1 58 1 101 1 227 1 148 1 7 1 111 1 248 1 330 1 98 1 78 1 304 2 239 1 
14 1 283 1 58 1 101 1 227 1 148 1 7 1 111 1 248 1 330 1 98 1 78 1 304 2 239 1 
126 1 18 1 139 1 
126 1 18 1 139 1 
235 1 110 1 
126 1 235 1 110 1 
286 1 178 1 
283 1 58 1 201 1 289 1 101 1 227 1 148 1 111 1 248 1 330 1 163 1 304 1 78 1 239 1 
169 2 35 2 40 1 210 2 43 1 296 1 90 2 46 1 136 1 299 1 217 2 303 1 53 1 55 1 258 1 311 2 224 1 187 1 314 2 20 1 188 1 264 1 106 1 22 1 269 1 70 1 157 1 156 2 120 1 278 2 333 1 
0 1 288 1 35 2 37 2 20 1 229 1 21 1 210 2 149 1 267 1 152 1 154 1 324 1 136 1 216 1 278 2 31 1 281 1 165 1 
0 1 288 1 35 1 37 2 20 1 229 1 65 1 21 1 210 1 267 1 152 1 324 1 136 1 216 1 278 1 31 1 281 1 
284 1 134 1 154 1 35 1 278 1 21 1 254 1 210 1 
0 1 288 1 35 1 37 2 20 1 229 1 21 1 210 1 149 1 267 1 152 1 154 1 324 1 136 1 216 1 278 1 31 1 281 1 
144 1 
103 1 249 1 147 1 108 1 
113 1 309 1 85 1 171 1 331 1 132 1 147 1 23 1 
284 1 225 1 224 1 85 1 35 1 262 1 228 1 129 1 20 2 132 1 207 1 23 1 210 1 269 2 113 1 320 1 159 1 136 1 28 1 278 1 331 1 
113 1 100 1 85 1 48 1 87 1 331 1 132 1 38 1 147 1 23 1 
57 1 101 1 85 1 132 1 147 2 23 1 41 1 113 1 24 2 295 1 135 1 191 2 27 1 331 1 182 1 78 1 99 1 
85 1 249 1 331 1 132 1 147 1 23 1 
113 1 259 1 191 1 27 1 47 1 252 1 147 1 
284 1 35 1 278 1 210 1 
257 1 113 1 85 1 331 1 132 1 147 1 207 1 23 1 
58 1 248 1 32 1 
307 1 178 1 58 1 260 1 248 1 
58 1 248 1 32 1 
58 1 248 1 32 1 
58 1 248 1 19 1 
58 1 248 1 19 1 
58 1 248 1 19 1 
58 1 248 1 
330 1 148 1 
56 1 287 1 57 1 311 4 17 1 188 4 130 3 316 1 264 2 40 2 41 1 175 2 90 8 296 4 46 2 191 1 27 1 97 1 303 2 99 1 
56 1 57 1 188 3 316 1 130 2 108 1 41 1 175 2 296 3 90 6 191 1 27 1 97 1 99 1 
259 1 223 1 311 2 17 1 188 2 130 2 264 1 40 1 175 1 296 2 90 4 46 1 191 1 27 1 47 1 252 1 303 1 
259 1 100 1 291 1 17 1 87 1 188 4 130 2 175 1 90 7 296 3 191 1 27 1 47 1 48 2 252 1 
287 2 291 1 87 2 130 9 41 2 40 2 175 5 296 11 90 23 46 2 47 2 246 1 48 2 97 1 96 1 252 2 99 2 303 2 56 1 57 1 259 2 311 4 261 1 17 4 316 1 188 12 264 2 191 3 27 3 
90 1 48 1 188 1 
90 1 296 1 87 1 
259 1 311 2 223 1 60 1 17 1 188 3 130 2 264 1 40 1 175 1 90 6 296 3 46 1 191 1 47 1 27 1 252 1 303 1 
87 1 130 2 38 1 40 1 175 1 90 12 296 6 46 1 47 2 48 1 181 1 50 1 252 2 303 1 308 1 259 2 100 1 311 2 17 1 188 6 264 1 233 1 191 2 27 2 280 1 
57 1 17 1 188 3 130 2 41 1 175 1 296 3 90 6 191 1 27 1 99 1 
56 1 287 1 311 2 261 1 17 1 130 2 316 1 188 2 264 1 41 1 40 1 175 1 296 1 90 3 46 1 99 1 303 1 
57 1 311 2 17 2 130 5 188 5 264 1 40 1 41 2 175 3 296 5 90 10 46 1 191 2 27 2 181 1 182 1 303 1 99 2 
311 2 17 1 130 1 264 1 40 1 296 2 90 2 46 1 191 1 47 1 181 1 303 1 
259 1 311 2 17 1 188 2 130 2 264 1 40 1 175 1 296 2 90 4 46 1 191 1 27 1 47 1 181 1 252 1 303 1 
287 1 311 6 261 1 17 1 188 2 130 2 105 1 264 3 40 3 41 1 175 1 90 3 296 1 46 3 181 1 303 3 99 1 
287 2 291 1 87 3 130 12 41 3 40 5 175 7 90 34 296 16 46 5 47 3 48 4 181 1 97 1 252 3 99 3 303 5 56 1 57 2 259 3 100 1 223 1 311 10 261 1 17 5 316 1 188 18 105 1 264 5 66 1 273 1 323 1 191 5 27 5 
56 1 57 1 311 2 100 1 87 1 130 2 316 1 188 4 38 1 264 1 41 1 40 1 175 2 296 4 90 8 46 1 191 1 27 1 48 1 181 1 97 1 99 1 303 1 
291 1 87 1 130 3 38 1 41 1 40 2 175 2 90 11 296 6 46 2 47 1 48 2 181 1 97 1 252 1 99 1 303 2 56 1 57 1 100 1 311 4 223 1 17 1 316 1 188 5 264 2 191 2 27 1 
287 1 87 1 130 4 38 1 41 1 40 3 175 3 90 19 296 9 46 3 47 2 48 1 181 1 50 1 97 1 252 2 99 1 303 3 56 1 308 1 57 1 259 2 223 1 100 1 311 6 17 1 316 1 188 10 264 3 233 1 191 3 27 3 280 1 
287 1 87 1 130 5 38 1 41 1 40 3 175 3 90 17 296 10 46 3 47 2 48 1 181 1 50 1 97 1 252 2 99 1 303 3 56 1 308 1 57 1 259 1 223 1 100 1 311 6 17 2 316 1 188 7 264 3 233 1 191 3 27 2 280 1 
56 1 57 1 311 2 100 1 87 1 130 2 316 1 188 4 38 1 264 1 41 1 40 1 175 2 296 4 90 8 46 1 191 1 27 1 48 1 181 1 97 1 99 1 303 1 
87 1 130 2 38 1 40 1 175 1 90 12 296 6 46 1 47 2 48 1 181 1 50 1 252 2 303 1 308 1 259 2 100 1 311 2 17 1 188 6 264 1 233 1 191 2 27 2 280 1 
287 2 87 1 130 5 38 1 41 1 40 4 175 3 90 18 296 10 46 4 47 2 48 1 181 1 50 1 97 1 252 2 99 1 303 4 56 1 308 1 57 1 259 1 100 1 223 1 311 8 17 2 316 1 188 8 264 4 233 1 191 3 27 2 280 1 
287 2 87 1 130 6 38 1 40 4 175 3 90 16 296 9 46 4 47 3 48 1 181 1 50 1 252 3 303 4 308 1 259 2 100 1 311 8 17 3 188 7 264 4 105 1 233 1 191 3 27 2 280 1 
56 1 57 1 17 3 188 4 316 2 130 6 41 3 175 3 90 7 296 3 191 1 27 1 99 3 
287 2 87 1 130 4 38 1 41 1 40 4 175 3 90 18 296 10 46 4 47 2 48 1 181 1 50 1 97 1 252 2 99 1 303 4 56 1 308 1 57 1 259 1 100 1 311 8 17 1 316 1 188 8 264 4 105 1 233 1 191 3 27 2 280 1 
169 1 44 1 156 1 62 1 314 1 298 1 238 1 
169 1 226 1 62 1 314 1 270 1 44 1 232 1 156 1 298 1 76 1 238 1 218 1 
284 1 35 1 278 1 208 1 108 1 210 1 
284 1 54 1 169 1 1 1 224 1 35 1 314 2 20 1 210 1 269 1 320 1 156 2 214 1 136 1 30 1 278 1 250 1 238 1 
54 1 169 2 310 1 1 2 224 2 36 1 35 1 314 2 20 1 150 1 210 1 269 3 42 1 319 1 320 2 156 2 214 1 136 1 30 1 95 1 278 1 250 1 238 1 
54 1 169 2 310 1 1 2 224 2 36 1 35 2 314 2 20 1 104 1 150 1 210 2 269 3 42 1 319 1 320 2 156 2 214 1 136 1 122 1 30 1 95 1 278 2 238 1 
284 1 101 1 35 2 161 1 129 1 278 2 95 1 78 1 210 2 269 1 
284 1 101 1 35 2 129 1 278 2 95 1 78 1 294 1 210 2 269 1 
59 1 35 1 136 1 278 1 20 1 210 1 
284 2 258 1 59 1 224 2 35 7 262 1 292 1 20 3 317 1 210 6 269 3 320 1 26 1 136 2 278 7 31 1 217 1 334 1 300 1 197 1 165 1 
169 1 1 1 35 1 130 2 41 1 40 2 210 1 175 2 89 1 90 6 296 3 46 2 214 1 136 1 97 1 250 1 99 1 303 2 183 1 219 1 56 1 54 1 57 1 311 4 224 1 314 2 188 3 316 1 20 1 264 2 106 2 269 1 70 2 69 1 320 1 272 1 157 1 156 2 191 1 27 1 30 1 278 1 333 1 335 1 238 2 282 1 165 1 
201 1 101 1 78 1 
59 1 224 1 35 2 262 1 313 1 20 2 210 2 269 2 320 1 136 1 28 1 278 2 165 1 
284 1 224 1 186 1 35 2 20 2 317 1 208 1 210 2 269 1 320 1 244 1 136 1 278 2 197 1 165 1 
186 1 224 1 5 1 35 2 20 2 317 1 210 2 269 1 320 1 244 1 136 1 95 1 278 2 197 1 
0 1 284 1 324 1 35 1 136 1 37 1 278 1 20 1 281 1 210 1 
43 1 258 1 224 1 35 2 136 1 278 2 20 1 31 1 210 2 165 1 269 1 
284 1 35 3 208 1 210 2 244 1 136 2 258 1 224 2 186 1 20 3 317 1 269 3 320 1 26 1 278 3 334 1 197 1 165 1 
284 1 35 3 208 1 210 2 244 1 136 2 258 1 224 2 186 1 20 3 317 1 269 3 320 1 26 1 123 1 278 3 197 1 165 1 
284 1 54 1 169 1 1 1 224 1 35 1 314 2 20 1 210 1 269 1 320 1 156 2 214 1 136 1 122 1 30 1 278 1 238 1 
224 1 35 1 262 1 20 2 317 1 210 1 269 1 320 1 136 1 95 1 278 1 300 1 197 1 
241 1 77 1 196 1 238 1 12 1 
200 1 310 1 241 2 201 1 101 2 143 1 150 1 319 1 115 1 121 1 77 2 251 1 78 2 196 2 238 1 12 1 11 1 
169 1 156 1 187 1 314 1 77 1 196 1 22 1 12 1 53 1 
143 1 121 1 12 1 
221 1 194 1 108 1 306 1 
221 1 325 1 276 1 194 1 64 1 39 1 306 1 
9 1 325 1 6 1 
221 1 315 1 64 1 39 3 230 1 179 1 325 3 215 1 192 2 276 1 194 1 306 1 
221 1 92 1 325 2 276 1 51 1 194 1 64 1 39 2 306 1 
0 1 325 1 234 1 202 1 215 1 37 1 216 1 276 1 64 1 39 1 306 1 
221 1 325 1 215 1 276 1 64 1 39 1 306 1 
221 2 325 1 215 1 276 1 194 1 64 1 39 1 
221 1 15 1 325 2 215 1 276 2 124 1 64 2 301 1 39 2 306 1 
221 1 325 3 119 1 202 1 86 1 215 1 276 1 51 2 194 1 64 1 305 1 39 3 306 2 
0 1 221 1 16 1 37 2 64 1 39 2 152 1 324 1 325 2 215 1 276 1 216 1 51 1 194 1 306 1 
221 1 92 1 325 4 202 1 86 1 215 1 276 2 51 2 194 1 64 2 39 4 306 2 255 1 
221 1 325 1 215 1 276 1 194 1 64 1 39 1 306 1 
221 2 202 1 86 1 63 1 315 1 64 1 39 4 230 1 325 4 192 1 276 1 51 2 194 2 306 3 
221 1 312 1 64 1 173 1 39 2 242 1 325 2 215 1 276 1 51 1 194 1 306 1 
221 1 315 1 64 1 265 1 39 3 230 2 325 3 215 1 192 2 276 1 194 1 306 1 
102 2 180 1 52 1 306 2 
325 1 327 1 215 1 276 1 64 1 39 1 
221 1 325 2 215 1 276 1 51 1 194 1 64 1 305 1 39 2 306 1 
79 1 
221 1 325 1 215 1 276 1 194 1 64 1 39 1 306 1 
221 1 325 3 192 1 215 1 276 1 51 1 194 1 64 1 305 1 39 3 306 1 
202 1 86 1 63 1 306 1 
221 1 306 1 

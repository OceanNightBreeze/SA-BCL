#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (27,63) (27,63) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (27,63) (27,63) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (27,63) (27,63) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (27,63) (27,63) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (0,32,110,158,353) (12,78) (12,78) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (57,187) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (57,187) 147 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (57,187) 147 169 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 260 (86,122,201) (86,122,201) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 260 (86,122,201) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (239,337) (28,241,277) (86,122,201) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (79,138) (70,189) (70,189) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 260 (86,122,201) (86,122,201) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 233 179 68 356 220 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 233 179 68 356 220 99 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 233 179 68 356 220 99 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 233 179 68 356 220 99 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 260 (28,241,277) (28,241,277) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 260 (28,241,277) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (79,138) (79,138) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 260 (28,241,277) (28,241,277) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 339 68 356 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 233 179 68 356 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 126 (22,258) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (22,258) 198 293 (47,127) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 319 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4780 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
219 1 21 1 151 1 63 1 27 1 306 1 132 1 87 1 7 1 45 1 35 1 
219 1 21 1 151 1 63 1 27 1 306 1 132 1 87 1 7 1 45 1 35 1 
219 1 21 1 151 1 63 1 27 1 306 1 132 1 87 1 7 1 45 1 35 1 
219 1 21 1 151 1 63 1 27 1 306 1 132 1 87 1 7 1 45 1 35 1 
100 1 37 1 276 1 226 3 240 2 87 1 205 1 143 1 244 1 219 4 155 2 23 1 132 4 7 1 211 3 25 1 162 1 35 1 
100 1 219 1 150 1 353 1 151 1 78 1 132 1 87 1 7 1 45 1 35 1 12 1 
276 1 226 2 151 1 240 1 87 1 205 1 219 3 76 1 23 1 132 3 7 2 211 1 35 2 
100 1 276 1 226 5 205 1 143 1 146 1 76 1 132 9 185 1 211 7 7 2 9 1 35 2 37 1 151 1 240 4 87 1 244 1 170 1 219 9 155 2 23 3 25 1 162 1 
100 1 276 1 226 5 205 1 143 1 146 1 76 1 132 9 185 1 211 7 7 2 9 1 35 2 37 1 151 1 240 4 87 1 244 1 170 1 219 9 155 2 23 3 25 1 162 1 
319 1 
235 1 
36 2 301 2 291 1 52 1 176 2 204 2 328 2 329 2 
164 1 298 1 252 1 52 1 204 3 328 2 283 2 329 2 258 1 165 1 301 2 330 1 303 1 107 1 167 1 10 2 236 2 81 1 14 1 265 1 36 3 188 1 266 1 291 1 84 1 238 1 313 1 64 1 153 1 154 2 119 2 176 2 294 1 295 1 323 1 324 1 49 1 
36 1 301 1 52 1 261 1 176 1 204 1 186 1 328 1 344 1 329 1 
123 1 340 1 125 1 52 1 204 2 328 1 344 2 329 1 3 1 301 2 232 1 261 1 186 1 36 2 90 1 321 1 176 1 247 1 222 1 141 1 250 1 
36 1 123 1 125 2 204 1 328 1 90 1 344 1 329 1 301 1 3 1 232 1 176 1 247 2 222 1 250 1 
237 1 332 1 225 1 125 1 247 1 
311 1 237 1 225 1 125 2 247 2 217 1 250 1 90 1 
237 1 125 1 247 1 
36 1 340 1 225 1 125 1 52 1 204 1 328 1 344 1 329 1 301 1 261 1 176 1 247 1 186 1 
90 1 
237 1 225 1 125 2 247 2 217 1 250 1 263 1 90 1 
340 1 200 1 341 2 273 2 225 2 254 1 125 5 52 1 204 1 328 1 183 1 344 1 329 1 301 1 6 1 261 1 186 1 59 1 13 1 36 1 82 2 237 2 38 1 335 1 16 1 350 2 217 1 115 1 316 2 90 2 18 1 355 1 176 1 246 5 247 5 161 5 250 2 251 2 
36 2 266 1 164 1 298 1 181 1 313 1 204 2 258 1 338 1 329 1 301 1 303 1 154 1 107 1 176 1 167 1 294 1 212 1 10 1 236 1 
319 1 
97 1 36 2 301 2 291 2 176 1 204 2 104 1 328 1 329 1 
77 1 181 1 160 1 
36 1 266 1 164 1 291 1 298 1 313 1 204 1 258 1 303 1 154 1 175 1 107 1 167 1 294 1 10 1 236 1 
36 3 301 3 291 1 176 3 204 3 328 1 212 1 329 3 
36 1 301 1 261 1 176 1 204 1 344 1 329 1 
36 1 301 1 97 1 176 1 104 1 204 1 328 1 344 1 329 1 
97 1 123 1 164 1 298 1 252 1 102 1 125 1 52 1 204 4 328 2 344 1 283 2 258 1 329 3 165 1 301 3 3 1 303 1 333 1 232 1 107 1 167 1 212 1 10 1 81 1 236 1 265 1 36 4 266 1 291 1 84 1 313 1 64 1 153 1 338 1 154 1 119 1 176 3 247 1 294 1 222 1 295 1 323 1 324 1 
36 2 74 1 291 1 204 2 344 1 197 1 329 1 301 2 321 1 176 1 212 1 
97 1 36 3 123 1 124 1 125 1 102 1 204 3 328 1 90 1 344 1 338 1 329 3 301 3 3 1 232 1 176 3 247 1 222 1 212 2 
97 1 36 2 181 1 204 2 328 1 329 2 301 2 176 2 160 1 212 1 
36 1 266 1 164 1 291 1 298 1 313 1 204 1 258 1 303 1 154 1 107 1 167 1 294 1 10 1 236 1 
36 1 266 1 164 1 291 1 298 1 39 1 216 1 313 1 204 1 154 1 107 1 167 1 294 1 10 1 236 1 
252 1 181 2 283 2 165 1 285 1 131 1 77 2 233 1 82 1 265 2 289 1 61 1 84 1 83 1 62 1 316 1 268 1 64 1 153 1 119 4 160 2 324 1 72 1 49 2 
36 1 301 1 232 1 176 1 336 1 204 1 344 1 329 1 
74 1 36 5 97 1 291 1 204 5 328 1 56 1 344 1 338 1 197 1 329 4 128 1 301 5 321 1 176 4 212 2 
36 2 301 2 261 1 336 1 176 2 204 2 344 1 329 2 
203 1 187 1 
203 1 187 1 
255 1 203 1 57 1 187 1 
255 1 203 1 57 1 187 1 
255 1 57 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
203 1 187 1 
147 1 203 1 58 1 187 1 
147 1 125 1 203 1 58 1 247 1 169 1 187 1 
100 1 162 1 244 1 
100 1 150 1 162 1 
100 3 192 1 150 1 234 1 337 1 244 2 
100 2 192 1 150 1 239 1 234 1 244 1 
100 2 192 2 150 1 234 1 244 1 
341 1 273 1 225 4 26 1 179 1 125 5 229 1 105 1 233 1 210 2 11 1 235 3 82 1 237 1 15 2 350 1 194 1 243 1 217 1 116 1 268 1 316 1 90 2 65 1 18 1 271 1 246 3 48 2 247 5 159 1 161 2 250 1 
341 2 225 7 273 2 179 3 125 9 105 4 257 1 332 5 5 5 233 3 210 6 109 1 235 9 82 3 288 1 237 6 194 1 350 2 351 1 217 1 116 2 268 3 316 3 90 5 65 2 91 1 18 1 355 1 246 8 48 6 247 9 139 1 159 3 161 6 250 1 
341 1 225 2 273 1 26 1 125 3 179 1 105 1 233 1 210 2 235 4 82 1 15 1 350 1 243 1 116 1 268 1 316 1 90 3 65 1 355 1 246 3 247 3 48 2 159 2 250 1 161 2 
341 1 273 1 225 3 26 1 125 4 179 2 105 2 233 2 210 4 109 1 235 7 82 2 288 1 15 2 350 1 243 1 116 1 268 2 316 2 90 4 65 1 355 1 246 5 48 4 247 4 159 3 139 1 250 1 161 4 
319 1 
313 1 54 1 
309 1 
298 1 313 1 
266 1 208 1 298 1 305 2 313 3 55 1 
266 1 298 1 313 1 
313 1 310 1 
274 1 278 1 182 1 228 1 106 1 6 1 59 1 8 1 82 2 265 4 61 3 335 1 16 1 316 2 119 9 163 1 72 2 49 5 
274 1 278 1 182 1 228 1 106 1 6 1 59 1 8 2 82 2 265 4 61 4 335 1 16 1 316 2 119 9 163 1 72 2 49 5 
274 1 278 1 182 1 228 1 106 1 6 1 59 1 8 1 82 2 265 4 61 3 135 1 335 1 16 1 316 2 119 9 163 1 72 2 49 5 
50 1 274 2 252 1 278 2 179 3 281 1 299 1 182 2 327 1 228 1 256 3 283 2 165 1 106 1 166 4 6 1 233 3 59 1 8 6 348 1 265 16 82 5 61 11 335 2 16 2 44 1 64 1 316 5 268 3 20 1 119 33 163 1 324 1 72 5 49 17 
224 1 50 1 274 1 252 2 278 1 182 1 228 1 283 4 165 2 106 1 6 1 59 1 8 2 82 2 265 5 61 5 335 1 16 1 316 2 64 2 119 11 324 2 72 3 223 1 49 6 
201 1 151 1 87 1 260 1 219 1 154 1 173 1 132 1 7 1 95 1 308 1 35 1 10 1 236 1 264 1 122 1 
202 1 151 1 129 1 260 1 219 2 154 1 118 1 132 2 211 1 7 1 95 1 308 1 35 1 10 1 236 1 264 1 122 1 
100 1 164 1 150 1 151 1 86 1 337 1 241 1 129 1 219 1 154 1 118 1 132 1 211 1 95 1 294 1 308 1 96 1 10 1 236 1 264 1 
189 1 202 1 151 2 41 1 219 1 154 1 138 1 132 1 167 1 7 1 95 2 70 1 308 2 35 1 10 1 236 1 264 2 
201 1 151 1 87 1 129 1 260 1 219 1 154 1 132 1 7 1 95 1 308 1 35 1 10 1 236 1 264 1 122 1 
142 1 
272 2 273 1 178 2 145 1 3 1 284 1 232 1 235 2 10 2 236 2 190 2 334 1 237 6 191 4 65 1 18 1 154 2 246 2 247 5 159 2 294 1 250 1 161 2 199 1 341 1 123 1 164 1 298 1 125 5 204 1 344 1 301 1 209 2 130 2 167 2 33 2 346 1 34 1 80 1 36 1 214 1 349 1 313 1 350 1 217 3 314 1 218 2 90 2 318 1 46 1 321 1 137 1 140 1 222 1 141 1 
123 1 178 1 125 3 204 1 344 1 301 1 145 1 3 1 232 1 346 1 263 1 36 1 191 2 237 2 314 1 217 1 318 1 321 1 247 3 222 1 140 1 141 1 
36 1 123 1 191 3 125 2 204 1 314 1 318 1 344 1 3 1 145 1 301 1 321 1 209 1 232 1 247 2 140 1 346 1 222 1 141 1 
123 1 178 1 125 3 204 1 344 1 301 1 145 1 3 1 209 1 232 1 346 1 263 1 36 1 191 3 237 2 217 1 314 1 218 1 318 1 321 1 247 3 222 1 140 1 141 1 
272 2 273 1 178 4 279 1 52 1 328 1 329 1 3 1 145 1 232 1 186 1 191 5 237 7 190 2 292 1 18 1 69 1 246 1 247 5 159 2 250 2 161 1 340 1 123 1 341 1 125 5 204 2 344 2 206 1 301 2 209 3 130 2 261 1 346 1 33 2 263 1 36 2 349 1 350 1 217 3 314 1 218 4 90 2 318 1 46 1 171 1 321 1 176 1 222 1 140 1 141 1 
272 2 273 1 178 2 3 1 145 1 284 1 232 1 235 2 191 4 190 2 237 4 18 1 246 1 247 4 159 2 161 1 250 1 123 1 341 1 125 4 204 1 344 1 301 1 130 2 209 2 346 1 33 2 36 1 349 1 350 1 314 1 217 2 218 2 46 1 318 1 90 2 321 1 222 1 140 1 141 1 
272 2 123 1 341 1 273 1 178 2 125 4 279 1 204 1 344 1 206 1 301 1 145 1 3 1 209 2 130 2 232 1 33 2 346 1 36 1 237 4 190 2 191 4 349 1 350 1 217 2 314 1 218 2 90 1 46 1 318 1 171 1 321 1 18 1 246 1 247 4 159 2 222 1 140 1 250 1 161 1 141 1 
272 2 123 1 341 1 273 1 178 2 125 4 279 1 204 1 344 1 206 1 301 1 145 1 3 1 209 2 130 2 232 1 33 2 346 1 36 1 237 4 190 2 191 4 349 1 350 1 217 2 314 1 218 2 90 1 46 1 318 1 171 1 321 1 18 1 246 1 247 4 159 2 222 1 140 1 250 1 161 1 141 1 
123 1 341 1 273 1 178 2 125 4 204 1 344 1 301 1 145 1 3 1 207 1 209 2 130 2 232 1 346 1 235 2 36 1 237 4 190 2 191 4 290 1 349 1 350 1 217 2 314 1 218 2 90 1 318 1 352 2 171 1 321 1 17 2 18 1 93 1 246 1 247 4 222 1 140 1 250 1 161 1 141 1 
272 2 341 1 123 1 273 1 178 3 125 4 279 1 204 1 206 1 344 1 301 1 145 1 3 1 130 2 209 3 232 1 33 2 346 1 36 1 190 2 191 5 237 5 349 1 350 1 217 2 314 1 292 1 218 3 90 1 46 1 318 1 171 1 321 1 18 1 246 1 247 4 159 2 222 1 140 1 250 1 161 1 141 1 
272 2 341 1 123 1 273 1 178 3 125 4 279 1 204 1 206 1 344 1 301 1 145 1 3 1 130 2 209 3 232 1 33 2 346 1 36 1 190 2 191 5 237 5 349 1 350 1 217 2 314 1 292 1 218 3 90 1 46 1 318 1 171 1 321 1 18 1 246 1 247 4 159 2 222 1 140 1 250 1 161 1 141 1 
273 1 178 2 3 1 145 1 284 1 232 1 235 2 191 4 190 2 237 4 18 1 17 2 246 1 247 4 161 1 250 1 123 1 341 1 125 4 204 1 344 1 301 1 130 2 209 2 346 1 36 1 349 1 350 1 314 1 217 2 218 2 318 1 90 1 352 2 321 1 93 1 222 1 140 1 141 1 
165 1 84 1 131 1 252 1 64 1 153 1 324 1 319 1 283 2 
297 1 252 2 179 2 181 11 299 1 256 3 283 4 165 2 166 3 77 11 304 1 233 2 8 1 108 1 265 6 82 1 61 2 291 1 84 1 238 1 44 1 168 1 64 2 153 2 316 2 268 1 119 14 160 4 295 1 72 1 324 2 73 1 49 8 
164 1 298 1 252 1 204 2 258 1 329 1 283 2 301 1 165 1 303 1 107 1 167 1 212 1 10 1 236 1 213 1 36 2 265 1 266 1 60 1 291 1 84 1 238 1 313 1 64 1 153 1 338 1 154 1 175 1 119 2 176 1 322 1 294 1 160 1 295 1 324 1 73 1 49 1 
179 2 181 6 228 1 283 6 329 1 106 1 231 2 6 1 107 2 233 2 59 1 8 1 10 1 236 1 61 5 291 1 335 1 238 1 16 1 153 3 64 3 117 2 197 1 338 1 154 1 67 2 119 22 294 2 160 6 249 1 295 1 72 4 73 1 164 2 298 2 252 3 204 3 344 1 258 2 165 3 301 1 303 2 77 6 167 1 212 1 81 2 265 11 36 3 82 4 266 2 84 3 313 2 316 4 268 2 47 2 94 1 176 1 324 3 49 11 
296 1 325 1 164 2 298 2 252 2 204 1 343 1 75 1 329 1 283 4 301 1 165 2 129 1 148 1 29 1 131 1 167 2 212 1 10 8 236 7 14 2 36 1 265 1 334 1 84 2 238 1 193 1 313 3 64 2 153 2 154 8 137 1 173 1 119 2 176 1 294 2 295 1 324 2 49 1 
97 1 252 1 179 1 53 1 181 1 204 1 328 1 329 1 283 2 165 1 301 1 77 1 233 1 36 1 82 1 265 2 61 1 84 1 64 1 153 1 316 1 268 1 119 3 176 1 160 1 72 1 324 1 73 1 49 1 
61 1 84 1 83 1 252 1 181 1 153 1 64 1 316 1 283 2 165 1 131 1 77 1 119 2 233 1 160 1 8 1 324 1 49 2 
82 1 265 2 289 1 61 1 84 1 252 1 181 1 153 1 64 1 268 1 283 2 165 1 131 1 77 1 119 2 160 1 72 1 324 1 
252 1 179 1 181 2 283 2 165 1 131 1 77 2 233 1 8 1 82 1 265 2 61 2 84 1 316 1 64 1 153 1 268 1 119 4 160 2 324 1 72 1 49 2 
61 1 84 1 83 1 252 1 181 1 153 1 64 1 316 1 283 2 165 1 148 1 77 1 119 2 233 1 160 1 8 1 324 1 49 2 
82 1 265 2 289 1 61 1 84 1 252 1 181 1 153 1 64 1 268 1 283 2 165 1 148 1 77 1 119 2 160 1 72 1 324 1 
252 1 179 1 181 2 283 2 165 1 148 1 77 2 233 1 8 1 82 1 265 2 61 2 84 1 316 1 64 1 153 1 268 1 119 4 160 2 324 1 72 1 49 2 
252 1 179 1 181 2 283 2 165 1 77 2 233 1 8 1 82 1 265 2 61 2 84 1 316 1 64 1 153 1 268 1 119 4 160 2 324 1 72 1 49 2 
164 1 298 1 252 1 204 1 258 1 283 2 165 1 303 1 107 1 167 1 10 1 81 1 236 1 36 1 265 1 266 1 291 1 84 1 238 1 313 1 153 1 64 1 154 1 119 2 294 1 295 1 324 1 49 1 
164 1 298 1 252 1 204 1 283 2 165 1 107 1 167 1 10 1 236 1 36 1 265 1 266 1 291 1 84 1 238 1 39 1 216 1 313 1 153 1 64 1 89 1 154 1 119 2 294 1 295 1 324 1 49 1 
252 1 179 1 181 2 283 2 165 1 77 2 233 1 8 1 82 1 265 2 61 2 84 1 316 1 64 1 153 1 268 1 119 4 160 2 324 1 72 1 49 2 73 1 
164 1 298 1 252 1 179 1 181 2 204 1 258 1 283 2 165 1 303 1 231 1 77 2 107 1 233 1 8 1 10 1 81 1 236 1 265 2 82 1 36 1 266 1 61 2 84 1 313 1 268 1 316 1 153 1 64 1 154 1 173 1 119 4 160 2 294 1 72 1 324 1 49 2 
97 1 252 1 179 1 181 1 204 1 328 1 329 1 283 2 165 1 301 1 77 1 233 1 8 1 265 1 82 1 36 1 61 1 84 1 268 1 64 1 153 1 316 1 119 3 176 1 160 1 71 1 324 1 73 1 49 2 
98 1 99 1 253 2 252 2 179 3 299 1 256 1 283 4 4 2 165 2 166 2 286 1 233 3 8 3 265 10 82 3 61 6 112 1 44 1 64 2 316 3 268 3 19 1 220 1 119 19 157 1 72 3 324 2 223 1 49 9 
50 1 98 2 99 1 252 2 179 2 256 2 283 4 4 2 165 2 166 2 233 2 82 1 265 8 61 1 136 1 44 2 64 2 316 2 268 1 220 2 68 1 119 17 354 1 157 1 356 1 339 1 72 1 324 2 223 1 49 9 
50 1 98 2 99 1 253 1 252 3 51 1 179 4 299 1 256 3 283 6 4 3 165 3 166 4 286 1 233 4 8 2 265 15 82 3 61 4 136 1 44 3 64 3 316 4 268 3 19 1 220 1 68 1 354 1 119 30 356 1 157 1 339 1 72 2 324 3 223 1 49 15 
50 1 98 2 99 1 253 1 252 3 51 1 179 4 299 1 256 3 283 6 4 3 165 3 166 4 286 1 233 4 8 2 265 15 82 3 61 5 136 1 44 3 64 3 316 4 268 3 19 1 220 1 68 1 354 1 119 30 356 1 157 1 339 1 72 3 324 3 223 1 49 15 
98 1 99 1 252 1 179 6 299 2 228 1 256 4 283 2 4 2 165 1 106 1 166 4 304 2 233 6 8 4 265 17 82 5 61 9 136 1 44 2 64 1 316 6 268 5 220 1 68 1 354 1 119 36 356 1 157 1 339 1 72 5 324 1 223 1 49 19 
296 1 164 1 298 1 252 1 326 1 204 2 75 1 283 2 301 2 165 1 133 1 10 2 236 2 14 2 36 2 265 1 84 1 40 1 238 1 42 1 313 1 242 1 153 1 64 1 154 2 119 2 294 1 295 1 324 1 73 1 49 1 
129 1 260 1 154 2 277 1 173 1 196 1 308 1 10 2 28 1 236 2 
129 1 260 1 154 1 345 1 308 1 10 1 28 1 236 1 
154 1 138 1 167 1 196 1 79 1 308 1 10 1 236 1 
129 1 260 1 154 1 277 1 196 1 308 1 10 1 28 1 236 1 
312 1 
319 1 
272 1 341 1 273 1 125 1 33 1 235 1 237 1 350 1 217 1 46 1 90 2 18 1 246 1 247 1 159 1 161 1 250 1 
266 1 341 1 273 1 164 1 298 1 85 1 313 2 350 1 54 1 55 1 302 1 18 1 154 1 167 1 294 2 10 1 236 1 
341 2 273 2 125 1 179 1 256 1 166 1 233 1 210 4 235 6 82 1 237 1 136 1 44 1 350 2 217 1 316 1 268 1 90 4 18 2 68 1 174 1 354 1 356 1 246 5 247 1 48 4 159 3 161 3 250 1 339 1 251 1 
341 1 340 1 273 1 254 1 125 1 52 1 204 1 328 1 344 1 206 1 329 1 301 1 6 1 261 1 186 1 59 1 36 1 82 1 335 1 16 1 350 1 316 2 18 1 246 2 176 1 247 1 161 2 251 2 
341 1 273 1 350 1 183 1 115 1 90 1 18 1 246 1 161 1 250 1 
82 2 254 1 179 2 316 2 268 2 90 5 67 1 233 2 246 5 48 5 210 5 159 5 161 5 235 10 251 2 
237 1 125 1 247 1 217 1 250 1 90 1 
199 1 341 2 273 2 164 2 298 2 125 3 282 1 144 1 331 1 167 2 34 1 10 4 80 2 236 4 266 1 134 1 237 4 334 1 313 2 350 2 315 1 217 2 317 1 65 2 320 2 18 1 154 4 137 1 156 1 355 1 246 2 247 3 294 3 161 2 
164 1 298 1 252 1 52 1 204 3 328 2 283 2 329 2 258 1 165 1 301 2 303 1 107 1 167 1 10 1 236 1 81 1 265 1 36 3 266 1 291 1 84 1 313 1 64 1 153 1 154 1 119 1 176 2 294 1 295 1 323 1 324 1 
341 1 273 1 182 1 350 1 90 4 65 1 18 1 246 1 48 2 210 2 159 2 161 2 250 2 235 4 80 1 
31 1 287 1 2 1 
31 1 287 1 2 1 
31 1 287 1 2 1 
287 1 88 1 2 1 
30 1 113 1 287 1 152 1 2 1 
287 1 88 1 2 1 
287 1 88 1 2 1 
287 1 2 1 
203 1 187 1 
50 1 252 2 228 1 283 4 165 2 106 1 6 1 59 1 8 2 265 5 82 2 61 4 335 1 16 1 64 2 316 2 119 10 324 2 72 2 49 5 
319 1 
265 2 82 1 61 2 177 1 252 1 179 1 268 1 64 1 316 1 283 2 165 1 119 4 233 1 8 1 72 1 324 1 49 2 
82 1 265 4 61 2 179 1 44 1 299 1 256 1 268 1 316 1 166 2 119 7 233 1 8 1 72 1 49 3 
50 1 297 1 252 1 179 2 299 1 228 1 256 2 283 2 165 1 106 1 166 2 6 1 304 1 233 2 59 1 8 2 82 4 265 10 61 5 335 1 16 1 268 2 316 4 64 1 119 20 72 3 324 1 49 10 
265 1 166 1 119 1 
119 1 256 1 49 1 
265 3 82 1 177 1 61 3 252 1 179 1 64 1 316 1 268 1 283 2 165 1 67 1 119 6 233 1 8 1 324 1 72 2 49 3 
82 1 265 4 61 1 252 1 179 2 136 1 44 1 256 1 268 1 316 2 64 1 283 2 165 1 166 1 68 1 354 1 119 10 356 1 233 2 339 1 72 1 324 1 49 6 223 1 
82 1 265 3 61 2 335 1 16 1 316 1 6 1 119 6 8 1 72 1 49 3 
265 2 50 1 61 2 252 1 335 1 16 1 228 1 64 1 283 2 165 1 106 1 119 3 59 1 8 1 121 1 72 1 324 1 49 1 
265 5 82 2 61 5 252 1 335 2 16 2 64 1 316 2 283 2 165 1 119 10 6 1 59 1 8 2 324 1 72 3 223 1 49 5 
61 1 252 1 64 1 316 1 283 2 165 1 119 2 233 1 8 1 324 1 223 1 49 2 
265 2 82 1 61 2 252 1 179 1 268 1 64 1 316 1 283 2 165 1 119 4 233 1 8 1 72 1 324 1 223 1 49 2 
50 1 265 2 61 2 252 3 335 1 16 1 64 3 283 6 165 3 119 3 286 1 8 1 121 1 324 3 72 1 223 1 49 1 
50 1 177 1 252 4 179 2 281 1 327 1 228 1 256 3 283 8 165 4 106 1 166 3 6 1 286 1 233 2 59 1 8 3 265 12 82 4 61 6 335 1 16 1 44 1 64 4 316 4 268 2 20 1 119 24 72 3 324 4 223 1 49 12 
252 1 256 1 228 1 283 2 165 1 106 1 166 1 6 1 59 1 8 1 82 2 265 5 61 3 335 1 44 1 16 1 316 2 64 1 119 10 356 1 72 2 324 1 223 1 49 5 
177 1 252 2 179 1 299 1 228 1 256 1 283 4 165 2 106 1 166 2 6 1 233 1 59 1 8 2 82 2 265 6 61 4 335 1 16 1 44 1 64 2 316 3 119 13 356 1 72 2 324 2 223 1 49 7 
50 1 252 2 179 2 256 1 283 4 165 2 166 1 233 2 265 5 82 1 61 1 136 1 44 1 64 2 316 2 268 1 119 11 354 1 68 1 356 1 339 1 324 2 72 1 223 1 49 6 
82 1 265 4 61 1 252 1 179 2 136 1 44 1 256 1 268 1 316 2 64 1 283 2 165 1 166 1 68 1 354 1 119 10 356 1 233 2 339 1 72 1 324 1 49 6 223 1 
252 1 256 1 228 1 283 2 165 1 106 1 166 1 6 1 59 1 8 1 82 2 265 5 61 3 335 1 44 1 16 1 316 2 64 1 119 10 356 1 72 2 324 1 223 1 49 5 
82 1 265 4 61 1 252 1 179 2 136 1 44 1 256 1 268 1 316 2 64 1 283 2 165 1 166 1 68 1 354 1 119 10 356 1 233 2 339 1 72 1 324 1 49 6 223 1 
50 1 177 1 252 3 179 2 256 1 283 6 165 3 166 1 233 2 265 5 82 1 61 1 136 1 44 1 64 3 316 2 268 1 68 1 119 11 354 1 356 1 339 1 324 3 72 1 223 1 49 6 
50 1 252 3 179 2 256 1 283 6 165 3 166 1 286 1 233 2 265 5 82 1 61 2 136 1 44 1 64 3 316 2 268 1 68 1 119 11 354 1 356 1 339 1 324 3 72 2 223 1 49 6 
265 3 82 1 61 4 335 2 16 2 228 1 316 1 106 1 119 5 6 1 59 1 8 2 72 2 49 2 
50 1 252 3 179 2 256 1 283 6 165 3 166 1 286 1 233 2 265 5 82 1 61 1 136 1 44 1 64 3 316 2 268 1 68 1 119 11 354 1 356 1 339 1 324 3 72 1 223 1 49 6 
74 1 36 1 291 1 204 1 344 1 197 1 301 1 321 1 307 1 
74 1 36 1 291 1 280 1 180 1 204 1 344 1 197 1 92 1 66 1 301 1 321 1 184 1 307 1 
154 1 167 1 10 1 236 1 319 1 
36 2 266 1 164 1 291 1 298 1 313 1 204 2 329 1 258 1 301 1 154 1 107 1 176 1 167 1 294 1 212 1 10 1 236 1 
164 1 298 2 126 1 204 2 344 1 258 1 329 1 301 2 3 1 232 1 107 1 212 1 10 1 236 1 310 1 36 2 266 2 291 1 313 3 320 1 154 1 176 2 294 1 
164 1 298 2 126 1 204 2 344 1 329 1 301 2 3 1 232 1 107 1 212 1 10 2 236 2 310 1 36 2 266 2 291 1 39 1 114 1 313 3 320 1 154 2 176 2 294 1 
123 1 164 1 298 1 125 2 126 1 54 1 305 1 149 1 167 1 10 3 236 3 310 1 266 1 237 1 114 1 313 4 90 1 269 1 320 1 154 3 247 2 294 1 250 1 
266 1 164 1 298 1 126 1 125 1 313 4 54 1 320 1 154 1 22 1 305 1 247 1 294 1 10 1 236 1 310 1 
164 1 154 1 294 1 343 1 10 1 236 1 
266 1 325 1 164 2 298 2 193 1 313 3 343 1 317 1 282 1 55 1 75 1 129 1 29 1 154 7 173 1 167 2 262 1 294 3 10 7 236 6 14 1 
228 1 283 4 329 1 106 1 231 1 6 1 107 1 59 1 8 1 10 1 236 1 61 3 291 1 335 1 16 1 153 2 64 2 197 1 154 1 119 8 294 1 72 2 73 1 164 1 298 1 252 2 204 2 344 1 258 1 165 2 301 1 303 1 133 1 212 1 81 1 36 2 82 2 265 4 266 1 84 2 313 1 316 2 47 1 173 1 176 1 324 2 49 4 
341 1 225 1 134 1 273 1 125 1 313 2 350 1 127 1 54 1 198 1 293 1 18 1 154 1 22 1 305 1 167 1 247 1 10 1 236 1 
266 1 164 1 298 1 85 1 313 2 343 1 55 1 154 2 173 1 305 1 294 2 10 2 236 2 
334 1 164 1 298 1 114 1 313 1 230 1 154 4 137 1 173 1 167 1 294 1 10 4 236 4 
266 1 164 1 298 1 313 1 317 1 282 1 144 1 320 1 154 2 156 1 347 1 294 2 10 2 236 2 
100 1 164 1 154 1 150 1 167 1 294 1 162 1 96 1 10 1 236 1 
164 1 298 1 313 1 242 1 75 1 129 1 154 2 173 1 294 1 10 2 236 2 
334 1 325 1 164 2 298 2 313 3 75 1 320 1 230 1 137 1 154 5 29 1 173 1 167 1 294 2 10 5 236 4 
334 1 325 1 164 2 298 2 275 1 313 3 75 1 320 1 230 1 137 1 154 5 173 1 167 1 294 2 10 5 236 4 
36 2 266 1 164 1 291 1 298 1 39 1 313 1 204 2 329 1 301 1 154 1 107 1 176 1 167 1 294 1 212 1 10 1 236 1 
266 1 164 1 298 1 313 1 317 1 282 1 55 1 320 1 154 1 262 1 294 2 10 1 236 1 
36 1 301 1 221 1 215 1 326 1 40 1 172 1 42 1 204 1 
221 1 43 1 1 1 
291 1 215 1 221 1 172 1 267 1 
123 1 225 1 291 1 215 2 125 2 102 1 267 2 43 1 90 1 344 1 1 1 3 1 221 1 270 1 232 1 172 2 247 2 222 1 250 1 
319 1 
219 1 226 1 276 1 132 1 7 1 205 1 35 1 
151 1 132 1 95 1 
0 1 226 1 276 1 87 1 205 1 219 3 353 2 158 1 132 3 7 1 35 1 110 1 
219 2 155 1 226 1 276 1 132 2 211 1 7 1 205 1 35 1 
100 1 226 1 240 1 87 1 244 1 219 1 132 1 7 1 25 1 35 1 162 1 
219 1 226 1 276 1 132 1 87 1 7 1 35 1 
219 1 276 2 132 1 87 1 7 1 205 1 35 1 
226 1 276 1 87 1 195 1 300 1 219 2 132 2 7 2 248 1 35 2 
276 1 226 2 240 1 87 1 205 1 146 1 219 3 23 1 132 3 185 1 7 1 211 2 35 1 
100 2 226 1 276 1 150 1 87 1 337 1 205 1 244 1 219 2 132 2 7 1 211 1 24 1 35 1 162 1 
276 1 226 2 240 1 87 1 205 1 143 1 219 4 155 1 23 1 132 4 7 2 211 2 35 2 
219 1 226 1 276 1 132 1 87 1 7 1 205 1 35 1 
0 1 276 2 226 3 240 1 205 2 219 4 353 1 120 1 23 1 132 4 211 2 7 1 35 1 110 1 
226 1 276 1 87 1 227 1 205 1 259 1 219 2 132 2 7 1 211 1 9 1 35 1 
0 2 226 1 276 1 87 1 205 1 219 3 353 2 32 1 132 3 7 1 35 1 110 1 
101 1 226 2 342 1 103 2 
219 1 245 1 132 1 87 1 7 1 35 1 
146 1 219 2 226 1 276 1 132 2 87 1 211 1 7 1 205 1 35 1 
111 1 
219 1 226 1 276 1 132 1 87 1 7 1 205 1 35 1 
276 1 226 1 87 1 205 1 146 1 219 3 353 1 132 3 211 1 7 1 35 1 
226 1 120 1 23 1 240 1 
226 1 276 1 

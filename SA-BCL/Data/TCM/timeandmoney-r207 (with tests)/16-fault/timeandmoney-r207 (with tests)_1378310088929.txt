#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (87,109,184,287,289) (0,207) (0,207) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 130 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (4,146) (4,146) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 75 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 75 262 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 308 58 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 310 84 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 9 177 239 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 9 177 239 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 9 177 220 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 310 84 79 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 310 84 79 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 9 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 234 43 119 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 234 43 119 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 234 43 119 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 234 43 119 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 234 43 119 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (4,146) (4,146) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (4,146) (4,146) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (4,146) (4,146) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 117 38 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (114,153) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 189 (24,98) 81 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 264 83 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 255 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (148,191) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (16,100) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
94 3 242 1 319 3 3 1 185 1 97 1 323 1 125 1 56 2 254 2 190 1 90 1 18 2 
94 9 242 6 46 1 3 4 185 1 97 3 186 1 52 1 56 2 254 2 190 1 109 1 60 1 64 1 259 1 18 5 266 2 319 9 71 1 120 1 323 1 231 1 123 2 125 2 327 2 90 1 179 2 333 1 
94 9 242 6 46 1 3 4 185 1 97 3 186 1 52 1 56 2 254 2 190 1 109 1 60 1 64 1 259 1 18 5 266 2 319 9 71 1 120 1 323 1 231 1 123 2 125 2 327 2 90 1 179 2 333 1 
94 10 242 7 46 1 3 5 185 1 97 4 186 1 52 1 56 2 254 2 190 1 109 1 60 1 64 1 259 1 18 6 266 2 319 10 71 1 120 1 323 1 231 1 123 2 125 2 327 2 90 1 179 2 333 1 
94 7 242 4 46 1 3 3 185 1 97 2 186 1 52 1 56 2 254 2 190 1 109 1 60 1 64 1 259 1 18 4 266 2 319 7 71 1 323 1 231 1 123 2 125 2 327 1 90 1 179 2 333 1 
94 4 242 3 266 1 319 4 3 2 71 1 97 1 120 1 323 1 123 1 231 1 327 2 56 1 254 1 190 1 90 1 179 1 18 3 
0 1 94 1 56 1 266 1 319 1 254 1 109 1 86 1 64 1 207 1 323 1 125 1 
242 7 94 9 46 1 3 4 97 3 185 1 306 1 56 2 254 2 190 1 60 1 18 5 266 1 319 9 71 1 26 1 120 1 323 1 231 1 123 1 125 1 327 2 90 1 179 1 
242 7 94 9 46 1 3 4 97 3 185 1 306 1 56 2 254 2 190 1 60 1 18 5 266 1 319 9 71 1 26 1 120 1 323 1 231 1 123 1 125 1 327 2 90 1 179 1 
115 1 228 1 15 1 
115 1 228 1 15 1 
156 1 115 2 172 1 212 1 228 2 15 1 67 1 
255 1 
113 1 115 1 270 1 228 1 122 1 99 1 140 1 161 1 162 1 164 1 252 1 284 1 
115 2 228 2 322 1 122 1 99 1 140 1 161 1 162 1 164 1 55 1 252 1 284 1 221 1 
115 1 228 1 15 1 
115 1 228 1 15 1 
115 1 228 1 
317 1 134 1 322 1 99 2 140 2 162 2 55 1 205 2 221 1 
241 1 321 1 209 1 
69 1 44 1 48 1 196 1 198 2 49 1 160 1 139 2 140 1 162 1 309 1 104 1 280 1 12 1 169 1 167 1 219 2 205 1 16 1 
205 1 255 1 
241 1 69 1 48 1 196 1 23 1 198 1 322 1 160 1 99 1 139 1 140 2 309 1 162 2 104 1 55 1 280 1 12 1 219 1 16 1 92 1 
162 3 55 3 205 1 221 1 322 3 99 3 92 1 140 3 
162 1 55 1 311 1 322 1 99 1 140 1 
162 1 55 1 317 1 134 1 221 1 322 1 122 1 99 1 140 1 
115 1 317 1 23 1 228 1 322 2 122 1 99 2 246 1 140 2 161 1 164 1 162 2 55 2 284 1 252 1 221 1 238 1 92 1 
162 2 113 1 55 1 205 1 322 1 273 1 99 2 140 2 92 1 
115 1 23 1 228 1 322 1 122 1 99 1 246 1 140 1 161 1 162 1 164 1 55 1 284 1 252 1 130 1 92 1 
241 1 317 1 321 1 322 2 99 2 140 2 162 2 55 2 221 1 92 1 
69 1 48 1 196 1 198 1 160 1 139 1 140 1 162 1 309 1 104 1 280 1 12 1 219 1 205 1 16 1 
196 1 198 1 122 1 139 1 324 1 144 1 219 1 205 1 
241 2 187 1 304 2 214 4 215 1 248 1 216 2 11 1 253 1 13 1 263 1 70 1 321 2 74 1 29 1 31 1 325 1 78 1 279 1 165 1 283 2 41 1 129 1 209 2 
162 1 55 1 2 1 252 1 322 1 122 1 99 1 140 1 
227 1 317 1 23 1 322 4 122 1 324 1 99 4 140 4 249 1 162 4 55 4 205 1 221 1 92 2 
162 1 55 1 311 1 322 1 99 1 140 1 
151 1 73 1 77 1 
154 1 73 2 88 1 293 1 141 1 77 2 
73 1 77 1 
73 1 77 1 
154 1 293 1 
154 1 293 1 
154 1 293 1 
61 1 73 1 77 1 
61 1 73 1 77 1 
61 1 73 1 77 1 
107 1 73 1 77 1 
107 1 73 1 77 1 
107 1 73 1 77 1 
265 2 243 2 115 2 4 1 228 2 213 2 73 2 50 1 230 2 77 2 236 1 80 2 146 1 312 1 
162 1 55 1 243 1 265 1 80 1 115 1 117 1 228 1 322 1 213 1 73 1 312 1 230 1 99 1 140 1 77 1 
266 2 269 1 222 2 86 1 179 1 
266 1 123 1 179 1 
266 1 86 1 123 1 
266 3 269 1 222 1 86 1 150 1 179 2 
266 2 328 1 269 1 222 1 86 1 179 1 
115 1 171 1 228 1 15 1 
115 2 282 1 228 2 15 2 136 1 244 1 
240 1 115 2 156 1 228 2 212 1 199 1 75 1 202 1 172 1 15 1 91 1 67 1 
240 1 115 1 156 1 199 1 228 1 212 1 75 1 202 1 172 1 91 1 67 1 262 1 
82 1 
309 1 255 1 290 1 
309 1 288 1 
309 1 104 1 
309 3 104 1 48 1 268 1 290 2 124 1 
309 1 104 1 48 1 
309 1 170 1 
116 1 272 1 304 3 214 7 276 1 216 4 163 1 279 1 165 2 13 1 145 1 256 1 41 3 175 1 147 1 178 1 314 2 112 1 
297 3 135 1 304 15 305 1 214 31 215 1 143 4 216 16 11 1 253 3 145 1 256 2 13 4 257 1 258 1 147 2 314 3 112 2 226 3 264 1 116 2 155 1 70 3 272 5 74 1 163 1 279 4 165 5 283 2 41 10 175 1 129 1 178 1 295 1 
214 9 304 4 215 2 216 5 11 2 13 1 256 1 145 1 258 1 147 1 149 1 314 2 112 1 316 1 116 1 272 1 74 2 279 1 165 3 283 4 41 4 129 2 175 1 178 1 
116 1 272 1 304 3 214 7 216 4 163 1 279 1 165 2 13 1 145 1 256 1 41 3 175 1 147 1 314 2 178 1 112 1 
116 1 272 1 304 3 214 7 216 4 163 1 279 1 165 2 13 1 145 1 256 1 41 3 175 1 147 1 314 2 178 1 112 1 
94 1 132 1 48 1 7 1 139 1 101 1 142 2 309 1 104 1 56 1 12 1 219 1 254 1 193 1 17 1 319 1 22 2 196 1 198 1 160 2 27 1 235 1 125 2 277 1 204 1 34 2 331 1 294 1 180 1 
94 1 211 1 301 1 139 1 142 1 56 1 12 1 219 1 254 1 150 1 224 1 152 1 266 2 22 1 319 1 158 1 198 1 229 1 160 1 323 1 123 1 125 1 34 1 85 1 86 1 179 1 
242 1 94 2 211 1 301 1 139 1 142 1 56 1 12 1 219 1 254 1 190 1 150 1 18 1 225 1 224 1 266 2 22 1 319 2 158 1 198 1 229 1 160 1 323 1 123 1 125 1 34 1 85 1 86 1 90 1 179 1 
94 3 132 1 242 2 211 1 301 1 139 1 142 1 56 1 12 1 219 1 254 1 190 1 223 1 150 1 18 1 224 1 152 1 266 2 22 1 319 3 198 1 229 1 160 1 123 1 125 1 34 1 85 1 86 1 90 1 179 1 
94 2 242 2 211 1 301 1 139 1 142 1 12 1 219 1 190 1 223 1 150 1 18 1 152 1 266 2 22 1 319 2 198 1 229 1 160 1 123 1 125 1 34 1 86 1 90 1 179 1 
194 1 
115 1 156 1 267 1 196 1 198 1 228 1 212 1 139 1 202 1 308 1 219 1 58 1 172 1 91 1 
19 1 113 1 115 2 270 1 228 2 5 1 121 1 122 1 99 1 161 1 140 1 164 1 162 1 284 1 252 1 310 1 237 1 208 1 
19 1 113 1 115 2 270 1 228 2 5 1 121 1 122 1 99 1 140 1 161 1 164 1 162 1 284 1 252 1 237 1 176 1 208 1 
19 1 113 1 115 2 270 1 228 2 5 1 121 1 122 1 99 1 140 1 161 1 164 1 162 1 284 1 252 1 310 1 84 1 237 1 208 1 
115 1 228 1 
212 1 5 1 9 1 99 1 247 1 140 1 250 1 252 1 315 1 19 1 113 1 156 1 115 2 267 1 270 1 228 2 121 1 122 1 30 1 161 1 201 1 162 1 164 1 202 1 284 1 237 1 172 1 208 1 
212 1 5 1 9 1 247 1 99 1 140 1 250 1 252 1 315 1 113 1 19 1 20 1 115 2 156 1 267 1 270 1 228 2 121 1 122 1 30 1 161 1 201 1 202 1 162 1 164 1 284 1 237 1 172 1 239 1 177 1 208 1 
212 1 5 1 9 1 247 1 99 1 140 1 250 1 252 1 315 1 113 1 19 1 20 1 115 2 156 1 267 1 270 1 228 2 121 1 122 1 30 1 161 1 201 1 202 1 162 1 164 1 284 1 237 1 172 1 239 1 177 1 208 1 
212 1 5 1 9 1 99 1 140 1 250 1 252 1 220 1 59 1 113 1 19 1 115 2 156 1 267 1 270 1 228 2 121 1 122 1 30 1 161 1 201 1 202 1 162 1 164 1 284 1 35 1 237 1 172 1 286 1 177 1 208 1 
19 1 113 1 115 2 270 1 228 2 5 1 121 1 122 1 99 1 140 1 161 1 79 1 164 1 162 1 284 1 252 1 310 1 84 1 237 1 208 1 
19 1 113 1 115 2 270 1 228 2 5 1 121 1 122 1 99 1 140 1 161 1 79 1 164 1 162 1 284 1 252 1 310 1 84 1 237 1 208 1 
212 1 5 1 9 1 99 1 140 1 250 1 252 1 59 1 19 1 113 1 156 1 115 2 267 1 270 1 228 2 121 1 122 1 161 1 30 1 201 1 202 1 162 1 164 1 284 1 35 1 237 1 172 1 208 1 
48 1 210 1 300 1 214 2 304 1 139 2 215 1 101 1 309 1 216 1 104 1 11 1 12 1 219 2 193 1 17 1 196 1 320 1 198 2 160 2 74 1 29 1 200 1 31 1 167 1 204 1 283 2 129 1 294 1 
241 1 297 1 214 3 304 2 215 1 99 1 140 1 216 1 55 1 11 1 253 1 13 1 221 1 260 1 317 1 321 1 70 1 322 1 74 1 29 1 31 1 162 1 165 1 279 1 283 2 41 1 129 1 89 1 209 1 
241 1 116 1 321 1 74 1 187 1 304 3 214 6 29 1 215 1 31 1 216 3 279 1 165 2 11 1 283 2 205 2 13 1 145 1 255 1 41 2 129 1 175 1 314 1 178 1 209 1 112 1 
241 11 297 2 182 1 304 6 214 14 215 2 143 3 216 8 11 2 251 1 253 2 13 2 257 1 62 1 226 3 264 1 320 1 321 4 70 1 272 1 74 2 29 2 200 1 76 1 31 1 165 1 279 1 283 4 205 1 41 2 129 2 89 1 209 11 
48 1 95 1 304 1 214 2 139 1 215 1 99 1 140 2 309 1 216 1 104 1 55 1 11 1 12 1 219 1 16 1 69 1 196 1 321 1 320 1 198 1 23 1 322 1 160 1 74 1 29 1 200 1 31 1 162 2 280 1 169 1 283 2 205 1 129 1 89 1 291 1 92 1 42 1 
241 7 99 1 104 2 11 3 12 2 253 2 13 3 111 2 16 2 112 1 116 1 196 1 198 3 23 1 24 2 272 4 29 3 200 1 31 3 126 1 279 3 280 2 283 6 205 2 41 8 129 3 131 1 209 7 297 2 45 2 48 2 137 1 304 10 214 20 139 3 215 3 140 3 53 2 309 2 216 10 55 1 219 3 145 1 314 1 152 1 69 2 320 1 321 7 70 2 322 1 160 2 74 3 162 3 165 4 166 2 175 1 89 1 178 1 92 1 
241 1 321 1 272 1 74 1 187 1 214 2 29 1 215 1 31 1 325 1 216 2 11 1 283 2 253 1 13 1 41 1 129 1 209 1 
241 1 321 1 70 1 74 1 187 1 214 2 29 1 304 2 215 1 31 1 78 1 165 1 11 1 279 1 283 2 41 1 129 1 209 1 
241 2 297 1 187 1 214 4 304 2 215 1 216 2 11 1 253 1 13 1 321 2 70 1 272 1 74 1 29 1 31 1 279 1 165 1 283 2 41 2 129 1 209 2 
241 1 321 1 210 1 272 1 74 1 214 2 29 1 215 1 31 1 325 1 216 2 11 1 283 2 253 1 13 1 41 1 129 1 209 1 
241 1 321 1 70 1 210 1 74 1 214 2 29 1 304 2 215 1 31 1 78 1 165 1 11 1 279 1 283 2 41 1 129 1 209 1 
241 2 297 1 210 1 214 4 304 2 215 1 216 2 11 1 253 1 13 1 321 2 70 1 272 1 74 1 29 1 31 1 279 1 165 1 283 2 41 2 129 1 209 2 
241 2 297 1 214 4 304 2 215 1 216 2 11 1 253 1 13 1 321 2 70 1 272 1 74 1 29 1 31 1 279 1 165 1 283 2 41 2 129 1 209 2 
48 1 214 2 304 1 139 1 215 1 140 1 216 1 309 1 104 1 11 1 12 1 219 1 111 1 16 1 69 1 196 1 320 1 198 1 160 1 74 1 29 1 200 1 31 1 162 1 280 1 283 2 205 1 129 1 
320 1 196 1 198 1 74 1 122 1 214 1 304 1 29 1 324 1 139 1 215 1 31 1 144 1 11 1 219 1 283 2 205 1 173 1 129 1 
241 2 297 1 214 4 304 2 215 1 216 2 11 1 253 1 13 1 321 2 70 1 272 1 74 1 29 1 31 1 279 1 165 1 283 2 41 2 129 1 89 1 209 2 
241 2 297 1 48 1 304 2 214 4 139 1 215 1 53 1 140 1 216 2 309 1 104 1 11 1 12 1 253 1 219 1 13 1 111 1 16 1 225 1 69 1 70 1 321 2 198 1 272 1 160 1 74 1 29 1 31 1 162 1 165 1 279 1 280 1 283 2 41 2 129 1 209 2 
241 1 297 1 304 1 214 3 215 1 99 1 140 1 54 1 216 2 55 1 11 1 253 1 13 1 221 1 317 1 70 1 321 1 322 1 272 1 74 1 29 1 31 1 162 1 279 1 283 2 41 1 129 1 89 1 209 1 
316 1 43 1 11 1 283 2 119 1 129 1 74 1 215 1 275 1 234 1 
316 1 43 1 11 1 283 2 119 1 129 1 74 1 215 1 275 1 234 1 
316 1 43 1 11 1 283 2 119 1 129 1 74 1 215 1 275 1 234 1 
316 1 43 1 11 1 283 2 119 1 129 1 74 1 215 1 275 1 234 1 
316 1 43 1 11 1 283 2 119 1 129 1 74 1 215 1 275 1 234 1 
243 1 265 1 299 1 106 1 213 1 73 1 230 1 326 1 141 1 77 1 
151 1 281 1 
278 1 243 1 265 1 168 1 213 1 73 1 230 1 292 1 77 1 
265 1 243 1 115 1 4 1 228 1 213 1 73 1 50 1 230 1 77 1 236 1 80 2 146 1 312 1 
265 1 243 1 115 1 4 1 228 1 213 1 73 1 50 1 230 1 77 1 236 1 80 2 146 1 312 1 
265 1 243 1 115 1 4 1 228 1 213 1 73 1 50 1 230 1 77 1 236 1 80 2 146 1 312 1 
21 1 61 1 88 1 
21 1 61 1 88 1 
107 1 313 1 
107 1 313 1 88 1 
33 1 157 1 
265 1 243 1 115 1 117 1 228 1 213 1 73 1 50 1 230 1 77 1 236 1 80 1 38 1 15 1 
21 1 61 1 
107 1 313 1 88 1 
298 1 300 1 302 1 51 1 214 2 304 1 139 2 99 2 215 1 140 2 309 1 216 1 104 1 11 1 12 1 219 2 14 1 320 1 198 2 25 1 160 1 74 1 29 1 200 1 31 1 162 2 167 2 283 2 37 1 129 1 89 1 
296 1 183 1 48 1 7 1 139 1 101 1 309 1 104 1 12 1 219 1 193 1 17 1 22 1 196 1 198 1 160 2 235 1 204 1 294 1 
152 1 266 2 183 1 22 1 198 1 211 1 229 1 160 1 123 1 139 1 218 1 12 1 219 1 85 1 86 1 150 1 179 1 93 1 
152 1 266 2 183 1 22 1 198 2 211 1 229 1 160 1 123 1 139 2 218 1 12 1 219 2 85 1 86 1 150 1 179 1 225 1 93 1 
152 1 266 2 22 1 198 1 211 1 229 1 160 1 123 1 139 1 218 1 12 1 219 1 85 1 86 1 206 1 150 1 179 1 
63 1 
153 1 156 1 267 1 172 1 212 1 30 1 
202 1 279 1 297 1 253 1 70 1 13 1 30 1 
219 1 196 1 198 1 139 1 
153 1 114 1 255 1 30 1 
202 1 156 1 267 1 172 1 212 1 315 1 247 1 30 1 
156 1 48 1 267 1 196 1 198 1 212 1 160 2 98 1 139 1 124 1 189 1 202 1 309 2 10 1 104 1 12 1 219 1 81 1 172 1 288 1 91 1 
202 1 143 1 226 1 264 1 156 1 267 1 83 1 172 1 212 1 30 1 
20 1 195 1 115 1 156 1 116 1 267 1 228 1 212 1 30 2 202 1 279 1 13 2 145 1 172 1 192 1 66 2 112 1 
202 1 156 1 267 1 172 1 212 1 91 1 30 1 307 1 
243 1 265 1 33 1 6 1 326 1 
243 1 265 1 232 1 
243 1 265 1 232 1 
243 1 265 1 232 1 
243 1 265 1 261 1 
243 1 265 1 261 1 
243 1 265 1 261 1 
243 1 265 1 
73 1 77 1 
195 1 116 2 272 3 214 12 304 6 216 6 165 3 279 2 145 1 13 2 41 6 112 2 
316 1 272 1 74 1 214 2 215 1 216 2 11 1 283 2 253 1 13 1 41 1 129 1 
316 1 297 1 70 1 272 1 74 1 304 2 214 4 215 1 216 2 165 1 279 1 11 1 283 2 253 1 13 1 41 2 129 1 
316 1 116 1 272 1 74 3 138 1 303 1 304 2 214 3 215 3 216 1 11 3 165 1 283 6 41 2 258 1 129 3 112 1 
297 3 135 1 138 1 304 18 305 1 303 1 214 34 215 5 143 4 216 16 11 5 253 3 145 2 13 5 257 1 258 2 314 1 112 3 316 1 226 3 264 1 116 3 70 3 272 5 74 5 279 5 165 7 283 10 41 12 175 1 129 5 332 1 178 1 295 1 
116 1 272 1 74 2 304 4 214 8 215 2 216 4 279 1 165 2 11 2 283 4 13 1 145 1 41 3 129 2 258 1 175 1 314 1 178 1 112 1 
116 1 304 3 214 6 216 3 165 2 279 1 255 1 145 1 13 1 41 2 175 1 314 1 178 1 112 1 
297 1 70 1 272 1 74 1 304 2 214 4 215 1 216 2 165 1 279 1 11 1 283 2 253 1 13 1 41 2 129 1 332 1 
226 1 264 1 297 1 70 1 272 1 304 4 214 7 143 2 216 3 165 1 279 1 253 1 13 1 257 1 41 2 
297 2 182 1 214 23 304 12 138 1 215 2 216 11 143 2 11 2 253 2 145 1 13 3 257 1 62 1 258 2 314 1 112 2 226 2 116 2 70 2 272 4 74 2 279 3 165 5 283 4 41 9 175 1 129 2 178 1 
143 1 214 1 304 1 
216 1 226 1 214 1 
297 1 70 1 272 1 74 1 304 3 214 6 215 1 216 3 11 1 166 1 279 1 165 2 283 2 253 1 13 1 41 3 129 1 332 1 
1 1 316 1 226 1 297 2 264 1 70 2 96 1 272 1 74 1 304 6 214 12 215 1 216 6 143 1 165 1 279 2 11 1 253 2 283 2 329 1 13 2 127 1 83 1 41 2 129 1 
116 1 272 1 214 6 304 3 216 3 279 1 165 1 145 1 13 1 41 2 112 1 
116 1 272 1 74 1 138 1 304 2 214 3 215 1 216 1 165 1 11 1 283 2 41 2 258 1 129 1 175 1 178 1 112 1 
214 8 304 4 215 1 143 1 216 4 11 1 13 1 145 1 314 1 112 1 226 1 316 1 264 1 116 1 74 1 279 1 165 2 283 2 83 1 41 2 129 1 175 1 178 1 
297 1 214 11 304 5 215 2 143 2 216 6 11 2 253 1 145 1 13 2 257 1 314 1 112 1 316 1 226 1 264 1 116 1 272 1 74 2 279 1 165 2 283 4 83 1 41 3 175 1 129 2 332 1 178 1 
1 1 297 2 96 1 214 19 304 10 215 3 143 1 216 9 11 3 253 2 145 1 13 3 258 1 314 1 112 1 226 1 316 1 264 1 116 1 70 2 272 1 74 3 279 3 165 3 283 6 329 1 127 1 83 1 41 4 175 1 129 3 332 1 178 1 
1 1 297 2 96 1 214 17 304 7 215 3 143 1 216 10 11 3 253 2 145 1 13 3 258 1 314 1 112 1 226 1 316 1 264 1 116 1 70 1 272 2 74 3 279 2 165 3 283 6 127 1 329 1 83 1 41 5 175 1 129 3 332 1 178 1 
214 8 304 4 215 1 143 1 216 4 11 1 13 1 145 1 314 1 112 1 226 1 316 1 264 1 116 1 74 1 279 1 165 2 283 2 83 1 41 2 129 1 175 1 178 1 
1 1 316 1 226 1 297 2 264 1 70 2 96 1 272 1 74 1 304 6 214 12 215 1 216 6 143 1 165 1 279 2 11 1 253 2 283 2 329 1 13 2 127 1 83 1 41 2 129 1 
1 1 297 2 96 1 214 18 304 8 215 4 143 1 216 10 11 4 253 2 145 1 13 3 258 2 314 1 112 1 316 1 226 1 264 1 116 1 70 1 272 2 74 4 279 2 165 3 283 8 329 1 127 1 83 1 41 5 175 1 129 4 332 1 178 1 
1 1 297 3 96 1 214 16 304 7 303 1 215 4 143 1 216 9 11 4 253 3 13 3 258 2 316 1 226 1 264 1 70 2 272 3 74 4 279 2 165 3 283 8 329 1 127 1 83 1 41 6 129 4 
116 3 272 3 304 4 214 7 216 3 279 1 165 3 145 1 13 1 41 6 175 1 178 2 112 3 
1 1 297 2 96 1 214 18 304 8 303 1 215 4 143 1 216 10 11 4 253 2 145 1 13 3 258 2 314 1 112 1 316 1 226 1 264 1 116 1 70 1 272 1 74 4 279 2 165 3 283 8 329 1 127 1 83 1 41 4 175 1 129 4 178 1 
162 1 113 1 205 1 285 1 273 1 99 1 140 1 
113 1 47 1 159 1 28 1 273 1 99 1 140 1 162 1 205 1 285 1 108 1 40 1 
48 1 196 1 198 2 160 2 139 2 101 1 309 1 104 1 12 1 204 1 219 2 193 1 294 1 17 1 225 1 
48 1 198 2 160 2 139 2 101 1 309 1 104 1 12 1 219 2 36 1 193 1 131 1 17 1 294 1 
266 1 12 1 219 1 196 1 198 1 86 1 229 1 160 1 123 1 139 1 
152 1 298 1 198 2 160 1 51 1 139 2 309 1 104 1 12 1 219 2 225 1 
298 1 48 1 245 1 139 3 101 1 309 3 104 2 12 2 219 2 193 1 17 1 225 1 196 1 198 3 118 1 160 3 204 1 294 1 
298 1 48 1 245 1 139 3 101 1 309 3 104 2 12 2 219 2 193 1 17 1 225 1 68 1 196 1 198 3 160 3 204 1 294 1 
204 1 219 1 255 1 196 1 198 1 139 1 
48 1 196 1 198 1 322 1 160 1 99 1 139 1 140 2 309 1 162 2 104 1 55 1 280 1 12 1 219 1 205 1 16 1 92 1 
48 2 139 1 99 2 140 2 309 3 55 1 104 2 12 1 219 1 252 1 16 1 198 1 322 2 160 1 122 2 324 1 162 2 164 1 280 1 203 1 170 1 205 1 36 1 92 1 
48 2 139 1 99 2 140 2 309 3 55 1 104 2 12 1 219 1 252 1 148 1 198 1 322 2 160 1 122 2 324 1 162 2 164 1 280 1 203 1 170 1 205 1 36 1 92 1 
309 1 115 1 219 1 36 1 198 1 228 1 288 1 191 1 139 1 
309 1 115 1 219 1 36 1 198 1 228 1 288 1 139 1 100 1 
217 1 12 1 219 1 198 1 160 1 139 1 
152 1 298 1 48 1 196 2 198 7 197 1 118 1 160 3 245 1 274 1 139 7 124 1 217 1 309 3 104 2 167 1 12 2 219 6 193 1 294 1 225 1 
241 1 48 1 302 1 304 3 214 6 215 2 99 1 139 1 140 2 53 1 216 3 309 1 104 1 55 1 11 2 12 1 219 1 13 1 145 1 314 1 111 1 16 1 112 1 225 1 69 1 116 1 321 1 198 1 24 1 322 1 160 1 74 2 29 2 31 2 162 2 279 1 165 2 280 1 283 4 205 2 41 2 175 1 129 2 89 1 178 1 92 1 209 1 
115 1 228 1 15 1 
48 1 198 2 160 2 139 2 124 1 217 1 10 1 309 2 104 1 12 1 219 2 290 1 225 1 
48 1 196 1 198 1 322 1 160 1 99 1 139 1 140 2 309 1 162 2 104 1 55 1 280 1 12 1 219 1 205 1 148 1 92 1 
48 1 198 1 197 1 160 2 139 1 124 1 309 1 104 1 12 1 219 1 36 1 193 1 294 1 
162 1 133 1 105 1 14 1 37 1 25 1 271 1 99 1 140 1 
32 1 133 1 330 1 
205 1 105 1 133 1 271 1 65 1 
181 1 115 2 133 1 228 2 271 2 122 1 246 1 161 1 164 1 32 1 284 1 252 1 205 1 105 2 330 1 15 1 65 2 
94 1 56 1 319 1 254 1 190 1 90 1 323 1 18 1 
242 2 94 4 318 1 319 4 3 1 97 1 56 1 254 1 109 1 190 2 87 1 90 2 289 1 18 3 
94 2 242 1 319 2 26 1 323 1 102 1 56 1 254 1 190 1 174 1 90 1 18 1 
94 3 319 3 184 1 323 1 56 1 254 1 109 2 190 1 87 2 90 1 289 1 18 1 
57 1 39 1 18 2 103 2 
94 1 56 1 319 1 254 1 72 1 323 1 
242 1 94 2 56 1 46 1 319 2 254 1 190 1 90 1 323 1 18 1 
233 1 
94 1 56 1 319 1 254 1 190 1 90 1 323 1 18 1 
255 1 190 1 90 1 18 1 
94 1 56 1 319 1 254 1 190 1 90 1 18 1 
94 1 125 1 142 1 
94 3 56 1 319 3 254 1 190 1 109 2 287 1 87 1 90 1 289 1 323 1 18 1 
242 1 327 1 94 2 56 1 319 2 254 1 190 1 90 1 18 1 
94 1 56 1 266 1 319 1 254 1 3 1 323 1 123 1 231 1 179 1 18 1 
94 1 56 1 319 1 254 1 190 1 323 1 18 1 
94 1 56 1 319 1 254 1 190 2 90 1 323 1 
94 2 56 2 319 2 254 2 128 1 190 1 110 1 323 1 188 1 18 1 
94 3 242 2 319 3 46 1 3 1 97 1 323 1 56 1 254 1 190 1 60 1 90 1 18 2 
94 2 242 1 266 2 319 2 323 1 8 1 123 1 56 1 254 1 190 1 86 1 90 1 150 1 179 1 18 1 
94 4 242 2 319 4 3 1 97 1 120 1 323 1 327 1 56 2 254 2 190 1 90 1 18 2 
242 1 94 3 319 3 46 1 323 1 56 1 254 1 109 1 190 1 90 1 18 1 
318 1 3 1 97 1 18 1 
190 1 18 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 230 177 144 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 230 177 144 259 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 230 177 144 (229,286) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 230 177 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 275 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (122,234,236) (122,234,236) 23 93 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 230 207 60 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 26 228 100 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 275 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 230 177 144 259 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 230 177 144 (229,286) (229,286) 275 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 192 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
82 1 86 1 40 5 88 1 271 1 2 4 90 2 6 1 125 9 195 3 197 1 285 1 289 1 52 9 244 2 55 1 303 1 215 2 108 2 217 2 67 1 141 2 68 2 219 6 142 1 145 1 221 1 77 1 
82 1 86 1 40 5 88 1 271 1 2 4 90 2 6 1 125 9 195 3 197 1 285 1 289 1 52 9 244 2 55 1 303 1 215 2 108 2 217 2 67 1 68 2 219 6 141 2 142 1 145 1 221 1 77 1 
82 1 86 1 40 6 88 1 271 1 2 5 90 2 6 1 125 10 195 4 197 1 285 1 289 1 52 10 244 2 55 1 303 1 215 2 108 2 217 2 67 1 68 2 219 7 141 2 142 1 145 1 221 1 77 1 
82 1 40 4 88 1 271 1 2 3 90 2 6 1 125 7 195 2 197 1 285 1 289 1 52 7 244 2 55 1 303 1 215 2 108 2 217 2 67 1 68 2 219 4 141 1 142 1 145 1 221 1 77 1 
86 1 40 3 88 1 2 2 90 1 195 1 303 1 125 4 108 1 215 1 67 1 141 2 219 3 68 1 289 1 52 4 244 1 55 1 
40 1 88 1 90 1 6 1 303 1 125 2 196 1 108 1 215 1 217 1 127 1 145 1 52 2 242 1 244 1 55 1 
82 1 40 2 88 1 2 1 303 1 125 3 195 1 108 2 215 2 217 1 219 1 52 3 55 1 
82 1 40 5 86 1 88 1 2 4 90 1 195 3 125 9 285 1 289 1 51 1 52 9 244 1 55 1 210 1 303 1 215 2 108 2 217 1 67 1 219 7 141 2 68 1 221 1 
82 1 40 5 86 1 88 1 2 4 90 1 195 3 125 9 285 1 289 1 51 1 52 9 244 1 55 1 210 1 303 1 215 2 108 2 217 1 67 1 219 7 141 2 68 1 221 1 
85 1 192 1 307 1 
62 1 91 2 307 1 
230 1 144 1 177 1 
230 1 144 1 177 1 259 1 
230 1 144 1 177 1 286 1 
182 1 234 1 276 1 148 1 236 1 131 1 200 1 110 1 153 1 
230 1 177 1 
122 1 203 1 79 1 28 1 311 1 
85 1 146 1 63 1 122 2 203 2 79 1 28 1 307 1 
122 1 203 1 28 1 
229 1 230 1 144 1 122 1 203 1 79 1 177 1 286 1 
307 1 
229 1 230 1 208 1 85 1 122 2 63 1 28 1 177 1 307 1 286 1 144 1 203 2 79 1 
229 1 230 1 85 2 87 1 122 5 191 2 275 1 8 4 283 1 284 1 286 1 291 1 15 2 203 5 16 2 168 1 206 1 137 2 253 1 106 3 63 1 28 2 177 1 261 1 307 2 144 1 184 1 187 1 34 2 79 2 264 1 
114 1 186 1 
114 1 186 1 
47 1 309 1 
47 1 309 1 
47 1 309 1 
114 1 186 1 20 1 
114 1 186 1 20 1 
114 1 186 1 218 1 
47 1 114 2 96 1 1 1 309 1 186 2 
114 1 186 1 20 1 
114 1 186 1 9 1 
114 1 186 1 9 1 
114 1 186 1 9 1 
155 3 61 2 1 1 122 2 258 1 174 1 213 1 107 1 5 2 65 1 279 2 307 1 30 1 114 2 75 1 186 2 203 2 223 2 21 2 
155 1 230 1 61 1 114 1 122 1 186 1 107 1 203 1 223 1 279 1 21 1 
244 1 90 1 68 1 
244 1 90 1 242 1 
255 1 183 1 90 3 242 1 198 1 68 2 
255 1 183 1 90 2 242 1 68 1 111 1 
183 1 255 2 90 2 242 1 68 1 
267 1 85 1 39 2 122 5 157 1 191 1 159 1 91 3 8 3 12 2 10 1 239 1 291 1 15 1 203 5 16 1 133 2 104 1 105 1 137 1 250 1 172 1 62 1 300 1 106 2 63 1 28 1 66 1 307 2 187 1 33 1 79 4 
267 1 229 1 230 1 85 1 39 2 122 6 157 1 191 1 159 1 91 3 235 1 8 3 12 2 163 3 10 1 286 1 291 1 97 1 15 1 203 6 16 1 104 1 105 1 137 1 62 1 106 2 63 1 28 4 177 1 307 3 144 1 33 2 187 1 79 5 311 3 150 1 
267 1 85 1 39 2 122 3 157 1 191 1 159 1 91 4 8 3 12 2 291 1 15 1 203 3 16 1 168 1 133 1 104 1 105 1 137 1 172 1 250 1 62 2 106 2 307 3 33 1 79 2 
267 2 85 1 39 4 122 4 157 1 191 1 159 2 91 7 162 1 8 5 12 4 291 2 15 1 203 4 16 1 168 1 133 2 104 2 105 1 137 2 172 1 250 1 62 3 209 1 106 4 175 1 307 4 33 2 79 3 
3 1 192 1 293 1 282 1 
260 1 306 1 
280 1 
119 1 260 1 
29 1 53 1 119 1 260 3 169 1 282 2 
53 1 119 1 260 1 
117 1 260 1 
137 1 231 4 253 1 138 1 194 1 44 1 283 1 45 1 113 7 291 1 310 3 98 2 35 1 57 1 206 1 134 2 312 3 
137 1 231 4 253 1 138 1 194 1 44 1 283 1 45 1 113 7 291 1 310 3 98 2 35 1 57 1 206 1 134 2 312 3 
137 1 231 4 253 1 138 1 194 1 44 1 283 1 45 1 113 7 291 1 310 3 98 2 78 1 35 1 57 1 206 1 134 2 312 3 
228 1 267 3 232 1 231 16 233 1 272 1 193 4 159 3 194 1 124 1 44 1 283 2 164 1 288 1 45 5 291 4 241 1 98 5 57 2 102 1 206 2 134 3 104 3 137 4 253 1 138 1 256 1 26 3 176 1 216 2 113 31 310 10 35 2 312 15 
189 1 231 5 233 2 272 2 124 2 194 1 164 2 283 1 45 1 291 1 98 3 57 1 134 2 206 1 137 1 253 1 138 1 256 1 216 4 113 9 310 4 185 1 35 1 312 4 
40 1 88 1 41 2 123 2 90 2 125 2 198 1 199 1 126 1 165 1 287 1 240 1 52 2 244 1 242 1 55 1 56 2 294 1 247 1 132 1 303 1 214 1 215 1 108 1 217 1 304 1 219 1 68 1 180 1 222 1 151 1 
40 1 88 1 41 1 123 1 90 2 125 3 198 1 165 1 287 1 240 1 52 3 244 1 242 1 55 1 56 1 17 1 294 1 18 1 247 1 132 1 214 1 215 1 108 1 217 1 68 1 219 2 180 1 72 1 222 1 151 1 
40 1 88 1 41 1 123 1 90 2 125 2 198 1 165 1 287 1 52 2 242 1 244 1 55 1 56 1 17 1 294 1 247 1 132 1 214 1 217 1 219 2 180 1 68 1 72 1 222 1 
41 1 123 1 125 1 201 1 166 1 52 1 54 1 56 1 294 2 18 1 247 1 132 2 25 1 27 1 214 1 215 1 108 1 217 2 260 1 222 2 119 1 121 1 36 1 
41 1 123 1 90 2 125 1 198 1 165 1 287 1 240 1 52 1 244 1 242 1 56 1 17 1 294 1 247 1 132 1 303 1 214 1 215 1 108 1 217 1 304 1 68 1 180 1 222 1 151 1 
58 1 
268 1 156 1 37 1 41 2 122 2 157 1 123 2 191 1 89 1 234 1 276 1 236 1 200 1 93 1 8 1 15 1 203 2 56 2 16 1 131 1 247 1 23 1 106 1 63 1 25 1 27 1 214 1 28 2 260 1 178 1 110 1 182 1 187 1 148 1 119 1 121 2 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 208 1 156 1 122 2 63 1 234 1 276 1 28 1 236 1 200 1 93 1 110 1 182 1 203 2 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 191 1 234 1 276 1 236 1 200 1 93 1 110 1 182 1 203 1 187 1 15 1 148 1 16 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 234 1 276 1 236 1 93 1 200 1 110 1 182 1 203 1 148 1 131 1 153 1 
268 1 23 1 156 1 122 1 191 1 234 1 276 1 236 1 200 1 93 1 110 1 182 1 203 1 187 1 15 1 148 1 16 1 131 1 153 1 
228 1 189 1 267 3 231 9 233 2 272 2 193 2 159 3 124 2 164 2 11 1 288 1 45 3 291 3 98 3 248 1 297 2 104 3 136 1 137 3 26 1 216 4 113 19 118 1 262 1 310 6 263 1 225 2 266 1 312 10 
189 1 228 2 267 3 231 14 233 3 190 1 272 3 193 2 159 3 124 3 164 3 11 1 45 2 291 3 202 1 243 1 98 2 19 1 100 1 297 4 104 2 137 2 136 1 256 2 26 2 216 6 113 26 118 1 220 1 310 4 262 2 225 1 312 12 266 2 
228 3 231 20 233 3 159 4 161 1 11 1 164 3 243 1 98 4 100 1 19 1 104 4 253 1 256 1 26 3 113 41 118 1 262 2 263 1 266 1 267 4 189 1 190 1 272 3 193 4 124 3 194 1 283 1 288 1 45 4 291 5 202 1 297 4 206 1 134 1 137 5 136 1 138 1 216 6 220 1 310 8 225 1 312 21 
228 3 189 1 267 4 231 20 233 4 190 1 272 4 193 4 159 4 161 1 194 1 124 4 283 1 164 4 11 1 288 1 45 3 291 5 202 1 243 1 98 4 19 1 100 1 134 1 206 1 297 4 104 3 136 1 137 4 253 1 138 1 256 2 26 3 216 8 113 38 118 1 220 1 262 2 310 7 263 1 225 1 266 1 312 18 
228 2 189 1 267 5 231 22 233 2 190 1 272 2 193 3 159 5 194 1 124 2 283 1 164 2 11 1 288 1 45 5 291 6 202 1 243 1 98 5 19 1 100 1 134 1 206 1 297 4 104 5 137 6 136 1 253 1 138 1 256 1 26 3 216 4 113 42 118 1 220 1 73 1 262 1 310 10 225 1 266 1 312 20 
61 1 114 1 1 1 258 1 213 1 186 1 140 1 223 1 279 1 21 1 
308 1 218 1 
61 1 114 1 186 1 277 1 223 1 279 1 226 1 59 1 21 1 
155 2 61 1 1 1 122 1 258 1 174 1 213 1 107 1 5 1 65 1 279 1 307 1 30 1 114 1 186 1 203 1 223 1 21 1 
155 2 61 1 1 1 122 1 258 1 174 1 213 1 107 1 5 1 65 1 279 1 307 1 30 1 114 1 186 1 203 1 223 1 21 1 
155 2 61 1 1 1 122 1 258 1 174 1 213 1 107 1 5 1 65 1 279 1 307 1 30 1 114 1 186 1 203 1 223 1 21 1 
96 1 92 1 20 1 
96 1 92 1 20 1 
224 1 9 1 
96 1 224 1 9 1 
167 1 188 1 
155 1 230 1 61 1 60 1 122 1 5 1 65 1 279 1 218 1 66 1 308 1 114 1 239 1 186 1 33 1 203 1 167 1 79 1 223 1 188 1 21 1 207 1 
92 1 20 1 
96 1 224 1 9 1 
231 1 233 1 41 2 272 1 123 2 4 1 43 1 160 1 124 1 200 2 164 1 126 2 290 1 56 2 204 1 246 1 247 1 249 1 22 1 299 1 214 1 216 2 260 1 110 2 143 1 113 2 74 1 76 1 119 1 153 2 312 1 
83 1 41 2 42 1 123 2 90 2 214 1 198 1 199 1 68 1 180 1 165 1 240 1 129 1 244 1 242 1 17 1 56 2 247 1 132 1 
83 1 41 1 257 1 123 1 90 2 214 1 198 1 68 1 180 1 165 1 240 1 244 1 242 1 17 1 56 1 247 1 132 1 
41 1 42 1 123 1 25 1 27 1 214 1 260 1 201 1 147 1 56 1 119 1 247 1 121 1 132 1 
83 1 41 1 42 1 123 1 90 2 214 1 198 1 68 1 180 1 165 1 240 1 129 1 244 1 242 1 17 1 56 1 247 1 132 1 
237 1 
192 1 284 1 261 1 
85 1 62 1 106 1 122 1 63 1 191 1 301 1 91 1 28 1 8 1 307 2 181 1 203 1 187 1 15 1 16 1 295 1 
157 1 159 1 91 6 8 4 12 3 15 2 16 2 169 1 247 1 104 1 252 1 106 3 28 2 260 4 109 1 112 1 187 2 34 1 119 1 121 1 267 1 39 3 41 1 122 2 191 2 123 1 282 1 49 1 291 1 53 1 130 1 203 2 56 1 296 1 137 1 62 3 63 1 64 1 212 1 214 2 306 2 307 3 71 1 
228 1 106 1 191 1 26 1 193 1 15 1 187 1 16 1 100 1 8 1 
229 1 230 1 137 1 253 1 106 1 254 1 122 1 191 1 275 1 177 1 8 2 283 1 286 1 144 1 291 1 203 1 187 1 15 1 34 2 16 1 206 1 
85 1 106 1 191 1 8 1 261 1 284 1 307 1 187 1 15 1 16 1 
267 2 137 2 38 1 62 5 106 5 39 5 159 2 91 10 8 5 12 5 307 5 112 1 291 2 34 2 104 2 
85 1 122 1 63 1 203 1 28 1 307 1 
37 2 41 4 122 3 273 1 157 2 89 1 191 2 123 4 8 2 15 2 203 3 16 2 56 4 168 1 247 1 135 2 173 1 106 2 63 2 25 1 27 1 214 1 28 4 260 1 178 1 187 1 119 1 121 2 81 1 
230 1 144 1 177 1 259 1 
37 1 62 2 85 2 39 2 106 2 157 1 191 1 91 4 8 1 12 2 307 4 187 1 15 1 16 1 134 1 
61 1 69 1 21 1 
61 1 69 1 21 1 
115 1 61 1 213 1 188 1 21 1 
61 1 69 1 21 1 
61 1 0 1 21 1 
61 1 0 1 21 1 
61 1 0 1 21 1 
61 1 21 1 
114 1 186 1 
137 1 231 4 253 1 233 2 272 2 138 1 256 1 124 2 194 1 216 4 164 2 283 1 45 1 113 8 291 1 310 3 98 2 134 1 206 1 312 4 
138 1 192 1 194 1 
267 1 137 1 231 2 233 1 272 1 159 1 124 1 216 2 164 1 45 1 238 1 113 4 291 1 310 2 98 1 312 2 104 1 
228 1 231 1 113 2 26 1 193 1 312 1 
267 2 231 13 233 1 272 1 159 2 193 2 275 1 124 1 194 1 283 2 164 1 288 1 46 1 45 4 291 5 98 4 134 1 206 2 104 2 137 5 253 2 138 1 256 1 26 2 216 2 113 25 73 1 310 8 312 12 
113 1 193 1 312 1 
113 1 231 1 26 1 
267 1 231 3 137 1 233 1 272 1 159 1 124 1 216 2 164 1 112 1 45 1 238 1 113 6 291 1 310 3 98 2 312 3 104 1 
228 1 189 1 267 2 231 6 233 1 190 1 272 1 193 1 159 2 124 1 164 1 45 1 291 2 202 1 243 1 98 1 100 1 19 1 104 2 137 2 26 1 216 2 113 12 310 2 312 6 
231 3 137 1 253 1 283 1 45 1 113 6 291 1 310 2 98 1 206 1 312 3 
231 1 233 1 138 1 272 1 256 1 124 1 194 1 278 1 216 2 283 1 164 1 45 1 113 3 310 2 98 1 206 1 312 2 
189 1 231 5 137 2 233 1 253 1 272 1 124 1 275 1 216 2 164 1 283 2 45 2 113 10 291 2 310 5 98 3 206 2 312 5 
189 1 267 1 231 2 233 1 272 1 124 1 216 2 164 1 45 1 113 2 291 1 310 1 
189 1 267 1 137 1 231 2 233 1 272 1 159 1 124 1 216 2 164 1 45 1 113 4 291 1 310 2 98 1 312 2 104 1 
189 1 231 1 233 3 272 3 256 1 124 3 278 1 216 6 164 3 283 1 45 1 113 3 310 2 263 1 98 1 206 1 312 2 
228 1 189 1 267 3 231 16 233 5 272 5 193 4 159 3 194 1 124 5 278 1 283 3 164 5 288 1 45 5 238 1 291 5 241 1 98 7 102 1 134 1 206 3 104 3 137 5 253 2 138 1 256 2 26 3 176 1 216 10 113 34 310 12 263 1 312 18 
228 1 189 1 231 4 233 1 272 1 193 1 124 1 194 1 164 1 283 1 291 1 98 2 100 1 134 1 206 1 137 1 253 1 138 1 26 1 216 2 113 8 310 2 312 4 
228 1 189 1 267 1 231 6 233 2 272 2 193 2 159 1 194 1 124 2 283 1 164 2 288 1 45 1 238 1 291 2 98 2 100 1 134 1 206 1 137 1 253 1 138 1 26 1 216 4 113 11 310 3 312 5 
228 1 189 1 267 2 231 9 233 3 190 1 272 3 193 1 159 2 194 1 124 3 283 1 164 3 45 1 238 1 291 3 202 1 243 1 98 3 100 1 19 1 134 1 206 1 104 2 137 3 253 1 138 1 256 1 26 1 216 6 113 19 310 4 312 10 
228 1 189 1 267 2 231 10 233 3 190 1 272 3 193 1 159 2 194 1 124 3 283 1 164 3 45 2 238 1 291 3 202 1 243 1 98 3 100 1 19 1 134 1 206 1 104 1 137 2 253 1 138 1 256 1 26 1 216 6 113 17 310 5 312 7 
228 1 189 1 231 4 233 1 272 1 193 1 124 1 194 1 164 1 283 1 291 1 98 2 100 1 134 1 206 1 137 1 253 1 138 1 26 1 216 2 113 8 310 2 312 4 
228 1 189 1 267 2 231 6 233 1 190 1 272 1 193 1 159 2 124 1 164 1 45 1 291 2 202 1 243 1 98 1 100 1 19 1 104 2 137 2 26 1 216 2 113 12 310 2 312 6 
228 1 189 1 267 2 231 10 233 4 190 1 272 4 193 1 159 2 194 1 124 4 283 1 164 4 45 2 238 1 291 3 202 1 243 1 98 3 19 1 100 1 134 1 206 1 104 1 137 2 253 1 138 1 256 2 26 1 216 8 113 18 310 5 312 8 
228 1 189 1 267 3 231 9 233 4 190 1 272 4 193 1 159 3 124 4 164 4 45 3 291 3 202 1 243 1 98 3 19 1 100 1 104 2 137 2 256 2 26 1 216 8 113 16 310 6 263 1 312 7 
137 1 231 3 253 1 138 2 194 1 283 3 45 3 113 7 291 1 310 6 98 3 206 3 312 4 
228 1 189 1 267 2 231 10 233 4 190 1 272 4 193 1 159 2 194 1 124 4 283 1 164 4 45 1 291 3 202 1 243 1 98 3 19 1 100 1 134 1 206 1 104 1 137 2 253 1 138 1 256 2 26 1 216 8 113 18 310 4 263 1 312 8 
13 1 158 1 148 1 149 1 200 1 110 1 153 1 
13 1 269 1 292 1 158 1 302 1 148 1 149 1 200 1 152 1 110 1 265 1 153 1 
41 1 25 1 123 1 192 1 56 1 121 1 
230 1 305 1 
230 1 305 1 
230 1 305 1 
229 1 230 1 85 1 41 1 122 2 123 1 282 1 286 1 48 1 53 1 203 2 56 1 247 1 103 1 135 1 212 1 28 1 214 1 177 1 260 4 306 1 307 1 144 1 117 1 32 1 119 1 
229 1 230 1 85 1 41 1 122 2 123 1 282 1 286 1 49 1 53 1 203 2 56 1 247 1 135 1 212 1 28 1 214 1 177 1 260 4 306 1 307 1 144 1 117 1 32 1 119 1 
41 1 31 1 123 1 214 1 56 1 247 1 
251 1 41 7 123 7 274 1 214 3 260 3 199 1 126 1 94 1 116 1 31 1 53 1 17 1 56 6 119 2 101 1 169 1 121 2 247 2 171 1 249 1 
230 1 305 1 
229 1 230 1 85 2 122 3 41 1 273 1 123 1 191 2 275 1 8 4 282 1 283 1 284 1 286 1 49 1 291 1 130 1 15 2 203 3 56 1 16 2 296 1 206 1 137 2 253 1 106 3 63 1 212 1 28 2 177 1 306 1 260 2 109 1 307 2 261 1 144 1 187 2 34 2 79 1 121 1 
252 1 41 2 123 2 214 2 260 2 199 1 282 1 31 1 53 1 56 2 119 1 169 1 247 1 
84 1 41 4 123 4 25 1 139 1 27 1 214 1 260 1 199 1 56 4 119 1 121 1 247 1 
135 1 41 2 123 2 274 1 214 2 260 1 94 1 53 1 245 1 56 2 119 1 205 1 247 1 227 1 
41 1 123 1 244 1 90 1 242 1 214 1 56 1 247 1 121 1 165 1 
41 2 123 2 214 1 260 1 199 1 56 2 17 1 119 1 246 1 247 1 249 1 
84 1 135 1 41 5 25 1 123 5 27 1 214 2 260 3 199 1 116 1 56 4 119 2 101 1 121 1 247 2 249 1 
84 1 135 1 41 5 25 1 123 5 27 1 214 2 281 1 260 3 199 1 116 1 56 4 119 2 121 1 247 2 249 1 
230 1 305 1 
135 1 251 1 41 1 123 1 274 1 214 2 260 1 94 1 53 1 56 1 119 1 169 1 247 1 
88 1 192 1 55 1 
40 1 88 1 52 1 55 1 125 1 215 1 108 1 
52 1 222 1 217 1 
270 1 40 1 88 1 52 3 55 1 6 2 80 1 125 3 303 1 215 1 108 1 179 1 
40 1 88 1 52 2 55 1 125 2 215 1 108 1 219 1 141 1 
40 1 2 1 90 1 303 1 125 1 108 1 215 1 68 1 289 1 52 1 244 1 
40 1 88 1 52 1 125 1 303 1 215 1 108 1 
88 2 52 1 55 1 125 1 303 1 215 1 108 1 
40 1 88 1 211 1 303 1 125 2 108 2 215 2 70 1 50 1 52 2 
40 2 88 1 2 1 303 1 125 3 195 1 108 1 215 1 219 2 285 1 221 1 52 3 55 1 
40 1 88 1 90 2 303 1 125 2 108 1 215 1 198 1 68 1 219 1 128 1 52 2 242 1 244 1 55 1 
86 1 40 2 88 1 2 1 303 1 125 4 195 1 108 2 215 2 141 1 219 2 52 4 55 1 
40 1 88 1 52 1 55 1 125 1 303 1 215 1 108 1 
40 3 88 2 2 1 6 1 125 4 195 1 108 1 215 1 179 1 219 2 52 4 55 2 80 1 170 1 
95 1 40 1 88 1 210 1 52 2 55 1 125 2 303 1 215 1 108 1 219 1 154 1 
40 1 24 1 88 1 6 2 303 1 125 3 108 1 215 1 179 2 52 3 55 1 80 1 
298 1 40 2 7 2 120 1 
52 1 99 1 125 1 303 1 215 1 108 1 
40 1 88 1 52 2 55 1 125 2 303 1 215 1 108 1 219 1 285 1 
14 1 
40 1 88 1 52 1 55 1 125 1 303 1 215 1 108 1 
40 1 88 1 52 3 55 1 6 1 125 3 303 1 215 1 108 1 219 1 285 1 
40 1 2 1 52 1 125 1 195 1 219 1 
40 1 88 1 

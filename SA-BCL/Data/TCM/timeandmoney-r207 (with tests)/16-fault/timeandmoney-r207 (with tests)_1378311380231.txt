#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (99,286) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) (259,268) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) (259,268) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 109 175 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 188 291 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 84 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (17,22,53,63) (17,22,53,63) (17,22,53,63) 123 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 866 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
28 1 263 1 305 1 171 2 54 1 298 2 302 1 230 1 
139 1 276 1 298 5 85 1 302 1 166 1 225 2 226 2 28 1 154 1 305 2 52 1 171 5 54 2 172 1 248 1 217 1 273 2 230 1 
28 1 84 1 302 1 
189 2 35 1 302 1 
177 1 209 2 306 2 107 1 170 2 202 2 311 2 269 2 
199 1 233 1 202 2 279 2 280 1 11 1 168 2 209 3 131 1 212 1 170 2 245 1 135 1 215 1 92 1 177 1 179 1 94 1 60 1 180 2 185 1 147 1 301 1 26 2 303 1 103 1 67 1 227 1 306 3 107 1 155 1 311 2 269 2 194 2 272 1 161 1 195 1 
66 1 209 1 275 1 306 1 107 1 170 1 202 1 311 1 269 1 238 1 
275 1 44 1 294 1 202 1 298 1 302 1 28 1 209 1 264 1 306 1 169 1 171 1 159 1 76 1 
275 1 44 1 294 1 202 1 298 2 302 1 28 1 209 1 306 1 170 1 171 2 311 1 159 1 269 1 76 1 
167 1 305 1 171 1 54 1 298 1 
28 1 305 1 171 2 54 1 298 2 64 1 302 1 230 1 
171 1 54 1 298 1 
275 1 202 1 298 1 238 1 12 1 66 1 209 1 305 1 107 1 306 1 170 1 171 1 311 1 269 1 
302 1 
94 1 199 1 180 1 202 1 99 1 147 1 279 1 280 1 303 1 26 1 65 1 67 1 209 2 306 2 170 1 245 1 135 1 269 1 272 1 314 1 
177 1 94 1 180 1 199 1 147 1 279 1 280 1 303 1 26 1 209 1 67 1 306 1 245 1 33 1 135 1 272 1 
177 1 84 1 
177 1 275 1 121 1 202 2 209 2 306 2 170 1 287 1 311 1 269 1 136 1 
177 1 275 1 121 1 202 2 65 1 209 2 306 2 170 2 287 1 311 1 269 2 
66 1 209 2 275 1 306 2 170 2 202 2 62 1 269 2 
181 1 285 1 99 1 
177 1 275 1 121 1 202 3 65 1 209 3 306 3 170 3 311 1 269 3 
66 1 209 1 275 1 306 1 170 1 202 1 269 1 
275 1 202 1 209 1 306 1 170 1 287 1 311 1 269 1 136 1 
275 1 199 1 44 1 233 1 202 3 279 1 280 1 11 1 168 1 209 4 131 1 212 1 170 3 245 1 171 1 135 1 287 1 215 1 92 1 177 1 179 1 94 1 180 1 294 1 298 1 147 1 301 1 153 1 303 1 26 1 65 1 67 1 306 4 107 1 311 2 159 1 269 3 194 2 113 1 272 1 161 1 314 1 195 1 76 1 
65 1 177 1 209 2 306 2 169 1 222 1 170 1 202 2 269 1 
275 1 255 1 44 1 294 1 202 3 298 1 302 1 65 2 209 3 306 3 170 3 171 1 311 1 287 1 159 1 269 3 113 1 314 1 76 1 
181 1 202 2 99 1 65 1 209 2 306 2 170 2 287 1 311 1 269 2 
177 1 94 1 180 1 199 1 279 1 147 1 280 1 303 1 26 1 209 1 67 1 306 1 245 1 135 1 272 1 
177 1 94 1 180 1 199 1 279 1 147 1 280 1 303 1 26 1 209 1 67 1 306 1 245 1 134 1 174 1 
286 1 102 1 
209 1 275 1 306 1 294 1 170 1 202 1 269 1 62 1 
192 1 160 1 
192 1 160 1 
266 1 223 1 
266 1 223 1 
266 1 223 1 
192 1 299 1 160 1 
192 1 299 1 160 1 
192 1 299 1 160 1 
132 1 192 1 160 1 
132 1 192 1 160 1 
132 1 192 1 160 1 
201 1 266 1 192 2 235 1 223 1 160 2 
192 1 160 1 151 1 
41 1 202 2 49 1 209 2 170 2 14 1 171 1 58 1 221 1 220 1 177 1 183 1 143 1 298 1 151 1 101 1 304 1 306 2 192 1 267 1 312 1 269 2 160 1 196 1 
221 2 93 1 178 1 183 1 201 1 143 2 298 2 152 1 302 1 101 3 304 2 211 1 30 1 244 2 192 2 171 2 160 2 16 1 58 2 
197 1 7 1 236 1 
197 1 243 1 7 1 
197 3 243 1 61 1 236 2 146 1 214 1 
197 2 243 1 61 1 96 1 236 1 146 1 
197 2 243 1 61 1 236 1 146 2 
118 1 276 3 281 2 166 2 128 1 13 1 171 5 54 1 246 1 15 2 220 1 142 1 298 5 98 1 23 1 224 1 225 1 302 2 226 1 189 2 105 1 28 1 154 1 305 4 156 1 190 1 267 1 158 2 35 2 229 1 273 1 230 1 196 1 
166 6 167 5 13 3 171 9 246 3 248 1 182 1 98 3 23 2 28 1 105 3 189 6 190 2 270 1 35 6 273 2 196 4 119 1 120 1 276 8 281 6 128 3 284 1 210 1 54 6 138 1 142 3 298 9 225 2 302 5 226 2 154 1 305 7 158 6 74 5 229 1 230 1 
276 3 166 2 281 2 128 1 13 1 171 3 246 1 15 1 248 1 142 1 298 3 98 1 23 1 224 1 302 3 225 1 226 1 28 1 189 2 105 1 305 2 156 1 190 1 158 2 270 1 35 2 273 1 196 1 
276 5 281 4 166 4 128 2 284 1 210 1 13 2 171 4 246 2 15 2 248 1 182 1 142 2 298 4 98 2 23 1 224 1 302 4 225 1 226 1 28 1 189 4 105 2 305 3 156 1 190 1 158 4 270 1 35 4 273 1 196 2 
184 1 84 1 
147 1 19 1 
124 1 
94 1 147 1 280 1 
283 1 147 1 
147 1 280 1 
251 1 94 1 184 2 213 1 147 3 280 1 
142 3 293 1 45 1 122 2 205 2 237 2 282 1 168 14 227 8 29 1 157 2 110 1 191 1 246 3 38 5 75 4 91 1 195 6 
142 3 293 1 45 1 122 2 205 2 237 2 282 1 168 14 227 8 29 1 157 2 110 1 191 1 246 3 38 7 75 4 195 6 91 3 
45 1 122 2 205 2 237 2 282 1 168 14 246 3 91 1 142 3 293 1 295 1 227 8 29 1 110 1 157 2 191 1 38 5 75 4 195 6 
45 1 122 3 47 1 205 3 237 3 11 1 240 1 282 1 129 1 168 38 128 3 212 1 246 5 215 1 216 1 91 6 176 1 142 6 293 1 98 2 25 4 105 3 106 1 227 21 29 2 157 2 110 1 191 2 34 1 194 2 38 12 75 6 161 1 114 3 195 17 
45 1 122 2 205 2 237 2 11 2 168 16 212 2 246 3 215 2 292 1 91 2 253 1 142 3 293 1 106 1 227 9 29 1 110 1 157 2 191 1 194 4 38 7 75 5 161 2 195 7 
53 1 123 1 63 1 17 1 
53 1 268 1 63 1 17 1 
197 2 43 1 200 2 1 1 7 1 125 1 236 1 279 1 243 1 245 1 288 1 214 1 218 1 249 1 180 1 22 2 297 1 145 1 63 2 26 1 259 1 67 1 69 1 71 1 162 1 
53 1 268 1 63 1 17 1 
53 1 123 1 63 1 17 1 
73 1 
117 1 275 1 44 1 202 1 4 1 276 1 83 1 279 2 86 1 280 1 166 1 209 1 169 1 245 1 171 3 54 2 89 1 290 1 137 1 175 1 180 2 294 1 298 3 147 1 26 2 303 2 225 1 226 1 67 1 264 1 154 1 306 1 109 1 190 1 159 1 273 1 76 1 230 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 3 209 1 263 1 264 1 306 1 109 1 169 1 171 3 54 1 159 1 89 1 76 1 230 1 
175 1 275 1 294 1 44 1 202 1 4 1 298 2 225 1 226 1 209 1 154 1 264 1 306 1 169 1 109 1 171 2 159 1 89 1 273 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 4 1 202 1 298 2 209 1 264 1 306 1 109 1 169 1 171 2 159 1 89 1 76 1 
175 1 275 1 294 1 44 1 202 1 4 1 298 2 225 1 226 1 209 1 154 1 264 1 306 1 169 1 109 1 171 2 159 1 89 1 273 1 76 1 
116 1 117 1 78 1 202 1 83 1 204 1 279 8 239 1 280 2 11 1 209 1 168 2 131 1 170 1 212 1 245 2 57 1 215 1 249 1 92 1 179 1 141 1 180 8 185 1 147 3 26 7 303 2 261 1 102 1 103 2 65 1 188 1 67 2 227 1 306 1 269 1 194 2 161 1 195 1 
84 1 102 1 
5 1 11 2 240 1 168 12 128 2 131 1 285 10 212 2 215 2 91 2 92 2 177 1 179 1 142 2 181 3 185 1 99 10 25 3 105 2 227 8 309 1 310 1 228 1 34 1 37 1 194 4 38 2 161 2 114 3 195 4 
231 1 199 1 5 1 202 1 279 1 280 1 11 1 209 2 168 2 50 1 131 1 212 1 170 1 245 1 135 1 215 1 92 1 177 1 94 1 179 1 180 1 181 1 185 1 147 1 24 1 26 1 303 1 65 1 67 1 227 1 306 2 33 1 269 1 194 2 272 1 161 1 314 1 195 1 
5 1 6 1 11 2 168 5 170 1 245 1 91 2 92 2 179 1 94 1 180 1 181 2 99 2 26 1 104 1 105 1 193 1 112 1 269 1 194 4 38 3 272 1 195 2 199 1 202 1 279 1 280 1 209 2 128 1 131 2 285 2 212 2 135 1 215 2 142 1 147 1 301 1 149 1 303 1 65 1 67 1 227 3 306 2 75 1 314 1 161 2 
102 1 
102 1 
102 1 
181 1 142 1 99 1 239 1 258 1 11 1 168 2 128 1 227 2 285 1 131 1 212 1 38 1 194 2 215 1 161 1 91 1 92 1 
181 1 256 1 98 1 99 1 239 1 11 1 168 2 285 1 131 1 212 1 246 1 38 1 194 2 75 1 215 1 161 1 195 2 92 1 
181 1 142 1 99 1 239 1 11 1 168 2 105 1 128 1 227 2 285 1 131 1 212 1 38 1 194 2 215 1 161 1 91 1 92 1 
181 1 142 1 99 1 11 1 105 1 128 1 168 2 227 2 285 1 131 1 212 1 38 1 194 2 215 1 161 1 91 1 92 1 
199 1 279 1 280 1 11 1 168 2 209 1 131 1 212 1 245 1 135 1 215 1 92 1 177 1 94 1 179 1 180 1 185 1 147 1 301 1 26 1 303 1 67 1 227 1 306 1 194 2 272 1 161 1 195 1 
199 1 279 1 280 1 11 1 168 2 209 1 131 1 212 1 245 1 134 1 215 1 174 1 92 1 177 1 94 1 179 1 180 1 185 1 147 1 26 1 303 1 67 1 227 1 306 1 111 1 194 2 161 1 195 1 
181 1 142 1 5 1 99 1 11 1 168 2 105 1 128 1 227 2 285 1 131 1 212 1 38 1 194 2 215 1 161 1 91 1 92 1 
199 1 279 1 280 1 11 1 168 2 128 1 209 1 285 1 131 1 212 1 245 1 135 1 215 1 91 1 92 1 94 1 181 1 142 1 180 1 99 1 147 1 301 1 26 1 261 1 104 1 67 1 105 1 227 2 306 1 38 1 194 2 272 1 161 1 
5 1 202 1 11 1 209 1 128 1 168 2 131 1 285 1 212 1 170 1 287 1 215 1 91 1 92 1 142 1 181 1 99 1 105 1 227 2 306 1 311 1 269 1 38 1 194 2 161 1 163 1 
5 1 202 1 11 1 209 1 128 1 168 3 285 1 131 1 212 1 170 1 287 1 246 1 215 1 92 1 181 1 142 1 98 1 99 1 27 1 105 1 227 1 306 1 311 1 269 1 38 1 194 2 75 1 161 1 195 2 
274 1 79 1 3 3 207 1 11 2 127 1 240 3 168 33 128 5 51 1 212 2 133 1 88 1 289 1 246 3 56 2 215 2 91 2 292 1 140 1 142 5 296 1 186 1 98 3 25 5 187 1 105 5 227 17 108 1 34 2 38 2 194 4 161 2 114 3 195 16 
274 1 79 1 3 4 207 1 11 3 127 1 240 3 168 38 128 5 51 1 212 3 133 1 88 1 289 1 246 4 56 2 215 3 91 2 292 1 140 1 142 5 296 1 186 1 98 4 25 5 187 1 106 1 105 5 227 19 108 1 34 2 194 6 38 5 75 3 161 3 114 3 195 19 
274 1 79 1 45 1 3 3 122 1 205 1 237 1 207 1 11 1 127 1 240 2 168 32 128 4 51 1 212 1 88 1 289 1 246 4 56 1 215 1 91 2 292 1 140 1 142 5 296 1 98 3 25 3 187 1 105 4 227 17 108 1 157 1 110 1 34 1 38 5 194 2 75 3 161 1 114 2 195 15 
79 1 3 2 165 1 11 2 240 1 168 17 128 3 51 2 212 2 246 2 56 1 215 2 91 2 292 1 142 3 296 1 98 2 186 1 25 2 187 1 105 3 227 9 108 1 34 1 38 4 194 4 75 2 161 2 114 1 195 8 
274 1 79 1 3 3 207 1 11 2 127 1 240 2 168 24 128 3 51 1 212 2 88 1 289 1 246 2 56 2 215 2 91 1 292 1 140 1 142 3 296 2 98 2 25 2 187 1 106 1 105 3 227 13 108 1 38 1 194 4 161 2 114 2 195 11 
116 1 5 1 202 2 8 1 279 2 280 1 11 1 209 2 168 2 131 1 212 1 245 1 215 1 247 1 90 1 92 1 179 1 180 2 185 1 147 1 257 1 260 1 26 2 103 2 67 1 188 1 227 1 306 2 194 2 161 1 195 1 
197 2 180 2 95 1 81 1 164 1 1 1 7 1 125 1 236 1 279 2 206 1 26 2 261 1 67 1 243 1 245 1 214 1 249 1 162 1 
197 2 180 1 95 1 164 1 1 1 7 1 125 1 236 1 279 1 26 1 67 1 243 1 245 1 214 1 249 1 162 1 219 1 
115 1 117 1 198 1 180 1 1 1 83 1 147 1 279 1 206 1 280 1 303 1 26 1 67 1 245 1 
197 2 180 1 95 1 81 1 164 1 1 1 7 1 125 1 236 1 279 1 206 1 26 1 67 1 243 1 245 1 214 1 249 1 162 1 
40 1 
28 1 171 1 54 1 298 1 302 1 230 1 
117 1 42 2 82 1 276 2 83 1 86 1 279 2 280 1 166 2 245 1 171 3 54 4 290 2 248 1 137 1 180 2 298 3 147 1 225 2 26 2 303 2 226 2 67 1 154 1 32 1 190 2 72 1 273 2 230 2 
139 1 172 1 84 1 
276 1 203 1 166 1 171 1 54 1 298 1 97 1 300 1 225 1 302 2 226 1 189 1 28 1 154 1 35 1 273 1 230 1 
10 2 166 7 242 2 13 2 245 2 171 5 246 2 19 3 94 1 180 1 184 2 98 2 26 1 28 1 189 6 105 2 265 1 190 2 36 2 35 6 270 2 273 3 276 8 126 2 279 1 48 1 280 1 281 6 128 2 213 1 54 5 55 1 290 1 142 2 144 2 298 5 147 6 149 2 225 3 303 1 302 7 226 3 67 1 154 3 158 6 159 2 230 3 
274 1 276 7 207 1 281 5 166 4 240 1 128 2 88 1 289 1 246 2 140 1 142 2 98 2 25 1 225 1 302 4 226 1 189 3 105 2 28 1 154 1 158 5 35 3 114 1 273 1 
275 1 276 2 202 1 205 1 237 1 238 1 166 2 12 1 209 1 13 2 170 1 171 1 246 1 142 2 293 1 298 1 225 1 226 1 66 1 154 1 306 1 107 1 157 1 311 1 270 1 269 1 313 1 273 1 
139 1 276 1 225 1 166 1 302 1 226 1 28 1 154 1 172 1 273 1 
189 2 128 1 105 1 142 1 13 1 276 2 158 2 246 1 98 1 270 1 35 2 302 2 281 2 166 2 
199 1 233 1 202 2 279 1 280 1 11 1 168 1 209 3 131 1 170 2 212 1 245 1 135 1 215 1 92 1 177 1 179 1 94 1 180 1 147 1 301 1 26 1 303 1 67 1 306 3 107 1 311 2 269 2 194 2 272 1 161 1 195 1 
276 1 122 1 281 2 166 2 225 1 302 4 226 1 189 2 28 2 154 1 190 1 158 2 35 2 290 1 273 1 
221 1 9 1 58 1 
221 1 9 1 58 1 
221 1 9 1 58 1 
221 1 307 1 58 1 
221 1 307 1 58 1 
221 1 307 1 58 1 
221 1 58 1 
192 1 160 1 
49 1 221 1 178 1 232 1 58 1 
45 1 122 1 205 2 237 2 207 1 11 1 240 1 168 18 128 1 212 1 246 3 215 1 91 1 292 1 142 4 293 1 25 2 105 1 227 10 157 2 110 1 34 1 38 5 194 2 75 4 114 1 161 1 195 8 
45 1 122 1 205 2 237 2 207 1 11 2 240 1 168 15 212 2 246 3 215 2 91 1 292 1 142 3 293 1 25 1 227 8 157 2 31 1 110 1 194 4 38 5 75 4 161 2 114 1 195 7 
274 1 207 1 11 2 240 1 168 13 128 2 212 2 88 1 289 1 246 2 215 2 292 1 91 1 140 1 142 2 98 2 25 1 105 2 227 6 31 1 194 4 38 1 114 1 161 2 195 7 
274 1 45 1 122 1 205 2 237 2 207 1 11 3 240 1 168 24 128 2 212 3 88 1 289 1 246 4 215 3 91 4 292 1 140 1 142 5 293 1 98 1 25 1 106 1 105 2 227 14 157 2 110 1 31 1 194 6 38 9 75 5 114 1 161 3 195 10 
45 1 122 1 205 2 237 2 207 1 11 1 240 1 168 18 128 1 212 1 246 3 215 1 91 1 292 1 142 4 293 1 25 2 105 1 227 10 157 2 110 1 34 1 38 5 194 2 75 4 114 1 161 1 195 8 
274 1 207 1 11 1 240 1 168 12 128 2 212 1 88 1 289 1 246 2 215 1 91 1 292 1 140 1 142 2 98 2 25 1 105 2 227 6 194 2 38 2 75 1 114 1 161 1 195 6 
274 1 207 1 11 3 240 1 168 12 128 2 212 3 88 1 289 1 246 1 215 3 292 1 91 1 140 1 142 2 98 1 25 1 106 1 105 2 227 7 31 1 38 1 194 6 161 3 114 1 195 5 
274 1 207 1 11 3 240 1 168 12 128 2 212 3 88 1 289 1 246 1 215 3 91 2 292 1 140 1 142 2 186 1 98 1 25 1 106 1 105 2 227 7 194 6 38 4 75 2 161 3 114 1 195 5 
142 1 45 2 205 3 237 3 168 7 227 3 110 1 157 1 246 1 38 6 75 3 195 4 91 3 
274 1 207 1 11 3 240 1 168 12 128 2 212 3 88 1 289 1 246 1 215 3 292 1 91 1 140 1 142 2 186 1 98 1 25 1 106 1 105 2 227 7 38 1 194 6 161 3 114 1 195 5 
45 1 122 1 205 2 237 2 11 2 168 17 212 2 246 3 215 2 91 3 142 3 293 1 106 1 227 9 110 1 157 2 194 4 38 7 75 4 161 2 195 8 
45 1 110 1 84 1 
142 1 98 1 11 1 105 1 128 1 168 4 227 2 212 1 31 1 246 1 38 2 194 2 75 1 215 1 161 1 195 2 91 1 
142 1 98 1 25 2 240 1 168 7 105 1 128 1 227 3 34 1 246 1 38 1 75 1 114 1 195 4 
45 1 122 1 205 2 237 2 11 1 128 2 168 25 212 1 246 5 215 1 91 2 142 5 293 1 98 2 25 2 105 2 106 1 227 13 157 2 110 1 310 1 228 1 34 1 38 7 194 2 75 5 114 2 161 1 195 12 
168 1 25 1 195 1 
168 1 227 1 114 1 
142 1 98 1 149 1 11 1 168 6 105 1 128 1 227 3 212 1 31 1 246 1 194 2 38 3 215 1 75 2 161 1 195 3 91 1 
274 1 207 1 11 1 240 1 168 12 128 2 212 1 88 1 289 1 246 2 215 1 91 1 292 1 140 1 142 2 98 2 25 1 105 2 227 6 194 2 38 2 75 1 114 1 161 1 195 6 
142 1 205 1 237 1 168 6 227 3 157 1 246 1 38 2 75 1 195 3 91 1 
45 1 277 1 205 1 237 1 11 1 168 3 106 1 227 1 212 1 110 1 38 2 194 2 75 1 215 1 161 1 91 1 195 2 
142 2 293 1 205 2 237 2 11 1 168 10 227 5 212 1 157 1 246 2 194 2 38 5 215 1 75 3 161 1 292 1 91 2 195 5 
142 1 11 1 128 1 168 2 227 2 212 1 194 2 38 1 215 1 161 1 292 1 91 1 
142 1 98 1 11 1 105 1 128 1 168 4 227 2 212 1 246 1 38 2 194 2 75 1 215 1 161 1 195 2 292 1 91 1 
277 1 205 1 186 1 237 1 11 3 106 1 168 3 227 1 212 3 194 6 38 2 215 3 75 1 161 3 195 2 292 1 91 1 
45 1 122 1 47 1 205 2 237 2 11 4 240 1 129 1 168 34 128 3 212 4 246 5 216 1 215 4 292 1 91 4 142 6 293 1 186 1 98 2 25 4 106 1 105 3 227 18 157 2 110 1 31 1 34 1 194 8 38 9 75 5 161 4 114 3 195 16 
177 1 209 1 306 1 254 1 169 1 222 1 202 1 
177 1 21 1 252 1 254 1 222 1 234 1 2 1 202 1 241 1 209 1 306 1 169 1 
180 1 83 1 84 1 279 1 26 1 303 1 
177 1 94 1 199 1 180 1 202 1 147 1 279 1 280 1 303 1 26 1 65 1 209 2 67 1 306 2 170 1 245 1 135 1 269 1 
65 1 42 1 209 1 306 1 170 1 202 1 269 1 
65 1 42 1 209 1 306 1 170 1 202 1 269 1 
42 1 171 1 298 1 
42 1 171 1 298 1 
67 1 180 1 245 1 279 1 57 1 26 1 
78 1 94 1 141 1 180 7 204 1 278 1 279 7 147 3 280 2 303 2 26 6 103 1 261 1 188 1 67 2 308 1 245 3 213 1 57 1 249 1 315 1 
6 1 5 1 237 2 11 2 168 13 170 1 245 1 246 3 91 1 90 1 92 2 177 3 94 1 180 1 26 1 261 1 104 1 110 1 269 1 194 4 38 5 272 1 195 6 275 1 121 1 199 1 45 1 202 1 122 1 205 2 279 1 280 1 209 2 131 2 212 2 135 1 215 2 142 3 293 1 147 1 301 1 65 1 67 1 227 7 306 2 157 2 75 4 161 2 
276 1 126 1 10 1 279 1 166 1 242 1 171 3 54 2 172 1 19 1 139 1 180 1 184 1 144 1 298 3 147 2 302 1 26 1 303 1 225 2 226 2 28 1 154 2 305 1 72 1 159 1 273 2 230 1 
94 1 180 2 184 1 279 2 147 2 280 1 26 2 261 1 67 1 265 1 245 2 213 1 57 1 
117 1 180 4 83 1 279 4 147 1 150 1 280 1 303 1 26 4 261 1 67 1 68 1 245 1 
42 1 94 1 180 1 278 1 279 1 148 1 147 1 100 1 280 1 26 1 67 1 130 1 245 2 315 1 
177 1 94 1 199 1 180 1 202 1 147 1 279 1 280 1 303 1 26 1 65 1 209 2 67 1 306 2 170 1 245 1 269 1 174 1 
42 1 
197 1 67 1 243 1 180 1 245 1 7 1 279 1 162 1 26 1 303 1 
67 1 188 1 180 2 245 1 147 1 279 2 280 1 260 1 249 1 26 2 261 1 
117 1 42 1 78 1 180 4 83 1 204 1 279 4 147 3 280 2 303 1 26 3 261 1 188 1 67 2 68 1 245 2 
117 1 42 1 180 4 83 1 204 1 279 4 147 3 280 2 303 1 26 3 261 1 188 1 67 2 68 1 245 2 291 1 
177 1 77 1 80 1 46 1 208 1 
177 1 275 1 77 1 20 1 80 2 294 1 44 1 0 1 46 2 298 2 208 2 302 1 28 1 305 1 171 2 159 1 271 1 113 1 76 1 
77 1 80 1 46 1 202 1 8 1 257 1 209 1 306 1 247 1 
77 1 0 1 271 1 
145 1 84 1 218 1 
53 1 63 1 17 1 
69 1 200 1 71 1 
53 1 123 1 63 1 17 1 
53 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
59 1 53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
197 1 243 1 53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
200 1 22 1 53 1 63 2 17 1 250 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
297 2 173 1 39 2 18 1 
53 1 123 1 63 1 17 1 
53 1 123 1 63 1 17 1 
87 1 
53 1 123 1 63 1 17 1 
262 1 70 1 297 1 250 1 
297 1 145 1 
53 1 123 1 63 1 17 1 

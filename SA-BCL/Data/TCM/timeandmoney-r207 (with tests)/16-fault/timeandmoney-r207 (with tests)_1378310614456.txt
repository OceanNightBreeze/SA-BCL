#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (67,144) 283 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 311 (113,142,202) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 111 85 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 111 85 55 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 150 318 239 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 191 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (67,144) 283 45 309 322 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (67,144) 283 321 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (67,144) 283 100 141 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (67,144) 283 100 141 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (67,144) 283 100 156 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 143 288 341 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 143 288 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 143 288 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 143 288 341 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 143 288 341 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 321 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (78,93) 267 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 111 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (78,93) (78,93) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (67,144) 283 212 (2,201) (2,201) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (78,93) 267 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (78,93) (78,93) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
58 1 215 1 10 1 220 5 183 1 250 1 221 1 20 1 192 1 74 1 29 2 112 1 79 4 154 2 262 2 81 2 117 1 86 9 40 1 205 2 42 3 123 9 125 1 169 6 129 2 287 1 174 1 53 2 
58 1 215 1 10 1 220 5 183 1 250 1 221 1 20 1 192 1 74 1 29 2 112 1 79 4 154 2 262 2 81 2 117 1 86 9 40 1 205 2 42 3 123 9 125 1 169 6 129 2 287 1 174 1 53 2 
58 1 215 1 10 1 220 6 183 1 250 1 221 1 20 1 192 1 74 1 29 2 112 1 79 5 154 2 262 2 81 2 117 1 86 10 40 1 205 2 42 4 123 10 125 1 169 7 129 2 287 1 174 1 53 2 
58 1 215 1 10 1 220 4 183 1 250 1 221 1 20 1 192 1 74 1 29 2 112 1 79 3 154 2 262 1 81 2 117 1 86 7 205 2 42 2 123 7 125 1 169 4 129 2 287 1 174 1 53 2 
79 2 154 1 215 1 262 2 81 1 117 1 86 4 220 3 250 1 40 1 205 1 42 1 123 4 169 3 129 1 74 1 112 1 53 1 
101 1 154 1 215 1 117 1 160 1 86 2 220 1 250 1 205 1 221 1 123 2 127 1 129 1 29 1 287 1 53 1 
79 1 123 3 215 1 117 1 169 1 192 1 86 3 129 2 220 2 29 1 250 1 205 2 42 1 
79 4 154 1 262 2 215 1 81 1 117 1 10 1 86 9 183 1 220 5 250 1 40 1 205 2 42 3 16 1 123 9 25 1 169 7 192 1 74 1 129 2 29 1 112 1 53 1 
79 4 154 1 262 2 215 1 81 1 117 1 10 1 86 9 183 1 220 5 250 1 40 1 205 2 42 3 16 1 123 9 25 1 169 7 192 1 74 1 129 2 29 1 112 1 53 1 
191 1 255 1 41 1 
294 2 219 1 41 1 
253 2 59 1 278 2 106 1 246 2 62 2 181 2 28 2 
292 2 59 1 214 2 246 2 61 1 62 3 180 1 181 2 12 1 14 1 251 1 64 2 253 2 19 1 106 1 28 2 30 1 231 1 261 1 155 1 116 1 319 1 269 1 236 1 206 2 273 1 323 2 165 1 278 3 46 1 124 1 335 1 286 1 211 1 209 1 99 1 175 1 
253 1 278 1 222 1 106 1 246 1 62 1 203 1 181 1 28 1 289 1 
246 1 62 2 179 1 181 1 299 1 105 1 253 1 222 1 106 1 28 2 255 1 152 1 203 1 163 1 204 1 41 1 278 2 281 1 172 1 340 1 289 2 
246 1 62 1 181 1 163 1 41 1 105 2 253 1 278 1 281 2 172 1 28 1 340 1 255 1 152 1 289 1 
260 1 137 1 281 1 200 1 105 1 
260 1 331 1 137 1 281 2 255 1 301 1 41 1 105 2 
137 1 281 1 105 1 
260 1 246 1 179 1 62 1 203 1 181 1 105 1 253 1 278 1 222 1 106 1 281 1 28 1 289 1 
41 1 
260 1 91 1 137 1 281 2 255 1 301 1 41 1 105 2 
259 1 260 2 153 2 8 1 137 2 249 1 301 1 41 1 105 5 324 2 327 1 72 1 334 1 281 5 194 2 284 1 130 1 255 1 258 1 
59 1 191 1 
59 2 264 1 246 1 62 2 181 1 253 1 278 2 190 1 28 2 
144 1 283 1 
292 1 59 1 214 1 319 1 62 1 269 1 12 1 236 1 251 1 273 1 323 1 278 1 48 1 209 1 231 1 175 1 
292 1 214 1 319 1 246 1 62 2 269 1 236 1 12 1 38 1 251 1 273 1 323 1 253 1 278 2 144 1 28 1 210 1 209 1 231 1 175 1 
253 3 59 1 278 3 246 3 62 3 181 1 28 3 210 1 
253 1 278 1 222 1 246 1 62 1 28 1 289 1 
253 1 278 1 264 1 190 1 246 1 62 1 181 1 28 1 289 1 
54 1 292 1 59 1 214 1 246 3 61 1 62 4 298 1 181 2 12 1 251 1 14 1 64 2 105 1 253 3 19 1 190 1 106 1 28 3 152 1 231 1 261 1 116 1 319 1 269 1 236 1 38 1 163 1 206 1 273 1 323 1 165 1 278 4 46 1 124 1 281 1 172 1 340 1 286 1 211 1 209 1 210 1 289 1 175 1 
59 1 246 1 62 2 11 1 299 1 253 1 278 2 279 1 28 2 210 1 289 1 
246 3 62 3 181 1 298 1 38 1 163 1 41 1 105 1 253 3 278 3 190 1 281 1 148 1 172 1 28 3 340 1 152 1 210 2 289 1 
246 2 62 2 181 1 88 1 253 2 278 2 190 1 144 1 28 2 210 1 
292 1 59 1 214 1 319 1 62 1 269 1 12 1 236 1 251 1 273 1 323 1 278 1 209 1 175 1 231 1 
292 1 213 1 59 1 214 1 319 1 62 1 269 1 236 1 251 1 273 1 323 1 43 1 278 1 175 1 231 1 
261 1 177 1 116 1 7 1 206 1 64 2 165 1 67 1 19 1 46 1 149 1 286 1 97 1 211 1 
253 1 278 1 246 1 62 1 110 1 340 1 28 1 289 1 
59 1 246 4 118 1 62 5 181 1 299 1 11 1 270 1 38 1 253 4 278 5 190 1 279 1 28 5 210 2 289 1 
253 2 278 2 222 1 246 2 62 2 110 1 28 2 289 1 
265 1 202 1 
265 1 202 1 
142 1 311 1 
142 1 311 1 
142 1 311 1 
142 1 265 1 202 1 311 1 
113 1 265 1 202 1 
265 1 202 1 103 1 
265 1 202 1 103 1 
265 1 202 1 103 1 
47 1 265 1 202 1 
47 1 265 1 202 1 
47 1 265 1 202 1 
265 1 202 1 82 1 85 1 35 1 111 1 
55 1 265 1 202 1 82 1 85 1 281 1 35 1 111 1 105 1 
154 1 81 1 53 1 
154 1 160 1 53 1 
154 3 4 1 122 1 71 1 81 2 160 1 
154 2 4 1 71 1 81 1 168 1 160 1 
154 2 4 1 81 1 71 2 160 1 
100 1 57 1 102 2 294 2 7 1 137 1 219 1 301 1 105 5 252 1 145 1 72 2 194 1 223 1 255 1 230 1 259 1 260 4 153 1 156 1 271 1 41 2 90 1 324 1 240 1 336 1 281 5 171 1 96 1 130 2 97 1 132 1 
246 1 62 1 179 1 137 1 181 1 15 1 105 2 253 1 222 1 106 1 227 1 28 1 255 1 200 1 260 2 203 1 276 1 41 1 278 1 281 2 289 1 
100 1 57 1 102 1 294 2 246 1 7 1 62 1 179 1 8 1 181 1 219 1 252 1 105 3 253 1 222 1 106 1 72 2 194 1 223 1 28 1 255 1 260 2 153 1 156 1 203 1 41 2 90 1 324 1 278 1 240 1 336 1 281 3 171 1 130 2 96 1 97 1 289 1 
100 2 102 2 246 1 7 2 8 1 179 1 181 1 252 1 105 4 253 1 106 1 26 1 194 1 28 1 255 1 260 3 115 1 203 1 41 3 278 1 281 4 130 4 289 1 57 2 294 4 62 1 219 2 222 1 72 3 223 1 147 1 153 1 156 2 90 1 324 1 240 2 336 1 171 2 96 2 97 2 
312 1 191 1 231 1 
257 1 231 1 
37 1 
269 1 231 1 
312 2 319 1 333 1 269 1 34 1 231 3 
319 1 269 1 231 1 
235 1 231 1 
57 1 1 1 293 1 2 1 7 1 180 4 87 1 89 3 206 7 66 1 165 3 338 1 285 2 76 1 52 1 201 1 212 2 
57 1 1 1 293 1 2 1 7 1 180 4 87 1 89 3 206 7 66 1 165 3 338 1 285 2 76 1 52 1 201 1 212 2 
57 1 1 1 293 1 2 1 7 1 180 4 87 1 89 3 206 7 66 1 165 3 338 1 243 1 285 2 76 1 52 1 201 1 212 2 
100 4 1 2 293 2 57 5 2 1 7 5 9 1 180 19 64 4 66 1 304 1 69 2 19 2 201 1 76 5 316 1 116 2 156 4 233 1 87 2 161 1 206 33 89 8 165 14 45 4 329 1 92 1 46 2 241 1 338 1 128 4 285 3 52 2 97 4 211 2 212 3 
134 1 57 1 293 1 1 1 2 1 7 1 180 5 64 4 66 1 69 1 19 2 76 1 201 1 116 2 87 1 238 1 206 9 89 4 165 4 46 2 285 3 52 1 211 2 212 2 
292 1 214 1 215 1 247 1 220 1 250 1 189 1 305 1 22 1 29 1 154 2 315 1 81 1 117 1 160 1 119 1 86 2 120 1 236 1 205 1 273 1 323 1 122 1 123 2 330 1 280 1 169 1 129 1 208 1 53 1 
292 1 290 1 214 1 247 1 220 1 250 1 139 1 189 1 254 1 22 1 29 1 154 2 315 1 81 1 117 1 160 1 119 1 86 3 236 1 205 1 273 1 323 1 122 1 123 3 330 1 280 1 169 2 129 1 208 1 53 1 
292 1 290 1 214 1 247 1 220 1 250 1 139 1 29 1 154 2 315 1 81 1 117 1 160 1 119 1 86 2 236 1 273 1 323 1 122 1 123 2 330 1 280 1 169 2 208 1 53 1 
292 1 214 1 247 2 184 1 254 1 29 2 231 1 315 2 158 1 119 2 86 1 269 1 236 1 274 1 205 1 273 1 323 1 325 1 123 1 129 1 173 1 51 1 175 1 
154 2 292 1 214 1 215 1 315 1 81 1 160 1 247 1 86 1 119 1 236 1 120 1 139 1 273 1 205 1 323 1 189 1 122 1 123 1 330 1 22 1 280 1 129 1 29 1 208 1 53 1 
195 1 
245 4 5 2 6 2 184 1 105 5 17 1 193 2 194 1 28 1 255 1 259 1 263 1 269 1 272 1 204 1 273 1 41 2 277 1 278 1 281 5 130 2 51 1 289 1 292 2 214 2 294 2 216 1 62 1 297 2 137 6 299 1 219 2 301 3 65 2 307 1 72 2 310 1 150 1 152 1 151 1 77 2 231 1 313 1 153 1 159 1 234 1 236 1 163 1 323 2 324 1 328 2 336 1 172 1 340 1 175 2 
313 1 245 2 263 1 159 1 62 1 137 2 299 1 301 1 163 1 204 1 105 3 91 1 277 1 278 1 307 1 193 1 281 3 172 1 340 1 28 1 152 1 289 1 
313 1 245 3 263 1 6 1 159 1 62 1 299 1 163 1 204 1 105 2 277 1 278 1 307 1 281 2 172 1 340 1 28 1 152 1 289 1 
245 3 6 1 62 1 137 2 299 1 301 1 65 1 105 3 307 1 193 1 28 1 152 1 313 1 263 1 159 1 204 1 163 1 278 1 277 1 91 1 281 3 172 1 340 1 289 1 
245 5 5 2 246 1 6 3 179 1 181 1 105 5 253 1 106 1 23 1 193 4 194 1 28 2 255 2 259 1 263 1 203 1 36 1 204 1 41 2 278 2 277 1 281 5 130 1 289 2 62 2 296 1 297 2 137 7 299 1 219 2 301 3 65 4 222 1 307 1 72 1 150 1 152 1 229 1 151 1 77 2 313 1 153 1 318 1 159 1 163 1 324 1 91 1 328 2 172 1 340 1 
245 4 5 2 6 2 105 4 193 2 194 1 28 1 255 1 259 1 263 1 204 1 272 1 41 2 278 1 277 1 281 4 130 1 289 1 294 2 62 1 297 2 137 4 299 1 219 2 301 2 65 2 307 1 72 1 150 1 151 1 152 1 77 2 313 1 153 1 159 1 163 1 324 1 328 2 172 1 340 1 
245 4 5 2 6 2 62 1 297 2 137 4 299 1 219 2 301 2 65 2 105 4 307 1 193 2 72 1 194 1 28 1 255 1 150 1 151 1 152 1 229 1 77 2 313 1 259 1 153 1 263 1 318 1 159 1 36 1 204 1 163 1 41 1 324 1 278 1 277 1 328 2 281 4 172 1 130 1 340 1 289 1 
245 4 5 2 6 2 62 1 297 2 137 4 299 1 219 2 301 2 65 2 105 4 307 1 193 2 72 1 194 1 28 1 255 1 150 1 151 1 152 1 229 1 77 2 313 1 259 1 153 1 263 1 318 1 159 1 36 1 204 1 163 1 41 1 324 1 278 1 277 1 328 2 281 4 172 1 130 1 340 1 289 1 
245 2 294 1 62 1 297 1 299 1 105 2 307 1 72 1 194 1 27 1 28 1 150 1 152 1 313 1 259 1 153 1 263 1 318 1 159 1 232 1 204 1 163 1 324 1 278 1 277 1 328 1 239 1 281 2 172 1 130 1 340 1 342 1 289 1 
245 5 5 2 6 3 62 1 296 1 297 2 137 5 299 1 219 2 301 2 65 3 105 4 307 1 72 1 193 3 194 1 28 1 255 1 150 1 151 1 229 1 152 1 77 2 259 1 313 1 153 1 263 1 318 1 159 1 36 1 204 1 163 1 41 1 324 1 278 1 277 1 328 2 281 4 172 1 130 1 340 1 289 1 
245 5 5 2 6 3 62 1 296 1 297 2 137 5 299 1 219 2 301 2 65 3 105 4 307 1 72 1 193 3 194 1 28 1 255 1 150 1 151 1 229 1 152 1 77 2 259 1 313 1 153 1 263 1 318 1 159 1 36 1 204 1 163 1 41 1 324 1 278 1 277 1 328 2 281 4 172 1 130 1 340 1 289 1 
245 2 294 1 62 1 297 1 137 1 299 1 301 1 186 1 105 3 307 1 72 1 194 1 27 1 28 1 150 1 152 1 259 1 313 1 153 1 263 1 159 1 272 1 204 1 163 1 324 1 277 1 278 1 328 1 281 3 172 1 130 1 340 1 342 1 289 1 
1 1 57 1 2 1 59 2 7 1 180 3 64 2 66 1 19 1 191 1 144 1 149 1 201 1 261 1 116 1 89 2 206 6 165 3 46 1 283 1 285 2 52 1 286 1 211 1 212 1 
261 1 157 1 116 1 322 1 206 1 64 2 165 1 45 1 19 1 46 1 144 1 309 1 283 1 286 1 211 1 
292 1 59 1 214 1 246 1 62 2 217 1 61 1 180 1 300 1 12 1 251 1 64 2 253 1 19 1 28 1 231 1 261 1 319 1 157 1 116 1 33 1 269 1 236 1 88 1 38 1 273 1 206 2 323 1 165 1 278 2 46 1 48 1 335 1 286 1 209 1 211 1 210 1 175 1 
292 1 214 1 246 1 62 2 61 1 104 1 12 1 251 1 14 1 64 4 253 1 19 2 144 1 28 1 199 1 231 1 261 2 319 1 157 1 116 2 321 1 268 1 269 1 236 1 38 1 273 1 206 2 323 1 165 2 278 2 46 2 283 1 98 1 286 2 209 1 211 2 210 1 175 1 
292 8 214 7 246 1 248 1 62 1 61 1 180 1 184 1 139 1 64 4 188 1 253 1 305 1 19 2 197 1 149 1 28 1 231 3 261 2 155 2 116 2 83 1 269 2 236 2 273 2 206 2 323 8 165 1 44 1 278 1 46 2 335 1 170 1 94 1 286 2 51 1 210 1 211 2 175 2 
100 1 57 1 246 1 7 1 62 1 181 1 180 1 64 2 253 1 190 1 19 1 198 1 28 1 261 1 116 1 157 1 156 1 206 2 165 1 278 1 46 1 286 1 97 1 211 1 
100 1 57 1 261 1 116 1 180 2 206 2 64 2 141 1 19 1 46 1 144 1 283 1 149 1 286 1 211 1 
261 1 177 1 116 1 7 1 206 1 64 2 165 1 19 1 46 1 149 1 286 1 97 1 211 1 
100 1 57 1 261 1 116 1 156 1 180 2 206 2 64 2 19 1 46 1 144 1 283 1 149 1 286 1 211 1 
100 1 57 1 261 1 116 1 83 1 180 2 206 2 64 2 141 1 19 1 46 1 144 1 283 1 286 1 211 1 
261 1 177 1 116 1 7 1 83 1 206 1 64 2 165 1 19 1 46 1 286 1 97 1 211 1 
100 1 57 1 261 1 116 1 156 1 83 1 180 2 206 2 64 2 19 1 46 1 144 1 283 1 286 1 211 1 
100 1 57 1 261 1 19 1 156 1 116 1 46 1 144 1 180 2 283 1 286 1 206 2 64 2 211 1 
292 1 59 1 214 1 62 1 61 1 180 1 12 1 251 1 14 1 64 2 19 1 231 1 261 1 319 1 116 1 269 1 236 1 206 2 273 1 323 1 165 1 278 1 46 1 335 1 286 1 209 1 211 1 175 1 
213 1 56 1 292 1 59 1 214 1 62 1 61 1 180 1 251 1 64 2 19 1 231 1 261 1 319 1 116 1 269 1 236 1 206 2 273 1 323 1 165 1 43 1 278 1 46 1 335 1 286 1 211 1 175 1 
100 1 57 1 261 1 157 1 116 1 156 1 180 2 206 2 64 2 19 1 46 1 144 1 283 1 286 1 211 1 
100 1 57 1 292 1 214 1 62 1 180 2 12 1 251 1 14 1 64 2 305 1 19 1 144 1 231 1 261 1 319 1 116 1 156 1 269 1 236 1 206 2 273 1 323 1 278 1 46 1 283 1 98 1 286 1 209 1 211 1 
100 1 57 1 261 1 156 1 246 1 157 1 116 1 62 1 136 1 180 2 181 1 206 2 64 2 253 1 278 1 19 1 190 1 46 1 144 1 283 1 28 1 286 1 211 1 
134 1 166 1 19 1 116 1 46 1 143 1 64 2 211 1 288 1 341 1 
134 1 166 1 19 1 116 1 46 1 143 1 64 2 211 1 288 1 341 1 
134 1 166 1 19 1 116 1 46 1 143 1 64 2 211 1 288 1 341 1 
134 1 166 1 19 1 116 1 46 1 143 1 64 2 211 1 288 1 341 1 
134 1 166 1 19 1 116 1 46 1 143 1 64 2 211 1 288 1 341 1 
292 2 214 2 62 2 61 1 180 1 138 1 64 2 187 1 68 1 19 1 197 1 28 2 261 1 155 2 157 1 116 1 236 1 273 1 206 2 323 2 165 1 278 2 46 1 335 1 282 1 286 1 131 1 211 1 
154 2 292 2 214 2 81 1 160 1 247 1 236 1 139 1 273 1 323 2 275 1 122 1 305 1 18 1 306 1 22 1 280 1 208 1 53 1 
154 2 292 1 214 1 31 1 81 1 160 1 247 1 236 1 139 1 273 1 323 1 275 1 122 1 22 1 280 1 208 1 53 1 
292 1 214 1 247 1 269 1 236 1 184 1 273 1 323 1 306 1 173 1 50 1 51 1 231 1 175 1 
154 2 292 1 214 1 81 1 160 1 247 1 236 1 139 1 273 1 323 1 275 1 122 1 18 1 306 1 22 1 280 1 208 1 53 1 
332 1 
191 1 72 1 284 1 130 1 255 1 258 1 41 1 
294 1 5 1 137 1 219 1 301 1 105 1 72 1 194 1 255 1 151 1 77 1 259 1 153 1 41 2 324 1 281 1 130 1 
259 1 153 1 292 1 214 1 319 1 321 1 269 1 236 2 273 1 323 1 324 1 167 1 333 1 72 2 336 1 337 1 194 1 339 1 257 1 256 1 231 2 175 1 
100 2 0 1 291 1 57 2 294 4 7 2 219 2 304 1 72 4 194 1 259 1 153 1 80 1 156 2 41 2 324 1 45 1 207 1 128 1 171 3 96 3 130 4 95 1 97 2 
1 1 57 2 246 1 7 1 62 1 179 1 181 1 105 1 66 1 253 1 222 1 106 1 308 2 108 1 72 2 194 1 196 1 28 1 229 1 259 1 153 1 203 1 324 1 278 1 281 1 130 2 52 1 289 1 
259 1 153 1 41 1 324 1 72 1 194 1 284 1 130 1 255 1 258 1 
100 1 57 1 294 2 156 1 7 1 219 1 41 1 72 1 171 1 130 2 96 1 97 1 
281 1 137 1 255 1 301 1 41 1 105 1 
292 4 214 4 8 1 216 2 137 4 13 1 184 1 301 2 105 3 17 1 109 1 310 1 72 2 194 2 73 2 224 1 78 1 231 2 259 1 153 2 319 1 267 1 269 2 236 2 273 2 323 4 324 2 336 2 281 3 244 1 130 2 51 1 175 2 
292 1 59 1 214 1 246 2 61 1 62 3 181 2 12 1 14 1 251 1 64 2 253 2 19 1 106 1 28 2 231 1 261 1 116 1 319 1 269 1 236 1 206 1 273 1 323 1 165 1 278 3 46 1 124 1 286 1 209 1 211 1 175 1 
259 1 153 1 294 4 216 1 219 2 41 4 324 1 336 1 72 1 194 1 171 2 96 2 130 2 255 2 212 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
35 1 111 1 
265 1 202 1 
57 1 1 1 2 1 116 2 7 1 180 4 206 8 89 3 64 4 66 1 165 4 69 1 19 2 46 2 285 2 76 1 201 1 52 1 211 2 212 1 
1 1 57 1 2 1 7 1 180 3 89 2 206 6 66 1 165 3 191 1 285 2 201 1 52 1 212 1 
100 1 57 1 317 1 116 1 156 1 7 1 180 2 64 2 206 3 165 1 19 1 46 1 97 1 211 1 
100 2 57 2 316 1 156 2 7 2 180 6 206 10 89 2 165 4 304 1 45 2 92 1 128 2 97 2 76 2 
100 2 1 4 57 4 2 1 7 4 9 1 180 14 64 4 66 2 69 2 19 2 108 1 309 1 201 1 76 5 316 1 156 2 116 2 89 10 206 28 165 14 45 2 92 1 46 2 128 2 285 5 52 4 97 2 211 2 212 1 
165 1 45 1 206 1 
180 1 128 1 206 1 
100 1 57 1 156 1 7 1 321 1 180 3 206 5 89 1 165 2 76 1 97 1 
100 2 134 1 0 1 57 2 291 1 80 1 156 2 116 1 7 2 180 6 89 1 64 2 206 10 165 4 304 1 45 1 19 1 207 1 46 1 128 1 95 1 76 1 97 2 211 1 
57 1 1 1 7 1 180 3 206 6 89 2 66 1 165 3 285 1 52 1 76 1 
1 1 2 1 116 1 9 1 180 1 89 2 206 3 64 2 165 2 69 1 19 1 46 1 285 1 76 1 52 1 201 1 211 1 
134 1 1 2 57 2 116 1 7 2 180 5 64 2 89 5 206 10 66 1 165 5 19 1 46 1 108 1 285 3 52 2 76 2 211 1 
134 1 100 1 57 1 116 1 180 2 64 2 206 2 89 1 19 1 46 1 76 1 211 1 
134 1 100 1 57 1 116 1 156 1 7 1 180 2 89 1 64 2 206 3 165 1 19 1 46 1 97 1 76 1 211 1 
134 1 1 1 116 3 9 1 180 1 206 3 64 6 89 2 165 2 69 1 19 3 46 3 49 1 285 1 52 1 76 1 211 3 
134 1 100 4 1 3 57 6 2 1 7 6 9 1 180 20 64 10 66 2 69 2 304 1 19 5 201 1 76 7 316 1 317 1 116 5 156 4 233 1 161 1 206 37 89 11 165 17 45 4 329 1 92 1 46 5 49 1 128 4 285 4 52 3 97 4 211 5 212 1 
134 1 57 1 1 1 2 1 7 1 180 4 64 2 66 1 304 1 19 1 201 1 80 1 116 1 206 8 89 2 165 4 45 1 46 1 128 1 285 2 52 1 211 1 212 1 
134 1 100 1 1 1 57 2 2 1 7 1 180 6 64 4 66 1 304 1 19 2 201 1 76 1 80 1 316 1 116 2 317 1 156 1 206 11 89 3 165 5 45 2 46 2 128 1 285 2 52 1 211 2 212 1 
134 1 100 2 291 1 57 2 0 1 7 2 180 6 64 4 304 1 19 2 76 1 80 1 317 1 116 2 156 2 206 10 89 1 165 4 45 1 46 2 207 1 128 1 95 1 97 2 211 2 
134 1 100 2 1 1 291 1 57 3 0 1 2 1 7 2 180 10 64 6 66 1 69 1 304 1 19 3 201 1 76 2 80 1 317 1 116 3 156 2 206 16 89 4 165 6 45 1 46 3 207 1 128 1 285 2 95 1 52 1 97 1 211 3 212 1 
134 1 57 1 1 1 2 1 7 1 180 4 64 2 66 1 304 1 19 1 201 1 80 1 116 1 206 8 89 2 165 4 45 1 46 1 128 1 285 2 52 1 211 1 212 1 
100 2 134 1 0 1 57 2 291 1 80 1 156 2 116 1 7 2 180 6 89 1 64 2 206 10 165 4 304 1 45 1 19 1 207 1 46 1 128 1 95 1 76 1 97 2 211 1 
134 1 100 2 291 1 57 2 0 1 7 1 180 7 64 6 69 1 304 1 19 3 76 1 80 1 317 1 116 3 156 2 89 1 206 10 165 3 45 1 46 3 207 1 128 1 95 1 97 1 211 3 
134 1 100 2 291 1 57 2 0 1 7 1 180 7 64 6 69 1 304 1 19 3 76 2 80 1 116 3 156 2 89 2 206 10 165 3 45 1 46 3 207 1 49 1 128 1 95 1 97 1 211 3 
1 3 57 1 2 1 7 1 180 3 206 7 89 6 66 1 165 4 285 3 201 2 52 3 76 3 
134 1 100 2 291 1 57 2 0 1 7 1 180 7 64 6 69 1 304 1 19 3 76 1 80 1 116 3 156 2 89 1 206 10 165 3 45 1 46 3 207 1 49 1 128 1 95 1 97 1 211 3 
59 1 62 1 11 1 299 1 278 1 279 1 228 1 28 1 289 1 
59 1 320 1 62 1 32 1 11 1 299 1 63 1 121 1 278 1 279 1 226 1 228 1 28 1 289 1 
292 1 214 1 191 1 269 1 236 1 184 1 51 1 273 1 231 1 323 1 175 1 
292 1 59 1 214 1 319 1 246 1 62 2 269 1 236 1 12 1 251 1 273 1 323 1 253 1 278 2 28 1 210 1 231 1 175 1 
292 1 59 1 214 1 246 2 62 2 12 1 251 1 302 1 253 1 73 1 28 2 231 3 319 2 269 2 235 1 236 1 163 1 273 1 323 1 278 2 340 1 210 1 289 1 
213 1 292 2 59 1 214 2 246 2 62 2 251 1 302 1 253 1 73 1 28 2 231 3 319 2 269 2 235 1 237 1 236 1 163 1 273 1 323 2 278 2 340 1 210 1 289 1 
292 3 214 3 137 1 302 1 105 2 73 1 257 1 255 1 152 1 231 4 312 1 114 1 319 1 269 1 235 1 237 1 236 1 273 1 323 3 41 1 126 1 281 2 175 1 
312 1 292 3 214 3 319 1 137 1 235 1 269 1 237 1 236 1 302 1 140 1 273 1 41 1 105 2 323 3 281 2 73 1 255 1 257 1 152 1 175 1 231 4 
292 1 214 1 94 1 236 1 273 1 323 1 
292 1 214 1 319 1 333 1 93 1 269 1 236 1 273 1 78 1 231 1 323 1 175 1 
57 1 1 1 292 1 59 2 2 1 214 1 246 1 7 1 62 2 180 3 12 1 251 1 14 1 64 4 66 1 253 1 305 1 19 2 144 1 28 1 201 1 199 1 231 1 261 2 319 1 157 1 116 2 269 1 236 1 206 6 89 2 273 1 323 1 165 3 278 2 46 2 283 1 285 2 52 1 286 2 131 1 98 1 211 2 210 1 209 1 212 1 
57 2 292 1 1 1 214 1 246 1 7 2 62 1 179 1 181 1 66 1 105 1 253 1 222 1 106 1 108 1 308 2 72 4 194 1 196 1 28 1 255 1 258 1 259 1 260 1 153 1 203 1 41 1 323 1 324 1 278 1 281 1 337 1 244 1 284 1 130 4 52 1 289 1 175 1 
312 1 292 2 214 2 319 1 269 1 236 2 273 1 323 2 305 1 333 1 94 1 256 1 231 2 
292 4 214 4 60 1 269 1 237 1 236 1 184 1 273 1 323 4 305 1 51 1 175 1 231 1 
292 1 214 1 319 1 267 1 269 1 224 1 236 1 162 1 273 1 78 1 231 1 323 1 
154 1 292 1 214 1 160 1 236 1 208 1 273 1 53 1 323 1 175 1 
292 2 214 2 305 1 138 1 236 1 139 1 273 1 323 2 
292 5 214 4 60 1 248 1 269 2 184 1 236 2 273 2 323 5 305 1 44 1 73 1 170 1 51 1 175 1 231 3 
292 5 214 4 60 1 269 2 184 1 236 2 273 2 323 5 305 1 44 1 242 1 73 1 170 1 51 1 175 1 231 3 
292 1 213 1 59 1 214 1 319 1 246 1 62 2 269 1 236 1 251 1 273 1 323 1 253 1 278 2 28 1 210 1 231 1 175 1 
292 1 214 1 319 1 333 1 93 1 269 1 73 1 236 1 273 1 78 1 231 1 323 1 
314 1 59 1 21 1 39 1 133 1 
260 1 314 2 59 1 135 1 298 1 182 1 163 1 39 1 41 1 105 2 21 2 107 1 281 2 172 1 340 1 255 1 152 1 289 1 133 2 
68 1 278 1 21 1 62 1 282 1 28 1 39 1 187 1 133 1 
107 1 182 1 39 1 
191 1 117 1 220 1 250 1 
123 1 117 1 86 1 129 1 220 1 250 1 205 1 
315 1 86 1 29 1 
215 1 117 1 86 3 84 1 218 1 220 1 250 1 205 1 221 2 123 3 146 1 129 1 
262 1 123 2 117 1 169 1 86 2 129 1 220 1 250 1 205 1 
79 1 154 1 123 1 215 1 81 1 86 1 129 1 220 1 112 1 205 1 53 1 
123 1 215 1 86 1 129 1 220 1 250 1 205 1 
123 1 215 1 117 1 86 1 129 1 250 2 205 1 
3 1 123 2 215 1 178 1 24 1 86 2 129 2 220 1 250 1 205 2 
79 1 215 1 117 1 10 1 86 3 183 1 220 2 250 1 205 1 42 1 123 3 169 2 129 1 
154 2 215 1 81 1 117 1 160 1 86 2 220 1 250 1 205 1 122 1 123 2 169 1 225 1 129 1 53 1 
79 1 262 1 123 4 215 1 117 1 169 2 86 4 129 2 220 2 250 1 40 1 205 2 42 1 
123 1 215 1 117 1 86 1 129 1 220 1 250 1 205 1 
79 1 117 2 84 1 86 4 218 1 220 3 250 2 205 1 221 1 42 1 123 4 169 2 129 1 75 1 
215 1 117 1 86 2 220 1 250 1 303 1 205 1 164 1 123 2 25 1 169 1 129 1 
215 1 117 1 86 3 84 2 218 1 220 1 250 1 205 1 221 2 326 1 123 3 129 1 
176 1 295 1 266 2 220 2 
70 1 123 1 215 1 86 1 129 1 205 1 
123 2 215 1 117 1 10 1 169 1 86 2 129 1 220 1 250 1 205 1 
185 1 
123 1 215 1 117 1 86 1 129 1 220 1 250 1 205 1 
215 1 117 1 10 1 86 3 220 1 250 1 205 1 221 1 123 3 169 1 129 1 
79 1 220 1 75 1 42 1 
220 1 250 1 

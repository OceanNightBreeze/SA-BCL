#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (33,295) 87 (116,213) (116,213) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (33,295) 87 (116,213) (116,213) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (33,295) 87 (116,213) (116,213) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (33,295) 87 (116,213) (116,213) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (130,227) (130,227) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 324 294 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (238,342) (82,233) (82,233) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 347 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 240 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 240 109 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 24 225 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 48 127 0 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 48 127 0 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 198 48 127 205 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 48 127 0 221 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 48 127 0 221 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 198 48 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 22 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (238,342) (238,342) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 324 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 69 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (238,342) (82,233) (82,233) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (238,342) (82,233) (82,233) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (238,342) (82,233) (82,233) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 162 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 209 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 324 294 300 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 22 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 (292,308) 118 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 196 38 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (130,227) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 24 225 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 22 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (130,227) (130,227) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1449 | == -> >
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 1 116 1 319 1 73 1 250 1 87 1 213 1 295 1 105 1 316 1 200 1 
211 1 116 1 319 1 73 1 250 1 87 1 213 1 295 1 105 1 316 1 200 1 
211 1 116 1 319 1 73 1 250 1 87 1 213 1 295 1 105 1 316 1 200 1 
211 1 116 1 319 1 73 1 250 1 87 1 213 1 295 1 105 1 316 1 200 1 
245 1 186 1 319 4 307 1 143 2 105 1 351 1 73 1 40 3 250 4 54 1 152 2 68 1 234 3 184 1 315 1 200 1 124 1 
186 1 319 2 44 1 307 1 105 1 211 1 351 1 119 1 73 1 250 2 329 1 234 1 184 1 200 1 49 1 316 1 
319 3 143 1 33 1 105 1 351 1 73 2 40 1 250 3 234 2 184 1 315 1 200 2 316 1 
307 1 105 1 68 1 184 1 315 3 30 1 316 1 296 1 245 1 186 1 319 9 143 4 33 1 165 1 115 1 351 1 40 7 73 2 250 9 54 1 152 2 234 5 200 2 124 1 
307 1 105 1 68 1 184 1 315 3 30 1 316 1 296 1 245 1 186 1 319 9 143 4 33 1 165 1 115 1 351 1 40 7 73 2 250 9 54 1 152 2 234 5 200 2 124 1 
22 1 161 1 330 1 
110 1 161 1 198 2 
117 2 134 2 112 2 170 2 113 1 6 2 337 1 230 2 
281 1 332 1 218 1 177 1 6 2 337 1 338 1 84 1 340 1 132 1 66 2 224 1 134 3 183 1 345 1 264 1 346 1 247 1 112 2 246 1 113 1 34 1 193 2 230 2 117 2 301 2 197 1 75 1 74 1 42 1 168 1 151 2 170 3 55 1 279 1 302 1 100 2 
117 1 134 1 111 1 77 1 112 1 170 1 113 1 6 1 230 1 244 1 
140 1 112 1 164 1 81 1 231 1 291 1 290 1 134 1 77 1 170 1 242 1 161 1 207 1 330 1 
112 1 81 2 6 1 230 1 231 1 290 2 291 1 117 1 134 1 77 1 170 1 242 1 161 1 207 1 330 1 
47 1 290 1 156 1 81 1 137 1 
290 2 156 1 161 1 81 2 174 1 336 1 330 1 137 1 
290 1 156 1 81 1 
111 1 112 1 81 1 113 1 6 1 71 1 230 1 290 1 117 1 134 1 77 1 170 1 137 1 244 1 
161 1 
290 2 156 1 79 1 161 1 81 2 174 1 330 1 137 1 
156 2 176 2 227 1 81 5 144 1 349 1 159 1 130 1 290 5 169 1 123 2 135 1 161 1 174 1 344 2 330 1 137 2 12 1 243 1 
22 1 337 1 
112 2 6 1 230 1 337 2 117 1 134 2 170 2 253 1 331 1 
327 1 3 1 172 1 
281 1 322 1 346 1 193 1 337 1 338 1 301 1 197 1 74 1 134 1 42 1 168 1 170 1 279 1 183 1 100 1 
281 1 346 1 157 1 3 1 112 1 193 1 6 1 338 1 117 1 197 1 301 1 133 1 74 1 42 1 168 1 134 2 170 2 279 1 183 1 100 1 
157 2 112 5 287 1 348 1 164 1 6 4 230 1 337 1 67 1 117 4 133 1 134 5 170 5 253 1 
117 2 134 2 77 1 112 2 252 1 170 2 6 2 244 1 
117 3 157 1 134 3 112 3 170 3 6 3 230 1 337 1 
117 1 134 1 77 1 112 1 170 1 6 1 244 1 
117 1 134 1 77 1 112 1 170 1 253 1 331 1 6 1 230 1 
281 1 332 1 218 1 157 1 177 1 81 1 6 3 337 1 338 1 84 1 291 1 290 1 340 1 132 1 66 2 133 1 134 4 242 1 207 1 183 1 264 1 346 1 191 1 247 1 112 3 113 1 34 1 193 1 230 2 231 1 117 3 197 1 301 1 74 1 42 1 168 1 151 1 121 1 77 1 170 4 55 1 253 1 279 1 100 1 
117 1 157 1 134 2 112 2 287 1 170 2 164 1 6 1 337 1 
157 2 191 1 112 3 81 1 6 3 230 1 231 1 290 1 291 1 117 3 133 1 134 3 77 1 353 1 170 3 242 1 253 1 161 1 207 1 
327 1 117 2 157 1 3 1 134 2 112 2 170 2 253 1 6 2 230 1 
281 1 346 1 193 1 337 1 338 1 301 1 197 1 74 1 134 1 168 1 42 1 170 1 279 1 183 1 100 1 
346 1 193 1 337 1 338 1 312 1 301 1 261 1 197 1 134 1 168 1 42 1 170 1 279 1 183 1 100 1 
175 1 58 1 218 1 3 2 126 1 26 1 84 1 222 1 339 1 340 1 66 2 132 2 179 1 264 1 208 1 247 1 210 1 350 1 327 2 75 2 151 4 98 1 172 2 55 1 
117 1 134 1 77 1 112 1 242 1 170 1 252 1 6 1 
65 1 
65 1 
185 1 147 1 
185 1 147 1 
185 1 147 1 
65 1 
65 1 
185 1 65 2 147 1 
65 1 
65 1 
65 1 
65 1 
65 1 
282 1 125 1 324 1 112 1 14 1 81 1 6 1 194 1 290 1 167 1 72 1 65 1 8 1 117 1 313 1 249 1 294 1 134 1 170 1 
238 1 125 2 81 2 82 1 194 1 52 1 167 2 72 2 290 2 233 1 65 2 8 2 249 2 173 1 161 1 
186 1 307 1 68 1 
186 1 307 1 49 1 
186 3 343 1 68 2 226 1 160 1 49 1 
305 1 186 2 343 1 68 1 226 1 49 1 
186 2 343 1 68 1 226 2 49 1 
266 1 156 1 176 1 268 1 81 4 290 4 260 1 240 1 123 1 161 1 174 1 344 1 330 1 181 1 137 3 12 1 138 1 243 1 
290 1 195 1 347 1 81 1 137 1 258 1 
266 1 176 1 268 1 81 2 349 1 290 2 260 1 240 1 123 1 344 1 137 1 12 1 
266 1 176 1 268 1 81 1 349 1 290 1 260 1 240 1 123 1 344 1 12 1 109 1 
42 1 22 1 11 1 
42 1 83 1 
18 1 
42 1 168 1 279 1 
42 1 256 1 
42 1 168 1 
42 3 168 1 279 1 11 2 311 1 20 1 
236 2 154 1 104 1 175 3 103 1 203 1 23 2 64 1 26 3 222 4 132 6 179 3 136 1 163 2 265 1 270 1 75 7 151 13 
236 2 154 1 104 1 175 3 103 1 203 1 23 2 64 1 26 3 222 6 132 6 179 3 136 1 163 2 265 3 270 1 75 7 151 13 
236 2 154 1 104 1 175 3 103 1 203 1 23 2 64 1 26 3 222 4 132 6 179 3 136 1 317 1 163 2 265 1 270 1 75 7 151 13 
90 2 265 1 154 1 175 1 104 1 58 1 203 2 80 1 21 1 126 1 26 1 106 1 222 2 272 1 196 1 132 4 75 4 179 1 151 8 304 1 
236 2 154 1 103 1 175 3 104 1 203 1 23 2 26 4 222 6 340 2 66 4 132 7 179 3 28 1 136 1 264 2 163 2 265 2 247 2 270 1 53 1 149 1 75 8 151 15 55 2 
307 1 105 1 338 1 68 1 9 1 160 1 184 1 316 1 49 1 318 1 186 2 319 2 141 1 323 1 32 1 193 1 70 1 36 1 328 1 273 1 351 1 301 1 197 1 40 1 73 1 250 2 278 1 234 1 100 1 200 1 
307 1 259 1 338 1 68 1 160 1 9 1 184 1 316 1 49 1 318 1 186 2 319 3 141 1 323 1 32 1 228 1 193 1 70 1 166 1 328 1 351 1 301 1 197 1 73 1 40 2 250 3 278 1 234 1 100 1 200 1 
186 2 318 1 319 2 141 1 307 1 32 1 228 1 193 1 70 1 259 1 338 1 351 1 197 1 301 1 40 2 250 2 68 1 160 1 9 1 278 1 234 1 184 1 49 1 100 1 316 1 
285 1 338 1 9 2 183 1 316 2 319 1 92 1 31 1 32 2 193 1 166 1 301 1 148 1 197 1 150 1 73 1 250 1 168 1 42 1 278 2 214 1 100 1 200 1 
186 2 318 1 319 1 141 1 323 1 307 1 32 1 228 1 193 1 70 1 105 1 338 1 36 1 328 1 197 1 301 1 73 1 250 1 68 1 160 1 9 1 278 1 49 1 316 1 200 1 100 1 
129 1 
176 1 81 1 24 1 193 1 290 1 260 1 301 1 225 1 123 1 344 1 183 1 12 1 243 1 100 1 
283 1 156 1 81 2 290 2 291 1 134 1 108 1 242 1 207 1 182 1 140 1 112 1 325 1 164 1 145 1 96 2 231 1 77 1 170 1 99 1 
283 1 140 1 156 1 79 1 45 1 112 1 325 1 81 3 164 1 145 1 96 3 231 1 290 3 291 1 134 1 77 1 242 1 108 1 170 1 161 1 99 1 174 1 207 1 330 1 
283 1 156 2 45 1 79 1 81 3 291 1 290 3 134 1 108 1 242 1 207 1 182 1 140 1 112 1 325 1 164 1 145 1 96 3 231 1 120 1 77 1 170 1 99 1 174 1 
283 1 156 2 45 1 79 1 81 3 6 1 290 3 291 1 262 1 134 2 108 1 242 1 161 1 207 1 182 1 244 1 140 1 111 1 112 2 325 1 164 1 113 1 145 1 230 1 71 1 96 3 231 1 117 1 120 1 77 2 170 2 99 1 174 1 330 1 
283 1 176 1 306 1 81 2 48 1 290 2 291 1 134 1 108 1 242 1 344 1 207 1 12 1 243 1 140 1 112 1 325 1 164 1 145 1 96 2 231 1 169 1 77 1 123 1 170 1 78 1 99 1 199 1 216 1 
283 1 0 1 306 1 176 1 81 2 127 1 48 1 291 1 290 2 134 1 108 1 242 1 344 1 207 1 12 1 243 1 140 1 112 1 325 1 94 1 164 1 145 1 96 2 231 1 169 1 77 1 170 1 123 1 78 1 99 1 199 1 216 1 
283 1 0 1 306 1 176 1 81 2 127 1 48 1 291 1 290 2 134 1 108 1 242 1 344 1 207 1 12 1 243 1 140 1 112 1 325 1 94 1 164 1 145 1 96 2 231 1 169 1 77 1 170 1 123 1 78 1 99 1 199 1 216 1 
283 1 57 1 176 1 62 1 81 2 127 1 205 1 48 1 291 1 290 2 134 1 108 1 242 1 344 1 207 1 12 1 243 1 140 1 112 1 325 1 164 1 145 1 96 2 231 1 37 1 169 1 77 1 170 1 123 1 78 1 99 1 198 1 199 1 
283 1 0 1 156 1 306 1 176 1 45 1 81 2 127 1 221 1 48 1 291 1 290 2 134 1 108 1 242 1 344 1 207 1 182 1 12 1 243 1 140 1 112 1 94 1 325 1 164 1 145 1 96 3 231 1 120 1 169 1 77 1 123 1 170 1 78 1 99 1 199 1 216 1 
283 1 0 1 156 1 306 1 176 1 45 1 81 2 127 1 221 1 48 1 291 1 290 2 134 1 108 1 242 1 344 1 207 1 182 1 12 1 243 1 140 1 112 1 94 1 325 1 164 1 145 1 96 3 231 1 120 1 169 1 77 1 123 1 170 1 78 1 99 1 199 1 216 1 
283 1 176 1 81 2 62 1 48 1 290 2 291 1 134 1 108 1 242 1 344 1 207 1 12 1 243 1 140 1 112 1 325 1 164 1 145 1 96 2 231 1 37 1 169 1 77 1 123 1 170 1 78 1 99 1 198 1 199 1 
236 1 163 1 175 1 218 1 247 1 22 1 23 1 337 1 270 1 26 1 222 1 84 1 340 1 132 2 66 2 75 2 179 1 151 4 98 1 55 1 136 1 264 1 
332 1 284 1 217 1 175 2 218 1 58 1 3 11 80 1 21 3 335 1 126 2 337 1 26 1 106 2 222 2 84 2 340 2 132 6 66 4 179 1 345 1 264 2 90 3 265 1 247 2 114 1 327 4 196 1 75 8 151 14 171 1 172 11 55 2 
281 1 332 1 218 1 157 1 335 1 204 1 6 1 337 1 338 1 289 1 84 1 340 1 66 2 132 1 133 1 134 2 88 1 183 1 264 1 345 1 346 1 322 1 247 1 112 1 193 1 327 1 117 1 197 1 301 1 74 1 75 1 42 1 168 1 151 2 170 2 55 1 279 1 100 1 
175 5 218 3 3 6 177 2 126 2 6 1 222 6 84 3 132 13 133 1 134 3 179 5 136 1 183 1 264 3 50 2 265 1 269 1 193 1 270 1 327 6 197 2 151 26 55 3 279 2 100 1 281 2 236 2 332 1 103 1 157 1 59 2 58 2 335 1 23 2 337 2 106 2 26 5 338 2 340 3 66 6 292 2 29 1 345 1 163 2 346 2 112 1 247 3 35 1 117 1 301 1 74 2 75 13 168 2 42 2 77 1 122 2 170 3 172 6 
43 1 218 2 128 1 6 1 46 1 84 2 132 1 224 2 134 1 183 2 264 2 188 1 190 1 142 1 95 1 228 1 193 7 326 1 148 1 197 3 151 2 276 1 98 1 55 2 56 1 279 1 100 6 332 1 157 1 25 1 338 4 340 2 66 4 345 1 247 2 112 1 117 1 301 7 75 1 168 3 42 4 170 1 214 1 
175 1 218 1 58 1 3 1 335 1 126 1 6 1 26 1 106 1 222 1 84 1 340 1 66 2 132 2 134 1 179 1 264 1 247 1 112 1 230 1 327 1 117 1 75 1 151 3 172 1 170 1 253 1 55 1 277 1 
265 1 175 1 218 1 3 1 247 1 126 1 327 1 222 1 84 1 339 1 340 1 66 2 75 2 151 2 172 1 98 1 55 1 264 1 
218 1 58 1 3 1 247 1 210 1 26 1 327 1 222 1 84 1 340 1 66 2 132 2 151 2 179 1 172 1 98 1 55 1 264 1 
175 1 218 1 58 1 3 2 126 1 106 1 26 1 84 1 222 2 340 1 66 2 132 2 179 1 264 1 265 1 247 1 327 2 75 2 151 4 98 1 172 2 55 1 
188 1 265 1 175 1 218 1 3 1 247 1 126 1 327 1 222 1 84 1 339 1 340 1 66 2 75 2 151 2 172 1 55 1 264 1 
188 1 218 1 58 1 3 1 247 1 210 1 26 1 327 1 222 1 84 1 340 1 66 2 132 2 151 2 179 1 172 1 55 1 264 1 
175 1 218 1 58 1 3 2 126 1 106 1 26 1 84 1 222 2 340 1 66 2 132 2 179 1 264 1 188 1 265 1 247 1 327 2 75 2 151 4 172 2 55 1 
175 1 218 1 58 1 3 2 126 1 106 1 26 1 84 1 222 2 340 1 66 2 132 2 179 1 264 1 265 1 247 1 327 2 75 2 151 4 172 2 55 1 
281 1 332 1 218 1 177 1 337 1 338 1 84 1 340 1 66 2 132 1 134 1 183 1 345 1 264 1 346 1 247 1 193 1 197 1 301 1 75 1 74 1 168 1 42 1 151 2 170 1 55 1 279 1 100 1 
332 1 218 1 61 1 337 1 338 1 84 1 340 1 312 1 66 2 132 1 261 1 134 1 183 1 345 1 264 1 346 1 247 1 193 1 197 1 301 1 75 1 168 1 42 1 151 2 170 1 55 1 279 1 100 1 
175 1 218 1 58 1 3 2 126 1 335 1 106 1 26 1 84 1 222 2 340 1 66 2 132 2 179 1 264 1 265 1 247 1 327 2 75 2 151 4 172 2 55 1 
281 1 175 1 58 1 59 1 218 1 3 2 177 1 126 1 26 1 106 1 338 1 222 2 84 1 340 1 132 2 66 2 134 1 179 1 264 1 265 1 346 1 247 1 193 1 327 2 273 1 197 1 301 1 75 2 74 1 168 1 42 1 151 4 172 2 170 1 55 1 279 1 100 1 
175 1 58 1 218 1 3 1 335 1 4 1 126 1 6 1 106 1 222 1 84 1 340 1 132 1 66 2 134 1 179 1 264 1 265 1 247 1 112 1 230 1 327 1 117 1 75 2 151 3 170 1 172 1 253 1 55 1 
175 2 58 2 80 1 21 1 126 2 288 1 26 2 106 2 222 3 340 2 66 4 132 7 293 1 27 1 179 2 264 2 90 2 265 1 247 2 192 1 297 1 146 1 53 1 196 1 212 1 39 1 75 6 151 13 55 2 
175 3 202 1 58 2 60 1 21 2 126 3 26 1 106 3 222 2 340 2 132 10 66 4 293 1 27 1 28 1 179 2 264 2 90 2 265 1 320 1 247 2 297 3 298 1 97 1 146 2 38 1 53 1 212 2 39 1 196 2 75 13 41 1 151 23 55 2 
175 2 58 2 60 1 80 1 21 1 126 2 288 1 26 1 106 2 222 2 340 2 66 4 132 7 293 1 27 1 179 2 264 2 90 2 265 1 247 2 297 1 146 1 53 1 196 1 212 1 39 1 75 6 151 13 55 2 
175 2 58 2 60 1 80 1 21 1 126 2 288 1 26 1 106 2 222 2 340 2 66 4 132 7 293 1 27 1 179 2 264 2 90 2 265 1 247 2 297 1 146 1 53 1 196 1 212 1 39 1 75 6 151 13 55 2 
236 1 175 8 202 1 58 7 60 1 80 2 21 4 126 7 23 1 26 6 106 7 222 14 340 2 66 4 132 24 293 1 27 1 28 1 179 8 136 1 264 2 163 1 90 4 265 8 320 1 247 2 297 3 270 1 298 1 114 2 97 1 146 1 38 1 53 1 196 2 212 1 39 1 41 1 75 25 151 49 55 2 
72 1 167 1 65 1 342 1 249 1 238 1 125 1 
324 1 
72 1 167 1 65 1 249 1 125 1 69 1 
162 1 
209 1 
238 1 125 1 81 1 82 1 194 1 52 1 290 1 167 1 72 1 233 1 65 1 8 2 249 1 173 1 161 1 
238 1 125 1 81 1 82 1 194 1 52 1 290 1 167 1 72 1 233 1 65 1 8 2 249 1 173 1 161 1 
238 1 125 1 81 1 82 1 194 1 52 1 290 1 167 1 72 1 233 1 65 1 8 2 249 1 173 1 161 1 
162 1 
162 1 
209 1 
209 1 
274 1 241 1 
282 1 125 1 324 1 14 1 81 1 52 1 167 1 72 1 290 1 300 1 65 1 8 1 313 1 249 1 294 1 173 1 137 1 
332 1 155 1 218 1 158 1 335 1 338 1 84 1 340 1 66 2 132 1 224 2 134 2 264 1 345 1 190 1 112 2 247 1 95 1 193 2 299 1 197 1 301 2 75 1 42 1 168 1 151 2 170 2 55 1 215 1 280 1 100 2 
186 2 318 1 307 1 228 1 193 2 178 1 70 1 338 1 328 1 273 1 197 1 301 2 86 1 68 1 160 1 278 1 255 1 49 1 100 2 
186 2 318 1 307 1 228 1 193 1 178 1 70 1 338 1 328 1 301 1 197 1 206 1 68 1 160 1 278 1 49 1 100 1 
285 1 193 1 229 1 338 1 197 1 301 1 148 1 86 1 42 1 168 1 278 1 214 1 183 1 100 1 
186 2 318 1 307 1 228 1 193 1 178 1 70 1 338 1 328 1 301 1 197 1 86 1 68 1 160 1 278 1 255 1 49 1 100 1 
239 1 
227 1 169 1 22 1 161 1 330 1 130 1 12 1 
306 1 176 1 169 1 123 1 344 1 216 1 12 1 243 1 
235 1 176 1 308 1 193 1 17 1 311 1 83 1 338 2 260 1 197 1 301 1 118 1 42 2 168 1 123 1 344 1 279 1 183 1 12 1 243 1 100 1 
38 1 90 1 196 1 176 1 169 1 21 1 123 1 344 1 12 1 243 1 
236 1 163 1 175 2 103 1 176 1 286 2 94 1 81 1 23 1 290 1 76 1 179 1 169 2 123 1 344 1 12 1 243 1 
176 1 169 1 123 1 161 1 344 1 330 1 130 1 12 1 243 1 
110 1 175 1 58 1 219 1 126 1 220 1 106 1 169 2 179 1 161 1 198 2 12 1 
290 1 156 1 161 1 81 1 174 1 330 1 
91 1 176 1 24 1 193 1 260 1 301 1 225 1 123 1 344 1 183 1 12 1 100 1 243 1 
281 1 332 1 218 1 177 1 6 2 337 1 338 1 84 1 340 1 132 1 66 2 134 3 183 1 264 1 346 1 247 1 112 2 113 1 193 1 34 1 230 2 117 2 301 1 197 1 74 1 168 1 42 1 151 1 170 3 55 1 279 1 100 1 
176 1 6 1 260 1 134 1 161 1 344 1 12 1 243 1 244 1 111 1 112 1 113 1 71 1 230 1 117 1 77 1 123 1 170 1 330 1 
72 1 249 1 334 1 
72 1 249 1 241 1 
72 1 249 1 334 1 
72 1 249 1 334 1 
72 1 249 1 2 1 
72 1 249 1 2 1 
72 1 249 1 2 1 
72 1 249 1 
65 1 
236 2 175 3 103 1 23 2 26 3 222 6 340 2 66 4 132 8 28 1 179 3 136 1 264 2 163 2 265 3 247 2 270 1 75 8 151 16 55 2 
236 1 222 1 163 1 132 2 175 1 75 2 179 1 151 4 22 1 23 1 136 1 270 1 26 1 
265 1 175 1 58 1 247 1 126 1 26 1 106 1 222 2 340 1 132 2 66 2 75 2 179 1 251 1 151 4 55 1 264 1 
90 2 265 1 175 1 58 1 80 1 21 1 126 1 26 1 106 1 222 2 196 1 132 4 75 3 179 1 151 7 
236 2 217 1 103 1 175 5 58 2 80 1 21 2 126 2 23 2 106 2 26 4 222 6 340 1 132 12 66 2 179 5 28 1 136 1 264 1 163 2 90 2 265 2 247 1 270 1 114 1 75 12 151 24 55 1 
90 1 132 1 151 1 
75 1 151 1 21 1 
50 1 265 1 175 1 58 1 247 1 126 1 106 1 26 2 222 3 340 1 66 2 132 3 75 3 251 1 151 6 179 1 55 1 264 1 
90 1 265 1 175 2 320 1 58 2 247 1 21 1 126 2 298 1 26 1 106 2 97 1 222 2 38 1 53 1 340 1 66 2 196 1 132 6 41 1 75 6 179 2 151 12 55 1 264 1 
236 1 163 1 265 1 175 1 23 1 26 1 222 2 132 3 75 3 151 6 179 1 
163 1 265 1 247 1 23 1 5 1 270 1 26 1 222 2 340 1 132 2 66 2 75 1 151 3 28 1 55 1 136 1 264 1 
236 1 163 2 265 2 103 1 175 2 247 1 23 2 26 3 222 5 340 1 53 1 66 2 132 5 75 5 151 10 179 2 55 1 264 1 
265 1 175 1 247 1 126 1 222 1 53 1 340 1 66 2 75 2 151 2 55 1 264 1 
265 1 175 1 58 1 247 1 126 1 26 1 106 1 222 2 53 1 340 1 132 2 66 2 75 2 179 1 151 4 55 1 264 1 
163 1 265 1 247 3 5 1 23 1 288 1 26 1 222 2 53 1 340 3 132 2 66 6 75 1 28 1 151 3 55 3 264 3 
236 1 175 2 103 1 21 1 23 1 288 1 26 2 222 4 340 3 132 6 66 6 179 2 136 1 264 3 90 1 163 1 265 2 247 3 270 1 272 1 53 1 196 1 75 6 251 1 151 12 55 3 
236 2 103 1 175 3 21 1 23 2 26 3 222 4 340 1 132 7 66 2 179 3 136 1 264 1 90 1 163 2 265 1 247 1 270 1 38 1 53 1 196 1 75 7 151 14 55 1 
236 2 103 1 175 4 80 1 21 1 126 1 23 2 26 3 106 1 222 5 340 2 132 8 66 4 179 3 136 1 264 2 163 2 90 2 265 2 247 2 270 1 38 1 53 1 196 1 75 9 151 17 251 1 55 2 
175 2 58 2 21 1 126 2 106 2 26 1 222 2 340 2 132 6 66 4 179 2 264 2 90 1 265 1 320 1 247 2 298 1 97 1 38 1 53 1 196 1 75 6 41 1 251 1 151 12 55 2 
236 2 103 1 175 5 58 1 21 1 126 2 23 2 26 3 106 2 222 7 340 3 132 10 66 6 28 1 179 4 136 1 264 3 163 2 90 1 265 4 320 1 247 3 270 1 298 1 97 1 38 1 53 1 196 1 75 13 41 1 251 1 151 23 55 3 
236 2 103 1 175 3 21 1 23 2 26 3 222 4 340 1 132 7 66 2 179 3 136 1 264 1 90 1 163 2 265 1 247 1 270 1 38 1 53 1 196 1 75 7 151 14 55 1 
90 1 265 1 175 2 320 1 58 2 247 1 21 1 126 2 298 1 106 2 97 1 222 1 38 1 53 1 340 1 66 2 196 1 132 6 41 1 75 6 179 2 151 12 55 1 264 1 
175 2 58 1 21 1 126 2 106 2 26 1 222 2 340 3 132 4 66 6 28 1 179 1 264 3 90 1 265 1 320 1 247 3 298 1 97 1 38 1 53 1 196 1 75 7 41 1 151 11 251 1 55 3 
175 3 58 2 21 1 126 3 288 1 106 3 26 3 222 6 340 4 132 7 66 8 179 2 28 2 264 4 90 1 265 3 320 1 247 4 298 1 97 1 38 1 53 1 196 1 75 9 41 1 151 16 55 4 
236 1 163 3 265 3 175 1 23 3 270 2 26 3 222 6 132 4 75 3 179 1 151 7 136 1 
236 2 103 1 175 5 58 1 21 1 126 2 23 2 288 1 106 2 26 5 222 7 340 4 132 11 66 8 179 4 28 2 136 1 264 4 163 2 90 1 265 2 320 1 247 4 270 1 298 1 97 1 38 1 53 1 196 1 75 13 41 1 151 24 55 4 
89 1 134 1 112 1 170 1 287 1 164 1 337 1 
89 1 102 1 321 1 112 1 287 1 164 1 337 1 131 1 134 1 275 1 170 1 254 1 
338 1 197 1 148 1 301 1 42 1 168 1 22 1 214 1 193 1 183 1 100 1 
281 1 346 1 157 1 112 1 193 1 6 1 337 1 338 1 117 1 301 1 197 1 42 1 168 1 134 2 170 2 279 1 183 1 100 1 
281 1 157 1 6 2 337 1 338 1 134 2 242 1 207 1 346 1 112 2 193 1 248 1 117 1 197 1 301 1 168 2 42 3 77 1 170 2 279 2 256 1 100 1 101 1 
157 1 6 2 337 1 338 1 312 1 134 2 242 1 207 1 346 1 112 2 193 2 271 1 248 1 117 1 197 1 301 2 168 2 42 3 77 1 170 2 279 2 256 1 100 2 101 1 
156 1 81 2 63 1 6 1 83 1 338 1 290 2 341 1 134 1 161 1 183 1 11 1 244 1 111 1 112 1 113 1 193 2 230 1 71 1 231 1 248 1 117 1 197 1 301 2 42 4 168 1 77 1 170 1 279 1 330 1 256 1 100 2 101 1 
156 1 93 1 81 2 193 3 271 1 231 1 83 1 338 1 248 1 290 2 301 3 197 1 168 1 42 4 161 1 330 1 279 1 183 1 256 1 11 1 101 1 100 3 
338 1 197 1 301 1 193 1 128 1 100 1 
43 1 128 1 311 1 46 1 338 3 224 1 183 2 190 1 228 1 326 1 193 6 197 2 301 6 42 3 168 2 276 1 279 1 303 1 56 1 100 5 
175 3 218 2 177 1 6 1 84 2 222 4 132 6 134 2 179 3 136 1 264 2 265 1 193 1 270 1 273 1 197 1 151 12 55 2 279 1 100 1 280 1 281 1 236 2 103 1 59 1 157 1 335 1 23 2 337 2 26 3 338 1 340 2 292 1 66 4 29 1 163 2 346 1 112 1 247 2 117 1 301 1 74 1 75 6 168 1 42 1 77 1 170 2 
235 1 156 2 176 2 308 1 81 3 130 1 83 1 290 3 161 1 344 2 183 1 11 1 137 1 12 1 243 2 91 1 227 1 93 1 193 1 231 1 232 1 301 1 42 2 169 1 123 2 174 1 330 1 100 1 
193 2 128 1 17 1 311 1 338 2 273 1 301 2 197 1 168 1 42 2 279 1 11 1 100 2 
51 1 193 4 271 1 338 1 273 1 301 4 148 1 197 1 168 1 42 1 214 1 183 1 100 4 
142 1 193 2 326 1 25 1 338 2 301 2 197 1 168 1 42 1 276 1 279 1 101 1 13 1 100 2 
338 1 186 1 197 1 301 1 307 1 193 1 183 1 70 1 49 1 100 1 
338 1 273 1 197 1 301 2 190 1 42 1 168 1 228 1 193 2 215 1 100 2 
43 1 51 1 190 1 193 5 338 2 273 1 148 1 301 5 197 2 168 2 42 3 214 1 56 1 183 1 101 1 100 4 
51 1 190 1 333 1 193 5 338 2 273 1 148 1 301 5 197 2 168 2 42 3 214 1 56 1 183 1 101 1 100 4 
346 1 157 1 112 1 193 1 6 1 337 1 338 1 117 1 312 1 301 1 197 1 42 1 168 1 134 2 170 2 279 1 183 1 100 1 
193 1 326 1 311 1 338 2 301 1 197 1 168 1 42 1 276 1 303 1 279 1 101 1 100 1 
85 1 309 1 153 1 263 1 337 1 
139 1 267 1 191 1 309 2 81 2 337 1 231 1 290 2 291 1 19 1 85 2 77 1 242 1 161 1 153 1 207 1 263 2 330 1 137 1 
155 1 112 1 158 1 299 1 85 1 134 1 170 1 153 1 263 1 
139 1 19 1 153 1 
351 1 22 1 234 1 184 1 
351 1 319 1 73 1 250 1 234 1 184 1 200 1 
319 1 32 1 316 1 
319 3 189 1 44 2 15 1 7 1 105 1 351 1 73 1 250 3 234 1 184 1 200 1 
351 1 319 2 40 1 73 1 250 2 152 1 234 1 184 1 200 1 
186 1 319 1 307 1 143 1 105 1 73 1 250 1 68 1 234 1 200 1 124 1 
351 1 319 1 73 1 250 1 234 1 105 1 200 1 
351 2 319 1 73 1 250 1 184 1 105 1 200 1 
187 1 319 2 16 1 105 1 223 1 351 1 73 2 250 2 234 1 200 2 
319 3 143 1 105 1 115 1 351 1 73 1 40 2 250 3 234 2 184 1 30 1 315 1 200 1 
186 2 1 1 319 2 307 1 105 1 351 1 73 1 40 1 250 2 68 1 160 1 234 1 184 1 49 1 200 1 
319 4 143 1 105 1 351 1 73 2 40 2 250 4 54 1 152 1 234 2 184 1 315 1 200 2 
351 1 319 1 73 1 250 1 234 1 184 1 105 1 200 1 
319 4 44 1 189 1 143 1 15 1 351 2 40 2 73 1 250 4 234 3 10 1 184 2 315 1 200 1 
319 2 165 1 105 1 351 1 73 1 314 1 352 1 40 1 250 2 234 1 184 1 200 1 
351 1 319 3 44 2 189 2 73 1 250 3 15 1 234 1 310 1 184 1 105 1 200 1 
201 2 237 1 180 1 234 2 
319 1 73 1 250 1 105 1 107 1 200 1 
351 1 319 2 40 1 73 1 250 2 234 1 184 1 105 1 115 1 200 1 
257 1 
351 1 319 1 73 1 250 1 234 1 184 1 105 1 200 1 
319 3 44 1 105 1 115 1 351 1 40 1 73 1 250 3 234 1 184 1 200 1 
143 1 234 1 10 1 315 1 
351 1 234 1 

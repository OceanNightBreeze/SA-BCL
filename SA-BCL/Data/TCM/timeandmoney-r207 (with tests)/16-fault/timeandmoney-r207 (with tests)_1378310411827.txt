#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (150,151) 179 (131,309) (131,309) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (150,151) 179 (131,309) (131,309) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (150,151) 179 (131,309) (131,309) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (150,151) 179 (131,309) (131,309) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 271 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 83 315 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 194 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 797 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 1 131 1 177 1 99 1 309 1 102 1 192 1 4 1 179 1 284 1 285 1 
151 1 131 1 177 1 99 1 309 1 102 1 192 1 4 1 179 1 284 1 285 1 
151 1 131 1 177 1 99 1 309 1 102 1 192 1 4 1 179 1 284 1 285 1 
151 1 131 1 177 1 99 1 309 1 102 1 192 1 4 1 179 1 284 1 285 1 
69 2 108 1 242 1 4 1 284 4 149 1 313 1 285 1 303 1 304 3 291 2 155 1 192 1 102 4 158 2 46 1 
177 1 69 1 242 1 108 1 27 1 4 1 65 1 274 1 284 2 285 1 99 1 192 1 102 2 100 1 11 1 327 1 
69 2 27 1 4 2 274 1 284 3 285 2 313 1 150 1 304 1 99 1 192 1 102 3 158 1 
69 4 341 1 108 1 242 1 4 2 284 9 301 1 149 1 303 1 285 2 313 3 304 7 150 1 306 1 291 2 99 1 153 1 155 1 192 1 102 9 158 4 46 1 
69 4 341 1 108 1 242 1 4 2 284 9 301 1 149 1 303 1 285 2 313 3 304 7 150 1 306 1 291 2 99 1 153 1 155 1 192 1 102 9 158 4 46 1 
58 1 194 1 222 1 
246 1 186 2 58 1 
160 2 34 2 212 1 205 2 20 2 91 1 141 2 5 2 
197 1 143 1 239 1 91 1 180 1 5 3 226 1 181 1 307 1 347 1 348 2 204 1 349 1 229 1 205 2 206 2 248 1 159 1 13 2 160 3 34 2 212 1 96 1 118 1 280 2 20 2 73 1 358 1 329 1 258 2 123 1 218 1 138 1 262 1 362 1 238 1 141 2 
160 1 34 1 288 1 161 1 212 1 47 1 205 1 20 1 141 1 5 1 
160 1 85 1 35 1 297 1 19 1 5 1 288 1 203 1 58 1 9 1 208 1 141 1 222 1 185 1 
160 1 85 1 34 1 35 1 297 2 19 1 20 1 5 1 288 1 203 2 58 1 205 1 208 1 141 1 222 1 
203 1 297 1 41 1 119 1 250 1 
50 1 203 2 297 2 58 1 119 1 101 1 222 1 250 1 
203 1 297 1 119 1 
160 1 34 1 161 1 297 1 17 1 212 1 47 1 20 1 5 1 288 1 203 1 205 1 141 1 250 1 
58 1 
50 1 203 2 297 2 58 1 26 1 119 1 222 1 250 1 
104 1 297 5 47 1 48 1 5 1 111 1 203 5 205 1 249 2 250 2 160 1 50 1 34 1 115 2 161 1 212 1 17 1 38 4 119 2 20 1 283 1 233 2 121 1 122 1 287 1 288 1 293 1 58 1 331 1 266 1 125 1 141 1 222 1 295 4 196 1 84 1 
136 1 16 1 44 1 
160 2 96 1 239 1 280 1 20 1 135 1 5 2 258 1 123 1 226 1 262 1 138 1 362 1 229 1 205 1 238 1 141 1 44 1 13 1 279 1 
91 1 194 1 
160 2 34 1 199 1 148 1 20 1 91 2 5 2 205 1 141 2 
160 1 96 1 239 1 280 1 281 1 91 1 5 1 258 1 123 1 226 1 138 1 262 1 362 1 229 1 238 1 13 1 
160 5 34 1 224 1 20 4 148 1 91 1 135 1 5 5 94 1 9 1 205 4 352 1 141 5 279 2 
160 2 288 1 36 1 47 1 205 2 20 2 141 2 5 2 
160 3 34 1 205 3 20 3 91 1 141 3 5 3 279 1 
160 1 288 1 47 1 205 1 20 1 141 1 5 1 
160 1 34 1 288 1 199 1 205 1 20 1 148 1 141 1 5 1 
85 1 197 1 143 1 297 1 239 1 148 1 91 1 180 1 5 4 226 1 49 1 307 1 203 1 348 2 204 1 349 1 229 1 205 3 206 1 208 1 248 1 159 1 13 1 279 1 160 4 34 2 35 1 212 1 96 1 19 1 280 1 20 3 73 1 358 1 135 1 258 1 123 1 288 1 262 1 138 1 362 1 238 1 364 1 141 3 
94 1 160 2 9 1 205 1 20 1 91 1 141 2 5 2 279 1 
160 3 85 1 34 1 35 1 297 1 19 1 148 1 20 3 299 1 135 1 5 3 49 1 203 1 288 1 58 1 205 3 208 1 141 3 279 2 
160 2 34 1 148 1 20 2 5 2 136 1 205 2 141 2 44 1 279 1 
160 1 96 1 239 1 280 1 91 1 5 1 258 1 123 1 226 1 138 1 262 1 362 1 229 1 238 1 13 1 
160 1 213 1 116 1 96 1 239 1 280 1 91 1 5 1 258 1 123 1 138 1 362 1 229 1 238 1 13 1 
143 1 2 1 307 1 348 2 204 1 349 1 31 1 206 4 249 1 248 2 325 1 159 1 114 1 308 1 115 1 16 2 358 1 329 2 136 2 169 1 140 1 195 1 44 2 142 1 
160 1 288 1 36 1 19 1 205 1 20 1 141 1 5 1 
145 1 117 1 
145 1 117 1 
202 1 312 1 
202 1 312 1 
202 1 312 1 
145 1 117 1 344 1 
145 1 117 1 71 1 
202 1 145 2 117 2 156 1 251 1 312 1 
145 1 117 1 344 1 
145 1 117 1 344 1 
145 1 117 1 217 1 
145 1 117 1 217 1 
145 1 117 1 217 1 
127 1 268 1 297 1 340 1 272 1 145 1 243 1 128 1 91 1 66 1 5 2 203 1 205 2 278 1 184 1 160 2 117 1 164 1 71 1 215 1 20 2 172 1 175 1 141 2 
297 2 164 2 117 2 145 2 272 2 243 2 89 1 320 2 203 2 58 1 190 1 333 1 172 1 33 1 157 1 175 2 278 3 251 1 354 1 
108 1 242 1 46 1 
108 1 242 1 327 1 
168 1 317 1 318 1 242 3 327 1 46 2 
292 1 317 1 318 1 242 2 327 1 46 1 
317 1 318 2 242 2 327 1 46 1 
268 1 0 1 127 1 340 1 2 1 297 4 203 4 7 1 10 1 249 1 209 1 250 4 114 1 115 1 186 1 38 1 187 1 283 1 121 1 293 1 331 1 79 2 58 1 23 1 222 1 83 1 176 1 295 3 126 1 
203 1 271 1 297 1 18 1 328 1 250 1 
203 2 297 2 23 1 209 1 83 1 250 1 84 1 
315 1 203 1 297 1 23 1 209 1 83 1 84 1 
123 1 290 1 194 1 
123 1 124 1 
200 1 
123 1 362 1 229 1 
123 1 40 1 
123 1 229 1 
123 3 290 2 362 1 229 1 241 1 345 1 
308 2 133 1 115 1 162 1 104 1 64 1 329 4 289 2 206 7 334 1 266 1 248 3 249 1 125 1 193 1 210 1 142 3 
308 2 133 1 115 1 162 1 104 1 64 1 329 4 289 2 206 7 334 1 266 1 248 3 249 1 125 1 193 1 210 1 142 3 
308 2 133 1 115 1 162 1 104 1 64 1 276 1 329 4 289 2 334 1 206 7 266 1 248 3 249 1 125 1 193 1 210 1 142 3 
68 1 289 1 162 1 206 1 193 2 329 1 210 1 
104 1 64 1 307 2 348 4 204 2 349 2 8 1 206 9 249 1 248 4 308 3 133 1 115 1 162 1 163 1 358 2 329 5 76 1 289 2 334 1 266 1 193 1 125 1 142 4 
239 1 108 1 242 2 4 1 32 1 13 1 12 1 327 1 53 1 280 1 37 1 232 1 284 1 21 1 258 1 285 1 168 1 99 1 59 1 139 1 102 1 192 1 238 1 294 1 60 1 46 1 
239 1 108 1 242 2 27 1 4 1 274 1 304 1 13 1 12 1 327 1 69 1 15 1 53 1 280 1 37 1 232 1 284 2 21 1 258 1 285 1 168 1 99 1 59 1 139 1 102 2 192 1 238 1 294 1 60 1 46 1 
239 1 108 1 242 2 27 1 4 1 274 1 304 2 32 1 13 1 12 1 327 1 69 1 53 1 280 1 37 1 232 1 284 3 21 1 258 1 285 1 168 1 99 1 139 1 335 1 102 3 103 1 238 1 294 1 60 1 46 1 
239 1 242 2 108 1 27 1 274 1 304 2 32 1 13 1 12 1 327 1 69 1 53 1 280 1 37 1 232 1 284 2 258 1 168 1 99 1 139 1 335 1 102 2 238 1 60 1 46 1 
298 1 239 1 4 1 277 1 229 1 13 1 53 2 231 1 356 1 280 1 232 2 284 1 258 1 285 1 167 1 123 1 138 1 99 2 80 1 102 1 238 1 103 1 60 2 
263 1 
0 1 85 1 269 1 3 1 5 1 321 1 229 1 9 1 13 2 185 1 50 3 14 2 52 1 186 2 19 1 280 2 283 1 55 1 288 1 293 1 138 2 57 1 58 1 331 1 189 1 332 2 238 1 141 1 61 2 295 2 296 2 297 5 298 1 239 1 245 2 203 5 246 2 30 1 208 1 160 1 35 1 255 1 38 2 119 6 257 1 121 1 258 2 167 1 123 1 170 2 171 1 42 4 267 2 45 1 
85 1 297 3 3 1 26 1 5 1 203 3 30 1 9 1 208 1 185 1 50 1 160 1 52 1 35 1 19 1 255 1 119 2 257 1 170 1 288 1 42 2 141 1 
50 1 160 1 85 1 52 1 35 1 297 3 3 1 26 1 19 1 255 1 119 1 257 1 5 1 288 1 203 3 30 1 58 1 9 1 42 3 208 1 141 1 222 1 61 1 185 1 
160 1 85 1 14 1 52 1 35 1 297 2 3 1 19 1 255 1 119 1 257 1 5 1 170 1 288 1 203 2 30 1 9 1 42 2 208 1 141 1 185 1 
85 1 225 1 47 1 3 1 5 2 227 1 9 1 185 1 50 3 14 4 52 1 17 1 19 1 20 1 283 1 288 2 293 1 58 1 331 1 332 2 141 2 61 2 295 1 296 2 297 5 26 1 245 2 203 5 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 254 1 255 1 38 1 256 1 119 7 257 1 121 1 170 4 171 1 42 4 43 1 222 1 45 1 267 2 
85 1 47 1 3 1 5 2 321 1 9 1 185 1 50 1 52 1 14 1 17 1 186 2 19 1 20 1 283 1 288 2 293 1 331 1 58 3 332 1 141 2 61 1 295 1 296 2 297 3 245 2 203 3 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 255 1 38 1 119 2 257 1 121 1 170 1 171 1 42 3 222 1 45 1 267 2 
85 1 47 1 3 1 5 2 227 1 9 1 185 1 50 2 52 1 14 2 17 1 19 1 20 1 283 1 288 2 293 1 331 1 58 1 332 2 141 2 61 2 295 1 296 2 297 4 245 2 203 4 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 254 1 255 1 38 1 119 4 257 1 121 1 170 2 171 1 42 4 43 1 222 1 45 1 267 2 
85 1 47 1 3 1 5 2 227 1 9 1 185 1 50 2 52 1 14 2 17 1 19 1 20 1 283 1 288 2 293 1 331 1 58 1 332 2 141 2 61 2 295 1 296 2 297 4 245 2 203 4 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 254 1 255 1 38 1 119 4 257 1 121 1 170 2 171 1 42 4 43 1 222 1 45 1 267 2 
85 1 47 1 3 1 5 2 227 1 9 1 324 1 185 1 50 2 52 1 14 2 17 1 186 2 19 1 20 1 283 1 288 2 293 1 331 1 58 1 141 2 61 2 295 1 296 2 297 4 110 1 245 2 203 4 30 1 205 1 154 1 351 2 208 1 160 2 34 1 161 1 35 1 212 1 255 1 38 1 119 4 257 1 121 1 170 2 264 2 42 4 222 1 45 1 
85 1 225 1 47 1 3 1 5 2 227 1 9 1 185 1 50 2 14 3 52 1 17 1 19 1 20 1 283 1 288 2 293 1 331 1 58 1 332 2 141 2 61 2 295 1 296 2 297 4 245 2 203 4 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 254 1 255 1 38 1 119 5 257 1 121 1 170 3 171 1 42 4 43 1 222 1 45 1 267 2 
85 1 225 1 47 1 3 1 5 2 227 1 9 1 185 1 50 2 14 3 52 1 17 1 19 1 20 1 283 1 288 2 293 1 331 1 58 1 332 2 141 2 61 2 295 1 296 2 297 4 245 2 203 4 30 1 246 2 205 1 208 1 160 2 34 1 161 1 35 1 212 1 254 1 255 1 38 1 119 5 257 1 121 1 170 3 171 1 42 4 43 1 222 1 45 1 267 2 
85 1 47 1 3 1 5 2 321 1 9 1 185 1 50 2 52 1 14 2 17 1 186 2 19 1 20 1 283 1 288 2 293 1 331 1 58 1 141 2 61 1 295 1 296 2 297 4 245 2 203 4 30 1 205 1 154 1 351 2 208 1 160 2 34 1 161 1 35 1 212 1 255 1 38 1 119 4 257 1 121 1 170 2 264 2 42 3 222 1 45 1 
143 1 104 1 91 2 307 1 348 2 204 1 349 1 206 6 249 1 248 3 159 1 133 1 308 2 115 1 16 1 358 1 329 3 136 1 289 1 334 1 140 1 266 1 125 1 194 1 44 1 142 2 
143 1 2 2 64 2 87 1 146 4 91 1 90 2 180 1 181 1 307 2 348 4 7 4 204 2 349 2 95 2 206 22 248 9 249 2 159 2 114 4 308 2 115 4 16 16 134 1 54 4 216 1 358 2 329 13 359 1 330 1 136 6 44 16 142 4 
143 1 239 1 91 1 5 2 180 1 226 1 307 1 181 1 348 2 349 1 204 1 229 1 205 1 206 2 248 1 183 1 13 1 159 1 279 1 160 2 96 1 280 1 281 1 20 1 216 1 358 1 135 1 329 1 258 1 360 1 123 1 136 1 262 1 138 1 362 1 238 1 141 1 174 1 
314 2 2 2 91 2 180 1 5 3 226 2 181 1 7 2 229 2 13 3 279 1 133 1 16 7 96 2 280 3 20 1 135 1 329 10 136 7 289 1 138 1 237 2 334 1 238 2 141 1 62 1 142 8 143 3 104 1 239 2 343 1 64 4 244 2 307 3 348 6 204 3 349 3 32 1 350 2 205 1 206 20 353 1 249 3 248 10 159 3 114 2 308 4 160 3 115 3 216 1 73 2 358 3 258 3 123 2 262 2 362 2 266 1 125 1 44 7 
143 2 298 1 239 2 273 1 5 1 180 1 307 2 181 1 347 2 348 4 204 2 349 2 32 1 112 1 205 1 229 2 206 2 248 1 13 8 159 2 279 1 160 1 15 1 214 1 280 7 20 1 358 2 120 1 329 1 258 8 167 1 123 3 259 1 219 1 22 1 138 2 140 1 238 2 141 1 
143 1 2 1 148 1 5 1 305 1 307 1 348 2 7 1 204 1 349 1 205 1 206 3 249 1 248 2 159 1 114 1 308 1 160 1 34 1 115 1 16 1 20 1 216 1 358 1 329 1 136 1 141 1 44 1 142 1 
115 1 143 1 16 1 64 1 358 1 329 2 136 1 307 1 348 2 349 1 204 1 31 1 206 2 140 1 44 1 159 1 142 1 114 1 
308 1 143 1 16 1 2 1 358 1 136 1 307 1 348 2 349 1 204 1 206 2 140 1 249 1 248 2 44 1 159 1 325 1 142 1 
308 1 115 1 143 1 16 2 2 1 64 1 358 1 329 2 136 2 307 1 348 2 7 1 349 1 204 1 206 4 140 1 248 2 249 1 44 2 159 1 142 2 114 1 
115 1 143 1 16 1 64 1 358 1 329 2 136 1 259 1 307 1 348 2 349 1 204 1 31 1 206 2 44 1 159 1 142 1 114 1 
308 1 143 1 16 1 2 1 358 1 136 1 259 1 307 1 348 2 349 1 204 1 206 2 249 1 248 2 44 1 159 1 325 1 142 1 
308 1 115 1 143 1 16 2 2 1 64 1 358 1 329 2 136 2 259 1 307 1 348 2 7 1 349 1 204 1 206 4 248 2 249 1 44 2 159 1 142 2 114 1 
308 1 115 1 143 1 16 2 2 1 64 1 358 1 329 2 136 2 307 1 348 2 7 1 349 1 204 1 206 4 248 2 249 1 44 2 159 1 142 2 114 1 
143 1 239 1 91 1 5 1 180 1 226 1 181 1 307 1 348 2 349 1 204 1 229 1 206 2 248 1 13 1 159 1 160 1 96 1 280 1 73 1 358 1 329 1 258 1 123 1 262 1 138 1 362 1 238 1 
143 1 239 1 91 1 5 1 180 1 181 1 307 1 348 2 349 1 204 1 229 1 206 2 248 1 13 1 159 1 160 1 116 1 213 1 96 1 280 1 358 1 329 1 258 1 234 1 123 1 138 1 362 1 238 1 
143 1 2 1 64 1 307 1 7 1 348 2 204 1 349 1 206 4 249 1 248 2 159 1 114 1 308 1 115 1 16 2 216 1 358 1 329 2 136 2 44 2 142 2 
143 1 2 1 239 1 64 1 244 1 5 1 226 1 307 1 348 2 7 1 349 1 204 1 229 1 206 4 248 2 249 1 13 1 159 1 114 1 308 1 160 1 115 1 15 1 16 2 96 1 280 1 73 1 358 1 329 2 258 1 136 2 123 1 262 1 362 1 238 1 44 2 142 2 
143 1 2 1 64 1 107 1 148 1 5 1 307 1 348 2 7 1 204 1 349 1 205 1 206 3 248 1 249 1 159 1 114 1 160 1 34 1 115 1 16 1 20 1 216 1 358 1 329 2 136 1 141 1 44 1 142 1 
86 1 2 4 64 3 146 3 87 2 88 1 29 1 28 1 275 1 302 1 322 1 307 4 348 8 7 4 204 4 349 4 95 1 8 1 206 31 248 16 249 4 326 1 114 4 211 1 308 3 115 4 70 1 72 1 54 2 358 4 329 15 235 3 76 2 56 1 363 1 142 6 
86 1 2 6 64 3 87 2 146 4 88 1 90 2 29 1 275 1 302 1 322 1 307 3 348 6 7 7 204 3 349 3 95 2 8 1 206 46 248 22 249 6 326 2 114 7 211 1 308 3 115 7 70 2 165 1 54 4 358 3 329 24 235 4 76 2 56 1 363 1 142 6 
86 1 2 5 64 6 146 5 87 3 88 1 90 2 29 1 28 1 275 1 302 1 322 1 307 4 348 8 7 7 204 4 349 4 95 2 8 1 206 46 248 21 249 5 326 1 114 7 211 1 308 4 115 7 70 2 165 1 54 5 358 4 329 25 235 4 76 2 56 1 363 1 24 1 142 10 
86 1 2 4 64 3 146 3 87 2 88 1 29 1 28 1 275 1 302 1 322 1 307 4 348 8 7 4 204 4 349 4 95 1 8 1 206 33 248 17 249 4 326 1 114 4 211 1 308 2 115 4 70 1 165 1 54 2 358 4 329 16 235 4 76 2 56 1 363 1 142 5 
86 1 104 1 2 7 64 6 146 4 87 2 88 1 90 2 29 1 275 1 302 1 322 1 307 3 348 6 7 7 204 3 349 3 95 2 8 1 206 54 248 27 249 8 326 1 114 7 133 1 211 1 308 8 115 8 70 1 165 1 54 4 358 3 329 27 235 4 76 2 56 1 289 1 334 1 363 1 266 1 125 1 142 14 
143 1 239 1 5 2 180 1 307 1 181 1 347 2 348 2 349 1 204 1 229 1 206 2 248 1 13 2 159 1 160 2 280 2 216 1 358 1 39 1 329 1 258 2 75 1 123 1 261 1 219 1 22 1 78 1 238 1 141 2 223 1 
239 1 53 1 106 1 280 1 37 1 108 1 242 2 258 1 168 1 188 1 32 1 238 1 207 1 294 1 13 1 12 1 327 1 46 1 
15 1 239 1 53 1 106 1 280 2 37 1 108 1 242 2 258 2 168 1 188 1 32 1 238 1 207 1 294 1 13 2 12 1 327 1 46 1 
198 1 239 1 53 1 280 1 37 1 108 1 242 2 258 1 168 1 188 1 32 1 238 1 294 1 13 1 12 1 327 1 46 1 
298 1 239 1 53 1 356 1 280 1 258 1 167 1 123 1 138 1 229 1 238 1 207 1 13 1 366 1 
282 1 
194 1 
50 1 297 1 186 1 38 1 119 1 283 1 121 1 203 1 293 1 246 1 58 2 331 1 171 1 332 1 222 1 295 1 267 1 
0 2 2 2 93 1 7 2 229 1 230 1 10 6 13 2 50 3 15 1 186 12 280 2 283 4 187 6 233 2 290 2 293 4 138 1 331 4 58 8 189 1 237 2 191 2 238 2 295 9 297 5 239 1 240 1 241 1 300 2 67 1 111 2 203 5 246 6 247 1 249 2 114 2 115 2 35 2 253 2 38 8 119 5 121 4 258 2 124 3 123 6 77 1 362 1 361 2 221 2 222 2 
0 1 86 1 178 1 297 1 2 4 146 2 87 1 88 1 90 1 111 1 203 1 322 1 7 4 246 5 95 1 10 8 249 4 114 4 211 1 50 1 115 4 186 10 38 8 119 1 54 2 187 8 283 2 233 3 121 2 293 2 220 1 331 2 58 7 189 1 363 1 222 2 295 13 
104 1 297 1 47 1 5 1 111 1 203 1 205 1 249 1 160 1 115 2 34 1 161 1 254 1 17 1 212 1 38 2 20 1 283 1 233 2 121 1 288 1 293 1 331 1 266 1 125 1 141 1 196 1 295 2 
293 1 331 1 283 1 121 1 
50 1 203 1 297 1 58 1 119 1 222 1 
0 1 297 2 298 1 239 1 93 1 203 2 229 1 13 2 50 1 280 2 38 1 119 2 283 1 55 1 121 1 258 2 167 1 123 1 57 1 293 1 138 2 331 1 189 1 238 1 295 1 84 1 
197 1 143 1 239 1 91 1 180 1 5 3 226 1 307 1 348 2 204 1 349 1 205 2 229 1 206 1 248 1 13 1 159 1 160 3 34 2 212 1 96 1 280 1 20 2 73 1 358 1 258 1 123 1 138 1 262 1 362 1 238 1 141 2 
0 1 186 4 38 2 187 2 283 1 121 1 289 1 246 2 293 1 331 1 58 4 189 1 10 2 222 2 295 1 
272 1 243 1 130 1 
260 1 272 1 333 1 215 1 243 1 
272 1 243 1 130 1 
272 1 243 1 130 1 
272 1 243 1 346 1 
272 1 243 1 346 1 
272 1 243 1 346 1 
272 1 243 1 
145 1 117 1 
308 2 133 1 115 1 104 1 64 1 358 2 329 4 76 1 289 1 307 2 348 4 349 2 204 2 206 8 334 1 266 1 249 1 248 4 125 1 142 3 
133 1 308 2 115 1 104 1 329 3 289 1 334 1 206 6 266 1 248 3 125 1 249 1 194 1 142 2 
308 1 115 1 2 1 64 1 358 1 329 2 307 1 348 2 7 1 349 1 204 1 82 1 206 4 248 2 249 1 142 2 114 1 
308 1 115 2 2 2 64 1 87 1 146 2 54 2 90 1 329 6 7 2 95 1 206 12 248 6 249 2 142 2 114 2 
104 1 2 2 64 4 146 2 90 1 307 2 7 2 348 4 349 2 204 2 95 1 206 23 248 12 249 3 114 2 133 1 308 5 115 3 54 2 358 2 329 11 330 1 76 2 289 1 334 1 266 2 337 1 125 2 142 9 
206 1 146 1 248 1 
206 1 54 1 329 1 
308 2 115 1 2 1 64 1 358 1 329 3 307 1 348 2 7 1 204 1 349 1 237 1 82 1 206 6 248 3 249 1 114 1 142 3 
86 1 2 4 64 2 146 2 87 1 88 1 90 1 322 1 307 1 348 2 7 4 204 1 349 1 95 1 8 1 206 22 248 11 249 4 114 4 211 1 308 2 115 4 54 2 358 1 329 11 363 1 142 4 
308 1 115 1 104 1 64 1 329 3 206 6 266 1 249 1 248 3 125 1 142 2 
308 1 133 1 64 1 358 1 329 1 76 1 307 1 348 2 349 1 204 1 334 1 206 3 266 1 337 1 125 1 248 2 142 2 
308 3 115 2 104 1 64 2 358 1 329 5 307 1 348 2 204 1 349 1 8 1 206 10 266 2 125 2 248 5 249 2 196 1 142 5 
115 1 64 1 358 1 329 2 307 1 348 2 349 1 204 1 8 1 206 2 114 1 142 1 
308 1 115 1 2 1 64 1 358 1 329 2 307 1 348 2 7 1 349 1 204 1 8 1 206 4 248 2 249 1 142 2 114 1 
308 1 64 1 28 1 358 3 329 1 76 1 307 3 348 6 349 3 204 3 8 1 206 3 337 1 266 1 248 2 125 1 142 2 
104 1 64 3 146 1 87 1 28 1 307 4 348 8 204 4 349 4 8 1 206 15 249 2 248 8 133 1 308 3 115 2 310 1 54 1 358 4 329 7 76 1 82 1 334 1 337 1 266 2 125 2 196 1 142 6 
86 1 104 2 2 1 64 4 146 1 87 1 88 1 322 1 307 2 348 4 7 2 204 2 349 2 8 1 206 24 248 10 249 4 114 2 133 1 308 5 211 1 115 5 54 1 358 2 329 14 76 1 289 1 334 1 363 1 266 2 125 2 196 1 142 9 
104 1 64 1 146 2 87 1 322 1 307 2 348 4 7 1 204 2 349 2 95 1 8 1 206 11 249 1 248 5 114 1 308 2 133 1 115 2 54 1 358 2 329 6 289 1 334 1 82 1 266 1 125 1 142 3 
86 1 104 1 2 4 64 2 146 2 87 1 88 1 90 1 322 1 307 3 348 6 7 4 204 3 349 3 95 1 8 1 206 29 248 15 249 5 114 4 133 1 211 1 308 4 115 5 54 2 358 3 329 14 76 1 289 1 334 1 82 1 363 1 266 1 125 1 142 6 
86 1 104 1 2 3 64 3 146 2 87 1 88 1 90 1 322 1 307 3 348 6 7 4 204 3 349 3 95 1 8 1 206 27 248 12 249 4 114 4 133 1 211 1 308 4 115 5 54 2 358 3 329 15 76 1 289 1 334 1 82 1 363 1 266 1 125 1 142 7 
86 1 104 2 2 1 64 4 146 1 87 1 88 1 322 1 307 2 348 4 7 2 204 2 349 2 8 1 206 24 248 10 249 4 114 2 133 1 308 5 211 1 115 5 54 1 358 2 329 14 76 1 289 1 334 1 363 1 266 2 125 2 196 1 142 9 
86 1 2 4 64 2 146 2 87 1 88 1 90 1 322 1 307 1 348 2 7 4 204 1 349 1 95 1 8 1 206 22 248 11 249 4 114 4 211 1 308 2 115 4 54 2 358 1 329 11 363 1 142 4 
86 1 104 1 2 3 64 3 146 2 87 1 88 1 90 1 322 1 307 4 348 8 7 4 204 4 349 4 95 1 8 1 206 28 248 13 249 4 114 4 133 1 211 1 308 4 115 5 54 2 358 4 329 15 76 2 289 1 334 1 363 1 82 1 266 1 125 1 142 7 
2 1 146 2 87 1 28 1 322 1 307 2 348 4 7 1 204 2 349 2 95 1 8 1 206 7 248 4 249 1 114 1 308 1 115 1 54 1 358 2 329 3 142 1 
133 1 308 3 115 1 104 1 64 3 329 3 206 7 334 2 266 3 248 4 249 1 125 3 142 6 
2 1 146 2 87 1 28 1 322 1 307 2 348 4 7 1 204 2 349 2 95 1 8 1 206 7 248 4 249 1 114 1 308 1 115 1 54 1 358 2 329 3 142 1 
160 1 94 1 9 1 357 1 91 1 141 1 5 1 
160 1 339 1 97 1 357 1 91 1 5 1 94 1 137 1 323 1 81 1 9 1 141 1 
138 1 239 1 37 1 280 1 108 1 242 1 238 1 13 1 327 1 258 1 
123 1 15 1 22 1 239 1 32 1 229 1 280 2 238 1 39 1 13 2 258 2 
123 1 138 1 298 1 239 1 229 1 280 1 238 1 194 1 13 1 258 1 167 1 
160 2 96 1 239 1 280 1 20 1 91 1 5 2 258 1 123 1 138 1 262 1 362 1 229 1 205 1 238 1 141 1 13 1 279 1 
160 2 96 1 19 1 239 1 280 1 20 2 91 1 5 2 258 1 123 3 288 1 40 1 262 1 362 2 229 2 205 1 336 1 208 1 238 1 365 1 141 2 13 1 279 1 
160 2 116 1 96 1 19 1 239 1 280 2 20 2 91 1 5 2 258 2 123 3 288 1 40 1 362 2 229 2 205 1 336 1 208 1 238 1 365 1 141 2 13 2 279 1 252 1 
1 1 297 2 47 1 5 1 203 2 205 1 13 1 160 1 34 1 35 1 161 1 17 1 212 1 280 1 119 1 20 1 258 1 123 2 124 1 288 1 290 1 58 1 365 1 141 1 222 1 
35 1 297 2 239 1 280 3 119 1 258 3 124 1 123 4 203 2 40 1 290 1 138 1 58 1 362 1 229 1 221 1 336 1 238 1 365 1 222 1 13 3 252 1 
239 1 214 1 280 1 238 1 13 1 258 1 
15 1 214 1 239 2 280 6 241 1 273 1 120 1 129 1 258 7 123 3 347 1 22 1 152 1 138 2 362 1 32 1 112 1 229 2 238 3 182 1 13 7 
314 1 91 2 5 2 226 1 229 1 13 1 279 1 133 1 15 1 16 1 96 1 280 1 20 1 329 3 136 1 289 1 334 1 238 1 141 1 142 2 143 2 104 1 239 1 244 1 307 2 348 4 204 2 349 2 205 1 206 6 249 1 248 3 159 2 160 2 308 2 115 1 73 1 216 1 358 2 258 1 123 1 261 1 262 1 362 1 266 1 125 1 44 1 
297 3 240 1 300 1 93 1 203 3 13 1 250 1 50 1 35 1 38 1 280 1 119 2 283 2 258 1 121 2 124 1 123 2 77 1 290 1 138 1 293 2 58 1 331 2 361 1 191 1 221 1 222 1 295 1 
214 1 239 1 280 1 241 1 200 1 258 1 123 2 290 1 247 1 362 1 229 1 238 2 13 1 
15 1 298 1 239 1 280 4 98 1 258 4 167 1 123 1 138 1 229 1 238 1 13 4 252 1 
239 1 311 1 280 2 258 2 123 1 152 1 362 1 173 1 229 1 353 1 238 2 365 1 182 1 13 2 
15 1 298 1 239 2 280 4 98 1 120 1 258 5 167 1 123 3 138 1 22 1 112 1 229 2 238 2 365 1 13 5 
15 1 298 1 239 2 280 4 98 1 74 1 258 5 167 1 123 3 138 1 22 1 112 1 229 2 238 2 365 1 13 5 
160 2 116 1 96 1 239 1 280 1 20 1 91 1 5 2 258 1 123 1 138 1 362 1 229 1 205 1 238 1 141 1 13 1 279 1 
239 1 280 1 241 1 129 1 258 1 123 1 152 1 362 1 229 1 238 2 365 1 182 1 13 1 
105 1 342 1 316 1 91 1 113 1 
85 1 35 1 105 1 297 2 19 1 316 2 342 2 91 1 236 1 49 1 288 1 203 2 58 1 265 1 208 1 113 2 222 1 250 1 132 1 
160 1 105 1 316 1 5 1 75 1 78 1 113 1 141 1 223 1 
105 1 265 1 236 1 
69 3 270 1 27 2 4 1 274 2 284 4 319 1 285 1 313 1 304 2 102 4 11 1 158 1 338 1 
355 1 69 1 4 1 27 1 274 1 284 2 166 1 285 1 304 1 153 1 192 1 102 2 
69 1 270 2 4 1 27 1 92 1 284 3 274 1 319 1 285 1 192 1 102 3 11 2 
6 2 69 2 109 1 286 1 
25 1 102 1 192 1 4 1 284 1 285 1 
304 1 69 1 102 2 192 1 27 1 4 1 274 1 284 2 301 1 285 1 
51 1 
69 1 102 1 192 1 27 1 4 1 274 1 284 1 285 1 
69 1 27 1 274 1 194 1 
69 1 102 1 27 1 4 1 274 1 284 1 285 1 
99 1 232 1 284 1 
69 1 270 1 144 1 4 1 27 1 284 3 274 1 319 1 285 1 192 1 102 3 11 2 
304 1 69 1 291 1 102 2 27 1 4 1 274 1 284 2 285 1 
69 1 108 1 242 1 102 1 192 1 4 1 158 1 284 1 46 1 303 1 285 1 
69 1 102 1 192 1 4 1 274 1 284 1 285 1 
102 1 192 1 27 1 4 1 274 2 284 1 285 1 
69 1 4 2 147 1 274 1 284 2 285 2 201 1 192 1 102 2 63 1 
69 2 341 1 27 1 4 1 274 1 284 3 301 1 285 1 313 1 304 2 192 1 102 3 158 1 
69 1 242 2 108 1 27 1 4 1 274 1 284 2 285 1 168 1 304 1 228 1 192 1 102 2 327 1 46 1 
69 2 27 1 4 2 274 1 284 4 149 1 285 2 313 1 304 2 291 1 192 1 102 4 158 1 
69 1 102 1 192 1 27 1 4 1 274 1 284 1 285 1 
304 1 69 1 102 3 192 1 27 1 4 1 274 1 11 1 284 3 301 1 285 1 
69 1 158 1 338 1 313 1 
69 1 274 1 

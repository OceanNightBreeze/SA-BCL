#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 219 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3019 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
157 4 2 1 76 1 95 1 215 1 364 1 6 2 123 1 365 2 298 2 9 2 11 3 199 9 323 2 271 9 60 1 248 1 14 1 227 1 110 1 252 1 178 5 133 2 43 2 22 1 45 6 48 1 92 1 
157 4 2 1 76 1 95 1 215 1 364 1 6 2 123 1 365 2 298 2 9 2 11 3 199 9 323 2 271 9 60 1 248 1 14 1 227 1 110 1 252 1 178 5 133 2 43 2 22 1 45 6 48 1 92 1 
157 5 2 1 76 1 95 1 215 1 364 1 6 2 123 1 365 2 298 2 9 2 11 4 199 10 323 2 271 10 60 1 248 1 14 1 227 1 110 1 252 1 178 6 133 2 43 2 22 1 45 7 48 1 92 1 
157 3 2 1 76 1 95 1 215 1 364 1 6 2 123 1 365 2 298 1 9 2 11 2 199 7 323 2 271 7 60 1 248 1 14 1 227 1 110 1 252 1 178 4 133 2 43 2 22 1 45 4 92 1 
157 2 227 1 95 1 252 1 364 1 6 1 365 1 178 3 298 2 9 1 133 1 11 1 199 4 22 1 43 1 271 4 45 3 48 1 
227 1 364 1 6 1 178 1 365 1 123 1 282 1 149 1 133 1 199 2 22 1 43 1 323 1 271 2 261 1 92 1 
157 1 227 1 364 1 6 2 178 2 11 1 199 3 22 1 43 2 323 1 271 3 45 1 248 1 
320 1 157 4 2 1 76 1 95 1 364 1 6 2 365 1 298 2 9 1 11 3 199 9 323 1 13 1 271 9 248 1 227 1 252 1 178 5 133 1 43 2 22 1 45 7 48 1 
320 1 157 4 2 1 76 1 95 1 364 1 6 2 365 1 298 2 9 1 11 3 199 9 323 1 13 1 271 9 248 1 227 1 252 1 178 5 133 1 43 2 22 1 45 7 48 1 
346 1 
113 2 309 1 317 1 
334 2 130 2 29 2 89 2 213 1 97 2 374 2 221 1 
341 1 118 1 29 3 122 1 5 1 213 1 362 1 97 2 54 1 221 1 347 1 140 1 166 2 102 2 125 1 224 1 129 1 147 1 130 2 205 1 206 2 351 1 279 1 18 2 177 1 132 1 180 1 334 2 89 2 44 2 135 1 24 1 137 1 90 1 260 1 290 1 374 3 
130 1 3 1 29 1 213 1 97 1 334 1 89 1 300 1 374 1 108 1 
3 2 29 2 294 1 213 1 97 2 103 1 300 1 246 1 142 1 108 1 144 1 275 1 130 1 328 1 253 1 334 1 89 1 289 1 317 1 235 1 374 2 
3 2 29 2 294 1 213 1 97 2 103 1 300 1 108 1 144 2 275 1 130 2 328 1 253 1 334 2 89 2 289 1 317 1 374 2 235 2 
326 1 144 1 329 1 235 1 283 1 
326 1 57 1 144 2 120 1 294 1 317 1 235 2 283 1 
144 1 235 1 283 1 
326 1 144 1 3 1 130 1 29 1 213 1 97 1 253 1 334 1 89 1 300 1 235 1 374 1 108 1 
317 1 
326 1 144 2 120 1 294 1 317 1 235 2 283 1 210 1 
326 2 109 1 144 5 250 1 120 1 294 1 41 2 159 1 297 1 283 2 198 1 56 1 348 1 34 1 154 1 317 1 106 2 235 5 339 2 
346 1 
130 1 29 2 97 2 221 2 334 1 134 1 89 1 374 2 47 1 
291 1 292 1 226 1 
129 1 29 1 206 1 122 1 177 1 132 1 53 1 54 1 180 1 221 1 140 1 166 1 44 1 135 1 260 1 374 1 
129 1 29 2 206 1 122 1 97 1 177 1 132 1 54 1 180 1 334 1 140 1 166 1 89 1 44 1 135 1 270 1 260 1 374 2 291 1 262 1 
334 3 130 1 29 3 89 3 97 3 374 3 221 1 262 1 
334 1 3 1 29 1 89 1 300 1 97 1 374 1 
130 1 3 1 29 1 97 1 334 1 134 1 89 1 374 1 47 1 
118 1 190 1 3 1 29 4 122 1 5 1 213 1 97 3 54 1 221 1 140 1 166 1 102 1 201 1 103 1 270 1 125 1 224 1 129 1 275 1 144 1 147 1 130 2 205 1 206 1 351 1 279 1 328 1 18 2 132 1 177 1 180 1 334 3 89 3 44 1 135 1 24 1 137 1 260 1 289 1 374 4 235 1 47 1 262 1 
334 1 263 1 29 2 89 1 97 2 374 2 221 1 142 1 262 1 
144 1 275 1 190 1 130 1 3 1 29 3 97 3 328 1 334 3 268 1 89 3 103 1 270 1 317 1 289 1 235 1 374 3 47 1 262 2 
334 1 130 1 29 1 89 1 97 1 374 1 291 1 47 1 
129 1 29 1 206 1 122 1 177 1 132 1 180 1 54 1 221 1 140 1 166 1 44 1 135 1 260 1 374 1 
129 1 29 1 206 1 122 1 177 1 54 1 221 1 140 1 166 1 44 1 135 1 358 1 324 1 260 1 374 1 
118 2 359 1 147 1 205 1 351 1 5 1 96 1 18 2 112 1 366 1 267 1 357 1 102 2 137 1 224 1 291 1 292 1 49 1 226 1 
3 1 29 1 97 1 328 1 334 1 89 1 316 1 374 1 
75 1 263 1 130 1 29 5 97 5 221 1 354 1 334 4 89 4 270 1 374 5 47 1 142 1 262 2 
334 1 3 1 29 1 89 1 300 1 97 1 374 1 
1 1 38 1 
1 1 38 1 
243 1 99 1 
243 1 99 1 
243 1 99 1 
1 1 257 1 38 1 
1 1 121 1 38 1 
1 2 243 1 115 1 38 2 375 1 99 1 
1 1 257 1 38 1 
1 1 257 1 38 1 
1 1 38 1 124 1 
1 1 38 1 124 1 
1 1 38 1 124 1 
1 2 360 1 264 1 3 1 29 1 239 1 213 1 97 1 31 2 296 1 32 2 345 2 100 1 300 1 37 1 38 2 225 2 108 1 144 2 130 1 207 1 68 1 253 1 334 1 355 1 89 1 259 2 374 1 235 2 
156 1 1 1 119 1 144 1 29 2 121 1 97 2 31 1 179 1 32 1 345 1 221 1 266 1 100 1 334 2 356 1 241 1 89 2 38 1 259 1 202 1 374 2 235 1 225 1 
133 1 365 1 9 1 
133 1 261 1 365 1 
88 1 158 1 35 1 261 1 365 3 9 2 
88 1 150 1 158 1 261 1 365 2 9 1 
88 1 158 2 261 1 365 2 9 1 
120 1 294 1 96 1 30 2 159 1 78 2 266 1 165 1 244 1 104 1 202 1 106 1 127 2 247 1 172 1 326 4 109 2 144 5 41 1 370 1 309 1 353 1 112 1 179 1 283 1 19 1 113 3 287 1 154 3 317 2 235 5 339 1 
3 1 29 1 294 1 213 1 97 1 299 1 300 1 61 1 108 1 326 2 144 2 130 1 66 1 329 1 253 1 283 1 334 1 89 1 317 1 235 2 374 1 
3 1 29 1 294 1 213 1 96 1 30 2 97 1 78 1 266 1 56 1 165 1 244 1 300 1 104 1 106 1 247 1 127 2 108 1 326 2 109 2 144 3 130 1 41 1 370 1 309 2 112 1 253 1 334 1 19 1 113 4 89 1 287 1 154 3 317 3 374 1 235 3 339 1 
96 1 30 2 78 1 219 1 266 1 56 1 165 1 244 1 104 1 106 1 127 2 247 1 326 1 109 2 144 2 41 1 370 1 309 2 112 1 19 1 113 4 287 1 154 3 317 2 235 2 339 1 
346 1 
288 1 54 1 
256 1 
129 1 54 1 
129 1 74 1 231 1 135 1 65 2 54 3 
129 1 135 1 54 1 
15 1 54 1 
118 3 342 1 175 1 276 1 96 1 77 2 331 2 295 1 20 1 357 2 102 6 287 1 183 1 105 1 290 3 91 2 49 4 
118 3 342 1 175 1 276 1 96 1 77 2 331 2 295 1 20 1 357 2 102 6 287 1 183 1 105 1 290 3 91 2 49 4 
118 3 342 1 175 1 276 1 96 1 77 2 331 2 295 1 20 1 357 2 102 6 287 1 183 1 105 1 290 3 91 2 187 1 49 4 
118 14 342 2 5 2 96 3 265 2 77 4 295 1 220 3 102 28 12 1 104 2 105 2 272 1 224 2 170 1 145 1 147 2 175 1 276 2 351 2 67 3 331 3 18 4 112 2 19 2 20 1 229 1 357 4 287 3 183 1 290 14 184 1 91 3 49 8 
118 4 342 1 147 2 175 1 276 1 351 2 5 2 96 1 265 1 77 1 331 2 18 4 295 1 332 1 55 1 357 3 102 8 287 1 183 1 105 1 290 4 224 2 91 2 49 4 
236 1 122 1 361 1 160 1 214 1 364 1 6 1 365 2 9 1 367 1 166 1 199 2 242 1 35 1 323 1 271 2 141 1 146 1 227 1 206 1 251 1 86 1 178 1 133 1 43 1 22 1 44 1 260 1 45 1 261 1 
236 1 192 1 122 1 361 1 160 1 214 1 364 1 6 1 365 2 9 1 166 1 199 3 242 1 35 1 323 1 271 3 325 1 141 1 227 1 206 1 251 1 86 1 178 1 133 1 43 1 44 1 211 1 260 1 45 2 261 1 
236 1 192 1 122 1 361 1 160 1 214 1 364 1 365 2 9 1 166 1 199 2 35 1 323 1 271 2 325 1 141 1 227 1 206 1 86 1 178 1 133 1 44 1 260 1 45 2 261 1 
129 1 274 1 237 1 206 1 122 1 361 2 160 2 86 2 177 1 6 1 54 1 181 1 199 1 166 1 43 1 255 1 211 1 44 1 285 1 323 2 260 1 271 1 85 1 
236 1 192 1 122 1 361 1 160 1 214 1 6 1 365 2 9 1 367 1 166 1 199 1 242 1 35 1 323 1 271 1 141 1 206 1 251 1 86 1 133 1 43 1 22 1 44 1 260 1 261 1 
17 1 
3 1 51 1 4 1 294 1 97 1 7 1 54 1 98 1 10 2 101 2 103 1 245 2 106 1 349 2 246 1 204 1 306 1 142 1 109 2 307 1 144 5 206 2 352 1 309 2 310 1 113 2 255 1 314 1 154 2 260 1 317 2 72 1 155 1 120 3 29 1 122 1 159 1 217 2 165 1 166 2 83 2 129 1 275 1 41 1 176 2 328 1 177 2 283 6 44 2 285 1 289 1 235 5 374 1 339 1 340 4 
3 1 120 1 29 1 4 1 294 1 97 1 217 1 103 1 246 1 142 1 306 1 307 1 144 3 275 1 352 1 328 1 310 1 210 1 283 2 289 1 317 1 374 1 235 3 340 2 
307 1 275 1 144 2 3 1 4 1 29 1 294 1 352 1 328 1 97 1 310 1 103 1 317 1 289 1 83 1 235 2 246 1 374 1 340 3 306 1 142 1 
3 1 120 1 29 1 4 1 294 1 97 1 217 1 101 1 103 1 246 1 83 1 142 1 306 1 307 1 144 3 275 1 352 1 328 1 310 1 210 1 283 2 289 1 317 1 374 1 235 3 340 3 
3 2 4 1 294 3 52 1 97 2 98 1 10 2 101 4 103 1 300 1 106 1 245 2 246 1 349 2 108 1 306 1 142 1 307 1 109 1 144 5 352 1 209 1 309 2 253 1 310 1 210 1 151 1 258 1 154 1 317 3 155 1 29 2 120 3 213 1 159 1 217 4 83 3 275 1 130 1 41 1 328 1 176 2 281 1 283 7 334 1 89 1 289 1 374 2 235 5 339 1 340 5 
3 1 4 1 294 2 97 1 98 1 10 2 101 2 103 1 106 1 245 2 246 1 349 2 142 1 306 1 307 1 109 1 144 4 352 1 309 2 310 1 113 2 154 1 317 3 72 1 155 1 29 1 120 2 159 1 217 2 83 2 275 1 41 1 328 1 176 2 283 4 289 1 374 1 235 4 339 1 340 4 
3 1 120 2 29 1 4 1 294 2 159 1 97 1 217 2 98 1 10 2 101 2 103 1 245 2 106 1 83 2 349 2 246 1 142 1 306 1 109 1 307 1 144 4 275 1 41 1 352 1 209 1 309 2 176 2 328 1 281 1 310 1 283 4 258 1 154 1 289 1 317 2 374 1 235 4 339 1 155 1 340 4 
3 1 120 2 29 1 4 1 294 2 159 1 97 1 217 2 98 1 10 2 101 2 103 1 245 2 106 1 83 2 349 2 246 1 142 1 306 1 109 1 307 1 144 4 275 1 41 1 352 1 209 1 309 2 176 2 328 1 281 1 310 1 283 4 258 1 154 1 289 1 317 2 374 1 235 4 339 1 155 1 340 4 
307 1 275 1 144 2 3 1 4 1 29 1 294 1 352 1 328 1 97 1 310 1 103 1 317 1 289 1 235 2 246 1 374 1 186 1 340 2 306 1 142 1 
3 1 120 2 29 1 4 1 294 2 159 1 97 1 217 3 98 1 10 2 101 3 103 1 245 2 106 1 349 2 83 3 246 1 142 1 306 1 109 1 307 1 144 4 275 1 41 1 209 1 352 1 309 2 176 2 328 1 281 1 310 1 283 5 151 1 258 1 154 1 289 1 317 2 374 1 235 4 339 1 155 1 340 5 
3 1 120 2 29 1 4 1 294 2 159 1 97 1 217 3 98 1 10 2 101 3 103 1 245 2 106 1 349 2 83 3 246 1 142 1 306 1 109 1 307 1 144 4 275 1 41 1 209 1 352 1 309 2 176 2 328 1 281 1 310 1 283 5 151 1 258 1 154 1 289 1 317 2 374 1 235 4 339 1 155 1 340 5 
3 1 4 1 294 2 97 1 101 2 103 1 106 1 246 1 349 2 142 1 306 1 307 1 109 1 144 4 352 1 310 1 113 2 154 1 317 2 72 1 155 1 29 1 120 2 159 1 217 2 83 2 275 1 327 1 41 1 328 1 176 2 283 4 136 2 289 1 374 1 235 4 339 1 340 4 93 2 
267 1 147 1 205 1 5 1 351 1 137 1 18 2 224 1 346 1 
341 1 118 4 5 2 77 2 220 3 221 1 240 1 102 12 12 1 104 2 224 2 226 10 147 2 205 1 351 2 279 1 67 3 131 1 18 4 19 2 287 2 137 2 337 1 290 8 291 10 338 1 292 10 73 1 49 2 117 1 
118 1 341 1 29 1 5 1 97 1 80 1 102 2 270 1 224 1 143 1 147 1 205 1 351 1 279 1 18 2 334 1 89 1 137 1 374 1 290 1 292 1 117 1 262 1 
238 1 5 2 97 1 8 1 54 1 140 1 102 5 104 1 147 2 206 1 205 2 351 2 18 4 19 1 357 1 24 1 260 1 262 1 117 1 118 2 29 2 122 1 77 2 166 1 270 1 224 2 39 1 226 2 129 1 368 1 279 1 42 1 177 1 132 1 180 1 334 1 44 1 89 1 135 1 287 1 137 2 374 2 290 3 291 2 292 2 49 3 
341 1 118 1 122 3 5 1 54 2 347 1 166 2 167 1 102 2 224 1 62 1 129 2 147 1 206 2 205 1 148 1 278 1 351 1 279 1 177 1 18 2 44 2 255 1 135 1 233 1 285 1 182 1 137 1 260 2 290 1 
118 2 29 1 5 1 96 1 97 1 102 3 104 1 224 1 226 1 130 1 147 1 205 1 351 1 18 2 112 1 334 1 19 1 357 1 89 1 287 1 137 1 25 1 374 1 290 1 291 1 292 1 47 1 49 1 117 1 
147 1 205 1 351 1 5 1 77 1 18 2 163 1 267 1 19 1 102 2 287 1 137 1 224 1 290 2 291 1 292 1 49 1 226 1 
359 1 118 2 147 1 205 1 351 1 5 1 96 1 18 2 112 1 267 1 357 1 102 2 137 1 224 1 291 1 292 1 49 1 226 1 
118 2 5 1 96 1 77 1 267 1 102 4 104 1 224 1 226 2 147 1 205 1 351 1 18 2 112 1 19 1 357 1 287 1 137 1 290 2 291 2 292 2 49 2 
147 1 205 1 351 1 5 1 77 1 18 2 163 1 19 1 102 2 233 1 287 1 137 1 224 1 290 2 291 1 292 1 49 1 226 1 
359 1 118 2 147 1 205 1 351 1 5 1 96 1 18 2 112 1 357 1 102 2 233 1 137 1 224 1 291 1 292 1 49 1 226 1 
147 1 205 1 351 1 5 1 77 1 18 2 19 1 102 2 233 1 287 1 137 1 104 1 224 1 290 2 291 1 292 1 49 1 226 1 
147 1 205 1 351 1 5 1 77 1 18 2 19 1 102 2 287 1 137 1 104 1 224 1 290 2 291 1 292 1 49 1 226 1 
341 1 118 1 29 1 122 1 5 1 54 1 221 1 140 1 166 1 102 2 224 1 129 1 147 1 206 1 205 1 351 1 279 1 132 1 177 1 18 2 180 1 44 1 135 1 24 1 137 1 260 1 290 1 374 1 
341 1 118 1 27 1 29 1 122 1 5 1 54 1 221 1 140 1 166 1 102 2 324 1 224 1 129 1 147 1 206 1 205 1 351 1 279 1 177 1 18 2 44 1 135 1 137 1 358 1 260 1 290 1 374 1 
147 1 205 1 351 1 5 1 77 1 18 2 19 1 102 2 287 1 137 1 104 1 224 1 290 2 291 1 292 1 49 1 226 1 117 1 
29 1 122 1 5 1 77 1 54 1 140 1 166 1 102 2 104 1 224 1 226 1 129 1 146 1 147 1 206 1 205 1 351 1 42 1 132 1 18 2 180 1 19 1 44 1 135 1 287 1 24 1 137 1 260 1 290 2 374 1 291 1 292 1 49 1 
29 1 5 1 77 1 97 1 102 2 104 1 224 1 350 1 226 1 130 1 147 1 205 1 351 1 18 2 334 1 19 1 89 1 287 1 137 1 374 1 290 2 291 1 47 1 292 1 49 1 117 1 
118 14 5 3 195 1 96 3 139 1 344 4 265 1 77 3 220 2 164 1 222 1 102 30 269 2 12 2 58 1 104 4 224 3 64 1 147 3 174 1 351 3 67 2 18 6 112 3 332 1 19 4 254 1 357 3 312 1 372 1 287 4 373 1 336 1 290 16 46 1 49 6 
118 12 5 2 195 1 96 2 344 4 139 2 265 1 77 1 220 2 164 2 222 1 102 26 269 1 12 2 104 3 224 2 64 1 147 2 174 1 351 2 67 2 18 4 112 2 332 1 19 3 254 1 357 1 372 1 287 3 373 1 336 1 290 14 46 1 49 2 
118 20 5 3 195 1 96 4 139 2 344 4 265 1 77 4 295 1 220 3 164 1 222 1 102 39 269 1 12 3 58 1 104 3 273 1 224 3 64 1 147 3 174 1 175 1 351 3 67 3 331 2 18 6 112 3 332 1 19 3 254 1 357 4 372 1 287 4 183 1 373 1 336 1 290 19 46 1 91 2 49 8 
5 3 344 4 139 2 96 3 195 1 295 1 102 33 12 3 58 1 104 3 64 1 147 3 351 3 67 3 18 6 112 2 19 3 254 1 357 4 118 16 265 1 77 2 220 3 222 1 164 1 269 1 273 1 224 3 174 1 175 1 331 2 332 1 372 1 287 4 183 1 373 1 336 1 290 17 46 1 91 2 49 6 
118 15 5 1 195 1 96 4 139 1 344 3 77 2 295 1 220 2 164 1 222 1 102 30 269 1 12 2 104 3 224 1 64 1 147 1 174 1 175 1 351 1 67 2 331 2 18 2 112 3 332 1 19 3 254 1 357 4 372 1 287 4 183 1 373 1 336 1 290 15 46 1 91 2 49 6 
1 1 301 1 115 1 31 1 38 1 196 1 32 1 218 1 345 1 225 1 
119 1 121 1 
1 1 208 1 31 1 38 1 330 1 32 1 333 1 345 1 225 1 
1 1 360 1 264 1 3 1 29 1 239 1 213 1 97 1 31 1 296 1 32 1 345 1 100 1 300 1 37 1 38 1 225 1 108 1 144 1 130 1 207 1 68 1 253 1 334 1 355 1 89 1 259 2 374 1 235 1 
1 1 360 1 264 1 3 1 29 1 239 1 213 1 97 1 31 1 296 1 32 1 345 1 100 1 300 1 37 1 38 1 225 1 108 1 144 1 130 1 207 1 68 1 253 1 334 1 355 1 89 1 259 2 374 1 235 1 
1 1 360 1 264 1 3 1 29 1 239 1 213 1 97 1 31 1 296 1 32 1 345 1 100 1 300 1 37 1 38 1 225 1 108 1 144 1 130 1 207 1 68 1 253 1 334 1 355 1 89 1 259 2 374 1 235 1 
257 1 315 1 375 1 
257 1 315 1 375 1 
321 1 124 1 
321 1 375 1 124 1 
356 1 241 1 
1 1 156 1 119 1 29 2 121 1 239 1 31 1 97 2 32 1 345 1 221 1 266 1 241 1 38 1 202 1 304 1 225 1 326 1 144 1 68 1 179 1 334 2 356 1 89 2 259 1 374 2 235 1 
257 1 315 1 
321 1 375 1 124 1 
341 1 118 1 193 1 29 2 122 1 138 1 5 1 97 2 54 1 347 2 166 2 102 2 82 1 224 1 40 1 129 1 63 1 147 1 205 1 206 2 351 1 279 1 18 2 44 2 182 1 137 1 116 1 260 1 374 2 290 1 117 1 
192 1 146 1 206 2 28 1 251 1 122 1 86 1 280 1 214 1 161 1 365 2 9 1 133 1 166 2 44 2 35 1 260 1 261 1 141 1 
192 1 206 1 28 1 251 1 122 1 86 1 214 1 363 1 365 2 9 1 133 1 166 1 44 1 35 1 260 1 261 1 141 1 
129 1 206 1 122 1 369 1 86 1 177 1 161 1 54 1 181 1 166 1 44 1 255 1 285 1 260 1 
192 1 206 1 28 1 251 1 122 1 86 1 280 1 214 1 161 1 365 2 9 1 133 1 166 1 44 1 35 1 260 1 261 1 141 1 
70 1 
346 1 
120 1 294 1 159 1 98 1 10 1 245 1 106 1 109 1 144 1 41 1 309 1 283 1 113 1 154 1 317 2 235 1 339 1 
238 1 94 1 96 1 54 4 59 1 104 1 106 2 305 1 109 3 144 2 206 1 65 1 309 3 112 1 19 1 113 6 154 4 260 1 318 1 317 3 120 1 122 2 159 2 30 3 165 1 166 1 169 1 127 3 129 1 275 1 41 2 277 1 177 1 283 2 44 1 231 1 135 1 287 1 288 2 235 2 339 2 50 1 
51 1 120 1 294 2 30 5 159 2 96 2 220 1 222 1 165 1 79 2 12 1 126 1 104 2 106 2 127 5 128 1 109 5 64 1 144 1 41 2 67 1 309 3 112 2 283 1 69 1 19 2 113 6 287 2 373 1 154 8 317 5 336 1 235 1 46 1 339 2 
3 1 29 1 159 1 96 1 213 1 97 1 79 2 322 1 300 1 126 1 106 1 108 1 109 2 144 1 130 1 41 1 175 1 209 1 331 1 253 1 334 1 89 1 287 2 154 2 374 1 235 1 91 1 339 1 
109 1 294 1 41 1 159 1 154 1 317 1 106 1 297 1 339 1 198 1 
109 5 238 1 30 5 96 2 309 5 112 2 19 2 113 10 287 2 104 2 154 5 317 5 127 5 
144 1 120 1 294 1 317 1 235 1 283 1 
51 2 120 2 122 1 159 1 7 1 162 1 54 1 56 1 165 2 166 4 106 2 204 1 129 1 109 2 144 3 206 4 41 2 177 2 283 4 230 1 44 4 255 1 71 1 285 1 154 2 234 2 260 1 235 3 339 2 
118 1 29 3 122 1 5 1 213 1 97 2 54 1 221 1 140 1 166 1 102 1 125 1 224 1 129 1 130 2 147 1 206 1 205 1 351 1 279 1 18 2 177 1 132 1 180 1 334 2 44 1 89 2 135 1 24 1 137 1 260 1 374 3 
109 1 51 1 294 1 41 1 30 1 159 1 309 1 113 2 165 1 154 1 106 1 317 2 339 1 
23 1 31 1 32 1 
173 1 356 1 31 1 196 1 32 1 
23 1 31 1 32 1 
23 1 31 1 32 1 
31 1 32 1 293 1 
31 1 32 1 293 1 
31 1 32 1 293 1 
31 1 32 1 
1 1 38 1 
118 5 147 2 175 1 351 2 5 2 96 1 265 1 77 2 18 4 331 2 295 1 357 2 102 9 287 1 183 1 290 4 224 2 91 2 49 4 
346 1 
118 2 147 1 351 1 5 1 96 1 77 1 18 2 112 1 19 1 357 1 200 1 102 4 287 1 104 1 224 1 290 2 49 2 
118 1 102 2 12 1 67 1 290 1 220 1 
118 12 5 2 96 3 265 2 77 4 295 1 220 2 240 1 102 22 104 2 224 2 147 2 175 1 351 2 67 2 331 3 131 1 18 4 112 2 19 2 229 1 357 5 287 3 183 1 290 10 91 3 49 9 73 1 
118 1 102 1 67 1 
102 1 290 1 220 1 
118 3 147 1 238 1 5 1 351 1 96 1 77 1 18 2 112 1 19 1 200 1 357 2 102 6 287 1 104 1 224 1 290 3 49 3 
118 6 5 1 96 2 77 1 220 1 222 1 102 12 12 1 104 2 224 1 64 1 147 1 351 1 67 1 18 2 112 2 332 1 19 2 357 1 287 2 373 1 336 1 290 6 46 1 49 2 
118 2 175 1 96 1 331 1 357 1 102 4 287 1 290 2 91 1 49 1 
118 2 147 1 351 1 5 1 265 1 77 1 331 1 18 2 295 1 229 1 357 1 102 3 183 1 290 1 224 1 91 1 49 2 
118 3 357 2 102 5 322 1 175 1 96 1 287 1 331 2 290 2 91 2 49 2 
147 1 351 1 5 1 77 1 18 2 332 1 19 1 102 2 287 1 224 1 290 2 49 1 
118 2 147 1 351 1 5 1 96 1 77 1 18 2 112 1 332 1 19 1 357 1 102 4 287 1 104 1 224 1 290 2 49 2 
118 2 147 3 351 3 5 3 265 1 77 1 18 6 331 1 332 1 229 1 357 1 102 3 58 1 224 3 290 1 91 1 49 2 
118 16 5 5 96 4 265 2 77 4 295 1 220 3 200 1 102 30 12 1 58 1 104 2 272 1 224 5 145 1 147 5 175 2 351 5 67 3 331 3 18 10 112 2 332 1 19 2 229 1 357 4 287 4 183 1 290 14 184 1 91 3 49 8 
118 4 147 1 175 1 351 1 5 1 96 1 67 1 331 2 18 2 295 1 332 1 220 1 357 2 102 7 12 1 287 1 183 1 290 3 224 1 46 1 91 2 49 2 
118 4 5 2 96 1 220 1 222 1 200 1 102 11 12 1 104 2 224 2 64 1 147 2 351 2 67 1 18 4 112 1 332 1 19 2 357 1 287 2 373 1 336 1 290 7 46 1 49 1 
118 10 5 3 96 3 265 1 77 1 295 1 220 1 222 1 200 1 102 18 12 1 104 2 224 3 64 1 147 3 175 1 351 3 67 1 331 2 18 6 112 2 332 1 19 2 357 3 287 3 183 1 373 1 336 1 290 8 46 1 91 2 49 4 
118 4 5 2 96 1 220 1 222 1 200 1 102 11 12 1 104 2 224 2 64 1 147 2 351 2 67 1 18 4 112 1 332 1 19 2 357 1 287 2 373 1 336 1 290 7 46 1 49 1 
118 4 147 1 175 1 351 1 5 1 96 1 67 1 331 2 18 2 295 1 332 1 220 1 357 2 102 7 12 1 287 1 183 1 290 3 224 1 46 1 91 2 49 2 
118 6 5 1 96 2 77 1 220 1 222 1 102 12 12 1 104 2 224 1 64 1 147 1 351 1 67 1 18 2 112 2 332 1 19 2 357 1 287 2 373 1 336 1 290 6 46 1 49 2 
118 5 5 3 96 1 265 1 220 1 222 1 200 1 102 12 12 1 104 2 224 3 64 1 147 3 351 3 67 1 18 6 112 1 332 1 19 2 357 1 287 2 373 1 336 1 290 7 46 1 49 1 
118 5 5 3 96 1 265 1 77 2 220 1 222 1 102 12 12 1 58 1 104 2 224 3 64 1 147 3 351 3 67 1 18 6 112 1 332 1 19 2 357 2 287 2 373 1 336 1 290 7 46 1 49 4 
118 4 175 1 96 1 77 2 331 2 295 2 357 2 102 7 287 1 183 1 290 3 91 2 49 4 
118 5 5 3 96 1 265 1 220 1 222 1 102 12 12 1 58 1 104 2 224 3 64 1 147 3 351 3 67 1 18 6 112 1 332 1 19 2 357 1 287 2 373 1 336 1 290 7 46 1 49 1 
263 1 29 1 97 1 374 1 221 1 249 1 142 1 
263 1 29 1 97 1 221 1 33 1 232 1 313 1 303 1 374 1 185 1 249 1 142 1 
166 1 44 1 206 1 177 1 346 1 
129 1 29 2 206 1 122 1 97 1 177 1 54 1 180 1 221 1 334 1 140 1 166 1 89 1 44 1 135 1 260 1 374 2 262 1 
15 1 129 2 3 1 29 2 206 1 122 1 328 1 97 2 54 3 180 1 221 1 334 2 140 1 166 1 89 1 44 1 135 2 103 1 234 1 260 1 374 2 188 1 262 1 
3 1 29 2 122 1 97 2 54 3 197 1 221 1 140 1 166 2 103 1 324 1 15 1 129 2 206 2 328 1 334 2 44 2 89 1 135 2 260 1 234 1 374 2 262 1 188 1 
3 1 29 1 122 1 294 1 213 1 97 1 54 4 166 1 300 1 108 1 15 1 129 1 144 2 275 1 130 1 206 1 16 1 65 1 253 1 283 1 334 1 89 1 44 1 135 1 153 1 260 1 288 1 234 1 317 1 374 1 235 2 188 1 
3 1 29 1 122 1 294 1 213 1 97 1 54 4 166 1 300 1 305 1 108 1 15 1 129 1 144 2 275 1 130 1 206 1 65 1 253 1 283 1 334 1 89 1 44 1 135 1 260 1 288 1 234 1 317 1 374 1 235 2 188 1 
166 1 44 1 206 1 122 1 260 1 171 1 
129 2 192 1 193 1 146 1 206 6 308 1 122 3 278 1 177 2 228 1 54 3 347 1 21 1 166 7 44 7 231 1 135 1 286 1 260 2 171 1 62 1 
118 3 29 2 122 1 5 2 96 1 97 1 295 1 54 1 221 2 140 1 166 1 102 5 224 2 39 1 40 1 129 1 147 2 146 1 205 2 206 1 175 1 351 2 42 1 331 1 18 4 132 1 180 1 334 1 357 1 89 1 44 1 135 1 287 1 24 1 183 1 137 2 260 1 290 2 374 2 91 1 49 1 117 1 262 1 
3 1 294 2 94 1 96 1 97 1 297 1 54 2 198 1 300 1 106 2 305 1 108 1 109 3 144 3 206 1 65 1 253 1 71 1 154 3 317 2 29 1 120 1 159 2 213 1 166 1 79 2 322 1 326 1 275 1 130 1 277 1 41 2 175 1 177 1 331 2 283 2 334 1 44 1 89 1 287 1 288 1 235 3 374 1 91 2 339 2 50 1 
129 1 146 1 206 2 122 2 65 1 54 2 166 2 44 2 231 1 135 1 59 1 260 1 171 1 
129 1 146 1 206 4 122 1 177 1 54 1 197 1 166 4 44 4 255 1 285 1 260 1 223 1 
129 1 206 2 148 1 122 2 278 1 54 1 166 2 44 2 167 1 135 1 152 1 234 1 260 1 62 1 
133 1 166 1 44 1 206 1 122 1 214 1 260 1 177 1 261 1 365 1 
129 1 166 2 193 1 192 1 146 1 44 2 206 2 122 1 116 1 260 1 54 1 
129 2 146 1 193 1 206 4 122 2 177 1 54 3 166 5 21 1 255 1 44 5 285 1 286 1 234 1 260 2 223 1 
129 2 146 1 193 1 206 4 122 2 177 1 54 3 166 5 255 1 44 5 285 1 286 1 36 1 234 1 260 2 223 1 
129 1 29 2 206 1 122 1 97 1 177 1 54 1 221 1 334 1 140 1 166 1 89 1 44 1 135 1 324 1 260 1 374 2 262 1 
129 1 206 1 122 2 278 1 228 1 54 1 166 1 44 1 231 1 135 1 234 1 260 1 62 1 
63 1 343 1 29 1 81 1 138 1 82 1 97 1 216 2 374 1 221 1 
343 1 191 1 190 1 3 2 29 2 294 1 138 1 213 1 97 2 216 2 81 1 168 1 82 1 103 1 300 1 84 1 108 1 326 1 63 1 144 2 275 1 130 1 328 1 253 1 334 1 89 1 317 1 289 1 235 2 374 2 
343 1 81 1 
191 1 168 1 216 1 
346 1 
199 1 43 1 227 1 271 1 364 1 6 1 178 1 
361 1 323 1 271 1 
227 1 194 1 6 1 364 1 178 1 199 3 22 1 43 1 212 1 26 1 271 3 92 2 
199 2 43 1 227 1 271 2 364 1 45 1 6 1 178 1 298 1 
133 1 157 1 199 1 43 1 22 1 252 1 271 1 6 1 365 1 178 1 9 1 
199 1 43 1 22 1 227 1 271 1 6 1 178 1 
199 1 43 1 22 1 227 2 271 1 364 1 6 1 
227 1 6 2 178 1 284 1 199 2 335 1 22 1 43 2 271 2 302 1 
157 1 2 1 227 1 76 1 364 1 6 1 178 2 11 1 199 3 22 1 43 1 271 3 45 2 
227 1 364 1 6 1 178 1 365 2 9 1 133 1 199 2 22 1 43 1 35 1 271 2 261 1 45 1 107 1 
157 1 227 1 364 1 6 2 178 2 298 1 11 1 199 4 22 1 43 2 271 4 45 2 48 1 
199 1 43 1 22 1 227 1 271 1 364 1 6 1 178 1 
157 1 227 2 194 1 364 2 6 1 178 3 11 1 199 4 43 1 114 1 26 1 271 4 45 2 92 1 
199 2 43 1 22 1 227 1 13 1 111 1 203 1 271 2 364 1 45 1 6 1 178 1 
199 3 43 1 22 1 227 1 194 2 26 1 271 3 364 1 6 1 178 1 319 1 92 2 
311 1 371 1 178 2 87 2 
0 1 199 1 43 1 22 1 271 1 6 1 
199 2 2 1 43 1 22 1 227 1 271 2 364 1 45 1 6 1 178 1 
189 1 
199 1 43 1 22 1 227 1 271 1 364 1 6 1 178 1 
2 1 227 1 6 1 364 1 178 1 199 3 22 1 43 1 271 3 45 1 92 1 
11 1 157 1 114 1 178 1 
227 1 178 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (218,258) (69,284) (69,284) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 328 234 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (218,258) (218,258) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 328 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 354 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (218,258) (69,284) (69,284) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (218,258) (69,284) (69,284) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (218,258) (69,284) (69,284) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 368 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 368 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 328 234 235 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 368 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 274 (208,358) (208,358) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2585 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
142 1 358 1 91 1 185 1 359 3 208 1 190 1 238 9 193 1 152 2 32 1 95 1 96 1 369 1 155 1 195 1 263 6 301 2 39 1 323 2 274 4 329 4 277 2 62 2 230 2 373 9 280 2 254 1 
142 1 358 1 91 1 185 1 359 3 208 1 190 1 238 9 193 1 152 2 32 1 95 1 96 1 369 1 155 1 195 1 263 6 301 2 39 1 323 2 274 4 329 4 277 2 62 2 230 2 373 9 280 2 254 1 
142 1 358 1 91 1 185 1 359 4 208 1 190 1 238 10 193 1 152 2 32 1 95 1 96 1 369 1 155 1 195 1 263 7 301 2 39 1 323 2 274 5 329 5 277 2 62 2 230 2 373 10 280 2 254 1 
142 1 358 1 91 1 359 2 208 1 190 1 238 7 193 1 152 2 32 1 95 1 96 1 369 1 155 1 195 1 263 4 301 2 39 1 323 2 274 3 329 3 277 2 62 2 230 2 373 7 280 1 254 1 
263 3 301 1 358 1 91 1 185 1 323 1 359 1 274 2 208 1 190 1 329 2 62 1 230 1 238 4 373 4 280 2 152 1 254 1 
369 1 195 1 301 1 358 1 323 1 187 1 208 1 327 1 190 1 62 1 277 1 230 1 238 2 373 2 259 1 
274 1 359 1 208 1 190 1 263 1 329 1 142 1 277 1 301 2 238 3 230 2 373 3 358 1 
142 1 336 1 358 1 91 1 185 1 359 3 208 1 190 1 238 9 193 1 152 1 366 1 263 7 301 2 39 1 323 1 274 4 329 4 277 1 62 1 230 2 373 9 280 2 254 1 
142 1 336 1 358 1 91 1 185 1 359 3 208 1 190 1 238 9 193 1 152 1 366 1 263 7 301 2 39 1 323 1 274 4 329 4 277 1 62 1 230 2 373 9 280 2 254 1 
129 1 
17 1 21 1 102 2 
355 1 60 2 35 2 370 2 307 1 68 2 101 2 162 2 
355 1 0 1 1 2 337 2 68 2 50 1 339 1 256 1 70 1 169 1 111 2 188 1 93 1 29 1 94 1 115 1 361 1 192 1 170 1 77 2 347 1 194 1 35 2 350 1 370 2 80 1 265 1 127 1 224 1 197 1 101 3 245 2 60 3 307 1 331 1 162 2 378 1 
60 1 35 1 370 1 307 1 68 1 225 1 101 1 162 1 174 1 132 1 
60 1 113 1 17 1 67 1 141 1 75 1 320 1 40 1 150 1 271 1 225 1 101 1 162 1 83 1 
35 1 67 1 370 1 68 1 320 1 40 2 271 1 101 1 225 1 83 1 60 1 17 1 75 1 150 2 162 1 
124 1 166 1 40 1 150 1 84 1 
17 1 75 1 166 1 14 1 40 2 150 2 206 1 84 1 
40 1 150 1 84 1 
35 1 370 1 68 1 166 1 255 1 40 1 225 1 101 1 132 1 60 1 307 1 150 1 162 1 174 1 
17 1 
17 1 345 1 75 1 166 1 14 1 40 2 150 2 84 1 
140 1 108 5 47 1 68 1 255 1 166 2 143 4 28 2 146 1 74 2 75 2 150 5 78 2 174 1 35 1 121 1 316 2 370 1 221 1 156 2 37 1 14 1 40 5 225 1 101 1 84 2 325 1 132 1 60 1 304 2 17 2 307 1 104 1 63 1 374 1 283 1 162 1 161 1 
129 1 
35 1 355 2 48 1 370 1 68 1 101 2 82 1 60 2 162 2 
122 1 116 1 158 1 
355 1 350 1 50 1 339 1 101 1 245 1 111 1 343 1 188 1 93 1 60 1 331 1 192 1 170 1 77 1 347 1 
35 1 355 1 60 3 370 3 68 3 101 3 162 3 377 1 
60 1 370 1 68 1 225 1 101 1 162 1 174 1 
60 1 35 1 48 1 370 1 68 1 225 1 101 1 162 1 82 1 
355 1 67 1 1 1 337 2 68 3 50 1 339 1 256 1 70 1 111 1 112 1 188 1 93 1 29 1 94 1 361 1 192 1 170 1 77 1 347 1 150 1 194 1 217 1 35 2 350 1 370 3 265 1 320 1 271 1 40 1 224 1 197 1 101 4 225 1 245 1 82 1 83 1 305 1 60 4 307 1 331 1 162 3 378 1 377 1 
355 1 24 1 60 2 141 1 370 1 68 1 101 2 162 2 377 1 
35 1 67 1 370 3 68 3 320 1 40 1 271 1 225 1 101 3 82 1 83 1 112 1 60 3 305 1 17 1 19 1 150 1 162 3 377 2 
35 1 370 2 68 2 158 1 101 2 82 1 60 2 116 1 162 2 377 1 
355 1 350 1 50 1 339 1 101 1 245 1 111 1 188 1 93 1 60 1 192 1 331 1 170 1 77 1 347 1 
355 1 350 1 26 1 50 1 339 1 101 1 245 1 111 1 188 1 93 1 60 1 229 1 331 1 170 1 77 1 
0 2 1 4 337 2 256 1 28 1 94 1 31 1 116 2 191 1 361 1 194 2 118 1 13 1 349 1 316 1 262 1 122 2 243 1 158 2 224 1 197 1 133 1 285 1 378 1 
60 1 67 1 370 1 68 1 225 1 101 1 162 1 246 1 
350 1 370 1 68 1 50 1 339 1 158 1 101 2 245 1 111 1 112 1 188 1 93 1 60 2 331 1 192 1 170 1 77 1 347 1 162 1 377 1 
35 1 355 1 370 4 68 4 183 1 225 1 101 4 82 1 112 1 60 4 8 1 162 4 365 1 377 2 
60 2 370 2 68 2 225 1 101 2 162 2 246 1 174 1 
257 1 272 1 
257 1 272 1 
209 1 64 1 
209 1 64 1 
209 1 257 1 272 1 64 1 
257 1 272 1 5 1 
257 1 272 1 5 1 
257 1 272 1 5 1 
232 1 257 1 272 1 
209 1 257 2 272 2 144 1 64 1 311 1 
44 1 257 1 272 1 
44 1 257 1 272 1 
44 1 257 1 272 1 
120 1 164 1 300 2 123 2 126 1 69 1 270 2 40 2 145 2 17 1 258 1 149 2 150 2 284 1 
120 1 300 1 123 1 370 1 68 1 38 1 40 1 270 1 101 1 247 1 234 1 145 1 189 1 60 1 328 1 149 1 150 1 162 1 
62 1 323 1 152 1 
62 1 323 1 259 1 
62 3 184 1 55 1 340 1 152 2 259 1 
62 2 184 1 340 1 152 1 259 1 344 1 
62 2 184 2 340 1 152 1 259 1 
108 2 166 4 143 3 2 1 72 1 28 1 207 1 74 1 189 1 75 1 150 5 213 2 117 1 78 1 13 1 349 1 97 1 316 1 156 1 38 1 14 1 40 5 198 2 102 3 247 1 84 1 17 2 227 1 228 2 21 1 283 1 376 1 
106 1 108 6 166 7 356 1 143 8 109 1 28 3 207 2 189 4 74 2 292 1 75 1 212 5 150 9 213 6 78 2 56 1 13 3 349 3 97 2 316 3 124 5 156 2 14 1 40 9 302 1 102 9 325 1 84 6 17 5 227 1 228 6 21 3 283 1 376 3 
108 2 166 2 143 3 2 1 28 1 207 1 74 1 189 1 75 1 150 3 213 2 117 1 78 1 13 1 97 1 349 1 316 1 156 1 40 3 198 1 102 4 325 1 17 3 228 2 21 2 376 1 
106 1 108 4 166 3 143 5 109 1 2 1 28 2 207 1 74 1 189 2 292 1 75 1 150 4 213 4 117 1 78 1 13 2 97 1 349 2 316 2 156 1 40 4 198 2 102 7 325 1 17 4 228 4 21 3 376 2 
129 1 
250 1 331 1 
33 1 
350 1 331 1 
350 1 331 3 202 1 100 2 93 1 261 1 
350 1 331 1 93 1 
275 1 331 1 
121 1 316 1 317 2 0 4 47 1 1 7 309 1 221 1 90 1 28 1 130 1 273 1 306 1 31 3 191 2 194 3 66 1 
121 1 316 1 317 2 0 4 47 1 1 7 309 1 221 1 90 1 28 1 130 1 273 1 306 1 31 3 191 2 194 3 66 1 
121 1 316 1 317 2 0 4 47 1 1 7 309 1 221 1 90 1 28 1 273 1 130 1 306 1 31 3 191 2 136 1 194 3 66 1 
0 16 47 2 309 1 1 31 337 2 233 1 90 5 92 1 28 4 94 1 31 10 360 4 191 5 361 1 194 15 364 1 349 3 13 3 219 1 121 2 317 3 316 4 221 1 224 1 197 1 273 1 130 1 251 1 306 2 330 3 135 1 281 1 376 3 66 2 
0 5 47 1 1 9 309 1 337 4 233 1 90 1 51 1 28 1 94 2 31 4 191 3 361 2 12 1 194 4 121 1 316 1 317 2 221 1 224 2 197 2 273 1 306 1 66 1 
25 1 88 1 50 1 339 1 110 1 168 1 358 1 111 1 208 1 190 1 53 1 238 2 77 1 55 1 152 1 259 1 79 1 263 1 301 1 323 1 245 1 131 1 18 1 277 1 62 2 230 1 373 2 105 1 182 1 
335 1 25 1 88 1 50 1 339 1 110 1 168 1 358 1 111 1 208 1 312 1 53 1 238 3 77 1 55 1 152 1 259 1 125 1 263 2 301 1 323 1 245 1 18 1 277 1 62 2 230 1 373 3 105 1 182 1 
335 1 25 1 263 2 125 1 50 1 339 1 168 1 110 1 358 1 323 1 245 1 111 1 208 1 18 1 62 2 53 1 277 1 238 2 373 2 77 1 55 1 152 1 259 1 182 1 
25 2 301 1 81 1 110 2 196 1 245 1 111 1 188 1 312 1 18 2 277 2 353 1 230 1 238 1 373 1 77 1 139 1 
25 1 88 1 50 1 339 1 110 1 168 1 111 1 190 1 53 1 238 1 77 1 55 1 152 1 259 1 125 1 301 1 323 1 245 1 131 1 18 1 277 1 62 2 230 1 373 1 105 1 182 1 
286 1 
141 1 50 1 143 2 339 1 3 2 188 2 6 2 7 1 293 1 150 5 151 2 241 2 97 1 350 1 242 1 156 1 14 3 245 2 101 1 102 2 59 2 60 1 17 2 160 1 21 2 162 1 163 1 108 2 67 1 111 2 74 1 113 1 30 1 75 1 362 1 77 2 363 1 78 1 215 1 315 4 264 1 267 2 268 1 320 1 40 5 271 1 225 1 83 1 84 6 177 1 134 1 331 1 283 1 46 2 87 1 
67 1 141 1 113 1 345 1 362 1 150 3 215 1 315 2 320 1 14 1 271 1 40 3 101 1 225 1 83 1 59 1 84 2 60 1 177 1 134 1 162 1 163 1 
67 1 141 1 113 1 345 1 75 1 362 1 150 3 215 1 315 3 241 1 320 1 14 1 271 1 40 3 101 1 225 1 83 1 84 1 60 1 177 1 17 1 134 1 162 1 163 1 
67 1 141 1 113 1 345 1 75 1 362 1 150 3 215 1 315 3 241 1 267 1 14 1 320 1 271 1 40 3 101 1 225 1 83 1 59 1 84 2 60 1 177 1 17 1 134 1 162 1 163 1 
141 1 143 1 345 1 150 3 156 1 14 1 101 2 59 2 60 2 17 1 307 1 162 2 163 1 67 1 108 1 68 1 165 1 255 1 113 1 74 1 210 1 75 1 362 1 215 1 78 1 174 1 315 2 35 1 370 1 267 2 320 1 271 1 40 3 225 2 83 1 84 3 43 1 132 1 177 1 178 1 134 1 283 1 87 1 
141 1 143 1 3 2 6 2 7 1 150 4 151 2 241 2 156 1 14 2 101 1 102 2 59 2 60 1 17 2 21 2 162 1 163 1 67 1 108 1 74 1 113 1 75 1 362 1 215 1 78 1 315 4 267 2 320 1 268 1 271 1 40 4 225 1 83 1 84 4 177 1 134 1 283 1 87 1 46 2 
108 1 67 1 141 1 68 1 165 1 255 1 143 1 74 1 113 1 75 1 210 1 362 1 150 2 215 1 78 1 174 1 315 2 35 1 370 1 156 1 320 1 271 1 40 2 101 2 225 2 83 1 132 1 60 2 17 1 177 1 134 1 307 1 283 1 87 1 162 2 163 1 
108 1 67 1 141 1 68 1 165 1 255 1 143 1 74 1 113 1 75 1 210 1 362 1 150 2 215 1 78 1 174 1 315 2 35 1 370 1 156 1 320 1 271 1 40 2 101 2 225 2 83 1 132 1 60 2 17 1 177 1 134 1 307 1 283 1 87 1 162 2 163 1 
108 1 67 1 141 1 143 1 3 2 291 1 236 1 74 1 113 1 75 1 294 2 362 1 150 4 151 2 216 1 215 1 78 1 241 2 315 4 267 2 156 1 14 2 268 1 320 1 271 1 40 4 128 1 101 1 225 1 102 2 83 1 59 2 84 4 60 1 17 1 177 1 134 1 276 2 283 1 162 1 163 1 
108 1 67 1 141 1 68 1 165 1 255 1 143 1 74 1 113 1 75 1 210 1 362 1 150 2 78 1 215 1 174 1 315 3 241 1 35 1 370 1 156 1 267 1 320 1 271 1 40 2 101 2 225 2 83 1 59 1 84 1 132 1 60 2 17 1 177 1 178 1 134 1 307 1 283 1 87 1 162 2 163 1 
108 1 67 1 141 1 68 1 165 1 255 1 143 1 74 1 113 1 75 1 210 1 362 1 150 2 78 1 215 1 174 1 315 3 241 1 35 1 370 1 156 1 267 1 320 1 271 1 40 2 101 2 225 2 83 1 59 1 84 1 132 1 60 2 17 1 177 1 178 1 134 1 307 1 283 1 87 1 162 2 163 1 
141 1 143 1 3 2 236 1 7 1 294 2 150 4 151 2 241 2 156 1 14 2 101 1 102 2 59 2 60 1 17 1 162 1 163 1 67 1 108 1 74 1 113 1 75 1 362 1 215 1 78 1 315 4 267 2 320 1 268 1 271 1 40 4 225 1 83 1 84 4 177 1 134 1 276 2 283 1 
94 1 262 1 337 2 361 1 256 1 129 1 224 1 197 1 378 1 
0 6 1 10 337 2 338 1 256 1 90 1 28 1 4 1 31 2 94 1 360 2 116 3 191 1 361 1 194 4 295 1 349 2 13 1 316 2 122 8 158 8 224 1 197 1 248 1 251 1 330 2 378 1 376 2 308 1 
355 1 0 1 1 2 68 1 337 2 50 1 339 1 256 1 342 1 111 1 343 1 188 1 4 1 112 1 93 1 94 1 116 1 192 1 361 1 170 1 77 1 347 1 194 1 350 1 370 1 265 1 80 1 224 1 197 1 245 1 101 2 159 1 85 1 60 2 331 1 162 1 378 1 377 1 
140 1 0 10 47 1 1 21 337 4 50 1 339 1 90 1 188 1 4 1 93 1 94 2 191 4 192 1 347 1 194 11 349 2 13 2 350 1 297 2 157 2 158 6 197 2 245 1 101 2 60 2 162 1 355 1 309 1 68 1 256 2 27 1 111 1 28 4 112 1 29 1 31 5 116 6 361 2 170 1 77 1 365 1 121 1 316 4 122 6 370 1 221 1 265 1 176 1 224 2 225 1 371 1 273 1 331 1 377 1 378 2 333 1 376 2 
0 1 1 2 337 4 50 4 339 3 288 1 188 2 93 1 94 2 293 1 9 1 11 1 194 1 350 3 197 2 58 1 245 6 244 1 101 1 60 1 61 1 162 1 205 1 68 1 256 2 111 7 30 1 313 1 115 1 361 2 77 7 79 1 262 1 125 1 370 1 265 1 80 1 266 1 223 1 224 2 331 4 378 2 377 1 379 1 
0 1 1 3 337 2 68 1 256 1 28 1 4 1 31 1 94 1 116 1 191 1 361 1 194 2 35 1 349 1 13 1 316 1 122 1 370 1 158 1 224 1 197 1 101 1 82 1 352 1 60 1 162 1 378 1 376 1 
349 1 316 1 0 2 122 1 262 1 1 2 337 2 158 1 256 1 90 1 197 1 224 1 31 1 94 1 116 1 361 1 285 1 378 1 
13 1 122 1 262 1 1 2 337 2 158 1 256 1 197 1 224 1 28 1 133 1 31 1 94 1 116 1 191 1 361 1 194 2 378 1 
0 2 1 4 337 2 256 1 90 1 28 1 94 1 31 2 116 2 191 1 361 1 194 2 349 1 13 1 316 1 262 1 122 2 158 2 224 1 197 1 376 1 378 1 
349 1 316 1 0 2 122 1 1 2 337 2 158 1 256 1 90 1 197 1 224 1 31 1 94 1 116 1 361 1 11 1 285 1 378 1 
13 1 122 1 1 2 337 2 158 1 256 1 197 1 224 1 28 1 133 1 31 1 94 1 116 1 191 1 361 1 11 1 194 2 378 1 
0 2 1 4 337 2 256 1 90 1 28 1 94 1 31 2 116 2 191 1 361 1 11 1 194 2 349 1 13 1 316 1 122 2 158 2 224 1 197 1 376 1 378 1 
13 1 349 1 316 1 0 2 122 2 1 4 337 2 158 2 256 1 90 1 197 1 224 1 28 1 31 2 94 1 116 2 191 1 361 1 194 2 378 1 376 1 
355 1 0 1 1 2 337 2 50 1 339 1 256 1 111 1 188 1 93 1 29 1 94 1 192 1 361 1 170 1 77 1 347 1 194 1 350 1 80 1 265 1 197 1 224 1 245 1 101 1 60 1 331 1 378 1 
355 1 0 1 1 2 26 1 337 2 50 1 339 1 256 1 111 1 188 1 93 1 94 1 361 1 170 1 77 1 194 1 350 1 80 1 265 1 197 1 224 1 245 1 101 1 60 1 229 1 331 1 204 1 378 1 
0 2 1 4 337 2 256 1 90 1 28 1 4 1 94 1 31 2 116 2 191 1 361 1 194 2 349 1 13 1 316 1 122 2 158 2 224 1 197 1 376 1 378 1 
0 2 1 4 337 2 50 1 339 1 256 1 90 1 28 1 111 1 93 1 29 1 31 2 94 1 116 2 191 1 192 1 361 1 170 1 77 1 347 1 194 2 79 1 13 1 349 1 350 1 316 1 122 2 158 2 197 1 224 1 245 1 101 1 60 1 331 1 333 1 378 1 376 1 
334 1 0 2 1 3 337 2 68 1 256 1 90 1 28 1 4 1 31 1 94 1 116 1 361 1 194 1 13 1 35 1 349 1 316 1 122 1 370 1 158 1 224 1 197 1 101 1 82 1 60 1 162 1 378 1 376 1 
0 20 47 1 1 41 337 6 231 1 233 1 90 4 51 1 290 1 94 3 237 1 191 4 194 21 153 1 13 4 349 4 298 1 197 3 199 1 249 4 16 1 251 1 309 1 357 1 310 1 28 5 114 1 31 8 360 4 361 3 211 2 364 3 121 1 316 5 220 1 317 1 221 1 321 1 224 3 41 1 273 1 330 3 376 4 
0 20 47 1 309 1 1 38 233 2 231 1 337 8 357 1 90 3 51 1 310 1 28 4 290 1 114 1 94 4 31 7 237 1 360 4 191 4 211 2 361 4 364 3 194 18 153 1 349 4 13 3 121 1 298 1 317 1 220 1 316 5 221 1 321 1 41 1 224 4 197 4 199 1 273 1 16 1 249 4 251 1 330 3 376 4 
0 27 47 1 309 1 1 52 233 1 231 1 337 4 357 1 90 7 51 1 310 1 28 8 290 1 114 1 94 2 31 14 237 1 360 4 191 7 211 1 361 2 364 2 194 25 349 7 13 7 121 1 298 1 317 1 220 1 316 8 221 1 41 1 224 2 197 2 199 1 273 1 16 1 249 4 251 2 330 4 376 7 308 2 
0 9 1 19 337 4 90 3 71 1 51 1 310 1 28 3 290 2 114 1 94 2 31 6 237 1 360 2 191 3 211 1 361 2 364 1 194 10 349 3 13 3 220 1 316 3 321 1 224 2 197 2 249 2 251 1 330 1 376 3 
0 14 1 26 233 2 337 6 231 1 357 1 90 2 51 1 310 1 28 2 290 1 114 2 31 4 94 3 237 1 360 2 191 2 211 2 361 3 194 12 364 2 349 3 13 2 298 1 220 1 316 3 224 3 197 3 41 1 199 1 249 4 16 1 330 2 376 3 
123 1 258 1 149 1 270 1 218 1 145 1 
328 1 
354 1 123 1 149 1 270 1 145 1 
120 1 164 1 300 2 123 1 126 1 69 1 40 1 270 1 145 1 17 1 258 1 149 1 150 1 284 1 
120 1 164 1 300 2 123 1 126 1 69 1 40 1 270 1 145 1 17 1 258 1 149 1 150 1 284 1 
120 1 164 1 300 2 123 1 126 1 69 1 40 1 270 1 145 1 17 1 258 1 149 1 150 1 284 1 
368 1 
368 1 
137 1 
137 1 
319 1 45 1 
164 1 300 1 123 1 166 1 126 1 38 1 270 1 40 1 247 1 145 1 234 1 189 1 235 1 328 1 149 1 150 1 
368 1 
137 1 
0 1 1 2 337 2 50 1 339 1 256 1 111 2 4 1 313 1 94 1 115 2 361 1 77 2 348 1 171 1 194 1 350 1 80 1 265 1 197 1 224 1 101 2 245 2 61 1 60 2 326 1 372 1 331 1 375 1 162 2 378 1 
88 1 125 1 89 1 50 1 339 1 110 1 168 1 99 1 323 1 245 2 341 1 111 2 62 2 53 1 77 2 55 1 152 1 259 1 79 1 
154 1 88 1 125 1 50 1 339 1 110 1 168 1 323 1 245 1 341 1 111 1 62 2 53 1 77 1 55 1 152 1 259 1 
89 1 81 1 110 1 77 1 23 1 245 1 111 1 188 1 
88 1 125 1 89 1 50 1 339 1 110 1 168 1 99 1 323 1 245 1 341 1 111 1 62 2 53 1 77 1 55 1 152 1 259 1 
180 1 
129 1 
108 1 143 1 74 1 6 1 75 1 150 1 78 1 156 1 14 1 40 1 102 1 84 1 17 2 21 1 283 1 87 1 46 1 
50 2 143 9 339 1 186 1 188 1 93 1 150 5 296 2 97 2 349 2 13 2 350 1 242 1 156 4 14 3 157 2 245 2 100 2 102 12 250 3 304 2 17 8 202 1 63 2 21 6 161 1 108 8 167 1 111 2 28 2 74 4 75 2 76 2 77 2 213 6 79 1 78 4 34 2 316 2 175 2 37 1 320 2 40 5 84 5 179 2 331 6 228 6 279 1 283 4 86 1 376 2 
107 1 108 5 231 1 143 8 357 1 28 2 74 2 360 1 75 2 150 1 364 1 213 5 78 2 97 1 349 2 13 2 316 2 242 1 156 2 14 1 40 1 41 1 199 1 102 6 226 1 84 1 16 1 304 2 17 5 330 1 228 5 63 1 21 3 283 2 376 2 
140 1 108 2 47 1 68 1 255 1 143 2 28 1 74 1 210 1 150 1 78 1 174 1 35 1 121 1 316 2 370 1 221 1 156 1 40 1 225 1 101 1 132 1 60 1 304 2 307 1 63 1 283 1 162 1 
108 1 37 1 156 1 143 1 74 1 17 1 75 1 283 1 161 1 78 1 
349 2 13 2 316 2 108 5 143 5 157 1 102 10 28 2 304 2 17 5 228 5 63 1 21 5 213 5 376 2 
17 1 75 1 14 1 40 1 150 1 84 1 
108 2 50 1 339 1 143 2 111 4 188 2 74 2 30 1 293 1 77 4 150 3 363 1 78 2 97 2 350 1 264 1 156 2 242 2 14 2 40 3 245 4 325 1 84 4 15 2 200 1 331 1 20 1 279 1 283 1 
355 1 1 1 337 2 68 2 50 1 339 1 256 1 70 1 111 1 188 1 93 1 29 1 94 1 361 1 192 1 170 1 77 1 347 1 194 1 35 2 350 1 370 2 265 1 224 1 197 1 245 1 101 3 60 3 307 1 331 1 162 2 378 1 
97 1 317 1 108 2 156 1 242 1 143 1 102 4 74 1 17 4 75 2 228 2 21 2 283 1 213 2 78 1 
123 1 270 1 65 1 
123 1 270 1 65 1 
123 1 270 1 65 1 
147 1 319 1 123 1 269 1 270 1 
57 1 123 1 270 1 
57 1 123 1 270 1 
57 1 123 1 270 1 
123 1 270 1 
257 1 272 1 
121 1 317 1 316 1 0 4 47 1 1 8 309 1 221 1 337 4 233 1 90 1 197 2 224 2 28 1 273 1 31 3 94 2 191 2 361 2 194 4 
129 1 
13 1 349 1 316 1 0 2 1 4 337 2 90 1 197 1 224 1 28 1 31 2 94 1 191 1 361 1 314 1 194 2 376 1 
13 1 349 1 0 3 316 1 1 7 90 1 28 1 251 1 31 2 360 2 191 1 330 1 364 1 194 4 376 1 
0 11 47 2 309 1 1 23 233 2 337 4 90 4 28 3 31 9 94 2 360 2 191 5 361 2 194 12 295 1 349 2 13 2 121 2 317 1 316 3 221 1 197 2 224 2 273 1 251 1 330 2 181 1 376 2 308 1 
1 1 360 1 194 1 
0 1 1 1 330 1 
349 1 13 1 316 1 0 3 1 6 337 2 157 1 90 1 224 1 197 1 28 1 94 1 31 3 191 2 361 1 314 1 194 3 376 1 
0 6 1 12 337 2 231 1 357 1 90 1 51 1 28 2 94 1 31 2 360 1 191 1 361 1 194 6 364 1 349 2 13 2 316 2 224 1 197 1 41 1 199 1 16 1 330 1 376 2 
121 1 316 1 0 3 47 1 1 6 221 1 90 1 28 1 31 2 191 1 194 3 
121 1 0 1 47 1 1 3 309 1 233 1 337 2 90 1 197 1 224 1 273 1 31 2 94 1 191 1 361 1 181 1 194 2 
0 4 47 1 1 8 309 1 337 2 51 1 28 1 94 1 31 2 360 1 191 2 361 1 194 4 364 1 121 1 317 1 316 1 221 1 224 1 197 1 273 1 16 1 330 1 
0 6 47 1 309 1 1 11 337 4 90 1 51 1 28 1 94 2 31 3 360 2 191 2 361 2 314 1 194 5 364 1 349 1 121 1 317 1 316 2 221 1 224 2 197 2 273 1 16 1 251 1 330 1 376 1 
0 9 47 1 309 1 1 19 337 6 231 1 233 1 357 1 90 1 51 1 28 3 94 3 31 4 360 1 191 3 361 3 314 1 194 10 364 1 349 2 13 2 121 1 317 1 316 3 221 1 224 3 197 3 41 1 199 1 273 1 16 1 330 1 376 2 
0 10 47 1 309 1 1 17 233 1 337 6 231 1 357 1 90 2 51 1 28 2 94 3 31 5 360 1 191 3 361 3 314 1 194 7 364 1 349 2 13 1 121 1 317 1 316 3 221 1 224 3 197 3 41 1 199 1 273 1 16 1 330 1 376 2 
0 4 47 1 1 8 309 1 337 2 51 1 28 1 94 1 31 2 360 1 191 2 361 1 194 4 364 1 121 1 317 1 316 1 221 1 224 1 197 1 273 1 16 1 330 1 
0 6 1 12 337 2 231 1 357 1 90 1 51 1 28 2 94 1 31 2 360 1 191 1 361 1 194 6 364 1 349 2 13 2 316 2 224 1 197 1 41 1 199 1 16 1 330 1 376 2 
0 10 47 1 309 1 1 18 337 8 231 1 233 2 357 1 90 2 51 1 28 2 94 4 31 5 360 1 191 3 361 4 314 1 194 8 364 1 349 2 13 1 121 1 317 1 316 3 221 1 224 4 197 4 41 1 199 1 273 1 16 1 330 1 376 2 
0 9 1 16 337 8 231 1 233 2 357 1 90 3 51 1 28 2 94 4 31 6 360 1 191 3 361 4 194 7 364 1 349 3 13 2 316 3 321 1 224 4 197 4 41 1 199 1 16 1 330 1 376 3 
121 3 316 1 0 3 47 3 1 7 309 1 221 1 90 3 28 1 273 2 31 6 191 3 194 4 
0 10 47 1 309 1 1 18 337 8 231 1 233 2 357 1 90 1 51 1 28 2 94 4 31 4 360 1 191 3 361 4 194 8 364 1 349 2 13 1 121 1 317 1 316 3 221 1 321 1 224 4 197 4 41 1 199 1 273 1 16 1 330 1 376 2 
140 1 121 2 0 5 316 2 47 2 1 10 337 2 221 1 90 2 224 1 197 1 51 1 28 2 94 1 31 5 191 3 361 1 194 5 
349 1 316 1 0 2 1 2 337 2 90 1 51 1 197 1 224 1 94 1 31 1 361 1 
13 1 349 1 316 1 0 2 1 4 337 2 90 1 51 1 197 1 224 1 28 1 31 2 94 1 191 1 361 1 194 2 376 1 
121 1 0 1 47 1 1 3 233 1 337 6 321 1 90 1 51 1 197 3 224 3 94 3 31 2 191 1 361 3 181 1 194 2 
0 16 47 3 309 1 1 34 233 2 337 10 90 5 51 1 92 1 28 5 94 5 31 12 360 4 191 7 361 5 314 1 194 18 364 1 219 1 349 3 13 3 121 3 317 1 316 5 221 2 321 1 224 5 197 5 273 1 251 1 135 1 330 3 181 1 376 3 
355 1 60 1 24 1 141 1 101 1 162 1 260 1 
355 1 24 1 141 1 303 1 101 1 289 1 60 1 148 1 239 1 282 1 162 1 260 1 
77 1 129 1 245 1 111 1 188 1 
355 1 350 1 370 1 68 1 50 1 339 1 101 2 245 1 111 1 188 1 93 1 60 2 331 1 192 1 170 1 77 1 162 1 377 1 
355 1 67 1 68 1 50 1 339 1 111 1 93 2 192 1 170 1 77 1 365 1 119 1 350 2 370 1 245 1 101 1 225 2 83 1 15 1 60 1 275 1 331 3 162 1 377 1 
355 1 67 1 26 1 68 1 50 1 339 1 111 1 93 2 170 1 77 1 365 1 119 1 350 2 370 1 245 1 101 1 225 2 83 1 15 1 60 1 275 1 331 3 162 1 377 1 
68 1 255 1 50 1 339 1 111 1 93 1 346 1 75 1 77 1 150 2 174 1 35 1 119 1 367 1 350 1 370 1 320 1 40 2 225 1 101 1 100 1 245 1 84 1 132 1 15 1 60 1 250 1 275 1 17 1 307 1 331 4 162 1 
68 1 255 1 50 1 339 1 111 1 93 1 76 1 75 1 77 1 150 2 174 1 35 1 119 1 350 1 370 1 320 1 40 2 225 1 101 1 100 1 245 1 84 1 132 1 15 1 60 1 250 1 275 1 17 1 307 1 331 4 162 1 
50 1 339 1 77 1 288 1 245 1 111 1 
50 3 339 2 288 1 111 6 188 2 93 1 54 1 9 1 77 6 79 1 350 2 125 1 266 1 223 1 244 1 245 5 61 1 331 3 202 1 379 1 
355 2 0 3 47 1 1 6 309 1 68 1 337 4 50 1 339 1 256 2 28 1 111 1 4 1 93 1 29 1 31 2 94 2 116 1 191 2 361 2 192 1 170 1 77 1 171 1 347 1 194 3 79 1 121 1 350 1 317 1 316 1 122 1 370 1 221 1 158 1 176 1 224 2 197 2 101 2 245 1 273 1 60 2 331 1 162 1 378 2 377 1 333 1 
108 1 166 1 143 1 111 1 188 1 74 2 75 1 76 1 77 1 150 3 78 2 296 1 34 1 37 1 156 2 320 1 14 1 40 3 245 1 100 1 84 2 250 1 17 1 179 1 331 2 279 1 283 2 161 1 
350 1 50 2 167 1 339 1 288 1 100 1 245 1 111 1 93 1 331 2 202 1 77 1 33 1 
350 1 318 1 50 1 339 1 322 1 245 4 111 4 188 1 30 1 293 1 331 1 77 4 79 1 
350 1 205 1 50 2 339 1 223 1 58 1 245 2 244 1 111 2 15 1 93 1 331 1 77 2 22 1 
62 1 50 1 339 1 168 1 77 1 323 1 245 1 259 1 111 1 188 1 
350 1 125 1 50 1 339 1 245 2 111 2 61 1 331 1 77 2 348 1 79 1 
350 2 50 2 339 2 322 1 245 4 111 5 188 1 15 1 61 1 30 1 293 1 331 3 9 1 77 5 79 1 379 1 
350 2 50 2 339 2 322 1 245 4 111 5 188 1 15 1 61 1 30 1 293 1 331 3 10 1 9 1 77 5 79 1 
355 1 350 1 370 1 26 1 68 1 50 1 339 1 101 2 245 1 111 1 188 1 93 1 60 2 331 1 170 1 77 1 162 1 377 1 
350 1 50 2 339 1 223 1 245 1 244 1 111 1 15 1 93 1 331 1 54 1 202 1 77 1 
355 1 299 1 222 1 287 1 172 1 
355 1 67 1 299 2 166 1 320 1 287 1 222 2 40 2 271 1 225 1 73 1 42 1 83 1 305 1 17 1 75 1 138 1 150 2 172 2 
222 1 287 1 101 1 60 1 372 1 326 1 375 1 172 1 162 1 
138 1 287 1 42 1 
129 1 
208 1 301 1 238 1 230 1 373 1 358 1 
25 1 277 1 238 1 
369 2 301 1 358 1 208 1 103 1 190 1 201 1 230 1 238 3 373 3 173 1 
208 1 263 1 301 1 238 2 230 1 373 2 358 1 280 1 
301 1 323 1 274 1 190 1 329 1 62 1 230 1 238 1 373 1 152 1 254 1 
190 1 301 1 238 1 230 1 373 1 358 1 
274 1 208 1 190 1 301 1 238 1 230 1 373 1 358 1 
190 1 301 2 278 1 238 2 230 2 373 2 240 1 358 1 214 1 
274 1 359 1 208 1 190 1 329 1 263 2 301 1 238 3 230 1 373 3 39 1 358 1 193 1 
263 1 301 1 358 1 323 1 208 1 52 1 190 1 62 2 230 1 238 2 373 2 55 1 259 1 152 1 
263 2 301 2 358 1 185 1 359 1 274 1 208 1 190 1 329 1 230 2 238 4 373 4 280 1 
208 1 190 1 301 1 238 1 230 1 373 1 358 1 
369 1 263 2 49 1 301 1 358 2 359 1 274 1 208 2 201 1 329 1 238 4 230 1 373 4 173 1 
336 1 263 1 301 1 358 1 208 1 190 1 230 1 238 2 373 2 203 1 332 1 
208 1 369 2 36 1 190 1 201 2 301 1 238 3 230 1 373 3 358 1 173 1 
274 2 98 1 324 2 252 1 
190 1 351 1 301 1 238 1 230 1 373 1 
208 1 190 1 263 1 301 1 238 2 230 1 373 2 39 1 358 1 
253 1 
208 1 190 1 301 1 238 1 230 1 373 1 358 1 
208 1 369 1 190 1 263 1 301 1 238 3 230 1 373 3 39 1 358 1 
274 1 359 1 329 1 49 1 
358 1 
